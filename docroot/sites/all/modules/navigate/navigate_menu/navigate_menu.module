<?php

/**
 * @file
 * Produces the Navigate Menu widget
 */

/**
 * Implements hook_init().
 */
function navigate_menu_init() {
  if (user_access('navigate_menu use')) {
    drupal_add_js(drupal_get_path('module', 'navigate_menu') . '/navigate_menu.js', array('scope' => 'footer'));
    drupal_add_js(drupal_get_path('module', 'navigate_menu') . '/jquery.treeview.js', array('scope' => 'footer'));
    drupal_add_js(drupal_get_path('module', 'navigate_menu') . '/jquery.cookie.js', array('scope' => 'footer'));
    drupal_add_css(drupal_get_path('module', 'navigate_menu') . '/navigate_menu.css');
    drupal_add_css(drupal_get_path('module', 'navigate_menu') . '/jquery.treeview.css');
  }
}


/**
 * Implements hook_navigation_widgets().
 */
function navigate_menu_navigate_widgets($op, $settings = array()) {
  switch ($op) {
    case 'output':
      switch ($settings['type']) {
        case 'menu':
          return navigate_menu_widget($settings['wid']);
        break;
      }
      break;

    case 'list':
      return array(
        array(
          'type' => 'menu',
          'module' => 'navigate_menu',
          'content' => navigate_add_widget_link('<div class="navigate-menu-icon"></div>'),
        ),
      );

    case 'delete':
      break;
  }
}


/**
 * Generates menu widget.
 */
function navigate_menu_widget($wid) {
  $settings = navigate_widget_settings_get($wid);
  if (!$settings['mid']) {
    // Generate a list of possible parents.
    $inputs['menu'] = drupal_get_form('navigate_menu_form');
    $inputs['load'] = navigate_callback_button(array(
      'class' => 'navigate-menu-load',
      'callback' => 'navigate_menu_load_menu',
      'content' => '<div class="navigate-menu-load-button navigate-submit">' . t('Load') . '</div>',
      'help' => 'Click to load this menu.',
    ));

  }
  else {
    $inputs['menu'] = navigate_menu_output($wid);
  }

  $output = theme('navigate_menu_widget', array('inputs' => $inputs, 'wid' => $wid));
  return $output;
}


/**
 * Menu Form.
 */
function navigate_menu_form($form) {
  $item = menu_link_load(1);
  $options = menu_parent_options(menu_get_menus(), $item);
  $default = 'primary-links:0';
  $form['menu'] = array(
    '#type' => 'select',
    '#title' => t('Parent item'),
    '#default_value' => $default,
    '#name' => 'menu',
    '#value' => $default,
    '#options' => $options,
    '#parents' => array(''),
  );
  return $form;
}


/**
 * Themes menu widget.
 */
function theme_navigate_menu_widget($variables) {
  $inputs = $variables['inputs'];
  $wid = $variables['wid'];
  if (empty($inputs['menu']['menu']['#type'])) {
    $menu = $inputs['menu'];
  }
  else {
    $menu = drupal_render($inputs['menu']);
  }
  $inputs['load'] = isset($inputs['load']) ? $inputs['load'] : '';
  $content['widget'] = '
   <div class="navigate-menu-output navigate-menu-output-' . $wid . '">' . $menu . $inputs['load'] . '</div>';
  $content['title'] = t('Menu');

  return $content;
}


/**
 * Implements hook_permission().
 */
function navigate_menu_permission() {
  return array(
    "navigate_menu use" => array(
      'title' => t("navigate_menu use"),
      'description' => t('Use navigate_menu'),
    ),
  );
}


/**
 * Implements hook_navigate_widget_process().
 */
function navigate_menu_navigate_widget_process($wid, $action) {
  switch ($action) {
    case 'load':
      echo navigate_menu_loaddata();
      break;
  }
}


/**
 * Output a rendered menu.
 */
function navigate_menu_loaddata() {
  $output = navigate_menu_output(check_plain($_POST['wid']));
  return $output;
}


/**
 * Output the selected menu.
 */
function navigate_menu_output($wid) {
  $settings = navigate_widget_settings_get($wid);
  if (isset($_POST['mid'])) {
    navigate_variable_set(array(
      'value' => $_POST['mid'],
      'name' => 'mid',
      'wid' => $_POST['wid'],
    ));
    $mid = check_plain($_POST['mid']);
  }
  elseif ($settings['mid']) {
    $mid = $settings['mid'];
  }
  if ($mid) {
    $output = '<div class="navigate-menu-outer"><ul class="navigate-menu-list treeview-gray navigate-menu-list-' . $wid . '">' . navigate_menu_tree($mid) . '</ul></div>';
  }
  return $output;
}

/**
 * Part of a series of functions to generate a specific menu tree.
 *
 * Please note, this is a total hack. There must be a better way. Basically,
 * this recurses through the entire menu, trying to find one that has the
 * selected mlid in it. If it does, it returns that sub-array.
 */
function navigate_menu_sub_tree($data = '', $menu_id = '') {
  static $id;
  static $return;
  if ($menu_id != '') {
    $id = $menu_id;
  }
  if (!is_array($data)) {
    $data = menu_tree_all_data();
  }
  foreach ($data as $key => $sub_data) {
    $data['link']["hidden"] = isset($data['link']["hidden"]) ? $data['link']["hidden"] : NULL;
    if ($data['link']["hidden"] == 0) {
      $key_parts = explode(' ', $key);
      if (end($key_parts) == $id) {
        $return = $sub_data;
        break;
      }
      _navigate_menu_sub_tree($sub_data);
    }
  }
  return $return['below'];
}


/**
 * Helper function for navigate_menu_sub_tree().
 */
function _navigate_menu_sub_tree($data) {
  if ($data['below']) {
    $content = navigate_menu_sub_tree($data['below']);
  }
}


/**
 * Renders a menu in list format.
 */
function navigate_menu_tree($data) {
  $output = '';
  if (is_string($data)) {
    $nav_array = explode(':', $data);
    if ($nav_array[1] > 0) {
      $data = navigate_menu_sub_tree('', $nav_array[1]);
    }
    else {
      $data = menu_tree_all_data($nav_array[0]);
    }
  }
  if (is_array($data)) {
    foreach ($data as $key => $data) {
      if ($data['link']["hidden"] == 0) {
        $output .= '<li class="leaf"><a title="' . strip_tags(str_replace('"', "'", $data['link']['description'])) . '" href="' . url($data['link']['href']) . '">' . $data['link']["title"] . '</a>' . _navigate_menu_tree($data) . '</li>';
      }
    }
    return $output;
  }
}


/**
 * Helper function for navigate_menu_tree().
 */
function _navigate_menu_tree($data) {
  if ($data['below']) {
    $content = navigate_menu_tree($data['below']);
    if ($content != '') {
      return '<ul>' . navigate_menu_tree($data['below']) . '</ul>';
    }
  }
}


/**
 * Implements hook_navigate_help_page().
 */
function navigate_menu_navigate_help_page() {
  $help['content'] = t('<p>The Menu widget allows you add an expandable menu widget to your Navigate bar. After adding a Menu widget, you willl see a select box with a menu listing. Select the menu you would like to load and click the "Load" button to load it into the widget. Once a menu is loaded, there are no additional settings.</p>');
  $help['title'] = 'Menu';
  $help['access'] = user_access('navigate_menu use');
  return $help;
}


/**
 * Implements hook_theme().
 */
function navigate_menu_theme() {
  return array(
    'navigate_menu_widget' => array(
      'variables' => array('inputs' => NULL, 'wid' => NULL),
    ),
  );
}
