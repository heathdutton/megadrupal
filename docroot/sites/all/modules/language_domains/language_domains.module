<?php
/**
 * @file
 *   Add alternative language domain handling functionality.
 *
 *   When enabled, the domain setting set in the db for a particular language
 *   can be overriden in settings.php. You just need to add the $conf entries
 *   as follows $conf['language_domains']['<language prefix>'] = 'example.com';
 *
 *   For example:
 *   $conf['language_domains']['en'] = 'en.mysite.dev';
 *   $conf['language_domains']['fr'] = 'fr.mysite.dev';
 *
 *   This is particularly useful when you have multilingual domains, but don't
 *   want to have to continually change them on your dev or staging site. You
 *   can set up a settings.local.php file that sets the domain on each server
 *   instead and you don't have to panic to change the domain configurations in
 *   the database every time.
 */

// -----------------------------------------------------------------------------


// Hook implementations


/**
 * Implements hook_boot().
 *
 * @see language_list(), drupal_language_initialize()
 */
function language_domains_boot() {
  // First check if any language_domain overrides have been created.
  if (!empty($GLOBALS['conf']['language_domains'])) {
    $domain_overrides = $GLOBALS['conf']['language_domains'];
    // Initialize the language list now. There is no harm in doing this now as
    // opposed to waiting for the language bootstrap level since the function
    // will always load the language list directly from the db anyway.
    language_list('language');
    // Override language domains directly in the language list static cache.
    $languages = &drupal_static('language_list');
    if (isset($languages)) {
      //Note: we only have to iterate over what is in the cache at this point
      //      since all future additions will be based on what is already in the
      //      cache, which we will have already modified.
      foreach ($languages as $field => $language_data) {
        // Some values are collected into an array based on the field value ...
        if (in_array($field, array('enabled', 'weight'))) {
          foreach ($language_data as $field_group => $grouped_lang) {
            foreach ($grouped_lang as $acrym => $lang) {
              if (!empty($lang->domain) && !empty($domain_overrides[$acrym])) {
                $languages[$field][$field_group][$acrym]->domain = $domain_overrides[$acrym];
              }
            }
          }
        }
        // ... and some are not.
        else {
          foreach ($language_data as $acrym => $lang) {
            if (!empty($lang->domain) && !empty($domain_overrides[$acrym])) {
              $languages[$field][$acrym]->domain = $domain_overrides[$acrym];
            }
          }
        }
      }
    }

    // Override domain for any initialized GLOBAL language type variables.
    foreach (language_types() as $type) {
      if (!empty($GLOBALS[$type])) {
        $language_type = $GLOBALS[$type]->language;
        if (!empty($GLOBALS[$type]->domain) && !empty($domain_overrides[$language_type]) && ($GLOBALS[$type]->domain != $domain_overrides[$language_type])) {
          $GLOBALS[$type]->domain = $domain_overrides[$language_type];
        }
      }
    }
    global $language;
  }
}
