<?php

/**
 * @file
 * Defines module's constants and an event handler.
 */

define('COMMERCE_SUBSCRIPTION_CREATED',         1);
define('COMMERCE_SUBSCRIPTION_TRIAL',           2);
define('COMMERCE_SUBSCRIPTION_ACTIVE',          3);
define('COMMERCE_SUBSCRIPTION_FINISHED',        4);
define('COMMERCE_SUBSCRIPTION_CANCELLED_USER',  5);
define('COMMERCE_SUBSCRIPTION_CANCELLED_ADMIN', 6);
define('COMMERCE_SUBSCRIPTION_FAILED',          7);

define('COMMERCE_SUBSCRIPTION_DURATION_DAYS',   1);
define('COMMERCE_SUBSCRIPTION_DURATION_WEEKS',  2);
define('COMMERCE_SUBSCRIPTION_DURATION_MONTHS', 3);
define('COMMERCE_SUBSCRIPTION_DURATION_YEARS',  4);

/**
 * Handler for payment events.
 */
function commerce_subscription_handle_event($type = 'subscription_payment', $transaction) {
  $order = commerce_order_load($transaction->order_id);
  rules_invoke_all($type, $order, $transaction);
}

/**
 * Implements hook_commerce_product_type_info().
 */
function commerce_subscription_commerce_product_type_info() {
  $product_types = array();
  $subs = module_invoke_all('subscription_product_type_info');

  foreach($subs as $payment_provider => $fields) {
    $product_types[$payment_provider] = array(
      'type' => $payment_provider . '_subscription',
      'name' => 'Subscription (' . $fields['payment_provider_name'] . ')',
      'description' => $fields['payment_provider_description'],
      'help' => $fields['payment_provider_help'],
    );
  }

  return $product_types;
}

/**
 * Implements hook_views_api().
 */
function commerce_subscription_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commerce_subscription') . '/includes/views',
  );
}

