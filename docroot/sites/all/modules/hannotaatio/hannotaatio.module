<?php
/**
 * @file hannotaatio.module
 * A very simple Drupal module to implement the Hannotaatio javascript feedback
 * system to your Drupal installation.
 */

/**
 * Implements hook_permission().
 *
 * @see hook_permission();
 * @return <array>
 *   permissions array
 */
function hannotaatio_permission() {
  return array(
    'administer hannotaatio' => array(
      'title' => t('Administer Hannotaatio settings'),
      'description' => t('User can change Hannotaatio settings.'),
    ),
    'use hannotaatio' => array(
      'title' => t('Use Hannotaatio'),
      'description' => t('User can use Hannotaatio to give feedback.'),
    ),
  );
}

/**
 * Implements hook_menu().
 *
 * @see hook_menu();
 * @return <array>
 *   menu array
 */
function hannotaatio_menu() {
  $items = array();

  $items['admin/config/user-interface/hannotaatio'] = array(
    'title' => 'Hannotaatio',
    'description' => 'Adds Hannotaatio feedback engine to Drupal',
    'access arguments' => array('administer hannotaatio'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hannotaatio_admin'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'hannotaatio.admin.inc',
  );

  return $items;
}

/**
 * Helper function get all settings and generates content for js file.
 *
 * @return <string>
 *   path to new created file
 */
function _hannotaatio_build_hannotaatio_js() {
  // Get the settings
  $apikey = variable_get('hannotaatio_apikey', '');
  $capturestylesheets = (variable_get('hannotaatio_capture_stylesheets', TRUE) ? 'true' : 'false');
  $captureimages = (variable_get('hannotaatio_capture_images', TRUE) ? 'true' : 'false');
  $notificationemail = variable_get('hannotaatio_notification_email', '');
  $scriptlocation = variable_get('hannotaatio_script_location', '');
  empty($scriptlocation) ? $scriptlocation = '//hannotaatio.futurice.com/hannotaatio.js' : '';

  $output = <<<EOS
  window._hannotaatioPreferences = {
    apiKey: '$apikey',

    /* Advances options */

    captureStylesheets: $capturestylesheets,

    captureImages: $captureimages,

    crossDomainFileAvailable: false,

    notificationEmails: [
      '$notificationemail',
    ]
  };
  
  (function(d, t) {
    var h = d.createElement(t), s = d.getElementsByTagName(t)[0];
    h.type = "text/javascript"; h.async = 1; h.src = "$scriptlocation";
    s.parentNode.insertBefore(h, s);
  })(document, 'script');
EOS;

  return _hannotaatio_create_hannotaatio_js($output);
}

/**
 * Helper function to create a real js file within files directory.
 *
 * @param <string> $js
 *   the js code
 * @return <string>
 *   js filename
 */
function _hannotaatio_create_hannotaatio_js($js = NULL) {
  if (!$js) {
    drupal_set_message(t('No js content given.'), 'error');
    return FALSE;
  }

  // Create the path stream to files directory.
  $hannotaatio_js_path = 'public://hannotaatio';

  // Create Hannotaatio directory and check if successfull.
  if (!file_prepare_directory($hannotaatio_js_path, FILE_CREATE_DIRECTORY)) {
    drupal_set_message(t('Unable to create Hannotaatio js directory. Check the permissions on your files directory.'), 'error');
    return;
  }

  // Save js data to our real js file.
  $filename = $hannotaatio_js_path . '/hannotaatio.js';
  $filename = file_unmanaged_save_data($js, $filename, FILE_EXISTS_REPLACE);

  // Clear the js cache.
  drupal_clear_js_cache();

  return $filename;
}

/**
 * Implements hook_preprocess_html().
 *
 * @see hook_preprocess_html();
 */
function hannotaatio_preprocess_html(&$vars) {
  $path_to_hannotaatio_js_file = 'public://hannotaatio/hannotaatio.js';
  if (user_access('use hannotaatio')) {
    drupal_add_js($path_to_hannotaatio_js_file, array('type' => 'file', 'scope' => 'footer'));
  }
}
