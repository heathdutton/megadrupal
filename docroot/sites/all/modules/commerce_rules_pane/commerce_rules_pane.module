<?php
/**
 * @file
 * The commerce rules pane modules creates a checkout pane which content is
 * configurable using rules.
 */

/**
 * Implements hook_help().
 */
function commerce_rules_pane_help($path, $arg) {
  switch ($path) {
    case 'admin/help#commerce_rules_pane':
      return '<h3>' . t('Instalation') . '</h3>' . t('After enabling this module,
        a new rules event ("Determine rules checkout pane content") and two
        new actions ("Set the completion message" and "Set an entity to be
        displayed as completion message"). More info is available in the
        README.txt file.');
  }
}

/**
 * Implements hook_hook_info().
 */
function commerce_rules_pane_hook_info() {
  $hooks = array(
    'determine_rules_checkout_pane_content' => array(
      'group' => 'commerce',
    ),
  );

  return $hooks;
}

/**
 * Implements hook_commerce_checkout_pane_info().
 */
function commerce_rules_pane_commerce_checkout_pane_info() {
  $checkout_panes = array();
  $checkout_panes['rules_pane'] = array(
    'title' => t('Rules checkout pane'),
    'file' => 'includes/commerce_rules_pane.checkout_pane.inc',
    'base' => 'commerce_rules_pane',
    'page' => 'complete',
    'weight' => '-10',
    'fieldset' => TRUE,
  );
  return $checkout_panes;
}

/**
 * Implements hook_form_alter().
 */
function commerce_rules_pane_form_alter(&$form, &$form_state, $form_id) {
  // Find if the rules pane is enabled and on which page is it.
  $checkout_panes = commerce_checkout_panes(array('enabled' => TRUE));
  if (isset($checkout_panes['rules_pane'])) {
    if ($form_id == 'commerce_checkout_form_' . $checkout_panes['rules_pane']['page']) {

      // If the pane title has changed set the new title.
      if (isset($form['rules_pane']) && variable_get('commerce_rules_pane_title', t('Rules checkout pane')) != $form['rules_pane']['#title']) {
        $form['rules_pane']['#title'] = check_plain(variable_get('commerce_rules_pane_title', t('Rules checkout pane')));
      }

    }
  }
}

/**
 * Submit callback for reloading the form for commerce_rules_pane_set_entity.
 */
function commerce_rules_pane_set_entity_view_mode_submit_rebuild($form, &$form_state) {
  rules_form_submit_rebuild($form, $form_state);
  // Clear the parameter modes for the parameters, so they get the proper
  // default values based upon the data types on rebuild.
  $form_state['parameter_mode'] = array();
}
