<?php
/**
 * @file captcha_keypad.module
 * Captcha keypad module.
 */

/**
 * Implements hook_help().
 */
function captcha_keypad_help($path, $arg) {
  switch ($path) {
    case 'admin/config/captcha_keypad':
      return '<p>' . t('todo.') . '</p>';
  }
}

/**
 * Implements hook_menu().
 */
function captcha_keypad_menu() {
  $items = array();

  $items['admin/config/system/captcha_keypad'] = array(
    'title' => 'Captcha Keypad',
    'description' => 'Configure Captcha Keypad.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('captcha_keypad_settings_form'),
    'access arguments' => array('administer captcha keypad'),
    'file' => 'captcha_keypad.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function captcha_keypad_permission() {
  $permissions = array();

  $permissions['administer captcha keypad'] = array(
    'title' => t('Administer Capcha keypad'),
  );
  return $permissions;
}

/**
 * Implements hook_form_alter().
 */
function captcha_keypad_form_alter(&$form, &$form_state, $form_id) {
  $form_ids = variable_get('captcha_keypad_forms', array());
  if (!in_array($form_id, array_filter($form_ids))) {
    return;
  }

  $digits = variable_get('captcha_keypad_code_size', 4);

  $form['captcha_keypad'] = array(
    '#title' => t('Security'),
    '#type' => 'fieldset',
    '#attributes' => array('class' => array('captcha-keypad-wrapper')),
    '#weight' => (isset($form['actions']['#weight']) ? $form['actions']['#weight'] - 1 : 99.5),
  );

  $form['captcha_keypad']['captcha_keypad_input'] = array(
    '#title' => t('Enter code'),
    '#type' => 'textfield',
    '#attributes' => array('class' => array('captcha-keypad-input')),
    '#size' => $digits,
  );

  if (!isset($form_state['input']['captcha_keypad_hidden'])) {
    $code = _captcha_keypad_get_code($digits);
  }
  else {
    $code = $form_state['input']['captcha_keypad_hidden'];
  }
  $form['captcha_keypad']['captcha_keypad_hidden'] = array(
    '#type' => 'hidden',
    '#size' => 1,
    '#value' => $code,
  );

  $form['captcha_keypad']['captcha_keypad_keypad_used'] = array(
    '#type' => 'hidden',
    '#size' => 1,
    '#attributes' => array('class' => array('captcha-keypad-keypad-used')),
    '#default_value' => '',
  );

  $keypad = '';
  $keys = array(1, 2, 3, 4, 5, 6, 7, 8, 9);
  if (variable_get('captcha_keypad_shuffle_keypad', TRUE)) {
    shuffle($keys);
  }
  for ($n = 0; $n <= 8; $n++) {
    $keypad .= '<span>' . $keys[$n] . '</span>';
  }
  $form['captcha_keypad']['keypad'] = array(
    '#prefix' => '<span class="captcha-keypad"><span class="inner">',
    '#markup' => $keypad,
    '#suffix' => '</span></span>',
  );

  $form['captcha_keypad']['code'] = array(
    '#prefix' => '<span class="sequence">',
    '#markup' => t('Using the mouse, click this sequence: <strong>:code</strong>', array(':code' => $code)),
    '#suffix' => '</span>',
  );

  array_unshift($form['#validate'], 'captcha_keypad_form_validate');

  _captcha_keypad_add_js_css($form);
}

/**
 * Callback function for form submit.
 */
function captcha_keypad_form_validate(&$form, &$form_state) {
  if ($form_state['values']['captcha_keypad_input'] != $form_state['values']['captcha_keypad_hidden'] ||
    $form_state['values']['captcha_keypad_keypad_used'] != 'Yes'
  ) {
    _captcha_keypad_add_js_css($form);
    form_set_error('captcha_keypad_input', t('Invalid security code.'));
  }
}

/**
 * Helper to generate the code.
 */
function _captcha_keypad_get_code($digits) {
  $code = rand(pow(10, $digits - 1), pow(10, $digits) - 1);
  $code = str_replace('0', '1', $code . '');
  return $code;
}

/**
 * Helper to add css and javascript.
 */
function _captcha_keypad_add_js_css(&$form) {
  $form['#attached']['js'][] = drupal_get_path('module', 'captcha_keypad') . '/captcha_keypad.js';
  $form['#attached']['css'][] = drupal_get_path('module', 'captcha_keypad') . '/captcha_keypad.css';
}
