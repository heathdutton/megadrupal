<?php

/**
 * Drupal hooks.
 */

/**
 * Implements hook_form_alter().
 */
function block_machine_name_form_alter(&$form, $form_state, $form_id) {
  $default_values = array();

  if ($form_id == 'block_add_block_form' && $form['module']['#value'] == 'block' && user_access('administer features')) {
    $default_values['machine_name'] = '';
    $default_values['bid'] = 0;
  }
  elseif ($form_id == 'block_admin_configure' && $form['module']['#value'] == 'block' && user_access('administer features')) {
    $bid = $form['delta']['#value'];
    $machine_name = block_machine_name_get_machine_name($bid);
    $default_values['machine_name'] = empty($machine_name) ? '' : $machine_name;
    $default_values['bid'] = $bid;
  }
  // Delete a block.
  elseif ($form_id == 'block_box_delete') {
    $form['#submit'][] = 'block_machine_name_delete';
  }

  // Add & edit
  if (!empty($default_values)) {
    $form['settings']['machine_name'] = array(
      '#type' => 'textfield',
      '#title' => t('Machine name'),
      '#default_value' => $default_values['machine_name'],
      '#maxlength' => 32,
      '#description' => t('Give the block a machine name a unique identifier for CSS, template files, etc. Lowercase letters, numbers, and underscores only.'),
      '#weight' => -50,
    );
    $form['bid'] = array(
      '#type' => 'value',
      '#value' => $default_values['bid'],
    );

    // Validate & submit.
    $form['#validate'][] = 'block_machine_name_validate';
    $form['#submit'][] = 'block_machine_name_submit';
  }
}

/**
 * Implements of hook_block_list_alter().
 */
function block_machine_name_block_list_alter(&$blocks) {
  global $theme_key;
  $query = db_select('block_machine_name_boxes','fb');
  $query->join('block','b','fb.bid = b.delta');
  $query->fields('fb')->fields('b');
  $result = $query->execute();
  foreach ($result as $k => $block) {
    if (isset($blocks[$block->bid]) && $block->theme == $theme_key && $block->module == 'block') {
      $blocks[$block->bid]->machine_name = $block->machine_name;
    }
  }
}

/**
 * Validate machine name.
 */
function block_machine_name_validate($form, &$form_state) {
  if (empty($form_state['values']['machine_name'])) {
    return;
  }
  $table = 'block_machine_name_boxes';

  $query = db_select($table)
    ->condition('bid', $form_state['values']['bid'], '<>')
    ->condition('machine_name', $form_state['values']['machine_name']);

  $count = $query->countQuery()->execute()->fetchField();

  if (!preg_match('!^[a-z0-9_]+$!', $form_state['values']['machine_name'])) {
    form_set_error('machine_name', t('The machine-readable name must contain only lowercase letters, numbers, and underscores.'));
  }
  elseif ($count > 0) {
    form_set_error('machine_name', t('The machine-readable name has been taken. Please pick another one.'));
  }
}

/**
 * Save machine name.
 */
function block_machine_name_submit($form, &$form_state) {
  // Insert
  if (empty($form_state['values']['bid'])) {
    $form_state['values']['bid'] = db_select('block_custom')
       ->fields('block_custom', array('bid'))
       ->condition('info', $form_state['values']['info'])
       ->execute()->fetch()->bid;
  }
  if (empty($form_state['values']['bid'])) {
    return;
  }

  $table = 'block_machine_name_boxes';
  db_delete($table)
    ->condition('bid', $form_state['values']['bid'])
    ->execute();
  if (!empty($form_state['values']['machine_name'])) {
    drupal_write_record($table, $form_state['values']);
  }
}

/**
 * Delete machine name.
 */
function block_machine_name_delete($form, &$form_state) {
  $table = 'block_machine_name_boxes';
  db_delete($table)->condition('bid', $form_state['values']['bid']);
}

/**
 * Returns the machine name that corresponds to a given block id.
 *
 * @param int $bid
 *   The block id for which to retrieve the machine name.
 *
 * @return string | FALSE
 *   The machine name, or FALSE if it could not be found.
 */
function block_machine_name_get_machine_name($bid) {
  $machine_names = &drupal_static(__FUNCTION__);
  if (!isset($machine_names[$bid])) {
    $result = db_select('block_machine_name_boxes')
      ->fields('block_machine_name_boxes', array('machine_name'))
      ->condition('bid', $bid)
      ->execute()
      ->fetch();

    if (empty($result)) {
      return FALSE;
    }
    $machine_names[$bid] = $result->machine_name;
  }
  return $machine_names[$bid];
}

/**
 * Implements hook_preprocess_block();
 */
function block_machine_name_preprocess_block(&$vars) {
  $block = $vars['block'];
  if(isset($block->machine_name)) {
    //Add a class
    $vars['classes_array'][] = 'block-' . str_replace('_', '-',$block->machine_name);
    
    //Make a template suggestion
    $vars['theme_hook_suggestions'][] = 'block__' . $block->machine_name;
  }
}