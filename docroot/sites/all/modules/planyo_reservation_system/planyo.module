<?php
// $Id$

function planyo_help($path, $arg) {
  switch ($path) {
    case 'admin/help#planyo':
      $output = '<p>' . t("This module embeds the Planyo.com online reservation system. Before using it, you'll need to create an account at planyo.com. Please see http://www.planyo.com/drupal-reservation-system for more info.") . '</p>';
      return $output;
  }
}

function planyo_perm() {
  return array('administer planyo');
}

function planyo_admin() {
  $form = array();

  $form['planyo_site_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Planyo site ID'),
    '#default_value' => variable_get('planyo_site_id', 'demo'),
    '#description' => t("ID of your planyo site. If you don't have a planyo site yet, create one first at www.planyo.com. The default value (demo) will use a demonstration site."),
    '#required' => TRUE,
  );

  $form['planyo_language'] = array(
    '#type' => 'select',
    '#title' => t('Language of Planyo interface'),
    '#default_value' => variable_get('planyo_language', '0'),
    '#description' => t('Choose one of the supported languages. You can also modify the templates (in your planyo administration panel) to display the language choice to the user or pass the language as a parameter in the URL (lang).'),
    '#options' => array('0' => t('Auto-detect'),
      'EN' => t('English'),
      'FR' => t('French'),
      'IT' => t('Italian'),
      'ES' => t('Spanish'),
      'DE' => t('German'),
      'PL' => t('Polish'),
      'SV' => t('Swedish'),
      'DA' => t('Danish'),
      'FI' => t('Finnish'),
      'BR' => t('Portuguese (Brazil)'),
      'PT' => t('Portuguese (Portugal)'),
      'RU' => t('Russian'),
      'NL' => t('Dutch'),
      'EL' => t('Greek'),
      'RO' => t('Romanian'),
      'IS' => t('Icelandic'),
      'NO' => t('Norwegian'),
      'CS' => t('Czech'),
      'CA' => t('Catalan'),
      'ET' => t('Estonian'),
      'JA' => t('Japanese')),
  );

  $form['planyo_page_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title of the Planyo module page'),
    '#default_value' => variable_get('planyo_page_title', 'Reservation'),
    '#description' => t('Enter the title used on the module page'),
    '#required' => FALSE,
  );

  $form['planyo_page_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to the Planyo module page'),
    '#default_value' => variable_get('planyo_page_path', 'planyo'),
    '#description' => t('Enter the relative path that will be used to display the content from Planyo. The default value will make the module accessible at ?q=planyo or /planyo. You can use the special value &lt;block&gt; if you don&apos;t want to create a separate page but only wish to use planyo in blocks (on a page of your choice). You may need to clear the cache after changing this value.'),
    '#required' => FALSE,
  );

  $block_options = array();
  for ($bo = 0; $bo < 50; $bo++) {
    $block_options ["$bo"] = t("$bo");
  }

  $form['planyo_block_count'] = array(
    '#type' => 'select',
    '#title' => t('Number of drupal blocks to be created'),
    '#default_value' => variable_get('planyo_block_count', '1'),
    '#description' => t('Enter the number of blocks which you want to be added to the drupal blocks page. Each block can be used to display different type of content. By default it is the default mode specified below but you can change the attribute string of each block to display different content (e.g. a widget showing details of a resource, upcoming availability or a search box).'),
    '#options' => $block_options,
  );

  $form['planyo_default_mode'] = array(
    '#type' => 'select',
    '#title' => t('Default mode'),
    '#default_value' => variable_get('planyo_default_mode', 'resource_list'),
    '#description' => t("Choose the initial (default) mode: 'Search box' to allow clients to search for available dates or 'Resource list' to display a list of all resources (in such case search must be initiated by embedding an extra search box -- see last step of integration in Planyo's admin panel). Choosing 'Do nothing' will not display anything by default but will require you to either pass the resource ID to the module as parameter in the URL (resource_id) or add an external search box or calendar preview."),
    '#options' => array('search' => t('Search box'),
      'resource_list' => t('Resource list'),
      'upcoming_availability' => t('Upcoming availability'),
      'empty' => t('Do nothing')),
  );

  $form['planyo_extra_search_fields'] = array(
    '#type' => 'textfield',
    '#maxlength' => 512,
    '#title' => t('Additional fields of the search box (search mode)'),
    '#default_value' => variable_get('planyo_extra_search_fields', ''),
    '#description' => t("Comma-separated extra fields of the search box. Can be left empty. Example: 'Number of persons'. You first need to define these fields in settings/custom resource properties"),
    '#required' => FALSE,
  );

  $form['planyo_sort_fields'] = array(
    '#type' => 'textfield',
    '#title' => t('Sort-by field choices (search mode)'),
    '#default_value' => variable_get('planyo_sort_fields', 'name,price'),
    '#description' => t('Comma-separated possible sort fields. A single value will hide this parameter, more than one value will give the user a choice in form of a drop-down box. Allowed values: name, price, prop_res_xxx (custom resource properties). Can be left empty'),
    '#required' => FALSE,
  );

  $form['planyo_resource_ordering'] = array(
    '#type' => 'textfield',
    '#title' => t('Ordering of resources (resource list mode)'),
    '#default_value' => variable_get('planyo_resource_ordering', 'name'),
    '#description' => t('Sorting criterium for the listing of resources in the resource list view. This can be set to name (this is the default) which sorts by resource name, or one of prop_res_xxx (custom resource property defined in Planyo). Can be left empty.'),
    '#required' => FALSE,
  );

  $form['planyo_use_login'] = array(
    '#type' => 'select',
    '#title' => t('Integrate with drupal login'),
    '#default_value' => variable_get('planyo_use_login', '0'),
    '#description' => t("Choose whether the plugin should use the login information from this drupal site. If used, the reservation form items will be automatically prefilled with known values and subsequent reservations will use previously entered data."),
    '#options' => array('1' => t('Yes'),
      '0' => t('No')),
  );

  $form['planyo_seo_friendly'] = array(
    '#type' => 'select',
    '#title' => t('SEO friendly'),
    '#default_value' => variable_get('planyo_seo_friendly', '1'),
    '#description' => t("Choose whether the plugin in the resource list and resource details modes should be SEO friendly (information retrieved from the server when loading the page) or not (information retrieved using Javascript/AJAX). Choosing yes will add a slight delay to the loading time of the page but will let search engines index the resource names, descriptions and photos."),
    '#options' => array('1' => t('Yes'),
      '0' => t('No')),
  );

  $form['planyo_attribute_blocks'] = array(
    '#type' => 'fieldset',
    '#title' => t('Optional attribute blocks'),
    '#description' => t(''),
    '#required' => FALSE,
  );

  return system_settings_form($form);
}

function planyo_menu() {
  $items = array();

  $items['admin/settings/planyo'] = array(
    'title' => 'Planyo',
    'description' => "Before using the module, you'll need to create an account at planyo.com. Please see http://www.planyo.com/drupal-reservation-system for more info",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('planyo_admin'),
    'access arguments' => array('administer planyo'),
    'type' => MENU_NORMAL_ITEM,
  );

  if (variable_get('planyo_page_path', '') != '<block>') {
    $items[variable_get('planyo_page_path', 'planyo')] = array('title' => variable_get('planyo_page_title', 'Reservation'),
      'page callback' => 'planyo_content',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
    );
  }

  $items['planyo/ulap'] = array('title' => '',
    'page callback' => 'planyo_ulap_content',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );

  return $items;
}

function planyo_send_request($fields) {
  $url = $fields['ulap_url'];
  $parts = parse_url($url);
  $host = $parts['host'];

  define ('USE_ARC', 0); // set this to 1 to use arc.planyo.com (archived version), or 0 for planyo.com
  define ('USE_SANDBOX', 0); // set this to 1 to use sandbox.planyo.com (test version), or 0 for planyo.com
  if (constant('USE_ARC')) {
    $url = str_replace("http://www.planyo.com", "http://arc.planyo.com", $url);
    $url = str_replace("https://www.planyo.com", "http://arc.planyo.com", $url);
  }
  if (constant('USE_SANDBOX')) {
    $url = str_replace("http://www.planyo.com", "http://sandbox.planyo.com", $url);
    $url = str_replace("https://www.planyo.com", "http://sandbox.planyo.com", $url);
  }

  if ($host != 'www.planyo.com' && $host != 'arc.planyo.com' && $host != 'sandbox.planyo.com')
    return 'Error: Call to $url not allowed';

  $data = '';
  if ($fields && count($fields) > 0) {
    foreach (array_keys($fields) as $key) {
      $data = $data . "$key=" . rawurlencode($fields[$key]);
      $data .= '&';
    }
  }
  $data .= 'modver=2.6';
  $ip = ip_address();
  if ($ip)
    $data .= "&client_ip=$ip";

  $headers = array('Content-Type' => 'application/x-www-form-urlencoded');

  $response = drupal_http_request($url, array('headers'=>$headers, 'method'=>'POST', 'data'=>$data));
  return $response->data;
}

function planyo_ulap_content() {
  if (isset($_POST['ulap_url']))
    $params = $_POST;
  else
    $params = $_GET;
  print planyo_send_request($params);
  exit();
}

function planyo_get_attribs_as_array($str) {
  $array = array();
  $pairs = explode('&', $str);  
  if ($pairs && is_array($pairs)) {  
    foreach($pairs as $pair) {
      if (is_string($pair) && strpos($pair, '=') !== false) { 
        list($name, $value) = explode('=', $pair, 2);
        $name = trim($name);
        $value = trim($value);
        if (is_string($name) && strlen($name) > 0)
          $array[$name] = $value;
      }
    }
  }
  return $array;
}

function planyo_should_use_attribs() {
  return !(isset($_GET['mode']) || isset($_GET['presentation_mode']) || isset($_GET['prefill']) || isset($_GET['submitted']) || isset($_POST['mode']) || isset($_POST['presentation_mode']) || isset($_POST['prefill']) || isset($_POST['submitted']));
}

function planyo_disable_mode_in_attribs(&$attribs) {
  $attribs = str_replace("mode=", "mode_orig=", $attribs);
  $attribs = str_replace("&resource_id=", "&resource_id_orig=", $attribs);
  $attribs = str_replace("?resource_id=", "?resource_id_orig=", $attribs);
}

function planyo_get_param($name) {
  global $planyo_attribs;
  if (isset ($_GET[$name]))
    return $_GET[$name];
  if (isset ($_POST[$name]))
    return $_POST[$name];
  if ($planyo_attribs && is_string($planyo_attribs)) {
    if (!planyo_should_use_attribs())
      planyo_disable_mode_in_attribs($planyo_attribs);
    $attrib_array = planyo_get_attribs_as_array($planyo_attribs);
    if (isset ($attrib_array[$name]))
      return $attrib_array[$name];
  }
  return null;
}

function planyo_get_language() {
  global $planyo_language;
  $language = $planyo_language;
  if (planyo_get_param('planyo_lang'))
    $language = planyo_get_param('planyo_lang');
  else if (planyo_get_param('lang') && strlen(planyo_get_param('lang') == 2))
    $language = planyo_get_param('lang');
  return $language;
}

function planyo_add_other_params($params) {
  global $planyo_attribs;
  $other_params = $_GET;
  if ($planyo_attribs && is_string($planyo_attribs)) {
    if (!planyo_should_use_attribs())
      planyo_disable_mode_in_attribs($planyo_attribs);
    $attrib_array = planyo_get_attribs_as_array(strip_tags(html_entity_decode($planyo_attribs)));
    $other_params = array_merge($attrib_array, $other_params);
  }
  if ($other_params && count($other_params) > 0) {
    reset ($other_params);
    while (list ($name, $value) = each ($other_params)) {
      if (strpos ($name, 'ppp_') === 0 && !array_key_exists($name, $params)) {
        $params [$name] = $value;
      }
    }
  }
  return $params;
}

function planyo_output_resource_list() {
  global $planyo_site_id, $planyo_metasite_id, $planyo_feedback_url, $planyo_default_mode, $planyo_language, $planyo_resource_ordering;
  $planyo_default_mode = 'empty';
  $language = planyo_get_language();

  if ($planyo_metasite_id && planyo_get_param('site_id')) {
    $site_id_used = planyo_get_param('site_id');
    $metasite_id_used = $planyo_metasite_id;
  }
  else if ($planyo_site_id && !$planyo_metasite_id) {
    $site_id_used = $planyo_site_id;
    $metasite_id_used = '';
  }
  else {
    $site_id_used = '';
    $metasite_id_used = $planyo_metasite_id;
  }

  $https = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on';
  drupal_add_js("var planyo_force_mode='empty';", 'inline');
  $params = array('ulap_url'=>($https ? 'https' : 'http').'://www.planyo.com/rest/planyo-reservations.php','modver'=>'2.6','site_id'=>$site_id_used,'metasite_id'=>$metasite_id_used,'mode'=>'display_resource_list_code','feedback_url'=>$planyo_feedback_url,'language'=>$language ? $language : '', 'sort'=>planyo_get_param('sort') ? planyo_get_param('sort') : $planyo_resource_ordering, 'res_filter_name'=>planyo_get_param('res_filter_name'), 'res_filter_value'=>planyo_get_param('res_filter_value'));
  return planyo_send_request(planyo_add_other_params($params));
}

function planyo_output_site_list() {
  global $planyo_site_id, $planyo_metasite_id, $planyo_feedback_url, $planyo_default_mode, $planyo_language;
  $planyo_default_mode = 'empty';
  $language = $planyo_language;
  if (planyo_get_param('lang'))
    $language = planyo_get_param('lang');
  $https = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on';
  drupal_add_js("var planyo_force_mode='empty';", 'inline');
  $params = array('ulap_url'=>($https ? 'https' : 'http').'://www.planyo.com/rest/planyo-reservations.php','modver'=>'2.6','site_id'=>'','metasite_id'=>$planyo_metasite_id,'mode'=>'display_site_list_code','feedback_url'=>$planyo_feedback_url,'language'=>$language ? $language : '', 'sort'=>planyo_get_param('sort') ? planyo_get_param('sort') : '', 'cal_filter_name'=>planyo_get_param('cal_filter_name'), 'cal_filter_value'=>planyo_get_param('cal_filter_value'));
  return planyo_send_request(planyo_add_other_params($params));
}

function planyo_output_resource_details() {
  global $planyo_site_id, $planyo_metasite_id, $planyo_feedback_url, $planyo_default_mode, $planyo_language;
  $planyo_default_mode = 'empty';
  $language = $planyo_language;
  if (planyo_get_param('lang'))
    $language = planyo_get_param('lang');
  $https = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on';
  drupal_add_js("var planyo_force_mode='empty';", 'inline');
  $params = array('ulap_url'=>($https ? 'https' : 'http').'://www.planyo.com/rest/planyo-reservations.php','modver'=>'2.6','site_id'=>($planyo_site_id && !$planyo_metasite_id ? $planyo_site_id : ""),'metasite_id'=>($planyo_metasite_id ? $planyo_metasite_id : ""),'resource_id'=>planyo_get_param('resource_id'), 'mode'=>'display_single_resource_code','feedback_url'=>$planyo_feedback_url,'language'=>$language ? $language : '');
  return planyo_send_request(planyo_add_other_params($params));
}

function planyo_setup() {
  global $base_root, $planyo_site_id, $planyo_metasite_id, $planyo_feedback_url, $planyo_always_use_ajax, $planyo_default_mode, $planyo_language, $planyo_resource_ordering, $planyo_attribs;
  $planyo_site_id = variable_get('planyo_site_id', 'demo');
  $planyo_metasite_id = null;
  $planyo_language = get_planyo_language();
  $planyo_resource_ordering = variable_get('planyo_resource_ordering', 'name');
  if (!$planyo_site_id || $planyo_site_id == 'demo')
    $planyo_site_id = 11;  // demo site
  else if (substr($planyo_site_id, 0, 1) == 'M')
    $planyo_metasite_id = substr($planyo_site_id, 1);  // metasite ID: set only for metasites

  if (planyo_get_param('mode')) {
    $planyo_default_mode = planyo_get_param('mode');
  }
  else {
    $resource_id = planyo_get_param('resource_id');
    $presentation_off = (planyo_get_param('presentation_mode') == '0' || (!planyo_get_param('presentation_mode') && $planyo_default_mode == 'search'));
    if ($resource_id && (planyo_get_param('prefill') || planyo_get_param('submitted')))
      $planyo_default_mode = 'reserve';
    else if ($presentation_off)
      $planyo_default_mode = 'search';
    else if ($resource_id)
      $planyo_default_mode = 'resource_desc';
    else if (planyo_get_param('presentation_mode') == '1' || !$planyo_default_mode)
      $planyo_default_mode = 'resource_list';
  }

  $planyo_always_use_ajax = variable_get('planyo_seo_friendly', '1') == '1' ? false : true;
  if (!$planyo_always_use_ajax) {
    $planyo_feedback_url = planyo_get_param('feedback_url');
    if (!$planyo_feedback_url)
      $planyo_feedback_url = $base_root . request_uri();

    if ($planyo_default_mode == 'resource_desc' && planyo_get_param('resource_id'))
      return "<div id='planyo_plugin_code' class='planyo'>".planyo_output_resource_details()."</div>";
    else if ($planyo_metasite_id && $planyo_default_mode == 'site_list' && !planyo_get_param('site_id'))
      return "<div id='planyo_plugin_code' class='planyo'>".planyo_output_site_list()."</div>";
    else if ($planyo_default_mode == 'resource_list')
      return "<div id='planyo_plugin_code' class='planyo'>".planyo_output_resource_list()."</div>";
  }
  return "";
}

function planyo_content() {
  $content = planyo_display_block_content();
  return $content;
}

function planyo_block_configure($delta = '') {
  $form['planyo_block_attribs_'.$delta] = array(
    '#type' => 'textfield',
    '#maxlength' => 512,
    '#title' => t('Attributes string'),
    '#default_value' => variable_get('planyo_block_attribs_'.$delta, ''),
  );
  return $form;
}

function planyo_block_info() {
  $blocks = array();
  for ($block = 1; $block <= (int) variable_get('planyo_block_count', '1'); $block++) {
    $blocks['b'.$block] = array(
      'info' => variable_get('planyo_page_title', 'Reservation').' '.$block,
      'cache' => DRUPAL_NO_CACHE,
    );
  }
  return $blocks;
}

function planyo_block_save($delta = '', $edit = array()) {
  variable_set('planyo_block_attribs_'.$delta, $edit['planyo_block_attribs_'.$delta]);
}

function planyo_block_view($delta = '') {
  global $planyo_attribs;
  $attribs_string = variable_get('planyo_block_attribs_'.$delta, '');
  if ($attribs_string && is_string($attribs_string) && strlen($attribs_string) > 0)
    $planyo_attribs = $attribs_string;
  $block['subject'] = variable_get('planyo_page_title', 'Reservation');
  $block['content'] = planyo_display_block_content(NULL, FALSE);
  return $block;
}

function get_planyo_language() {
  global $language;
  $default_language = variable_get('planyo_language', '0');
  if (!$default_language && isset($language)) {
    $default_language = strtoupper(substr($language->language, 0, 2));
    if (!$default_language)
      $default_language = 'EN';
  }
  return $default_language;
}

function planyo_display_block_content($node = NULL, $teaser = FALSE) {
  global $planyo_default_mode;
  global $planyo_attribs;
  global $user;
  static $planyo_content_written = false;
  if ($planyo_content_written)
    return "";
  $planyo_content_written = true;
  $default_language = get_planyo_language();
  $planyo_default_mode = variable_get('planyo_default_mode', 'resource_list');
  if ($planyo_default_mode == 'empty' && planyo_get_param('resource_id'))
    $planyo_default_mode = 'reserve';
  $content = planyo_setup();
  $planyo_login_info = null;
  if ($user && $user->uid && variable_get('planyo_use_login', '0') == '1') {
    $user_fields = user_load($user->uid);
    $last_name = null;
    $first_name = null;
    $email = null;
    $user_name = null;
    if ($user_fields) {
      $email = @$user_fields->mail;
      if (@$user_fields->name) {
        $user_name = $user_fields->name;
        $names = explode(" ", $user_fields->name);
        if (is_array($names) && count($names) > 1) {
          $last_name = array_pop($names);
          $first_name = implode(" ", $names);
        }
      }
    }
    $planyo_login_info = array('email'=>$email, 'first_name'=>$first_name, 'last_name'=>$last_name, 'login_cs'=>sprintf("%u",crc32($user->uid . $email . $user_name)));
  }
  if ($planyo_attribs && is_string($planyo_attribs) && !planyo_should_use_attribs())
    planyo_disable_mode_in_attribs($planyo_attribs);
  drupal_add_js(array('planyo' => array('ulap_script' => url('planyo/ulap'),
    'drupal_version' => 7,
    'planyo_site_id' => variable_get('planyo_site_id', ''),  // ID of your planyo site
    'planyo_files_location' => drupal_get_path('module', 'planyo'),  // relative or absolute directory where the planyo files are kept
    'extra_search_fields' => variable_get('planyo_extra_search_fields', ''), // comma-separated extra fields in the search box
    'planyo_language' => $default_language,  // you can optionally change the language here, e.g. 'FR' or 'ES'
    'sort_fields' => variable_get('planyo_sort_fields', 'name,price'),  // comma-separated sort fields -- a single field will hide the sort dropdown box
    'planyo_resource_ordering' => variable_get('planyo_resource_ordering', 'name'), // sorting criterium for the resource list view
    'planyo_use_https' => (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') ? true : false,  // set this to true if embedding planyo on a secure website (SSL)
    'planyo_default_mode' => $planyo_default_mode,
    'planyo_attribs' => ($planyo_attribs && is_string($planyo_attribs)) ? '?'.html_entity_decode($planyo_attribs) : '',
    'planyo_login' => $planyo_login_info)), 'setting');
  drupal_add_js(drupal_get_path('module', 'planyo') . '/planyo-utils.js');
  drupal_add_js(drupal_get_path('module', 'planyo') . '/planyo-drupal-reservations.js');
  drupal_add_css('https://www.planyo.com/schemes/?site_id=' . variable_get('planyo_site_id', '')); 
  $content .= "<noscript><a href='http://www.planyo.com/about-calendar.php?calendar=" . variable_get('planyo_site_id', '') . "'>Make reservation</a><br/><br/><a href='http://www.planyo.com/'>Reservation system powered by Planyo</a></noscript>\n";
  $content .= "<div id='planyo_content' class='planyo'><img src='" . drupal_get_path('module', 'planyo') . '/hourglass.gif' . "' align='middle' /></div>";
  return $content;
}