<?php

/**
 * @file
 * Provides a FieldAPI field type, widget, and formatter to display a BrightTalk player.
 *
 */

/**
 * Implements hook_field_info().
 *
 * Provides the description of the field.
 */
function brighttalk_field_field_info() {
  return array(
    'brighttalk_channel' => array(
      'label' => t('BrightTalk Channel'),
      'description' => t('An embeded BrightTalk channel.'),
      'default_widget' => 'brighttalk_channel',
      'default_formatter' => 'brighttalk_channel',
    ),
    'brighttalk_webcast' => array(
      'label' => t('BrightTalk Webcast'),
      'description' => t('An embeded BrightTalk webcast.'),
      'default_widget' => 'brighttalk_embed',
      'default_formatter' => 'brighttalk_embed',
    ),
  );
}

/**
 * Implements hook_field_settings_form().
 * @todo review if necessary
 */
function brighttalk_field_field_settings_form($field, $instance, $has_data) {
  $settings = $field['settings'];

  $form = array();

  return $form;
}

/**
 * Implements hook_field_widget_info().
 *
 */
function brighttalk_field_field_widget_info() {
  return array(
    'brighttalk_embed' => array(
      'label' => t('Embed Code'),
      'field types' => array('brighttalk_webcast'),
    ),
    'brighttalk_channel_and_webcast' => array(
      'label' => t('Channel & Webcast ID'),
      'field types' => array('brighttalk_webcast'),
    ),
    'brighttalk_channel' => array(
      'label' => t('Channel ID'),
      'field types' => array('brighttalk_channel'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 *
 */
function brighttalk_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {

  $element += array(
    '#delta' => $delta,
  );

  switch ($instance['widget']['type']) {
    case 'brighttalk_embed':

      $element['brighttalk_field'] = array(
        '#title' => $element['#title'],
        '#type' => 'fieldset',
        '#description' => $element['#description'],
      );

      $embed_default = isset($instance['default_value'][$delta]['brighttalk_field']['embed']) ? $instance['default_value'][$delta]['brighttalk_field']['embed'] : '';

      $element['brighttalk_field']['embed'] = array(
        '#title' => t('Embed Code'),
        '#type' => 'textarea',
        '#default_value' => empty($items[$delta]['embed']) ? $embed_default : $items[$delta]['embed'],
        '#required' => $element['#required']
      );

      $input = isset($form_state['input'][$instance['field_name']][$langcode][$delta]['brighttalk_field']['embed']) ? $form_state['input'][$instance['field_name']][$langcode][$delta]['brighttalk_field']['embed'] : '';

      if (!empty($input)) {
        $channel_id = brighttalk_field_webcast_code_value($input, 'channelid');
        $webcast_id = brighttalk_field_webcast_code_value($input, 'communicationid');
      }
      elseif (!empty($embed_default)) {
        $channel_id = brighttalk_field_webcast_code_value($embed_default, 'channelid');
        $webcast_id = brighttalk_field_webcast_code_value($embed_default, 'communicationid');
      }
      else {
        $channel_id = '';
        $webcast_id = '';
      }

      $element['brighttalk_field']['channel_id'] = array(
        '#type' => 'value',
        '#default_value' => $channel_id,
      );

      $element['brighttalk_field']['webcast_id'] = array(
        '#type' => 'value',
        '#default_value' => $webcast_id,
      );

      break;
    case 'brighttalk_channel_and_webcast':

      $element['brighttalk_field'] = array(
        '#title' => $element['#title'],
        '#type' => 'fieldset',
        '#description' => $element['#description'],
      );

      $channel_id_default = isset($instance['default_value'][$delta]['brighttalk_field']['channel_id']) ? $instance['default_value'][$delta]['brighttalk_field']['channel_id'] : '';


      $element['brighttalk_field']['channel_id'] = array(
        '#title' => t('Channel ID'),
        '#type' => 'textfield',
        '#default_value' => empty($items[$delta]['channel_id']) ? $channel_id_default : $items[$delta]['channel_id'],
        '#required' => $element['#required']
      );

      $webcast_id_default = isset($instance['default_value'][$delta]['brighttalk_field']['webcast_id']) ? $instance['default_value'][$delta]['brighttalk_field']['webcast_id'] : '';


      $element['brighttalk_field']['webcast_id'] = array(
        '#title' => t('Webcast ID'),
        '#type' => 'textfield',
        '#default_value' => empty($items[$delta]['webcast_id']) ? $webcast_id_default : $items[$delta]['webcast_id'],
        '#description' => $element['#description'],
        '#required' => $element['#required']
      );

      $element['brighttalk_field']['embed'] = array(
        '#type' => 'value',
        '#default_value' => '',
      );

      break;
    case 'brighttalk_channel':

      $element['brighttalk_field'] = array(
        '#title' => $element['#title'],
        '#type' => 'fieldset',
        '#description' => $element['#description'],
      );

      $channel_id_default = isset($instance['default_value'][$delta]['brighttalk_field']['channel_id']) ? $instance['default_value'][$delta]['brighttalk_field']['channel_id'] : '';

      $element['brighttalk_field']['channel_id'] = array(
        '#title' => t('Channel ID'),
        '#type' => 'textfield',
        '#default_value' => empty($items[$delta]['channel_id']) ? $channel_id_default : $items[$delta]['channel_id'],
        '#required' => $element['#required']
      );

      $element['brighttalk_field']['embed'] = array(
        '#type' => 'value',
        '#default_value' => '',
      );

      $element['brighttalk_field']['webcast_id'] = array(
        '#type' => 'value',
        '#default_value' => 0,
      );
      break;
  }

  return $element;
}

/**
 * Implements hook_field_validate().
 *
 */
function brighttalk_field_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {

  foreach ($items as $delta => $item) {

    switch ($instance['widget']['type']) {
      case 'brighttalk_embed':

        if (!empty($item['embed'])) {
          $channel = brighttalk_field_webcast_code_value($item['embed'], 'channelid');
          $webcast = brighttalk_field_webcast_code_value($item['embed'], 'communicationid');

          if (empty($channel) || !is_numeric($channel)) {

            $errors[$field['field_name']][$langcode][$delta][] = array(
              'error' => 'brighttalk_field_invalid',
              'message' => t('BrightTalk embed code is missing the channel ID.'),
            );
          }

          if (empty($webcast) || !is_numeric($webcast)) {

            $errors[$field['field_name']][$langcode][$delta][] = array(
              'error' => 'brighttalk_field_invalid',
              'message' => t('BrightTalk embed is missing the webcast ID.'),
            );
          }

        }

        break;
      case 'brighttalk_channel':
        if (!empty($item['channel']) && !is_numeric($item['channel'])) {

          $errors[$field['field_name']][$langcode][$delta][] = array(
            'error' => 'brighttalk_field_invalid',
            'message' => t('Channel ID must be a number.'),
          );
        }
        break;

    }
  }
}

/**
 * Implements hook_field_is_empty().
 */
function brighttalk_field_field_is_empty($item, $field) {
  if ($field['type'] == 'brighttalk_webcast') {
    return (empty($item['brighttalk_field']['channel_id']) || empty($item['brighttalk_field']['webcast_id']));
  }

  if ($field['type'] == 'brighttalk_channel') {
    return (empty($item['brighttalk_field']['channel_id']));
  }

}

/**
 * Implements hook_field_insert().
 */
function brighttalk_field_field_insert($entity_type, $entity, $field, $instance, $langcode, &$items) {
  foreach ($items as $delta => $value) {
    _brighttalk_field_process($items[$delta], $delta, $field, $entity);
  }
}

/**
 * Implements hook_field_update().
 */
function brighttalk_field_field_update($entity_type, $entity, $field, $instance, $langcode, &$items) {
  foreach ($items as $delta => $value) {
    _brighttalk_field_process($items[$delta], $delta, $field, $entity);
  }
}

/**
 * Prepares the item attributes and url for storage.
 */
function _brighttalk_field_process(&$item, $delta = 0, $field, $entity) {

  if (isset($item['brighttalk_field']['embed'])) {
    $item['embed'] = $item['brighttalk_field']['embed'];
  }

  if (isset($item['brighttalk_field']['channel_id'])) {
    $item['channel_id'] = $item['brighttalk_field']['channel_id'];
  }

  if (isset($item['brighttalk_field']['webcast_id'])) {
    $item['webcast_id'] = $item['brighttalk_field']['webcast_id'];
  }

}

/**
 * Implements hook_field_formatter_info().
 */
function brighttalk_field_field_formatter_info() {
  return array(
    'brighttalk_embed' => array(
      'label' => t('Embed Code'),
      'field types' => array('brighttalk_webcast'),
    ),
    'brighttalk_channel_and_webcast' => array(
      'label' => t('Channel & Webcast ID'),
      'field types' => array('brighttalk_webcast'),
    ),
    'brighttalk_channel' => array(
      'label' => t('Channel ID'),
      'field types' => array('brighttalk_channel'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 */
function brighttalk_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'brighttalk_embed':
      foreach ($items as $delta => $item) {
        $element[$delta]['#markup'] = brighttalk_field_player_embed_code($item['channel_id'], $item['webcast_id']);
      }

      break;
    case 'brighttalk_channel':
      foreach ($items as $delta => $item) {
        $element[$delta]['#markup'] = brighttalk_field_player_embed_code($item['channel_id']);
      }

      break;
  }

  return $element;
}

/**
 *  Grab parameter values from embed code so it can be validated and sanitised.
 *
 **/
function brighttalk_field_webcast_code_value($embed_code, $parameter) {
  if (empty($embed_code)) {
    return NULL;
  }

  $delimiter = '<param name="' . $parameter . '" value="';
  $parts_start = explode($delimiter, $embed_code);

  if (!isset($parts_start[1])) {
    return NULL;
  }

  $parts = explode('"', $parts_start[1]);

  if (!isset($parts[0]) || empty($parts[0]) || !is_numeric($parts[0])) {
    return NULL;
  }

  $value = $parts[0];
  return $value;
}

/**
 * Embed code for player with validated parameter values.
 *
 **/
function brighttalk_field_player_embed_code($channel, $webcast = FALSE) {
  // Channel ID is always used, make sure we have a number.
  if (empty($channel) || !is_numeric($channel)) {
    return '';
  }

  // If displaying a channel, a webcast ID is not needed.
  // If displaying a webcast, make sure webcast ID is a number.
  if ($webcast ==! FALSE && (empty($webcast) || !is_numeric($webcast))) {
    return '';
  }

  $markup = '<script type="text/javascript" src="http://www.brighttalk.com/clients/js/embed/embed.js"></script>
             <object class="BrightTALKEmbed" width="705" height="660">
             <param name="player" value="channel_player"/>
             <param name="domain" value="http://www.brighttalk.com"/>';

  $markup .= '<param name="channelid" value="' . $channel . '"/>';

  if (!empty($webcast)) {
    $markup .= '<param name="communicationid" value="' . $webcast . '"/>';
  }

  $markup .= '<param name="autoStart" value="false"/>
              </object>';

  return $markup;
}

