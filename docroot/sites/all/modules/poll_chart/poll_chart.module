<?php
/**
 * @file
 * Provides primary Drupal hook implementations.
 *
 * @author CSÉCSY László ("Boobaa", http://drupal.org/user/199303)
 * @package Chart
 */

/**
 * Implements hook_block_info().
 */
function poll_chart_block_info() {
  $return = array();
  $return['poll chart block'] = array(
    'info' => t('Poll chart'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $return;
}

/**
 * Implements hook_block_configure().
 */
function poll_chart_block_configure($delta = '') {
  $form = array();
  switch ($delta) {
    case 'poll chart block':
      $form['poll_chart_type'] = array(
        '#type' => 'select',
        '#title' => t('Chart type'),
        '#options' => chart_types(),
        '#default_value' => variable_get('poll_chart_type', CHART_TYPE_LINE),
      );
      $form['poll_chart_title'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display poll title in chart image'),
        '#description' => t('If you want poll title only in the chart image and not as block title, enter <em>&lt;none&gt;</em> above in the <strong>Block title</strong> field.'),
        '#default_value' => variable_get('poll_chart_title', 0),
      );
      $form['poll_chart_latest'] = array(
        '#type' => 'select',
        '#title' => t('Which poll should be displayed as a chart'),
        '#options' => array(
          1 => t('Latest'),
          2 => t('Second latest'),
          3 => t('Third latest'),
          4 => t('Fourth latest'),
          5 => t('Fifth latest'),
        ),
        '#default_value' => variable_get('poll_chart_latest', 1),
      );
      $form['poll_chart_width'] = array(
        '#type' => 'textfield',
        '#title' => t('Width of the displayed chart in pixels'),
        '#required' => TRUE,
        '#default_value' => variable_get('poll_chart_width', 210),
        '#element_validate' => array('element_validate_integer_positive'),
      );
      $form['poll_chart_height'] = array(
        '#type' => 'textfield',
        '#title' => t('Height of the displayed chart in pixels'),
        '#required' => TRUE,
        '#element_validate' => array('element_validate_integer_positive'),
        '#default_value' => variable_get('poll_chart_height', 210),
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function poll_chart_block_save($delta = '', $edit = array()) {
  $form = array();
  switch ($delta) {
    case 'poll chart block':
      variable_set('poll_chart_type', $edit['poll_chart_type']);
      variable_set('poll_chart_title', $edit['poll_chart_title']);
      variable_set('poll_chart_latest', $edit['poll_chart_latest']);
      variable_set('poll_chart_width', (int) $edit['poll_chart_width']);
      variable_set('poll_chart_height', (int) $edit['poll_chart_height']);
      break;
  }
  return $form;
}

/**
 * Implements hook_block_view().
 */
function poll_chart_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'poll chart block':
      $query = new EntityFieldQuery();
      $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'poll')
        ->propertyCondition('status', 1)
        ->propertyOrderBy('created', 'DESC')
        ->range(variable_get('poll_chart_latest', 1) - 1, 1);
      $result = $query->execute();

      if (!isset($result['node'])) {
        return $block;
      }
      $poll_nids = array_keys($result['node']);
      $node = node_load($poll_nids[0]);

      $block['subject'] = check_plain($node->title);
      $block['content'] = array(
        '#theme' => 'chart',
        '#title' => variable_get('poll_chart_title', 0) ? $node->title : NULL,
        '#type' => variable_get('poll_chart_type', CHART_TYPE_LINE),
        '#chart_id' => 'poll chart block #' . $node->nid,
        '#size' => chart_size(variable_get('poll_chart_width', 210), variable_get('poll_chart_height', 210)),
        '#data' => array(
        ),
        '#labels' => array(
        ),
      );
      foreach ($node->choice as $choice) {
        $block['content']['#data'][] = $choice['chvotes'];
        $block['content']['#labels'][] = $choice['chtext'];
      }
      break;
  }
  return $block;
}