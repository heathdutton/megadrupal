<?php
/**
 * @file
 * Code for the cm_agenda.
 */

include_once 'cm_agenda.features.inc';

/**
 * Implements hook_form_alter().
 */
function cm_agenda_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'media_event_form') {
    $form['field_media_event_media_ref'][LANGUAGE_NONE][0]['target_id']['#required'] = TRUE;
    $form['field_media_event_title'][LANGUAGE_NONE][0]['value']['#required'] = FALSE;
    $form['field_media_event_end'][LANGUAGE_NONE][0]['value']['#required'] = FALSE;
    $form['field_media_event_text'][LANGUAGE_NONE][0]['value']['#type'] = 'hidden';

    $state_speaker = array('select[name="field_media_event_type[und]"]' => array('value' => 'cm_agenda_speaker'));
    $state_chapter = array('select[name="field_media_event_type[und]"]' => array('value' => 'cm_agenda_chapter'));
    $form['field_media_event_longtext']['#states'] = array(
      'enabled' => $state_chapter,
      'invisible' => $state_speaker,
    );
    $form['field_media_event_title']['#states'] = array(
      'enabled' => $state_chapter,
      'invisible' => $state_speaker,
      'required' => $state_chapter,
    );
    $form['field_cm_agenda_speaker']['#states'] = array(
      'enabled' => $state_speaker,
      'invisible' => $state_chapter,
      'required' => $state_speaker,
    );

    // Reorder fields.
    $form['field_media_event_type']['#weight'] = 1;
    $form['field_media_event_media_ref']['#weight'] = 2;
    $form['field_media_event_title']['#weight'] = 3;
    $form['field_media_event_longtext']['#weight'] = 4;
    $form['field_media_event_start']['#weight'] = 30;
    $form['field_media_event_end']['#weight'] = 31;
  }
}

/**
 * Implements hook_entity_presave().
 */
function cm_agenda_entity_presave($entity, $type) {
  if ('media_event' != $type) {
    return;
  }

  // Speaker -> title.
  if ($entity->field_media_event_type[LANGUAGE_NONE][0]['value'] == 'cm_agenda_speaker') {
    if (!empty($entity->field_cm_agenda_speaker[LANGUAGE_NONE][0]['name'])) {
      $entity->field_media_event_title[LANGUAGE_NONE][0]['value'] = $entity->field_cm_agenda_speaker[LANGUAGE_NONE][0]['name'];
    }
  }
}

/**
 * Implements hook_permission().
 */
function cm_agenda_permission() {
  return array('administer agendas' => array(
      'title' => t('Administer Agendas'),
      'description' => t('Permission for administrating agendas'),
    ));
}

/**
 * Implements hook_theme().
 */
function cm_agenda_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['node__cm_agenda'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'cm-agenda',
    'path' => drupal_get_path('module', 'cm_agenda') . '/templates',
  );
  return $theme;
}

/**
 * Implements template_preprocess_node().
 */
function cm_agenda_preprocess_node(&$var) {
  if ($var['type'] != 'cm_agenda') {
    return;
  }
  drupal_add_js(drupal_get_path('module', 'cm_agenda') . '/enscroll.js');
  drupal_add_js(drupal_get_path('module', 'cm_agenda') . '/cm_agenda.js');
  drupal_add_css(drupal_get_path('module', 'cm_agenda') . '/css/cm_agenda.css');
  $var['video'] = field_view_field('node', $var['node'], 'field_cm_agenda_video', 'default');
  $var['description'] = field_view_field('node', $var['node'], 'field_cm_agenda_description', 'default');
  $var['classes_array'][] = 'cm-agenda-presenter';

  if (!empty($var['node']->field_cm_agenda_video[LANGUAGE_NONE][0]['fid'])) {
    $fid = $var['node']->field_cm_agenda_video[LANGUAGE_NONE][0]['fid'];
    $chapters = cm_agenda_media_chapter_events($fid);
    $var['chapters'] = $chapters;
  }
}

/**
 * Get all speaker events for an agenda.
 */
function cm_agenda_media_speaker_events($fid) {
  $events = cm_agenda_media_events($fid, 'cm_agenda_speaker');
  return $events;
}

/**
 * Get all chapter events for an agenda.
 */
function cm_agenda_media_chapter_events($fid) {
  $events = cm_agenda_media_events($fid, 'cm_agenda_chapter');
  return $events;
}

/**
 * Get all events for an agenda.
 */
function cm_agenda_media_events($fid, $type = NULL) {
  // @TODO: Cache result

  // Get all events for the agendas file.
  $query = db_select('field_data_field_media_event_media_ref', 'f');
  $query->condition('f.field_media_event_media_ref_target_id', $fid);
  $query->fields('f', array('entity_id'));

  if (!empty($type)) {
    // With chapter type.
    $query->innerJoin('field_data_field_media_event_type', 't', 'f.entity_id = t.entity_id');
    $query->condition('t.field_media_event_type_value', $type);
  }
  // InnerJoin start time.
  $query->leftJoin('field_data_field_media_event_start', 's', 'f.entity_id = s.entity_id');

  // InnerJoin weight time.
  $query->leftJoin('field_data_field_media_event_weight', 'w', 'f.entity_id = w.entity_id');

  // Sort by start time.
  $query->orderBy('ISNULL(s.field_media_event_start_value)', 'ASC');
  $query->orderBy('s.field_media_event_start_value', 'ASC');
  $query->orderBy('ISNULL(w.field_media_event_weight_value)', 'ASC');
  $query->orderBy('w.field_media_event_weight_value', 'ASC');
  $query->orderBy('f.entity_id');

  $result = $query->execute();
  $eids = $result->fetchCol();

  $events = entity_load('media_event', $eids);
  foreach ($events as &$event) {
    $event->title = !empty($event->field_media_event_title[LANGUAGE_NONE][0]['safe_value']) ? $event->field_media_event_title[LANGUAGE_NONE][0]['safe_value'] : '';
  }
  return $events;
}
