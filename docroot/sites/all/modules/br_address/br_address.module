<?php

/**
 * @file
 * Main file for the brazilian address module.
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function br_address_ctools_plugin_directory($module, $plugin) {
  if ($module == 'addressfield') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_menu().
 */
function br_address_menu() {
  $items['br-address/autocomplete'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'br_address_autocomplete',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Callback for autocomplete of cities names.
 *
 * @param string $string
 *   Starting part of city name
 */
function br_address_autocomplete($string = '') {
  $matches = array();
  if ($string) {
    $result = db_select('br_cities')
      ->fields('br_cities', array('name', 'state'))
      ->condition('name', db_like($string) . '%', 'LIKE')
      ->range(0, 10)
      ->execute();
    foreach ($result as $city) {
      $matches[$city->name] = check_plain($city->name . ', ' . $city->state);
    }
  }
  drupal_json_output($matches);
}

/**
 * Implements hook_form_FORM_ID_alter() for field_ui_field_edit_form().
 */
function br_address_form_field_ui_field_edit_form_alter(&$form, &$form_state) {

  if ($form['#field']['type'] == 'addressfield') {

    $br_address_options = array(
      '#type' => 'fieldset',
      '#title' => t('Brazilian address options'),
      '#states' => array(
        'invisible' => array(
          ':input[name="instance[widget][settings][format_handlers][br-address]"]' => array('checked' => FALSE),
        ),
      ),
    );
    $br_address_options['autocomplete_city'] = array(
      '#type' => 'checkbox',
      '#title' => t('Autocomplete city'),
      '#description' => t('Enable the autocomplete for the city field.'),
    );
    $br_address_options['cep_query'] = array(
      '#type' => 'checkbox',
      '#title' => t('Postal code querying'),
      '#description' => t('Enable address search by postal code on Correios site (http://m.correios.com.br/).')
      . ' ' . t('This will bring the postal code field to the top of form'),
    );

    // Set up the default values.
    $settings = $form['#instance']['widget']['settings'];
    if (isset($settings['br_address_options'])) {
      foreach (array('autocomplete_city', 'cep_query') as $option) {
        $br_address_options[$option]['#default_value'] = $settings['br_address_options'][$option];
      }
    }

    $form['instance']['widget']['settings']['br_address_options'] = $br_address_options;
  }
}
