<?php
/**
 * @file
 * Installation file for Taxonomy MPTT.
 */

/**
 * Implements hook_uninstall().
 *
 * Clean up after ourselves.
 */
function taxonomy_nested_intervals_uninstall() {
  variable_del('taxonomy_nested_intervals_rebuild_safe_sibling');
  $variables = db_query("SELECT * FROM {variable} WHERE name LIKE 'taxonomy_nested_intervals_%'");
  foreach ($variables as $variable) {
    if (preg_match('/^taxonomy_nested_intervals_(class|enabled|factor|invalid|scale|sort)_\d+$/', $variable->name)) {
      variable_del($variable->name);
    }
  }
}

/**
 * Implements hook_schema().
 */
function taxonomy_nested_intervals_schema() {
  $schema['taxonomy_nested_intervals'] = array(
    'description' => 'Nested sets for taxonomies.',
    'fields' => array(
      'id' => array(
        'description' => 'Unique ID',
        'type' => 'serial',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'Vocabulary ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'tid' => array(
        'description' => 'Term ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'parent' => array(
        'description' => 'Parent term ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'nv' => array(
        'description' => 'Left numerator value',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'dv' => array(
        'description' => 'Left denominator value',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'snv' => array(
        'description' => 'Right numerator value (next sibling)',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'sdv' => array(
        'description' => 'Right denominator value (next sibling)',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'distance' => array(
        'description' => 'Distance to root',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0
      ),
      'lft' => array(
        'description' => 'Materialized left value',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'rgt' => array(
        'description' => 'Materialized right value',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'buffer_nv' => array(
        'description' => 'Buffer numerator',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'buffer_snv' => array(
        'description' => 'Buffer sibling numerator',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'rebuild_id' => array(
        'description' => 'Rebuild ID',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'idx_scope' => array('vid', 'lft', 'distance'),
      'idx_term' => array('tid', 'distance'),
      'idx_depth' => array('vid', 'distance'),
      'idx_rebuild' => array('rebuild_id'),
    ),
  );
  $schema['taxonomy_nested_intervals_rebuild'] = array(
    'description' => 'Nested sets for taxonomies (rebuild buffer).',
    'fields' => array(
      'id' => array(
        'description' => 'Unique ID',
        'type' => 'serial',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'parent_id' => array(
        'description' => 'Parent Unique ID',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => 'Vocabulary ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'tid' => array(
        'description' => 'Term ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'parent' => array(
        'description' => 'Parent term ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'distance' => array(
        'description' => 'Distance to root',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0
      ),
      'nv' => array(
        'description' => 'Left numerator value',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'dv' => array(
        'description' => 'Left denominator value',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'snv' => array(
        'description' => 'Right numerator value (next sibling)',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'sdv' => array(
        'description' => 'Right denominator value (next sibling)',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
      'sibling' => array(
        'description' => 'Sibling enumerator',
        'type' => 'numeric',
        'precision' => '65',
        'scale' => '30',
        'not null' => TRUE,
        'default' => 0
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'idx_depth' => array('vid', 'distance'),
      'idx_parent' => array('vid', 'parent_id'),
    ),
  );
  return $schema;
}
