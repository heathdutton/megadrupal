<?php
/**
 * @file
 *
 * Integration with Views using Taxonomy Nested Intervals.
 *
 * Overrides the depth arguments and uses Taxonomy Nested Intervals for these.
 * This now allows using 'all' as a depth argument.
 */

/**
 Implements hook_views_api().
 */
function views_taxonomy_nested_intervals_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_views_data_alter().
 */
function views_taxonomy_nested_intervals_views_data_alter(&$data) {
  // Override term_node logic
  $data['node']['term_node_tid_depth'] = array(
    'help' => t('Display content if it has the selected taxonomy terms, or children of the selected terms. Due to additional complexity, this has fewer options than the versions without depth.'),
    'real field' => 'nid',
    'argument' => array(
      'title' => t('Has taxonomy term ID (with depth)'),
      'handler' => 'views_handler_argument_nested_intervals_node_tid_depth',
      'accept depth modifier' => TRUE,
    ),
    'filter' => array(
      'title' => t('Has taxonomy terms (with depth)'),
      'handler' => 'views_handler_filter_nested_intervals_node_tid_depth',
    ),
  );

  $data['node']['term_node_tid_depth_modifier'] = array(
    'title' => t('Has taxonomy term ID depth modifier'),
    'help' => t('Allows the "depth" for Taxonomy: Term ID (with depth) to be modified via an additional contextual filter value.'),
    'argument' => array(
      'handler' => 'views_handler_argument_nested_intervals_node_tid_depth_modifier',
    ),
  );

  // Tell taxonomy_term_data how to join with the nested_intervals tables
  $data['taxonomy_term_data']['table']['join']['taxonomy_nested_intervals'] = array(
    'field' => 'tid',
    'left_field' => 'tid',
    'type' => 'INNER',
    'handler' => 'views_join_nested_intervals',
  );

  // Hierarchy sort handler.
  $data['taxonomy_term_data']['taxonomy_nested_intervals_sort_hierarchy'] = array(
    'group' => t('Taxonomy Nested Intervals'),
    'title' => t('taxonomy hierarchy order'),
    'help' => t('Sort by hierarchy order'),
    'sort' => array(
      'handler' => 'views_handler_sort_nested_intervals_hierarchy',
    ),
  );
}
