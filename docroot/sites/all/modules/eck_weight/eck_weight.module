<?php

/**
 * @file
 * Eck Weight module file.
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function eck_weight_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'eck' && $plugin_type == 'property_behavior') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_eck_default_properties().
 */
function eck_weight_eck_default_properties() {
  return array(
    'weight' => array(
      'label' => 'Weight',
      'type' => 'integer',
      'behavior' => 'weight',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function eck_weight_menu() {
  $items = array();
  $path = eck__entity_type__path();
  // @TODO: Enable this per entity bundle via a config form.
  foreach (EntityType::loadAll() as $entity) {
    if (!eck_weight_get_weigh_property($entity)) {
      continue;
    }
    foreach (Bundle::loadByEntityType($entity) as $bundle) {
      $items["{$path}/{$entity->name}/{$bundle->name}/weight"] = array(
        'title' => 'Weight',
        'description' => 'Weight',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('eck_weight_form', $entity, $bundle),
        'access arguments' => array('eck administer entity types'),
        'file' => 'eck_weight.admin.inc',
        'type' => MENU_LOCAL_TASK,
        'weight' => 10,
      );
    }
  }

  return $items;
}

/**
 * Helper function to get the property using 'weight' behavior.
 *
 * @param object $entity_type
 *   ECK Entity type object.
 *
 * @return string
 *   The property name, or false when no property exists.
 */
function eck_weight_get_weigh_property($entity_type) {
  if ($entity_type->properties) {
    foreach ($entity_type->properties as $property => $data) {
      if (isset($data['behavior']) && $data['behavior'] == 'weight') {
        return $property;
      }
    }
  }
  return FALSE;
}

/**
 * Implements hook_theme().
 *
 * We need run our forms through custom theme functions in order to build the
 * table structure which is required by tabledrag.js.  Before we can use our
 * custom theme functions, we need to implement hook_theme in order to register
 * them with Drupal.
 *
 * We are defining our theme hooks with the same name as the form generation
 * function so that Drupal automatically calls our theming function when the
 * form is displayed.
 */
function eck_weight_theme() {
  return array(
    // Theme function for the 'simple' example.
    'eck_weight_form' => array(
      'render element' => 'form',
      'file' => 'eck_weight.admin.inc',
    ),
  );
}
