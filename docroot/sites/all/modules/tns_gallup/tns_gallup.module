<?php

/**
 * @file
 * TNS Gallup module.
 *
 * Adds the required Javascript to the bottom of all your Drupal pages
 * to add the TNS Gallup script.
 *
 * Code heavily inspired by the SnapEngage module,
 * http://drupal.org/project/snapengage.
 */

/**
 * Implements hook_menu().
 */
function tns_gallup_menu() {
  $items = array();

  $items['admin/config/system/tns-gallup'] = array(
    'title' => 'TNS Gallup',
    'description' => 'Configure the settings used to add a TNS Gallup script to your site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tns_gallup_admin_settings_form'),
    'access arguments' => array('administer tns gallup'),
    'file' => 'tns_gallup.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function tns_gallup_permission() {
  return array(
    'administer tns gallup' => array(
      'title' => t('Administer TNS Gallup'),
      'description' => t('Perform administration tasks for TNS Gallup'),
    ),
    'use PHP for TNS Gallup visibility' => array(
      'title' => t('Use PHP for TNS Gallup visibility'),
      'description' => t('Enter PHP code in the field for TNS Gallup visibility settings. %warning', array('%warning' => t('Warning: Give to trusted roles only; this permission has security implications.'))),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function tns_gallup_libraries_info() {
  return array(
    'tns_gallup_spring' => array(
      'name' => t('TNS Gallup sprint.js'),
      'vendor' => 'http://tns-gallup.dk',
      'download url' => 'http://www.tns-gallup.dk/iam/dokumenter/spring.js.zip',
      'files' => array(
        'js' => array(
          'spring.js',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_page_build().
 *
 * Inserts JavaScript at the end of the page.
 */
function tns_gallup_page_build(&$page) {
  global $user;
  $site_id = check_plain(variable_get('tns_gallup_site_id', ''));
  $spring_js = libraries_get_path('tns_gallup_spring') . '/spring.js';

  // 1. Check if the TNS Gallup site id has a value.
  // 2. Track page views based on visibility value.
  // 3. Check if we should track the currently active user's role.
  if (file_exists($spring_js) && !empty($site_id) && _tns_gallup_visibility_pages() && _tns_gallup_visibility_roles($user)) {
    $content_path = _tns_gallup_get_content_path($site_id);
    $page['page_bottom']['tns_gallup'] = tns_gallup_spring_render_array($site_id, $content_path);
  }
}

/**
 * Get the content path for the script.
 */
function _tns_gallup_get_content_path($site_id) {
  $content_path = $site_id;

  drupal_alter('tns_gallup_content_path', $content_path);

  return $content_path;
}

/**
 * Determine visibility based on roles.
 *
 * Based on visibility setting this function returns TRUE if the
 * current role must see the TNS Gallup code and otherwise FALSE.
 *
 * @param object $account
 *   The user account to check visibility for.
 *
 * @return bool
 *   Whether account should include the script or not.
 */
function _tns_gallup_visibility_roles($account) {

  $enabled = FALSE;
  $roles = variable_get('tns_gallup_roles', array());

  if (array_sum($roles) > 0) {
    // Loop the roles selected for including the script.
    foreach (array_keys($account->roles) as $rid) {
      // Is the current user a member of one role enabled for tracking?
      if (isset($roles[$rid]) && $rid == $roles[$rid]) {
        // Current user is a member of a role that must include the TNS Gallup
        // script.
        $enabled = TRUE;
        break;
      }
    }
  }
  else {
    // No roles selected for tracking, therefor the script should be included
    // for all roles.
    $enabled = TRUE;
  }

  return $enabled;
}

/**
 * Determine visibility based on path.
 *
 * Based on visibility setting this function returns TRUE if the
 * current page must include the TNS Gallup code and otherwise FALSE.
 *
 * @return bool
 *   Whether page should include the script or not.
 */
function _tns_gallup_visibility_pages() {
  $page_match = &drupal_static(__FUNCTION__);

  // Cache visibility setting in hook_init for hook_footer.
  if (!isset($page_match)) {

    $visibility = variable_get('tns_gallup_visibility', 0);
    $pages = variable_get('tns_gallup_pages', '');

    // Match path if necessary.
    if (!empty($pages)) {
      if ($visibility < 2) {
        $internal_path = current_path();
        $path = drupal_get_path_alias($internal_path);
        // Compare with the internal and path alias (if any).
        $page_match = drupal_match_path($path, $pages);
        if ($path != $internal_path) {
          $page_match = $page_match || drupal_match_path($internal_path, $pages);
        }
        // When $visibility has a value of 0, display the block on all
        // pages except those listed in $pages. When set to 1, display
        // it only on those pages listed in $pages.
        $page_match = !($visibility xor $page_match);
      }
      elseif (module_exists('php')) {
        $page_match = php_eval($pages);
      }
      else {
        $page_match = FALSE;
      }
    }
    else {
      $page_match = TRUE;
    }

  }
  return $page_match;
}

/**
 * Build render array with TNS Gallup spring tags.
 *
 * @param string $site_id
 *   The TNS Gallip site ID to use in the tag.
 * @param string $content_path
 *   The content path to use in the tag.
 *
 * @return array
 *   The render array containing noscript tag and header and footer scripts.
 */
function tns_gallup_spring_render_array($site_id, $content_path) {
  // Build the header script.
  $header_script = <<<EOT
var springq = springq || [];
springq.push({
  "s":"{$site_id}",
  "cp":"{$content_path}",
  "url": document.location.href
});
EOT;

  // Build the footer script.
  $js_script = libraries_get_path('tns_gallup_spring', TRUE) . '/spring.js';

  $footer_script = <<<EOT
(function() {
  var scr = document.createElement('script');
  scr.type = 'text/javascript'; scr.async = true;
  scr.src = '{$js_script}';
  var s = document.getElementsByTagName('script')[0];
  s.parentNode.insertBefore(scr, s);
})();
EOT;

  // Build the image src for the image in the noscript tag.
  //
  // Encode the absolute URL of the current page. Special handling for the
  // frontpage because of the way url() works.
  if (drupal_is_front_page()) {
    $encoded_url = urlencode(url('<front>', array('absolute' => TRUE)));
  }
  else {
    $encoded_url = urlencode(url(current_path(), array('absolute' => TRUE)));
  }

  global $is_https;
  $scheme = $is_https ? 'https://ssl-' : 'http://';
  $image_src = "{$scheme}{$site_id}.tns-gallup.dk/j0=,,,;+,cp={$content_path}+url={$encoded_url};;;";

  // Build the image tag to go inside the noscript tag.
  $img = array(
    '#tag' => 'img',
    '#attributes' => array(
      'src' => $image_src,
      'alt' => '',
    ),
    '#type' => 'html_tag',
  );

  // Build the render array containing noscript tag and header and footer
  // scripts attached.
  $tns_gallup_spring = array(
    '#tag' => 'noscript',
    '#value' => drupal_render($img),
    '#type' => 'html_tag',
    '#attached' => array(
      'js' => array(
        $header_script => array(
          'type' => 'inline',
          'scope' => 'header',
        ),
        $footer_script => array(
          'type' => 'inline',
          'scope' => 'footer',
        ),
      ),
    ),
  );

  // Finally return it.
  return $tns_gallup_spring;
}
