<?php

/**
 * @file
 * Provides Webform integration with Nimble CRM.
 */

/**
 * Implements hook_menu().
 */
function nimble_crm_webform_menu() {

  $items = array();
  $items['node/%webform_menu/webform/nimble-crm'] = array(
    'title' => 'Nibmle CRM',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nimble_crm_webform_settings_form', 1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'file' => 'nimble_crm_webform.admin.inc',
    'weight' => 6,
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function nimble_crm_webform_form_webform_component_edit_form_alter(&$form, $form_state) {

  $component = $form_state['build_info']['args'][1];

  // Include only webform component types that make sense to send to the Nimble.
  $allowed_types = array('textfield', 'email');
  if (in_array($form['type']['#value'], $allowed_types)) {
    // Add settings for Nimble CRM.
    $form['nimble_crm'] = array(
      '#type' => 'fieldset',
      '#title' => t('Nimble CRM'),
      '#tree' => TRUE,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
    $form['nimble_crm']['nimble_crm_send'] = array(
      '#type' => 'checkbox',
      '#title' => t("Send this field's value to Nimble CRM"),
      '#description' => t('!link to edit Nimble CRM settings.',
        array('!link' => l(t('Click here'), 'node/' . $component['nid'] . '/webform/nimble'))),
      '#default_value' => isset($component['extra']['nimble_crm_send']) ? $component['extra']['nimble_crm_send'] : 0,
    );

    $form['nimble_crm']['nimble_crm_field'] = array(
      '#type' => 'select',
      '#title' => t('Nimble CRM Field'),
      '#description' => t('Specify which field from Nimble CRM corresponds to this field.'),
      '#options' => nimble_crm_field_types(),
      '#default_value' => isset($component['extra']['nimble_crm_field']) ? $component['extra']['nimble_crm_field'] : NULL,
      '#states' => array(
        'visible' => array(
          ':input[name="nimble_crm[nimble_crm_send]"]' => array('checked' => TRUE),
        ),
      ),
    );
  }

}

/**
 * Implements hook_webform_component_presave().
 *
 * Save Nimble CRM settings for a component.
 */
function nimble_crm_webform_webform_component_presave(&$component) {
  if (!empty($component['nimble_crm'])) {
    $component['extra'] = array_merge($component['extra'], $component['nimble_crm']);
    unset($component['nimble_crm']);
  }
}

/**
 * Implements hook_webform_submission_insert().
 *
 * Insert a record into a Nimble CRM when a submission is added.
 */
function nimble_crm_webform_webform_submission_insert($node, $submission) {
  // Check if webform is configured to send data the to Nimble CRM.
  if (!empty($node->webform['nimble_crm_send'])) {
    // Get contact tags from webfrom settings.
    $tags = $node->webform['nimble_crm_tags'];
    // Get processed field values in Nimble CRM format.
    $fields = _nimble_crm_webform_process_fields($node->webform, $submission->data);
    nimble_crm_contact_create($fields, $tags);
  }
}

/**
 * Alter default settings for a newly created webform node.
 *
 * @param array $defaults
 *   Default settings for a newly created webform node as defined by
 *   webform_node_defaults().
 *
 * @see webform_node_defaults()
 */
function nimble_crm_webform_webform_node_defaults_alter(array &$defaults) {
  $defaults['nimble_crm_send'] = 0;
  $defaults['nimble_crm_tags'] = 'contact form';
}

/**
 * Prepares a contact object in Nimble CRM format.
 */
function _nimble_crm_webform_process_fields($webform, $submission) {
  $fields = new stdClass();
  $default_modifier = 'other';
  $empty_modifier = '';

  foreach ($webform['components'] as $key => $component) {
    if (!empty($component['extra']['nimble_crm_send'])) {
      $field_type = $component['extra']['nimble_crm_field'];
      $field = new stdClass();
      // Support structure of submission variable for version 3.x and 4.x.
      $field->value = isset($submission[$key]['value'][0]) ? $submission[$key]['value'][0] : $submission[$key][0];
      $field->modifier = in_array($field_type, array(
        'phone',
        'email',
      )) ? $default_modifier : $empty_modifier;
      $fields->$field_type = array($field);
    }
  }

  $custom_fields = unserialize($webform['nimble_crm_custom_fields']);
  if (!empty($custom_fields[0]['name'])) {
    foreach ($custom_fields as $custom_field) {
      $field_custom = new stdClass();
      $field_custom->value = $custom_field['value'];
      $field_custom->modifier = '';
      $fields->{$custom_field['name']} = array($field_custom);
    }
  }

  return $fields;
}
