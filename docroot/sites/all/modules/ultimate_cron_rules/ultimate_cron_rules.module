<?php

/**
 * @file
 * Provides the ability to ultimate cron rules.
 */

const ULTIMATE_CRON_RULE = 'ultimate_cron';

/**
 * Implements hook_rules_event_info().
 */
function ultimate_cron_rules_rules_event_info() {
  return array(
    ULTIMATE_CRON_RULE => array(
      'label' => t('Ultimate-Cron maintenance tasks are performed'),
      'group' => t('System'),
      'access callback' => 'rules_system_integration_access',
    ),
  );
}

/**
 * Helper function to check if rule should trigger.
 */
function ultimate_cron_rules_is_ultimate_cron_rule(RulesPlugin $rule) {
  return (is_a($rule, 'RulesReactionRule') && in_array(ULTIMATE_CRON_RULE, $rule->events()));
}

/**
 * Helper function to clear cache if need be.
 */
function ultimate_cron_rules_cache_clear(RulesPlugin $rule) {
  if (ultimate_cron_rules_is_ultimate_cron_rule($rule)) {
    // Clear ultimate_cron hooh cache.
    cache_clear_all('ultimate_cron_hooks', 'cache');
  }
}

/**
 * Implements hook_rules_config_insert().
 */
function ultimate_cron_rules_rules_config_insert(RulesPlugin $rule) {
  ultimate_cron_rules_cache_clear($rule);
}

/**
 * Implements hook_rules_config_update().
 */
function ultimate_cron_rules_rules_config_update(RulesPlugin $rule) {
  ultimate_cron_rules_cache_clear($rule);
}

/**
 * Implements hook_rules_config_delete().
 */
function ultimate_cron_rules_rules_config_delete(RulesPlugin $rule) {
  ultimate_cron_rules_cache_clear($rule);
}

/**
 * Implements hook_cronapi().
 */
function ultimate_cron_rules_cronapi() {
  $items = array();
  foreach (ultimate_cron_rules_jobs() as $rule => $label) {
    $items[$rule] = array(
      'title' => t('Rule') . ': ' . $label,
      'callback' => 'ultimate_cron_rules_evaluate',
      'callback arguments' => array($rule),
      'enabled' => FALSE,
      'settings' => array(),
      'tags' => array('rules'),
      'scheduler' => array(
        'name' => 'crontab',
        'crontab' => array(
          'rules' => array('* * * * *'),
        ),
      ),
      'launcher' => array(
        'name' => 'serial',
        'serial' => array(
          'thread' => 'any',
        ),
      ),
    );
  }
  return $items;
}

/**
 * List with rules as cron jobs.
 */
function ultimate_cron_rules_jobs() {
  $jobs = &drupal_static(__FUNCTION__);
  if (is_null($jobs)) {
    // Load all ultimate cron rules.
    $rules = rules_config_load_multiple(FALSE, array('plugin' => array('reaction rule'), 'event' => array(ULTIMATE_CRON_RULE)));

    // Populate jobs array.
    foreach ($rules as $rule) {
      $jobs[$rule->name] = $rule->label;
    }
  }
  return $jobs;
}

/**
 * Evaluate rules.
 */
function ultimate_cron_rules_evaluate($job) {
  // Load rule by machine name.
  $rule = rules_config_load($job->name);

  // Evaluate rule if possible.
  if ($rule) {
    $state = $rule->setUpState(array());
    $rule->evaluate($state);
  }

  // TODO: Add logging.
}
