<?php
/**
 * @file
 * Provide field API helper functions.
 *
 * @author Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Install all fields and instances defined by a module.
 *
 * @param $module
 *   Module name.
 */
function field_helper_install_all($module) {
  // Create all fields defined in hook_install_fields().
  $fields = module_invoke($module, 'install_fields');
  foreach ($fields as $field) {
    field_create_field($field);
  }

  // Create all instances defined in hook_install_instances().
  $instances = module_invoke($module, 'install_instances');
  foreach ($instances as $instance) {
    field_create_instance($instance);
  }
}

/**
 * Uninstall all fields and instances defined by a module.
 *
 * Delete and perge all instances and fields defined by a module. All data for
 * the fields instances is expected to be deleted by this point.
 *
 * @param $module
 *   Module name.
 */
function field_helper_uninstall_all($module) {
  $instances = module_invoke($module, 'install_instances');
  foreach ($instances as $instance) {
    // Load the field instance, delete, and purge it. Do not perform field
    // cleanup since that may remove other modules fields if the instance is
    // the last for the particular field.
    $instance = field_info_instance($instance['entity_type'], $instance['field_name'], $instance['bundle']);
    field_delete_instance($instance, FALSE);
    field_purge_instance($instance);
  }

  // Manually remove and perge all fields defined by this module.
  $field_names = array_keys(module_invoke($module, 'install_fields'));
  foreach ($field_names as $field_name) {
    $field = field_info_field($field_name);
    field_delete_field($field_name);
    field_purge_field($field);
  }
}
