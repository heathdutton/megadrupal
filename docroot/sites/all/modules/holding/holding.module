<?php

/**
 * @file holding.module
 *
 * Show a holding page for the specified sites.
 * Example: you wish to develop your site at example.com, while showing a
 * holding page or site to the public.
 * Access Drupal with the IP address to bypass holding completely.
 * If you are on a multisite installation you can specify which domains show
 * holding pages.
 * Access to /user and /admin is always allowed (though the rest of Drupal may
 * of course deny permission).
 */

/**
 * Implementation of hook_boot().
 *
 * Show the holding page if token replacement is not required.
 */
function holding_boot() {
  if (variable_get('holding_parse_tokens', FALSE) == FALSE) {
    holding_page();
  }
}

/**
 * Implementation of hook_init().
 *
 * Show the holding page if token replacement is required.
 */
function holding_init() {
  if (variable_get('holding_parse_tokens', FALSE) == TRUE) {
    holding_page();
  }
}

/**
 * Display the holding page if required.
 *
 * This first checks all the conditions that mean we should bail out and return
 * to normal operation; if we get past all those then display the holding page.
 */
function holding_page() {
  // Allow logged in users through.
  global $user;
  if ($user->uid) {
    return;
  }

  // Allow cron through.
  if (basename($_SERVER['REQUEST_URI']) == 'cron.php') {
    return;
  }

  // Allow drush through.
  if (php_sapi_name() == 'cli') {
    return;
  }

  // Allow login and admin, otherwise you could totally lock yourself out.
  if (!empty($_GET['q'])) {
    list($path_base, ) = explode('/', $_GET['q']);
    if (in_array($path_base, array('admin', 'user'))) {
      return;
    }
  }

  // Now check the requested site.
  $site = substr(conf_path(), 6);
  $server = rtrim($_SERVER['HTTP_HOST'], '.');
  $holding_sites = unserialize(variable_get('holding_sites', ''));
  #print_r($holding_sites);

  if (is_array($holding_sites) && (in_array($site, $holding_sites) || in_array($server, $holding_sites))) {
    $holding_page = variable_get('holding_page', '');

    if (!$holding_page) {
      drupal_set_message(t('No holding page has been set.'), 'warning');
      return;
    }

    $output = file_get_contents($holding_page);

    // If required, parse the holding page for global and user tokens.
    if (variable_get('holding_parse_tokens', FALSE)) {
      $output = token_replace($output);
    }

    drupal_page_header();
    print $output;

    exit;
  }
}

/**
 * Implementation of hook_menu().
 */
function holding_menu() {
  $items['admin/config/development/holding'] = array(
    'title' => 'Holding page',
    'description' => 'Settings for the site domain holding page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('holding_admin'),
    'access arguments' => array('administer system'),
    'file' => 'holding.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}
