<?php

/**
 * Implements hook_install().
 */
function bookit_option_install() {
  db_update('system')
    ->fields(array('weight' => 10))
    ->condition('name', 'bookit_option', '=')
    ->execute();
}

/**
 * Implements hook_modules_uninstalled().
 */
function bookit_option_modules_uninstalled($modules) {
  if (in_array('bookit_cart', $modules)) {
    commerce_delete_field('bookit_option');
  }
}

/**
 * Implements hook_schema().
 */
function bookit_option_schema() {
  $schema = array();

  $schema['bookit_option'] = array(
    'description' => 'The base table for booking options.',
    'fields' => array(
      'option_id' => array(
        'description' => 'The primary identifier for a booking option.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of this booking option.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'The {bookit_option_type}.type of this booking option.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The {languages}.language of this booking option.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid that created this booking option.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the booking option was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the booking option was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('option_id'),
    'indexes' => array(
      'option_type' => array('type'),
      'uid' => array('uid'),
    ),
    'foreign keys' => array(
      'creator' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  $schema['bookit_option_type'] = array(
    'description' => 'Stores information about {bookit_option} types.',
    'fields' => array(
      'type' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
      ),
      'help' => array(
        'description' => 'Help information shown to the user when creating a {bookit_option} of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
      ),
    ),
    'primary key' => array('type'),
  );

  $schema['bookit_option_price'] = array(
    'description' => 'The base table for price per booking option.',
    'fields' => array(
      'item_id' => array(
        'description' => 'The {bookit_item}.item_id that the price is related to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'option_id' => array(
        'description' => 'The option_id that the price is related to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'date' => array(
        'description' => 'The date of this price.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'amount' => array(
        'description' => 'The price amount.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'currency_code' => array(
        'description' => 'The currency code for the price.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'A serialized array of additional price data.',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'serialize' => TRUE,
      ),
    ),
    'indexes' => array(
      'price_item' => array('item_id'),
      'price_option' => array('option_id'),
      'price_date' => array('date'),
      'price_item_date' => array('item_id', 'date'),
      'price_currency' => array('amount', 'currency_code'),
    ),
    'foreign keys' => array(
      'bookit_item' => array(
        'table' => 'bookit_item',
        'columns'=> array('item_id' => 'item_id'),
      ),
      'bookit_option' => array(
        'table' => 'bookit_option',
        'columns'=> array('option_id' => 'option_id'),
      ),
    ),
    'primary key' => array('item_id', 'option_id', 'date'),
  );

  return $schema;
}
