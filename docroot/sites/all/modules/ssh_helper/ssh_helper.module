<?php

/**
 * @file ssh_helper.module
 * Helps to make SSH connections from within PHP to execute commands
 */

/**
 * Implements hook_menu().
 */
function ssh_helper_menu() {
  $items = array();
  $items['admin/config/services/ssh-helper'] = array(
    'title' => t('SSH key parameters'),
    'description' => t('Manage SSH key used to make connections to remote servers.'),
    'access arguments' => array('administer ssh helper'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ssh_helper_settings'),
    'file' => 'ssh_helper.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function ssh_helper_permission() {
  return array(
    'administer ssh helper' => array(
      'title' => t('Administer SSH Helper'),
      'description' => t('Create and administer SSH key pairs for this site.'),
    ),
  );
}


/**
 * Loads the ssh key.
 *
 * @return Crypt_RSA
 * @throws SshHelperException
 */
function ssh_helper_load_key() {
  $ssh_helper = new sshHelper();
  $key = $ssh_helper->loadKey();
  if (!$key) {
    new SshHelperException('Key could not be loaded.', $ssh_helper->getKeyPath());
  }
  return $key;
}

/**
 * Load a SSH object based on a hostname.
 * @param type $hostname
 *   Hostname to connect to.
 * @return Net_SSH2
 */
function ssh_helper_load_ssh($hostname) {
  $ssh_helper = new sshHelper($hostname);
  $ssh = $ssh_helper->getSsh();
  return $ssh;
}

/**
 * Load a SFTP object based on a hostname.
 * @param type $hostname
 *   Hostname to connect to.
 * @return Net_SFTP
 */
function ssh_helper_load_sftp($hostname) {
  $ssh_helper = new sshHelper();
  $sftp = new Net_SFTP($hostname);
  return $sftp;
}

/**
 * Performs SSH login to a given host.
 *
 * @param string $hostname
 *   Hostname to login to.
 * @param string $user
 *   (optional) User to log in as. Defaults to the user provided in the
 *   SSH helper settings.
 * @param Crypt_RSA $key
 *   (optional) Key to use during the SSH login process. Defaults to the
 *   key generated in the SSH helper settings.
 *
 * @return Net_SSH2
 *   Connection class to use to execute commands for example.
 * @throws SshHelperException
 */
function ssh_helper_login_ssh($hostname, $user = NULL, $key = NULL, $ssh = NULL) {
  $ssh_helper = new sshHelper($hostname);
  if (!empty($user)) {
    $ssh_helper->setUser($user);
  }
  if (!empty($key)) {
    $ssh_helper->setKey($key);
  }
  // Allow for other SSH objects to be passed in
  if ($ssh == NULL) {
    // This will be our connection class, hostname is required.
    $ssh = $ssh_helper->getSsh();
  }

  // Check if login worked
  if (!$ssh->login($user, $key)) {
    throw new SshHelperException('SSH login failed');
  }
  return $ssh;
}

/**
 * Directory path where the key is stored.
 */
function ssh_helper_key_path() {
  $ssh_helper = new sshHelper();
  return $ssh_helper->getKeyPath();
}

/**
 * Full path to the key file.
 */
function ssh_helper_key_filepath() {
  $ssh_helper = new sshHelper();
  return $ssh_helper->getKeyFilePath();
}

/**
 * Generates a new pair of keys.
 */
function ssh_helper_generate_keypair() {
  $ssh_helper = new sshHelper();
  $ssh_helper->generateKeypair();
}
