<?php
// $Id: uc_pagosonline.module,v 1.1 2010/10/14 04:03:29 juankvillegas Exp $

/**
 * @file
 * Integrates PagosOnline, a colombian merchant account, with Ubercart
 */

/******************************
 *    Constant Definitions    *
 ******************************/

define('UC_PAGOSONLINE_LIVEURL', 'https://gateway.pagosonline.net/apps/gateway/index.html');
define('UC_PAGOSONLINE_TESTURL', 'https://gateway2.pagosonline.net/apps/gateway/index.html');

/************************
 *     Drupal Hooks     *
 ************************/

/**
 * Implementation of hook_menu().
 */

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_menu() {
  $items['cart/pagosonline/confirmation'] = array(
    'title' => 'PagosOnline Confirmation Page',
    'page callback' => '_uc_pagosonline_confirmation',
    'access callback' => '_uc_pagosonline_access_confirmation',
    'type' => MENU_CALLBACK,
    'file' => 'uc_pagosonline.pages.inc',
    );
  $items['cart/pagosonline/complete'] = array(
    'title' => 'PagosOnline Complete Page',
    'page callback' => '_uc_pagosonline_confirmation',
    'access callback' => '_uc_pagosonline_access_complete',
    'type' => MENU_CALLBACK,
    'file' => 'uc_pagosonline.pages.inc',
    );
  return $items;
}

/**
 * Implementation of hook_form_alter().
 */

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'uc_cart_checkout_review_form' && ($order_id = intval($_SESSION['cart_order'])) > 0) {
    global $language;
    $order = uc_order_load($order_id);
    if ($order->payment_method == 'pagosonline') {
      $data = array(
        'usuarioId' => uc_pagosonline_get_usuario_id(),
        'refVenta' => uc_pagosonline_get_reference($order_id),
        'descripcion' => uc_pagosonline_get_description(),
        'valor' => number_format($order->order_total, 2, '.', ''),
        'iva' => number_format(uc_pagosonline_get_iva($order), 2, '.', ''),
        'baseDevolucionIva' => number_format(uc_pagosonline_get_base($order), 2, '.', ''),
        'firma' => uc_pagosonline_firma(uc_pagosonline_get_usuario_id(), uc_pagosonline_get_reference($order_id), uc_pagosonline_currency_format($order->order_total), uc_pagosonline_get_currency()),
        'emailComprador' => $order->primary_email,
        'prueba' => 1 - uc_pagosonline_get_txn_type(),
        'lng' => array_key_exists($language->language, uc_pagosonline_languages()) ? $language->language : uc_pagosonline_get_language(),
        'moneda' => uc_pagosonline_get_currency(),
        //'valorAdicional'  => 0.00, // Not Implemented
        'nombreComprador' => $order->billing_first_name . ' ' . $order->billing_last_name,
        //'documentoIdentificacion' => '', // Not Implemented
        //'tipoDocumentoIdentificacion' => '', // Not Implemented
        'telefonoMovil' => $order->billing_phone, // It could be a non mobile phone
        'extra1' => $order->billing_street1 . ' ' . $order->billing_street2,
        'extra2' => uc_cart_get_id(FALSE),
        'url_respuesta' => url('cart/pagosonline/complete', array('absolute' => TRUE)),
        'url_confirmacion' => url('cart/pagosonline/confirmation', array('absolute' => TRUE)),
        'tiposMediosDePago' => uc_pagosonline_get_available_payment_types_selected(),
        //'plantilla' => '', // Not Implemented
        //'codigo_pse' => '', // Not Implemented
        'direccionCobro' => $order->billing_street1 . ' ' . $order->billing_street2,
        'ciudadCobro' => $order->billing_city,
        'direccionEnvio' => $order->delivery_street1 . ' ' . $order->delivery_street2,
        'ciudadEnvio' => $order->delivery_city,
        'paisEnvio' => uc_pagosonline_get_country_2($order->delivery_country),
        'telefono' => $order->billing_phone,
        'telefonoOficina' => $order->billing_phone,
        'numeroCliente' => $order->uid,
        );
foreach ($data as $key => $value) {
  $form[$key] = array(
    '#type' => 'hidden',
    '#value' => $value,
    );
}
$form['#action'] = uc_pagosonline_get_txn_type() ? UC_PAGOSONLINE_LIVEURL : UC_PAGOSONLINE_TESTURL;
}
}
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 * To add a validation function to uc_payment_methods_form() for PagosOnline method
 */

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_form_uc_payment_method_settings_form_form_alter(&$form, &$form_state) {
  $form['#validate'][] = 'uc_pagosonline_settings_validate';
}

/**************************
 *     Ubercart Hooks     *
 **************************/

/*
 * Implementation of hook_uc_payment_method().
 */

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_uc_payment_method() {

  $methods[] = array(
    'id' => 'pagosonline',
    'name' => t('Pagosonline'),
    'title' => uc_pagosonline_get_title(),
    'desc' => t('Receive payments with Credit card, Checking or Savings account or cash through PagosOnline service.'),
    'callback' => 'uc_pagosonline_method_pagosonline',
    'weight' => 1,
    'checkout' => TRUE,
    );

  return $methods;
}

/*
 * Implementation of hook_uc_payment_gateway().
 */

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_uc_payment_gateway() {
  $gateways[] = array(
    'id' => 'pagosonline',
    'title' => t('PagosOnline'),
    'description' => t('Process payments through PagosOnline gateway.'),
    'settings' => 'uc_pagosonline_settings_gateway',
    'credit' => 'uc_pagosonline_charge',
    );
  return $gateways;
}

/*********************************
 *     PagosOnline functions     *
 *********************************/

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_languages($key = NULL) {
  $languages = array(
    'fr' => t('French'),
    'en' => t('English'),
    'es' => t('Spanish'),
    'it' => t('Italian'),
    );
  asort($languages);
  return $key ? $languages[$key] : $languages;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_currencies($key = NULL) {
  $currencies = array(
    'COP' => t('Colombian peso'),
    'EUR' => t('Euro'),
    'GBP' => t('Pound sterling'),
    'MXN' => t('Mexican peso'),
    'USD' => t('United States dollar'),
    'VEB' => t('Venezuelan bolivar fuerte'),
    );
  asort($currencies);
  return $key ? $currencies[$key] : $currencies;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_estado_pol($key = NULL) {
  $estado_pol = array(
    1 => t('Unopened'), // 'Sin abrir',
    2 => t('Opened'), // 'Abierta',
    4 => t('Paid'), // 'Pagada y abonada',
    5 => t('Canceled'), // 'Cancelada',
    6 => t('Rejected'), // 'Rechazada',
    7 => t('Validating'), // 'En validación',
    8 => t('Reversed'), // 'Reversada',
    9 => t('Fraudulent reversed'), // 'Reversada fraudulenta',
    10 => t('Sent to financial institution'), // 'Enviada ent. Financiera',
    11 => t('Capturing credit card data'), // 'Capturando datos tarjeta de crédito',
    12 => t('Awaiting PSE system confirmation'), // 'Esperando confirmación sistema PSE',
    13 => t('Active ACH Debits'), // 'Activa Débitos ACH',
    14 => t('Confirming Efecty payment'), // 'Confirmando pago Efecty',
    15 => t('Printed'), // 'Impreso',
    16 => t('ACH debit registered'), // 'Debito ACH Registrado',
    );
  return $key ? $estado_pol[$key] : $estado_pol;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_codigo_respuesta_pol($key = NULL) {
  $codigo_respuesta_pol = array(
    1 => t('Transaction approved'), // 'Transacción aprobada',
    2 => t('Payment canceled by the user'), // 'Pago cancelado por el usuario',
    3 => t('Payment canceled by the user while validating'), // 'Pago cancelado por el usuario durante validación',
    4 => t('Transaction rejected by the entity'), // 'Transacción rechazada por la entidad',
    5 => t('Transaction declined by the entity'), // 'Transacción declinada por la entidad',
    6 => t('Insufficient funds'), // 'Fondos insuficientes',
    7 => t('Invalid card'), // 'Tarjeta invalida',
    8 => t('Go to your bank'), // 'Acuda a su entidad',
    9 => t('Expired card'), // 'Tarjeta vencida',
    10 => t('Restricted card'), // 'Tarjeta restringida',
    11 => t('POL Discretionary'), // 'Discrecional POL',
    12 => t('Expiration date or security code invalid'), // 'Fecha de expiración o campo seg. Inválidos',
    13 => t('Repit transaction'), // 'Repita transacción',
    14 => t('Invalid transaction'), // 'Transacción inválida',
    15 => t('Transaction in validating process'), // 'Transacción en proceso de validación',
    16 => t('Invalid user-password combination'), // 'Combinación usuario-contraseña inválidos',
    17 => t('Amount exceeds maximum allowed by the entity'), // 'Monto excede máximo permitido por entidad',
    18 => t('Invalid identification document'), // 'Documento de identificación inválido',
    19 => t('Paid Transaction, capturing data'), // 'Transacción abandonada capturando datos TC',
    20 => t('Abandoned transaction'), // 'Transacción abandonada',
    21 => t('Impossible to reverse transaction'), // 'Imposible reversar transacción',
    22 => t('Card not allowed to do payments by internet'), // 'Tarjeta no autorizada para realizar compras por internet.',
    23 => t('Rejected transaction'), // 'Transacción rechazada',
    24 => t('Partial transaction approved'), // 'Transacción parcial aprobada',
    25 => t('Rejected no-confirmation'), // 'Rechazada por no confirmación',
    26 => t('Voucher generated, waiting for bank payment'), // 'Comprobante generado, esperando pago en banco',
    9994 => t('Transaction pending to be confirmed'), // 'Transacción pendiente por confirmar',
    9995 => t('Digital certificate not found'), // 'Certificado digital no encontrado',
    9996 => t("Entity doesn't answer"), // 'Entidad no responde',
    9997 => t('Messaging error with the bank'), // 'Error de mensajería con la entidad financiera',
    9998 => t('Error in bank'), // 'Error en la entidad financiera',
    9999 => t('Not specified error'), // 'Error no especificado',
    );
return $key ? $codigo_respuesta_pol[$key] : $codigo_respuesta_pol;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_tipo_medio_pago($key = NULL) {
  $tipo_medio_pago = array(
    2 => t('Credit cards'), // 'Tarjetas de Crédito',
    3 => t('Verified by Visa'), // 'Verified by VISA', // Verificar
    4 => t('PSE (checking and savings accounts)'), // 'PSE (Cuentas corriente/ahor.)',
    5 => t('ACH debt'), // 'Debito ACH',
    7 => t('Cash') . ' (' . t('Baloto') . ')', // 'Pago en efectivo (Efecty)', // Baloto
    8 => t('Referenced payment'), // 'Pago referenciado',
    );
  return $key ? $tipo_medio_pago[$key] : $tipo_medio_pago;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_medio_pago($key = NULL) {
  $medio_pago = array(
    10 => t('VISA'), // 'VISA',
    11 => t('MASTERCARD'), // 'MASTERCARD',
    12 => t('AMEX'), // 'AMEX',
    22 => t('DINERS'), // 'DINERS',
    24 => t('Verified by VISA'), // 'Verified by VISA',
    25 => t('PSE'), // 'PSE',
    27 => t('VISA debit'), // 'VISA Debito',
    30 => t('Baloto'), // 'Efecty',
    31 => t('Referenced payment'), // 'Pago referenciado',
    );
  return $key ? $medio_pago[$key] : $medio_pago;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_settings_validate($form, &$form_state) {
  if (!is_numeric($form_state['values']['uc_pagosonline_usuario_id']) || is_float($form_state['values']['uc_pagosonline_usuario_id'])) {
    form_set_error('uc_pagosonline_usuario_id', t('The user ID must be an integer number.'));
  }
  if (drupal_strlen($form_state['values']['uc_pagosonline_reference']) > 35) {
    form_set_error('uc_pagosonline_reference', t("Your reference prefix couldn't be longer than 35 characters."));
  }
  if (drupal_strlen($form_state['values']['uc_pagosonline_description']) > 250) {
    form_set_error('uc_pagosonline_description', t("Your description can't be longer than 250 characters."));
  }
  $payment = FALSE;
  foreach ($form_state['values']['uc_pagosonline_available_payment_types'] as $value) {
    $payment = $payment || $value;
  }
  if (!$payment) {
    form_set_error('uc_pagosonline_available_payment_types', t("You must choose at least one payment method."));
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_usuario_id() {
  return variable_get('uc_pagosonline_usuario_id', '');
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_encription_key() {
  return variable_get('uc_pagosonline_encription_key', '');
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_available_payment_types() {
  return variable_get('uc_pagosonline_available_payment_types', array(99));
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_available_payment_types_selected() {
  $types = uc_pagosonline_get_available_payment_types();
  if (in_array(99, $types)) {
    return implode(',', array_keys(uc_pagosonline_get_tipo_medio_pago()));
  }
  else {
    foreach ($types as $value) {
      if ($value) {
        $values[] = $value;
      }
    }
    return implode(',', $values);
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_reference_prefix() {
  return variable_get('uc_pagosonline_reference', t('My Drupal Store'));
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_reference($order_id) {
  return uc_pagosonline_get_reference_prefix() . ' - ' . $order_id . (!uc_pagosonline_get_txn_type() ? ' - ' . t('Test') : '');
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_txn_type() {
  return variable_get('uc_pagosonline_txn_type', 0);
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_currency() {
  return variable_get('uc_pagosonline_currency', 'COP');
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_language() {
  global $language;
  return variable_get('uc_pagosonline_language', array_key_exists($language->language, uc_pagosonline_languages()) ? $language->language : 'en');
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_iva_tax_id() {
  return variable_get('uc_pagosonline_iva_tax_id', 0);
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_method_title() {
  return variable_get('uc_pagosonline_method_title', t('Payment with Savings or Checking account.'));
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_show_logo() {
  return variable_get('uc_pagosonline_show_logo', 0);
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_title() {
  $path = base_path() . drupal_get_path('module', 'uc_pagosonline');
  $logo = '<img src="' . $path . '/images/logopagosonline25.png" alt="PagosOnline" />';
  $title = uc_pagosonline_get_method_title();
  switch (uc_pagosonline_get_show_logo()) {
    case 1:
    $show = $logo;
    break;
    case 2:
    $show = $title;
    break;
    default:
    $show =  $logo . ' ' . $title;
    break;
  }
  return $show;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_description() {
  return variable_get('uc_pagosonline_description', variable_get('site_name', 'Drupal'));
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_country_2($country_id) {
  $query = "SELECT c.country_iso_code_2 FROM {uc_countries} c WHERE country_id='%d'";
  return db_query("SELECT c.country_iso_code_2 FROM {uc_countries} c WHERE country_id = :country_id", array(':country_id' => $country_id))->fetchField();
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_currency_format($value) {
  return number_format($value, 2, '.', '');
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_method_pagosonline($op, $arg1 = NULL, $form = NULL, &$form_state = NULL) {
  switch ($op) {
    case 'settings':
    $form['uc_pagosonline_usuario_id'] = array(
      '#type' => 'textfield',
      '#title' => t('User ID'),
      '#default_value' => uc_pagosonline_get_usuario_id(),
      '#maxlength' => 12,
      );
    $form['uc_pagosonline_encription_key'] = array(
      '#type' => 'textfield',
      '#title' => t('Encription key'),
      '#default_value' => uc_pagosonline_get_encription_key(),
      );
    $form['uc_pagosonline_txn_type'] = array(
      '#type' => 'select',
      '#title' => t('Transaction Type'),
      '#options' => array(
        0 => t('Test'),
        1 => t('Live'),
        ),
      '#default_value' => uc_pagosonline_get_txn_type(),
      );
    $form['uc_pagosonline_available_payment_types'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Available Payment Types'),
      '#options' => array(99 => t('All')) + uc_pagosonline_get_tipo_medio_pago(),
      '#default_value' => uc_pagosonline_get_available_payment_types(),
      );
    $form['uc_pagosonline_reference'] = array(
      '#type' => 'textfield',
      '#title' => t('Reference Prefix'),
      '#default_value' => uc_pagosonline_get_reference_prefix(),
      '#description' => t('This will be added to the Order ID.  You must use it if you have more than one Store.'),
      '#maxlength' => 35,
      );
    $form['uc_pagosonline_currency'] = array(
      '#type' => 'select',
      '#title' => t('Currency'),
      '#options' => uc_pagosonline_currencies(),
      '#default_value' => uc_pagosonline_get_currency(),
      );
    $form['uc_pagosonline_language'] = array(
      '#type' => 'select',
      '#title' => t('Language'),
      '#options' => uc_pagosonline_languages(),
      '#default_value' => uc_pagosonline_get_language(),
      );
    $taxoptions[0] = t('No IVA');
    if (module_exists('uc_taxes')) {
      foreach (uc_taxes_rate_load(NULL) as $key => $value) {
        $taxoptions[$key] = $value->name;
      }
      $iva_description = t('This is the list of taxes you have in your !uctaxesurl', array('!uctaxesurl' => l('Tax rates and settings page.', 'admin/store/settings/taxes')));
    }
    else {
      $iva_description = t('You must enable !taxes module.', array('!taxes' => l('Taxes', 'admin/modules', array('fragment' => 'edit-status-uc-taxes-wrapper'))));
    }
    $form['uc_pagosonline_iva_tax_id'] = array(
      '#type' => 'select',
      '#title' => t('IVA'),
      '#options' => $taxoptions,
      '#description' => $iva_description,
      '#default_value' => uc_pagosonline_get_iva_tax_id(),
      );
    $form['uc_pagosonline_method_title'] = array(
      '#type' => 'textfield',
      '#title' => t('Payment method title'),
      '#default_value' => uc_pagosonline_get_method_title(),
      );
    $form['uc_pagosonline_show_logo'] = array(
      '#type' => 'select',
      '#title' => t('Show'),
      '#options' => array(
        0 => t('Logo + Title'),
        1 => t('Logo'),
        2 => t('Title'),
        ),
      '#default_value' => uc_pagosonline_get_show_logo(),
      );
    $form['uc_pagosonline_description'] = array(
      '#type' => 'textfield',
      '#title' => t('Description'),
      '#default_value' => uc_pagosonline_get_description(),
      '#description' => t('Sale description.  It will be shown in the confirmation page in PagosOnline'),
      '#maxlength' => 255,
      );
    return $form;
    break;
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_settings_gateway() {
  $form = array();
  return $form;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_charge($order_id, $amount, $data) {
  $result = array();
  return $result;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_iva($order) {
  if (!uc_pagosonline_get_iva_tax_id()) {
    return 0;
  }
  $iva = 0;
  foreach ($order->line_items as $item) {
    if ($item['data']['tax_id'] == uc_pagosonline_get_iva_tax_id()) {
      $iva += $item['amount'];
    }
  }
  return $iva;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_get_base($order) {
  if (!uc_pagosonline_get_iva_tax_id()) {
    return 0;
  }
  $base = 0;
  foreach ($order->line_items as $item) {
    if ($item['data']['tax_id'] == uc_pagosonline_get_iva_tax_id()) {
      $base += $item['data']['taxable_amount'];
    }
  }
  return $base;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function uc_pagosonline_firma($usuarioId, $refVenta, $valor, $moneda = 'COP', $estado_pol = NULL) {
  $llaveEncripcion = uc_pagosonline_get_encription_key();
  $output = "$llaveEncripcion~$usuarioId~$refVenta~$valor~$moneda";
  if ($estado_pol) {
    $output .= "~$estado_pol";
  }
  return md5($output);
}

function _uc_pagosonline_access_confirmation() {
  return TRUE;
}

function _uc_pagosonline_access_complete() {
  return TRUE;
}

function _uc_pagosonline_is_complete() {
  $args = arg();
  return $args[0] == 'cart' && $args[1] == 'pagosonline' && $args[2] == 'complete' && count($args) == 3;
}

function _uc_pagosonline_is_confirmation() {
  $args = arg();
  return $args[0] == 'cart' && $args[1] == 'pagosonline' && $args[2] == 'confirmation' && count($args) == 3;
}

function _uc_pagosonline_get_order_id($refVenta) {
  $components = explode("-", $refVenta);
  $index = count($components) - 1;
  if (!uc_pagosonline_get_txn_type()) {
    $index--;
  }
  return trim($components[$index]);
}
