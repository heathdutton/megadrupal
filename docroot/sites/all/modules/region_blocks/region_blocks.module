<?php
/**
 * @file
 * Main module file.
 *
 * Establish the module permissions, config page and blocks.
 */

/**
 * Get the Region Blocks global default setting, if not set
 * the we default to DRUPAL_NO_CACHE.
 */
define('REGION_BLOCKS_CACHE_DEFAULT', variable_get('region_blocks__cache', DRUPAL_NO_CACHE));

/**
 * Implements hook_permission().
 */
function region_blocks_permission() {
  return array(
    'administer region blocks' => array(
      'title' => t('Administer Region Blocks'),
      'description' => t('Set regions to get blocks.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function region_blocks_menu() {
  $items = array();

  $items['admin/structure/region-blocks'] = array(
    'title' => 'Region Blocks',
    'description' => 'Set regions as blocks',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('region_blocks_config'),
    'access arguments' => array('administer region blocks'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'region_blocks.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function region_blocks_block_info() {
  $theme_regions = system_region_list(variable_get('theme_default', ''));
  $region_blocks = variable_get('region_blocks__blocks', array());
  $blocks = array();

  foreach ($region_blocks as $name => $is_set) {
    if ($is_set) {
      // Fallback to the machine name if some
      // modules do not include a human name.
      $display_name = $name;
      if (!empty($theme_regions) && isset($theme_regions[$name])) {
        $display_name = $theme_regions[$name];
      }
      $blocks[$name] = array(
        'info' => t('Region Block: !region_name', array('!region_name' => $display_name)),
        'cache' => variable_get('region_blocks__block_' . $name . '__cache', REGION_BLOCKS_CACHE_DEFAULT),
      );
    }
  }

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function region_blocks_block_configure($delta = '') {
  $form = array();
  $region_blocks = variable_get('region_blocks__blocks', array());
  $cache_options = array(
    DRUPAL_NO_CACHE => 'DRUPAL_NO_CACHE',
    DRUPAL_CACHE_CUSTOM => 'DRUPAL_CACHE_CUSTOM',
    DRUPAL_CACHE_PER_ROLE => 'DRUPAL_CACHE_PER_ROLE',
    DRUPAL_CACHE_PER_USER => 'DRUPAL_CACHE_PER_USER',
    DRUPAL_CACHE_PER_PAGE => 'DRUPAL_CACHE_PER_PAGE',
  );

  foreach ($region_blocks as $name => $is_set) {
    if ($is_set && $delta == $name) {
      $form['region_blocks__block_' . $name . '__cache'] = array(
        '#type' => 'select',
        '#title' => t('Default block cache setting:'),
        '#default_value' => variable_get('region_blocks__block_' . $name . '__cache', REGION_BLOCKS_CACHE_DEFAULT),
        '#options' => $cache_options,
      );
    }
  }

  return $form;
}

/**
 * Implements hook_block_save().
 */
function region_blocks_block_save($delta = '', $edit = array()) {
  $region_blocks = variable_get('region_blocks__blocks', array());

  foreach ($region_blocks as $name => $is_set) {
    if ($is_set && $delta == $name) {
      variable_set('region_blocks__block_' . $name . '__cache', $edit['region_blocks__block_' . $name . '__cache']);
    }
  }
}

/**
 * Implements hook_block_view().
 */
function region_blocks_block_view($delta = '') {
  $region_blocks = variable_get('region_blocks__blocks', array());
  $block = array();

  foreach ($region_blocks as $name => $is_set) {
    if ($is_set && $delta == $name) {
      $block['subject'] = NULL;
      $block['content'] = render(block_get_blocks_by_region($name));
    }
  }

  return $block;
}
