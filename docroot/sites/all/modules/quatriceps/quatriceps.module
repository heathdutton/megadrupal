<?php

/**
 * Implements hook_init().
 */
function quatriceps_init()
{
  $module_path = drupal_get_path('module', 'quatriceps');
  $quatriceps_id = variable_get('quatriceps_id', '');
  $recaptcha_theme = variable_get('quatriceps_recaptcha_theme', 'red');
  $pubkey = variable_get('quatriceps_recaptcha_publickey', '');
  $override_css = $module_path . '/html/override/quatriceps.css';
  $override_js = $module_path . '/html/override/quatriceps.js';
  if(is_file($override_css))
  {
    # override default css
    drupal_add_css($override_css);
  }
  else
  {
    drupal_add_css($module_path . '/quatriceps.css');
  }
  drupal_add_js('https://www.google.com/recaptcha/api/js/recaptcha_ajax.js', array('type' => 'external'));
  drupal_add_js(array('quatriceps' => array('id' => $quatriceps_id, 'recaptcha_pubkey' => $pubkey, 'recaptcha_theme' => $recaptcha_theme)), array('type' => 'setting'));
  if(is_file($override_js))
  {
    # override default js
    drupal_add_js($override_js, array('scope' => 'footer'));
  }
  else
  {
    drupal_add_js($module_path . '/quatriceps.js', array('scope' => 'footer'));
  }
}

/**
 * Implements hook_menu().
 */
function quatriceps_menu() {
  $items['admin/config/services/quatriceps'] = array(
    'title' => 'Quatriceps',
    'description' => 'Quatriceps numeric ID and other settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quatriceps_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'quatriceps.admin.inc',
  );
  $items['quatriceps/relay'] = array(
    'page callback' => 'quatriceps_relay',
    'page arguments' => array(),
    'access callback' => TRUE,
    'access arguments' => array(),
    'type' => MENU_CALLBACK,
  );
  return $items;
}


/**
* Implements hook_block_info().
*/
function quatriceps_block_info() {
  $blocks = array();
  $quatriceps_files = quatriceps_block_helper();
  foreach($quatriceps_files as $quatriceps_file)
  {
    $command = str_replace('.html', '', $quatriceps_file);
    $blocks[$command] = array('info' => t("Quatriceps $command block"));
  }
  return $blocks;
}

/*
 Helper function to hide extra blocks
 *
 */
function quatriceps_block_helper() {
  if(variable_get('quatriceps_all_operators', false))
  {
    return array();
  }
  $arithmetic = array();
  if(variable_get('quatriceps_arithmetic_operators', false))
  {
    $arithmetic = array('addition.html', 'multiplication.html', 'subtraction.html', 'division.html');
  }
  $exclude = array_merge($arithmetic, array('..', '.', 'override'));
  return $quatriceps_files = array_diff(scandir(drupal_get_path('module', 'quatriceps') . '/html'), $exclude);
}

/**
* Implements hook_block_view().
*/
function quatriceps_block_view($delta = '')
{
  $theme = variable_get('quatriceps_recaptcha_theme', 'red');
  $block = array();
  if(!class_exists('ReCaptchaResponse'))
  {
    require_once 'recaptchalib.php';
  }
  $html = drupal_get_path('module', 'quatriceps') . '/html/' . $delta . '.html';
  $override = drupal_get_path('module', 'quatriceps') . '/html/override/' . $delta . '.html';

  $dialog = '<div class="quatriceps-dialog"><div class="quatriceps-waiting-container"><div class="quatriceps-waiting">Computing...</div></div><div class="quatriceps-output-container"><div class="quatriceps-output"></div></div></div>';
  $pre_html = variable_get('quatriceps_pre_html', '');
  $post_html = variable_get('quatriceps_post_html', '');
  $block['subject'] = t("Tetragy Quatriceps $delta operation");
  $markup = '';
  if(is_file($override))
  {
    $markup = '<div class="quatriceps-cp">' . file_get_contents($override) . '</div>';
  }
  elseif(is_file($html))
  {
    $markup = '<div class="quatriceps-cp">' . file_get_contents($html) . '</div>';
  }
  $recaptcha_html = '<div class="quatriceps-recaptcha" id="quatriceps-recaptcha-' . rand(10000,99999) . '"></div>';
  $block['content'] = '<div class="quatriceps" id="quatriceps-' . $delta .'">' . $pre_html . $markup . $dialog . $recaptcha_html . $post_html . '</div>';
  return $block;
}

function quatriceps_relay()
{
  define('QUATRICEPS_SERVER', variable_get('quatriceps_router', 'https://route.tetragy.com'));
  if(!class_exists('ReCaptchaResponse'))
  {
    require_once 'recaptchalib.php';
  }
  $privatekey = variable_get('quatriceps_recaptcha_privatekey', '');

  if(strlen($privatekey))
  {
    $resp = recaptcha_check_answer($privatekey, $_SERVER["REMOTE_ADDR"], $_GET["recaptcha_challenge_field"], $_GET["recaptcha_response_field"]);
    if(!$resp->is_valid)
    {
      echo $_GET['callback'] . '({"input":"","output":"The reCAPTCHA wasn\'t entered correctly. Go back and try it again.","pdf":""})';
      exit;
    }
  }
  $fields = array();
  $fields['arg0'] = $_GET['arg0'];
  $fields['arg1'] = $_GET['arg1'];
  $fields['arg2'] = $_GET['arg2'];
  $fields['arg3'] = $_GET['arg3'];
  $fields['carry'] = $_GET['carry'];
  $fields['id'] = variable_get('quatriceps_id', '');
  $fields['cmd'] = $_GET['cmd'];
  $fields['callback'] = $_GET['callback'];
  $fields['format'] = $_GET['format'];
  $fields['pdf'] = $_GET['pdf'];
  $fields_string = '';
  foreach($fields as $key => $value)
  {
    $fields_string .= $key . '=' . urlencode($value) . '&';
  }
  $fields_string = rtrim($fields_string, '&');
	$contents = file_get_contents(QUATRICEPS_SERVER . '/index.php?' . $fields_string);
  print $_GET['callback'] . '(' . $contents .')';
}
