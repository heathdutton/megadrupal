<?php

/**
 * Implements hook_field_widget_info_alter().
 */
function original_image_style_field_widget_info_alter(&$info) {
  $info['image_image']['settings']['original_image_style'] = '';
}

/**
 * Implements hook_form_FORM_ID_alter(): field_ui_field_edit_form.
 */
function original_image_style_form_field_ui_field_edit_form_alter(&$form, $form_state) {
  $instance = $form['#instance'];
  if ($form['#field']['type'] == 'image') {
    $form['instance']['settings']['original_image_style'] = array(
      '#type' => 'select',
      '#title' => t('Apply style to image after upload'),
      '#options' => $form['instance']['widget']['settings']['preview_image_style']['#options'],
      '#default_value' => isset($instance['settings']['original_image_style']) ? $instance['settings']['original_image_style'] : '',
      '#empty_option' => t('<no style>'),
      '#weight' => 16,
    );
  }
}

/**
 * Implements hook_field_attach_presave().
 */
function original_image_style_field_attach_presave($entity_type, $entity) {
  list(,,$bundle_name) = entity_extract_ids($entity_type, $entity);
  
  foreach (field_info_instances($entity_type, $bundle_name) as $field_name => $field_instance) {
    if (empty($field_instance['settings']['original_image_style']) || empty($entity->{$field_name})) {
      continue;
    }
    
    // Search image fid's on original entity field.
    $original_fids = array();
    if (isset($entity->original->{$field_name})) {
      foreach ($entity->original->{$field_name} as $field_items) {
        foreach ($field_items as $field_item) {
          $original_fids[] = $field_item['fid'];
        }
      }
    }
    
    // Process new images.
    $image_style = image_style_load($field_instance['settings']['original_image_style']);
    foreach ($entity->{$field_name} as $langcode => $field_items) {
      foreach ($field_items as $delta => $field_item) {
        if (in_array($field_item['fid'], $original_fids)) {
          continue;
        }
        
        $file = file_load($field_item['fid']);
        if (image_style_create_derivative($image_style, $file->uri, $file->uri)) {
          // Update file size
          file_save($file);
          
          // Update width and height.
          $image_info = image_get_info($file->uri);
          $entity->{$field_name}[$langcode][$delta]['width'] = $image_info['width'];
          $entity->{$field_name}[$langcode][$delta]['height'] = $image_info['height'];
        }
      }
    }
  }
}
