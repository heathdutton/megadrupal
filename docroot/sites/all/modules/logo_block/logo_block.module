<?php

/**
 * @file
 * Hooks and public functions for Logo Block
 */

/**
 * Implements hook_theme().
 */
function logo_block_theme() {
  return array(
    'logo_block_wrapper' => array(
      'render element' => 'element',
      'file' => 'logo_block.theme.inc',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function logo_block_block_info() {
  $blocks['logo'] = array(
    'info' => t('Logo Block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function logo_block_block_configure($delta = '') {
  $form = array();
  if ($delta == 'logo') {
    $form['logo_block_link'] = array(
      '#type' => 'textfield',
      '#title' => t('Link the logotype to this page'),
      '#default_value' => variable_get('logo_block_link', '<front>'),
      '#description' => t('The path for this link. This can be an internal Drupal path such as %add-node or an external URL such as %drupal. Enter %front to link to the front page. If this field is left empty, no link will be created for the image.', array(
        '%front' => '<front>',
        '%add-node' => 'node/add',
        '%drupal' => 'http://drupal.org')),
    );
    $image_styles = image_styles();
    $formatted_styles = array();
    $formatted_styles['_none'] = t('- None -');
    foreach ($image_styles as $name => $style) {
      $formatted_styles[$name] = $name;
    }
    $form['logo_block_style'] = array(
      '#type' => 'select',
      '#title' => t('Image style'),
      '#options' => $formatted_styles,
      '#default_value' => variable_get('logo_block_style', '_none'),
      '#description' => t('Select an optional image style to use for the rendering of the logo.'),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function logo_block_block_save($delta = '', $edit = array()) {
  if ($delta == 'logo') {
    $vars = array(
      'logo_block_link' => '<front>',
      'logo_block_style' => '_none',
    );
    foreach ($vars as $name => $default_value) {
      $old_value = variable_get($name, $default_value);
      if ($name === 'logo_block_link') {
        $new_value = filter_xss($edit[$name], array('front'));
      }
      else {
        $new_value = check_plain($edit[$name]);
      }
      if ($old_value !== $new_value) {
        variable_set($name, $new_value);
      }
    }
  }
}

/**
 * Implements hook_block_view().
 */
function logo_block_block_view($delta = '') {
  $block = array();
  if ($delta === 'logo') {
    $logo_path = '';
    $default_logo = theme_get_setting('default_logo');
    if ($default_logo) {
      $logo_path = logo_block_get_default_logo_path();
    }
    else {
      $logo_path = theme_get_setting('logo_path');
    }
    if ($logo_path) {
      $site_name = variable_get('site_name', '');
      $block['content'] = array(
        '#path' => $logo_path,
        '#alt' => $site_name,
        '#title' => $site_name,
        '#theme' => 'image',
        '#theme_wrappers' => array('logo_block_wrapper'),
      );
      if (!$default_logo) {
        $image_style = variable_get('logo_block_style', '_none');
        if ($image_style !== '_none') {
          $block['content']['#style_name'] = $image_style;
          $block['content']['#theme'] = 'image_style';
          $block['content']['#width'] = '';
          $block['content']['#height'] = '';
        }
      }
    }
    else {
      $block['content'] = NULL;
    }
  }
  return $block;
}

/**
 * Returns the default logo path.
 */
function logo_block_get_default_logo_path($theme = NULL) {
  if (is_null($theme)) {
    global $theme;
  }
  $theme_path = drupal_get_path('theme', $theme);
  if (file_exists($theme_path . '/logo.png')) {
    $logo_path = $theme_path . '/logo.png';
  }
  else {
    $logo_path = 'misc/druplicon.png';
  }
  return $logo_path;
}
