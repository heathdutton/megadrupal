<?php

/**
 * Implements hook_menu().
 */
function cloudsponge_menu() {
  $items = array();

  $items['admin/config/services/cloudsponge'] = array(
    'title' => 'Cloudsponge',
    'description' => 'Manage CloudSponge Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloudsponge_admin_form'),
    'access arguments' => array('access administration pages'),
    'file' => 'cloudsponge.admin.inc',
  );

  $items['cloudsponge/incoming'] = array(
    'page callback' => 'cloudsponge_incoming_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
	);

  return $items;
}

/**
 * Implements hook_block_info().
 */
function cloudsponge_block_info() {
  return array(
    'cloudsponge' => array('info' => t('CloudSponge'))
  );
}

/**
 * Implements hook_block_view().
 */
function cloudsponge_block_view($delta = '') {
  $block = array();

  if ($delta == 'cloudsponge') {
    $block['subject'] = t('CloudSponge');
    $block['content'] = array('#theme' => 'cloudsponge_widget');
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function cloudsponge_theme($existing, $type, $theme, $path) {
  return array(
    'cloudsponge_widget' => array(
      'render element' => 'element',
      'path' => $path .'/templates',
      'template' => 'cloudsponge-widget',
      'file' => 'theme.inc',
      'variables' => array(),
    ),
  );
}

/**
 * Add all necessary JS files.
 */
function cloudsponge_add_js() {
  $domain_key = variable_get('cloudsponge_domain_key');

  drupal_add_js(array('cloudsponge' => array(
    'domain_key' => $domain_key,
    'csrf_token' => drupal_get_token('cloudsponge'),
  )), 'setting');
  drupal_add_js(drupal_get_path('module', 'cloudsponge') . '/js/cloudsponge.js');
  drupal_add_js('https://api.cloudsponge.com/address_books.js', 'external');
}

/**
 * CloudSponge callback.
 *
 * Javascript makes a JSON request to the server, not a POST request (a different kind of
 * HTTP request, therefore we cannot use $_POST here, but must read the data directly
 * from the headers. This is what file_get_contents("php://input") does. We use JSON
 * as a method of serialisation to avoid PHP's POST limits.
 */
function cloudsponge_incoming_callback() {
  if (isset($_POST)) {
    $data_json = file_get_contents("php://input");
    $data = json_decode($data_json);

    if (!isset($data->csrf_token) || !drupal_valid_token($data->csrf_token, 'cloudsponge')) {
      return MENU_ACCESS_DENIED;
    }

    switch ($data->type) {
      case 'beforeDisplayContacts':
        module_invoke_all('cloudsponge_all_contacts', $data->emails, $data->owner, $data->source);
        break;

      case 'afterSubmitContacts':
        module_invoke_all('cloudsponge_submit_contacts', $data->emails, $data->owner, $data->source);
        break;
    }
  }
}
