<?php

use Drupal\quizz_ddlines\DDLinesQuestion;
use Drupal\quizz_question\Entity\Question;

class DDLinesTestCase extends QuizTestCase {

  protected $questionHandler = 'quiz_ddlines';
  protected $extraModules = array('quizz_ddlines');

  public static function getInfo() {
    return array(
        'name'        => 'DDlines',
        'description' => 'Test cases for true or drag and drop lines question type.',
        'group'       => 'Quiz question',
    );
  }

  private function checkStructure() {
    $field_info = field_info_field('field_image');
    $field_instance = field_info_instance('quiz_question_entity', 'field_image', 'default_quiz_ddlines');
    $this->assertNotNull($field_info, 'field_image is created');
    $this->assertNotNull($field_instance, 'field_image instance is added to default_quiz_ddlines bundle.');
    return !empty($field_info) && !empty($field_instance);
  }

  /**
   * @return Question
   */
  private function createQuestion() {
    $this->drupalLogin($this->admin);
    $this->drupalPost('quiz-question/add/default-quiz-ddlines', array(
        'title'                             => 'Demo ddlines title',
        'quiz_question_body[und][0][value]' => 'Demo ddlines body',
        'files[field_image_und_0]'          => DRUPAL_ROOT . '/misc/druplicon.png',
      ), 'Save question');
    $question_id = db_query('SELECT MAX(qid) FROM {quiz_question_entity} WHERE 1 ORDER BY qid DESC')->fetchColumn();
    $question = quizz_question_load($question_id);
    $this->assertTrue($question instanceof Question);
    $this->assertTrue($question->getHandler() instanceof DDLinesQuestion);
    return $question;
  }

  public function testDDLines() {
    if ($this->checkStructure()) {
      $question = $this->createQuestion();
      $quiz = $this->linkQuestionToQuiz($question);
      $this->drupalGet("quiz/{$quiz->qid}/take");
      // $this->drupalPost(NULL, array(), 'Finish');
    }
  }

}
