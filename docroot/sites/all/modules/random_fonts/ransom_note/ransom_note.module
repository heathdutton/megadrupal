<?php

/**
 * @file
 * Ransom Note (ransom_note) module main file.
 */

/**
 * Implements hook_menu().
 */
function ransom_note_menu() {
  $items['admin/config/user-interface/fontyourface/ransom_note'] = array(
    'title'            => 'Ransom Note',
    'description'      => 'Configure Ransom Note',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ransom_note_configure'),
    'file'             => 'ransom_note.admin.inc',
    'access arguments' => array('administer @font-your-face'),
    'type'             => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_init().
 */
function ransom_note_init() {
  $info = array();
  $info['selectors'] = variable_get('ransom_note_selectors', '');
  // Bail out if selectors are not configured.
  if (!$info['selectors']) {
    return;
  }
  $selected_fonts = array_filter(variable_get('ransom_note_fonts', array()));
  // Bail out if no fonts are selected.
  if (!$selected_fonts) {
    return;
  }
  // Check which selected fonts are still enabled.
  $fids = db_select('fontyourface_font', 'fyf')
    ->fields('fyf', array('fid'))
    ->condition('enabled', 1)
    ->condition('fid', $selected_fonts, 'IN')
    ->execute()
    ->fetchCol();
  // Bail out if no fonts are available anymore.
  if (!$fids) {
    return;
  }
  $info['count'] = count($fids);
  foreach ($fids as $key => $fid) {
    $font = fontyourface_get_font($fid);
    $font->css_selector = empty($font->css_selector) ? '.ransom_note_' . $key : $font->css_selector . ', .ransom_note_' . $key;
    $font->css_fallbacks = 'monospace !important';
    fontyourface_font_registry($font);
  }
  // Pass selectors and font_count as a setting.
  drupal_add_js(array('ransomNote' => $info), 'setting');
  drupal_add_js(drupal_get_path('module', 'ransom_note') . '/ransom_note.js', 'file');
}
