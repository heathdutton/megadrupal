<?php
/**
 * @file
 * Install file for Commerce OTP module.
 */

/**
 * Implements hook_requirements().
 */
function commerce_otp_requirements($phase) {
  $requirements = array();
  $t = get_t();
  // Test private key file is out the webroot.
  if ($phase == 'runtime') {
    $not_protected = $protected = array();
    $query = db_select('commerce_otp_posid', 'cp')
      ->fields('cp', array('instance_id'));
    $result = $query->execute();
    while ($instance_id = $result->fetchField()) {
      $instance = 'otp|' . $instance_id;
      $payment_method = commerce_payment_method_instance_load($instance);
      if (isset($payment_method['settings']['private_key_file'])) {
        $private_key_file = $payment_method['settings']['private_key_file'];
        $response = drupal_http_request(url($private_key_file, array('absolute' => TRUE)));
        if ($response->code == '200') {
          $not_protected[] = l($private_key_file, 'admin/commerce/config/payment-methods/manage/' . $instance_id);
        }
        else {
          $protected[] = $private_key_file;
        }
      }
    }
    if (!empty($not_protected)) {
      $requirements['commerce_otp_keyfile'] = array(
        'value' => $t('Not protected'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t("The file !file is accessible via browser. You must change the file's location to outside the webroot (recommended) or to private file system.", array('!file' => implode(', ', $not_protected))),
      );
    }
    else {
      if (!empty($protected)) {
        $requirements['commerce_otp_keyfile'] = array(
          'value' => $t('Protected'),
          'severity' => REQUIREMENT_OK,
        );
      }
      else {
        $requirements['commerce_otp_keyfile'] = array(
          'value' => $t('Not set yet'),
          'severity' => REQUIREMENT_INFO,
        );
      }
    }
    $requirements['commerce_otp_keyfile']['title'] = $t('Commerce OTP private key file');
  }
  return $requirements;
}

/**
 * Implements hook_schema().
 */
function commerce_otp_schema() {
  $schema = array();

  $schema['commerce_otp_posid'] = array(
    'description' => 'Shop ID and rules config connection',
    'fields' => array(
      'pos_id' => array(
        'description' => 'Shop ID from OTP',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'instance_id' => array(
        'description' => 'Rules instance_id, where config data are stored',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('instance_id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function commerce_otp_uninstall() {
  $variables = array(
    'commerce_otp_cron_enabled',
    'commerce_otp_cron_lastrun',
    'commerce_otp_image_style',
  );
  foreach ($variables as $variable) {
    variable_del($variable);
  }
}
