swagger: '2.0'
info:
  title: Openlucius API
  description: Connect your App with OpenLucius
  version: "1.0.0"
# the domain of the service
host: api-demo.openlucius.nl
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /api/v1
tags:
- name: "authentication"
  description: "Authentication actions."
- name: "crud"
  description: "Basic node / user actions."
paths:
  /activate:
    post:
      summary: The endpoint for activating users.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: users
        in: body
        description: A list of user id's to be activated.
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
    put:
      summary: The endpoint for activating a single user.
      description: ""
      tags:
      - crud
      parameters:
      - name: id
        in: query
        description: The user id to be activated.
        required: true
        type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
  /add_user_to_groups/{id}:
    put:
      summary: The endpoint for adding a user to multiple groups.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        description: The user id to add to the groups.
        required: true
        type: integer
      - name: groups
        in: body
        description: The groups to add this user to.
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /add_user_to_teams/{id}:
    put:
      summary: The endpoint for adding a user to multiple teams.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        description: The user id to add to the teams.
        required: true
        type: integer
      - name: teams
        in: body
        description: The teams to add this user to.
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /comment:
    post:
      summary: "For creating a comment."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The comment object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/comment"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the comment was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /comment/{id}:
    put:
      summary: "For updating a comment."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "The comment id to be updated"
        type: integer
        required: true
      - in: body
        name: body
        description: "The comment object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/comment"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the user was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        description: The id of the comment to be loaded.
        required: true
        type: integer
      tags:
      - crud
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/comment'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /deactivate:
    post:
      summary: The endpoint for deactivating users.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: users
        in: body
        description: A list of user id's to be deactivated.
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
  /deactivate/{id}:
    put:
      summary: The endpoint for deactivating a single user.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        description: The user id to be deactivated.
        required: true
        type: integer
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
  /folder:
    post:
      summary: "For creating a folder."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The folder object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/folder"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the folder was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /folder/{id}:
    put:
      summary: "For updating folder."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The folder object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/folder"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the folder was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        description: The id of the folder to be loaded.
        required: true
      tags:
      - crud
      responses:
        200:
          description: Returns a fully loaded folder object.
          schema:
            $ref: '#/definitions/folder'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /group:
    post:
      summary: "For creating a group."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The group object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/group"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the group was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /group/{id}:
    put:
      summary: "For updating group."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The group object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/group"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the group was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        description: The id of the group to be loaded.
        required: true
      tags:
      - crud
      responses:
        200:
          description: Returns a fully loaded group object.
          schema:
            $ref: "#/definitions/group"
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /message:
    post:
      summary: "For creating a message."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: body
        name: body
        description: "The message object that needs to be added."
        required: true
        schema:
          $ref: '#/definitions/message'
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the message was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /message/{id}:
    put:
      summary: "For updating message."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The message object that needs to be updated."
        required: true
        schema:
          $ref: '#/definitions/message'
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the message was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        description: The id of the message to be loaded.
        required: true
      tags:
      - crud
      responses:
        200:
          description: A successful request returns a fully populated message object.
          schema:
            $ref: "#/definitions/message"
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /move/{id}:
    put:
      summary: "For moving a node from one group to another."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "The node to be moved"
        type: integer
        required: true
      - in: body
        name: data
        description: "The group (and todolist for todo's) this node should be moved to."
        required: true
        schema:
          $ref: '#/definitions/move'
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the node was successfully moved.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /overview:
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      tags:
      - crud
      responses:
        200:
          description: Returns a full overview containing all objects.
          schema:
            $ref: "#/definitions/overview"
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /publish:
    post:
      summary: The endpoint for publishing a single node.
      description: ""
      parameters:
      - name: nodes
        in: body
        description: The nodes to be published.
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
  /publish/{id}:
    put:
      summary: The endpoint for publishing a single node.
      description: ""
      tags:
      - crud
      parameters:
      - name: id
        in: path
        description: The node id to be published.
        required: true
        type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
  /team:
    post:
      summary: "For creating a team."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: body
        name: body
        description: "The team object that needs to be added."
        required: true
        schema:
          $ref: '#/definitions/team'
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the team was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /team/{id}:
    put:
      summary: "For updating team."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The message object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/team"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the team was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        description: The id of the message to be loaded.
        type: integer
        required: true
      tags:
      - crud
      responses:
        200:
          description: A successful call returns a fully loaded object.
          schema:
            $ref: "#/definitions/team"
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /text_document:
    post:
      summary: "For creating a text_document."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: body
        name: body
        description: "The text_document object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/text_document"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the text_document was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /text_document/{id}:
    put:
      summary: "For updating text_document."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The message object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/text_document"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the team was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        description: The id of the text_document to be loaded.
        required: true
      tags:
      - crud
      responses:
        200:
          description: A successful call returns a fully loaded object.
          schema:
            $ref: "#/definitions/text_document"
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /todo:
    post:
      summary: "For creating a todo."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The todo object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/todo"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the todo was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /todo/{id}:
    put:
      summary: "For updating todo."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The todo object that needs to be updated."
        required: true
        schema:
          $ref: '#/definitions/todo'
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the team was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
        - name: id
          in: path
          type: integer
          description: The id of the todo to be loaded.
          required: true
      tags:
      - crud
      responses:
        200:
          description: A successful call returns a fully loaded object.
          schema:
            $ref: '#/definitions/todo'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /todo_list:
    post:
      summary: "For creating a todo_list."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: body
        name: body
        description: "The todo_list object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/todo_list"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the todo_list was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /todo_list/{id}:
    put:
      summary: "For updating a todo_list."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The todo_list object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/todo_list"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the todo_list was successfully updated.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        description: The id of the todo_list to be loaded.
        required: true
      tags:
      - crud
      responses:
        200:
          description: A successful call returns a fully loaded object.
          schema:
            $ref: "#/definitions/todo_list"
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        404:
          description: Not found, the object you want to update does not exist.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /remove_user_from_groups/{id}:
    put:
      summary: The endpoint for remove a user from multiple groups.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        description: The user id to remove from the groups.
        required: true
        type: integer
      - name: groups
        in: body
        description: The groups to remove this user from.
        schema:
          type: array
          items:
            type: integer
            format: int32
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /remove_user_from_teams/{id}:
    put:
      summary: The endpoint for remove a user from multiple teams.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        description: The user id to remove from the teams.
        required: true
        type: integer
      - name: teams
        in: body
        description: The teams to remove this user from.
        schema:
          type: array
          items:
            type: integer
            format: int32
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /unpublish:
    post:
      summary: The endpoint for unpublishing multiple nodes.
      description: ""
      parameters:
      - name: "nodes"
        in: "body"
        description: The nodes to be unpublished.
        required: true
        schema:
          type: array
          items:
            type: integer
      tags:
      - crud
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
  /unpublish/{id}:
    put:
      summary: The endpoint for unpublishing a single node.
      description: ""
      tags:
        - crud
      parameters:
        - name: id
          in: path
          description: The node id to be unpublished.
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/response'
  /user:
    post:
      summary: "For creating a user."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: body
        name: body
        description: "The user object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/user"
      tags:
      - crud
      responses:
        200:
          description: The response you receive when the user was successfully created.
          schema:
            $ref: '#/definitions/response'
        403:
          description: Access denied, could be a missing permission. Check the message for details.
        406:
          description: Not accepted, could be an incomplete request or a missing parameter. Check the message for details.
  /user/{id}:
    put:
      summary: "For updating a user."
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
      - in: body
        name: body
        description: "The user object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/user"
      tags:
      - crud
      responses:
        200:
          description: "The response you receive when the user was successfully updated."
          schema:
            $ref: '#/definitions/response'
        403:
          description: "Access denied, could be a missing permission. Check the message for details."
        404:
          description: "Not found, the object you want to update does not exist."
        406:
          description: "Not accepted, could be an incomplete request or a missing parameter. Check the message for details."
    get:
      summary: For getting the fully loaded object.
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: id
        in: path
        description: The id of the user to be loaded.
        required: true
        type: integer
      tags:
      - crud
      responses:
        200:
          description: A successful call returns a fully loaded object.
          schema:
            $ref: "#/definitions/user"
        403:
          description: "Access denied, could be a missing permission. Check the message for details."
        404:
          description: "Not found, the object you want to update does not exist."
        406:
          description: "Not accepted, could be an incomplete request or a missing parameter. Check the message for details."
  /user/login:
    post:
      summary: The login service.
      description: ""
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/userAuthentication"
      tags:
      - authentication
      responses:
        200:
          description: The response you receive if you have successfully logged in.
          schema:
            $ref: '#/definitions/userObject'
        401:
          description: Unauthorized.
          schema:
            type: string
        406:
          description: Not acceptable.
          schema:
            type: string
  /user/token:
    post:
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/userAuthentication"
      tags:
      - authentication
      responses:
        200:
          description: The response you receive if you have successfully requested a token.
          schema:
            description: A successful call returns a fully loaded object.
            $ref: '#/definitions/token'
        401:
          description: Unauthorized.
          schema:
            type: string
        406:
          description: Not acceptable.
          schema:
            type: string
definitions:
  comment:
    type: object
    required: ["body"]
    properties:
      id:
        type: integer
        format: int32
      body:
        type: string
      files:
        type: array
        items:
          type: object
          $ref: "#/definitions/file"
  folder:
    type: object
    required: ["title", "group"]
    properties:
      id:
        type: integer
        format: int32
      group:
        type: integer
        format: int32
      title:
        type: string
        example: "Important documents."
      show_clients:
        type: boolean
        default: false
  group:
    type: object
    required: ["title"]
    properties:
      id:
        type: integer
        format: int32
      title:
        type: string
        example: "Business relations"
      show_clients:
        type: boolean
        default: false
      body:
        type: string
        example: "Group for business related items."
  group_overview:
    type: object
    properties:
      id:
        type: integer
        description: The node id for this group.
      title:
        type: string
        description: The name of this group.
      todo_lists:
        type: array
        items:
          $ref: '#/definitions/reference'
      users:
        type: array
        items:
          $ref: '#/definitions/reference'
  file:
    properties:
      filename:
        type: string
        example: table.png
      path:
        type: string
        example: http://example.com/system/files/pictures/table.png
      filemime:
        type: string
        example: image/png
  response:
    properties:
      id:
        type: integer
        description: The id of the entity.
      message:
        type: string
        description: The message for the user.
      path:
        type: string
        description: The path to the entity.
  message:
    type: object
    required: ["title", "group"]
    properties:
      id:
        type: integer
        description: The id of the entity.
      title:
        type: string
        example: "I'd like to discuss something"
      group:
        type: integer
        format: int32
      body:
        type: string
        example: "To be or not to be, that is a question to discuss."
      show_clients:
        type: boolean
        default: false
      files:
        type: array
        items:
          type: object
          description: A file.
          $ref: "#/definitions/file"
  overview:
    properties:
      group_data:
        type: array
        items:
          $ref: '#/definitions/group_overview'
      statuses:
        type: array
        items:
          $ref: '#/definitions/reference'
  move:
    type: object
    required: ["group"]
    properties:
      group:
        type: integer
      todo_list:
        type: integer
  reference:
    properties:
      id:
        type: string
        description: The unique id for this item.
      title:
        type: string
        description: The title or name of this item.
  team:
    type: object
    required: ["title"]
    properties:
      id:
        type: integer
        format: int32
      title:
        type: string
        example: "LDAP professionals"
  text_document:
    type: object
    required: ["title", "group"]
    properties:
      id:
        type: integer
        format: int32
      title:
        type: string
        example: "Business rules"
      group:
        type: integer
        format: int32
      show_clients:
        type: boolean
        default: false
      body:
        type: string
        example: "Do not eat your lunch at your desk."
  todo:
    type: object
    required: ["title", "group", "todo_list"]
    properties:
      id:
        type: integer
        format: int32
      title:
        type: string
        example: "You should work"
      created:
        type: integer
        format: int32
      changed:
        type: integer
        format: int32
      body:
        type: string
        example: "What to do"
      files:
        type: array
        items:
          $ref: '#/definitions/file'
      group:
        type: array
        items:
          $ref: '#/definitions/reference'
      show_clients:
        type: boolean
        default: true
      date:
        type: integer
        format: int32
      status:
        type: array
        items:
          $ref: '#/definitions/reference'
      todo_list:
        type: array
        items:
          $ref: '#/definitions/reference'
      user:
        type: array
        items:
          $ref: '#/definitions/reference'
      comments:
        type: array
        items:
          $ref: '#/definitions/reference'
  todo_list:
    type: object
    required: ["group", "title"]
    properties:
      id:
        type: integer
        format: int32
      group:
        type: integer
        format: int32
      title:
        type: string
        example: "Sprint 0.5 - project initialisation"
      show_clients:
        type: boolean
        default: false
      body:
        type: string
        example: "Plan the project, draw uml diagrams, start programming."
  token:
    properties:
      token:
        type: string
        description: The requested token.
  user:
    properties:
      id:
        type: integer
        format: int32
        description: The unique identifier for a user.
      picture:
        type: object
        description: An image representing the user.
        $ref: "#/definitions/file"
      name:
        type: string
        description: The name of the user.
      mail:
        type: string
        description: The email adress of the user.
      groups:
        type: array
        items:
          $ref: '#/definitions/reference'
      body:
        type: string
        example: Hi I am Mr. Miyagi pleased to meet you.
      phone:
        type: array
        items:
          type: string
      labels:
        type: array
        items:
          $ref: '#/definitions/reference'
      teams:
        type: array
        items:
          $ref: '#/definitions/reference'
  userObject:
    properties:
      sessid:
        type: string
        description: The session id for this login.
      session_name:
        type: string
        description: The name of this session.
      token:
        type: string
        description: The session token.
      user:
        type: object
        description: The fully loaded user object.
        items:
          $ref: '#/definitions/user'
  userAuthentication:
    properties:
      username:
        type: string
        example: Pete
      password:
        type: string
        example: PetesPass
