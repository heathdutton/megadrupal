<?php
/**
 * @file role_toggle_adminmenu.module
 *
 * This implements - like devel user switch - a page call that toggles a role.
 * Having page calls that change state is generally a bad idea,
 * so having this in an optional module.
 */

/**
 * Implements hook_menu().
 */
function role_toggle_adminmenu_menu() {
  $items["admin/role-toggle/%"] = array(
    'title callback' => 'role_toggle_role_name',
    'title arguments' => array(2),
    'page callback' => 'role_toggle_adminmenu_switch',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'role_toggle_user_access',
    'access arguments' => array(2),
  );
  return $items;
}

/**
 * Implements hook_admin_menu_map().
 *
 * Beware: the % wildcard here must match that of hook_menu
 * and we have no autoloader here.
 */
function role_toggle_adminmenu_admin_menu_map() {
  $map['admin/role-toggle/%'] = array(
    'parent'=> 'admin/role-toggle',
    'arguments' => array(
      array(
  			'%' => array_keys(role_toggle_allowed_roles()),
      ),
    ),
  );
  return $map;
}

/**
 * Implements hook_admin_menu_output_alter().
 */
function role_toggle_adminmenu_admin_menu_output_alter(&$content) {
  if(isset($content['menu']['admin/role-toggle'])) {
    $togglers = &$content['menu']['admin/role-toggle'];
    $url_options = array('query' => drupal_get_destination());
    $child_keys = element_children($togglers);
    foreach($child_keys as $child_key) {
      // attach css class.
      $child_key_list = explode('/', $child_key);
      $rid = array_pop($child_key_list);
      $class = role_toggle_indicator_class(role_toggle_role_state($rid));
      $togglers[$child_key]['#attributes'] = array('class' => array($class));
      // attach destination
      $togglers[$child_key]['#options'] = $url_options;
    }
    // css for attribute classes is already added in info file as menus have no '#attach'
  }
}

/**
 * Switch page callback.
 *
 * @param int $rid Role id
 */
function role_toggle_adminmenu_switch($rid) {
  // Yes, we're paranoid.
  if(role_toggle_user_access($rid)) {
    $target_state = role_toggle_toggle($rid);
    role_toggle_set_message($rid, $target_state);
  }
  drupal_goto();
}
