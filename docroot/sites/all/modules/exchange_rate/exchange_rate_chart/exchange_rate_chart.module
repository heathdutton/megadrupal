<?php

function exchange_rate_chart_menu() {

  $items[ 'exchange_rate/chart' ] = array(
    'title' => 'Exchange rate chart',
    'description' => "Settings for the site's exchange rate.",
    'page callback' => 'exchage_rate_chart_page',
    'page arguments' => array( 2, 3 ),
    'access arguments' => array( 'access content' ),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function exchage_rate_chart_page( $country, $currency ) {

  $banks_array = array( );
  $dates_array = array( );
  $currency_bd = array( );
  $date_ini = time() - (1 * 24 * 60 * 60 * 30); // Fetch last month

  //Get information from official bank to use in chart
  $official_bank = module_invoke_all('exchange_rate_get_config',$country,'official_bank');
        
  $banks = array_filter( variable_get( $country . '_banks', array( ) ) );
  
  if(isset($official_bank['label'])) {
   array_unshift($banks,$official_bank['label']);
  }
  
  $query = db_select( 'exchange_rate_historical', 'erh' )
      ->fields( 'erh', array( 'bank', 'currency', 'date', 'buy', 'sell' ) )
      ->condition( 'country', $country )
      ->condition( 'currency', $currency )
      ->condition( 'bank', $banks )
      ->condition( 'date', $date_ini, '>=' )
      ->groupby( 'day,bank' )
      ->orderBy( 'date','ASC' );


  $query->addExpression( 'DATE(FROM_UNIXTIME(date))', 'day' );

  $results_info_banks = $query->execute();

  $query = db_select( 'exchange_rate_historical', 'erh' )
      ->condition( 'country', $country )
      ->condition( 'currency', $currency )
      ->condition( 'date', $date_ini, '>=' )
      ->condition( 'buy', 0, '>' )
      ->condition( 'sell', 0, '>' )
      ->condition( 'bank', $banks );

  $query->addExpression( 'MIN(buy)', 'currency_min_buy' );
  $query->addExpression( 'MAX(buy)', 'currency_max_buy' );
  $query->addExpression( 'MIN(sell)', 'currency_min_sell' );
  $query->addExpression( 'MAX(sell)', 'currency_max_sell' );

  $currency_min = $query->execute()->fetchAssoc();

  extract( $currency_min );

  while ( $record = $results_info_banks->fetchAssoc() ) {

    $banks_array[ $record[ 'bank' ] ][ 'buy' ][ ] = $record[ 'buy' ] - $currency_min_buy;

    $banks_array[ $record[ 'bank' ] ][ 'sell' ][ ] = $record[ 'sell' ] - $currency_min_sell;

    if ( !in_array( $record[ 'day' ], $dates_array ) ) {
      $dates_array[ ] = $record[ 'day' ];
    }
  }

  $title = t( 'Variation of the currency' ) . ' ' . strtoupper( $currency ) . ' ' . t( "for" ) . ' ' . t( 'buy' ) . ' ' . t( 'at' ) . ' ' . ucfirst( str_replace( '_', ' ', $country ) );
  $chart = array(
    '#chart_id' => $country . "_" . $currency . "_buy",
    '#title' => $title,
    '#type' => CHART_TYPE_LINE,
    '#size' => chart_size( 600, 350 ),
    '#adjust_resolution' => TRUE,
  );

  for ( $i = 1; $i < count( $dates_array ); $i++ ) {
    $array_sepa = explode( "-", $dates_array[ $i ] );
    $chart[ '#mixed_axis_labels' ][ CHART_AXIS_X_BOTTOM ][ 1 ][ ] = chart_mixed_axis_label( $array_sepa[ 1 ] . "-" . $array_sepa[ 2 ] );
  }

  $chart[ '#mixed_axis_labels' ][ CHART_AXIS_X_BOTTOM ][ 2 ][ ] = chart_mixed_axis_label( t( 'Days' ), 50 );
  $chart[ '#mixed_axis_labels' ][ CHART_AXIS_Y_LEFT ][ 1 ][ ] = chart_mixed_axis_label( t( 'Price' ), 95 );

  // Date for chart buy    
  foreach ( $banks_array as $key => $value ) {
    $chart[ '#data' ][ $key ] = $value[ 'buy' ];
    $chart[ '#legends' ][ ] = t( $key );
    $chart[ '#data_colors' ][ ] = random_color();
  }
  
  $chart[ '#mixed_axis_labels' ][ CHART_AXIS_Y_LEFT ][ 0 ][ ] = chart_mixed_axis_range_label( $currency_min_buy, $currency_max_buy );
  $chart_buy = theme( 'chart', array( 'chart' => $chart ) );

  unset( $chart[ '#data' ] );
  unset( $chart[ '#legends' ] );
  unset( $chart[ '#data_colors' ] );
  unset( $chart[ '#mixed_axis_labels' ][ CHART_AXIS_Y_LEFT ][ 0 ] );
  // Date for chart sell

  $title = t( 'Variation of the currency' ) . ' ' . strtoupper( $currency ) . ' ' . t( "for" ) . ' ' . t( 'sell' ) . ' ' . t( 'at' ) . ' ' . ucfirst( str_replace( '_', ' ', $country ) );
  $chart[ '#title' ] = $title;
  $chart[ '#chart_id' ] = $country . "_" . $currency . "_sell";
  foreach ( $banks_array as $key => $value ) {
    $chart[ '#data' ][ $key ] = $value[ 'sell' ];
    $chart[ '#legends' ][ ] = t( $key );
    $chart[ '#data_colors' ][ ] = random_color();
  }

  $chart[ '#mixed_axis_labels' ][ CHART_AXIS_Y_LEFT ][ 0 ][ ] = chart_mixed_axis_range_label( $currency_min_sell, $currency_max_sell );
  $chart_sell = theme( 'chart', array( 'chart' => $chart ) );

  return $chart_buy . "<br/>" . $chart_sell;
}

function random_color() {
  mt_srand( ( double ) microtime() * 1000000 );
  $c = '';
  while ( strlen( $c ) < 6 ) {
    $c .= sprintf( "%02X", mt_rand( 0, 255 ) );
  }
  return $c;
}