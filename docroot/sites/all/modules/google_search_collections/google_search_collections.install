<?php

/**
 * @file
 * Install and update hooks for the Google Search Collections module.
 */


/**
 * Implementation of hook_schema().
 */
function google_search_collections_schema() {
  $schema['google_search_collections'] = array(
    'description' => t('Table storing search collection definitions.'),
    'export' => array(
      'key' => 'path',
      'key name' => 'Path',
      'primary key' => 'pid',
      'identifier' => 'collection',
      'default hook' => 'default_google_search_collections',
      'export callback' => 'google_search_collections_export',
      'save callback' => 'google_search_collections_save',
      'status callback' => 'google_search_collections_set_status',
      'delete callback' => 'google_search_collections_delete',
      'api' => array(
        'owner' => 'google_search_collections',
        'api' => 'default_google_search_collections',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'pid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary key for the table.',
        'no export' => TRUE,
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'URL path part and unique ID.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'End-user title for the collection.',
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Brief description for admin notes.',
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'normal',
        'description' => 'Google search collection preset data.',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('pid'),
    'unique keys' => array(
      'name' => array('path'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function google_search_collections_install() {
  // Ensure our hooks are executed after GSS / core search.
  db_update('system')
    ->fields(array(
      'weight' => 5,
    ))
    ->condition('name', 'google_search_collections')
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function google_search_collections_uninstall() {
  variable_del('google_search_collections_default_collection');
  variable_del('google_search_collections_unset_module_defaults');
}
