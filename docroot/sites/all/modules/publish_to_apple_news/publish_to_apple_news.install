<?php

/**
 * @file
 * Install, update and uninstall functions for the Publish to Apple News module.
 */



/**
 * Implements hook_enable().
 */
function publish_to_apple_news_enable() {  
  // Ensure module executes after token
  db_update('system')
    ->fields(array(
      'weight' => 1,
    ))
    ->condition('type', 'module')
    ->condition('name', 'publish_to_apple_news')
    ->execute();
}

/**
 * Implements hook_schema().
 */
function publish_to_apple_news_schema() {
  $schema['publish_to_apple_news_article_types'] = array(
    'description' => 'The base table for Publish to Apple News article types.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary identifier of this article type.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'content_type' => array(
        'description' => 'The content type this article type will generate Apple News articles from.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'The Drupal-only description of this article type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The article title.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'subtitle' => array(
        'description' => 'The article subtitle.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'excerpt' => array(
        'description' => 'A short summary of the contents of the article.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The language code of the article.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'metadata_thumbnail_url' => array(
        'description' => 'The URL of an image that can represent this document in a list of other documents. Note: only JPEG and PNG image types are supported.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'metadata_canonical_url' => array(
        'description' => 'The canonical URL of a web version of this document.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'metadata_authors' => array(
        'description' => "The names of the article's authors.",
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
      ),
      'metadata_keywords' => array(
        'description' => 'Keywords that describe the article. You can set up to 50 keywords.',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
      ),
      'layout_columns' => array(
        'description' => 'The number of columns the article was designed for.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'layout_width' => array(
        'description' => 'The width (in points) this article was designed for.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'layout_margin' => array(
        'description' => 'The outer (left and right) margins (in points) for this article.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'layout_gutter' => array(
        'description' => 'The gutter size (in points) to use for spacing between columns for this article.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tid'),
  );
  $schema['publish_to_apple_news_component_layouts'] = array(
    'description' => 'The base table for Publish to Apple News component layouts.',
    'fields' => array(
      'lid' => array(
        'description' => 'The primary identifier of this component layout.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tid' => array(
        'description' => 'The tid of the Publish to Apple News Article Type this layout belongs to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'identifier' => array(
        'description' => 'The unique identifier for this layout to be referenced by components.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'column_start' => array(
        'description' => "Indicates which column the component's start position is in, based on the number of columns in the document.",
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'column_span' => array(
        'description' => 'Indicates how many columns the component spans, based on the number of columns in the document.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'margin_top' => array(
        'description' => 'The top margin in points.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'margin_bottom' => array(
        'description' => 'The bottom margin in points.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'content_inset_top' => array(
        'description' => 'Boolean that describes whether the top inset should be taken into account.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'content_inset_right' => array(
        'description' => 'Boolean that describes whether the right inset should be taken into account.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'content_inset_bottom' => array(
        'description' => 'Boolean that describes whether the bottom inset should be taken into account.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'content_inset_left' => array(
        'description' => 'Boolean that describes whether the left inset should be taken into account.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'ignore_document_margin' => array(
        'description' => "Indicates whether a document's margins should be respected or should be ignored by the component.",
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'ignore_document_gutter' => array(
        'description' => "Indicates whether the gutters (if any) to the left and right of the component should be ignored.",
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'minimum_height' => array(
        'description' => 'Describes the minimum height of the component.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('lid'),
    'foreign keys' => array(
      'layout_article_type' => array(
        'table' => 'publish_to_apple_news_article_types',
        'columns' => array('tid' => 'tid'),
      ),
    ),
  );
  $schema['publish_to_apple_news_component_styles'] = array(
    'description' => 'The base table for Publish to Apple News component styles.',
    'fields' => array(
      'sid' => array(
        'description' => 'The primary identifier of this component style.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tid' => array(
        'description' => 'The tid of the Publish to Apple News Article Type this style belongs to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'identifier' => array(
        'description' => 'The unique identifier for this style to be referenced by components.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'background_color' => array(
        'description' => "The component's background color, defined as a 3- to 8-character RGBA hexidecimal string.",
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'opacity' => array(
        'description' => 'The opacity of the component, set as a float value between 0 (completely transparent) and 1 (completely opaque).',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'image_fill_attachment' => array(
        'description' => 'Indicates how the fill should behave when a user scrolls.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'image_fill_url' => array(
        'description' => 'The URL of the image file to use for filling the component.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'image_fill_mode' => array(
        'description' => 'Indicates how the image fill should be displayed.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'image_fill_vertical_alignment' => array(
        'description' => 'The vertical alignment of the image fill within its component.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'image_fill_horizontal_alignment' => array(
        'description' => 'The horizontal alignment of the image fill within its component.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'border_color' => array(
        'description' => 'The stroke color, defined as a 3- to 8-character RGBA hexadecimal string.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'border_width' => array(
        'description' => 'The width of the stroke line. Can be either an integer value in points, or a string compliant with the supported units.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'border_style' => array(
        'description' => 'Defines the style of the stroke.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'border_top' => array(
        'description' => 'Indicates whether the border should be applied to the top.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'border_bottom' => array(
        'description' => 'Indicates whether the border should be applied to the bottom.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'border_left' => array(
        'description' => 'Indicates whether the border should be applied to the left.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'border_right' => array(
        'description' => 'Indicates whether the border should be applied to the right.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('sid'),
    'foreign keys' => array(
      'style_article_type' => array(
        'table' => 'publish_to_apple_news_article_types',
        'columns' => array('tid' => 'tid'),
      ),
    ),
  );
  $schema['publish_to_apple_news_component_text_styles'] = array(
    'description' => 'The base table for Publish to Apple News component text styles.',
    'fields' => array(
      'tsid' => array(
        'description' => 'The primary identifier of this component text style.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tid' => array(
        'description' => 'The tid of the Publish to Apple News Article Type this text style belongs to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'identifier' => array(
        'description' => 'The unique identifier for this text style to be referenced by components.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'font_name' => array(
        'description' => 'The PostScript name of the font to apply.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'font_size' => array(
        'description' => 'The size of the font, in points.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'text_color' => array(
        'description' => "The text color, defined as a 3- to 8-character RGBA hexadecimal string. Should include '#'.",
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'text_transform' => array(
        'description' => 'The transform to apply to the text.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'underline' => array(
        'description' => 'Whether to underline the text.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'strikethrough' => array(
        'description' => 'Whether to have a strike through the text.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'background_color' => array(
        'description' => "The background color for text lines, defined as a 3- to 8-character RGBA hexadecimal string. Should include '#'.",
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'vertical_alignment' => array(
        'description' => 'The vertical alignment of the text, allowing for superscript and subscript.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'tracking' => array(
        'description' => 'The amount of tracking for characters in text, in percentage of the font size, as a decimal.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'text_alignment' => array(
        'description' => 'Justification (horizontal alignment) style for all text within the component.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'line_height' => array(
        'description' => 'The default line height, in points.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'hyphenation' => array(
        'description' => 'Indicates whether the text should hyphenate when necessary.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'link_style_font_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'link_style_font_size' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'link_style_text_color' => array(
        'description' => "Should include '#'.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'link_style_underline' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'dropcap_number_of_lines' => array(
        'description' => 'Indicates the number of text lines this drop cap should span. Minimum is 2, maximum is 6.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'dropcap_number_of_characters' => array(
        'description' => 'Indicates the number of characters this drop cap should use. Minimum is 1, maximum is 4.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'dropcap_font_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'dropcap_text_color' => array(
        'description' => "Should include '#'.",
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => 0,
      ),
      'dropcap_background_color' => array(
        'description' => "Should include '#'.",
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => 0,
      ),
      'dropcap_padding' => array(
        'description' => 'Sets the padding of the drop cap in points.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tsid'),
    'foreign keys' => array(
      'text_style_article_type' => array(
        'table' => 'publish_to_apple_news_article_types',
        'columns' => array('tid' => 'tid'),
      ),
    ),
  );

  $schema['publish_to_apple_news_posted_articles'] = array(
    'description' => 'The base table for posted Publish to Apple News article ids.',
    'fields' => array(
      'entity_type' => array(
        'description' => 'The entity type this data is attached to.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_id' => array(
        'description' => 'The entity id this data is attached to.',
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'article_id' => array(
        'description' => 'The ID of the posted article.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'share_url' => array(
        'description' => 'The article share URL. Can be opened by any device with Apple News',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'sections' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'revision' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'preview' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('entity_type', 'entity_id', 'article_id'),
    'unique keys' => array(
      'entity' => array('entity_type', 'entity_id'),
    ),
  );

  // Define schemas for each component type
  drupal_load('module', 'publish_to_apple_news');
  module_load_include('inc', 'publish_to_apple_news', 'includes/components/component_base');

  $component_types = publish_to_apple_news_component_types();
  foreach ($component_types as $entity_machine_name => $entity_class_name) {
    $include_file = str_replace('publish_to_apple_news_', 'includes/components/', $entity_machine_name);
    module_load_include('inc', 'publish_to_apple_news', $include_file);
    $class = new $entity_class_name(NULL);
    $schema[$entity_machine_name . 's'] = $class->schema();
  }

  return $schema;
}
