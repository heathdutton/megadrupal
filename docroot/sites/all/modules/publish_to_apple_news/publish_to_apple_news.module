<?php

/**
 * @file
 * Enables Drupal integration with Apple News.
 */

define('APPLE_NEWS_MODULE_VERSION', '7.x-1.x-dev');
define('APPLE_NEWS_FORMAT_VERSION', '0.10.13');

module_load_include('inc', 'publish_to_apple_news', 'includes/admin');
module_load_include('inc', 'publish_to_apple_news', 'includes/components.admin');

function publish_to_apple_news_component_types() {
  return array(
    'publish_to_apple_news_ad_component' => 'AppleNewsAdComponent',
    'publish_to_apple_news_author_component' => 'AppleNewsAuthorComponent',
    'publish_to_apple_news_body_component' => 'AppleNewsBodyComponent',
    'publish_to_apple_news_caption_component' => 'AppleNewsCaptionComponent',
    'publish_to_apple_news_container_component' => 'AppleNewsContainerComponent',
    'publish_to_apple_news_divider_component' => 'AppleNewsDividerComponent',
    'publish_to_apple_news_figure_component' => 'AppleNewsFigureComponent',
    'publish_to_apple_news_gallery_component' => 'AppleNewsGalleryComponent',
    'publish_to_apple_news_header_component' => 'AppleNewsHeaderComponent',
    'publish_to_apple_news_heading_component' => 'AppleNewsHeadingComponent',
    'publish_to_apple_news_intro_component' => 'AppleNewsIntroComponent',
    'publish_to_apple_news_mosaic_component' => 'AppleNewsMosaicComponent',
    'publish_to_apple_news_photo_component' => 'AppleNewsPhotoComponent',
    'publish_to_apple_news_pullquote_component' => 'AppleNewsPullquoteComponent',
    'publish_to_apple_news_title_component' => 'AppleNewsTitleComponent',
    'publish_to_apple_news_section_component' => 'AppleNewsSectionComponent',
  );
}

/**
 * Implements hook_entity_info().
 */
function publish_to_apple_news_entity_info() {
  $entities['publish_to_apple_news_article_type'] = array(
    'label' => t('Apple News Article Type'),
    'plural label' => t('Apple News Article Types'),
    'entity class' => 'Entity',
    'controller class' => 'EntityAPIControllerExportable',
    'base table' => 'publish_to_apple_news_article_types',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'tid',
      'label' => 'identifier',
    ),
    'label callback' => 'entity_class_label',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => '', // Set so we can use entity_ui_controller()
      'controller class' => 'EntityDefaultUIController',
      'file' => 'includes/article_type.admin.inc',
    ),
    'views controller class' => 'EntityDefaultViewsController',
    'module' => 'publish_to_apple_news',
  );
  $entities['publish_to_apple_news_component_layout'] = array(
    'label' => t('Apple News Component Layout'),
    'plural label' => t('Apple News Component Layouts'),
    'entity class' => 'Entity',
    'controller class' => 'EntityAPIControllerExportable',
    'base table' => 'publish_to_apple_news_component_layouts',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'lid',
      'label' => 'identifier',
    ),
    'label callback' => 'entity_class_label',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => '',
      'controller class' => 'EntityDefaultUIController',
      'file' => 'includes/component_layout.admin.inc',
    ),
    'views controller class' => 'EntityDefaultViewsController',
    'module' => 'publish_to_apple_news',
  );
  $entities['publish_to_apple_news_component_style'] = array(
    'label' => t('Apple News Component Style'),
    'plural label' => t('Apple News Component Styles'),
    'entity class' => 'Entity',
    'controller class' => 'EntityAPIControllerExportable',
    'base table' => 'publish_to_apple_news_component_styles',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'sid',
      'label' => 'identifier',
    ),
    'label callback' => 'entity_class_label',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => '',
      'controller class' => 'EntityDefaultUIController',
      'file' => 'includes/component_style.admin.inc',
    ),
    'views controller class' => 'EntityDefaultViewsController',
    'module' => 'publish_to_apple_news',
  );
  $entities['publish_to_apple_news_component_text_style'] = array(
    'label' => t('Apple News Component Text Style'),
    'plural label' => t('Apple News Component Text Styles'),
    'entity class' => 'Entity',
    'controller class' => 'EntityAPIControllerExportable',
    'base table' => 'publish_to_apple_news_component_text_styles',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'tsid',
      'label' => 'identifier',
    ),
    'label callback' => 'entity_class_label',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => '',
      'controller class' => 'EntityDefaultUIController',
      'file' => 'includes/component_text_style.admin.inc',
    ),
    'views controller class' => 'EntityDefaultViewsController',
    'module' => 'publish_to_apple_news',
  );

  // Define entities for components
  $component_types = publish_to_apple_news_component_types();
  foreach ($component_types as $entity_machine_name => $entity_class_name) {
    $class = new $entity_class_name(NULL);
    $entities[$entity_machine_name] = array(
      'label' => $class->name,
      'entity class' => 'Entity',
      'controller class' => 'EntityAPIControllerExportable',
      'base table' => $entity_machine_name . 's',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'cid',
        'label' => 'identifier',
      ),
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
      'admin ui' => array(
        'path' => '',
        'controller class' => 'EntityDefaultUIController',
      ),
      'views controller class' => 'EntityDefaultViewsController',
      'module' => 'publish_to_apple_news',
    );
  }

  return $entities;
}

/**
 * Implements hook_menu().
 */
function publish_to_apple_news_menu() {
  $items['admin/structure/publish-to-apple-news'] = array(
    'title' => 'Apple News Article Types',
    'description' => 'Manage Publish to Apple News article types.',
    'page callback' => 'publish_to_apple_news_article_types_page',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/structure/publish-to-apple-news/list'] = array(
    'title' => 'Article Types',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/config/services/publish-to-apple-news'] = array(
    'title' => 'Apple News Settings',
    'description' => 'Set your Apple News API key and shared secret here.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.inc',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 5,
  );
  $items['admin/config/services/publish-to-apple-news/settings'] = array(
    'title' => 'Apple News Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/structure/publish-to-apple-news/create-template'] = array(
    'title' => 'Create Article Type from Template',
    'description' => 'Create a new Publish to Apple News article type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_article_type_template_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 1,
  );
  $items['admin/structure/publish-to-apple-news/create-template/%/%'] = array(
    'title' => 'Create Article Type from Template',
    'description' => 'Create a new Publish to Apple News article type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_article_type_template_example_form', 4, 5),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 1,
  );
  $items['admin/structure/publish-to-apple-news/create'] = array(
    'title' => 'Create Article Type Manually',
    'description' => 'Create a new Publish to Apple News article type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_article_type_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 2,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type'] = array(
    'title' => 'Configure Article Type',
    'description' => 'Configure a Publish to Apple News article type',
    'page callback' => 'publish_to_apple_news_type_configure_page',
    'page arguments' => array(4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/components.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/components'] = array(
    'title' => 'Components',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/settings'] = array(
    'title' => 'Settings',
    'description' => 'Edit an existing Publish to Apple News article type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_article_type_form', 4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/preview'] = array(
    'title' => 'Download Preview',
    'description' => 'Download a preview',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_download_preview_form', 4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );
  $items['publish-to-apple-news/node-autocomplete/%'] = array(
    'title' => 'Node autocomplete',
    'page callback' => '_publish_to_apple_news_node_autocomplete',
    'page arguments' => array(2),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/delete'] = array(
    'title' => 'Delete Article Type',
    'description' => 'Delete a Publish to Apple News article type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_article_type_delete_form', 4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/article_type.admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/layouts'] = array(
    'title' => 'Component Layouts',
    'description' => 'Manage component layouts for a Publish to Apple News article type',
    'page callback' => 'publish_to_apple_news_component_layouts_page',
    'page arguments' => array(4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_layout.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 3,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/layouts/create'] = array(
    'title' => 'Add Component Layout',
    'description' => 'Create a new component layout',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_layout_form', 4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_layout.admin.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/layouts/%publish_to_apple_news_component_layout/edit'] = array(
    'title' => 'Edit Component Layout',
    'description' => 'Edit an existing Publish to Apple News component layout',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_layout_form', 4, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_layout.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/layouts/%publish_to_apple_news_component_layout/delete'] = array(
    'title' => 'Delete Component Layout',
    'description' => 'Delete a Publish to Apple News component layout',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_layout_delete_form', 4, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_layout.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/styles'] = array(
    'title' => 'Component Styles',
    'description' => 'Manage component styles for a Publish to Apple News article type',
    'page callback' => 'publish_to_apple_news_component_styles_page',
    'page arguments' => array(4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_style.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 3,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/styles/create'] = array(
    'title' => 'Add Component Style',
    'description' => 'Create a new component style',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_style_form', 4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_style.admin.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/styles/%publish_to_apple_news_component_style/edit'] = array(
    'title' => 'Edit Component Style',
    'description' => 'Edit an existing Publish to Apple News component style',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_style_form', 4, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_style.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/styles/%publish_to_apple_news_component_style/delete'] = array(
    'title' => 'Delete Component Style',
    'description' => 'Delete a Publish to Apple News component style',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_style_delete_form', 4, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_style.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/textstyles'] = array(
    'title' => 'Component Text Styles',
    'description' => 'Manage component text styles for a Publish to Apple News article type',
    'page callback' => 'publish_to_apple_news_component_text_styles_page',
    'page arguments' => array(4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_text_style.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 3,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/textstyles/create'] = array(
    'title' => 'Add Component Text Style',
    'description' => 'Create a new component text style',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_text_style_form', 4),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_text_style.admin.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/textstyles/%publish_to_apple_news_component_text_style/edit'] = array(
    'title' => 'Edit Component Text Style',
    'description' => 'Edit an existing Publish to Apple News component text style',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_text_style_form', 4, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_text_style.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/structure/publish-to-apple-news/types/%publish_to_apple_news_article_type/textstyles/%publish_to_apple_news_component_text_style/delete'] = array(
    'title' => 'Delete Component Text Style',
    'description' => 'Delete a Publish to Apple News component text style',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_text_style_delete_form', 4, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/component_text_style.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );
  $items['admin/structure/publish-to-apple-news/components/%/%/delete'] = array(
    'title' => 'Delete Component',
    'description' => 'Delete a component',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publish_to_apple_news_component_delete_form', 4, 5),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/components.admin.inc',
  );
  $items['publish-to-apple-news/ajax/weight/%/%/%/%'] = array(
    'title' => 'Save weights',
    'page callback' => 'publish_to_apple_news_save_weights',
    'page arguments' => array(3, 4, 5, 6),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/components.admin.inc',
  );

  return $items;
}

function publish_to_apple_news_theme() {
  return array(
    'publish_to_apple_news_example_article_radios' => array(
      'render element' => 'element', 
    ),
    'publish_to_apple_news_example_article_radio' => array(
      'render element' => 'element',
    )
  );
}

function publish_to_apple_news_theme_registry_alter(&$theme_registry) {
    $theme_registry['publish_to_apple_news_example_article_radios']['function'] = "publish_to_apple_news_example_article_radios";
    $theme_registry['publish_to_apple_news_example_article_radio']['function'] = "publish_to_apple_news_example_article_radio";
}

function publish_to_apple_news_article_type_load($id) {
  return entity_load_single('publish_to_apple_news_article_type', $id);
}

function publish_to_apple_news_component_layout_load($id) {
  return entity_load_single('publish_to_apple_news_component_layout', $id);
}

function publish_to_apple_news_component_style_load($id) {
  return entity_load_single('publish_to_apple_news_component_style', $id);
}

function publish_to_apple_news_component_text_style_load($id) {
  return entity_load_single('publish_to_apple_news_component_text_style', $id);
}

/**
 * Helper: Save section data
 */
function publish_to_apple_news_save_sections_preview($node) {  
  if (empty($node->publish_to_apple_news_publish_sections)) {
    return;
  }
  
  //save sections
  $sections = array();
  foreach ($node->publish_to_apple_news_publish_sections as $sid) {
    if ($sid) {
      $sections[] = $sid;
    }
  }
  
  if (empty($sections)) {
    $default_section = variable_get('publish_to_apple_news_default_section_id', '');
    $sections = $default_section;
  } else {
    $sections = implode(",", $sections);
  }

  publish_to_apple_news_set_posted_article('node', $node->nid, FALSE, $sections, FALSE, $node->is_preview);
}

/**
 * Helper function for posting the node to api
 */
function publish_to_apple_news_post_article($nid, $debug = FALSE) {
  module_load_include('inc', 'publish_to_apple_news', 'includes/generators');
  module_load_include('php', 'publish_to_apple_news', 'library/AppleNews/AppleNews');
  
  $node = node_load($nid);

  $data = publish_to_apple_news_generate_article($node);

  if ($data === FALSE) {
    return FALSE;
  }

  //check if article has already been posted
  $article_data = publish_to_apple_news_get_article_data('node', $node->nid);
  $article_id = empty($article_data['article_id']) ? FALSE : $article_data['article_id'];
  $sections = empty($article_data['sections']) ? array() : explode(",", $article_data['sections']);
  $revision = empty($article_data['revision']) ? FALSE : $article_data['revision'];
  $is_preview = !empty($article_data['preview']) ? TRUE : FALSE;

  $public_key = variable_get('publish_to_apple_news_api_key', '');
  $private_key = variable_get('publish_to_apple_news_shared_secret', '');
  $channel_id = variable_get('publish_to_apple_news_default_channel_id', '');

  if ($public_key === '' || $private_key === '' || $channel_id == '') {
    watchdog('publish_to_apple_news', 'Missing module configuration', array(), WATCHDOG_WARNING);
    drupal_set_message(t('Missing module configuration. Visit /admin/config/services/publish-to-apple-news to configure your Apple News settings.'));
    return FALSE;
  }

  $apple_news = new AppleNews($public_key, $private_key);
  $json_string = str_replace('\/', '/', json_encode($data['article']));

  if ($debug) {
    dpm($data);
    dpm($json_string);
    return FALSE;
  }

  //ensure sections is array of section ids
  if (empty($sections)) {
    $sections = array();
    $default_section = variable_get('publish_to_apple_news_default_section_id', '');
    if ($default_section) {
      $sections[] = $default_section;
    }
  }

  try {
    if (empty($article_id)) {
      // New article
      $post_message = 'posted to';
      $article = $apple_news->postArticle($channel_id, $json_string, $data['files'], $sections, FALSE, FALSE, $is_preview);
    } else {
      // Update existing article
      // Fix for API bug - revision returned with a new article is always AAAAAAAAAAAAAAAAAAAAAA==
      // Make a get call to the new article, which returns the correct revision
      // TODO: remove the block below once the API bug is fixed
      if (!empty($article_id)) {
        $existing_article = $apple_news->getArticle($article_id);
        $revision = $existing_article['revision'];
      }
      
      $post_message = 'updated on';
      $article = $apple_news->postArticle($channel_id, $json_string, $data['files'], $sections, $article_id, $revision, $is_preview);
    }
    
    if (!empty($article['id'])) {
      publish_to_apple_news_set_posted_article('node', $node->nid, $article, FALSE, $article['revision'], $is_preview);
    }
    
    drupal_set_message(t('%title has been successfully %post_message AppleNews. Share with: %url', array(
      '%title' => $node->title,
      '%post_message' => $post_message,
      '%url' => $article['shareUrl'],
    )));
    watchdog('publish_to_apple_news', 'Apple News article successfully posted with id %id', array('%id' => $article['id']));
    return TRUE;
  } catch (Exception $e) {
    drupal_set_message(t('Article post failed. Error: %error', array('%error' => $e->getMessage())), 'error');
    watchdog('publish_to_apple_news', 'Error received when posting article: %error', array('%error' => $e->getMessage()), WATCHDOG_ERROR);
    return FALSE;
  }
}

function publish_to_apple_news_get_article_data($entity_type, $entity_id) {
  $result = db_select('publish_to_apple_news_posted_articles', 'a')
    ->fields('a')
    ->condition('entity_type', $entity_type)
    ->condition('entity_id', $entity_id)
    ->execute()
    ->fetchAssoc();

  if (!empty($result)) {
    return $result;
  }
  return FALSE;
}



/**
 * Helper function update the posted article table
 *
 * @param $entity_type
 *  The entity type of the drupal content.
 * @param $entity_id
 *  The entity id of the drupal content.
 * @param $article
 *  The article id, FALSE to leave unchanged.
 * @param $sections
 *  The sections the content should be posted to. FALSE to leave unchanged.
 * @param $revision
 *  The revision returned by Apple News.
 * @param $is_preview
 *  Whether the article is a preview.
 *
 */
function publish_to_apple_news_set_posted_article($entity_type, $entity_id, $article = FALSE, $sections = FALSE, $revision = FALSE, $is_preview = FALSE) {

  $update_fields = array();

  if ($article !== FALSE) {
    $update_fields['article_id'] = $article['id'];
    $update_fields['share_url'] = $article['shareUrl'];
  }

  if ($sections !== FALSE) {
    $update_fields['sections'] = $sections;
  }
  
  if ($revision !== FALSE) {
    $update_fields['revision'] = $revision;
  }
  
  $update_fields['preview'] = ($is_preview) ? 1 : 0;

  if (publish_to_apple_news_get_article_data($entity_type, $entity_id)) {
    db_update('publish_to_apple_news_posted_articles')
    ->fields($update_fields)
    ->condition('entity_type', $entity_type)
    ->condition('entity_id', $entity_id)
    ->execute();
  }
  else {
    $update_fields['entity_type'] = $entity_type;
    $update_fields['entity_id'] = $entity_id;

    db_insert('publish_to_apple_news_posted_articles')
    ->fields($update_fields)
    ->execute();
  }
}

/**
 * Helper function to easily convert an image URL to a bundle:// filename and file system path.
 *
 * @param $image_url
 *  The web-accessible URL of the image, or Drupal URI.
 *
 * @return array
 *  An array with 'bundle' and 'realpath' properties.
 */
function publish_to_apple_news_convert_image($image_url) {
  global $base_url;
  $file_public_path = variable_get('file_public_path', 'sites/default/files');
  if (substr($file_public_path, 0, 1) != '/') {
    $file_public_path = '/' . $file_public_path;
  }
  if (substr($file_public_path, -1) != '/') {
    $file_public_path .= '/';
  }
  
  $file_private_path = variable_get('file_private_path', 'sites/default/files/private');
  if (substr($file_private_path, 0, 1) != '/') {
    $file_private_path = '/' . $file_private_path;
  }
  if (substr($file_private_path, -1) != '/') {
    $file_private_path .= '/';
  }
  
  // If the image URL is relative and references system/files (Drupal's private files route),
  // Replace with private files directory
  if (substr($image_url, 0, 1) == '/' && strpos($image_url, 'system/files') !== FALSE) {
    $image_url = str_replace('/system/files/', $file_private_path, $image_url);
  }
  
  // For multi-value image fields, use only the first image
  if (strpos($image_url, ', ') !== FALSE) {
    $image_urls = explode(', ', $image_url);
    $image_url = $image_urls[0];
  }
  
  // If the image URL has ?itok=xxx remove it
  if (strpos($image_url, '?') !== FALSE) {
    $image_url = explode('?', $image_url);
    $image_url = $image_url[0];
  }
  
  $path = str_replace($base_url, '', $image_url);
  $path = str_replace($file_public_path, 'public://', $path);
  $real_path = file_create_url(urldecode($path));
  
  if (substr($real_path, 0, 1) == '/') {
    $real_path = DRUPAL_ROOT . $real_path;
  }
  
  if ($real_path) {
    $image_filename = basename(urldecode($image_url));
    $image_filename = str_replace(' ', '-', $image_filename);
    $bundle_filename = 'bundle://' . $image_filename;
  
    return array(
      'bundle' => $bundle_filename,
      'realpath' => $real_path,
    );
  } else {
    return FALSE;
  }
}

/**
 * Helper function to replace tokens, convert to markdown and strip html tags.
 *
 * @param $text:
 *  A string potentially containing replaceable tokens.
 * @param $data:
 *  (optional) An array of keyed objects.
 * @param $convert_to_markdown:
 *  (optional) Whether or not to convert the text to markdown.
 *
 * @return string
 *  processed text
 */
function publish_to_apple_news_process_text_value($text, $data = array(), $convert_to_markdown = TRUE) {
  global $base_url;
  $text = token_replace($text, $data);
  
  // Correct any relative links so they can be followed from Apple News
  $live_base_url = variable_get('publish_to_apple_news_live_base_url', '');
  if ($live_base_url) {
    $url_to_replace = $live_base_url;
  } else {
    $url_to_replace = $base_url;
  }
  $text = str_replace('<a href="/', '<a href="' . $url_to_replace . '/', $text);
  
  if ($convert_to_markdown) {
    module_load_include('php', 'publish_to_apple_news', 'library/HTML_To_Markdown/HTML_To_Markdown');
  
    $markdown = new HTML_To_Markdown();
    $markdown->set_option('remove_nodes', 'img');
    $markdown->set_option('strip_tags', TRUE);
    $markdown->set_option('italic_style', '_');
    $markdown->set_option('bold_style', '__');
    $markdown->convert($text);
    return $markdown->output();
  } else {
    return $text;
  }
}

function publish_to_apple_news_refresh_sections() {
  module_load_include('php', 'publish_to_apple_news', 'library/AppleNews/AppleNews');
  $public_key = variable_get('publish_to_apple_news_api_key', '');
  $private_key = variable_get('publish_to_apple_news_shared_secret', '');
  $apple_news = new AppleNews($public_key, $private_key);
  $default_channel = variable_get('publish_to_apple_news_default_channel_id', '');
  $sections_raw = $apple_news->getChannelSections($default_channel);

  $sections = array();
  foreach ($sections_raw as $section) {
    if (empty($section['id']) || empty($section['name'])) {
      continue;
    }

    $sections[$section['id']] = $section['name'];
  }

  variable_set('publish_to_apple_news_available_sections', $sections);
  
  return $sections;
}

/**
 * Implements hook_token_info_alter().
 */
function publish_to_apple_news_token_info_alter(&$info) {
  $info['tokens']['node']['body']['dynamic'] = FALSE;
}