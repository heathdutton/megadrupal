<?php

/**
 * @file
 * File Dropzone media helper - add a hidden upload field to media elements.
 */

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function file_dropzone_media_field_widget_media_generic_form_alter(&$element, &$form_state, $context) {
  $field = $context['field'];
  $instance = $context['instance'];

  $file_path = drupal_get_path('module', 'file');
  $element_info = element_info('media');

  foreach (element_children($element) as $delta) {
    // Ensure all properties are available for merging.
    $element[$delta] += $element_info;

    $element[$delta] = drupal_array_merge_deep($element[$delta] + $element_info, array(
      '#upload_location' => file_field_widget_uri($field, $instance),
      '#upload_validators' => file_field_widget_upload_validators($field, $instance),
      '#file_value_callbacks' => array('file_dropzone_media_file_managed_file_value'),
      '#progress_indicator' => 'throbber',
      '#progress_message' => NULL,
      '#attached' => array(
        'css' => array($file_path . '/file.css'),
        'js' => array($file_path . '/file.js'),
      ),
      // Add our own process and pre_render callbacks.
      '#process' => array('file_dropzone_media_media_field_widget_process', 'file_dropzone_file_field_widget_process'),
      '#pre_render' => array('file_dropzone_media_media_element_pre_render'),
    ));
  }

  $element['#process'][] = 'file_dropzone_field_widget_process_multiple';
}

/**
 * The #value_callback for the added media file managed field element.
 */
function file_dropzone_media_file_managed_file_value(&$element, &$input = FALSE, $form_state) {
  if ($input !== FALSE) {
    // Uploads take priority over all other values.
    if ($file = file_managed_file_save_upload($element)) {
      $input['fid'] = $file->fid;
    }
  }
}

/**
 * Process callback for the added media file managed field element.
 */
function file_dropzone_media_media_field_widget_process($element, &$form_state, $form) {

  $element['upload']['#attributes']['class'][] = 'file-dropzone-upload-fid';
  $element['upload']['#attributes']['class'][] = 'file-dropzone-browse-element';
  $element['attach_button']['#attributes']['class'][] = 'file-dropzone-attach-button';
  $element['remove_button']['#attributes']['class'][] = 'file-dropzone-remove-button';
  $element['fid']['#attributes']['class'][] = 'file-dropzone-fid';

  // This is a simplified copy from file_managed_file_process().
  $ajax_settings = array(
    $element['attach_button']['#ajax']['path'],
    $element['attach_button']['#ajax']['wrapper'],
    'effect' => 'fade',
    'progress' => array(
      'type' => $element['#progress_indicator'],
      'message' => $element['#progress_message'],
    ),
  );

  // Set up the buttons first since we need to check if they were clicked.
  $element['upload_button'] = array(
    '#name' => implode('_', $element['#parents']) . '_upload_button',
    '#type' => 'submit',
    '#attributes' => array('class' => array('button', 'file-dropzone-upload-button', 'element-hidden')),
    '#value' => t('Upload'),
    '#validate' => array(),
    '#submit' => array('file_managed_file_submit'),
    '#limit_validation_errors' => array($element['#parents']),
    '#ajax' => $ajax_settings,
  );

  // The file upload field itself - note the key is 'upload_file' to not clash
  // with media's upload element.
  $element['upload_file'] = array(
    '#name' => 'files[' . implode('_', $element['#parents']) . ']',
    '#type' => 'file',
    '#attributes' => array('class' => array('upload-file', 'element-hidden')),
    '#title' => t('Choose a file'),
    '#title_display' => 'invisible',
    '#size' => $element['#size'],
    '#theme_wrappers' => array(),
    '#weight' => -10,
  );

  // Add another submit handler to the upload button, to implement
  // functionality needed by the field widget. This submit handler, along with
  // the rebuild logic in media_field_widget_form() requires the entire field,
  // not just the individual item, to be valid.
  foreach (array('upload_button') as $key) {
    $element[$key]['#submit'][] = 'media_field_widget_submit';
    $element[$key]['#limit_validation_errors'] = array(array_slice($element['#parents'], 0, -1));
  }

  return $element;
}

/**
 * #pre_render callback to hide display of the added upload controls.
 *
 * @see file_dropzone_media_media_field_widget_process()
 * @see form_builder()
 */
function file_dropzone_media_media_element_pre_render($element) {
  // If we already have a file, we don't want to show the upload and upload_file
  // controls.
  if (!empty($element['#value']['fid'])) {
    $element['upload_button']['#access'] = FALSE;
    $element['upload_file']['#access'] = FALSE;
  }

  return $element;
}
