<?php
/**
 * @file
 * Hooks for Open Atrium Migrate Legacy support module.
 */

/**
 * Implements hook_module_implements_alter().
 */
function oa_migrate_legacy_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['oa_migrate_legacy'])) {
    // Put our form alters at the front, so that we can set the
    // #oa_migrate_legacy key to be used by other modules hook_form_alter()s.
    $implementations = array('oa_migrate_legacy' => $implementations['oa_migrate_legacy'])
      + $implementations;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function oa_migrate_legacy_form_node_form_alter(&$form, &$form_state) {
  $node = $form['#node'];
  if (oa_migrate_legacy_check($node)) {
    $form['#oa_migrate_legacy'] = TRUE;
  }
  if (isset($form['field_oa_migrate_legacy_id'])) {
    $form['field_oa_migrate_legacy_id']['#access'] = FALSE;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function oa_migrate_legacy_form_comment_form_alter(&$form, &$form_state) {
  $comment = $form['#entity'];
  if (oa_migrate_legacy_check($comment)) {
    $form['#oa_migrate_legacy'] = TRUE;
  }
  if (isset($form['field_oa_migrate_legacy_id'])) {
    $form['field_oa_migrate_legacy_id']['#access'] = FALSE;
  }
}

/**
 * Checks if an entity is from the OA1 -> OA2 migration.
 *
 * @param object $entity
 *   The entity to check.
 *
 * @return boolean
 *   TRUE if it is from the migration; otherwise FALSE.
 */
function oa_migrate_legacy_check($entity) {
  return !empty($entity->field_oa_migrate_legacy_id[LANGUAGE_NONE][0]['value']);
}
