<?php

/**
 * Implements hook_robotstxt().
 * Allow for additional robots.txt lines for different domains
 */
function domain_robotstxt_robotstxt() {
  global $_domain;

  if (!empty($_domain)) {
    $robotstxts = variable_get('domain_robotstxt_robotstxts');

    if (!empty($robotstxts['domain_id:' . $_domain['domain_id']])) {
      return $robotstxts['domain_id:' . $_domain['domain_id']];
    }
  }
}

/**
 * Implements hook_menu().
 */
function domain_robotstxt_menu() {
  $items = array();
  $items['admin/structure/domain/robotstxt'] = array(
    'title' => 'RobotsTxt',
    'description' => t('Manage robots.txt files per domain.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('domain_robotstxt_admin_settings'),
    'access arguments' => array('administer robots.txt'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function domain_robotstxt_admin_settings($form, $form_state) {
  $results = db_query("SELECT * FROM {domain} ORDER BY weight");

  $form['domain_robotstxt_robotstxts'] = array(
    '#type' => 'fieldset',
    '#title' => t('Domain-specific robot.txt lines'),
    '#description' => t('On each new line, enter the robots.txt rule you would like to have added to the robots.txt.'),
    '#collapsible' => FALSE,
    '#tree' => TRUE,
  );

  $variables = variable_get('domain_robotstxt_robotstxts');

  $fields_count = 0;
  foreach ($results as $row) {
    $form['domain_robotstxt_robotstxts']['domain_id:' . (string) ($row->domain_id)] = array(
      '#type' => 'textarea',
      '#title' => $row->sitename,
      '#description' => $row->subdomain,
      '#default_value' => (empty($variables['domain_id:' . (string) ($row->domain_id)])) ? '' : $variables['domain_id:' . (string) ($row->domain_id)],
    );
    $fields_count++;
  }

  if (empty($fields_count)) {
    $form['domain_robotstxt_robotstxts']['no_domain_message'] = array(
      '#markup' => t('No domains defined.'),
    );
  }

  return system_settings_form($form);
}
