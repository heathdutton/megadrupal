<?php

/**
 * @file
 * Integrates Alpha Deltapay redirected payment service.
 */
 
/**
 * Drupal hooks
 * =============================================================================
 */

/**
 * Implements hook_init().
 */
function uc_alpha_deltapay_init() {
  global $conf;
  $conf['i18n_variables'][] = 'uc_alpha_deltapay_method_title';
  $conf['i18n_variables'][] = 'uc_alpha_deltapay_checkout_button';
  $conf['i18n_variables'][] = 'uc_alpha_deltapay_complete_msg';
  $conf['i18n_variables'][] = 'uc_alpha_deltapay_error_msg';
  $conf['i18n_variables'][] = 'uc_alpha_deltapay_cancel_msg';
}

/**
 * Implements hook_help().
 */
function uc_alpha_deltapay_help($path, $arg) {
  if ($path == 'admin/store/settings/payment/alphadeltapaydemo') {
    $output = t('Use the following form to mask yourself as the bank POSTing back to the website.');
    $output .= t('The website must reply with an Error Message.');
    return $output;
  }
}

/**
 * Implements hook_permission().
 */
function uc_alpha_deltapay_permission() {
  return array(
    'access uc_alpha_deltapay demo page' => array(
      'title' => t('Allow access to AlphaDeltaPay demo page'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function uc_alpha_deltapay_menu() {
  $items['cart/alphadeltapay/complete'] = array(
    'title' => 'Order complete',
    'page callback' => 'uc_alpha_deltapay_complete',
    'access callback' => 'uc_alpha_deltapay_completion_access',
    'type' => MENU_CALLBACK,
    'file' => 'uc_alpha_deltapay.pages.inc',
  );
  $items['admin/store/settings/payment/alphadeltapaydemo'] = array(
    'title' => 'AlphaDeltaPay Demo Page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_alpha_deltapay_demo'),
    'access arguments' => array('access uc_alpha_deltapay demo page'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_alpha_deltapay.pages.inc',
  );
  return $items;
}

/**
 * Access callback for "cart/alhadeltapay/complete".
 * Make sure anyone can complete their orders.
 */
function uc_alpha_deltapay_completion_access() {
  return TRUE;
}

/**
 * Implements hook_form_alter().
 */
function uc_alpha_deltapay_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'uc_cart_checkout_review_form'
      && ($order_id = intval($_SESSION['cart_order'])) > 0) {
    $order = uc_order_load($order_id);
    if ($order->payment_method == 'alphadeltapay') {
      // Set default value.
      $guid_url = 'https://www.deltapay.gr/getguid.asp';
      // Override with db value if exists.
      $guid_url = variable_get('uc_alpha_deltapay_guidurl', $guid_url);
      // Retrieve necessary information.
      $merchant_code = variable_get('uc_alpha_deltapay_sid', '');
      $currency = variable_get('uc_alpha_deltapay_currency', '978');
      $installments = check_plain($_SESSION['alphadeltapayinstallments']);
      // $transactiontype = NULL;
      // How much to charge the client.
      $charge = number_format($order->order_total, 2, ',', '');
      $url = url($guid_url, array(
        'query' => array(
          'MerchantCode' => $merchant_code,
          'Charge' => $charge,
          'CurrencyCode' => $currency,
          // 'CardHolderName' => '',
          // 'CardHolderEmail' => '',
          'Installments' => $installments,
          // 'TransactionType' => 1,
          'Param1' => $order_id,
          // We have to set this as it doesn't get POSTed back.
          'Param2' => $installments,
        ),
        'external' => TRUE,
      ));
      $response_string = file_get_contents($url);
      $response = explode('<br>', $response_string);
      $guid1 = $response[0];
      $guid2 = $response[1];
      if ($errormessage = $response[2]) {
        unset($form['submit']);
        drupal_set_message(t('The bank returned the following message: %message', array('%message' => check_plain($errormessage)), 'error'));
      }
      else {
        $posturl = variable_get('uc_alpha_deltapay_posturl', '');

        $form['#action'] = url($posturl, array(
          'query' => array(
            'Guid1' => $guid1,
          ),
        ));
      }
    }
  }
}

/**
 * Implements hook_payment_method().
 */
function uc_alpha_deltapay_uc_payment_method() {
  $path = url(drupal_get_path('module', 'uc_alpha_deltapay') . '/alphabank.jpg');
  $title = variable_get('uc_alpha_deltapay_method_title', t('Credit card'));

  if (TRUE == variable_get('uc_alpha_deltapay_display_alpha_logo', FALSE)) {
    $title .= "<br /><img src='{$path}' style='float:left;'>";
  }
  $methods[] = array(
    'id' => 'alphadeltapay',
    'name' => t('Alpha Bank - Delta Pay'),
    'title' => $title,
    'review' => t('Alpha Bank - Delta Pay'),
    'desc' => t('Redirect users to submit payments through Alpha Bank Delta Pay.'),
    'callback' => 'uc_payment_method_alpha_deltapay',
    'weight' => 3,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );
  return $methods;
}

/**
 * Helper function for installments form.
 */
function uc_paymenth_method_alpha_deltapay_form() {
  $form = array();
  $maxinstallments = variable_get('uc_alpha_deltapay_installments', '3');
  if ($maxinstallments != 0) {
    $form = array();
    $options = array();
    for ($i = 0; $i <= $maxinstallments; $i++) {
      $options[$i] = $i;
    }
    $form['alphadeltapayinstallments'] = array(
      '#type' => 'select',
      '#prefix' => t('I want to pay in'),
      '#options' => $options,
      '#suffix' => t('non-interest installments'),
    );
  }
  return $form;
}

/**
 * Add settings to the payment method settings form.
 */
function uc_payment_method_alpha_deltapay($op, &$order) {
  switch ($op) {
    case 'cart-details':
      /**
       * As opposed to Ubercart 1.x and 2.x, in 3.x we create a form
       * element to be rendered and not a HTML string.
       */
      return uc_paymenth_method_alpha_deltapay_form();
    break;
    case 'cart-process':
      // Process the form and store needed variables in $_SESSION.
      $_SESSION['alphadeltapayinstallments'] = check_plain($_POST['panes']['payment']['details']['alphadeltapayinstallments']);
    return NULL;
    case 'settings':
      // Produce the settings form of the payment method.
      $form['uc_alpha_deltapay_display_alpha_logo'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display Alpha Bank Logo'),
        '#description' => t('If you need the logo displayed check the box.'),
        '#default_value' => variable_get('uc_alpha_deltapay_display_alpha_logo', FALSE),
      );
      $form['uc_alpha_deltapay_sid'] = array(
        '#type' => 'textfield',
        '#title' => t('Vendor account number'),
        '#description' => t('Your Alpha Deltapay vendor account number.'),
        '#default_value' => variable_get('uc_alpha_deltapay_sid', ''),
        '#size' => 16,
      );
      $form['uc_alpha_deltapay_currency'] = array(
        '#type' => 'select',
        '#title' => t('Currency'),
        '#description' => t('The currency used for transactions.'),
        '#default_value' => variable_get('uc_alpha_deltapay_currency', '978'),
        '#options' => array(
          '978' => 'EUR(â‚¬)',
          '840' => 'USD($)',
        ),
      );
      $form['uc_alpha_deltapay_installments'] = array(
        '#type' => 'textfield',
        '#title' => t('Number of Installments'),
        '#description' => t('WARNING: Must Be Specifically approved by Alpha Bank per merchant, if not leave at default value of 0.'),
        '#default_value' => variable_get('uc_alpha_deltapay_installments', '0'),
        '#size' => 3,
      );
      $form['uc_alpha_deltapay_method_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Payment method title'),
        '#default_value' => variable_get('uc_alpha_deltapay_method_title', t('Alpha Bank Delta Pay')),
        '#description' => t('The name of the method as shown to the users.'),
      );
      $form['uc_alpha_deltapay_checkout_button'] = array(
        '#type' => 'textfield',
        '#title' => t('Order review submit button text'),
        '#description' => t('Provide Alpha Bank specific text for the submit button on the order review page.'),
        '#default_value' => variable_get('uc_alpha_deltapay_checkout_button', t('Submit Order')),
      );
      $form['uc_alpha_deltapay_cancel_return_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Cancel or Error return URL'),
        '#description' => t('Specify the path customers who cancel their DeltaPay payment will be directed to when they return to your site.'),
        '#default_value' => variable_get('uc_alpha_deltapay_cancel_return_url', 'cart'),
        '#size' => 32,
        '#field_prefix' => url(NULL, array('absolute' => TRUE)) . (variable_get('clean_url', 0) ? '' : '?q='),
      );
      $form['uc_alpha_deltapay_posturl'] = array(
        '#type' => 'textfield',
        '#title' => t('Post url'),
        '#description' => t('Enter the url where Alpha Bank accepts the transactions.'),
        '#default_value' => variable_get('uc_alpha_deltapay_posturl', 'https://www.deltapay.gr/entry.asp'),
      );
      $form['uc_alpha_deltapay_guidurl'] = array(
        '#type' => 'textfield',
        '#title' => t('Guid url'),
        '#description' => t('Enter the url from where Alpha Bank accepts requests for GUIDs.'),
        '#default_value' => variable_get('uc_alpha_deltapay_guidurl', 'https://www.deltapay.gr/getguid.asp'),
      );
      $form['uc_alpha_deltapay_complete_msg'] = array(
        '#type' => 'textfield',
        '#title' => t('Order completion message'),
        '#description' => t('Enter the message to show the user when the order gets successfully completed'),
        '#default_value' => variable_get('uc_alpha_deltapay_complete_msg', ''),
      );
      $form['uc_alpha_deltapay_error_msg'] = array(
        '#type' => 'textfield',
        '#title' => t('Order failure message'),
        '#description' => t('Enter the message to show the user when the order fails'),
        '#default_value' => variable_get('uc_alpha_deltapay_error_msg', ''),
      );
      $form['uc_alpha_deltapay_cancel_msg'] = array(
        '#type' => 'textfield',
        '#title' => t('Order cancellation message'),
        '#description' => t('Enter the message to show the user when the order gets cancelled by the user'),
        '#default_value' => variable_get('uc_alpha_deltapay_cancel_msg', ''),
      );
      return $form;
  }
}
