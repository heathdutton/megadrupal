<?php


/**
 * Variable name for background setting.
 *
 * @see userpickit_robohash_settings_form()
 */
define('USERPICKIT_ROBOHASH_VARIABLE_BACKGROUND', 'userpickit_robohash_background');

/**
 * Implements hook_menu().
 */
function userpickit_robohash_menu() {
  $items = array();

  $items['admin/config/people/robohash'] = array(
    'title' => 'Robohash',
    'description' => 'Configure Robohash for User Pic Kit',
    'file' => 'userpickit_robohash.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('userpickit_robohash_settings_form'),
    'access arguments' => array('administer userpickit')
  );

  return $items;
}

/**
 * @file
 *
 * Main file for Robohash - User Pic Kit integration.
 */

/**
 * Implements hook_userpickit_info().
 */
function userpickit_robohash_userpickit_info() {
  $picture_types = array();

  $defaults = array(
    'callback' => 'userpickit_robohash_userpickit_picture',
    'default callback' => 'userpickit_robohash_picture_default',
  );

  $picture_types['robohash'] = array(
    'title' => t('Robohash'),
    'description' => t('Cool robots.'),
  ) + $defaults;

  $picture_types['robohash_monsters'] = array(
    'title' => t('Monster'),
    'description' => t('Random monsters.'),
  ) + $defaults;

  $picture_types['robohash_heads'] = array(
    'title' => t('Robot head'),
    'description' => t('Disembodied robot heads.'),
  ) + $defaults;

  return $picture_types;
}

/**
 * Callback.
 *
 * @see userpickit_robohash_userpickit_info()
 */
function userpickit_robohash_userpickit_picture($picture_type, $account) {
  if (!empty($account->mail)) {
    $hash = md5(drupal_strtolower($account->mail));
    return _userpickit_robohash_uri($picture_type, $hash);
  }
}

/**
 * Default callback.
 *
 * @see userpickit_robohash_userpickit_info()
 */
function userpickit_robohash_picture_default($picture_type, $account) {
  $hash = md5($account->uid);
  $result = _userpickit_robohash_uri($picture_type, $hash);
  return $result['uri'];
}

/**
 * Get background for a picture type.
 *
 * @param string $picture_type
 *   User Pic Kit picture type.
 */
function userpickit_robohash_background($picture_type) {
  $backgrounds = array(
    'transparent' => '',
    'background1' => 'bg1',
    'background2' => 'bg2',
  );
  $background = variable_get(USERPICKIT_ROBOHASH_VARIABLE_BACKGROUND, 'transparent');
  return $backgrounds[$background];
}

/**
 * Create a Robohash URI for a picture type.
 */
function _userpickit_robohash_uri($picture_type, $hash) {
  $result = array();

  $request_options = array();
  $bgset = userpickit_robohash_background($picture_type);
  if ($bgset) {
    $request_options['query']['bgset'] = $bgset;
  }

  $result['message'] = 'A unique robot.';

  if ($picture_type == 'robohash_monsters') {
    $request_options['query']['set'] = 'set2';
    $result['message'] = 'Your unique monster.';
  }
  elseif ($picture_type == 'robohash_heads') {
    $request_options['query']['set'] = 'set3';
    $result['message'] = 'Your unique robot head.';
  }

  $result['uri'] = url('http://robohash.org/' . $hash,  $request_options);

  return $result;
}