<?php

/**
 * @file
 * Install, update and uninstall functions for the User Pic Kit module.
 */

/**
 * Implements hook_schema().
 */
function userpickit_schema() {
  $schema['userpickit_picture_types'] = array(
    'description' => 'Contains settings for each picture type.',
    'fields' => array(
      'pid' => array(
        'description' => 'Picture type ID.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Machine name.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'module' => array(
        'description' => 'Defining module.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'info' => array(
        'description' => 'Serialized settings.',
        'type' => 'blob',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('pid'),
    'unique keys' => array(
      'name' => array('name')
    ),
  );

  $schema['userpickit_pictures'] = array(
    'description' => 'Caches paths of original users picture. This table is used to track files, do not empty this table manually!',
    'fields' => array(
      'sid' => array(
        'description' => 'Cache ID',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Picture type',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'User ID',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'expire' => array(
        'description' => 'Null: never expire. Requires manual invalidation. Set to < current unix time or 0 to expire during next render.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'fid' => array(
        'description' => 'File ID. Or NULL to use `uri`',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'uri' => array(
        'description' => 'Full URI to picture. Schema may be public://, private://, http:// etc.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'message' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Text of log message to be passed into the t() function.',
      ),
      'message_variables' => array(
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Serialized array of variables that match the message string and that is passed into the t() function.',
      ),
    ),
    'primary key' => array('sid'),
    'unique keys' => array(
      'avatar_source' => array('type', 'uid')
    ),
  );

  $schema['userpickit_user_preferences'] = array(
    'description' => 'Cached version of all users selected picture type preference.',
    'fields' => array(
      'uid' => array(
        'description' => 'User ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'picture_type' => array(
        'description' => 'Picture type name.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
    ),
  );

  $schema['userpickit_user_upload'] = array(
    'description' => 'Associates picture uploaded with its user.',
    'fields' => array(
      'uid' => array(
        'description' => 'User ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => 'File ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('uid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function userpickit_install() {
  variable_set(USERPICKIT_VARIABLE_MIGRATION_USER_PREFERENCES_NOT_DONE, TRUE);

  drupal_set_message(t('Please run User Pic Kit !link.', array(
    '!link' => l(t('migration assistant'), 'admin/config/people/userpickit/maintenance')
  )), 'warning', FALSE);
}

/**
 * Add `message*` fields to {userpickit_pictures}.
 */
function userpickit_update_7000(&$sandbox = NULL) {
  // Add `message` column
  db_add_field('userpickit_pictures', 'message', array(
    'type' => 'text',
    'not null' => TRUE,
    'size' => 'big',
    'initial' => '',
    'description' => 'Text of log message to be passed into the t() function.',
  ));

  // Add `message_variables` column
  db_add_field('userpickit_pictures', 'message_variables', array(
    'type' => 'blob',
    'not null' => TRUE,
    'size' => 'big',
    'initial' => '',
    'description' => 'Serialized array of variables that match the message string and that is passed into the t() function.',
  ));
}