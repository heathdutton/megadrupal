<?php

/**
 * @file
 *  Implements restrictions for resource reservations.
 *
 * It can be specified the number of minimum days, and the starting day. Also,
 * the period when the restriction is valid can be specified. This is
 * implemented using a content type.
 *
 * This module was provided to me by amazeelabs, a suiss company.
 */

/**
 * @todo Documentation
 */
function _agres_restriction_node_validate($node) {
  switch ($node->type) {
    case 'agreservation':
      $valid = true;
      // Check the agres_timeframe restriction.
      $langcode = i18n_langcode();
      $langcode = field_language('node', $node,'field_agres_ref_unit');
                $langcode_ad = 'und';
          $langcode_ad = field_language('node', $node,'field_agres_rdate'); 
      if (!isset($node->field_agres_ref_unit[$langcode])) {
        $langcode = 'und';
      }
      foreach ($node->field_agres_ref_unit[$langcode] as $ref_unit_id) {
        // If there is no unit selected, the $ref_unit_id is NULL, so skip it.
        if (is_null($ref_unit_id['nid'])) {
          continue;
        }
        $unit_node = node_load($ref_unit_id['nid']);
        // First, check if the unit has agres_timeframes assigned.
        // These will override the global ones.
        $langcode_ar = 'und';
        $langcode_ar = field_language('node', $unit_node,'field_agres_restrictions');
          $langcode_agr = 'und';
          $langcode_agr = field_language('node', $unit_node,'field_agres_global_restrictions');         
        if (isset($unit_node->field_agres_restrictions[$langcode_ar]) && !is_null($unit_node->field_agres_restrictions[$langcode_ar][0]['nid'])) {

          $message = agres_timeframe_api('check_restrictions', array(
            'start_date' => $node->field_agres_rdate[$langcode_ad][0]['value'],
            'end_date' => $node->field_agres_rdate[$langcode_ad][0]['value2'],
            'nids' => $unit_node->field_agres_restrictions[$langcode_ar],
            ));
          if ($message !== TRUE) {
            $node->validated = FALSE;
            form_set_error('field_agres_rdate', $message['message']);
            $valid = false;
          }
        }      
        elseif ($unit_node->field_agres_global_restrictions[$langcode_agr][0]['value'] == 1) {          
          $message = agres_timeframe_api('check_restrictions', array(
            'start_date' => $node->field_agres_rdate[$langcode_ad][0]['value'],
            'end_date' => $node->field_agres_rdate[$langcode_ad][0]['value2'],
            ));
          if ($message !== TRUE) {
            $node->validated = FALSE;
            form_set_error('field_agres_rdate', $message['message']);
            $valid = false;
          }
        }
      }
      break;
  }
  return $valid;
}