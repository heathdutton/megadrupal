<?php

/**
 * @file
 * Implements the agres_timeframe content type. This module was created by Amazeelabs and
 * given to me as a contribution. Thanks amazee labs!
 */

/**
 * Copied from agreservations.install
 * inspired by the features module.
 *
 * @todo Documentation
 * @param type $fields
 */
function _agres_rate_install_bundle_fields($fields) {
  if (isset($fields)) {
    field_info_cache_clear();
    foreach ($fields as $field) {
      // Create or update field.
      $field_config = $field['field_config'];
      if ($existing_field = field_info_field($field_config['field_name'])) {
        field_update_field($field_config);
      }
      else {
        field_create_field($field_config);
      }

      // Create or update field instance.
      $field_instance = $field['field_instance'];
      $existing_instance = field_info_instance($field_instance['entity_type'], $field_instance['field_name'], $field_instance['bundle']);
      if ($existing_instance) {
        field_update_instance($field_instance);
      }
      else {
        field_create_instance($field_instance);
      }
      variable_set('menu_rebuild_needed', TRUE);
    }
  }
}

/**
 * Implements hook_install().
 */
function agres_rate_install() {
  module_load_include('inc', 'agres_rate', 'agres_rate.field');
  $types = _agres_rate_contenttypes();
  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }
  $fields = _agres_rate_fields();
  _agres_rate_install_bundle_fields($fields);
}

/**
 * Implements hook_enable(). 
 */
function agres_rate_enable() {
  $result = db_query("SELECT* from {uc_product_classes} where pcid = 'agres_rate'");
  if (!$result->fetchField()) {
    $id = db_insert('uc_product_classes')
      ->fields(array(
        'pcid' => 'agres_rate',
        'name' => 'agres_rate',
        'description' => 'A Rate overrides a unit types price if the unit type has the rate attached and the rate has a timeframe attached in the according reference fields.',
      ))
      ->execute();
    uc_product_node_info(TRUE);
    variable_set('node_options_' . 'agres_rate', variable_get('node_options_product', array('status', 'promote')));

    if (module_exists('comment')) {
      variable_set('comment_' . 'agres_rate', variable_get('comment_product', 2));
    }

    module_invoke_all('uc_product_class', 'agres_rate', 'insert');
    node_types_rebuild();
    uc_product_node_info(true);
    node_types_rebuild();
    if (module_exists('imagefield')) {
      uc_product_add_default_image_field('agres_rate');
    }
    menu_rebuild();
  }
}
/**
 * Implements hook_uninstall().
 */
function agres_rate_uninstall() {

  module_load_include('inc', 'agres_rate', 'agres_rate.field');

  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'agres_rate'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  node_delete_multiple($nids);

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  foreach (_agres_rate_fields() as $field) {
    field_delete_field($field['field_config']['field_name']);
  }

  // Loop over any remaining field instances attached to the node_example
  // content type (such as the body field) and delete them individually.
  $instances = field_info_instances('node', 'agres_rate');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete our content type
  node_type_delete('agres_rate');

  // Purge all field infromation
  field_purge_batch(1000);
}