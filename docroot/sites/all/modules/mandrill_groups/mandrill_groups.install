<?php
/**
 * @file
 * Install hooks for mandrill_groups module.
 */

/**
 * Implements hook_install().
 */
function mandrill_groups_install() {
  // Necessary to get new node types defined in mandrill_groups_node_info().
  node_types_rebuild();
  // Configure content types.
  _mandrill_groups_config_content_types();
  // Create MANDRILL_GROUPS_MEMBERSHIP_TYPE membership type.
  _mandrill_groups_create_membership_type();

  og_create_field(OG_GROUP_FIELD, 'node', MANDRILL_GROUPS_GROUP_NODE);

  $og_field = og_fields_info(OG_AUDIENCE_FIELD);
  $og_field['field']['target_type'] = 'node';
  $og_field['field']['label'] = 'Discussion Group';
  $og_field['field']['cardinality'] = 1;
  $og_field['field']['settings']['handler_settings']['target_bundles'] = array(MANDRILL_GROUPS_GROUP_NODE => MANDRILL_GROUPS_GROUP_NODE);
  $og_field['field']['settings']['handler_settings']['membership_type'] = MANDRILL_GROUPS_MEMBERSHIP_TYPE;
  og_create_field(OG_AUDIENCE_FIELD, 'node', MANDRILL_GROUPS_DISCUSSION_NODE, $og_field);

  // Add OG's Content Access field so we can limit discussions to group members.
  mandrill_groups_setup_og_access();

  // Create our custom fields.
  foreach (mandrill_groups_field_definitions() as $field_name => $field_def) {
    // Create fields.
    if (empty(field_read_field($field_name, array('include_inactive' => TRUE)))) {
      field_create_field($field_def['field']);
    }

    // Create field instances.
    if (!field_info_instance('node', $field_name, $field_def['instance']['bundle'])) {
      field_create_instance($field_def['instance']);
    }
  }

  // Update display field formatter for the OG group field on our Mandrill Group
  // content type.
  $instance = field_info_instance('node', OG_GROUP_FIELD, MANDRILL_GROUPS_GROUP_NODE);
  $instance['display']['default']['settings']['field_name'] = 0;
  field_update_instance($instance);

  // Add database columns for comment properties.
  _mandrill_groups_add_comment_properties();
  // Add permissions for OG node types.
  _mandrill_groups_add_permissions();
  // Add "mandrill_groups_html" text format specific to this module.
  _mandrill_groups_add_text_format();

  node_access_needs_rebuild(TRUE);
}

/**
 * Create "mandrill_groups_html" text format.
 */
function _mandrill_groups_add_text_format() {
  $format_name = 'mandrill_groups_html';

  if (!filter_format_exists($format_name)) {
    // Add text formats.
    $format = array(
      'format' => $format_name,
      'name' => 'Mandrill Groups HTML',
      'weight' => 0,
      'filters' => array(
        // URL filter.
        $format_name => array(
          'weight' => 0,
          'status' => 1,
        ),
        // HTML corrector filter.
        'filter_htmlcorrector' => array(
          'weight' => 1,
          'status' => 1,
        ),
      ),
    );
    $format = (object) $format;
    filter_format_save($format);
  }
}

/**
 * Implements hook_enable().
 */
function mandrill_groups_enable() {
  mailsystem_set(array(MANDRILL_GROUPS_DISCUSSION_NODE => 'MandrillMailSystem'));
  drupal_set_message($message = t('The content access permissions need to be rebuilt. <a href="@node_access_rebuild">Rebuild permissions</a>.', array('@node_access_rebuild' => url('admin/reports/status/rebuild'))), $type = 'status');
}

/**
 * Implements hook_disable().
 */
function mandrill_groups_disable() {
  // Tell mailsystem to remove mandrill groups:
  mailsystem_clear(array(MANDRILL_GROUPS_DISCUSSION_NODE => 'MandrillMailSystem'));
}

/**
 * Implements hook_uninstall().
 */
function mandrill_groups_uninstall() {
  $mandrill_groups_content_types = array(MANDRILL_GROUPS_GROUP_NODE, MANDRILL_GROUPS_DISCUSSION_NODE);
  $sql = 'SELECT nid FROM {node} n WHERE n.type IN (:type)';
  $result = db_query($sql, array(':type' => $mandrill_groups_content_types));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);

  foreach ($mandrill_groups_content_types as $content_type) {
    node_type_delete($content_type);
  }
  // Drop "reply-to" field from comment table.
  db_drop_field('comment', 'mandrill_groups_message_id');
  db_drop_field('comment', 'mandrill_groups_original_msg_id');

  // Delete membership type.
  og_membership_type_delete(MANDRILL_GROUPS_MEMBERSHIP_TYPE);

  // Delete our custom fields.
  foreach (mandrill_groups_field_definitions() as $field_name => $field_def) {
    field_delete_field($field_name);
  }
}

/**
 * Configure content type settings.
 */
function _mandrill_groups_config_content_types() {
  // Don't display author and date information.
  variable_set('node_submitted_' . MANDRILL_GROUPS_GROUP_NODE, FALSE);
  variable_set('node_submitted_' . MANDRILL_GROUPS_DISCUSSION_NODE, FALSE);
  // Sets status to published. Not sticky or promoted to front page.
  $publishing_defaults = array(
    'status',
  );
  variable_set('node_options_' . MANDRILL_GROUPS_GROUP_NODE, $publishing_defaults);
  variable_set('node_options_' . MANDRILL_GROUPS_DISCUSSION_NODE, $publishing_defaults);

  // Commenting off for Groups, on for discussions..
  variable_set('comment_' . MANDRILL_GROUPS_GROUP_NODE, COMMENT_NODE_CLOSED);
  variable_set('comment_' . MANDRILL_GROUPS_DISCUSSION_NODE, COMMENT_NODE_OPEN);

  // Disable Comment subject lines.
  variable_set('comment_subject_field_' . MANDRILL_GROUPS_DISCUSSION_NODE, FALSE);

  // Default to threading enabled.
  variable_set('comment_default_mode_' . MANDRILL_GROUPS_DISCUSSION_NODE, COMMENT_MODE_THREADED);
}

/**
 * Create og_membership_type for the Mandrill Groups module.
 *
 * We need this because we don't want to modify settings on the default
 * membership type in case OG is being used in other ways on the site.
 */
function _mandrill_groups_create_membership_type() {
  // Not using og_membership_type_create() due to:
  // https://www.drupal.org/node/1783162
  $values = array(
    'name' => MANDRILL_GROUPS_MEMBERSHIP_TYPE,
    'description' => 'Mandrill Groups Membership',
  );
  $og_membership_type_wrapper = entity_property_values_create_entity('og_membership_type', $values);
  og_membership_type_save($og_membership_type_wrapper->value());
}

/**
 * Add a column for reply-to information to the comment table.
 *
 * The reply-to information allows us to get the correct threading behavior
 * in folks' inboxes. In other words, we can tell an outgoing message which
 * message it is in reply to.
 */
function _mandrill_groups_add_comment_properties() {
  // Add "Message-ID" string fields to the comment table.
  $source_message_id = array(
    'description' => 'Email header Message-ID property for the source email.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => FALSE,
    'default' => NULL,
  );
  db_add_field('comment', 'mandrill_groups_original_msg_id', $source_message_id);
  $message_id = array(
    'description' => 'Email header Message-ID property for the outgoing email.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => FALSE,
    'default' => NULL,
  );
  db_add_field('comment', 'mandrill_groups_message_id', $message_id);
}

/**
 * Sets permissions on the Mandrill Group and Mandrill Discussion content types.
 */
function _mandrill_groups_add_permissions() {

  // Allows full access to Mandrill Groups and Discussions.
  // We do this because we want to defer to the og_role_permission table to set
  // create/edit/delete content permissions.
  $role_permissions = array(
    // Mandrill Discussion permissions.
    'create ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
    'delete any ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
    'delete own ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
    'edit any ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
    'edit own ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
  );

  $og_role_permissions = array(
    // Member permissions.
    'member' => array(
      // Mandrill Discussion permissions.
      'create ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
      'delete own  ' . MANDRILL_GROUPS_DISCUSSION_NODE . '  content',
      'update own  ' . MANDRILL_GROUPS_DISCUSSION_NODE . '  content',
    ),
    // Admin member permissions.
    'administrator member' => array(
      // Mandrill Discussion permissions.
      'create ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
      'delete any ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
      'delete own ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
      'update any ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
      'update own ' . MANDRILL_GROUPS_DISCUSSION_NODE . ' content',
    ),
  );

  // Get roles associated with each node type we define.
  $group_roles = og_roles('node', MANDRILL_GROUPS_GROUP_NODE);
  $discussion_roles = og_roles('node', MANDRILL_GROUPS_DISCUSSION_NODE);

  // Set og_role_permission table permissions based on rids for each
  // group_bundle.
  foreach ($og_role_permissions as $role_name => $permissions) {
    if (in_array($role_name, $group_roles)) {
      $rid = array_search($role_name, $group_roles);
      og_role_grant_permissions($rid, $permissions);
    }
    if (in_array($role_name, $discussion_roles)) {
      $rid = array_search($role_name, $discussion_roles);
      og_role_grant_permissions($rid, $permissions);
    }
  }

  // Edit role_permissions table to allow any authenticated user to create
  // Groups or Discussions. This allows us to defer to permissions in the
  // og_role_permission table.
  foreach (user_roles(TRUE) as $rid => $role_name) {
    foreach ($role_permissions as $permission_name) {
      db_merge('role_permission')
        ->key(array(
          'rid' => $rid,
          'permission' => $permission_name,
        ))
        ->fields(array(
          'module' => 'mandrill_groups',
        ))
        ->execute();
    }
  }
}

/**
 * Return Mandrill Groups field definitions.
 *
 * @return array
 *   Associative array containing field and instance definitions.
 */
function mandrill_groups_field_definitions() {
  return array(
    MANDRILL_GROUPS_EMAIL_FIELD => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_EMAIL_FIELD,
        'type' => 'text',
        'locked' => TRUE,
        'settings' => array(
          'no_ui' => FALSE,
        ),
      ),
      'instance' => array(
        'entity_type' => 'node',
        'bundle' => MANDRILL_GROUPS_GROUP_NODE,
        'field_name' => MANDRILL_GROUPS_EMAIL_FIELD,
        'label' => t('Mandrill Groups Email'),
      ),
    ),
    MANDRILL_GROUPS_SUBJECT_FIELD => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_SUBJECT_FIELD,
        'type' => 'text',
        'locked' => TRUE,
        'cardinality' => 1,
        'settings' => array(
          'max_length' => '20',
        ),
      ),
      'instance' => array(
        'entity_type' => 'node',
        'bundle' => MANDRILL_GROUPS_GROUP_NODE,
        'field_name' => MANDRILL_GROUPS_SUBJECT_FIELD,
        'label' => t('Email Subject Prefix'),
        'display' => array(
          'default' => array(
            'type' => 'hidden',
          ),
        ),
        'description' => t('This text will be prepended to the subject of emails sent for comments on discussions in this group. <i>Example: <strong>"[Groupname] "</strong></i>'),
      ),
    ),
    MANDRILL_GROUPS_EMAIL_REPLY_TO => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_EMAIL_REPLY_TO,
        'type' => 'list_text',
        'locked' => TRUE,
        'cardinality' => 1,
        'settings' => array(
          'allowed_values' => array(
            'group' => 'Group',
            'sender' => 'Sender',
          ),
          'allowed_values_function' => '',
        ),
      ),
      'instance' => array(
        'entity_type' => 'node',
        'bundle' => MANDRILL_GROUPS_GROUP_NODE,
        'field_name' => MANDRILL_GROUPS_EMAIL_REPLY_TO,
        'label' => t('Email Reply Option'),
        'widget' => array(
          'type' => 'options_buttons',
          'module' => 'options',
          'active' => 1,
        ),
        'display' => array(
          'default' => array(
            'type' => 'hidden',
          ),
        ),
        'required' => 1,
        'default_value' => array(array('value' => 'group')),
        'description' => t('When replying to group emails, who should the email go to?'),
      ),
    ),
    MANDRILL_GROUPS_EMAIL_FREQUENCY_FIELD => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_EMAIL_FREQUENCY_FIELD,
        'type' => 'list_text',
        'locked' => TRUE,
        'settings' => array(
          'allowed_values_function' => 'mandrill_groups_email_frequency_allowed_values',
        ),
      ),
      'instance' => array(
        'entity_type' => 'og_membership',
        'bundle' => MANDRILL_GROUPS_MEMBERSHIP_TYPE,
        'field_name' => MANDRILL_GROUPS_EMAIL_FREQUENCY_FIELD,
        'label' => t('Mandrill Groups Email Frequency'),
        // Make field required so user is prompted to set email frequency field
        // when joining the group.
        'required' => TRUE,
        // Set default value to send email immediately.
        'default_value' => array(array('value' => MANDRILL_GROUPS_EMAIL_IMMEDIATE)),
      ),
    ),
    MANDRILL_GROUPS_POSTSCRIPT_FIELD => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_POSTSCRIPT_FIELD,
        'type' => 'text_long',
        'locked' => TRUE,
      ),
      'instance' => array(
        'entity_type' => 'node',
        'bundle' => MANDRILL_GROUPS_GROUP_NODE,
        'field_name' => MANDRILL_GROUPS_POSTSCRIPT_FIELD,
        'label' => t('Email Postscript'),
        'description' => 'This text will be included at the end of emails generated by comments in this group\'s discussions. Be sure to include unsubscribe instructions if you change the default values. You can include custom links and values using the following variables:<br />
@group_name : The name of this group.<br />
@site_name : The name of this website.<br />
@group_email : The email address used to post to this group.<br />
@group_link : A link to view this group on the web.<br />
@discussion_link : A link to view the discussion this email came from on the web.<br />
@settings_link : A link to this user\'s membership settings page.',
        'default_value' => array(
          array(
            'value' => '<br/><br/>----------------------- <br/>
| You received this message because you are a member of the group <i>@group_name</i> at <i>@site_name</i>. <br/>
| To unsubscribe from this group and stop receiving emails from it, reply with the subject line <i>unsubscribe</i>. <br/>
| To post to this group, send email to @group_email. <br/>
| Visit this group at @group_link. <br/>
| View this discussion online at @discussion_link. <br/>
| To control your subscription settings, visit @settings_link. <br/>
----------------------- ',
          ),
        ),
        'display' => array(
          'default' => array(
            'type' => 'hidden',
          ),
        ),
      ),
    ),
    MANDRILL_GROUPS_MESSAGE_ID_FIELD => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_MESSAGE_ID_FIELD,
        'type' => 'text',
        'locked' => TRUE,
      ),
      'instance' => array(
        'entity_type' => 'node',
        'bundle' => MANDRILL_GROUPS_DISCUSSION_NODE,
        'field_name' => MANDRILL_GROUPS_MESSAGE_ID_FIELD,
        'label' => t('Last Message ID'),
        'display' => array(
          'default' => array(
            'type' => 'hidden',
          ),
        ),
        'widget' => array(
          'weight' => '20',
        ),
      ),
    ),
    MANDRILL_GROUPS_FIELD_DIGEST_LAST_SENT => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_FIELD_DIGEST_LAST_SENT,
        'type' => 'datetime',
        'locked' => TRUE,
        'cardinality' => 1,
        'settings' => array(
          'granularity' => array(
            'month' => 'month',
            'day' => 'day',
            'year' => 'year',
            'hour' => 0,
            'minute' => 0,
            'second' => 0,
          ),
          'tz_handling' => 'none',
        ),
      ),
      'instance' => array(
        'label' => t('Last Digest Sent'),
        'widget' => array(
          'type' => 'date_text',
          'module' => 'date',
          'active' => 0,
        ),
        'settings' => array(
          'default_value' => 0,
        ),
        'display' => array(
          'default' => array(
            'type' => 'hidden',
          ),
        ),
        'default_value' => 0,
        'description' => 'This value is updated when a daily digest is sent for this group. Do not override manually.',
        'field_name' => MANDRILL_GROUPS_FIELD_DIGEST_LAST_SENT,
        'entity_type' => 'node',
        'bundle' => MANDRILL_GROUPS_GROUP_NODE,
      ),
    ),
    MANDRILL_GROUPS_ATTACHMENT_FIELD => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_ATTACHMENT_FIELD,
        'type' => 'file',
        'locked' => TRUE,
        'cardinality' => -1,
        'settings' => array(
          'active' => TRUE,
        ),
      ),
      'instance' => array(
        'entity_type' => 'comment',
        'bundle' => 'comment_node_' . MANDRILL_GROUPS_DISCUSSION_NODE,
        'field_name' => MANDRILL_GROUPS_ATTACHMENT_FIELD,
        'label' => t('Attachments'),
        'required' => FALSE,
        'settings' => array(
          'file_directory' => 'mandrill_groups/[current-page:title]',
          'file_extensions' => 'txt pdf jpg jpeg gif png xls xlsx doc docx rtf',
          'max_filesize' => '16 MB',
          'description_field' => 1,
        ),
        'display' => array(
          'default' => array(
            'label' => 'above',
            'type' => 'file_default',
            'settings' => array(),
            'module' => 'file',
            'weight' => 1,
          ),
        ),
      ),
    ),
    MANDRILL_GROUPS_ATTACHMENT_SENDLIMIT => array(
      'field' => array(
        'field_name' => MANDRILL_GROUPS_ATTACHMENT_SENDLIMIT,
        'type' => 'number_float',
        'locked' => TRUE,
        'cardinality' => 1,
        'settings' => array(
          'decimal_separator' => '.',
        ),
      ),
      'instance' => array(
        'entity_type' => 'node',
        'bundle' => MANDRILL_GROUPS_GROUP_NODE,
        'field_name' => MANDRILL_GROUPS_ATTACHMENT_SENDLIMIT,
        'label' => t('Attachment Send Limit'),
        'widget' => array(
          'type' => 'number',
          'module' => 'number',
        ),
        'settings' => array(
          'min' => '',
          'max' => '',
          'prefix' => '',
          'suffix' => 'MB',
        ),
        'display' => array(
          'default' => array(
            'type' => 'hidden',
          ),
        ),
        'required' => 1,
        'default_value' => array(array('value' => '5')),
        'description' => t('Any comment attachments larger than this size will not be attached to outgoing emails. Instead, a link to the file on the site will be included in the email.'),
      ),
    ),
  );
}
