<?php

/**
 * @file
 * Install, update, and uninstall functions for the Email Campaigns module.
 */

/**
 * Implements hook_help().
 */
function email_campaigns_help($path, $arg) {
  switch ($path) {
    case 'admin/help#email_campaigns':
      // Return a line-break version of the module README.txt
      return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}

/**
 * Implements hook_menu().
 */
function email_campaigns_menu() {
  $items['user/%user/track/sentmail'] = array(
    'title' => 'Track sent mailers',
    'page callback' => '_email_campaigns_user_tracker',
    'access callback' => 'user_access',
    'access arguments' => array('access email_campaigns'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Page callback: Displays statistics for sent mailers.
 * @return array
 *   A render array containing mailers statistics. If information for the
 * mailers was not found, this will deliver a page not found error via
 * drupal_not_found().
 */
function _email_campaigns_user_tracker() {
  if ($account = user_load(arg(1))) {
    $header = array(
      array('data' => t('User Name')),
      array('data' => t('User Email')),
      array('data' => t('Role'), 'field' => 'role', 'sort' => 'desc'),
      array('data' => t('Timestamp'), 'field' => 'created', 'sort' => 'desc'),
    );
    $query = db_select('email_campaigns', 'a', array('target' => 'slave'))->extend('PagerDefault')->extend('TableSort');
    $query
    ->fields('a', array('username', 'useremail', 'role', 'created'))
    ->orderByHeader($header);
    $result = $query->execute();
    $rows = array();
    foreach ($result as $log) {
      $rows[] = array($log->username, $log->useremail, $log->role,
        array(
          'data' => format_date($log->created, 'short')),
      );
    }
    drupal_set_title(format_username($account));
    $build['email_campaigns_table'] = array(
      '#theme' => 'table',
      '#header' => $header,
      '#rows' => $rows,
      '#empty' => t('No statistics available.'),
    );
    $build['email_campaigns_pager'] = array('#theme' => 'pager');
    return $build;
  }
  else {
    drupal_not_found();
  }
}

/**
 * Implements hook_block_info().
 */
function email_campaigns_block_info() {
  $block = array();
  $block['list_modules'] = array(
    'info' => t('Email Campaigns form.'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $block;
}

/**
 * Implements hook_block_view().
 */
function email_campaigns_block_view($delta='') {
  $block['subject'] = NULL;
  $block['content'] = drupal_get_form('email_campaigns_form');
  return $block;
}

/**
 * Implements hook_form().
 */
function email_campaigns_form($form, &$form_state) {
  global $base_url, $user;
  if ($user->uid != 0) {
    $default_mail = $form['message']['email']['#default_value'] = $user->mail;
    $default_name = $form['message']['name']['#default_value'] = $user->name;
  }
  else {
    $default_mail = $form['message']['email']['#default_value'] = '';
    $default_name = $form['message']['name']['#default_value'] = '';
  }
  $form['message']['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Your Email'),
    '#size' => 20,
    '#maxlength' => 256,
    '#default_value' => $default_mail,
    '#required' => TRUE,
  );
  $form['message']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Your Name'),
    '#size' => 20,
    '#maxlength' => 256,
    '#default_value' => $default_name,
    '#required' => TRUE,
  );
  $form['message']['subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#size' => 20,
    '#maxlength' => 256,
    '#default_value' => '',
  );
  $form['message']['recipients'] = array(
    '#type' => 'textarea',
    '#title' => t('Send To'),
    '#cols' => 50,
    '#rows' => 4,
    '#description' => t('Enter commas seprated email ids for multiple email ids.'),
    '#required' => TRUE,
  );
  $form['message']['body'] = array(
    '#type' => 'textarea',
    '#title' => t('Body'),
    '#cols' => 50,
    '#rows' => 4,
    '#description' => t('Enter the content here.'),
  );
  $form['upload'] = array(
    '#type' => 'file',
    '#title' => t('Choose a file'),
    '#title_display' => 'invisible',
    '#size' => 22,
    '#upload_validators'  => array("file_validate_extensions" => array("html")),
  );
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send Mail'),
  );
  return $form;
}

/**
 * Implements action to perform on submit.
 */
function email_campaigns_actions($form, &$form_state) {
  $file = file_save_upload('upload', array('file_validate_extensions' => array('html')));
  if ($file) {
    // Upload file to public directory.
    if ($file = file_move($file, 'public://')) {
      $data = file_get_contents($file->uri);
      // Set recipients email ids.
      $to = $form_state['values']['recipients'];
      $from = $form_state['values']['email'];
      $messagetxt = $form_state['values']['body'];
      $subject = $form_state['values']['subject'];
      $body[] = 'Email: ' . $from . ' <br /> Message: ' . $messagetxt . ' <br /> <br /> ' . $data;
      $params = array(
        'body' => $body,
        'subject' => $subject,
      );
      // Send mail to recipients.
      if (drupal_mail('email_campaigns', 'some_mail_key', $to, language_default(), $params, $from, TRUE)) {
        email_campaigns_form_savedata($form, $form_state);
        drupal_set_message(t('Thanks, we will be in contact with more information soon.'));
      }
      else {
        drupal_set_message(t('There was an error subscribing you. Please try again later'));
      }
    }
    else {
      form_set_error('upload', t("Failed to write the uploaded file the site's file folder."));
    }
  }
  else {
    form_set_error('upload', t('No file was uploaded.'));
  }
}

/**
 * Implements hook_validate().
 */
function email_campaigns_form_validate($form, &$form_state) {
  $recipients = explode(',', $form_state['values']['recipients']);
  foreach ($recipients as &$valid_email) {
    $valid_email = trim($valid_email);
    if (!valid_email_address($valid_email)) {
      form_set_error('recipients', 'Sorry. Your email address,' . $valid_email . ', is not valid. Please submit a valid E-mail address.');
    }
  }
}

/**
 * Save data in database once file is uploaded and mail is sent.
 */
function email_campaigns_form_savedata($form, &$form_state) {
  global $user;
  $roles_index = end($user->roles);
  if ($user->uid != 0) {
    $nid = db_insert('email_campaigns')
          ->fields(array('username', 'useremail', 'role', 'created'))
          ->values(array(
            'username' => $user->name,
            'useremail' => $user->mail,
            'role' => $roles_index,
            'created' => REQUEST_TIME,
            ))
          ->execute();
  }
}

/**
 * Implements hook_mail().
 */
function email_campaigns_mail($key, &$message, $params) {
  $headers = array(
    'MIME-Version' => '1.0',
    'Content-Type' => 'text/html; charset=UTF-8;',
    'Content-Transfer-Encoding' => '8Bit',
    'X-Mailer' => 'Drupal',
  );
  foreach ($headers as $key => $value) {
    $message['headers'][$key] = $value;
  }
  $message['subject'] = $params['subject'];
  $message['body'] = $params['body'];
}

/**
 * Implements hook_submit().
 */
function email_campaigns_form_submit($form, &$form_state) {
  email_campaigns_actions($form, $form_state);
}
