<?php
/**
 * @file
 * Provides development options for the Slick module.
 */

define('SLICK_DEVEL', variable_get('slick_devel', FALSE));
define('SLICK_DEVEL_DEBUG', variable_get('slick_devel_debug', FALSE));
define('SLICK_DEVEL_REPLACE', variable_get('slick_devel_replace', FALSE));
define('SLICK_DEVEL_DISABLE', variable_get('slick_devel_disable', FALSE));

/**
 * Implements hook_menu().
 */
function slick_devel_menu() {
  $items = array();

  $items['admin/config/media/slick/devel'] = array(
    'title' => 'Development',
    'description' => 'Configure the Slick development module settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('slick_devel_form_settings'),
    'access arguments' => array('administer slick'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'file' => 'includes/slick_devel.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_library_alter().
 */
function slick_devel_library_alter(&$libraries, $module) {
  $path = drupal_get_path('module', 'slick_devel');
  $slick_path = drupal_get_path('module', 'slick');

  if ($module != 'slick') {
    return;
  }

  if (SLICK_DEVEL) {
    // Switch to the un-minified version of the library.
    if (isset($libraries['slick'])) {
      $libraries['slick']['js'] = array(
        libraries_get_path('slick') . '/slick/slick.js' => array('group' => JS_LIBRARY, 'weight' => -4),
      );
    }
  }
}

/**
 * Implements hook_libraries_info_alter().
 */
function slick_devel_libraries_info_alter(&$libraries) {
  if (SLICK_DEVEL) {
    // Switch to the un-minified version of the library.
    if (isset($libraries['slick'])) {
      $libraries['slick']['files']['js'] = array(
        'slick/slick.js',
      );
    }
  }
}

/**
 * Implements hook_slick_attach_load_info_alter().
 *
 * @see slick_attach()
 */
function slick_devel_slick_attach_load_info_alter(&$load, $attach, $skins) {
  $slick_path = drupal_get_path('module', 'slick');
  $slick_devel = drupal_get_path('module', 'slick_devel');
  $min = $slick_path . '/js/slick.load.min.js';
  $dev = $slick_path . '/js/slick.load.js';

  if (SLICK_DEVEL_DEBUG) {
    // Switch to the non-minified version of the slick.load.min.js.
    $load['js'] += array(
      $dev => array('group' => JS_DEFAULT, 'weight' => 0),
    );
    if (isset($load['js'][$min])) {
      unset($load['js'][$min]);
    }
  }

  if (isset($load['js'][$min]) || isset($load['js'][$dev])) {
    if (SLICK_DEVEL_REPLACE && !SLICK_DEVEL_DISABLE) {
      // Switch to slick.load.devel.js.
      $load['js'] += array(
        $slick_devel . '/js/slick.load.devel.js' => array('group' => JS_DEFAULT, 'weight' => 0),
      );
      unset($load['js'][$min], $load['js'][$dev]);
    }
    elseif (SLICK_DEVEL_DISABLE) {
      // Disable the slick.load.min.js or slick.load.js.
      unset($load['js'][$min], $load['js'][$dev]);
    }
  }
}
