<?php

/**
 * @file
 * Various module information.
 */

module_load_include('inc', 'taxonomy_autolink', 'includes/taxonomy_autolink.filter');

/**
 * Implements hook_permission().
 */
function taxonomy_autolink_permission() {
  $perms = array(
    'access taxonomy_autolink administer' => array(
      'title' => t('Administer Taxonomy autolink'),
      'restrict access' => TRUE,
    ),
  );
  return $perms;
}

/**
 * Implements hook_filter_info().
 */
function taxonomy_autolink_filter_info() {
  $filters = array();
  $filters['taxonomy_autolink'] = array(
    'title' => t('Taxonomy autolink'),
    'description' => t('Covert taxonomy term in node content to link.'),
    'process callback' => '_taxonomy_autolink_process',
    'settings callback' => '_taxonomy_autolink_settings',
    'default settings' => array(
      'taxonomy_autolink_vocabs' => array(),
      'taxonomy_autolink_mode' => 0,
      'taxonomy_autolink_limit' => 1,
      'taxonomy_autolink_case_sensitivity' => 0,
    ),
  );
  return $filters;
}

/**
 * Implements hook_theme().
 */
function taxonomy_autolink_theme() {
  return array(
    'taxonomy_autolink_link' => array(
      'variables' => array(
        'tid' => NULL,
        'text' => NULL,
      ),
      'file' => 'includes/taxonomy_autolink.theme.inc',
    ),
  );
}

/**
 * Return all available vocabs.
 * @return array
 */
function taxonomy_autolink_vocabs() {
  $vocabs = array();
  foreach (taxonomy_get_vocabularies() as $vocab) {
    $vocabs[$vocab->vid] = $vocab->name;
  }
  return $vocabs;
}
