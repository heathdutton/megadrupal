<?php
/**
 * @file
 * Code for the CIS Service Connection UX feature.
 */

include_once 'cis_service_connection_ux.features.inc';

/**
 * Implements hook_page_build().
 */
function cis_service_connection_ux_page_build() {
  drupal_add_css(drupal_get_path('module', 'cis_service_connection_ux') . '/cis_service_connection_ux.css');
}

/**
 * Implements hook_menu().
 */
function cis_service_connection_ux_menu() {
  $items = array();

  $items['admin/config/system/course-settings'] = array(
    'title' => 'Course settings',
    'description' => 'Change system settings for your course.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cis_service_connection_ux_form'),
    'access callback' => 'cis_connector_role_access',
    'access arguments' => array(array('administrator', 'instructor', 'staff')),
  );

  return $items;
}

/**
 * Page callback for cis_service_connection_ux.
 */
function cis_service_connection_ux_form($form, $form_state) {
  $form = array();
  $form['site_information'] = array(
    '#tree' => '0',
    '#type' => 'fieldset',
    '#collapsed' => '0',
    '#collapsible' => '1',
    '#title' => t('Course details'),
    '#weight' => '0',
  );
  $form['site_information']['site_name'] = array(
    '#description' => t('The name of the course being offered, typically a short name and number'),
    '#default_value' => variable_get('site_name', ''),
    '#weight' => '0',
    '#title' => t('Course name'),
    '#type' => 'textfield',
    '#required' => '1',
  );
  $form['site_information']['site_slogan'] = array(
    '#default_value' => variable_get('site_slogan', ''),
    '#weight' => '1',
    '#description' => t('Title of the course'),
    '#type' => 'textfield',
    '#title' => t('Course title'),
    '#required' => '1',
  );
  $form['site_information']['site_frontpage'] = array(
    '#default_value' => variable_get('site_frontpage', 'node'),
    '#weight' => '2',
    '#description' => t('Home page for the course'),
    '#type' => 'textfield',
    '#title' => t('Course front page'),
    '#required' => '1',
  );
  return system_settings_form($form);
}

/**
 * Implements hook_profiler_builder_modules_list_alter().
 */
function cis_service_connection_ux_profiler_builder_modules_list_alter(&$list) {
  // don't enable these developer toolsets
  $disable = array(
    'devel',
    'mooc',
    'cis',
    'cle',
  );
  // loop through and disable projects listed above
  foreach ($disable as $project) {
    if (isset($list[$project])) {
      unset($list[$project]);
    }
  }
}
/**
 * Implements hook_profiler_builder_ignore_alter().
 */
function cis_service_connection_ux_profiler_builder_ignore_alter(&$ignore_list) {
  // additional known things to ignore for variables
  $ignore = array(
    'color_chamfer_stylesheets',
    'theme_chamfer_settings',
    'color_chamfer_logo',
    'color_chamfer_files',
    'user_mail_cancel_confirm_body',
    'user_mail_status_canceled_subject',
    'user_mail_status_canceled_body',
    'user_mail_cancel_confirm_body',
    'user_mail_cancel_confirm_subject',
    'user_mail_password_reset_body',
    'user_mail_password_reset_subject',
    'user_mail_register_admin_created_body',
    'user_mail_register_admin_created_subject',
    'user_mail_register_no_approval_required_body',
    'user_mail_register_no_approval_required_subject',
    'user_mail_register_pending_approval_body',
    'user_mail_register_pending_approval_subject',
    'user_mail_status_blocked_body',
    'user_mail_status_blocked_subject',
    'user_mail_status_activated_subject',
    'user_mail_status_activated_body',
    'user_mail_status_activated_notify',
    'site_name',
    'site_slogan',
    'site_frontpage',
    'outline_designer_page_icon',
    'imce_custom_process',
    'imce_custom_content',
    'ckeditor_link_autocomplete_menus',
    'ckeditor_link_autocomplete_node_types',
    'ckeditor_link_autocomplete_vocabularies',
    'ckeditor_link_type_name',
    'ckeditor_link_type_selected',
    'imce_profiles',
    'cis_service_connection_last_sync',
    'cis_service_instance_uuid',
  );
  // merge these items in to have them ignored
  $ignore_list = array_merge($ignore_list, $ignore);
}