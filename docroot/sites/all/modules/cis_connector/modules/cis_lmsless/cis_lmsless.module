<?php
/**
 * @file
 * Code for CIS LMS-less to place branding on page and create experience.
 */

/**
 * Implements hook_permission().
 */
function cis_lmsless_permission() {
  return array(
    'view lmsless bar' =>  array(
      'title' => t('View LMSless bar'),
      'description' => t('Provides context as to what system you are in and quick links.'),
    ),
    'view lmsless cis link' =>  array(
      'title' => t('View link to CIS space'),
      'description' => t('This shows the shortcut to the marketing space in CIS.'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function cis_lmsless_block_info() {
  $blocks['cis_lmsless'] = array(
    'info' => t('CIS LMSLess'),
    'cache' => DRUPAL_NO_CACHE
  );

  return $blocks;
}
/**
 * Implements hook_block_view().
 */
function cis_lmsless_block_view($delta = '') {
  $block = array();
  if (user_access('view lmsless bar') && !path_is_admin(current_path())) {
    switch ($delta) {
      case 'cis_lmsless':
        $block['subject'] = '';
        $block['content'] = _cis_lmsless_assemble();
      break;
    }
  }
  return $block;
}

/**
 * Callback to assemble the bar
 */
function _cis_lmsless_assemble() {
  // assemble variables for theming
  $vars = array(
    'front_page' => variable_get('site_frontpage','node'),
    'site_name' => variable_get('site_name', t('Service')),
    'slogan' => variable_get('site_slogan', ''),
  );
  // build in section context if we have one we can pull
  if ($section = _cis_connector_section_context()) {
    $vars['section'] = $section;
  }
  // request a list of all other services that this section uses
  if (!$services = _cis_connector_transaction('other_services')) {
    $services = $list = array();
    $distro = variable_get('install_profile', 'standard');
    $reg = _cis_connector_build_registry($distro);
    $list[$distro] = array(
      'title' => (isset($reg['default_title']) ? $reg['default_title'] : ''),
      'url' => '#',
      'machine_name' => $distro,
    );
    $vars['active'] = $list[$distro];
  }
  else {
    foreach ($services as $service) {
      $list[$service['field_machine_name']] = array(
        'title' => $service['title'],
        'url' => $service['field_location']['url'] . base_path(),
        'machine_name' => $service['field_machine_name'],
      );
    }
  }
  // add in link to the CIS location if permission exists
  // @ignore druplart_conditional_assignment
  if (user_access('view lmsless cis link') && $settings = _cis_connector_build_registry('cis')) {
    $list['cis'] = array(
      'title' => t('Course information system'),
      'url' => _cis_connector_format_address($settings, base_path(), 'front'),
      'machine_name' => 'cis',
    );
  }
  // bump current link to the first position and drop url so its internal
  foreach ($list as $key => $item) {
    // see if this service matches the current tool
    if ($item['url'] == $GLOBALS['base_url'] . '/') {
      $tmp = $item;
      $vars['active'] = $item;
      $tmp['url'] = '#';
      unset($list[$key]);
      array_unshift($list, $tmp);
    }
  }
  $vars['services'] = $list;
  drupal_add_css(drupal_get_path('module', 'cis_lmsless') . '/css/cis_lmsless.css');
  drupal_add_js(drupal_get_path('module', 'cis_lmsless') . '/js/cis_lmsless.js');
  return theme('cis_lmsless_bar', $vars);
}

/**
 * Implements hook_theme().
 */
function cis_lmsless_theme() {
  return array(
    'cis_lmsless_bar' => array(
      'variables' => array(
        'front_page' => 'node',
        'site_name' => t('Service'),
        'section' => t('Master Section'),
        'active' => array(),
        'services' => array(),
      ),
      'render element' => 'element',
      'template' => 'templates/cis-lmsless-bar',
    ),
  );
}
