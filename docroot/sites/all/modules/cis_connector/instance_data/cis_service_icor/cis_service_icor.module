<?php
/**
 * @file
 * Code for the CIS Service ICOR feature.
 */

include_once 'cis_service_icor.features.inc';

/**
 * Implements hook_init().
 */
function cis_service_icor_init() {
  // add js setting for path so iframe knows where to point
  if (arg(0) == 'ciscon' && arg(1) == 'interactive-objects') {
    drupal_add_js(drupal_get_path('module', 'cis_service_icor') . '/js/cis_service_icor.js');
  }
  // add icorpath setting
  if (arg(0) == 'node' && arg(2) == 'edit') {
    // @ignore druplart_conditional_assignment
    if ($settings = _cis_connector_build_registry('icor')) {
      $path = $settings['protocol'] . '://' . $settings['address'] . base_path();
      drupal_add_js(array('icorPath' => $path), 'setting');
    }
  }
}

/**
 * Implements hook_custom_theme().
 */
function cis_service_icor_custom_theme() {
  // switch the theme for iframe theme
  if (arg(0) == 'ciscon' && arg(1) == 'interactive-objects') {
    return 'entity_iframe_theme';
  }
}

/**
 * Implements hook_wywiwyg_plugin().
 */
function cis_service_icor_wysiwyg_plugin($editor, $version) {
  // load icor settings if it exists
  $path = '';
  // @ignore druplart_conditional_assignment
  if ($settings = _cis_connector_build_registry('icor')) {
    $path = $settings['protocol'] . '://' . $settings['address'] . '/' . base_path();
  }
  return array(
    'icor' => array(
      'url' => $path,
      'path' => drupal_get_path('module', 'cis_service_icor') . '/plugins/icor',
      'buttons' => array(
        'icor' => t('Interactive Objects (ICOR)'),
      ),
      'load' => TRUE,
    ),
  );
}

/**
 * Implements hook_wywiwyg_plugin().
 */
function cis_service_icor_wysiwyg_include_directory($type) {
  switch ($type) {
    case 'plugins':
      // You can just return $type, if you place your Wysiwyg plugins into a
      // sub-directory named 'plugins'.
      return $type;
    break;
  }
}
