<?php

/**
 * @file
 * Creating content type 'drupal_wall' & remove its content during remove.
 */

/**
 * Implements hook_install().
 */
function drupal_wall_install() {
  $t = get_t ();
  // Machine name of the content type 'drupal_wall'.
  $name = 'drupal_wall';
  // Define the node type.
  $drupal_wall = array (
      'type' => $name,
      'name' => $t ('Drupal Wall'),
      'base' => 'node_content',
      'title_label' => $t ('Title'),
      'description' => $t (''),
      'custom' => TRUE 
  );
  // Set other node defaults not declared above.
  $content_type = node_type_set_defaults ($drupal_wall);
  // Add the body field.
  node_add_body_field ($content_type, $t ("What's on your mind?"));
  // Save the content type.
  node_type_save ($content_type);
  // Add persistent variables that control settings.
  variable_set ('additional_settings__active_tab_' . $name, 'edit-menu');
  // 0 = disabled, 1 = optional, 2 = required.
  variable_set ('node_preview_' . $name, 0);
  // array(0 => 'status', 1 => 'promote', 2 => 'sticky', 3 => 'revision').
  variable_set ('node_options_' . $name, array (
      0 => 'status' 
  ));
  // 1 = Display author and date information, 0 = none.
  variable_set ('node_submitted_' . $name, 0);
  variable_set ('menu_options_' . $name, array ());
  variable_set ('menu_parent_' . $name, 'main-menu:0');
  // Create all the fields we are adding to our content type.
  module_load_include ('inc', 'drupal_wall', 'drupal_wall.fields');
  foreach (_drupal_wall_create_fields () as $field) {
    field_create_field ($field);
  }
  // Create all the instances for our fields.
  foreach (_drupal_wall_create_instances () as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $drupal_wall['type'];
    field_create_instance ($instance);
  }
  // Drupal wall Custom variables.
  variable_set ('drupal_wall_wall_post_limit', 10);
  variable_set ('drupal_wall_global_post_limit', 10);
  variable_set ('drupal_wall_wall_post_offset', 0);
  variable_set ('drupal_wall_global_post_offset', 0);
  variable_set ('drupal_wall_older_post_button', 1);
  variable_set ('drupal_wall_delete_post_button', 1);
  variable_set ('drupal_wall_edit_post_button', 1);
  variable_set ('drupal_wall_show_comments', 1);
  variable_set ('drupal_wall_comment_post_textbox', 1);
  variable_set ('drupal_wall_post_type_photo', 1);
  variable_set ('drupal_wall_post_type_video', 1);
  variable_set ('drupal_wall_likes_post', 1);
  variable_set ('drupal_wall_textbox_type', 'textarea');
}

/**
 * Implements hook_uninstall().
 */
function drupal_wall_uninstall() {
  // Machine name of the content type.
  $name = 'drupal_wall';
  // Gather all job nodes created.
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query ($sql, array (
      ':type' => $name 
  ));
  $nids = array ();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  // Delete all the job nodes at once.
  node_delete_multiple ($nids);
  // Remove persistant variables that control settings.
  variable_del ('additional_settings__active_tab_' . $name);
  variable_del ('node_preview_' . $name);
  variable_del ('node_options_' . $name);
  variable_del ('node_submitted_' . $name);
  variable_del ('menu_options_' . $name);
  variable_del ('menu_parent_' . $name);
  variable_del ('drupal_wall_wall_post_limit');
  variable_del ('drupal_wall_global_post_limit');
  variable_del ('drupal_wall_wall_post_offset');
  variable_del ('drupal_wall_global_post_offset');
  variable_del ('drupal_wall_older_post_button');
  variable_del ('drupal_wall_delete_post_button');
  variable_del ('drupal_wall_edit_post_button');
  variable_del ('drupal_wall_show_comments');
  variable_del ('drupal_wall_comment_post_textbox');
  variable_del ('drupal_wall_post_type_photo');
  variable_del ('drupal_wall_post_type_video');
  variable_del ('drupal_wall_likes_post');
  variable_del ('drupal_wall_textbox_type');
  // Delete our content type.
  node_type_delete ($name);
  // Find all fields and delete them.
  module_load_include ('inc', 'drupal_wall', 'drupal_wall.fields');
  foreach (array_keys (_drupal_wall_create_fields ()) as $field) {
    field_delete_field ($field);
  }
  // Find all fields and delete instance.
  $instances = field_info_instances ('node', $name);
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance ($instance);
  }
  // Purge all field info.
  field_purge_batch (1000);
}

/**
 * Add new field to field data and revision tables.
 */
function drupal_wall_update_7100(&$sandbox) {
  module_load_include ('inc', 'drupal_wall', 'drupal_wall.fields');
  field_create_field (_drupal_wall_update_fields ());
  field_create_instance (_drupal_wall_update_instances ());
}