<?php

/**
 * @file
 *
 * Install tables to store custom methods.
 */


/**
 * Implements hook_uninstall().
 */
function xmlrpctester_uninstall() {
  variable_del('xmlrpc_server_address');
}

/**
 * Implements hook_schema().
 */
function xmlrpctester_schema() {
  $schema = array();
  $schema['xmlrpctester_methods'] = array(
    'description' => 'Custom methods',
    'fields' => array(
      'method' => array(
        'description' => 'Method name, example: mysite.SomeMethod',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'parameters' => array(
        'description' => 'Serialized array of return type + parameter types (in this order).',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'Method description.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('method'),
  );

  // TODO, not yet implemented for usage.
  $schema['xmlrpctester_history'] = array(
    'description' => 'List of previously called methods and their results.',
    'fields' => array(
      'hid' => array(
        'description' => 'Unique ID of the history entry',
        'type' => 'serial',
      ),
      'method' => array(
        'description' => 'Method name that was used.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'parameters' => array(
        'description' => 'Serialized parameters that were passed on to the method.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'return' => array(
        'description' => 'Serialized return value (possible struct return value).',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'return_type' => array(
        'description' => 'Type of the return value (so it can be casted properly).',
        'type' => 'varchar',
        'length' => 32,
        'default' => '',
        'not null' => TRUE,
      ),
      'code' => array(
        'description' => 'Return code, default is NULL, otherwise its a signed numeric value.',
        'type' => 'int',
      ),
      'server' => array(
        'description' => 'The fully qualified server address the method was called on.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'custom' => array(
        'description' => '1 in case this was a locally defined custom method, 0 if server method.',
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('hid'),
  );

  return $schema;
}
