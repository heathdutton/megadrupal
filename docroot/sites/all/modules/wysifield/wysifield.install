<?php
/**
 * @file
 * Creates wysifield_field and defines schema for it.
 */

/**
 * Implements hook_enable().
 */
function wysifield_enable() {

  // Use me so I can know about your custom-defined fields.
  field_cache_clear();
  field_associate_fields('wysifield');

  // Already created?
  if (field_info_field('wysifield_field')) {
    return;
  }

  // Create the field singleton.
  // Might need to change.
  $field = array(
    'field_name'  => 'wysifield_field',
    'type'        => 'wysifield_field',
  );
  field_create_field($field);

  // Create the instance on the bundle.
  $instance = array(
    'field_name'  => $field['field_name'],
    'entity_type' => 'node',
    // We use a stub (fake) bundle here since we don't want to make assumptions
    // about entities being available.
    'bundle'      => 'wysifield',
    'label'       => 'Wysifield embedifier',
    'description' => 'Tags the attached content type as a wysifield entity and saves metadata.',
    'required'    => TRUE,
    'settings'    => array(),
    'widget'      => array(),
    'display'     => array(
      'default'     => array('label' => 'hidden'),
    ),
  );
  field_create_instance($instance);

  $instance['bundle'] = 'install';
  field_create_instance($instance);
}


/**
 * Implements hook_field_schema().
 */
function wysifield_field_schema($field) {
  $columns = array(
    'host_entity_id' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
    ),
    'uuid' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
    ),
  );

  return array(
    'columns' => $columns,
    'indexes' => array(),
  );
}
