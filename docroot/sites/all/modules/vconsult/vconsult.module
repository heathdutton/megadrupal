<?php
// $Id$

/**
 * @file
 * Video Consultation Integration Module
 */

/*******************************************************************************
 * Hook Functions (Drupal)
 ******************************************************************************/

/**
 * Display help and module information
 *
 * @param path which path of the site we're displaying help
 * @param arg array that holds the current path as would be returned from arg() function
 *
 * @return help text for the path
 */
function vconsult_help($path = "admin/help#vconsult", $arg) {
	$output = '';
  switch ($path) {
    case "admin/help#vconsult":
      $output = '<p>' . t("Video Consultation Script integration module details, installation instructions, updates") . ': <a href="http://www.videowhisper.com/?p=Drupal+Video+Consultation+Module">http://www.videowhisper.com/?p=Drupal+Video+Consultation+Module</a></p>';
      break;
  }
  return $output;
}
// function vconsult_help
/**
 * Implementation of hook_enable().
 */
function vconsult_modules_enabled() {
  // Set default permissions.
	$myroom = db_query("SELECT * FROM {role_permission} WHERE rid = '1' AND permission = 'access video consultation room';");
	if ($myroom !== false) {
			foreach ($myroom as $row) {
				$module=$row->module;
			}
	} 
	if (!isset($module)) {
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'access video consultation room', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'access video consultation room', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'create video consultation room', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit video consultation room', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'delete video consultation room', 'module' => 'vconsult',))->execute();
  
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit welcome message3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit instantaccess3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit credits3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit cleanup3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit availability3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit bandwidth3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit maxbandwidth3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit filterregex3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit filterreplace3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit micrate3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit camfps3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit camheight3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit camwidth3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit room_limit', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit floodprotection', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit fillwindow3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit layoutcode3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit background_url3', 'module' => 'vconsult',))->execute();
  
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit privatetextchat', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit change_background', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit files_enabled', 'module' => 'vconsult',))->execute();  
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit file_upload3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit file_delete3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit chat_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit users_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit write_text', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit enabledvideo3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit enabledsound3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit configuresource3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit showcamsettings3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit regularcams', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit regularwatch', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit slideshow', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit advancedcamsettings3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit publicvideosadd', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'edit externalstream', 'module' => 'vconsult',))->execute();
  
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use externalstream', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use publicvideosadd', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use privatetextchat', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use change_background', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use files_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use file_delete3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use file_upload3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use chat_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use users_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use enabledvideo3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use enabledsound3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use configuresource3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use showcamsettings3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use write_text', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use regularcams', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use regularwatch', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use slideshow', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 2, 'permission' => 'use advancedcamsettings3', 'module' => 'vconsult',))->execute();
	
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use externalstream', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use publicvideosadd', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use privatetextchat', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use change_background', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use files_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use file_delete3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use file_upload3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use chat_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use users_enabled', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use enabledvideo3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use enabledsound3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use configuresource3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use showcamsettings3', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use write_text', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use regularcams', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use regularwatch', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use slideshow', 'module' => 'vconsult',))->execute();
  db_insert('role_permission')->fields(array('rid' => 1, 'permission' => 'use advancedcamsettings3', 'module' => 'vconsult',))->execute();
	}
}

/**
 * Valid permissions for this module
 *
 * @return array An array of valid permissions for the vconsult_module module
 */
function vconsult_permission() {
  return array(
    'administer video consultation' =>  array(
      'title' => t('Administer video consultation'),
      'restrict access' => TRUE,
			'description' => t("Generally an administrative permission."),
    ), 
		'create video consultation room' => array(
      'title' => t('Create rooms'),
      'restrict access' => TRUE,
			'description' => t("Allows creating of room"),
    ), 
		'edit video consultation room' => array(
      'title' => t('Edit rooms'),
			'description' => t("Allows editing of room"),
    ), 
		'delete video consultation room' => array(
      'title' => t('Delete rooms'),
			'description' => t("Allows deleting of room"),
    ),
		'access video consultation room' => array(
      'title' => t('Access rooms'),
      'description' => t('Grants access to the room'),
    ),
		'edit welcome message3' => array(
      'title' => t('edit welcome message'),
			'description' => t("Allows editing of welcome message"),
    ),
		'edit instantaccess3' => array(
      'title' => t('edit instantaccess'),
			'description' => t("Allows editing of instantaccess"),
    ),
		'edit credits3' => array(
      'title' => t('edit credits'),
			'description' => t("Allows editing of credits"),
    ),
		'edit cleanup3' => array(
      'title' => t('edit cleanup'),
			'description' => t("Allows editing of cleanup"),
    ),
		'edit availability3' => array(
      'title' => t('edit availability'),
			'description' => t("Allows editing of availability"),
    ),
		'edit bandwidth3' => array(
      'title' => t('edit bandwidth'),
			'description' => t("Allows editing of bandwidth"),
    ),
		'edit maxbandwidth3' => array(
      'title' => t('edit maxbandwidth'),
			'description' => t("Allows editing of maxbandwidth"),
    ),
		'edit layoutcode3' => array(
      'title' => t('edit layoutcode'),
			'description' => t("Allows editing of layoutcode"),
    ),
		'edit background_url3' => array(
      'title' => t('edit background_url'),
			'description' => t("Allows editing of background_url"),
    ),
		'edit filterregex3' => array(
      'title' => t('edit filterregex'),
			'description' => t("Allows editing of filterregex"),
    ),
		'edit filterreplace3' => array(
      'title' => t('edit filterreplace'),
			'description' => t("Allows editing of filterreplace"),
    ),
		'edit micrate3' => array(
      'title' => t('edit micrate'),
			'description' => t("Allows editing of micrate"),
    ),
		'edit camfps3' => array(
      'title' => t('edit camfps'),
			'description' => t("Allows editing of camfps"),
    ),
		'edit camheight3' => array(
      'title' => t('edit camheight'),
			'description' => t("Allows editing of camheight"),
    ),
		'edit camwidth3' => array(
      'title' => t('edit camwidth'),
			'description' => t("Allows editing of camwidth"),
    ),
		'edit floodprotection' => array(
      'title' => t('edit floodprotection'),
			'description' => t("Allows editing of floodprotection"),
    ),
		'edit room_limit' => array(
      'title' => t('edit room_limit'),
			'description' => t("Allows editing of room_limit"),
    ),
		'edit fillwindow3' => array(
      'title' => t('edit fillwindow'),
			'description' => t("Allows editing of fillwindow"),
    ),
		'edit privatetextchat' => array(
      'title' => t('edit privatetextchat'),
			'description' => t("Allows editing of privatetextchat's parameter"),
    ),
		'use privatetextchat' => array(
      'title' => t('use privatetextchat'),
			'description' => t("Allows using of privatetextchat's parameter"),
    ),
		'edit change_background' => array(
      'title' => t('edit change_background'),
			'description' => t("Allows editing of change_background's parameter"),
    ),
		'use change_background' => array(
      'title' => t('use change_background'),
			'description' => t("Allows using of change_background's parameter"),
    ),
		'edit publicvideosadd' => array(
      'title' => t('edit publicvideosadd'),
			'description' => t("Allows editing of publicvideosadd's parameter"),
    ),
		'use publicvideosadd' => array(
      'title' => t('use publicvideosadd'),
			'description' => t("Allows using of publicvideosadd's parameter"),
    ),
		'edit externalstream' => array(
      'title' => t('edit externalstream'),
			'description' => t("Allows editing of externalstream's parameter"),
    ),
		'use externalstream' => array(
      'title' => t('use externalstream'),
			'description' => t("Allows using of externalstream's parameter"),
    ),
		'edit files_enabled' => array(
      'title' => t('edit files_enabled'),
			'description' => t("Allows editing of files_enabled's parameter"),
    ),
		'use files_enabled' => array(
      'title' => t('use files_enabled'),
			'description' => t("Allows using of files_enabled's parameter"),
    ),
		'edit file_upload3' => array(
      'title' => t('edit file_upload'),
			'description' => t("Allows editing of file_upload's parameter"),
    ),
		'use file_upload3' => array(
      'title' => t('use file_upload'),
			'description' => t("Allows using of file_upload's parameter"),
    ),
		'edit file_delete3' => array(
      'title' => t('edit file_delete'),
			'description' => t("Allows editing of file_delete's parameter"),
    ),
		'use file_delete3' => array(
      'title' => t('use file_delete'),
			'description' => t("Allows using of file_delete's parameter"),
    ),
		'edit enabledvideo3' => array(
      'title' => t('edit enabledvideo'),
			'description' => t("Allows editing of enabledvideo's parameter"),
    ),
		'use enabledvideo3' => array(
      'title' => t('use enabledvideo'),
			'description' => t("Allows using of enabledvideo's parameter"),
    ),
		'edit enabledsound3' => array(
      'title' => t('edit enabledsound'),
			'description' => t("Allows editing of enabledsound's parameter"),
    ),
		'use enabledsound3' => array(
      'title' => t('use enabledsound'),
			'description' => t("Allows using of enabledsound's parameter"),
    ),
		'edit configuresource3' => array(
      'title' => t('edit configuresource'),
			'description' => t("Allows editing of configuresource's parameter"),
    ),
		'use configuresource3' => array(
      'title' => t('use configuresource'),
			'description' => t("Allows using of configuresource's parameter"),
    ),
		'edit showcamsettings3' => array(
      'title' => t('edit showcamsettings'),
			'description' => t("Allows editing of showcamsettings's parameter"),
    ),
		'use showcamsettings3' => array(
      'title' => t('use showcamsettings'),
			'description' => t("Allows using of showcamsettings's parameter"),
    ),
		'edit users_enabled' => array(
      'title' => t('edit users_enabled'),
			'description' => t("Allows editing of users_enabled's parameter"),
    ),
		'use users_enabled' => array(
      'title' => t('use users_enabled'),
			'description' => t("Allows using of users_enabled's parameter"),
    ),
		'edit users_enabled' => array(
      'title' => t('edit users_enabled'),
			'description' => t("Allows editing of users_enabled's parameter"),
    ),
		'use users_enabled' => array(
      'title' => t('use users_enabled'),
			'description' => t("Allows using of users_enabled's parameter"),
    ),
		'edit regularcams' => array(
      'title' => t('edit regularcams'),
			'description' => t("Allows editing of regularcams's parameter"),
    ),
		'use regularcams' => array(
      'title' => t('use regularcams'),
			'description' => t("Allows using of regularcams's parameter"),
    ),
		'edit regularwatch' => array(
      'title' => t('edit regularwatch'),
			'description' => t("Allows editing of regularwatch's parameter"),
    ),
		'use regularwatch' => array(
      'title' => t('use regularwatch'),
			'description' => t("Allows using of regularwatch's parameter"),
    ),
		'edit chat_enabled' => array(
      'title' => t('edit chat_enabled'),
			'description' => t("Allows editing of chat_enabled's parameter"),
    ),
		'use chat_enabled' => array(
      'title' => t('use chat_enabled'),
			'description' => t("Allows using of chat_enabled's parameter"),
    ),
		'edit write_text' => array(
      'title' => t('edit write_text'),
			'description' => t("Allows editing of write_text's parameter"),
    ),
		'use write_text' => array(
      'title' => t('use write_text'),
			'description' => t("Allows using of write_text's parameter"),
    ),
		'edit advancedcamsettings3' => array(
      'title' => t('edit advancedcamsettings'),
			'description' => t("Allows editing of advancedcamsettings's parameter"),
    ),
		'use advancedcamsettings3' => array(
      'title' => t('use advancedcamsettings'),
			'description' => t("Allows using of advancedcamsettings's parameter"),
    ),
		'edit slideshow' => array(
      'title' => t('edit slideshow'),
			'description' => t("Allows editing of slideshow's parameter"),
    ),
		'use slideshow' => array(
      'title' => t('use slideshow'),
			'description' => t("Allows using of slideshow's parameter"),
    ),

	);
}

/**
 * Menu for this module
 *
 * @return array An array with this module's menus.
 */
function vconsult_menu() {
  $items = array();
  $items['admin/config/content/vconsult'] = array(
    'title' => 'Video Consultation',
    'description' => 'Video Consultation admin interface.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vconsult_admin'),
    'access arguments' => array('administer video consultation'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['myvconsult'] = array(
    'title' => 'Video Consultations',
    'description' => 'My Video Consultation rooms.',
    'page callback' => 'vconsult_roomlist',
    'access arguments' => array('edit video consultation room'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Room list page
 *
 * @return page contents.
 */
function vconsult_roomlist() {
  global $user;
  vconsult_cleanup();

  $page_content = "";
  $sql = 'SELECT n.nid, title, room FROM {node} n, {vconsult_rooms} vw WHERE n.type = :type AND n.status = :status AND n.uid = :userid';
  $result = db_query($sql,
    array(
      ':type' => 'vconsult',
      ':status' => 1,
			':userid' => $user->uid,
    )
  );

	$page_content .= "<UL>";
  foreach ($result as $row) {
		$options = array("attributes" => array("title" => $row->room, 'target' => '_blank'));
		$link = l("$row->title ($row->room)", "node/$row->nid", $options);
		$page_content .= "<LI>$link</LI>";
  }
	$page_content .= "</UL>";
	if (isset($options)) {
		$link = l(t('Create new instant video consultation room'), "node/add/vconsult", $options);
		$page_content .= "<BR><h3>$link</h3>";
	} else {
		$link = l(t('Create new instant video consultation room'), "node/add/vconsult", array("attributes" => array("title" => '', 'target' => '_blank')));
		$page_content .= "<BR><h3>$link</h3>";
	}
  return $page_content;
}

/**
 * Rooms cleanup
 */
function vconsult_cleanup() {
  //cleanup
  $ztime = time();
  db_query("DELETE FROM {vconsult_rooms} WHERE ((timeexpire>0) AND (timeexpire<$ztime)) OR ((timeout>0) AND (($ztime-timelastaccess)>timeout))");
}

/**
 * Admin page
 *
 * @return page contents.
 */
function vconsult_admin() {
  $form = array();

  $form['vconsult_rtmp3'] = array(
    '#type' => 'textfield',
    '#title' => t('RTMP application address'),
    '#default_value' => variable_get('vconsult_rtmp3', "rtmp://server-domain-or-ip/videowhisper"),
    '#size' => 48,
    '#maxlength' => 255,
    '#description' => t('RTMP application address on a rtmp server. See <a href="http://www.videowhisper.com/?p=Requirements" target="_blank">Requirements</a> if you need more details about this.'),
    '#required' => TRUE,
  );

  $form['vconsult_amf3'] = array(
    '#type' => 'textfield',
    '#title' => t('RTMP AMF'),
    '#default_value' => variable_get('vconsult_amf3', "AMF3"),
    '#size' => 48,
    '#maxlength' => 10,
    '#description' => t("RTMP AMF (AMF3 : Red5, Wowza, FMIS3, FMIS3.5)"),
    '#required' => TRUE,
  );

  $form['vconsult_room_prefix3'] = array(
    '#type' => 'textfield',
    '#title' => t('Default room name'),
    '#default_value' => variable_get('vconsult_room_prefix3', "InstantRoom"),
    '#size' => 24,
    '#maxlength' => 48,
    '#description' => t("Default room name. A hash code is added if not changed by room creator."),
    '#required' => TRUE,
  );

  $found = "";
  $path = variable_get('vconsult_path', "/vconsult/");
  if (file_exists("." . $path)) {
    $found = t('Application folder detected: ') . $path;
  }
  else $found = t('Please <a target="_blank" href="@url-download">download Video Consultation application</a>. Application folder NOT detected: %path', array('@url-download' => 'http://www.videowhisper.com/?p=PHP+Video+Consultation', '%path' => $path));

  $form['vconsult_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Video Consultation path'),
    '#default_value' => variable_get('vconsult_path', "/vconsult/"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Path for the Video Consultation application folder.") . " " . $found,
    '#required' => TRUE,
  );

  $form['vconsult_cammaxbandwidth3'] = array(
    '#type' => 'textfield',
    '#title' => t('camMaxBandwidth'),
    '#default_value' => variable_get('vconsult_cammaxbandwidth3', "131072"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set camMaxBandwidth parameters."),
    '#required' => TRUE,
  );

  $form['vconsult_bufferlive3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferLive'),
    '#default_value' => variable_get('vconsult_bufferlive3', "0.1"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferLive parameters."),
    '#required' => TRUE,
  );

  $form['vconsult_bufferfull3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferFull'),
    '#default_value' => variable_get('vconsult_bufferfull3', "0.1"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferFull parameters."),
    '#required' => TRUE,
  );

  $form['vconsult_bufferliveplayback3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferLivePlayback'),
    '#default_value' => variable_get('vconsult_bufferliveplayback3', "0.1"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferLivePlayback parameters."),
    '#required' => TRUE,
  );

  $form['vconsult_bufferfullplayback3'] = array(
    '#type' => 'textfield',
    '#title' => t('bufferFullPlayback'),
    '#default_value' => variable_get('vconsult_bufferfullplayback3', "0.1"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set bufferFullPlayback parameters."),
    '#required' => TRUE,
  );

  $form['vconsult_disableuploaddetection3'] = array(
    '#type' => 'radios',
    '#title' => t('disableUploadDetection'),
    '#default_value' => variable_get('vconsult_disableuploaddetection3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set disableUploadDetection parameters'),
  );

  $form['vconsult_disablebandwidthdetection3'] = array(
    '#type' => 'radios',
    '#title' => t('disableBandwidthDetection'),
    '#default_value' => variable_get('vconsult_disablebandwidthdetection3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set disableBandwidthDetection parameters'),
  );

  $form['vconsult_limitbybandwidth3'] = array(
    '#type' => 'radios',
    '#title' => t('limitBybandwidth'),
    '#default_value' => variable_get('vconsult_limitbybandwidth3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set limitBybandwidth parameters'),
  );

  $form['vconsult_fillwindow3'] = array(
    '#type' => 'radios',
    '#title' => t('fillwindow'),
    '#default_value' => variable_get('vconsult_fillwindow3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set fillwindow parameters'),
  );

  $form['vconsult_room_limit3'] = array(
    '#type' => 'textfield',
    '#title' => t('room_limit'),
    '#default_value' => variable_get('vconsult_room_limit3', "100"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set room_limit parameters."),
    '#required' => TRUE,
  );

  $form['vconsult_floodprotection3'] = array(
    '#type' => 'textfield',
    '#title' => t('floodprotection'),
    '#default_value' => variable_get('vconsult_floodprotection3', "3"),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set floodprotection parameters."),
    '#required' => TRUE,
  );

  $form['vconsult_layoutcode3'] = array(
    '#type' => 'textfield',
    '#title' => t('layoutcode'),
    '#default_value' => variable_get('vconsult_layoutcode3', ""),
    '#size' => 48,
    '#maxlength' => 48,
    '#description' => t("Set layoutcode parameters."),
  );

  $form['vconsult_background_url3'] = array(
    '#type' => 'textfield',
    '#title' => t('background_url'),
    '#default_value' => variable_get('vconsult_background_url3', "templates/consultation/background.jpg"),
    '#size' => 48,
    '#maxlength' => 255,
    '#description' => t("Set background_url parameters."),
  );

  $form['vconsult_privatetextchat3'] = array(
    '#type' => 'radios',
    '#title' => t('privatetextchat'),
    '#default_value' => variable_get('vconsult_privatetextchat3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set privatetextchat parameters'),
  );

  $form['vconsult_change_background3'] = array(
    '#type' => 'radios',
    '#title' => t('change_background'),
    '#default_value' => variable_get('vconsult_change_background3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set change_background parameters'),
  );

  $form['vconsult_externalstream3'] = array(
    '#type' => 'radios',
    '#title' => t('externalstream'),
    '#default_value' => variable_get('vconsult_externalstream3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set externalstream parameters'),
  );

  $form['vconsult_publicvideosadd3'] = array(
    '#type' => 'radios',
    '#title' => t('publicvideosadd'),
    '#default_value' => variable_get('vconsult_publicvideosadd3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set publicvideosadd parameters'),
  );

  $form['vconsult_files_enabled3'] = array(
    '#type' => 'radios',
    '#title' => t('files_enabled'),
    '#default_value' => variable_get('vconsult_files_enabled3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set files_enabled parameters'),
  );

  $form['vconsult_file_upload3'] = array(
    '#type' => 'radios',
    '#title' => t('file_upload'),
    '#default_value' => variable_get('vconsult_file_upload3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set file_upload parameters'),
  );

  $form['vconsult_file_delete3'] = array(
    '#type' => 'radios',
    '#title' => t('file_delete'),
    '#default_value' => variable_get('vconsult_file_delete3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set file_delete parameters'),
  );

  $form['vconsult_chat_enabled3'] = array(
    '#type' => 'radios',
    '#title' => t('chat_enabled'),
    '#default_value' => variable_get('vconsult_chat_enabled3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set chat_enabled parameters'),
  );

  $form['vconsult_enabledvideo3'] = array(
    '#type' => 'radios',
    '#title' => t('enabledVideo'),
    '#default_value' => variable_get('vconsult_enabledvideo3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set enabledVideo parameters'),
  );

  $form['vconsult_enabledsound3'] = array(
    '#type' => 'radios',
    '#title' => t('enabledSound'),
    '#default_value' => variable_get('vconsult_enabledsound3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set enabledSound parameters'),
  );

  $form['vconsult_configuresource3'] = array(
    '#type' => 'radios',
    '#title' => t('configureSource'),
    '#default_value' => variable_get('vconsult_configuresource3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set configureSource parameters'),
  );

  $form['vconsult_advancedcamsettings3'] = array(
    '#type' => 'radios',
    '#title' => t('advancedcamsettings'),
    '#default_value' => variable_get('vconsult_advancedcamsettings3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set advancedcamsettings parameters'),
  );

  $form['vconsult_showcamsettings3'] = array(
    '#type' => 'radios',
    '#title' => t('showCamsettings'),
    '#default_value' => variable_get('vconsult_showcamsettings3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set showCamsettings parameters'),
  );

  $form['vconsult_users_enabled3'] = array(
    '#type' => 'radios',
    '#title' => t('users_enabled'),
    '#default_value' => variable_get('vconsult_users_enabled3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set users_enabled parameters'),
  );

  $form['vconsult_write_text3'] = array(
    '#type' => 'radios',
    '#title' => t('write_text'),
    '#default_value' => variable_get('vconsult_write_text3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set write_text parameters'),
  );

  $form['vconsult_regularcams3'] = array(
    '#type' => 'radios',
    '#title' => t('regularcams'),
    '#default_value' => variable_get('vconsult_regularcams3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set regularcams parameters'),
  );

  $form['vconsult_regularwatch3'] = array(
    '#type' => 'radios',
    '#title' => t('regularwatch'),
    '#default_value' => variable_get('vconsult_regularwatch3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set regularwatch parameters'),
  );

  $form['vconsult_slideshow3'] = array(
    '#type' => 'radios',
    '#title' => t('slideshow'),
    '#default_value' => variable_get('vconsult_slideshow3', 1),
    '#options' => array(t('No'), t('Yes')),
    '#description' => t('Set slideshow parameters'),
  );
  return system_settings_form($form);
}

function vconsult_node_info() {
  return array(
    'vconsult' => array(
      'name' => t('Video Consultation room'),
      'module' => 'vconsult',
      'description' => t("A <i>room</i> that can be used for customized Video Consultation."),
      'has_title' => TRUE,
      'title_label' => t('Video Consultation'),
      'has_body' => TRUE,
      'body_label' => t('Room Description'),
    ),
  );
}

function vconsult_access($op, $node, $account) {

  if ($op == 'access') {
    return user_access('access video consultation room', $account);
  }

  if ($op == 'create') {
    return user_access('create video consultation room', $account);
  }

  if ($op == 'update') {
    if (user_access('edit any video consultation room', $account) || (user_access('edit video consultation room', $account) && ($account->uid == $node->uid))) {
      return TRUE;
    }
  }

  if ($op == 'delete') {
    if (user_access('delete any video consultation room', $account) || (user_access('delete video consultation room', $account) && ($account->uid == $node->uid))) {
      return TRUE;
    }
  }
}

/**
 * Implementation of hook_form().
 */
function vconsult_form_alter(&$form, $form_state, $form_id) {
  // The site admin can decide if this node type has a title and body, and how
  // the fields should be labeled. We need to load these settings so we can
  // build the node form correctly.
  global $user; // this added by keeperprancis

	if (isset($form['#node']->type) && $form_id == $form['#node']->type . '_node_form' && in_array($form['#node']->type, variable_get('vconsult_node_types', array('vconsult')) )) {
  
  $form['vconsult']['room'] = array(
    '#type' => 'textfield',
    '#title' => t('New room name'),
    '#default_value' => isset($form['#node']->room) ? $form['#node']->room : variable_get('vconsult_room_prefix3', 'InstantRoom'),
    '#size' => 32,
    '#maxlength' => 64,
    '#description' => t("Label that will be used to access the room. Leave as it is to generate one."),
  );

  $form['vconsult']['advanced'] = array(
    '#type' => 'fieldset',
    '#title' => t('Advanced room settings'),
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  if (user_access('edit welcome message3', $user)) {
	  $form['vconsult']['advanced']['welcome'] = array(
		'#type' => 'textarea',
		'#title' => t('Welcome message'),
		'#default_value' => isset($form['#node']->welcome) ? $form['#node']->welcome : 'Welcome!',
		'#cols' => 32,
		'#rows' => 2,
		'#description' => t("Welcome message displayed when entering room."),
	  );
  } else {
	  $form['vconsult']['advanced']['welcome'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->welcome) ? $form['#node']->welcome : 'Welcome!',
	  );
  }
  

  if (user_access('edit filterregex3', $user)) {
	  $form['vconsult']['advanced']['filterregex'] = array(
		'#type' => 'textfield',
		'#title' => t('Filter regex'),
		'#default_value' => isset($form['#node']->filterregex) ? $form['#node']->filterregex : "(?i)(fuck|cunt)(?-i)",
		'#size' => 6,
		'#maxlength' => 255,
		'#description' => t("Filter regex."),
	  );
  } else {
	  $form['vconsult']['advanced']['filterregex'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->filterregex) ? $form['#node']->filterregex : "(?i)(fuck|cunt)(?-i)",
	  );
  }

  if (user_access('edit filterreplace3', $user)) {
		$form['vconsult']['advanced']['filterreplace'] = array(
			'#type' => 'textfield',
			'#title' => t('Filter replace'),
			'#default_value' => isset($form['#node']->filterreplace) ? $form['#node']->filterreplace : " ** ",
			'#size' => 6,
			'#maxlength' => 255,
			'#description' => t("Filter replace."),
		);
  } else {
	  $form['vconsult']['advanced']['filterreplace'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->filterreplace) ? $form['#node']->filterreplace : " ** ",
	  );
  }

  if (user_access('edit background_url3', $user)) {
	  $form['vconsult']['advanced']['background_url'] = array(
		'#type' => 'textarea',
		'#title' => t('background_url'),
		'#default_value' => isset($form['#node']->background_url) ? $form['#node']->background_url : variable_get('vconsult_background_url3', ""),
		'#size' => 48,
		'#maxlength' => 255,
		'#description' => t("background_url."),
	  );
  } else {
	  $form['vconsult']['advanced']['background_url'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->background_url) ? $form['#node']->background_url : variable_get('vconsult_background_url3', ""),
	  );
  }

  if (user_access('edit layoutcode3', $user)) {
	  $form['vconsult']['advanced']['layoutcode'] = array(
		'#type' => 'textarea',
		'#title' => t('layoutcode'),
		'#default_value' => isset($form['#node']->layoutcode) ? $form['#node']->layoutcode : variable_get('vconsult_layoutcode3', ""),
		'#cols' => 32,
		'#rows' => 2,
		'#description' => t("layoutcode."),
	  );
  } else {
	  $form['vconsult']['advanced']['layoutcode'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->layoutcode) ? $form['#node']->layoutcode : variable_get('vconsult_layoutcode3', ""),
	  );
  }

  if (user_access('edit room_limit', $user)) {
	  $form['vconsult']['advanced']['room_limit'] = array(
		'#type' => 'textfield',
		'#title' => t('room_limit'),
		'#default_value' => isset($form['#node']->room_limit) ? $form['#node']->room_limit : variable_get('vconsult_room_limit3', "100"),
		'#cols' => 32,
		'#rows' => 2,
		'#description' => t("Room limit."),
	  );
  } else {
	  $form['vconsult']['advanced']['room_limit'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->room_limit) ? $form['#node']->room_limit : variable_get('vconsult_room_limit3', "100"),
	  );
  }

  if (user_access('edit floodprotection', $user)) {
	  $form['vconsult']['advanced']['floodprotection'] = array(
		'#type' => 'textfield',
		'#title' => t('floodprotection'),
		'#default_value' => isset($form['#node']->floodprotection) ? $form['#node']->floodprotection : variable_get('vconsult_floodprotection3', "3"),
		'#cols' => 32,
		'#rows' => 2,
		'#description' => t("floodprotection."),
	  );
  } else {
	  $form['vconsult']['advanced']['floodprotection'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->floodprotection) ? $form['#node']->floodprotection : variable_get('vconsult_floodprotection3', "3"),
	  );
  }

  if (user_access('edit fillwindow3', $user)) {
		$options = array("1" => t('Yes'), "0" => t('No'));
		$form['vconsult']['advanced']['fillwindow'] = array(
			'#type' => 'select',
			'#title' => t('fillwindow'),
			'#default_value' => isset($form['#node']->fillwindow) ? $form['#node']->fillwindow : variable_get('vconsult_fillwindow3', "1"),
			'#options' => $options,
			'#description' => t('fillwindow.'),
		);
	} else {
	  $form['vconsult']['advanced']['fillwindow'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->fillwindow) ? $form['#node']->fillwindow : variable_get('vconsult_fillwindow3', "1"),
	  );
	}

  if (user_access('edit instantaccess3', $user)) {
		$options = array("1" => t('Yes'), "0" => t('No'));
		$form['vconsult']['advanced']['visitors'] = array(
			'#type' => 'select',
			'#title' => t('Instant access'),
			'#default_value' => isset($form['#node']->visitors) ? $form['#node']->visitors : "1",
			'#options' => $options,
			'#description' => t('Allow non registered users to access chat. If disabled people will not be able to access chat instantly, without having and account and beeing logged in.'),
		);
	} else {
	  $form['vconsult']['advanced']['visitors'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->visitors) ? $form['#node']->visitors : '1',
	  );
	}

  if (user_access('edit credits3', $user)) {
		$form['vconsult']['advanced']['credits'] = array(
			'#type' => 'textfield',
			'#title' => t('Credits'),
			'#default_value' => isset($form['#node']->credits) ? $form['#node']->credits : 0,
			'#size' => 5,
			'#maxlength' => 6,
			'#description' => t("Maximum total number of streaming minutes this room can be used for. Usage of all users is added up (i.e. 2 users chatting for 10 minutes will require 20 credits). Leave 0 for unlimited usage time."),
		);
	} else {
	  $form['vconsult']['advanced']['credits'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->credits) ? $form['#node']->credits : 0,
	  );
	}

	if (isset($form['#node']->timeexpire)) {
		if ($form['#node']->timeexpire > 0) {
			$form['#node']->expire = floor(($form['#node']->timeexpire - time())  / 3600);
		}
	}

  if (user_access('edit availability3', $user)) {
		$form['vconsult']['advanced']['expire'] = array(
			'#type' => 'textfield',
			'#title' => t('Availability'),
			'#default_value' => isset($form['#node']->expire) ? ($form['#node']->expire+1) : 0,
			'#size' => 5,
			'#maxlength' => 6,
			'#description' => t("Number of hours this room will be accessible (i.e. 720 for 1 month). Leave 0 to make permanent room."),
		);
	} else {
	  $form['vconsult']['advanced']['expire'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->expire) ? ($form['#node']->expire+1) : 0,
	  );
	}

	if (isset($form['#node']->timeout)) {
		$form['#node']->cleanup = floor($form['#node']->timeout / 3600);
	}
  if (user_access('edit cleanup3', $user)) {
		$form['vconsult']['advanced']['cleanup'] = array(
			'#type' => 'textfield',
			'#title' => t('Cleanup'),
			'#default_value' => isset($form['#node']->cleanup) ? $form['#node']->cleanup : 0,
			'#size' => 5,
			'#maxlength' => 6,
			'#description' => t("If room is not used for this number of hours will be deleted. Leave 0 for no cleanup."),
		);
	} else {
	  $form['vconsult']['advanced']['cleanup'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->cleanup) ? $form['#node']->cleanup : 0,
	  );
	}

  $form['vconsult']['advanced']['webcam'] = array(
    '#type' => 'fieldset',
    '#title' => t('Streaming'),
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

	if (isset($form['#node']->camwidth) && (isset($form['#node']->camheight))) {
		$form['#node']->resolution = $form['#node']->camwidth . "x" . $form['#node']->camheight;
	}
  if (user_access('edit camwidth3', $user) && user_access('edit camheight3', $user)) {
		$options = array("320x240" => "320x240", "160x120" => "160x120", "176x144" => "176x144", "352x288" => "352x288", "640x480" => "640x480");
		$form['vconsult']['advanced']['webcam']['resolution'] = array(
			'#type' => 'select',
			'#title' => t('Resolution'),
			'#default_value' => isset($form['#node']->resolution) ? $form['#node']->resolution : "640x480",
			'#options' => $options,
			'#description' => t('Camera desired mode: resolution.'),
		);
	} else {
	  $form['vconsult']['advanced']['webcam']['resolution'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->resolution) ? $form['#node']->resolution : "640x480",
	  );
	}

	if (user_access('edit camfps3', $user)) {
		$options = array("15" => "15", "10" => "10", "12" => "12", "20" => "20", "25" => "25", "30" => "30");
		$form['vconsult']['advanced']['webcam']['camfps'] = array(
			'#type' => 'select',
			'#title' => t('FPS'),
			'#default_value' => isset($form['#node']->camfps) ? $form['#node']->camfps : 15,
			'#options' => $options,
			'#description' => t('Camera desired  mode: frames per second.'),
		);
	} else {
	  $form['vconsult']['advanced']['webcam']['camfps'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->camfps) ? $form['#node']->camfps : 15,
	  );
	}

	if (user_access('edit micrate3', $user)) {
		$options = array("22" => "22", "11" => "11", "44" => "44", "48" => "48");
		$form['vconsult']['advanced']['webcam']['micrate'] = array(
			'#type' => 'select',
			'#title' => t('Micrate'),
			'#default_value' => isset($form['#node']->micrate) ? $form['#node']->micrate : 11,
			'#options' => $options,
			'#description' => t('Camera desired  mode: micrate.'),
		);
	} else {
	  $form['vconsult']['advanced']['webcam']['micrate'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->micrate) ? $form['#node']->micrate : 11,
	  );
	}

  if (user_access('edit bandwidth3', $user)) {
	  $form['vconsult']['advanced']['webcam']['bandwidth'] = array(
		'#type' => 'textfield',
		'#title' => t('Bandwidth'),
		'#default_value' => isset($form['#node']->bandwidth) ? $form['#node']->bandwidth : 65536,
		'#size' => 6,
		'#maxlength' => 8,
		'#description' => t("Default bandwidth per video stream in bytes per second."),
	  );
  } else {
	  $form['vconsult']['advanced']['webcam']['bandwidth'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->bandwidth) ? $form['#node']->bandwidth : 65536,
	  );
  }

  if (user_access('edit maxbandwidth3', $user)) {
	  $form['vconsult']['advanced']['webcam']['maxbandwidth'] = array(
		'#type' => 'textfield',
		'#title' => t('Maximum bandwidth'),
		'#default_value' => isset($form['#node']->maxbandwidth) ? $form['#node']->maxbandwidth : 131072,
		'#size' => 6,
		'#maxlength' => 8,
		'#description' => t("Maximum bandwidth per video stream in bytes per second."),
	  );
  } else {
	  $form['vconsult']['advanced']['webcam']['maxbandwidth'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->maxbandwidth) ? $form['#node']->maxbandwidth : 131072,
	  );
  }

  $form['vconsult']['advanced']['param'] = array(
    '#type' => 'fieldset',
    '#title' => t('Permissions'),
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  if (user_access('edit write_text', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['write_text'] = array(
		'#type' => 'select',
		'#title' => t('write_text'),
		'#default_value' => isset($form['#node']->write_text) ? $form['#node']->write_text : variable_get('vconsult_write_text3', "1"),
		'#options' => $options,
		'#description' => t('write_text.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['write_text'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->write_text) ? $form['#node']->write_text : variable_get('vconsult_write_text3', "1"),
	  );
  }

  if (user_access('edit externalstream', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['externalstream'] = array(
		'#type' => 'select',
		'#title' => t('externalstream'),
		'#default_value' => isset($form['#node']->externalstream) ? $form['#node']->externalstream : variable_get('vconsult_externalstream3', "1"),
		'#options' => $options,
		'#description' => t('externalstream.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['externalstream'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->externalstream) ? $form['#node']->externalstream : variable_get('vconsult_externalstream3', "1"),
	  );
  }

  if (user_access('edit publicvideosadd', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['publicvideosadd'] = array(
		'#type' => 'select',
		'#title' => t('publicvideosadd'),
		'#default_value' => isset($form['#node']->publicvideosadd) ? $form['#node']->publicvideosadd : variable_get('vconsult_publicvideosadd3', "1"),
		'#options' => $options,
		'#description' => t('publicvideosadd.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['publicvideosadd'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->publicvideosadd) ? $form['#node']->publicvideosadd : variable_get('vconsult_publicvideosadd3', "1"),
	  );
  }

  if (user_access('edit privatetextchat', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['privatetextchat'] = array(
		'#type' => 'select',
		'#title' => t('privatetextchat'),
		'#default_value' => isset($form['#node']->privatetextchat) ? $form['#node']->privatetextchat : variable_get('vconsult_privatetextchat3', "1"),
		'#options' => $options,
		'#description' => t('privatetextchat.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['privatetextchat'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->privatetextchat) ? $form['#node']->privatetextchat : variable_get('vconsult_privatetextchat3', "1"),
	  );
  }

  if (user_access('edit change_background', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['change_background'] = array(
		'#type' => 'select',
		'#title' => t('change_background'),
		'#default_value' => isset($form['#node']->change_background) ? $form['#node']->change_background : variable_get('vconsult_change_background3', "1"),
		'#options' => $options,
		'#description' => t('change_background.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['change_background'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->change_background) ? $form['#node']->change_background : variable_get('vconsult_change_background3', "1"),
	  );
  }

  if (user_access('edit files_enabled', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['files_enabled'] = array(
		'#type' => 'select',
		'#title' => t('files_enabled'),
		'#default_value' => isset($form['#node']->files_enabled) ? $form['#node']->files_enabled : variable_get('vconsult_files_enabled3', "1"),
		'#options' => $options,
		'#description' => t('files_enabled.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['files_enabled'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->files_enabled) ? $form['#node']->files_enabled : variable_get('vconsult_files_enabled3', "1"),
	  );
  }

  if (user_access('edit file_upload3', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['file_upload'] = array(
		'#type' => 'select',
		'#title' => t('file_upload'),
		'#default_value' => isset($form['#node']->file_upload) ? $form['#node']->file_upload : variable_get('vconsult_file_upload3', "1"),
		'#options' => $options,
		'#description' => t('file_upload.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['file_upload'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->file_upload) ? $form['#node']->file_upload : variable_get('vconsult_file_upload3', "1"),
	  );
  }

  if (user_access('edit file_delete3', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['file_delete'] = array(
		'#type' => 'select',
		'#title' => t('file_delete'),
		'#default_value' => isset($form['#node']->file_delete) ? $form['#node']->file_delete : variable_get('vconsult_file_delete3', "1"),
		'#options' => $options,
		'#description' => t('file_delete.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['file_delete'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->file_delete) ? $form['#node']->file_delete : variable_get('vconsult_file_delete3', "1"),
	  );
  }

  if (user_access('edit chat_enabled', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['chat_enabled'] = array(
		'#type' => 'select',
		'#title' => t('chat_enabled'),
		'#default_value' => isset($form['#node']->chat_enabled) ? $form['#node']->chat_enabled : variable_get('vconsult_chat_enabled3', "1"),
		'#options' => $options,
		'#description' => t('chat_enabled.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['chat_enabled'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->chat_enabled) ? $form['#node']->chat_enabled : variable_get('vconsult_chat_enabled3', "1"),
	  );
  }

  if (user_access('edit users_enabled', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['users_enabled'] = array(
		'#type' => 'select',
		'#title' => t('users_enabled'),
		'#default_value' => isset($form['#node']->users_enabled) ? $form['#node']->users_enabled : variable_get('vconsult_users_enabled3', "1"),
		'#options' => $options,
		'#description' => t('users_enabled.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['users_enabled'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->users_enabled) ? $form['#node']->users_enabled : variable_get('vconsult_users_enabled3', "1"),
	  );
  }

  if (user_access('edit enabledvideo3', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['enabledvideo'] = array(
		'#type' => 'select',
		'#title' => t('enabledVideo'),
		'#default_value' => isset($form['#node']->enabledvideo) ? $form['#node']->enabledvideo : variable_get('vconsult_enabledvideo3', "1"),
		'#options' => $options,
		'#description' => t('enabledVideo.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['enabledvideo'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->enabledvideo) ? $form['#node']->enabledvideo : variable_get('vconsult_enabledvideo3', "1"),
	  );
  }

  if (user_access('edit enabledsound3', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['enabledsound'] = array(
		'#type' => 'select',
		'#title' => t('enabledSound'),
		'#default_value' => isset($form['#node']->enabledsound) ? $form['#node']->enabledsound : variable_get('vconsult_enabledsound3', "1"),
		'#options' => $options,
		'#description' => t('enabledSound.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['enabledsound'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->enabledsound) ? $form['#node']->enabledsound : variable_get('vconsult_enabledsound3', "1"),
	  );
  }

  if (user_access('edit configuresource3', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['configuresource'] = array(
		'#type' => 'select',
		'#title' => t('configureSource'),
		'#default_value' => isset($form['#node']->configuresource) ? $form['#node']->configuresource : variable_get('vconsult_configuresource3', "1"),
		'#options' => $options,
		'#description' => t('configureSource.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['configuresource'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->configuresource) ? $form['#node']->configuresource : variable_get('vconsult_configuresource3', "1"),
	  );
  }

  if (user_access('edit users_enabled', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['users_enabled'] = array(
		'#type' => 'select',
		'#title' => t('users_enabled'),
		'#default_value' => isset($form['#node']->users_enabled) ? $form['#node']->users_enabled : variable_get('vconsult_users_enabled3', "1"),
		'#options' => $options,
		'#description' => t('users_enabled.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['users_enabled'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->users_enabled) ? $form['#node']->users_enabled : variable_get('vconsult_users_enabled3', "1"),
	  );
  }

  if (user_access('edit showcamsettings3', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['showcamsettings'] = array(
		'#type' => 'select',
		'#title' => t('showcamSettings'),
		'#default_value' => isset($form['#node']->showcamsettings) ? $form['#node']->showcamsettings : variable_get('vconsult_showcamsettings3', "1"),
		'#options' => $options,
		'#description' => t('showcamSettings.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['showcamsettings'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->showcamsettings) ? $form['#node']->showcamsettings : variable_get('vconsult_showcamsettings3', "1"),
	  );
  }

  if (user_access('edit regularcams', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['regularcams'] = array(
		'#type' => 'select',
		'#title' => t('regularcams'),
		'#default_value' => isset($form['#node']->regularcams) ? $form['#node']->regularcams : variable_get('vconsult_regularcams3', "1"),
		'#options' => $options,
		'#description' => t('regularcams.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['regularcams'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->regularcams) ? $form['#node']->regularcams : variable_get('vconsult_regularcams3', "1"),
	  );
  }

  if (user_access('edit regularwatch', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['regularwatch'] = array(
		'#type' => 'select',
		'#title' => t('regularwatch'),
		'#default_value' => isset($form['#node']->regularwatch) ? $form['#node']->regularwatch : variable_get('vconsult_regularwatch3', "1"),
		'#options' => $options,
		'#description' => t('regularwatch.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['regularwatch'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->regularwatch) ? $form['#node']->regularwatch : variable_get('vconsult_regularwatch3', "1"),
	  );
  }

  if (user_access('edit slideshow', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['slideshow'] = array(
		'#type' => 'select',
		'#title' => t('slideshow'),
		'#default_value' => isset($form['#node']->slideshow) ? $form['#node']->slideshow : variable_get('vconsult_slideshow3', "1"),
		'#options' => $options,
		'#description' => t('slideshow.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['slideshow'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->slideshow) ? $form['#node']->slideshow : variable_get('vconsult_slideshow3', "1"),
	  );
  }

  if (user_access('edit advancedcamsettings3', $user)) {
	  $options = array("1" => t('Yes'), "0" => t('No'));
	  $form['vconsult']['advanced']['param']['advancedcamsettings'] = array(
		'#type' => 'select',
		'#title' => t('advancedcamsettings'),
		'#default_value' => isset($form['#node']->advancedcamsettings) ? $form['#node']->advancedcamsettings : variable_get('vconsult_advancedcamsettings3', "1"),
		'#options' => $options,
		'#description' => t('advancedcamsettings.'),
	  );
  } else {
	  $form['vconsult']['advanced']['param']['advancedcamsettings'] = array(
		'#type' => 'hidden',
		'#default_value' => isset($form['#node']->advancedcamsettings) ? $form['#node']->advancedcamsettings : variable_get('vconsult_advancedcamsettings3', "1"),
	  );
  }  
	}
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 * We don't want the Video Consultation rooms to get to the first page and the wrong kind of attention.
function vconsult_form_vconsult_node_form_alter(&$form, $form_state) {
  $form['options']['promote']['#disabled'] = TRUE;
  $form['options']['promote']['#default_value'] = 0;
  $form['options']['promote']['#value'] = 0;
}
 */

/**
 * Implementation of hook_delete().
 */
function vconsult_node_delete($node) {
  // Notice that we're matching all revision, by using the node's nid.
  db_query('DELETE FROM {vconsult_rooms} WHERE nid = %d', $node->nid);
}

/**
 * Implementation of hook_insert().
 */
function vconsult_node_insert($node) {
	if (isset($node->advanced['param']['publicvideosadd'])) {
  $room = check_plain($node->room);
  if ($room == variable_get('vconsult_room_prefix3', 'InstantRoom')) {
    $room = variable_get('vconsult_room_prefix3', 'InstantRoom') . "_" . base_convert((time() - 1225500000) . rand(0, 10), 10, 36);
  }

  $cam = explode("x", $node->advanced['webcam']['resolution']);
  $expiration = 0;
  if ($node->advanced['expire']) {
    $expiration = $node->advanced['expire'] * 3600 + time();
  }
  $welcome = nl2br($node->advanced['welcome']);
  $ztime = time();

		$id = db_insert('vconsult_rooms')
		->fields(array(
			'vid' => $node->vid,
			'timecreated' => $ztime,
			'timelastaccess' => $ztime,
			'timeexpire' => $expiration,
			'timeout' => ($node->advanced['cleanup'] * 3600), 
			'credits' => $node->advanced['credits'], 
			'bandwidth' => $node->advanced['webcam']['bandwidth'], 
			'maxbandwidth' => $node->advanced['webcam']['maxbandwidth'], 
			'camwidth' => $cam[0], 
			'camheight' => $cam[1], 
			'camfps' => $node->advanced['webcam']['camfps'], 
			'visitors' => $node->advanced['visitors'], 
			'micrate' => $node->advanced['webcam']['micrate'],
			'filterregex' => addslashes($node->advanced['filterregex']),
			'filterreplace' => addslashes($node->advanced['filterreplace']),
			'fillwindow' => $node->advanced['fillwindow'],
			'room_limit' => $node->advanced['room_limit'],
			'layoutcode' => $node->advanced['layoutcode'],
			'background_url' => $node->advanced['background_url'],
			'floodprotection' => $node->advanced['floodprotection'],
			'regularcams' => $node->advanced['param']['regularcams'],
			'regularwatch' => $node->advanced['param']['regularwatch'],
			'privatetextchat' => $node->advanced['param']['privatetextchat'],
			'change_background' => $node->advanced['param']['change_background'],
			'files_enabled' => $node->advanced['param']['files_enabled'],
			'file_upload' => $node->advanced['param']['file_upload'],
			'enabledvideo' => $node->advanced['param']['enabledvideo'],
			'enabledsound' => $node->advanced['param']['enabledsound'],
			'configuresource' => $node->advanced['param']['configuresource'],
			'advancedcamsettings' => $node->advanced['param']['advancedcamsettings'],
			'showcamsettings' => $node->advanced['param']['showcamsettings'],
			'chat_enabled' => $node->advanced['param']['chat_enabled'],
			'users_enabled' => $node->advanced['param']['users_enabled'],
			'write_text' => $node->advanced['param']['write_text'],
			'slideshow' => $node->advanced['param']['slideshow'],
			'publicvideosadd' => $node->advanced['param']['publicvideosadd'],
			'externalstream' => $node->advanced['param']['externalstream'],
			'nid' => $node->nid,
			'room' => $room,
			'welcome' => $welcome,
		))
		->execute();

  $options = array("attributes" => array("title" => $node->room, 'target' => '_blank'));
  $link = l($room, "node/" . $node->nid, $options);
  drupal_set_message(t('Use this link to access this Video Consultation room and invite the other participants: ') . "<BR>" . $link);
	}
}

/**
 * Implementation of hook_insert().
 */
function vconsult_node_update($node) {

  // if this is a new node or we're adding a new revision,
	if (isset($node->advanced['param']['publicvideosadd'])) {
  if ($node->revision) {
    vconsult_insert($node);
  }
  else {

    $room = check_plain($node->room);
    if ($room == variable_get('vconsult_room_prefix3', 'InstantRoom')) {
      $room = variable_get('vconsult_room_prefix3', 'InstantRoom') . "_" . base_convert((time() - 1225500000) . rand(0, 10), 10, 36);
    }

    $cam = explode("x", $node->advanced['webcam']['resolution']);
    $expiration = 0;
    if ($node->advanced['expire']) {
      $expiration = $node->advanced['expire'] * 3600 + time();
    }
    $welcome = nl2br($node->advanced['welcome']);
    $ztime = time();

		$id = db_update('vconsult_rooms')
		->fields(array(
			'timecreated' => $ztime,
			'timelastaccess' => $ztime,
			'timeexpire' => $expiration,
			'timeout' => ($node->advanced['cleanup'] * 3600), 
			'credits' => $node->advanced['credits'], 
			'bandwidth' => $node->advanced['webcam']['bandwidth'], 
			'maxbandwidth' => $node->advanced['webcam']['maxbandwidth'], 
			'camwidth' => $cam[0], 
			'camheight' => $cam[1], 
			'camfps' => $node->advanced['webcam']['camfps'], 
			'visitors' => $node->advanced['visitors'], 
			'micrate' => $node->advanced['webcam']['micrate'],
			'filterregex' => addslashes($node->advanced['filterregex']),
			'filterreplace' => addslashes($node->advanced['filterreplace']),
			'fillwindow' => $node->advanced['fillwindow'],
			'room_limit' => $node->advanced['room_limit'],
			'layoutcode' => $node->advanced['layoutcode'],
			'background_url' => $node->advanced['background_url'],
			'floodprotection' => $node->advanced['floodprotection'],
			'regularcams' => $node->advanced['param']['regularcams'],
			'regularwatch' => $node->advanced['param']['regularwatch'],
			'privatetextchat' => $node->advanced['param']['privatetextchat'],
			'change_background' => $node->advanced['param']['change_background'],
			'files_enabled' => $node->advanced['param']['files_enabled'],
			'file_upload' => $node->advanced['param']['file_upload'],
			'enabledvideo' => $node->advanced['param']['enabledvideo'],
			'enabledsound' => $node->advanced['param']['enabledsound'],
			'configuresource' => $node->advanced['param']['configuresource'],
			'advancedcamsettings' => $node->advanced['param']['advancedcamsettings'],
			'showcamsettings' => $node->advanced['param']['showcamsettings'],
			'chat_enabled' => $node->advanced['param']['chat_enabled'],
			'users_enabled' => $node->advanced['param']['users_enabled'],
			'write_text' => $node->advanced['param']['write_text'],
			'slideshow' => $node->advanced['param']['slideshow'],
			'publicvideosadd' => $node->advanced['param']['publicvideosadd'],
			'externalstream' => $node->advanced['param']['externalstream'],
			'room' => $room,
			'welcome' => $welcome,
		))
		->condition('nid', $node->nid)
		->execute();
  }
	}
}

/**
 * Implementation of hook_load().
 */
function vconsult_node_load($nodes, $types) {
  $result = db_query('SELECT * FROM {vconsult_rooms} WHERE nid IN(:nids)', array(':nids' => array_keys($nodes)));
  foreach ($result as $record) {
    $nodes[$record->nid]->room = $record->room;
    $nodes[$record->nid]->welcome = $record->welcome;
    $nodes[$record->nid]->camfps = $record->camfps;
    $nodes[$record->nid]->camwidth = $record->camwidth;
    $nodes[$record->nid]->camheight = $record->camheight;
    $nodes[$record->nid]->bandwidth = $record->bandwidth;
    $nodes[$record->nid]->maxbandwidth = $record->maxbandwidth;
    $nodes[$record->nid]->timeused = $record->timeused;
    $nodes[$record->nid]->credits = $record->credits;
    $nodes[$record->nid]->timecreated = $record->timecreated;
    $nodes[$record->nid]->timelastaccess = $record->timelastaccess;
    $nodes[$record->nid]->timeexpire = $record->timeexpire;
    $nodes[$record->nid]->timeout = $record->timeout;
    $nodes[$record->nid]->micrate = $record->micrate;
    $nodes[$record->nid]->visitors = $record->visitors;
    $nodes[$record->nid]->filterregex = $record->filterregex;
    $nodes[$record->nid]->filterreplace = $record->filterreplace;
		$nodes[$record->nid]->fillwindow = $record->fillwindow;
		$nodes[$record->nid]->room_limit = $record->room_limit;
		$nodes[$record->nid]->layoutcode = $record->layoutcode;
		$nodes[$record->nid]->background_url = $record->background_url;
		$nodes[$record->nid]->floodprotection = $record->floodprotection;
		$nodes[$record->nid]->regularcams = $record->regularcams;
		$nodes[$record->nid]->regularwatch = $record->regularwatch;
		$nodes[$record->nid]->privatetextchat = $record->privatetextchat;
		$nodes[$record->nid]->change_background = $record->change_background;
		$nodes[$record->nid]->files_enabled = $record->files_enabled;
		$nodes[$record->nid]->file_upload = $record->file_upload;
		$nodes[$record->nid]->enabledvideo = $record->enabledvideo;
		$nodes[$record->nid]->enabledsound = $record->enabledsound;
		$nodes[$record->nid]->configuresource = $record->configuresource;
		$nodes[$record->nid]->advancedcamsettings = $record->advancedcamsettings;
		$nodes[$record->nid]->showcamsettings = $record->showcamsettings;
		$nodes[$record->nid]->chat_enabled = $record->chat_enabled;
		$nodes[$record->nid]->users_enabled = $record->users_enabled;
		$nodes[$record->nid]->write_text = $record->write_text;
		$nodes[$record->nid]->slideshow = $record->slideshow;
		$nodes[$record->nid]->publicvideosadd = $record->publicvideosadd;
		$nodes[$record->nid]->externalstream = $record->externalstream;
  }
}

/**
 * Implementation of hook_view().
 */
function vconsult_node_view($node, $view_mode) {
  global $base_url, $user;
  $url = $base_url . variable_get('vconsult_path', "/vconsult/") . "videoconsultation.php";
	
	if (isset($node->publicvideosadd) && $view_mode == 'full' && node_is_page($node)) {
		if (!$node->visitors && !isset($user->name)) {
			$disabled_content = t('Instant access to visitors is disabled. You need to be registered and logged into this website to access this room.');
			// Add the output to the node.
			$node->content['body'] = array(
				'#value' => $disabled_content,
			);
			$node->content['vconsult'] = array(
				'#markup' => $disabled_content,
			);

		} else {
		$options        = array("attributes" => array("title" => $node->room, 'target' => '_blank'));
		$link           = l($node->room, "node/". $node->nid, $options);
		$access_content = t('Use this link to access this video consultation room and invite the other participants: ') ."<BR>". $link;

		$stats_content = t('Resolution') .": ". $node->camwidth ."x". $node->camheight . "@" . $node->camfps . "<BR>" . t('Bandwidth') . ": " . $node->bandwidth . "/" . $node->maxbandwidth . t(' bytes/s') . "<BR>" . t('Streaming time used') . ": " . floor($node->timeused / 60000) . t(' minutes') . "<BR>" . t('Credits') . ": " . ($node->credits ? ($node->credits . t(' minutes')) : t('unlimited'));
		$form = $access_content . "<BR />" . $stats_content. "<br /><br />";
		
		$form .= '<form enctype="multipart/form-data" id="vconsult-start-form" method="post" accept-charset="UTF-8" action="'.$url.'">
		<div><div id="edit-username-wrapper" class="form-item">
		 <label for="edit-username">Username: </label>
		 <input type="text" class="form-text" value="'.(isset($user->name) ? $user->name : "Guest").'" size="24" id="edit-username" name="username" maxlength="64">
		 <div class="description">Username as you want it displayed within the chat.</div>
		</div>
		<input type="hidden" value="'.$node->room.'" id="edit-r" name="r">
		<input type="submit" class="form-submit" value="Enter Video Consultation" id="edit-submit" name="op">

		</div></form>';

		// Add the output to the node.
		$node->content['vconsult'] = array(
			'#markup' => $form,
		);
		}
	}
}

