<?php

/**
 * @file
 * Provides a Flashcard field and entity.
 */

/**
 * Implements hook_menu().
 */
function flashcard_menu() {
  $items = array();

  $items['admin/config/flashcard'] = array(
    'title' => 'Flashcard',
    'description' => 'Settings for flashcards.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  return $items;
}

/**
 * Implements hook_modules_enabled().
 */
function flashcard_modules_enabled($modules) {
  if (!in_array('flashcard', $modules)) {
    return;
  }

  if (!field_info_field('field_flashcard')) {
    $field = array(
      'field_name' => 'field_flashcard',
      'type' => 'flashcard',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'translatable' => TRUE,
      'entity_types' => array('node'),
    );
    field_create_field($field);

    $instance = array(
      'field_name' => 'field_flashcard',
      'entity_type' => 'node',
      'label' => 'Flashcard',
      'bundle' => 'flashcard',
      'required' => FALSE,
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_node_info().
 */
function flashcard_node_info() {
  return array(
    'flashcard' => array(
      'name' => t('Flashcard Deck'),
      'base' => 'flashcard',
      'description' => t('Contains flashcards.'),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );
}

/**
 * Implements hook_form().
 */
function flashcard_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_field_info().
 */
function flashcard_field_info() {
  return array(
    'flashcard' => array(
      'label' => t('Flashcard'),
      'description' => t('This field ties two text fields together.'),
      'settings' => array(),
      'instance_settings' => array(),
      'default_widget' => 'flashcard_default',
      'default_formatter' => 'flashcard_default',
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function flashcard_field_formatter_info() {
  return array(
    'flashcard_default' => array(
      'label' => t('Default'),
      'field types' => array('flashcard'),
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function flashcard_field_widget_info() {
  return array(
    'flashcard_default' => array(
      'label' => t('Flashcard'),
      'field types' => array('flashcard'),
      'settings' => array(),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function flashcard_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $element['question'] = array(
    '#type' => 'textfield',
    '#title' => t('Front of card'),
    '#default_value' => isset($items[$delta]['question']) ? $items[$delta]['question'] : '',
  );
  $element['answer'] = array(
    '#type' => 'textfield',
    '#title' => t('Back of card'),
    '#default_value' => isset($items[$delta]['answer']) ? $items[$delta]['answer'] : '',
  );
  return $element;
}

/**
 * Implements hook_field_is_empty().
 */
function flashcard_field_is_empty($item, $field) {
  return (empty($item['question']) || (empty($item['answer']) && !is_numeric($item['answer'])));
}

/**
 * Implements hook_field_formatter_view().
 */
function flashcard_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      '#theme' => 'item_list',
      '#items' => array(
        array(
          'data' => check_plain($item['question']),
          'children' => array(check_plain($item['answer'])),
          'class' => array('answer'),
        ),
      ),
      '#attributes' => array(
        'class' => array('question'),
      ),
    );
  }
  return $element;
}
