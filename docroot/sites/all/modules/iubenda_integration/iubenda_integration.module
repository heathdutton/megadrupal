<?php
/**
 * @file
 * Code for Iubenda Integration module.
 */

/**
 * Defining Iubenda privacy policy URL.
 */
define('IUBENDA_INTEGRATION_PRIVACY_POLICY_URL', '//www.iubenda.com/privacy-policy/');

/**
 * Implements hook_permission().
 */
function iubenda_integration_permission() {
  return array(
    'administer iubenda_integration' => array(
      'title' => t('Administer Iubenda Integration'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function iubenda_integration_menu() {
  $items = array();
  $path = drupal_get_path('module', 'iubenda_integration');

  $items['admin/config/system/iubenda-integration'] = array(
    'title' => 'Iubenda Integration',
    'description' => 'Configure Iubenda Integration settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('iubenda_integration_privacy_policy_settings_form'),
    'access arguments' => array('administer iubenda_integration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'iubenda_integration.admin.inc',
    'file path' => $path . '/includes',
  );

  $items['admin/config/system/iubenda-integration/privacy-policy'] = array(
    'title' => 'Privacy Policy',
    'description' => 'Iubenda Privacy Policy Settings',
    'access arguments' => array('administer iubenda_integration'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/config/system/iubenda-integration/cookie-policy'] = array(
    'title' => 'Cookie Policy',
    'description' => 'Iubenda Cookie Policy Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('iubenda_integration_cookie_policy_settings_form'),
    'access arguments' => array('administer iubenda_integration'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'iubenda_integration.admin.inc',
    'file path' => $path . '/includes',
    'weight' => 1,
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function iubenda_integration_form_alter(&$form, &$form_state, $form_id) {
  $form_ids = iubenda_integration_get_form_ids();
  if (empty($form_ids) || !in_array($form_id, $form_ids)) {
    return;
  }

  $form['iubenda_integration_privacy_policy'] = array(
    '#type' => variable_get('iubenda_integration_form_element_type', 'checkbox'),
    '#title' => iubenda_integration_build_string(),
    '#required' => TRUE,
  );

  $form['#attached']['js'] = array(
    drupal_get_path('module', 'iubenda_integration') . '/js/iubenda_privacy_policy.js',
  );
}

/**
 * Helper function: get a list of form id enabled for Iubenda.
 *
 * @return array
 *   An array of form id enabled for Iubenda privacy policy link.
 */
function iubenda_integration_get_form_ids() {
  $form_ids = explode("\n", variable_get('iubenda_integration_forms', ''));

  foreach ($form_ids as $i => $form_id) {
    $form_ids[$i] = trim($form_id);
  }

  return $form_ids;
}

/**
 * Implements hook_block_info().
 */
function iubenda_integration_block_info() {
  $blocks = array();

  $blocks['privacy_policy'] = array(
    'info' => t('Iubenda Integration: Privacy policy'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function iubenda_integration_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'privacy_policy':
      $block['subject'] = '';
      $block['content']['iubenda_integration_privacy_policy'] = array(
        '#theme' => 'iubenda_integration_privacy_policy_block',
        '#pre_text' => variable_get('iubenda_integration_block_pretext', ''),
        '#link' => iubenda_integration_build_link(variable_get('iubenda_integration_block_text', t('Privacy Policy'))),
        '#post_text' => variable_get('iubenda_integration_block_posttext', ''),
        '#attached' => array(
          'js' => array(drupal_get_path('module', 'iubenda_integration') . '/js/iubenda_privacy_policy.js'),
        ),
      );
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function iubenda_integration_theme($existing, $type, $theme, $path) {
  return array(
    'iubenda_integration_privacy_policy_block' => array(
      'variables' => array(
        'pre_text' => NULL,
        'link' => NULL,
        'post_text' => NULL,
      ),
      'template' => 'iubenda-integration-privacy-policy-block',
      'path' => $path . '/templates',
    ),
  );
}

/**
 * Build the Iubenda privacy policy text.
 *
 * @return string
 *   A string containing the configured Iubenda pre-text, link and post-text.
 */
function iubenda_integration_build_string() {
  $pre_text = variable_get('iubenda_integration_pretext', '');
  $post_text = variable_get('iubenda_integration_posttext', '');
  return $pre_text . iubenda_integration_build_link() . $post_text;
}

/**
 * Helper function: builds the Iubenda privacy policy link.
 *
 * @return string
 *   Iubenda privacy policy link as HTML markup.
 */
function iubenda_integration_build_link() {
  $text = variable_get('iubenda_integration_text', t('Privacy Policy'));
  $code = variable_get('iubenda_integration_policy_code', '');
  $link_classes = array(
    variable_get('iubenda_integration_style', 'iubenda-nostyle'),
    'iubenda-embed',
  );

  if (variable_get('iubenda_integration_legal_only', FALSE)) {
    $link_classes[] = 'iub-legal-only';
  }

  if (!variable_get('iubenda_integration_show_brand', TRUE)) {
    $link_classes[] = 'no-brand';
  }

  $link_options = array(
    'external' => TRUE,
    'attributes' => array(
      'class' => $link_classes,
      'title' => $text,
    ),
  );

  return l($text, IUBENDA_INTEGRATION_PRIVACY_POLICY_URL . $code, $link_options);
}

/**
 * Implements hook_token_info_alter().
 */
function iubenda_integration_token_info() {
  $info['tokens']['site']['iubenda_integration'] = array(
    'name' => t('Iubenda'),
    'description' => t('The Iubenda privacy policy link'),
  );

  return $info;
}

/**
 * Implements hook_tokens().
 */
function iubenda_integration_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();

  if ($type == 'site') {
    foreach ($tokens as $name => $original) {
      if ($name == 'iubenda_integration') {
        $replacements[$original] = iubenda_integration_build_link();
      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_page_alter().
 */
function iubenda_integration_page_alter(&$page) {
  if (variable_get('iubenda_integration_cookie_policy_enabled', FALSE)) {
    $setting = array(
      'iubenda_integration' => array(
        'cookie_policy' => iubenda_integration_cookie_policy_settings(),
      ),
    );
    drupal_add_js($setting, 'setting');
    drupal_add_js(drupal_get_path('module', 'iubenda_integration') . '/js/iubenda_cookie_policy.js', array(
      'scope' => 'footer',
      'type' => 'file',
      'group' => JS_THEME,
      'weight' => 9999,
    ));
  }
}

/**
 * Get Iubenda cookie policy settings.
 */
function iubenda_integration_cookie_policy_settings() {
  $settings = variable_get('iubenda_integration_cookie_policy', array());
  $settings = _iubenda_integration_cookie_policy_filter_settings($settings);
  $developers = $settings['developers'];
  unset($settings['developers']);
  return array_merge($settings, $developers);
}

/**
 * Helper function: filter cookie policy settings recursively.
 */
function _iubenda_integration_cookie_policy_filter_settings($settings) {
  foreach ($settings as $key => &$value) {
    if (is_array($value)) {
      $value = _iubenda_integration_cookie_policy_filter_settings($value);
      if (empty($value)) {
        unset ($settings[$key]);
      }
    }
    else {
      if (!is_numeric($value) && empty($value)) {
        unset($settings[$key]);
      }
    }
  }

  return $settings;
}
