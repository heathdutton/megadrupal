<?php

/**
 * @file
 * This module hides certain sections of the page using jQuery.
 */

define('LIGHTS_OUT_REGION', 'content');
define('LIGHTS_OUT_LABEL_OFF', 'Turn off the lights!');
define('LIGHTS_OUT_LABEL_ON', 'Turn on the lights!');

/**
 * Page callback for admin settings form.
 */
function lights_out_admin() {
  global $theme_key;
  $form = array();
  $theme_key = variable_get('theme_default', $theme_key);
  $form['lights_out_region'] = array(
    '#type' => 'select',
    '#options' => system_region_list($theme_key),
    '#title' => t('Region'),
    '#default_value' => variable_get('lights_out_region', LIGHTS_OUT_REGION),
    '#description' => t("The theme region to be highlighted."),
    '#required' => TRUE,
  );
  $form['lights_out_label_off'] = array(
    '#type' => 'textfield',
    '#title' => t('Turn off label'),
    '#default_value' => t(variable_get('lights_out_label_off', LIGHTS_OUT_LABEL_OFF)),
    '#size' => 30,
    '#maxlength' => 30,
    '#description' => t("The label shown to the user prior to turning off the lights."),
    '#required' => TRUE,
  );
  $form['lights_out_label_on'] = array(
    '#type' => 'textfield',
    '#title' => t('Turn on label'),
    '#default_value' => t(variable_get('lights_out_label_on', LIGHTS_OUT_LABEL_ON)),
    '#size' => 30,
    '#maxlength' => 30,
    '#description' => t("The label shown to the user prior to turning the lights back on."),
    '#required' => TRUE,
  );
  $options = array();
  $node_types = node_type_get_types();
  foreach ($node_types as $node_type) {
    $options[$node_type->type] = check_plain($node_type->name);
  }
  $form['lights_out_content_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Links'),
    '#options' => $options,
    '#default_value' => variable_get('lights_out_content_types', array()),
    '#description' => t('Select the content types on which this option will be included as a link.'),
    '#required' => FALSE,
  );

  $form = system_settings_form($form);
  $form['#validate'][] = 'lights_out_admin_validate';
  return $form;
}

/**
 * Validation function to format region name. Invoked from lights_out_admin().
 *
 * @param array $form
 *   The form being used to edit the node.
 * @param array $form_state
 *   The form state array.
 */
function lights_out_admin_validate($form, &$form_state) {
  $region = str_replace('_', '-', $form_state['values']['lights_out_region']);
  form_set_value($form['lights_out_region'], $region, $form_state);
}

/**
 * Implements hook_menu().
 */
function lights_out_menu() {
  $items = array();

  $items['admin/config/user-interface/lights-out'] = array(
    'title' => 'Lights Out',
    'description' => 'Configure Lights Out settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lights_out_admin'),
    'access callback' => 'user_access',
    'access arguments' => array('administer lights out'),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function lights_out_permission() {
  return array(
    'administer lights out' => array(
      'title' => t('Administer lights out'),
      'description' => t('Allow the user administer lights out settings'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function lights_out_block_info() {
  $blocks['block-lights-out'] = array(
    'info' => t('Lights Out switch'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function lights_out_block_view($delta='') {
  $block = array();
  switch ($delta) {
    case 'block-lights-out':
      _lights_out_add_files();
      $block['subject'] = '';
      $block['content'] = theme('lights_out_switch');
      break;
  }
  return $block;
}

/**
 * Implements hook_node_view().
 */
function lights_out_node_view($node, $view_mode, $langcode) {
  $content_types = variable_get('lights_out_content_types', array());
  if (in_array($node->type, $content_types) && $content_types[$node->type]) {
    switch ($view_mode) {
      case 'full':
        _lights_out_add_files();
        $links['lights_out_switch'] = _lights_out_link();
        $node->content['links']['lights_out'] = array(
          '#theme' => 'links__node__lights_out',
          '#links' => $links,
          '#attributes' => array('class' => array('links', 'inline')),
        );
        break;
    }
  }
}

/**
 * Custom function that appends the CSS/JS files associated with this module.
 */
function _lights_out_add_files() {
  drupal_add_css(drupal_get_path('module', 'lights_out') . '/css/lights_out.css');
  drupal_add_js(array(
      'lights_out_region' => variable_get('lights_out_region', LIGHTS_OUT_REGION),
      'lights_out_label_off' => t(variable_get('lights_out_label_off', LIGHTS_OUT_LABEL_OFF)),
      'lights_out_label_on' => t(variable_get('lights_out_label_on', LIGHTS_OUT_LABEL_ON)),
  ), 'setting');
  drupal_add_js(drupal_get_path('module', 'lights_out') . '/js/lights_out.js');
}

/**
 * Custom function used to format lights_out_link array.
 */
function _lights_out_link() {
  return array(
    'title' => t(variable_get('lights_out_label_off', LIGHTS_OUT_LABEL_OFF)),
    'href' => '#',
    'html' => FALSE,
    'external' => TRUE,
    'fragment' => '',
    'attributes' => array(
      'class' => array('is-on'),
    ),
  );
}

/**
 * Implements hook_help().
 */
function lights_out_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#lights_out":
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Lights Out is a Drupal 7.x module that implements the well-known "turn off the lights" feature using jQuery, allowing to dim the overall site presentation and highlight relevant sections of a page.') . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_theme().
 */
function lights_out_theme($existing, $type, $theme, $path) {
  $variables = _lights_out_link();
  return array(
    'lights_out_switch' => array(
      'variables' => array(
        'title' => $variables['title'],
        'href' => $variables['href'],
        'options' => $variables,
      ),
    ),
  );
}

/**
 * Provides custom HTML for the Lights Out block.
 *
 * @param array $variables
 *   An associative array containing:
 *   - title: The label/caption used by the anchor link.
 *   - href: The link target.
 *
 * @ingroup themeable
 */
function theme_lights_out_switch($variables) {
  $output = '';
  $output .= '<span class="lights_out_switch">';
  $output .= l($variables['title'], $variables['href'], $variables['options']);
  $output .= '</span>';
  return $output;
}
