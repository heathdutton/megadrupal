<?php

/**
 * @file
 * Example implementation of Item session lock API.
 * Prevent concurrent access to the node and users edit form.
 */

/**
 * Implements hook_itemsessionlock_info().
 */
function itemsessionlock_example_itemsessionlock_info() {
  $locks = array();
  $locks['node_edit'] = array(
    'label' => t('Node'),
    // These are the default, given for reference only.
    'view' => TRUE,
    'permission' => TRUE,
    'cron' => TRUE,
    'menu' => TRUE,
  );
  $locks['user_edit'] = array(
    'label' => t('Node'),
    // Label is actually the only mandatory
    // key. Will default to the same as
    // the node one above.
  );
  return $locks;
}

/**
 * Implements hook_form_alter().
 */
function itemsessionlock_example_form_alter(&$form, &$form_state, $form_id) {
  // User edit form.
  if ($form_id === 'user_profile_form') {
    // This is enough to ensure a lock, or redirect to
    // user view page if the user profile is already being edited.
    // Args are : our module name, the type (matches the key defined
    // in our hook_itemsessionlock_info, and an unique id,
    // user uid in this case. 
    // Last one is an optional redirect path, that you probably
    // want to use in case of edit forms.
    // This is where the user trying to edit the profile will be
    // redirected to if a lock couldn't be acquired, and
    // where aÂ message will be presented to warn about the lock.
    // If he has sufficient permission, or the locks belongs
    // to himself (eg, using 2 browsers or devices) the message
    // will also contain a link to 'break' the lock.
    itemsessionlock_item_ensure_lock('itemsessionlock_example', 'user_edit', $form['#user']->uid, 'user/' . $form['#user']->uid);
    // We'll be releasing the user item when the form is submitted.
    $form['#submit'][] = 'itemsessionlock_example_user_edit_submit';
  }
  // Node edit form.
  if (!empty($form['#node_edit_form'])) {
    // We do nothing for new nodes.
    if (!empty($form['#node']->nid)) {
      // Note: if some redirection is already set in url,
      // it takes precedence over the argument provided here.
      // Eg. If user came from content admin page, with a link
      // to node/28/edit?destination=admin/content, he will still be
      // redirected to admin/content, where the message would be
      // displayed, instead of node/28.
      itemsessionlock_item_ensure_lock('itemsessionlock_example', 'node_edit', $form['#node']->nid, 'node/' . $form['#node']->nid);
      $form['#submit'][] = 'itemsessionlock_example_node_edit_submit';
    }
  }
}

/**
 * Submit callback for node edit form.
 */
function itemsessionlock_example_node_edit_submit($form, &$form_state) {
  itemsessionlock_clear('itemsessionlock_example', 'node_edit', $form['#node']->nid);
}

/**
 * Submit callback for user edit form.
 */
function itemsessionlock_example_user_edit_submit($form, &$form_state) {
  itemsessionlock_clear('itemsessionlock_example', 'user_edit', $form['#user']->uid);
}
