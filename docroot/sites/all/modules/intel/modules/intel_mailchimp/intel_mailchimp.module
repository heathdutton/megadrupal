<?php

function intel_mailchimp_menu() {
  $items = array();
  
  $items['admin/config/services/intel/modules/mailchimp'] = array(
    'title' => 'MailChimp',
    'description' => 'Add on module configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('intel_mailchimp_admin_config'),
    'access callback' => 'user_access',
    'access arguments' => array('admin intel'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'intel_mailchimp.admin.inc',
  ); 

  $items['visitor/%intel_visitor/mailchimp'] = array(
    'title' => 'MailChimp',
    'description' => 'MailChimp contact information.',
    'page callback' => 'intel_mailchimp_contact',
    'page arguments' => array(1),
    //'access callback' => 'user_access',
    //'access arguments' => array('view all intel reports'),
    'access callback' => 'intel_mailchimp_show_visitor_menu_tab',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'intel_mailchimp.admin.inc', 
  );
  /*
  $items['visitor/%intel_visitor/mailchimp/view'] = array(
    'title' => 'View',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  */
  $items['visitor/%intel_visitor/mailchimp/launch'] = array(
    'title' => 'View in MailChimp',
    'description' => 'MailChimp contact information.',
    'page callback' => 'intel_mailchimp_contact',
    'page arguments' => array(1, 'launch'),
    'access callback' => 'intel_mailchimp_show_visitor_menu_tab',
    'access arguments' => array(1),
    'weight' => 0,
    'type' => MENU_LOCAL_ACTION,
    'file' => 'intel_mailchimp.admin.inc',  
    'options' => array('attributes' => array('target' => 'mailchimp')),
  );
  $items['visitor/%intel_visitor/mailchimp/resync'] = array(
    'title' => 'Resync',
    'description' => 'MailChimp contact information.',
    'page callback' => 'intel_mailchimp_contact',
    'page arguments' => array(1, 'resync'),
    'access callback' => 'intel_mailchimp_show_visitor_menu_tab',
    'access arguments' => array(1),
    'weight' => 0,
    'type' => MENU_LOCAL_ACTION,
    'file' => 'intel_mailchimp.admin.inc', 
  );
  
  $items['intel_mailchimp/util/fetch_contact'] = array(
    'title' => 'SEO Tools Util',
    'description' => 'Analyze and optimize node content.',
    'page callback' => 'intel_mailchimp_util_fetch_contact',
    'access callback' => 'user_access',
    'access arguments' => array('admin intel'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function intel_mailchimp_show_visitor_menu_tab($visitor) {
  //return user_access('view all intel reports');
  return user_access('view all intel reports') && intel_mailchimp_visitor_is_linked($visitor);
}

function intel_mailchimp_visitor_is_linked($visitor) {
  $vp = $visitor->getProperties();
  $linked = !empty($vp->ext_data['mailchimp']['leid']) ? 1 : 0;
  return $linked;
}

function intel_mailchimp_util_fetch_contact() {
  $lists = mailchimp_get_lists();
dpm($lists);//
  $list_id = '8ffda48948';
  $email = 'susan@topshelfmodules.com';
  //$list_id = variable_get('intel_mailchimp_default_list_id', '');
  //$email = 'tom@getlevelten.com';
  $memberinfo = mailchimp_get_memberinfo($list_id, $email);
dpm($memberinfo);//
  return 'OK';
}

/**
 * Implements hook_intel_intel_script
 */
function intel_mailchimp_intel_intel_script() {
  $scripts['mailchimp'] = array(
    'title' => t('MailChimp'),
    'description' => t('Use on any pages that MailChip emails might link.'),
    'path' => libraries_get_path('LevelTen') . '/Intel/js/l10intel_mailchimp.js',
    'site_enabled' => true,
  );
  return $scripts;
}

function intel_mailchimp_intel_sync_visitordata(&$visitor) {
  global $base_url, $base_path;

  $list_id = variable_get('intel_mailchimp_default_list_id', '');
  if (!$list_id || !$visitor->email) {
    return TRUE;
  }
  $email = $visitor->getVar('ext', 'mailchimp', 'email');
  if (!$email) {
    $email = $visitor->email;
  }
  $crud_options = variable_get('intel_mailchimp_sync_crud', 'update');
  $crud_options = explode(',', $crud_options);
  $member = mailchimp_get_memberinfo($list_id, $email);
  $save_local = 0;
  $save_api = 0;
  if (empty($member['leid'])) {
    if (in_array('create', $crud_options)) {
      $mc_list = (object)array('mc_list_id' => $list_id);
      $ret = mailchimp_subscribe_user($mc_list, $email, array());
      $member = mailchimp_get_memberinfo($list_id, $email);      
    }
    return TRUE;
  }
  $visitor->setVar('ext', 'mailchimp', 'leid', $member['leid']);
  $visitor->setVar('ext', 'mailchimp', 'email', $email);
  $visitor->setVar('ext', 'mailchimp', 'list_id', $member['list_id']);
  if (empty($visitor->name) && (!empty($member['merges']['FNAME']))) {
    $name = $member['merges']['FNAME'];
    if (!empty($member['merges']['LNAME'])) {
      $name .= ' ' . $member['merges']['LNAME'];
    }
    $visitor->setName($name);
  }
  $save_local = 1;    
  $profile_url = 'https://us2.admin.mailchimp.com/lists/members/view?id=' . $member['leid'];
  $api_merges = array();
  if (isset($member['merges']['L10I_VTK'])) {
    $api_merges['L10I_VTK'] = $visitor->vtk;
    $save_api = 1;
  }
  if (isset($member['merges']['L10I_VID'])) {
    $api_merges['L10I_VID'] = $visitor->vid;
    $save_api = 1;
  }
  if (isset($member['merges']['L10I_VURL'])) {
    $api_merges['L10I_VURL'] = $base_url . $base_path . $visitor->uri();
    $save_api = 1;
  }
  if (isset($member['merges']['L10I_VSYNC'])) {
    $api_merges['L10I_VSYNC'] = $base_url . $base_path . $visitor->uri() . '/resync' . '?destination=' . urlencode($profile_url) ;
    $save_api = 1;
  }
  if (isset($member['merges']['L10I_SCORE'])) {
    $score = $visitor->getVar('api_visitor', 'analytics', 's');
    if (!$score) {
      $score = $visitor->getVar('data', 'analytics', 's');
    }
    $api_merges['L10I_SCORE'] = $score ? $score : 0;
    $save_api = 1;
  }
  if (empty($member['geo']['latitude'])) {
    $loc = $visitor->getVar('data', 'location', '');
    if (!empty($loc['latitude'])) {
      $api_merges['mc_location'] = array();
      $api_merges['mc_location']['latitude'] = $loc['latitude'];
      $api_merges['mc_location']['longitude'] = $loc['longitude'];
    }
    $save_api = 1;
  }

  // admin set merge fields
  $prop_options = array(
    'source' => 'mailchimp',
  );
  $mvars = $member['merges'];
  //$prop_info = intel_intel_visitor_property_info();
  //$options = intel_visitor_property_select_options();
  $system_vars = intel_mailchimp_system_mergevars();
  foreach ($mvars AS $tag => $mvar) {
    // skip system variables
    if (in_array($tag, $system_vars)) {
      continue;
    }
    $key = 'intel_mailchimp_property_map_' . $list_id . '_' . $mvar['tag'];
    $map = variable_get($key, '');
    if (!$map) {
      continue;
    }
    if (trim($mvar)) { 
      $a = explode(':', $map);
      $sn = $a[0];
      $prop = array(
        $a[1] = $mvar,
      );
      intel_visitor_property_set($visitor, 'data.foursquare', $prop, $prop_options);
    } 
    else {
      
    }     
    
  }
  
  // hook to enable other modules to process data
  $vars = array(
  );  

  foreach (module_implements('intel_mailchimp_sync_visitordata') AS $module) {
    $function = $module . '_intel_mailchimp_sync_visitordata';
    $statuses[$module] = $function($visitor, $member, $vars);
    $save_local = 1;
    $save_api = 1;
  } 
  if ($save_local) {
    $visitor->merge();
  }
  if (count($api_merges)) {
    $api_merges['EMAIL'] = $email;
    $list = (object)array(
      'mc_list_id' => $list_id,
      'label' => '', //TODO, label is needed for mailchimp_update_user messages
    );
    mailchimp_update_user($list, $email, $api_merges);
    //mailchimp_update_user($list, array('leid' => $member['leid']), $member['merges']);
  }
if (!empty($_GET['debug'])) {
  dpm($visitor->getProperties());//
  dpm($member);//
  dpm($api_merges);//
}
  return TRUE;
}

function intel_mailchimp_mailchimp_process_webhook($type, $data) {
  watchdog('intel_mailchimp', 'Webhook type @type has been processed. @data',
    array(
      '@type' => $type,
      '@data' => print_r($data, 1),
    ), 
    WATCHDOG_INFO
  );
}

function intel_mailchimp_system_mergevars() {
  return array(
    'L10I_VURL',
    'L10I_VSYNC',
    'L10I_VID',
    'L10I_VTK',
    'L10I_SCORE',
    'EMAIL',
    'FNAME',
    'LNAME',  
  );
}