<?php
/**
 * @file
 * Install, update and uninstall functions for the consult module.
 */

/**
 * Implements hook_schema().
 */
function consult_schema() {
  $schema['consultation'] = array(
    'description' => 'Stores information about all defined consultation types.',
    'fields' => array(
      'name' => array(
        'description' => 'The machine-readable name of this consultation.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable administrative name of this consultation.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
        'description' => "The user who created this consultation.",
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'settings' => array(
        'description' => 'A serialized array of additional data related to this consult_form.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'merge' => FALSE,
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );

  $schema['consultation_question'] = array(
    'description' => 'Stores information about all consultation questions.',
    'fields' => array(
      'name' => array(
        'description' => 'The machine-readable name of this question.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'interview_name' => array(
        'description' => 'The name of the consultation this question belongs to.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The title.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'question' => array(
        'description' => 'The body text.',
        'type' => 'text',
        'not null' => FALSE,
        'serialize' => TRUE,
        'size' => 'big',
      ),
      'group_name' => array(
        'description' => 'Group name for organisation.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      'answers' => array(
        'description' => 'The available answers.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'merge' => FALSE,
      ),
      'dependencies' => array(
        'description' => 'The dependent questions.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'merge' => FALSE,
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
        'description' => "The user who created this question.",
      ),
      'status' => array(
        'description' => 'The exportable status of the entity.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
    'foreign keys' => array(
      'uid' => array('users' => 'uid'),
      'interview_name' => array('consultation' => 'name'),
    ),
  );

  $schema['consultation_result'] = array(
    'description' => 'The result of a consultation.',
    'fields' => array(
      'name' => array(
        'description' => 'The machine-readable name of this question.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The title.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'message' => array(
        'description' => 'The body text.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'merge' => FALSE,
      ),
      'group_name' => array(
        'description' => 'Group name for organisation.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      'interview_name' => array(
        'description' => 'The name of the consultation this question belongs to.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
        'description' => "The {users}.uid of the associated user.",
      ),
      'dependencies' => array(
        'description' => 'The dependent questions.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'merge' => FALSE,
      ),
      'inherited_dependencies' => array(
        'description' => 'The dependent questions.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'merge' => FALSE,
      ),
      'status' => array(
        'description' => 'The exportable status of the entity.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
    'foreign keys' => array(
      'uid' => array('users' => 'uid'),
      'interview_name' => array('consultation' => 'name'),
    ),
  );

  return $schema;
}
