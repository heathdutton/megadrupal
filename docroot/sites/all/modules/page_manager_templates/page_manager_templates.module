<?php

/**
 * Implements hook_ctools_plugin_directory().
 *
 * Tells CTools (and thus Panels) where to look for plugin code.
 */
function page_manager_templates_ctools_plugin_directory($module, $plugin) {
  if (($module == 'ctools' || $module == 'page_manager') && ($plugin == 'content_types' || $plugin == 'task_handlers')) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function page_manager_templates_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "page_manager") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_theme().
 */
function page_manager_templates_theme() {

  $cache = cache_get('page_manager_templates_registry');
  if (!empty($cache->data)) {
    return $cache->data;
  }
  else {
    return array();
  }
}

/**
 * Load the theme registry values needed.
 */
function page_manager_templates_build_registry() {

  ctools_include('export');

  $registry = array();
  $confs = array();

  // Get all template panes and pages.
  $loaded_tasks = array();
  $tasks = page_manager_get_tasks();

  // Provide menu items for each task.
  foreach ($tasks as $task) {
    $loaded_tasks[] = page_manager_get_page_cache($task['name']);
    foreach (page_manager_get_task_subtasks($task) as  $subtask) {
      $name = $subtask['name'];
      if (isset($task['page type']) && $task['page type'] == 'custom') {
        $name = 'page-' . $subtask['name'];
      }
      $loaded_tasks[] = page_manager_get_page_cache($name);
    }
  }

  foreach ($loaded_tasks as $task) {
    if (is_object($task) && count($task->handlers)) {
      foreach ($task->handlers as $display) {
        if ($display->handler == 'panel_context') {
          $display = &page_manager_templates_panel_context_get_display($display);
          if (isset($display->content)) {
            foreach ($display->content as $pane) {
              if ($pane->type == 'template') {
                $confs[] = $pane->configuration;
              }
            }
          }
        }
        else if ($display->handler == 'template') {
          $confs[] = $display->conf;
        }
      }
    }
  }
  foreach ($confs as $conf) {
    if ($conf['hook_theme']) {
      $filepath = drupal_get_path($conf['module_or_theme'], $conf['base']) . '/' . $conf['template_path'];
      $registry[$conf['theme_function']] = array(
        'variables' => array(),
        'template' => $conf['template'],
        'path' => $filepath,
      );
    }
  }
  return $registry;
}

function &page_manager_templates_panel_context_get_display(&$handler) {
  if (isset($handler->conf['display'])) {
    return $handler->conf['display'];
  }

  if (isset($handler->conf['did'])) {
    $handler->conf['display'] = panels_load_display($handler->conf['did']);
    return $handler->conf['display'];
  }
}

/**
 * Update the cache representing the theme registry elements needed by this module.
 * This cache exists because it is dangerous to run page_manager_templates_build_registry
 * during cache clears due to how it interacts with ctools exportables.
 */
function _page_manager_templates_check_registry() {
  $registry = &drupal_static(__FUNCTION__);
  if (!isset($registry)) {
    $cache = cache_get('page_manager_templates_registry');
    if (!empty($cache->data)) {
      $registry = $cache->data;
    }
    else {
      $registry = page_manager_templates_build_registry();
      cache_set('page_manager_templates_registry', $registry, 'cache', CACHE_TEMPORARY);
      drupal_theme_rebuild();
    }
  }
}
