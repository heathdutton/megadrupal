<?php

/**
 * @file
 * Easy Social Pinterest module.
 */

/**
 * Implements hook_easy_social_widget().
 */
function easy_social_pinterest_easy_social_widget() {
  return array(
    'pinterest' => array(
      'name' => 'Pinterest',
      // Callback function that returns widget markup.
      'markup' => '_easy_social_pinterest_share_button_markup',
      'scripts' => array(
        array(
        	// Javascript include.
          'path' => '//assets.pinterest.com/js/pinit.js',
          'type' => 'external',
        ),
      ),
    ),
  );
}

/**
 * Callback function that returns widget markup.
 */
function _easy_social_pinterest_share_button_markup($url, $type, $title = NULL, $lang = 'und') {

  // Encode URL.
  $url_encoded = urlencode($url);

  // Size.
  $size = variable_get_value('easy_social_pinterest_size');
  // If size is not 20, don't show this attribute;
  $height = $size != '20' ? ' data-pin-height="' . $size . '" ' : '';

  // Counter.
  $counter = ' data-pin-config="' . variable_get_value('easy_social_pinterest_counter') . '" ';

  // Color.
  $color_value = variable_get_value('easy_social_pinterest_color');
  // If color is grey don't show this attribute.
  $color = $color_value != 'grey' ? ' data-pin-color="' . variable_get_value('easy_social_pinterest_color') . '" ' : '';

  $output = '<a href="//www.pinterest.com/pin/create/button/?url=' .
  	$url_encoded . '&description=' . $title .
  	'" data-pin-do="buttonBookmark" ' . $color . $counter . $height . '>
  	<img src="//assets.pinterest.com/images/pidgets/pinit_fg_en_rect_' . $color_value . '_' . $size . '.png" /></a>';

  return $output;
}

/**
 * Implements hook_menu().
 */
function easy_social_pinterest_menu() {
  $items = array();
  $items['admin/config/content/easy_social/widget-extra/pinterest'] = array(
    'title' => 'Pinterest',
    'description' => 'Extra settings for Pinterest',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_easy_social_admin_config_extra_pinterest'),
    'access arguments' => array('administer easy social'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_variable_info().
 */
function easy_social_pinterest_variable_info() {
  $variables = array();

  $variables['easy_social_pinterest_size'] = array(
    'title' => t("Pinterest button size"),
    'default' => '20',
    'group' => 'easy_social',
    'token' => FALSE,
  );

  $variables['easy_social_pinterest_counter'] = array(
    'title' => t("Pinterest button counter"),
    'default' => 'beside',
    'group' => 'easy_social',
    'token' => FALSE,
  );

  $variables['easy_social_pinterest_color'] = array(
    'title' => t("Pinterest button color"),
    'default' => 'gray',
    'group' => 'easy_social',
    'token' => FALSE,
  );

  return $variables;
}

/**
 * Settings form for Easy Social Pinterest plugin.
 *
 * @return object
 *   Form object.
 */
function _easy_social_admin_config_extra_pinterest() {
  $form = array();

  // Size options array.
  $size_options = array(
    '20' => t('Small'),
    '28' => t('Large'),
  );

  // Counter options array.
  $counter_options = array(
    'none' => t('Not shown'),
    'above' => t('Above'),
    'beside' => t('Beside'),
  );

  // Color options array.
  $color_options = array(
    'grey' => t('Grey'),
    'red' => t('Red'),
    'white' => t('White'),
  );

  // Size option.
  $form['easy_social_pinterest_size'] = array(
    '#type' => 'select',
    '#title' => t('Size'),
    '#options' => $size_options,
    '#default_value' => variable_get_value('easy_social_pinterest_size'),
  );

  // Counter option.
  $form['easy_social_pinterest_counter'] = array(
    '#type' => 'select',
    '#title' => t('Counter'),
    '#options' => $counter_options,
    '#default_value' => variable_get_value('easy_social_pinterest_counter'),
  );

  // Color option.
  $form['easy_social_pinterest_color'] = array(
    '#type' => 'select',
    '#title' => t('Color'),
    '#options' => $color_options,
    '#default_value' => variable_get_value('easy_social_pinterest_color'),
  );

  return system_settings_form($form);
}
