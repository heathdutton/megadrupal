<?php

/**
 * Implements hook_uc_line_item().
 */
function uc_shipping_insurance_uc_line_item() {
  $items['shipping_insurance'] = array(
    'title' => t('Shipping insurance'),
    'weight' => 2,
    'default' => FALSE,
    'stored' => TRUE,
    'add_list' => TRUE,
    'calculated' => TRUE,
    'display_only' => FALSE,
  );
  return $items;
}

/**
 * Implements hook_uc_checkout_pane()
 */
function uc_shipping_insurance_uc_checkout_pane() {
  $panes['shipping_insurance'] = array(
    'title' => variable_get('uc_shipping_insurance_checkout_pane_title', t('Shipping insurance')),
    'desc' => 'Provide customers with the option to purchase shipping insurance.',
    'callback' => 'uc_checkout_pane_shipping_insurance',
    'process' => TRUE,
    'enabled' => TRUE,
  );
  return $panes;
}

/**
 * Shipping insurance checkout pane callback.
 */
function uc_checkout_pane_shipping_insurance($op, &$order, $form = NULL, &$form_state = NULL) {
  module_load_include('inc', 'uc_shipping_insurance', 'uc_shipping_insurance.checkout');
  $callback = 'uc_shipping_insurance_checkout_pane_' . $op;
  if (function_exists($callback)) {
    return $callback($order, $form, $form_state);
  }
}

/**
 * Gets all shipping insurance line items for an order.
 */
function _uc_shipping_insurance_line_items($order) {
  $line_items = array();
  foreach ($order->line_items as $line_item) {
    if ($line_item['type'] == 'shipping_insurance') {
      $line_items[] = $line_item;
    }
  }
  return $line_items;
}

/**
 * Determines whether an order has a shipping insurance line item.
 */
function _uc_shipping_insurance_order_has_insurance($order) {
  return (boolean) _uc_shipping_insurance_line_items($order);
}

/**
 * Calculates the shipping insurance cost for an order.
 */
function _uc_shipping_insurance_calculate($order) {
  $mode = variable_get('uc_shipping_insurance_checkout_pane_calculation_mode', 'percentage');
  $amount = floatval(variable_get('uc_shipping_insurance_checkout_pane_amount', 1.5));
  if ($mode == 'percentage') {
    $subtotal = uc_order_get_total($order, TRUE);
    return $subtotal * $amount / 100;
  }
  return $amount;
}
