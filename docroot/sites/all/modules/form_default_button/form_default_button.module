<?php
/**
 * @file
 * Form default button module.
 *
 * Overrides default behavior when a form is submitted by pressing Enter
 * from within a textfield.
 */

/**
 * Implements hook_menu().
 */
function form_default_button_menu() {
  $items['admin/config/user-interface/form-default-button'] = array(
    'title' => 'Form default button',
    'description' => 'Control the default form submission behavior of the browser.',
    'file' => 'form_default_button.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('form_default_button_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/user-interface/form-default-button/%/delete'] = array(
    'title' => 'Delete Form default button',
    'file' => 'form_default_button.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('form_default_button_delete', 4),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function form_default_button_theme() {
  return array(
    'form_default_button_forms_table' => array(
      'render element' => 'form',
      'file' => 'form_default_button.admin.inc',
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function form_default_button_form_alter(&$form, &$form_state, $form_id) {
  // Get form settings for this specific form ID.
  $result = db_query('SELECT * FROM {form_default_buttons} WHERE form_id = :form_id', array(':form_id' => $form_id));
  if ($form_settings = $result->fetchObject()) {
    // Found form settings for this form ID.
    if ($form_settings->default_action !== 'browser_default') {
      // Default browser behavior is overriden.
      module_load_include('inc', 'form_default_button', 'form_default_button_element');
      $form['form_default_button'] = _form_default_button_element($form['#id'], $form_settings);
    }
  }
}
