<?php
/**
 * @file
 * NoMoreCaptchas by Oxford BioChronometrics provides spam control.
 */

/**
 * Implements hook_help().
 */
function no_more_captchas_help($path, $arg) {
  switch ($path) {
    case 'admin/help#no_more_captchas':
      $output = '<p>' . t('NoMoreCaptchas by Oxford BioChronometrics uses biochronometric behavior to determine if the thing knocking on your door is a human or a bot. We send all bots away and let humans in.') . '</p>';
      $output .= '<p>' . t('The method is called biochronometrics and it maps behavior based on a series of complex algorithms. 5 million live tests show that bots canâ€™t mimic human behavior when biochronometrics are applied.') . '</p>';
      $output .= '<p>' . t('Go Captcha-free with NoMoreCaptchas and speed up your site today!') . '</p>';
      $output .= '<p><h3>' . t('Frequently Asked Questions') . '</h3></p>';
      $output .= '<p><h4>' . t('What makes NoMoreCaptchas different?') . '</h4></p>';
      $output .= '<p>' . t("We don't use traditional Captcha or problem-solving methods to make a user prove he or she is human. Most people find that annoying- and user studies show that 74% of the time, people will abandon a site that makes them solve a Captcha code.") . '</p>';
      $output .= '<p>' . t("We also don't use blacklists and whitelists to cross check users. Those databases are as fallible as the humans who maintain them and can be wrong. And if you're the one who has been accidentally listed as spam, Spamhaus and the other 5 leading spam databases have a long, opaque procedure for getting yourself off of them. It's a frustrating experience. And even if you're fine, cross-checking database lists creates a lag for the user.") . '</p>';
      $output .= '<p>' . t("With the biochronometric technology in NoMoreCaptchas, users don't need to do anything but be themselves. Our analytics know faster than they do whether they're human or bots.") . '</p>';
      $output .= '<p><h4>' . t('What exactly is biochronometric protection?') . '</h4></p>';
      $output .= '<p>' . t("Bio means life and chrono means time. We devised unique signatures based to determine whether someone is acting alive over time based on hundreds of individual user inputs that people automatically generate just simply by being alive. The time we need to figure out if you're alive or a bot is just fractions of a second. And since bots can't fake being alive, we can be sure we block them and let only real humans enjoy your site.") . '</p>';
      $output .= '<p><h4>' . t('Does anyone else do what you do?') . '</h4></p>';
      $output .= '<p>' . t("No. Many are trying to figure out what we've already done. This is the way authentication technology is moving, but no one has found and packaged the solution like we have. We spent years of research at Oxford University to come up with what we have. We may get some true competitors some day, but right now, we're speeding down the highway while everyone else in the market is basically still using a horse and buggy.") . '</p>';
      $output .= '<p><h4>' . t("Who shouldn't use NoMoreCaptchas?") . '</h4></p>';
      $output .= '<p>' . t("Spammers, scammers, bots, trolls and other Internet bottom-dwellers really should avoid NoMoreCaptchas. We're out to make their lives difficult, so they really don't like us.") . '</p>';
      $output .= '<p><h4>' . t('Why do you charge for NoMoreCaptchas?') . '</h4></p>';
      $output .= '<p>' . t('Every second, millions of automated bots and spam generators are figuring out new ways to break into your site to leave spam comments in order to either generate links back to spam sites to promote their search engine rankings or lead unsuspecting users to getting infected by a computer virus.') . '</p>';
      $output .= '<p>' . t("Protecting every site that uses NoMoreCaptchas requires a lot of computing power and our data center insists on getting paid every month. In one test on a well-advertised site, we stopped over 1000 spam bots every single day. Besides, we need to stay on top of all the tricks spammers use to try and trick their way behind a sign-in or registration form and that's a full time job.") . '</p>';
      $output .= '<p>' . t('But we make it easy to pay with different levels for different size sites and you can pay month-to-month or once a year and save.') . '</p>';
      $output .= '<p><h4>' . t('Is there a free version?') . '</h4></p>';
      $output .= '<p>' . t('Yes. You can install and use NoMoreCaptchas for free for personal use and enjoy protection for up to 2,500 bot attacks per month. That is plenty for a small, personal site or blog.') . '</p>';
      $output .= '<p>' . t('If your site is not for personal use, NoMoreCaptchas is free for the first 30 days. After that, or even if you run a personal site and need a greater level of protection and want more functionality in your dashboard, <a href="@nmc-price-link" target="_blank">we have a variety of subscription services available.</a>', array('@nmc-price-link' => 'http://nomorecaptchas.com/pricing/')) . '</p>';
      $output .= '<p><h4>' . t("If I'm using the free version, do I still have to register?") . '</h4></p>';
      $output .= '<p>' . t("Yes. In order to ensure your site is protected, we must open access to our cloud-based service to your site. In order to do that, we need to know you're connecting to us. <a href=\"@nmc-reg-link\">Please take a moment to register.</a> It really takes just a minute or two!", array('@nmc-reg-link' => 'http://nomorecaptchas.com/register/')) . '</p>';
      $output .= '<p> <h4>' . t('Do I need a credit card to register for NoMoreCaptchas?') . '</h4></p>';
      $output .= '<p>' . t('No. Registration is free and does not require a credit card. NoMoreCaptchas is free to use for a personal site for up to 2,500 verifications each month.') . '</p>';
      $output .= '<p>' . t('If you want or need greater protection or are not running a personal site, then we have <a href ="@nmc-price-link" target="_blank">paid subscription options</a> that are made to fit every size. For those, you do need a credit card.', array('@nmc-price-link' => 'http://nomorecaptchas.com/pricing/')) . '</p>';
      $output .= '<p><h4>' . t('Which pages does NoMoreCaptchas protect?') . '</h4></p>';
      $output .= '<p>' . t("NoMoreCaptchas prevents spambots from registering or logging in to your site, it also protects your contact forms and public comment sections. So the login page is protected and, if you use BuddyPress' registration page, that is also protected - and now so are your contact forms.") . '</p>';
      $output .= '<p>' . t('In other words, it protects the pages where you would normally place a Captcha code.') . '</p>';
      $output .= '<p><h4>' . t("I'm still getting spam, what's happening?") . '</h4></p>';
      $output .= '<p>' . t('If NoMoreCaptchas is properly installed (see above) and you are able to see your dashboard, there are a few possible issues:');
      $output .= '<ul><li>' . t("You may not have registered. If you believe you did (or if you're a subscriber, if know you are up to date on your payment but are not listed as active), please contact us at <a href=\"@nmc-mailto-link\" rel=\"nofollow\">support@nomorecaptchas.com</a>", array('@nmc-mailto-link' => 'mailto:support@nomorecaptchas.com')) . '</li>';
      $output .= '<li>' . t("If that's not the case, then your License Key was not properly entered into the control panel. Please be sure to copy and paste it directly from the email we sent you. If you no longer have your License Key, please contact us at <a href=\"@nmc-mailto-link\" rel=\"nofollow\">support@nomorecaptchas.com</a> so we can send you a new one.", array('@nmc-mailto-link' => 'mailto:support@nomorecaptchas.com')) . '</li>';
      $output .= '<li>' . t('There may have been some spam registrations pending in your queue. Please make sure you have eliminated anyone who got in before you installed NoMoreCaptchas.') . '</li>';
      $output .= '<li>' . t("The only other reason you might be getting spam is if an actual human decided to register on your site and spam you personally. Believe it or not, some people have that kind of time on their hands. That's not the way most spammers operate, so it's probably someone you recently beat in a game of WoW or didn't like something you said on Reddit.") . '</li></ul></p>';
      $output .= '<p><h4>' . t('Is NoMoreCaptchas a 508-compliant solution?') . '</h4></p>';
      $output .= '<p>' . t('Yes. Section 508 of the Americans with Disabilities Act (ADA) requires websites to be built in such a way that the blind, visually impaired and others with disabilities are able to use the site without issue. Most Captcha solutions are very difficult for those with visual impairments - and the audio solutions are a clumsy workaround at best.') . '</p>';
      $output .= '<p>' . t("Since NoMoreCaptchas doesn't require users to do anything but be human, the path is made equally accessible to everyone.") . '</p>';
      $output .= '<p>' . t('If you have additional questions, please visit following link <a href="@nmc-faq-link" target="_blank">http://nomorecaptchas.com/download-support/faq/</a>', array('@nmc-faq-link' => 'http://nomorecaptchas.com/download-support/faq/')) . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function no_more_captchas_menu() {
  $items = array();

  // Defining URL for License Key Setting page.
  $items['admin/config/people/xb_nomorecaptchas'] = array(
    'title' => 'NoMoreCaptchas Settings Page',
    'description' => 'Configure the NoMoreCaptchas settings by adding your License Key.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('no_more_captchas_admin_register_key'),
    'access arguments' => array('administer NoMoreCaptchas settings'),
    'file' => 'includes/no_more_captchas.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function no_more_captchas_permission() {
  return array(
    'administer NoMoreCaptchas settings' => array(
      'title' => t('Administer NoMoreCaptchas settings'),
    ),
    // TODO adding permission setting to allow role who can skip NoMoreCaptchas.
  );
}

/**
 * Implements hook_form_alter().
 */
function no_more_captchas_form_alter(&$form, &$form_state, $form_id) {
  $user = $GLOBALS['user'];
  if ($user->uid == 0) {
    // To set the width if user login block is being shown or not.
    if ($form_id == 'user_login_block') {
	  // Adding header JavaScript required for NMC.
      drupal_add_js('http://oxford-biochron.com/services/public/analytics/min.1.86.analytics.js', 'external');

      $no_more_captchas_authentication_key = variable_get('no_more_captchas_authcode', '');
      $src = "http://oxford-biochron.com/services/public/iframes/nmc-iframe-centre.php";
      $no_more_captchas_iframe = '<div class="xb-nmc-frm">
                        <iframe
                          src="' . $src .
                          '?wih=55&ww=54&wtfs=16&nih=200&niw=249&wtms=3&key=' . $no_more_captchas_authentication_key . '"
                          width="100%"
                          height="100%"
                          frameBorder="0"
                          onload="javascript:resizeIframe(this);"
                          >
                        </iframe>
                      </div>';
      $form['no_more_captchas_iframe'] = array(
        '#type' => 'item',
        '#markup' => $no_more_captchas_iframe,
      );
    }
    else if($form_id == 'user_login' || $form_id == 'user_register_form'){
	  // Adding header JavaScript required for NMC.
      drupal_add_js('http://oxford-biochron.com/services/public/analytics/min.1.86.analytics.js', 'external');

      $no_more_captchas_authentication_key = variable_get('no_more_captchas_authcode', '');
      $src = "http://oxford-biochron.com/services/public/iframes/nmc-iframe-centre.php";
      $no_more_captchas_iframe = '<div class="xb-nmc-frm">
                        <iframe
                          src="' . $src .
                          '?wih=55&ww=54&wtfs=16&nih=200&niw=249&wtms=3&key=' . $no_more_captchas_authentication_key . '"
                          width="270"
                          height="180"
                          frameBorder="0"
                          onload="javascript:resizeIframe(this);"
                          >
                        </iframe>
                      </div>';
      $form['no_more_captchas_iframe'] = array(
        '#type' => 'item',
        '#markup' => $no_more_captchas_iframe,
      );
    }
    if ($form_id == 'user_login_block' || $form_id == 'user_login') {
      $form['#validate'][] = 'no_more_captchas_login_register_validate';
    }
    else if ($form_id == 'user_register_form') {
      $form['#validate'][] = 'no_more_captchas_login_register_validate';
    }
  }
}

/**
 * Implements hook_custom_validate().
 */
function no_more_captchas_login_register_validate($form, &$form_state) {
  $no_more_captchas_state = 0;
  if (isset($_POST['oxbioxid'])) {
    $xb_oxbioxid = check_plain($_POST['oxbioxid']);
    $no_more_captchas_state = _no_more_captchas_maybe_human($xb_oxbioxid, $form_state['values']['name']);
    if ($no_more_captchas_state != 1) {
      form_set_error('name', t('Invalid username or email.'));
    }
  }
  else {
    _no_more_captchas_definitely_bot($form_state['values']['name']);
    form_set_error('name', t('Invalid username or email.'));
  }
}

/**
 * This function provides communications between the webserver & OxBio Servers.
 */
function _no_more_captchas_maybe_human($xb_oxbioxid, $user_name, $user = '') {
  $xb_result = _no_more_captchas_wait4response($xb_oxbioxid, $user_name, $user);
  return $xb_result;
}

/**
 * This function provides communications between the webserver & OxBio Servers.
 */
function _no_more_captchas_wait4response($xb_oxbioxid, $user_name, $user) {
  _no_more_captchas_fireNforget($xb_oxbioxid, $user_name, $user);

  $no_more_captchas_authkey = variable_get('no_more_captchas_authcode', '');
  $no_more_captchas_url = "http://oxford-biochron.com/services/public/NmC4WordPress/NmC_Proxy.php";
  $xb_post_string = 'oxbioxid=' . $xb_oxbioxid . '&authkey=' . $no_more_captchas_authkey;
  // $xb_post_string .= '&user1=' . $user_name . '&user2=' . $user;
  $xb_post_string .= '&user1=' . $user_name;
  $xb_ch = curl_init();
  curl_setopt($xb_ch, CURLOPT_POST, 2);
  curl_setopt($xb_ch, CURLOPT_POSTFIELDS, $xb_post_string);
  curl_setopt($xb_ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($xb_ch, CURLOPT_URL, $no_more_captchas_url);
  $xb_result = curl_exec($xb_ch);
  curl_close($xb_ch);
  if (strpos($xb_result, "NMC-USER-OK") !== FALSE) {
    return 1;
  }
  else {
    return 0;
  }
}

/**
 * This function provides communications between the webserver & OxBio Servers.
 */
function _no_more_captchas_definitely_bot($user_name, $user = '') {
  _no_more_captchas_fireNforget(2, $user_name, $user);
}

/**
 * This function provides communications between the webserver & OxBio Servers.
 */
function _no_more_captchas_fireNforget($xb_oxbioxid, $user_name, $user) {
  $no_more_captchas_authkey = variable_get('no_more_captchas_authcode', '');
  $no_more_captchas_url = "http://oxford-biochron.com/services/public/NmC4WordPress/NmC_Log.php";
  $xb_post_string = "authkey=" . $no_more_captchas_authkey . "&chk=502";

  $xb_request_method = 'not-set';
  $xb_remote_addr = 'not-set';
  $xb_http_client_ip = 'not-set';
  $xb_http_x_forwarded_for = 'not-set';
  $xb_http_x_forwarded = 'not-set';
  $xb_http_x_cluster_client_ip = 'not-set';
  $xb_http_referer = 'not-set';
  $xb_request_uri = 'not-set';
  $xb_http_user_agent = 'not-set';

  if (isset($_SERVER['REQUEST_METHOD'])) {
    $xb_request_method = $_SERVER['REQUEST_METHOD'];
  }
  if (ip_address()) {
    $xb_remote_addr = ip_address();
  }
  if (isset($_SERVER['HTTP_CLIENT_IP'])) {
    $xb_http_client_ip = $_SERVER['HTTP_CLIENT_IP'];
  }
  if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {
    $xb_http_x_forwarded_for = $_SERVER['HTTP_X_FORWARDED_FOR'];
  }
  if (isset($_SERVER['HTTP_X_FORWARDED'])) {
    $xb_http_x_forwarded = $_SERVER['HTTP_X_FORWARDED'];
  }
  if (isset($_SERVER['HTTP_X_CLUSTER_CLIENT_IP'])) {
    $xb_http_x_cluster_client_ip = $_SERVER['HTTP_X_CLUSTER_CLIENT_IP'];
  }
  if (isset($_SERVER['HTTP_REFERER'])) {
    $xb_http_referer = $_SERVER['HTTP_REFERER'];
  }
  if (request_uri()) {
    $xb_request_uri = request_uri();
  }
  if (isset($_SERVER['HTTP_USER_AGENT'])) {
    $xb_http_user_agent = $_SERVER['HTTP_USER_AGENT'];
  }

  $xb_field_block  = '-spare-';
  $xb_field_block .= '|-|' . $xb_request_method;
  $xb_field_block .= '|-|' . $xb_remote_addr;
  $xb_field_block .= '|-|' . $xb_http_client_ip;
  $xb_field_block .= '|-|' . $xb_http_x_forwarded_for;
  $xb_field_block .= '|-|' . $xb_http_x_forwarded;
  $xb_field_block .= '|-|' . $xb_http_x_cluster_client_ip;
  $xb_field_block .= '|-|' . $user_name;
  $xb_field_block .= '|-|' . file_get_contents("php://input");
  $xb_field_block .= '|-|' . $xb_oxbioxid;
  $xb_field_block .= '|-|' . $xb_http_referer;
  $xb_field_block .= '|-|' . $xb_request_uri;
  $xb_field_block .= '|-|' . $xb_http_user_agent;

  $xb_post_string .= "&data=" . base64_encode($xb_field_block);

  $xb_ch = curl_init();
  curl_setopt($xb_ch, CURLOPT_POST, 3);
  curl_setopt($xb_ch, CURLOPT_POSTFIELDS, $xb_post_string);
  curl_setopt($xb_ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($xb_ch, CURLOPT_URL, $no_more_captchas_url);
  curl_exec($xb_ch);
  curl_close($xb_ch);
}
