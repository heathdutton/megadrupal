<?php

/**
 * @file
 * alias_preview.module
 * @TODO remove unused files and functions.
 * @TODO move all possible funcs to include files.
 */

/**
 * Implements hook_menu().
 */
function alias_preview_menu() {
  $items = array();

  // Provides an admin settings page.
  $items['admin/config/content/alias-preview'] = array(
    'title' => t('Alias Preview settings'),
    'description' => t('Configure settings for Alias Preview'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('alias_preview_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/alias_preview.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for node_form.
 */
function alias_preview_form_node_form_alter(&$form, &$form_state) {
  $state = 'existing';
  if (!isset($form['#node']->nid) || isset($form['#node']->is_new)) {
    $state = 'new';
  }
  // Only continues if this node type is set to show any alias.
  $enabled_types = variable_get("alias_preview_enabled_types_{$state}", array());
  $enabled_types = array_filter($enabled_types);
  if (!in_array($form['#node']->type, $enabled_types)) {
    return;
  }

  // Adds JS and CSS to display ajax node alias (pathauto) preview.
  $module_path = drupal_get_path('module', 'alias_preview');
  $form['#attached']['css'][] = "$module_path/theme/alias_preview.form.css";
  $form['title']['#weight'] = -6;
  $form['alias_preview_wrapper'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="alias-preview-wrapper">',
    '#suffix' => '</div>',
    '#weight' => -5,
  );

  // Adds AJAX behavior to title to live-update the alias preview.
  $default = ($state == 'new') ? 1 : 0;
  $enable_ajax = variable_get("alias_preview_enable_ajax_{$state}", $default);
  if ($enable_ajax) {
    $form['title']['#ajax'] = array(
      'callback' => 'alias_preview_ajax_callback',
      'wrapper' => 'alias-preview-wrapper',
      'method' => 'replace',
    );
  }

  // Prepares any existing alias as a preview below the title.
  if (isset($form['path']['alias']['#default_value'])) {
    $existing_alias = $form['path']['alias']['#default_value'];
    if (!empty($existing_alias)) {
      global $base_url;
      // Only checks to display jump link if user may access URL path settings.
      $show_jump_link = FALSE;
      if (user_access('create url aliases') || user_access('administer url aliases')) {
        $name = "alias_preview_show_jump_link_{$state}";
        $show_jump_link = variable_get($name, 1);
      }
      $variables = array(
        'base_url' => $base_url,
        'alias' => $existing_alias,
        'show_jump_link' => $show_jump_link,
      );
      $markup = theme('alias_preview_node_title', $variables);
      $form['alias_preview_wrapper']['#markup'] = $markup;
      $form['alias_preview_original_url'] = array('#type' => 'hidden', '#value' => $existing_alias);
      $form['#attributes']['class'][] = 'alias-preview-existing';
    }
  }

  $form['#attached']['js'][] = "$module_path/theme/alias_preview.js";
}

/**
 * Drupal AJAX callback; returns an updated alias preview form element.
 *
 * @see https://api.drupal.org/api/drupal/includes%21ajax.inc/group/ajax/7
 */
function alias_preview_ajax_callback($form, $form_state) {
  if (!isset($form['#node']->type) || !isset($form_state['values']['title'])) {
    return '';
  }

  $type = $form['#node']->type;
  $title = $form_state['values']['title'];
  $original = NULL;
  if (isset($form['alias_preview_original_url']['#value'])) {
    $original = $form['alias_preview_original_url']['#value'];
  }

  module_load_include('inc', 'alias_preview', 'includes/alias_preview');
  $alias = alias_preview_make_alias($type, $title, $original);
  global $base_url;
  $state = 'existing';
  if (!isset($form['#node']->nid) || isset($form['#node']->is_new)) {
    $state = 'new';
  }
  // Only checks to display jump link if user may access URL path settings.
  $show_jump_link = FALSE;
  if (user_access('create url aliases') || user_access('administer url aliases')) {
    $name = "alias_preview_show_jump_link_{$state}";
    $show_jump_link = variable_get($name, 1);
  }
  $variables = array(
    'base_url' => $base_url,
    'alias' => $alias,
    'show_jump_link' => $show_jump_link,
  );
  $markup = theme('alias_preview_node_title', $variables);
  $form['alias_preview_wrapper']['#markup'] = $markup;

  return $form['alias_preview_wrapper'];
}

/**
 * Implements hook_module_implements_alter().
 */
function alias_preview_module_implements_alter(&$implementations, $hook) {
  // Only modifies the implementations array for this module.
  $module = 'alias_preview';
  if (!isset($implementations[$module])) {
    return;
  }

  switch ($hook) {
    case 'form_alter':
      // Moves our implementation to the end of the array, to run last.
      $group = $implementations[$module];
      unset($implementations[$module]);
      $implementations[$module] = $group;
      break;
  }
}

/**
 * Implements hook_theme().
 */
function alias_preview_theme() {
  $path = drupal_get_path('module', 'alias_preview');
  return array(
    'alias_preview_node_title' => array(
      'variables' => array('url' => NULL, 'alias' => NULL, 'show_jump_link' => NULL),
      'template' => 'alias-preview-node-title',
      'path' => "$path/theme",
    ),
  );
}
