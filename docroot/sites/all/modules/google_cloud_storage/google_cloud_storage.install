<?php

/**
 * @file
 * Install, update and uninstall functions for the Google Storage module.
 */

/**
 * Implements hook_uninstall().
 */
function google_cloud_storage_uninstall() {
  variable_del('google_cloud_storage_client_id');
  variable_del('google_cloud_storage_service_account_name');
  variable_del('google_cloud_storage_key_file_path');
  variable_del('google_cloud_storage_debug');
}

/**
 * Implements hook_schema().
 */
function google_cloud_storage_schema() {
  $schema['google_cloud_storage'] = array(
    'description' => 'Stores information for files uploaded to Google Cloud Storage.',
    'fields' => array(
      'uri' => array(
        'description' => 'The URI of the file.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'binary' => TRUE,
      ),
      'filemime' => array(
        'description' => "The file's MIME type.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'filesize' => array(
        'description' => 'The size of the file in bytes.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('uri'),
  );
  
  return $schema;
}

/**
 * Install file info caching table.
 */
function google_cloud_storage_update_7100(&$sandbox) {
  $schema['google_cloud_storage'] = array(
    'description' => 'Stores information for files uploaded to Google Cloud Storage.',
    'fields' => array(
      'uri' => array(
        'description' => 'The URI of the file.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'binary' => TRUE,
      ),
      'filemime' => array(
        'description' => "The file's MIME type.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'filesize' => array(
        'description' => 'The size of the file in bytes.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('uri'),
  );
  db_create_table('google_cloud_storage', $schema['google_cloud_storage']);
}

/**
 * Update existing files to use the new scheme that supports multiple buckets.
 */
function google_cloud_storage_update_7101(&$sandbox) {
  //query for files using this scheme
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'file')
    ->entityCondition('uri', 'gcf://', 'STARTS_WITH');
  $result = $query->execute();

  $fids = array_keys($result['file']);

  // load all files
  $files = file_load_multiple($fids);

  // update each uri and save
  foreach ($files as $file) {
    $file->uri = str_replace('gcs://', 'gcs.' . variable_get('google_cloud_storage_bucket') . '://', $file->uri);
    file_save($file);
  }
  
  // TODO: is there a way to update the default Upload destination?
  // TODO: is there a way to update Upload destinations for fields?
  
  // delete the bucket system variable
  variable_del('google_cloud_storage_bucket');
}