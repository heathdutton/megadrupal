<?php

/**
 * @file
 * Adds Entity Translation support for the Search API Database Search.
 */

/**
 * Implements hook_query_TAG_alter() for search_api_db_search.
 *
 * Alters fields and groupby to use item_ids without language prefix for both
 * select query and count query created in SearchApiDbService::search(), as well
 * as facet query created in SearchApiDbService::getFacets().
 *
 * @see SearchApiDbService::search()
 * @see SearchApiDbService::createDbQuery()
 * @see SearchApiDbService::getFacets()
 */
function search_api_et_db_query_search_api_db_search_alter(QueryAlterableInterface $db_query) {
  if ($search_api_query = $db_query->getMetaData('search_api_query')) {
    $index = $search_api_query->getIndex();
    $controller = search_api_get_datasource_controller($index->item_type);
    if ($controller instanceof SearchApiEtDatasourceController) {
      $fields = &$db_query->getFields();
      $groupby = &$db_query->getGroupBy();
      $replace_pairs = array(
        'item_id' => "SUBSTRING_INDEX(t.item_id, '_', -1)",
        't.item_id' => "SUBSTRING_INDEX(t.item_id, '_', -1)",
      );
      foreach ($replace_pairs as $from => $to) {
        if (!empty($fields[$from])) {
          unset($fields[$from]);
          $db_query->addExpression($to, $from);
        }
        if (!empty($groupby[$from])) {
          $groupby[$from] = $to;
        }
      }
    }
  }
}

/**
 * Implements hook_query_TAG_alter() for search_api_db_facet.
 *
 * Alters SearchApiDbService::getFacets() queries to correctly use temporary
 * table with item_ids without language prefix.
 *
 * @see SearchApiDbService::getFacets()
 */
function search_api_et_db_query_search_api_db_facet_alter(QueryAlterableInterface $query) {
  $facet = $query->getMetaData('search_api_db_facet');

  // Facet query is built based on temporary table, which already have updated
  // item ids without language prefix. However, when this temporary table is
  // joined with other already existing field tables (which have language
  // prefixes in their item ids), such join condition needs to be updated
  // to allow successful join.
  // For example, join like this:
  //   FROM {db_temporary_0} t
  //   INNER JOIN {search_api_db_multilingual_product_display_field_product_field} t_2 ON t.item_id = t_2.item_id
  // needs to be changed to:
  //   FROM {db_temporary_0} t
  //   INNER JOIN {search_api_db_multilingual_product_display_field_product_field} t_2 ON t.item_id = SUBSTRING_INDEX(t_2.item_id, '_', -1)
  $fields = $query->getMetaData('search_api_db_fields');
  $field = $fields[$facet['field']];
  $tables = &$query->getTables();
  foreach ($tables as $alias => $table) {
    if ($table['table'] == $field['table']) {
      $from = $alias . '.item_id';
      $to = "SUBSTRING_INDEX(" . $alias . ".item_id, '_', -1)";
      $tables[$alias]['condition'] = str_replace($from, $to, $tables[$alias]['condition']);
    }
  }

  // COUNT expression is based on the temporary table, without language prefix
  // in item_ids, no need to update it then.

  // Also, for facets with 'Minimum facet count' set to a value higher than 1,
  // there is a new 'having' condition added to the query, but considering that
  // it is based on the temporary table as well, it doesn't need to be updated
  // either.
}
