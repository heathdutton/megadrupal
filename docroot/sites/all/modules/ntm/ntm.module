<?php

define('NTM_MAX_MENU_NUM', 10);
define('NTM_DEFAULT_MENU_NUM', 1);
define('NTM_MAX_DEPTH', 10);
define('NTM_MAX_DESCRIPTION_LENGTH', 128);
define('NTM_TAG_BR', '<br/>');
define('NTM_DEFAULT_DECOR_NAME', 'default');
define('NTM_DEFAULT_STYLE_NAME', 'down');
define('NTM_EM_DASH', '&#8212');

require_once "ntm.api.inc";

/**
 * Implements hook_menu().
 */
function ntm_menu() {
  $items['admin/config/user-interface/metro_menus'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Metro Menus',
    'description' => 'Configure Metro Menus.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ntm_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'ntm.admin.inc',
  );
  return $items;
}


/**
 * Implements hook_block_info().
 * Implements hook_block_configure().
 * Implements hook_block_save().
 * Implements hook_block_view().
 */
function ntm_block_info() {
  $blocks = array();
  for ($i = 1; $i <= variable_get('ntm_menu_num', NTM_DEFAULT_MENU_NUM); $i++) {
    $description = variable_get("ntm_menu_description_$i");
    $blocks[$i]['info'] = t('Metro Menus #@num', array('@num' => $i)).($description ? ' ('.$description.')' : '');
    $blocks[$i]['cache'] = DRUPAL_NO_CACHE;
  }
  return $blocks;
}

function ntm_block_configure($id) {
  $form['ntm_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Metro Menu Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['ntm_settings']['ntm_menu_description'] = array(
    '#type' => 'textfield',
    '#title' => t('Description for administrator'),
    '#default_value' => variable_get("ntm_menu_description_$id"),
    '#description' => t('Maximum %num characters.', array('%num' => NTM_MAX_DESCRIPTION_LENGTH)),
    '#maxlength' => NTM_MAX_DESCRIPTION_LENGTH,
    '#size' => 60,
  );
  $form['ntm_settings']['ntm_menu_source'] = array(
    '#type' => 'select', 
    '#title' => t('Root item'), 
    '#options' => array(t('Menus') => ntm_get_source_options('m'), t('Taxonomy') => ntm_get_source_options('t')),
    '#default_value' => variable_get("ntm_menu_source_$id"),
    '#description' => module_exists('i18n_taxonomy') ? t('Module %module_name is enabled and number of taxonomy terms in this list depend on current site language.', array('%module_name' => 'Taxonomy translation')) : '',
    '#required' => TRUE,
  );
  $form['ntm_settings']['ntm_menu_depth'] = array(
    '#type' => 'select',
    '#title' => t('Menu Depth'),
    '#options' => drupal_map_assoc(range(1, NTM_MAX_DEPTH)),
    '#default_value' => variable_get("ntm_menu_depth_$id", NTM_MAX_DEPTH),
    '#required' => TRUE,
  );
  $form['ntm_settings']['ntm_menu_decor_and_style'] = array(
    '#type' => 'select',
    '#title' => t('Menu Decor'),
    '#options' => ntm_get_decor_list(),
    '#default_value' => variable_get("ntm_menu_decor_and_style_$id", NTM_DEFAULT_DECOR_NAME.':'.NTM_DEFAULT_STYLE_NAME),
    '#required' => TRUE,
  );
  return $form;
}

function ntm_get_decor_list() {
  $items = array();
  $decors = ntm_get_decor_info();
  $decors = array('default' => $decors['default']) +
            array('default-span-1' => $decors['default-span-1']) +
            array('default-span-2' => $decors['default-span-2']) +
            array('default-span-3' => $decors['default-span-3']) + $decors; /* default as first item */
  foreach ($decors as $name => $info) {
    foreach ($info['styles'] as $style) {
      $items[t($info['title'])]["$name:$style"] = "$name - $style";
    }
  }
  return $items;
}

function ntm_block_save($id, $edit) {
  variable_set("ntm_menu_source_$id", $edit['ntm_menu_source']);
  variable_set("ntm_menu_description_$id", $edit['ntm_menu_description']);
  variable_set("ntm_menu_depth_$id", $edit['ntm_menu_depth']);
  variable_set("ntm_menu_decor_and_style_$id", $edit['ntm_menu_decor_and_style']);
}

function ntm_block_view($id) {
  if (ntm_get_schema_version() == 0) {
    drupal_set_message(t('Need update of database schema for module @name!', array('@name' => 'Metro Menus')), 'warning');
    $_SESSION['messages']['warning'] = array_unique($_SESSION['messages']['warning']);
    return;
  }
  $output = '';
  if ($id <= variable_get('ntm_menu_num', NTM_DEFAULT_MENU_NUM)) {
    $source = variable_get("ntm_menu_source_$id");
    if ($source) {
      $depth = variable_get("ntm_menu_depth_$id", NTM_MAX_DEPTH);
      $decor_and_style = variable_get("ntm_menu_decor_and_style_$id", NTM_DEFAULT_DECOR_NAME.':'.NTM_DEFAULT_STYLE_NAME);
      list($source_type, $source_name, $iid) = explode(':', $source);
      list($decor, $style) = explode(':', $decor_and_style);
      $decor_info = ntm_get_decor_info($decor);
      $wrappers = array();
      if (isset($decor_info['level_1_wrappers'])) $wrappers['level_1'] = $decor_info['level_1_wrappers'];
      if (isset($decor_info['level_2_wrappers'])) $wrappers['level_2'] = $decor_info['level_2_wrappers'];
      $output = ntm_get_block_output($id, $source_type, $source_name, $iid, $depth, $decor, $style, $wrappers);
    }
    if ($output) {
      if (isset($decor_info['stylesheets']['all'])) {
        foreach ($decor_info['stylesheets']['all'] as $name) {
          drupal_add_css($decor_info['path']."/$name");
        }
      }
      if (isset($decor_info['stylesheets']['ie'])) {
        foreach ($decor_info['stylesheets']['ie'] as $condition => $versions) {
          foreach ($versions as $version => $files) {
            foreach ($files as $name) {
              $condition = $condition == 'eq' ? '' : $condition;
              drupal_add_css($decor_info['path']."/$name", array('group' => CSS_THEME, 'browsers' => array('IE' => "$condition IE $version", '!IE' => FALSE), 'preprocess' => FALSE));
            }
          }
        }
      }
    }
  }
  $block['subject'] = NULL;
  $block['content'] = $output;
  return $block;
}


/**
 * Implements hook_theme().
 */
function ntm_theme() {
  return array(
    'ntm_tree' => array(
      'variables' => array('variables' => NULL),
    ),
  );
}


/**
 * ntm_get_block_output().
 * ntm_get_source_options().
 * ntm_get_decor_info().
 * ntm_get_schema_version().
 */
function ntm_get_block_output($id, $source_type, $source_name, $iid, $depth, $decor, $style, $wrappers) {
  $output = '';
  $tree = call_user_func('_ntm_'.$source_type.'_get_flat_tree', $source_name, $iid, $depth);
  if ($tree) {
    $output.= ntm_tree_render(_ntm_flat_to_tree($tree), $decor, $style, $wrappers);
  }
  return $output;
}

function ntm_get_source_options($source_type = 'm') {
  $options = array();
  $names_info = call_user_func('_ntm_'.$source_type.'_get_names');
  foreach ($names_info as $source_id => $source_title) {
    $options["$source_type:$source_id:0"] = "<$source_title>";
    $tree = call_user_func('_ntm_'.$source_type.'_get_flat_tree', $source_id);
    foreach ($tree as $info) {
      $options["$source_type:$source_id:$info->iid"] = str_repeat('--', $info->depth).' '.$info->title;
    }
  }
  return $options;
}

function ntm_get_decor_info($decor_name = '') {
  $cache = &drupal_static(__FUNCTION__);
  $items = array();
  if (isset($cache)) {
    $items = $cache;
  } else {
    $decor_path = drupal_get_path('module', 'ntm')."/decor";
    $files = drupal_system_listing('/^[a-zA-Z0-9\-\_]*\.info$/', $decor_path, 'name', 1);
    foreach ($files as $name => $file) {
      $info = drupal_parse_info_file($file->uri);
      $info['path'] = substr($file->uri, 0, -strlen(strrchr($file->uri, '/')));
      $items[$name] = $info;
    }
    $cache = $items;
  }
  if ($decor_name) {
    return $items[$decor_name];
  } else {
    return $items;
  }
}

function ntm_get_schema_version() {
  $info = db_select('system', 's')->fields('s', array('schema_version'))->condition('name', 'ntm')->condition('type', 'module')->execute()->fetchObject();
  return (int)$info->schema_version;
}


