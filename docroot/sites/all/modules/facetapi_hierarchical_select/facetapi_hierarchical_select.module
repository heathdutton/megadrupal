<?php

/**
 * Implements hook_facetapi_widgets().
 */
function facetapi_hierarchical_select_facetapi_widgets() {
  return array(
    'facetapi_hierarchical_select' => array(
      'handler' => array(
        'label' => t('Hierarchical select'),
        'class' => 'FacetapiWidgetHierarchicalSelect',
        'query types' => array('term'),
//        'requirements' => array(
//          'facetapi_requirement_realm_property' => array('element type' => 'links')
//        ),
      ),
    ),
  );
}

/**
 * Implements hook_forms().
 */
function facetapi_hierarchical_select_forms($form_id, $args) {
  $forms = array();

  if (strpos($form_id, 'facetapi_hierarchical_select_form_') === 0) {
    $forms[$form_id]['callback'] = 'facetapi_hierarchical_select_form';
  }

  return $forms;
}


/**
 * The main form for this widget
 *
 * @param $form
 * @param $form_state
 * @param $widget
 * @param $element
 *
 * @return mixed
 */
function facetapi_hierarchical_select_form($form, &$form_state, $widget, $element, $global_settings) {
  $facet_name = $widget->getKey();

  $form_state['facetapi_hierarchical_select'] = array(
    'widget' => $widget,
    'global_settings' => $global_settings,
    'facet_name' => $facet_name,
    'facet_class' => drupal_html_class("facetapi-hierarchical_select-{$facet_name}"),
  );

  $settings = $widget->getSettings();
  $hide_facet_count = $settings->settings['facetapi_hide_facet_count'];

  $select_options = _facetapi_hierarchical_select_build_select_options($element, $hide_facet_count);
  foreach ($select_options as $level => $item) {
    $options = $item;
    if (isset($options['#default_value'])) {
      $default_value = $options['#default_value'];
      unset($options['#default_value']);
    }
    $options[0] = t('--Choose--');
    ksort($options);
    $element_key = 'facetapi_hierarchical_select_' . $level;

    $form[$element_key] = array(
      '#type' => 'select',
      '#options' => $options,
      '#default_value' => isset($default_value) ? $default_value : 0,
      '#attributes' => array(
        'class' => array('facetapi-hierarchical-select')
      ),
      '#attached' => array(
        'js' => array(
          drupal_get_path('module', 'facetapi_hierarchical_select') . '/facetapi_hierarchical_select.js',
        ),
        'css' => array(
          drupal_get_path('module', 'facetapi_hierarchical_select') . '/facetapi_hierarchical_select.css',
        ),
      ),
    );
  }

  $form['facetapi_hierarchical_select_selected_select'] = array(
    '#type' => 'hidden',
  );

  // keep this variable for users who want to alter this form.
  $form_state['facetapi_hierarchical_select_level'] = $level;

  $facet_input_name = str_replace('_', '-', $facet_name);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#attributes' => array(
      'class' => array(
        'facetapi-hierarchical-select-submit',
        "facetapi-hierarchical-select-{$facet_input_name}-submit",
      )
    ),
  );

  return $form;
}

/**
 * facetapi_hierarchical_select_form submit handler
 *
 * @param $form
 * @param $form_state
 */
function facetapi_hierarchical_select_form_submit($form, &$form_state) {
//  $widget = $form_state['facetapi_hierarchical_select']['widget'];
//  $settings = $widget->getSettings();
  $global_settings = $form_state['facetapi_hierarchical_select']['global_settings'];
  $query = drupal_get_query_parameters();
  $original_f = isset($query['f']) ? $query['f'] : array();
  $facet_name = $form_state['facetapi_hierarchical_select']['facet_name'];

  $new_f = array();
  foreach ($original_f as $key => $item) {
    if (strpos($item, $facet_name) !== 0) {
      $new_f[] = $item;
    }
  }
  $selected_select = $form_state['values']['facetapi_hierarchical_select_selected_select'];
  $selected_select_info = explode('_', $selected_select);
  $index = count($selected_select_info) - 1;
  $selected_level = $selected_select_info[$index];

  for ($i = 0; $i <= $selected_level; $i++) {
    $key = 'facetapi_hierarchical_select_' . $i;
    if ($form_state['values'][$key] != '0') {
      if($global_settings['limit_active_items'] && $i == $selected_level) {
        $new_f = array();
        $new_f[] = $facet_name . ':' . $form_state['values'][$key];
      } else {
        $new_f[] = $facet_name . ':' . $form_state['values'][$key];
      }
    }
  }

  $query['f'] = $new_f;

  if (empty($query['f'])) {
    unset($query['f']);
  }

  $form_state['redirect'] = array(current_path(), array('query' => $query));
}


/**
 * Build select options
 *
 * @param $element
 * @param $hide_facet_count
 * @param array $select_options
 * @param int $level
 *
 * @return array
 */
function _facetapi_hierarchical_select_build_select_options($element, $hide_facet_count, &$select_options = array(), $level = 0) {
  foreach ($element as $key => $value) {
    if ($value['#active']) {
      if (!$hide_facet_count) {
        $select_options[$level][$key] = $value['#markup'] . ' (' . $value['#count'] . ')';
      }
      else {
        $select_options[$level][$key] = $value['#markup'];
      }

      $select_options[$level]['#default_value'] = $key;

      _facetapi_hierarchical_select_build_select_options($value['#item_children'], $hide_facet_count, $select_options, $level + 1);
    }
    else {
      if (!$hide_facet_count) {
        $select_options[$level][$key] = $value['#markup'] . ' ( ' . $value['#count'] . ' ) ';
      }
      else {
        $select_options[$level][$key] = $value['#markup'];
      }
    }
  }

  return $select_options;
}