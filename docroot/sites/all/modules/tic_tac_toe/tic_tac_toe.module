<?php

/**
 * @file
 * module to implements an interactive Tic Tac Toe game.
 *
 * It can present a Tic-Tac-Toe board that is updated using AJAX requests upon
 * each user move.
 * The module implements the alpha beta search algorithm (Minimax search
 * optimized by performing alpha beta pruning) for determining the next move,
 * which are common algorithms for zero-sum two player games
 * (e.g. Tic Tac Toe and Chess).
 */

/**
 * Implements hook_menu().
 */
function tic_tac_toe_menu() {
  $items = array();
  $items['tic-tac-toe/game-action'] = array(
    'title' => 'Tic Tac Toe Game Action',
    'description' => 'See your project ',
    'page callback' => 'tic_tac_toe_game_action',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['admin/settings/tic-tac-toe'] = array(
    'title' => 'Tic Tac Toe',
    'description' => 'Configure your Tic Tac Toe settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tic_tac_toe_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 1,
  );
  $items['admin/settings/tic-tac-toe/settings'] = array(
    'title' => 'Setting',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function tic_tac_toe_block_info() {
  $blocks['tic_tac_toe']['info'] = t('Tic Tac Toe');
  $blocks['tic_tac_toe']['cache'] = DRUPAL_NO_CACHE;
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function tic_tac_toe_block_view($delta = '') {
  if ($delta == 'tic_tac_toe') {
    $args = array();
    $block['subject'] = t('Tic Tac Toe');
    // Get admin settings.
    $settings = tic_tac_toe_settings();
    $my_settings = array(
      'tic_tac_toe_board_size_block' => $settings['tic_tac_toe_board_size_block'],
    );
    drupal_add_js(array('tic_tac_toe' => $my_settings), 'setting');
    $tic_tac_toe_raphael = $settings['tic_tac_toe_raphael'];
    if (!file_exists($tic_tac_toe_raphael)) {
      drupal_set_message(t('@raphael not found. You must install <a href="http://drupal.org/files/raphael-min.js_.txt" target="_blank">raphael-min.js</a> as per the installation instructions in the README file for this module to work', array('@raphael' => $tic_tac_toe_raphael)), 'error');
    }
    $option = array(
      'type' => 'file',
      'scope' => 'footer',
      'group' => JS_LIBRARY,
      'cache' => FALSE,
    );
    drupal_add_js($settings['tic_tac_toe_raphael'], $option);
    drupal_add_js(drupal_get_path('module', 'tic_tac_toe') . '/js/tic-tac-toe-start.js', $option);
    drupal_add_css(drupal_get_path('module', 'tic_tac_toe') . '/css/tic-tac-toe-style.css', $option);

    $block['content'] = theme('tic_tac_toe_block_view', array('args' => $args));
    return $block;
  }
}

/**
 * Implements hook_theme().
 */
function tic_tac_toe_theme($existing, $type, $theme, $path) {
  return array(
    'tic_tac_toe_block_view' => array(
      'template' => 'tic-tac-toe-block-view',
      'variables' => array('args' => NULL),
    ),
  );
}

/**
 * Function to implement game action.
 */
function tic_tac_toe_game_action() {
  require_once 'includes/tic_tac_toe_board.php';
  require_once 'includes/tic_tac_toe_TicTacToe.php';

  $board = explode(',', $_POST['board']);
  foreach ($board as $key => $b) {
    $board[$key] = intval($b);
  }

  $ttt = new TicTacToe();
  $response = $ttt->play($board);
  echo drupal_json_output($response);
}

/**
 * Tic Tac Toe admin settings.
 */
function tic_tac_toe_admin_settings() {
  $form = array();
  $settings = tic_tac_toe_settings();
  $tic_tac_toe_raphael = $settings['tic_tac_toe_raphael'];
  if (!file_exists($tic_tac_toe_raphael)) {
    drupal_set_message(t('@raphael not found. You must install <a href="http://drupal.org/files/raphael-min.js_.txt" target="_blank">raphael-min.js</a> as per the installation instructions in the README file for this module to work', array('@raphael' => $tic_tac_toe_raphael)), 'error');
  }

  $form['tic_tac_toe_board_size_block'] = array(
    '#type' => 'textfield',
    '#title' => t('Size of Boardblock for block'),
    '#description' => t('Here you can define size of tic tac toe board for block.'),
    '#default_value' => variable_get('tic_tac_toe_board_size_block', 195),
  );
  $form['tic_tac_toe_board_size_page'] = array(
    '#type' => 'textfield',
    '#title' => t('Size of Board for Page'),
    '#description' => t('Here you can define size of tic tac toe board for page.'),
    '#default_value' => variable_get('tic_tac_toe_board_size_page', 500),
  );
  $form['tic_tac_toe_move'] = array(
    '#type' => 'select',
    '#title' => t('First move by'),
    '#description' => t('Here you can set the first move by wheather by human or computer.'),
    '#options' => array('HUMAN' => 'Human', 'COM' => 'Computer'),
    '#default_value' => variable_get('tic_tac_toe_move', 'HUMAN'),
  );

  return system_settings_form($form);
}

/**
 * Function to return the admin settings for the module.
 * @return array
 *   Array containing, settings, e.g. size_block, size_page, move.
 */
function tic_tac_toe_settings() {

  $default = tic_tac_toe_default_settings();
  $settings['tic_tac_toe_board_size_block'] = variable_get('tic_tac_toe_board_size_block', $default['tic_tac_toe_board_size_block']);

  $lib = 'tic_tac_toe';
  $viewer = libraries_get_path($lib) . '/raphael-min.js';
  $settings['tic_tac_toe_raphael'] = $viewer;
  return $settings;
}

/**
 * Function to return the default settings for the module.
 *
 * @return array
 *   Array containing, settings, e.g. size_block, size_page, move.
 */
function tic_tac_toe_default_settings() {

  $default = array(
    'tic_tac_toe_board_size_block' => 195,
    'tic_tac_toe_board_size_page' => 500,
    'tic_tac_toe_move' => 'HUMAN',
  );

  return $default;
}
