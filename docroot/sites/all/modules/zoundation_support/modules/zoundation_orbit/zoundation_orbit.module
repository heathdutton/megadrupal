<?php
/**
 * @file
 * module file for zoundation_orbit
 */

/**
 * Implements hook_theme().
 */
function zoundation_orbit_theme() {
  return array(
    'zoundation_orbit' => array(
      'variables' => array(
        'options' => NULL,
        'entity'  => NULL,
        'slides'  => array(),
      ),
      'template'  => 'zoundation_orbit',
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function zoundation_orbit_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function zoundation_orbit_field_formatter_info() {
  $formatters = array(
    'zoundation_orbit' => array(
      'label' => t('Zoundation Orbit'),
      'description' => t('Foundation orbit slideshow (no captions).'),
      'field types' => zoundation_orbit_field_types(),
      'settings' => array(
        'orbit' => array(
          'timer_speed' => 10000,
          'animation_speed' => 500,
          'bullets' => TRUE,
          'stack_on_small' => TRUE,
          'container_class' => 'orbit-container',
          'stack_on_small_class' => 'orbit-stack-on-small',
          'next_class' => 'orbit-next',
          'prev_class' => 'orbit-prev',
          'timer_container_class' => 'orbit-timer',
          'timer_paused_class' => 'paused',
          'timer_progress_class' => 'orbit-progress',
          'slides_container_class' => 'orbit-slides-container',
          'bullets_container_class' => 'orbit-bullets',
          'bullets_active_class' => 'active',
          'slide_number_class' => 'orbit-slide-number',
          'caption_class' => 'orbit-caption',
          'active_slide_class' => 'active',
          'orbit_transition_class' => 'orbit-transitioning'
        ),
        // Other field settings.
        'image_style' => '',
        'image_link' => '',
        'trim_length' => 0,
      ),
    ),
  );
  return $formatters;
}

/**
 * Helper function to map foundation add-ons to drupal field widgets.
 * @return array
 *   An array of strings representing field types that the given [description]
 */
function zoundation_orbit_field_types() {
  return array(
    'image',
    'text',
    'text_long',
    'text_with_summary',
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function zoundation_orbit_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {

  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element['orbit'] = array(
    '#type' => 'fieldset',
    '#title' => t('Orbit settings'),
  );

  $element['orbit']['timer_speed'] = array(
    '#type' => 'textfield',
    '#title' => t('Timer speed'),
    '#default_value' => $settings['orbit']['timer_speed'],
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['orbit']['animation_speed'] = array(
    '#type' => 'textfield',
    '#title' => t('Animation speed'),
    '#default_value' => $settings['orbit']['animation_speed'],
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $element['orbit']['bullets'] = array(
    '#type' => 'checkbox',
    '#title' => t('Bullets'),
    '#default_value' => $settings['orbit']['bullets'],
  );

  $element['orbit']['stack_on_small'] = array(
    '#type' => 'checkbox',
    '#title' => t('Stack on small'),
    '#default_value' => $settings['orbit']['stack_on_small'],
  );

  $element['orbit']['container_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Container class'),
    '#default_value' => $settings['orbit']['container_class'],
  );

  $element['orbit']['stack_on_small_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Stack on small class'),
    '#default_value' => $settings['orbit']['stack_on_small_class'],
  );

  $element['orbit']['next_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Next class'),
    '#default_value' => $settings['orbit']['next_class'],
  );

  $element['orbit']['prev_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Previous Class'),
    '#default_value' => $settings['orbit']['prev_class'],
  );

  $element['orbit']['timer_container_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Timer container class'),
    '#default_value' => $settings['orbit']['timer_container_class'],

  );

  $element['orbit']['timer_paused_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Timer paused class'),
    '#default_value' => $settings['orbit']['timer_paused_class'],
  );

  $element['orbit']['timer_progress_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Timer progress class'),
    '#default_value' => $settings['orbit']['timer_progress_class'],
  );

  $element['orbit']['slides_container_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Slides container class'),
    '#default_value' => $settings['orbit']['slides_container_class'],
  );

  $element['orbit']['bullets_container_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Bullets container class'),
    '#default_value' => $settings['orbit']['bullets_container_class'],
  );

  $element['orbit']['bullets_active_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Bullets active class'),
    '#default_value' => $settings['orbit']['bullets_active_class'],
  );

  $element['orbit']['slide_number_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Slide number class'),
    '#default_value' => $settings['orbit']['slide_number_class'],
  );

  $element['orbit']['caption_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Caption class'),
    '#default_value' => $settings['orbit']['caption_class'],
  );

  $element['orbit']['active_slide_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Active slide class'),
    '#default_value' => $settings['orbit']['active_slide_class'],
  );

  $element['orbit']['orbit_transition_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Orbit transition class'),
    '#default_value' => $settings['orbit']['orbit_transition_class'],
  );

  $fname = $field['module'] . '_field_formatter_settings_form';

  if ($field['module'] == 'text') {
    $element['trim_length'] = array(
      '#title' => t('Trim length'),
      '#type' => 'textfield',
      '#size' => 10,
      '#default_value' => $settings['trim_length'],
      '#element_validate' => array('element_validate_integer'),
      '#descriptoin' => t('Input 0 for untrimmed'),
    );
  }
  elseif (function_exists($fname)) {
    $fieldsettings = $fname($field, $instance, $view_mode, $form, $form_state);
    $element = array_merge($fieldsettings, $element);


  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function zoundation_orbit_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();
  $summary[] = t('Timer Speed: @var', array('@var' => $settings['orbit']['timer_speed']));
  $summary[] = t('Animation Speed: @var', array('@var' => $settings['orbit']['animation_speed']));
  $summary[] = t('Bullets: @var', array('@var' => $settings['orbit']['bullets']));
  $summary[] = t('Stack on small: @var', array('@var' => $settings['orbit']['stack_on_small']));
  $summary[] = t('Container class: @var', array('@var' => $settings['orbit']['container_class']));
  $summary[] = t('Stack on small class: @var', array('@var' => $settings['orbit']['stack_on_small_class']));
  $summary[] = t('Next Class: @var', array('@var' => $settings['orbit']['next_class']));
  $summary[] = t('Prev Class: @var', array('@var' => $settings['orbit']['prev_class']));
  $summary[] = t('Timer container class: @var', array('@var' => $settings['orbit']['timer_container_class']));
  $summary[] = t('Timer paused class: @var', array('@var' => $settings['orbit']['timer_paused_class']));
  $summary[] = t('Timer progress class: @var', array('@var' => $settings['orbit']['timer_progress_class']));
  $summary[] = t('Slides container class: @var', array('@var' => $settings['orbit']['slides_container_class']));
  $summary[] = t('Bullets container class: @var', array('@var' => $settings['orbit']['bullets_container_class']));
  $summary[] = t('Bullets active class: @var', array('@var' => $settings['orbit']['bullets_active_class']));
  $summary[] = t('Slide number class: @var', array('@var' => $settings['orbit']['slide_number_class']));
  $summary[] = t('Caption class: @var', array('@var' => $settings['orbit']['caption_class']));
  $summary[] = t('Active slide class: @var', array('@var' => $settings['orbit']['active_slide_class']));
  $summary[] = t('Orbit transition class: @var', array('@var' => $settings['orbit']['orbit_transition_class']));

  // Call the source field summary.
  $fname = $field['module'] . '_field_formatter_settings_summary';
  if ($field['module'] == 'text') {
    $instance['display'][$view_mode]['type'] = 'text_trimmed';
  }

  if (function_exists($fname)) {
    $append = '<br />' . $fname($field, $instance, $view_mode);
  }
  else {
    $append = '';
  }

  return implode('<br />', $summary) . '</br />' . $append;
}

/**
 * Implements hook_field_formatter_view().
 */
function zoundation_orbit_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];

  $element = array();

  if (count($items)) {

    $fname = $field['module'] . '_field_formatter_view';

    if (function_exists($fname)) {
      if ($field['module'] == 'text') {
        $display['type'] = 'text_trimmed';
      }
      // Let our source field determine rendering of the slide.
      $slides = $fname($entity_type, $entity, $field, $instance, $langcode, $items, $display);

      foreach ($slides as $index => $slide) {
        unset($slides[$index]['#item']['height']);
        unset($slides[$index]['#item']['width']);
        $slides[$index]['#prefix'] = '<li>';
        $slides[$index]['#suffix'] = '</li>';
      }
    }
    $element['#theme'] = 'zoundation_orbit';
    $element['#entity'] = $entity;
    $element['#slides'] = $slides;
    $element['#options'] = array(
      'timer_speed' => $settings['orbit']['timer_speed'],
      'animation_speed' => $settings['orbit']['animation_speed'],
      'bullets' => empty($settings['orbit']['bullets']) ? 'false' : 'true',
      'stack_on_small' => empty($settings['orbit']['stack_on_small']) ? 'false' : 'true',
      'container_class' => $settings['orbit']['container_class'],
      'stack_on_small_class' => $settings['orbit']['stack_on_small_class'],
      'next_class' => $settings['orbit']['next_class'],
      'prev_class' => $settings['orbit']['prev_class'],
      'timer_container_class' => $settings['orbit']['timer_container_class'],
      'timer_paused_class' => $settings['orbit']['timer_paused_class'],
      'timer_progress_class' => $settings['orbit']['timer_progress_class'],
      'slides_container_class' => $settings['orbit']['slides_container_class'],
      'bullets_container_class' => $settings['orbit']['bullets_container_class'],
      'bullets_active_class' => $settings['orbit']['bullets_active_class'],
      'slide_number_class' => $settings['orbit']['slide_number_class'],
      'caption_class' => $settings['orbit']['caption_class'],
      'active_slide_class' => $settings['orbit']['active_slide_class'],
      'orbit_transition_class' => $settings['orbit']['orbit_transition_class'],
    );
  }

  return $element;
}

/**
 * Implements template_preprocess().
 */
function template_preprocess_zoundation_orbit(&$variables) {
  $variables['classes_array'][] = 'zoundation-orbit-' . $variables['id'];

  $options = zoundation_support_stringify($variables['options']);
  $variables['options'] = $options;
}

/**
 * Adjusts form submitted values to be the proper javascript datatypes.
 */
function zoundation_orbit_sanitize_options(&$options) {
  foreach ($options as $key => $value) {
    if ($value === 'true' || $value === 1) {
      $options[$key] = TRUE;
    }
    elseif ($value === 'false' || $value === 0) {
      $options[$key] = FALSE;
    }
    elseif (is_numeric($value)) {
      $options[$key] = (int) $value;
    }
  }
}

/**
 * Display the view as a Foundation Orbit slideshow.
 */
function template_preprocess_zoundation_orbit_slideshow(&$vars) {
  $handler  = $vars['view']->style_plugin;
  $data_options = '';
  foreach ($vars['options'] as $key => $value) {
    if (in_array($key, zoundation_orbit_valid_options())) {
      $data_options .= $key . ':' . $value . '; ';
    }
  }
  $vars['data-options'] = $data_options;

  $vars['class'] = implode(' ', $vars['classes_array']);
  $vars['list_type_prefix'] = '<ul data-orbit class="' . $vars['class'] . '" data-options="' . $vars['data-options'] . '">';
  $vars['list_type_suffix'] = '</ul>';

  template_preprocess_views_view_unformatted($vars);
}

/**
 * Return a list of valid orbit data-options.
 *
 * @return array valid orbit data-options
 */
function zoundation_orbit_valid_options() {
  return array(
    'timer_speed',
    'animation_speed',
    'bullets',
    'stack_on_small',
    'navigation_arrows',
    'slide_number',
    'container_class',
    'stack_on_small_class',
    'next_class',
    'prev_class',
    'timer_container_class',
    'timer_paused_class',
    'timer_progress_class',
    'slides_container_class',
    'bullets_container_class',
    'bullets_active_class',
    'slide_number_class',
    'caption_class',
    'active_slide_class',
    'orbit_transition_class',
  );
}
