<?php

/**
 * @file
 * Main module file.
 */

define('GEO_BLOCK_DEFAULT_GEOSERVICE', 'ipgeobase');

/**
 * Implements hook_menu().
 */
function geo_block_menu() {
  $items['admin/structure/geo_block_configure'] = array(
    'title' => 'Geo block settings',
    'description' => 'Configure Geo block settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('geo_block_module_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'geo_block.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_form_block_add_block_form_alter().
 *
 * Add geo settings only to core block's.
 */
function geo_block_form_block_add_block_form_alter(&$form, &$form_state, $form_id) {
  if ($form['module']['#value'] == "block") {
    if (empty($form_state['num_cities'])) {
      $form_state['num_cities'] = 1;
    }

    $form['visibility']['geoblock'] = array(
      '#type' => 'fieldset',
      '#title' => t('Geo Settings'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#group' => 'visibility',
      '#weight' => 25,
      '#tree' => TRUE,
    );
    $form['visibility']['geoblock']['city_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('City settings'),
      '#description' => t('In this section you can configure the display of different materials for different cities.'),
      '#attributes' => array('id' => 'cities-fieldset-wrapper'),
      '#weight' => 0,
      '#tree' => TRUE,
    );

    for ($i = 1; $i <= $form_state['num_cities']; $i++) {
      $form['visibility']['geoblock']['city_settings'][$i] = array(
        '#type' => 'fieldset',
        '#title' => t("City @city_name", array('@city_name' => $i)),
      );
      $form['visibility']['geoblock']['city_settings'][$i]['cities'] = array(
        '#type' => 'textfield',
        '#title' => t('City'),
      );
      $form['visibility']['geoblock']['city_settings'][$i]['block_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Block title'),
      );
      $form['visibility']['geoblock']['city_settings'][$i]['block_content'] = array(
        '#type' => 'text_format',
        '#title' => t('Block body'),
      );
    }

    $form['visibility']['geoblock']['city_settings']['add_name'] = array(
      '#type' => 'submit',
      '#value' => t('Add one more'),
      '#submit' => array('geo_block_form_block_admin_configure_alter_add_one'),
      '#ajax' => array(
        'callback' => 'geo_block_form_block_admin_configure_alter_callback',
        'wrapper' => 'cities-fieldset-wrapper',
      ),
    );
    if ($form_state['num_cities'] > 1) {
      $form['visibility']['geoblock']['city_settings']['remove_name'] = array(
        '#type' => 'submit',
        '#value' => t('Remove one'),
        '#submit' => array('geo_block_form_block_admin_configure_alter_remove_one'),
        '#ajax' => array(
          'callback' => 'geo_block_form_block_admin_configure_alter_callback',
          'wrapper' => 'cities-fieldset-wrapper',
        ),
      );
    }

    $form['#submit'][] = 'geo_block_form_block_admin_configure_alter_submit';
  }

  return $form;
}

/**
 * Implements hook_form_block_admin_configure_alter().
 *
 * Add geo settings only to core block's.
 */
function geo_block_form_block_admin_configure_alter(&$form, &$form_state) {
  if ($form['module']['#value'] == "block") {
    $default_data_query = db_query('SELECT * FROM {geoblock} WHERE bid = :bid', array(':bid' => $form['delta']['#value']))->fetchObject();

    if (!empty($default_data_query->data)) {
      $default_data = unserialize($default_data_query->data);
    }
    if (empty($form_state['num_cities'])) {
      $form_state['num_cities'] = 1;
      if (!empty($default_data)) {
        for ($i = 1; !empty($default_data[$i]); $i++) {
          $form_state['num_cities'] = $i;
        }
      }
    }

    $form['visibility']['geoblock'] = array(
      '#type' => 'fieldset',
      '#title' => t('Geo Settings'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#group' => 'visibility',
      '#weight' => 25,
      '#tree' => TRUE,
    );
    $form['visibility']['geoblock']['city_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('City settings'),
      '#description' => t('In this section you can configure the display of different materials for different cities.'),
      '#attributes' => array('id' => 'cities-fieldset-wrapper'),
      '#weight' => 0,
      '#tree' => TRUE,
    );

    for ($i = 1; $i <= $form_state['num_cities']; $i++) {
      $form['visibility']['geoblock']['city_settings'][$i] = array(
        '#type' => 'fieldset',
        '#title' => t("City @city_name", array('@city_name' => $i)),
      );
      $form['visibility']['geoblock']['city_settings'][$i]['cities'] = array(
        '#type' => 'textfield',
        '#title' => t('City'),
        '#default_value' => isset($default_data[$i]['cities']) ? $default_data[$i]['cities'] : '',
      );
      $form['visibility']['geoblock']['city_settings'][$i]['block_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Block title'),
        '#default_value' => isset($default_data[$i]['block_title']) ? $default_data[$i]['block_title'] : '',
      );
      $form['visibility']['geoblock']['city_settings'][$i]['block_content'] = array(
        '#type' => 'text_format',
        '#title' => t('Block body'),
        '#default_value' => isset($default_data[$i]['block_content']['value']) ? $default_data[$i]['block_content']['value'] : '',
        '#format' => isset($default_data[$i]['block_content']['format']) ? $default_data[$i]['block_content']['format'] : 'filtered_html',
      );
    }

    $form['visibility']['geoblock']['city_settings']['add_name'] = array(
      '#type' => 'submit',
      '#value' => t('Add one more'),
      '#submit' => array('geo_block_form_block_admin_configure_alter_add_one'),
      '#ajax' => array(
        'callback' => 'geo_block_form_block_admin_configure_alter_callback',
        'wrapper' => 'cities-fieldset-wrapper',
      ),
    );
    if ($form_state['num_cities'] > 1) {
      $form['visibility']['geoblock']['city_settings']['remove_name'] = array(
        '#type' => 'submit',
        '#value' => t('Remove one'),
        '#submit' => array('geo_block_form_block_admin_configure_alter_remove_one'),
        '#ajax' => array(
          'callback' => 'geo_block_form_block_admin_configure_alter_callback',
          'wrapper' => 'cities-fieldset-wrapper',
        ),
      );
    }

    $form['#submit'][] = 'geo_block_form_block_admin_configure_alter_submit';
  }

  return $form;
}

/**
 * Selects and returns the fieldset with the data in it. Used by AJAX.
 */
function geo_block_form_block_admin_configure_alter_callback($form, $form_state) {
  return $form['visibility']['geoblock']['city_settings'];
}

/**
 * Handler button "Add one more".
 */
function geo_block_form_block_admin_configure_alter_add_one($form, &$form_state) {
  $form_state['num_cities']++;
  $form_state['rebuild'] = TRUE;
}

/**
 * Handler button "Remove one".
 */
function geo_block_form_block_admin_configure_alter_remove_one($form, &$form_state) {
  $form_state['num_cities']--;
  $form_state['rebuild'] = TRUE;
}

/**
 * Handler button "Submit".
 */
function geo_block_form_block_admin_configure_alter_submit(&$form, &$form_state) {
  $check_data = db_query('SELECT * FROM {geoblock} WHERE bid = :bid', array(':bid' => $form_state['values']['delta']))->fetchObject();

  $data_to_save = $form_state['values']['geoblock']['city_settings'];

  // Unset values of buttons.
  unset($data_to_save['add_name']);
  unset($data_to_save['remove_name']);

  if (!empty($check_data)) {
    if (empty($check_data->delta)) {
      $record = array(
        'delta' => $form_state['values']['delta'],
        'data' => serialize($data_to_save),
      );
      drupal_write_record('geoblock', $record);
    }
    else {
      $record = array(
        'bid' => $check_data->bid,
        'delta' => $form_state['values']['delta'],
        'data' => serialize($data_to_save),
      );
      drupal_write_record('geoblock', $record, 'delta');
    }
  }
  else {
    $record = array(
      'delta' => $form_state['values']['delta'],
      'data' => serialize($data_to_save),
    );
    drupal_write_record('geoblock', $record);
  }
}

/**
 * Implements hook_form_block_custom_block_delete_alter().
 */
function geo_block_form_block_custom_block_delete_alter(&$form, &$form_state) {
  $form['#submit'][] = 'geo_block_custom_block_delete_submit';
}

/**
 * Confirm the deletion of the block. Deletes its data from the database.
 */
function geo_block_custom_block_delete_submit(&$form, &$form_state) {
  db_delete('geoblock')
      ->condition('delta', $form['bid']['#value'])
      ->execute();
}

/**
 * Returns information from database about geo block.
 */
function geo_block_block_get($delta) {
  return db_query("SELECT * FROM {geoblock} WHERE delta = :delta", array(':delta' => $delta))->fetchAssoc();
}

/**
 * Implements hook_block_view_alter().
 */
function geo_block_block_view_alter(&$data, $block) {
  if ($block->module == "block") {
    $geo_block = geo_block_block_generate_data($block->delta);
    if (!empty($geo_block)) {
      $block->title = $geo_block['subject'];
      $data['content'] = $geo_block['content'];
    }
    else {
      return $data;
    }
  }
}

/**
 * The function receives the user's city.
 *
 * @param string $geo_service
 *   Geo service to be used to determine the user's location.
 * @param string $ip
 *   Own IP address that will be determined by the location.
 */
function geo_block_get_user_city($geo_service = '', $ip = '127.0.0.1') {
  if (empty($geo_service)) {
    $geo_service = variable_get('geo_block_geo_service', GEO_BLOCK_DEFAULT_GEOSERVICE);
  }
  if ($ip = '127.0.0.1') {
    $ip = ip_address();
  }
  if (!isset($_COOKIE['geo_block_user_city'])) {
    switch ($geo_service) {
      case 'ipgeobase':
        $content = geo_block_get_user_city_ipgeobase($ip);
        break;

      case 'hostip':
        $content = geo_block_get_user_city_hostip($ip);
        break;
    }
    setcookie("geo_block_user_city", strtolower($content));
  }
  else {
    $content = urldecode($_COOKIE['geo_block_user_city']);
  }

  return $content;
}

/**
 * Generate subject and content for block.
 */
function geo_block_block_generate_data($delta = 1) {
  $block = geo_block_block_get($delta);
  $cities_data = unserialize($block['data']);
  $cities_in_block = count($cities_data);

  $subject = NULL;
  $content = NULL;
  $result = array();
  $user_city = strtolower(geo_block_get_user_city());
  for ($i = 1; $i <= $cities_in_block; $i++) {
    if (strtolower($cities_data[$i]['cities']) == $user_city) {
      $subject = !empty($cities_data[$i]['block_title']) ? $cities_data[$i]['block_title'] : NULL;
      $content_data = !empty($cities_data[$i]['block_content']['value']) ? $cities_data[$i]['block_content']['value'] : NULL;
      $content_format = !empty($cities_data[$i]['block_content']['format']) ? $cities_data[$i]['block_content']['format'] : NULL;
      $content = check_markup($content_data, $content_format, $langcode = '', $cache = FALSE);
    }
  }
  if ((empty($subject)) and (empty($content))) {
    $result = NULL;
  }
  else {
    $result['subject'] = $subject;
    $result['content'] = $content;
  }

  return $result;
}

/**
 * Get user location with service http://ipgeobase.ru/.
 *
 * @param string $ip
 *   IP to locate.
 */
function geo_block_get_user_city_ipgeobase($ip = '127.0.0.1') {
  $request = drupal_http_request("http://ipgeobase.ru:7020/geo?ip={$ip}");

  $location = (array) simplexml_load_string($request->data);
  $user_city = $location['ip']->city;

  return $user_city;
}

/**
 * Get user location with service http://hostip.info/.
 *
 * @param string $ip
 *   IP to locate.
 */
function geo_block_get_user_city_hostip($ip = '127.0.0.1') {
  $request = drupal_http_request("http://api.hostip.info/get_json.php?ip={$ip}");

  $location = json_decode($request->data);
  $user_city = $location->city;

  return $user_city;
}

/**
 * Implements hook_page_build().
 */
function geo_block_page_build(&$page) {
  $blocks_data = db_query('SELECT * FROM {geoblock}');

  foreach ($blocks_data as $block) {
    $blocks[] = $block;
  }
  if (!empty($blocks)) {
    $cities = array();
    for ($b = 0; $b < count($blocks); $b++) {
      $cities_data = unserialize($blocks[$b]->data);
      $cities_in_block = count($cities_data);
      for ($c = 1; $c <= $cities_in_block; $c++) {
        $curr_city = $cities_data[$c]['cities'];
        if (!in_array($curr_city, $cities)) {
          $cities[] .= $curr_city;
        }
      }
    }

    $user_city = geo_block_get_user_city();
    $text = t('Your location');

    drupal_add_js(array('geo_block_cities' => $cities), 'setting');
    drupal_add_js(array('geo_block_user_city' => $user_city), 'setting');
    drupal_add_js(array('geo_block_text' => $text), 'setting');
    drupal_add_js(array('geo_block_top_toolbar_enabled' => variable_get('geo_block_top_toolbar_enabled', 0)), 'setting');
    drupal_add_js(array('geo_block_top_toolbar_usecookie' => variable_get('geo_block_top_toolbar_use_cookie', 0)), 'setting');
    drupal_add_js(array('geo_block_placeholder_enabled' => variable_get('geo_block_placeholder_enabled', 0)), 'setting');
    drupal_add_js(drupal_get_path('module', 'geo_block') . '/geo_block_city_select.js');
    drupal_add_js('misc/jquery.cookie.js', 'file');
    drupal_add_css(drupal_get_path('module', 'geo_block') . '/css/geo_block_styles.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
  }
}
