<?php

/**
 * Implements hook_datasource_inputs()
 */
function datasources_dummy_datasource_inputs() {
  $inputs['dummy_datasource_input_1'] = array(
    'name' => t('Dummy datasource Input 1'),
    'class' => 'DatasourceEngineDummy1',
    'fields' => array(),
  );
  $inputs['dummy_datasource_input_1']['fields']['key1'] = array(
      'name' => t('The first key'),
      'type' => 'udid',
    );
  $inputs['dummy_datasource_input_1']['fields']['key2'] = array(
      'name' => t('The second key'),
      'type' => 'udid',
    );

  $inputs['dummy_datasource_input_1']['fields']['fileimage1'] = array(
      'name' => t('A raw image file 1'),
      'type' => 'file_image',
    );  
    
  for ($i=1; $i<=10; $i++) {
    if ($i<7) {
      $inputs['dummy_datasource_input_1']['fields']["field$i"] = t('Field !n', array('!n' => $i));
    }
    else {
      $inputs['dummy_datasource_input_1']['fields']["field$i"] = array(
          'name' => t('Field !n', array('!n' => $i)),
          'type' => 'list<string>',
        );
    }
  }
  return $inputs;
}

/**
 * Implements hook_menu().
 */
function datasources_dummy_menu() {
  $items['datasources_dummy/import'] = array(
    'title' => 'Datasource test import',
    'page callback' => 'datasources_test_import',
    'access arguments' => array('content access'),
  );
  return $items;
}

/**
 * Implements hook_datasource_preprocessor_callbacks().
 */
function datasources_dummy_datasource_preprocessor_callbacks() {
  return array(
    'image' => 'datasources_dummy_get_field_item_image',
    'strtoupper' => 'datasources_dummy_strtoupper',
  );
}

function datasources_dummy_strtoupper($value, $context) {
  return strtoupper($value);
}

function datasources_dummy_get_field_item_image($value, $context) {
  // dirty : always create a new file record !!!
  $path = $value;
  $source = new stdClass();
  $source->uri = $path;
  $source->uid = 1;
  $source->filemime = 'image/' . pathinfo($path, PATHINFO_EXTENSION);
  $file = file_copy($source, 'public://');
  return array(
  	'fid' => $file->fid,
    'alt' => devel_create_greeking(4),
    'title' => devel_create_greeking(4),
  );
}

function datasources_test_import() {
  ob_start();
  datasources_import('dummy_datasource_input_1', 1);
  return ob_get_clean();
}