<?php

/**
 * Implements hook_datasource_inputs()
 */
function datasources_aggregator_datasource_inputs() {
  $inputs = array();
  $result = db_query('SELECT * from {aggregator_feed} WHERE datasource <> 0');
  foreach ($result as $feed) {
    $inputs['datasource_aggregator_feed_' . $feed->fid] = array(
        'name' => $feed->title,
        'class' => 'DatasourceEngineAggregatorFeed',
        'family' => 'datasource_aggregator_feed',
        'settings' => array(
          'fid' => $feed->fid,
        ),
        'configure' => 'admin/config/services/aggregator/edit/feed/' . $feed->fid,
        'fields' => array(
            'fid' => array(
                'name' => t('Feed ID'),
                'type' => 'int',
            ),
            'iid' => array(
                'name' => t('Item ID'),
                'type' => 'int',
            ),
            'udid_iid' => array(
                'name' => t('Item ID Udid'),
                'type' => 'udid',
            ),
            'title' => array(
                'name' => t('Title'),
                'type' => 'string',
            ),
            'link' => array(
                'name' => t('Link'),
                'type' => 'string',
            ),
            'author' => array(
                'name' => t('Author'),
                'type' => 'string',
            ),
            'description' => array(
                'name' => t('Description'),
                'type' => 'string',
            ),
            'guid' => array(
                'name' => t('guid'),
                'type' => 'string',
            ),
            'udid_guid' => array(
                'name' => t('Item Guid Udid'),
                'type' => 'udid',
            ),
            'timestamp' => array(
                'name' => t('Timestamp'),
                'type' => 'date',
            ),            
        ),
    );
    
  }
  return $inputs;
}

/**
 * Implements hook_udid_datasources()
 */
function datasources_aggregator_udid_datasources() {
  $sources['datasource_aggregator_feed_guid'] = array(
      'name' => t('Aggregator Feed Item Guid'),
      'description' => t('Aggregator Feed Item Globally unique identifier.'),
      'id_label' => t('Feed Item Guid'),
  );

  $sources['datasource_aggregator_feed_iid'] = array(
      'name' => t('Aggregator Feed Drupal Item Id'),
      'description' => t('Aggregator Feed Drupal Item Id.'),
  );

  return $sources;
}

/**
 * Implements hook_form_alter().
 */
function datasources_aggregator_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'aggregator_form_feed') {
    $feed = &$form_state['build_info']['args'][0];
    // we can only alter the form for update, insert is a bit tricky...
    if (isset($feed)) {
      $form['datasources'] = array(
        '#type' => 'fieldset',
        '#title' => t('Datasources integration'),
      );
      $form['datasources']['datasource'] = array(
        '#type' => 'checkbox',
        '#title' => t('Create datasource'),
        '#default_value' => isset($feed) ? $feed->datasource : FALSE,
        '#description' => t('Define a datasource from this feed.'),
      );
      $form['datasources']['datasource_timeframe'] = array(
        '#type' => 'textfield',
        '#title' => t('Timeframe'),
        '#default_value' => isset($feed) ? $feed->datasource_timeframe : FALSE,
        '#description' => t('Timeframe in days for new items. 0 for no timeframe.'),
      );
      $form['#submit'][] = 'datasources_aggregator_form_feed_submit';
    }
  }
}

/**
 * Process aggregator_form_feed() form submissions for datasource.
 *
 */
function datasources_aggregator_form_feed_submit($form, &$form_state) {
  if ($form_state['values']['op'] != t('Delete')) {
    $edit = &$form_state['values'];
    if (!empty($edit['fid'])) {
      db_update('aggregator_feed')
      ->condition('fid', $edit['fid'])
      ->fields(array(
          'datasource' => $edit['datasource'],
          'datasource_timeframe' => $edit['datasource_timeframe'],
      ))
      ->execute();
    }
  }
}
