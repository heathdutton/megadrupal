<?php
/**
 * @file
 * This file contains core functions of field_helper module.
 */

/**
 * Implements hook_field_widget_info().
 */
function commerce_auction_field_helper_field_widget_info() {
  return array(
    'readonly_widget' => array(
      'label' => t('Read only widget'),
      'field types' => array('commerce_price'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function commerce_auction_field_helper_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  global $user;
  switch ($instance['widget']['type']) {
    case 'readonly_widget':
      $default_amount = 0;
      if (isset($items[$delta]['amount'])) {
        $currency = commerce_currency_load($items[$delta]['currency_code']);

        // Convert the price amount to a user friendly decimal value.
        $default_amount = commerce_currency_amount_to_decimal($items[$delta]['amount'], $currency['code']);

        // Run it through number_format() to add the decimal
        // places in if necessary.
        if (strpos($default_amount, '.') === FALSE || strpos($default_amount, '.') > strlen($default_amount) - $currency['decimals']) {
          $default_amount = number_format($default_amount, $currency['decimals'], '.', '');
        }

        $default_currency_code = $items[$delta]['currency_code'];
      }
      else {
        $default_amount = NULL;
        $default_currency_code = commerce_default_currency();
      }
      $default_currency = commerce_currency_load($default_currency_code);
      $element_form = array(
        '#type' => 'item',
        '#title' => check_plain($element['#title']),
        '#markup' => $default_amount,
        '#field_suffix' => $default_currency['code'],
      );
      return $element_form;
      break;
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function commerce_auction_field_helper_field_formatter_info() {
  return array(
    'entity_counter' => array(
      'label' => t('Reference count'),
      'field types' => array('entityreference'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function commerce_auction_field_helper_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'entity_counter':
      $element[0]['#markup'] = '<span class="entityreference-value-count">' . count($items) . '</span>';
      break;
  }

  return $element;
}
