<?php

/**
 * @file
 * Deploy Add-on Services module functions.
 */

/**
 * Implements hook_ctools_plugin_api().
 */
function deploy_addon_services_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "services" && $api == "services") {
    return array("version" => "3");
  }
}

/**
 * Implements hook_default_services_endpoint().
 */
function deploy_addon_services_default_services_endpoint() {
  $enabled_resources = array();
  $available_resources = services_get_resources();
  foreach ($available_resources as $type => $data) {
    if (in_array($type, array('system', 'user'))) {
      continue;
    }

    $enabled_resources[$type] = array('operations' => array());
    foreach (array_keys($data['operations']) as $operation) {
      switch ($operation) {
        case 'create':
        case 'retrieve':
        case 'update':
          $enabled_resources[$type]['operations'][$operation] = array('enabled' => TRUE);
          break;
      }
    }
  }

  $enabled_resources['user'] = array(
      'actions' => array(
        'login' => array(
          'enabled' => '1',
          ),
        'logout' => array(
          'enabled' => '1',
          ),
        'token' => array(
          'enabled' => '1',
          ),
        ),
      );

  $endpoint = new stdClass();
  $endpoint->disabled = FALSE; /* Edit this to true to make a default endpoint disabled initially */
  $endpoint->api_version = 3;
  $endpoint->name = 'deploy';
  $endpoint->server = 'rest_server';
  $endpoint->path = variable_get('deploy_addon_services_path', 'deploy');
  $endpoint->authentication = array(
    'services' => 'services',
  );
  $endpoint->server_settings = array(
    'formatters' => array(
      'json' => TRUE,
    ),
    'parsers' => array(
      'application/json' => TRUE,
    ),
  );
  $endpoint->resources = $enabled_resources;
  $endpoint->debug = 0;

  return array('deploy' => $endpoint);
}
