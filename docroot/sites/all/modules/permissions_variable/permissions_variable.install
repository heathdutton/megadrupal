<?php
/**
 * @file
 * Installation hooks for permissions_variable.module
 */

/**
 * Implements hook_requirements().
 *
 * We want to run an import before database updates are run.
 */
function permissions_variable_requirements($phase) {
  $t = get_t();

  $requirements = array(
    'permissions_variable' => array(
      'title' => $t('Permissions variable'),
      'value' => $t('Enabled or $permissions is empty'),
      'severity' => REQUIREMENT_OK,
    ),
  );

  // Import before update.php is run.
  if ($phase === 'update') {
    permissions_variable_import();
  }

  if ($phase === 'runtime') {
    $permissions = permissions_variable_permissions();
    if (!empty($permissions) && !permissions_variable_variable('permissions_variable_enabled')) {
      $requirements['permissions_variable'] = array(
        'title' => $t('Permissions variable'),
        'value' => $t('Some permissions for this site have been exported and set in code, but are not currently being enforced by permissions_variable because permissions locking has been disabled. This may be OK in a development environment but likely represents a security vulnerability in a production environment. To review your permissions_variable configuration visit !configuration', array('!configuration' => l(PERMISSIONS_VARIABLE_CONFIG_PATH, PERMISSIONS_VARIABLE_CONFIG_PATH))),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  // Return an empty array so installation profiles do not fail to install.
  return $requirements;
}
