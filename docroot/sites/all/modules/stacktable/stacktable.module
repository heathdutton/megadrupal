<?php

/**
 * @file
 * stacktable.module
 */

function stacktable_menu() {
  $items = array();

  $items['admin/config/system/stacktable'] = array(
    'title' => 'Settings for stacktable',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stacktable_admin_settings_form'),
    'file' => 'stacktable.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_libraries_info().
 */
function stacktable_libraries_info() {
  $libraries['stacktable.js'] = array(
    'name' => 'Stacktable.js',
    'vendor url' => 'http://johnpolacek.github.io/stacktable.js',
    'download url' => 'https://github.com/johnpolacek/stacktable.js/zipball/master',
    'version' => '1.0.0',
    'files' => array(
      'js' => array(
        'stacktable.js' => array(
        ),
      ),
      'css' => array(
        'stacktable.css',
      ),
    ),
  );

  $libraries['stacktable_custom'] = array(
    'name' => 'Stacktable custom',
    'version' => '1.0.0',
    'library path' => drupal_get_path('module', 'stacktable') . '/js',
    'dependencies' => array('stacktable.js'),
    'files' => array(
      'js' => array(
        'stacktable.custom.js',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_form_alter().
 */
function stacktable_form_alter(&$form, $form_state, $form_id) {
  if (variable_get('stacktable_show_form_ids', 0)) {
    drupal_set_message(t('Form id: %form_id', array('%form_id' => $form_id)));
  }
  $forms = stacktable_get_handled_forms_list();
  if ($forms) {
    foreach ($forms as $id) {
      if (substr_count($form_id, $id['form_id'])) {
        if (libraries_get_path('stacktable.js')) {
          libraries_load('stacktable_custom');
        }
        else {
          $download_url = 'https://github.com/johnpolacek/stacktable.js/zipball/master';
          $args = array(
            '!url' => l($download_url, $download_url),
          );
          $msg = t('Please download the stacktable.js library from !url.', $args);
          drupal_set_message($msg, 'warning');
        }
        if (isset($id['table'])) {
          $table = '#' . drupal_html_class($form_id) . ' ' . $id['table'];
        }
        else {
          $table = '#' . drupal_html_class($form_id);
        }
        $form['#attached']['js'][] = array(
          'data' => array(
            'key' => array(
              'table' => $table,
            ),
          ),
          'type' => 'setting',
        );
        break;
      }
    }
  }
}

/**
 * Get forms list.
 */
function stacktable_get_handled_forms_list() {
  $forms = array();
  $text = variable_get('stacktable_forms', '');
  $lines = explode("\n", $text);

  foreach ($lines as $line) {
    $parts = explode('@', trim($line));
    $form_id = isset($parts[0]) ? $parts[0] : '';
    $table = isset($parts[1]) ? $parts[1] : '';
    $form_id = trim($form_id);
    $table = trim($table);
    if ($form_id) {
      $forms[$form_id]['form_id'] = $form_id;
      if ($table) {
        $forms[$form_id]['table'] = $table;
      }
    }
  }
  drupal_alter('stacktable_forms_list', $forms);
  return $forms;
}
