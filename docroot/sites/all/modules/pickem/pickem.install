<?php

/**
 * @file
 * Includes install stuff.
*/


/**
* Implementation of hook_uninstall().
*/
function pickem_uninstall() {

  // Remove variables
  db_query('DELETE FROM {variable} WHERE name like :type', array(':type' => 'pickem_%'));

  // Clear related caches
  cache_clear_all('pickem_', 'cache', TRUE);
}


/**
* Implementation of hook_schema().
*/
function pickem_schema() {
  $schema = array();
  $schema['pickem_leagues'] = array(
    'fields' => array(
      'lid'                => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'name'               => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => t('The full league name.'), ),
      'forum_id'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'rules_node_id'      => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'scoring_type'       => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'gsid'               => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'partial_league'     => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'pick_lock'          => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'show_schedule_grid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 1),
    ),
    'primary key' => array('lid')
  );

  $schema['pickem_gamesets'] = array(
    'fields' => array(
      'gsid'    => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'gs_name' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
        'default' => '',
        'description' => t('The name of the gameset, "NCAA March Madness".')
      ),
      'sport'   => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => t('Used to include sport specific style sheet and by Sports Scores module.')
      ),
      'timezone'   => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'default' => ''),
    ),
    'primary key' => array('gsid')
  );

  $schema['pickem_weeks'] = array(
    'fields' => array(
      'wid'          => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'gsid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'wk_number'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'wk_name'      => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => t('The full week name.'), ),
      'wk_abbrev'    => array('type' => 'varchar', 'length' => 5, 'not null' => TRUE, 'default' => '', 'description' => t('The very short week abbreviation (5 chars).'), ),
      'first_gamestart' => array('type' => 'int', 'default' => 0),
      'last_gamestart'  => array('type' => 'int', 'default' => 0),
      'wk_points'    => array('type' => 'int', 'unsigned' => TRUE, 'default' => 0),
      'playoffs'     => array('type' => 'int', 'unsigned' => TRUE, 'default' => 0, 'size' => 'small')
    ),
    'primary key' => array('wid')
  );

  $schema['pickem_games'] = array(
    'fields' => array(
      'gid'       => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'wid'       => array('type' => 'int',    'unsigned' => TRUE, 'not null' => TRUE),
      'gsid'      => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'gamestart'  => array('type' => 'int', 'default' => 0),
      'h_id'      => array('type' => 'int',    'unsigned' => TRUE),
      'h_spread'  => array('type' => 'numeric', 'precision' => 10, 'scale' => 1, 'default' => 0),
      'v_id'      => array('type' => 'int',    'unsigned' => TRUE),
      'v_spread'  => array('type' => 'numeric', 'precision' => 10, 'scale' => 1, 'default' => 0),
      'h_score'   => array('type' => 'int',    'unsigned' => TRUE),
      'v_score'   => array('type' => 'int',    'unsigned' => TRUE),
      'winner_id' => array('type' => 'int',    'unsigned' => TRUE),
      'neutral_venue' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    ),
    'primary key' => array('gid')
  );


  $schema['pickem_picks'] = array(
    'fields' => array(
      'pid'           => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'lid'           => array('type' => 'int',    'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'uid'           => array('type' => 'int',    'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'gid'           => array('type' => 'int',    'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'winnerpick_id' => array('type' => 'int',    'unsigned' => TRUE),
      'pick_h_score'  => array('type' => 'int',    'unsigned' => TRUE),
      'pick_v_score'  => array('type' => 'int',    'unsigned' => TRUE),
      'confidence'    => array('type' => 'int',    'unsigned' => TRUE),
      'picktime'      => array('type' => 'int', 'default' => 0),
    ),
    'primary key' => array('pid'),
    'unique keys' => array('pickem_picks_unique_idx' => array('lid', 'uid', 'gid')),
  );


  $schema['pickem_users'] = array(
    'fields' => array(
      'lid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'uid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
    ),
    'primary key' => array('lid', 'uid')
  );


  $schema['pickem_user_settings'] = array(
    'fields' => array(
      'uid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'default_league' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'email_reminders' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
    ),
    'primary key' => array('uid')
  );


  $schema['pickem_teams'] = array(
    'fields' => array(
      'tid'        => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'gsid'       => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'tm_city'    => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => t('The home city for the team.'), ),
      'tm_abbrev'  => array('type' => 'varchar', 'length' => 5,  'not null' => TRUE, 'default' => '', 'description' => t('The very short home city abbreviation(3 chars).'), ),
      'tm_nick'    => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => t('The team nickname.  Not always a good thing.'), ),
      'tm_name'    => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => t('The full team name.'), ),
      'conference' => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => t('Team Conference.'), ),
      'division'   => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => t('Team Division.'), ),
      'assetid'    => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '',  'description' => t('ID used to locate assets(eg logos).'), )
    ),
    'primary key' => array('tid')
  );

  $schema['pickem_mail'] = array(
    'fields' => array(
      'id'            => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'process_name'  => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => ''),
      'process_point' => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => ''),
      'uid'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'lid'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'email'         => array('type' => 'varchar', 'length' => 100, 'not null' => TRUE, 'default' => ''),
      'sent'          => array('type' => 'int', 'default' => 0),
    ),
    'primary key' => array('id'),
    'unique keys' => array('pickem_mail_unique_idx' => array('process_name', 'process_point', 'uid', 'lid'))
  );

  return $schema;
}

/**
 * Convert all datetime fields to UTC.
 */
function pickem_update_7000() {

  // Save the original time zone and set the gameset time zone for time rendering.
  $orig_timezone = date_default_timezone_get();
  date_default_timezone_set(variable_get('pickem_time_zone', 'US/Eastern'));

  // pickem_gamesets
  db_add_field('pickem_gamesets', 'timezone',  array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'default' => ''));
  db_update('pickem_gamesets')
    ->fields(array(
      'timezone' => variable_get('pickem_time_zone', 'US/Eastern'),
    ))
    ->execute();

  // pickem_weeks update
  db_change_field('pickem_weeks', 'wk_firstgame', 'first_gamestart_old', array('mysql_type' => 'datetime', 'pgsql_type' => 'timestamp'));
  db_change_field('pickem_weeks', 'wk_lastgame', 'last_gamestart_old', array('mysql_type' => 'datetime', 'pgsql_type' => 'timestamp'));
  db_add_field('pickem_weeks', 'first_gamestart',  array('type' => 'int', 'default' => 0));
  db_add_field('pickem_weeks', 'last_gamestart',  array('type' => 'int', 'default' => 0));

  $query = "SELECT * from {pickem_weeks}";
  $result = db_query($query);
  foreach ($result as $record) {
    db_update('pickem_weeks')
      ->fields(array(
        'first_gamestart' => strtotime($record->first_gamestart_old) != '' ? strtotime($record->first_gamestart_old) : 0,
        'last_gamestart' => strtotime($record->last_gamestart_old) != '' ? strtotime($record->last_gamestart_old) : 0,
      ))
      ->condition('wid', $record->wid)
      ->execute();
  }
  db_drop_field('pickem_weeks', 'first_gamestart_old');
  db_drop_field('pickem_weeks', 'last_gamestart_old');


  // pickem_games update
  db_change_field('pickem_games', 'gametime', 'gamestart_old', array('mysql_type' => 'datetime', 'pgsql_type' => 'timestamp'));
  db_add_field('pickem_games', 'gamestart',  array('type' => 'int', 'default' => 0));

  $query = "SELECT * from {pickem_games}";
  $result = db_query($query);
  foreach ($result as $record) {
    db_update('pickem_games')
      ->fields(array(
        'gamestart' => strtotime($record->gamestart_old) != '' ? strtotime($record->gamestart_old) : 0,
      ))
      ->condition('gid', $record->gid)
      ->execute();
  }
  db_drop_field('pickem_games', 'gamestart_old');


  // pickem_picks update
  db_change_field('pickem_picks', 'picktime', 'picktime_old', array('mysql_type' => 'datetime', 'pgsql_type' => 'timestamp'));
  db_add_field('pickem_picks', 'picktime',  array('type' => 'int', 'default' => 0));

  $query = "SELECT * from {pickem_picks}";
  $result = db_query($query);
  foreach ($result as $record) {
    db_update('pickem_picks')
      ->fields(array(
        'picktime' => strtotime($record->picktime_old) != '' ? strtotime($record->picktime_old) : 0,
      ))
      ->condition('gid', $record->gid)
      ->condition('uid', $record->uid)
      ->condition('lid', $record->lid)
      ->execute();
  }
  db_drop_field('pickem_picks', 'picktime_old');

  // pickem_mail update
  db_change_field('pickem_mail', 'sent', 'sent_old', array('mysql_type' => 'datetime', 'pgsql_type' => 'timestamp'));
  db_add_field('pickem_mail', 'sent',  array('type' => 'int', 'default' => 0));

  $query = "SELECT * from {pickem_mail}";
  $result = db_query($query);
  foreach ($result as $record) {
    db_update('pickem_mail')
      ->fields(array(
        'sent' => strtotime($record->sent_old) != '' ? strtotime($record->sent_old) : 0,
      ))
      ->condition('id', $record->id)
      ->execute();
  }
  db_drop_field('pickem_mail', 'sent_old');

  // Restore original time zone.
  date_default_timezone_set($orig_timezone);
  return t('Converted all datetime fields to UTC.');
}

/**
 * Added show schedule grid setting.
 */
function pickem_update_7001() {
  // pickem_leagues
  db_add_field('pickem_leagues', 'show_schedule_grid',  array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 1));
  return t('Added show schedule grid setting.');
}

/**
 * Add pickem user settings table.
 */
function pickem_update_7002() {

$schema['pickem_user_settings'] = array(
    'fields' => array(
      'uid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'default_league' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'email_reminders' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
    ),
    'primary key' => array('uid')
  );

  db_create_table('pickem_user_settings', $schema['pickem_user_settings']);
  return t('Added pickem user settings table.');
}

/**
 * Added team asset field.
 */
function pickem_update_7003() {
  db_add_field('pickem_teams', 'assetid',  array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => ''));
  $query = "SELECT * from {pickem_teams}";
  $result = db_query($query);
  foreach ($result as $record) {
    $asset_id = '';
    if (!empty($record->tm_abbrev)) {
      $asset_id = strtolower($record->tm_abbrev);
    }
    else if (!empty($record->tm_name)) {
      $asset_id = strtolower($record->tm_name);
    }
    else if (!empty($record->tm_city)) {
      $asset_id = strtolower($record->tm_city);
    }
    db_update('pickem_teams')
      ->fields(array(
        'assetid' => $asset_id,
      ))
      ->condition('tid', $record->tid)
      ->execute();
  }

  return t('Added team asset field.');
}

/**
 * Rebuild menus for new Pickem navigation menu.
 */
function pickem_update_7004() {
  menu_rebuild();
  return t('Rebuilt menus for new Pickem navigation menu.');
}

/**
 * Remove logo_small field from pickem_teams table.
 */
function pickem_update_7005() {
  db_drop_field('pickem_teams', 'logo_small');
  return t('Removed logo_small field from pickem_teams table.');
}
