<?php

/**
 * @file
 * Google Calendar Event Creation with Hangout Link.
 * Based on Google Apis and
 * google-api-php-client (sites/all/libraries)
 * Google Api console setup: https://code.google.com/apis/console/
 * Log in as discussions@babson.edu.
 * get_google_tokens.php is not being used but will help if token is broken and
 * need a new token and refresh token created.
 * Created by: Rob Barnett, Babson College 2014
 */

/**
 * Implements hook_help().
 */
function droogle_hangout_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#droogle_hangout":
      $output = '<p>' . t("The module allows Google Hangouts to be created from within your Drupal site.") . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_permission().
 */
function droogle_hangout_permission() {
  return array(
    'administer droogle hangout' => array(
      'title' => t('Administer Droogle Hangout'),
      'description' => t('Administer Droogle Hangout'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function droogle_hangout_menu() {
  $items = array();

  $items['droogle_hangout_create_hangout'] = array(
    'page callback' => 'droogle_hangout_simple_button_ajax',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'droogle_hangout.inc',
  );

  // Create the Droogle Hangout admin category.
  $items['admin/config/droogle_hangout'] = array(
    'title' => 'Droogle Hangout Administration',
    'description' => 'Administration pages for Droogle Hangout.',
    'position' => 'right',
    'weight' => -5,
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'access arguments' => array('administer droogle hangout'),
  );

  $items['admin/config/droogle_hangout/droogle_hangout'] = array(
    'title' => 'Droogle Hangout Settings',
    'description' => 'Configure Google Console Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('droogle_hangout_settings_form'),
    'access arguments' => array('administer droogle hangout'),
    'file' => 'droogle_hangout.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function droogle_hangout_block_info() {
  $blocks = array();

  $blocks['droogle_hangout_invites'] = array(
    'info' => 'Hangout Invitations Popup',
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function droogle_hangout_block_view($delta) {
  $blocks = array();

  switch ($delta) {
    case 'droogle_hangout_invites':
      module_load_include('inc', 'droogle_hangout', 'droogle_hangout');
      $hangout_invite_popup = drupal_get_form('droogle_hangout_invite_popup');
      $blocks['subject'] = '';
      $blocks['content'] = $hangout_invite_popup;

      break;
  }
  return $blocks;
}

/**
 * Implements hook_theme().
 *
 * Information on hook theme http://groups.drupal.org/node/14274#comment-57950.
 *    1. hook_theme which adds an array of callbacks and their arguments to the
 *      theme registry. I didn't realize that I had to visit the modules page to
 *      rebuild the theme registry before it would be added.
 *    2. The themeable function itself which starts with theme_ followed by the
 *      function name that was added to the registry with hook_theme.
 *    3. theme("whatever_function, $whatever_argument, $whatever_argument ")
 *     which actually calls the function.
 */
function droogle_hangout_theme() {
  return array(
    'droogle_hangout_invite_button' => array(
      'variables' => array(
        'email' => NULL,
        'fullname' => NULL,
        'src' => NULL,
        'text' => TRUE,
      ),
      'file' => 'droogle_hangout.inc',
    ),
    'droogle_hangout_email_button' => array(
      'variables' => array(
        'email' => NULL,
        'fullname' => NULL,
        'text' => TRUE,
      ),
      'file' => 'droogle_hangout.inc',
    ),
    'droogle_hangout_chat_button' => array(
      'variables' => array(
        'email' => NULL,
        'fullname' => NULL,
        'text' => TRUE,
      ),
      'file' => 'droogle_hangout.inc',
    ),
    'droogle_hangout_contact_me_popup' => array(
      'variables' => array(
        'uid' => NULL,
        'email' => TRUE,
        'chat' => FALSE,
        'hangout' => FALSE,
      ),
      'file' => 'droogle_hangout.inc',
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function droogle_hangout_theme_registry_alter(&$theme_registry) {
  if ($theme_registry['username']) {
    // Create new function for theme_username to use.
    $theme_registry['username']['function'] = 'theme_droogle_hangout_username_output';
  }
}

/**
 * Implements function for theme_username to use.
 */
function theme_droogle_hangout_username_output($variables) {
  drupal_add_css(drupal_get_path('module', 'droogle_hangout') . '/css/droogle_hangout.css');
  drupal_add_js(drupal_get_path('module', 'droogle_hangout') . '/js/droogle_hangout.js');
  // Load jqueryui.
  drupal_add_library('system', 'ui.dialog');

  if ($variables['account']) {
    $account = $variables['account'];
    $user = user_load($account->uid);
    // If Realname module is installed then use realname for fullname.
    // Otherwise, get the account username.
    if (module_exists('realname')) {
      $realname = db_query("SELECT realname
                            FROM {realname}
                            WHERE uid = :uid", array(':uid' => $account->uid))->fetchField();
    }
    elseif (!module_exists('realname') &&
    db_table_exists('field_data_field_first_name') &&
    db_table_exists('field_data_field_last_name')) {
      $realname = db_query("SELECT CONCAT(field_first_name_value, ' ', field_last_name_value) AS fullname
                            FROM {users} u
                            LEFT OUTER JOIN {field_data_field_first_name} fn ON u.uid = fn.entity_id
                            LEFT OUTER JOIN {field_data_field_last_name} ln ON u.uid = ln.entity_id
                            WHERE uid = :uid", array(':uid' => $account->uid))->fetchField();
    }
    else {
      $realname = '';
    }
    $output = l($variables['name'], 'user/' . $variables['uid']) . ' ' . theme('droogle_hangout_invite_button',
      array(
        'email' => $user->mail,
        'fullname' => $realname == '' ? $account->name : $realname,
        'text' => FALSE)
      );
    return $output;
  }
}

/**
 * Implements hook_mail().
 */
function droogle_hangout_mail($key, &$message, $params) {
  switch ($key) {
    case 'droogle_hangout_alert':
      if (isset($params['subject'])) {
        $message['subject'] = $params['subject'];
      }

      if (isset($params['body'])) {
        $message['body'] = $params['body'];
      }

      if (isset($params['headers']) && is_array($params['headers'])) {
        $message['headers'] += $params['headers'];
      }
      break;
  }
}
