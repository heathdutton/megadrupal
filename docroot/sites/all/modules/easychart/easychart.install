<?php

/**
 * @file
 * Easychart install file.
 */

/**
 * Implements hook_uninstall().
 */
function easychart_uninstall() {
  node_type_delete('easychart');
}

/**
 * Implements hook_field_schema().
 */
function easychart_field_schema($field) {
  $columns = array(
    'csv' => array('type' => 'text', 'size' => 'big', 'not null' => FALSE),
    'csv_url' => array('type' => 'text', 'size' => 'medium', 'not null' => FALSE),
    'config' => array('type' => 'text', 'size' => 'big', 'not null' => FALSE),
    'stored' => array('type' => 'text', 'size' => 'big', 'not null' => FALSE),
  );
  return array(
    'columns' => $columns,
  );
}

/**
 * Transpose all existing data.
 */
function easychart_update_7200 () {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'easychart')
    ->fieldCondition('easychart', 'csv', '', '!=');
  $result = $query->execute();

  if (isset($result['node'])) {
    $easycharts = $result['node'];
    foreach ($easycharts as $easychart) {
      $node = node_load($easychart->nid);

      $data = field_get_items('node', $node, 'easychart');

      // Get separator.
      $separator = ',';
      $seps = array(';',',','|',"\t");
      $max = 0;

      foreach($seps as $sep){
        $count = substr_count($data[0]['csv'], $sep);
        if($count > $max){
          $separator = $sep;
          $max = $count;
        }
      }

      $new_data = array();
      $rows = str_getcsv($data[0]['csv'], "\n"); //parse the rows
      foreach($rows as &$row) {
        $new_data[] = str_getcsv($row, $separator);
      }
      $new_data = _transpose($new_data);

      // Clear the first cell if there are categories
      if (!is_numeric($new_data[1][0])) {
        $new_data[0][0] = '';
      }

      $node->easychart['und'][0]['csv'] = json_encode($new_data);

      field_attach_update('node', $node);
    }
  }
}

/*
 * Helper function to transpose an array
 */
function _transpose($array) {
  $transposed_array = array();
  if ($array) {
    foreach ($array as $row_key => $row) {
      if (is_array($row) && !empty($row)) { //check to see if there is a second dimension
        foreach ($row as $column_key => $element) {
          $transposed_array[$column_key][$row_key] = $element;
        }
      }
      else {
        $transposed_array[0][$row_key] = $row;
      }
    }
    return $transposed_array;
  }
}

/**
 * Adds storage for an external CSV url.
 */
function easychart_update_7100 () {
  $spec = array(
    'type' => 'text',
    'description' => '',
    'size' => 'medium',
    'not null' => FALSE,
  );
  $data_table_name = 'field_data_easychart';
  $revision_table_name = 'field_revision_easychart';
  $field_name = 'easychart_csv_url';
  db_add_field($data_table_name, $field_name, $spec);
  db_add_field($revision_table_name, $field_name, $spec);
}