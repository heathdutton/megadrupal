<?php

include_once 'includes/media_formatters.field.inc';


/**
 * Implements hook_libraries_info().
 *
 * For defining external libraries.
 */
function media_formatters_libraries_info() {

  $libraries['lazysizes'] = array(
    'name' => 'lazysizes',
    'files' => array(
      'js' => array(
        'lazysizes.js',
      ),
    ),
  );

  $libraries['ekko-lightbox'] = array(
    'name' => 'Ekko Lightbox',
    'files' => array(
      'js' => array(
        'dist/ekko-lightbox.js',
      ),
      'css' => array(
        'dist/ekko-lightbox.min.css',
      ),
    ),
  );

  return $libraries;
}
  
/**
 * Implements hook_menu().
 */
function media_formatters_menu() {
  $items = array();
  $items['admin/config/media/media-formatters'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Media Formatters',
    'description' => 'Set up default settings for media formatters',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('media_formatters_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/media_formatters.admin.inc',
  );
  return $items;
}


/******************************* THEME ***************************** */

/**
 * Implements hook_theme().
 */
function media_formatters_theme($existing, $type, $theme, $path) {
  $path = 'templates/';
  return array(
    'image_lazysizes' => array(
      'template' => $path . 'image-lazysizes',
      'variables' => array(
        'image_style' => NULL,
        'show_src' => FALSE,
        'show_attribution' => TRUE,
        'link_field' => NULL,
        'image_style_xs' => NULL,
        'image_style_sm' => NULL,
        'image_style_md' => NULL,
        'image_style_lg' => NULL,
        'item' => NULL,
        'attributes' => array(),
      ),
    ),
    'image_lightbox' => array(
      'template' => $path . 'image-lightbox',
      'variables' => array(
        'is_hidden' => FALSE,
        'path' => '',
        'path_lightbox' => '',
        'gallery' => 'defaultGallery',
        'class' => '',
        'title' => '',
        'alt' => '',
      ),
    ),
    'media_formatters_clicktoplay_inline' => array(
      'template' => $path . 'clicktoplay-inline',
      'variables' => array(
        'placeholder' => '',
        'play_class' => 'button-play',
        'content' => '',
        'v_class' => ''
      ),
    ),
  );
}

/**
 * Lazysites theme preprocess.
 */
function template_preprocess_image_lazysizes(&$variables) {
  // Determine the dimensions of the styled image.
  // @todo: do we want to do any of this?
  // $dimensions = array(
  //   'width' => $variables['width'],
  //   'height' => $variables['height'],
  // );
  //image_style_transform_dimensions($variables['image_style'], $dimensions);
  // $variables['width'] = $dimensions['width'];
  // $variables['height'] = $dimensions['height'];

  // attrs
  $item = $variables['item'];
  $variables['title'] = !empty($item['title']) ? $item['title'] : NULL;
  $variables['alt'] = !empty($item['alt']) ? $item['alt'] : NULL;

  $dimensions = array(
    'width' => $item['metadata']['width'],
    'height' => $item['metadata']['height']
  );

  // attribution field (based on title)
  if (!empty($item['title']) && $variables['show_attribution']) {
    $variables['attribution'] = !empty($item['field_media_source'])
      ? l($item['title'], $item['field_media_source'][LANGUAGE_NONE][0]['url'], array('attributes' => array('target' => '_blank')))
      : $item['title'];
  }

  // src
  $path = $variables['item']['uri'];
  $style = $variables['image_style'] == 'default' ? variable_get('media_formatters_style_default', '') : $variables['image_style'];
  $variables['src'] = !empty($style) ? image_style_url($style, $path) : file_create_url($path);
  
  // src_set and calc sizes 
  $image_styles = _media_formatters_breakpoints();
  $src_set = array();
  $sizes = array();
  foreach ($image_styles as $key => $item) {
    $style = $variables['image_style_'.$key];
    if (!empty($style)) {
      $style = $style == 'default' ? $item['style'] : $style;

      if(!empty($style)) {
        $url = image_style_url($style, $path);

        // Get sizes
        // @todo figure out these sizes
        // $dimen = $dimensions;
        // image_style_transform_dimensions($style, $dimen);
        // dpm($dimen);
        // // Add some rules
        // $sizes[] = '(min-width: ' . $item['width'] . 'px) ' . $dimen['width'] . 'px';
      }
      else {
        $url = file_create_url($path);
      }
      $src_set[] = $url . ' ' . $item['width'] . 'w';
      //dpm($dimensions);
    }
  }
  if (!empty($src_set)) {
    $variables['src_set'] = implode(', ', $src_set);
  }

  // Calc sizes
  //@todo figure out this
  // $sizes[] = '100vw';
  // $variables['sizes'] = implode(', ', $sizes);
  // dpm($image_styles);
  // dpm($variables);

  // Add the js
  libraries_load_files(libraries_load('lazysizes'));
  drupal_add_css(drupal_get_path('module', 'media_formatters') . '/css/media-formatters.css');

  unset($variables['item']);
}

/**
 * Lightbox theme preprocess.
 */
function template_preprocess_image_lightbox(&$variables) {
  // Add the js
  libraries_load_files(libraries_load('ekko-lightbox'));
  drupal_add_css(drupal_get_path('module', 'media_formatters') . '/css/media-formatters.css');
  drupal_add_js(drupal_get_path('module', 'media_formatters') . '/js/bootstrap-lightbox.js', array('scope' => 'footer'));
}