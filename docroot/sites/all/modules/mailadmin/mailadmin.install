<?php
/**
 * @file
 * Installation and database schema for mail admin.
 */

/**
 * Implements hook_schema().
 */
function mailadmin_schema() {
  $schema = array();

  $schema['mailadmin_mailboxes'] = array(
    'description' => 'Table for e-mail mailboxes.',
    'fields' => array(
      'mailbox_id' => array(
        'description' => 'The primary identifier for an mailbox.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'local_part' => array(
        'description' => 'The local part of the e-mail-address, ie. the part before the @-sign.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'domain_name' => array(
        'description' => 'Domain name, the part after the @-sign.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'password' => array(
        'description' => 'The userâ€™s password, hashed.',
        'type' => 'varchar',
        'length' => 128,
      ),
      'real_name' => array(
        'description' => 'The real name of the user mailbox.',
        'type' => 'varchar',
        'length' => 128,
      ),
      'uid' => array(
        'description' => 'Unix user id for the mailbox, used by the mail server.',
        'type' => 'int',
        'size' => 'small',
      ),
      'gid' => array(
        'description' => 'Unix group id for the mailbox, used by the mail server.',
        'type' => 'int',
        'size' => 'small',
      ),
      'home' => array(
        'description' => 'Unix path for where to store the e-mail, used by the mail server.',
        'type' => 'varchar',
        'length' => 128,
      ),
    ),
    'primary key' => array('mailbox_id'),
    'unique keys' => array(
      'address' => array('domain_name', 'local_part'),
    ),
  );

  $schema['mailadmin_forwards'] = array(
    'description' => 'Table for e-mail forwards.',
    'fields' => array(
      'forward_id' => array(
        'description' => 'The primary identifier for an e-mail forward.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'local_part' => array(
        'description' => 'The local part of the e-mail-address, ie. the part before the @-sign.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'domain_name' => array(
        'description' => 'Domain name, the part after the @-sign.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'destination' => array(
        'description' => 'Destination e-mail-address, ie. where to forward the e-mail to.',
        'type' => 'varchar',
        'length' => 254,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('forward_id'),
    'unique keys' => array(
      'forward' => array('domain_name', 'local_part', 'destination'),
    ),
    'indexes' => array(
      'domain_name' => array('domain_name'),
    ),
  );

  $schema['mailadmin_domain_aliases'] = array(
    'description' => 'Table for e-mail domain aliases.',
    'fields' => array(
      'alias_id' => array(
        'description' => 'The primary identifier for an e-mail forward.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'source_domain_name' => array(
        'description' => 'Domain name that receives emails.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'target_domain_name' => array(
        'description' => 'Domain name that will receive emails.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('alias_id'),
    'unique keys' => array(
      'forward' => array('source_domain_name'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function mailadmin_install() {
  global $databases;
  // This only works for PostgreSQL.
  if ($databases['default']['default']['driver'] == 'pgsql') {
    // Get the sql from the pgsql file.
    $path = realpath(drupal_get_path('module', 'mailadmin') . '/database/setup.pgsql');
    $file = fopen($path, 'r');
    $sql = fread($file, filesize($path));
    fclose($file);
    // Run the SQL, to create or update functions.
    db_query($sql);
  }
}

/**
 * Add mailadmin_alias table.
 */
function mailadmin_update_7000(&$sandbox) {
  db_create_table('mailadmin_aliases', array(
    'description' => 'Table for e-mail domain aliases.',
    'fields' => array(
      'alias_id' => array(
        'description' => 'The primary identifier for an e-mail forward.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'source_domain_name' => array(
        'description' => 'Domain name that receives emails.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'target_domain_name' => array(
        'description' => 'Domain name that will receive emails.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('alias_id'),
    'unique keys' => array(
      'forward' => array('source_domain_name'),
    ),
  ));
}

/**
 * Rename mailadmin_domain_aliases to mailadmin_domain_aliases.
 */
function mailadmin_update_7001(&$sandbox) {
  db_rename_table('mailadmin_aliases', 'mailadmin_domain_aliases');
}

/**
 * Update the functions to include domain aliases.
 */
function mailadmin_update_7002(&$sandbox) {
  db_change_field('mailadmin_domain_aliases', 'source_domain_name', 'source_domain_name',
    array(
      'description' => 'Domain name that receives emails.',
      'type' => 'varchar',
      'length' => 128,
      'not null' => TRUE,
    )
  );
  mailadmin_install();
}
