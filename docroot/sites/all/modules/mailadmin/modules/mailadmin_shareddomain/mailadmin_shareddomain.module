<?php
/**
 * @files
 * Shared domain list module.
 */

/**
 * Implements hook_menu().
 */
function mailadmin_shareddomain_menu() {
  $items = array();

  $items['mailadmin/shareddomain'] = array(
    'title' => 'E-mail domains',
    'page callback' => 'mailadmin_shareddomains_overview_page',
    'access arguments' => array('access mailadmin'),
    'file' => 'includes/mailadmin_shareddomain.pages.inc',
  );

  $items['mailadmin/shareddomain/new'] = array(
    'title' => 'Add new domain',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mailadmin_shareddomains_edit_form'),
    'access arguments' => array('access mailadmin'),
    'file' => 'includes/mailadmin_shareddomain.pages.inc',
  );

  $items['mailadmin/shareddomain/%mailadmin_shareddomain'] = array(
    'title' => 'Edit domain',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mailadmin_shareddomains_edit_form', 2),
    'access arguments' => array('access mailadmin'),
    'file' => 'includes/mailadmin_shareddomain.pages.inc',
  );

  $items['mailadmin/shareddomain/%mailadmin_shareddomain/delete'] = array(
    'title' => 'Delete domain',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mailadmin_shareddomains_delete_form', 2),
    'access arguments' => array('access mailadmin'),
    'file' => 'includes/mailadmin_shareddomain.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_entity_info().
 */
function mailadmin_shareddomain_entity_info() {
  $return = array(
    'mailadmin_shareddomain' => array(
      'label' => t('Domain'),
      'controller class' => 'EntityAPIController',
      'base table' => 'mailadmin_shareddomains',
      // We do not want extra fields or revisions on this entity.
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'domain_id',
      ),
      'bundles' => array(
        'mailadmin_shareddomain' => array(
          'label' => t('Domain'),
        ),
      ),
      'load hook' => 'mailadmin_sharreddomain_load',
      'view modes' => array(
        'administrator' => array(
          'label' => t('Administrator'),
          'custom settings' => FALSE,
        ),
      ),
      'views controller class' => 'EntityDefaultViewsController',
    ),
  );

  return $return;
}

/**
 * Implements hook_mailadmin_domains().
 */
function mailadmin_shareddomain_mailadmin_domains($account) {
  // This module provides the same domain list to everyone.
  return mailadmin_shareddomain_load_all();
}

/**
 * Create a new domain object
 */
function mailadmin_shareddomain_new($values = array()) {
  return entity_create('mailadmin_shareddomain', $values);
}

/**
 * Save a mail domain.
 *
 * @param $domain
 *    The domain object
 */
function mailadmin_shareddomain_save($domain) {
  entity_save('mailadmin_shareddomain', $domain);
}

/**
 * Loads an domain by ID.
 *
 * @param $domain_id
 *   The domain id
 * @param $reset
 *   Whether to reset the internal domain loading cache.
 *
 * @return A domain object or FALSE if no domain was found.
 */
function mailadmin_shareddomain_load($domain_id, $reset = FALSE) {
  $domains = entity_load('mailadmin_shareddomain', array($domain_id), array(), $reset);
  return $domains ? reset($domains) : FALSE;
}

/**
 * Load all the domains.
 *
 * @param $reset
 *   Whether to reset the internal domain loading cache.
 * @return
 *   An array of domain objects indexed by domain_id.
 */
function mailadmin_shareddomain_load_all($reset = FALSE) {
  $domains = array();
  $query = db_query('SELECT * FROM {mailadmin_shareddomains} ORDER BY domain_name');

  foreach ($query as $domain) {
    $domains[$domain->domain_id] = $domain->domain_name;
  }

  return $domains;
}

