<?php
/**
 * @file
 * Code for the Wechat mass feature.
 */

include_once 'wechat_mass.features.inc';

function wechat_mass_node_presave($node) {
  if ($node->type == 'wechat_mass_message' ) {
    $node_wrapper = entity_metadata_wrapper('node', $node); 
    $message_type = $node_wrapper->field_message_type->value();
    $data = array('filter' => array('is_to_all' => false, 'group_id' => '0'));

    $we_obj = _wechat_init_obj();
    //由于我们使用的wechat SDK，目前没有setAccessToken($access_token)，所以我们这里只能委屈一下了
    $access_token = wechat_get_access_token();
    $we_obj->checkAuth('', '', $access_token);
	
    if ($message_type == 'text' ) {
      $data['msgtype'] = 'text';
      $content = $node_wrapper->body->value->value(array('decode' => TRUE));
      $data['text']['content'] = trim($content);
      $result = $we_obj->sendGroupMassMessage($data);
	  //print debug($data);
	  //print debug($we_obj);
      if(empty($result)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));		
      }
      else {
        $node_wrapper->field_errcode->set($result['errcode']);
        $node_wrapper->field_errmsg->set($result['errmsg']);
        $node_wrapper->field_msg_id->set($result['msg_id']);
        drupal_set_message(t("微信群发成功"));
      }	  
    }
    if ($message_type == 'image' ) {
      $data['msgtype'] = 'image';
      $image_fid = $node_wrapper->field_image->file->fid->value();
      $media_id = wechat_upload_media($image_fid, 'image');
      if(empty($media_id)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));
        return;		
      }	  
      $data['image']['media_id'] = $media_id;
      $result = $we_obj->sendGroupMassMessage($data);
	 // print debug($data);
	//  print debug($we_obj);
      if(empty($result)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));		
      }
      else {
        $node_wrapper->field_errcode->set($result['errcode']);
        $node_wrapper->field_errmsg->set($result['errmsg']);
        $node_wrapper->field_msg_id->set($result['msg_id']);
        drupal_set_message(t("微信群发成功"));
      }	  
    }
	
    if ($message_type == 'voice' ) {
      $data['msgtype'] = 'voice';
      $voice_fid = $node_wrapper->field_voice->file->fid->value();
      $media_id = wechat_upload_media($voice_fid, 'voice');
      if(empty($media_id)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));
        return;		
      }	  
      $data['image']['media_id'] = $media_id;
      $result = $we_obj->sendGroupMassMessage($data);
	 // print debug($data);
	//  print debug($we_obj);
      if(empty($result)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));		
      }
      else {
        $node_wrapper->field_errcode->set($result['errcode']);
        $node_wrapper->field_errmsg->set($result['errmsg']);
        $node_wrapper->field_msg_id->set($result['msg_id']);
        drupal_set_message(t("微信群发成功"));
      }	  
    }
    if ($message_type == 'video' ) {
      $data['msgtype'] = 'mpvideo';
	  //视频的多一步，需要先上传文件，获取media_id,然后再上传视频本身的描述、标题，然后再群发。
      $video_fid = $node_wrapper->field_video->file->fid->value();
      $media_id = wechat_upload_media($video_fid, 'video');
      
      if(empty($media_id)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));
        return;		
      }
      $title = $node_wrapper->title->value();
      $description = $node_wrapper->body->value->value(array('decode' => TRUE));
      //第二步
      $data1 =array(
        "media_id" => $media_id,
        "title" => $title,
        "description" => $description,
      );
      $result1 = $we_obj->uploadMpVideo($data1);
      //print debug($data1);
      //print debug($result1);
      if(empty($result1['media_id'])){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));
        return;		
      }
      //第3步	  
      $data['mpvideo']['media_id'] = $result1['media_id'];
      $result = $we_obj->sendGroupMassMessage($data);
	  //print debug($data);
	  //print debug($we_obj);
      if(empty($result)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));		
      }
      else {
        $node_wrapper->field_errcode->set($result['errcode']);
        $node_wrapper->field_errmsg->set($result['errmsg']);
        $node_wrapper->field_msg_id->set($result['msg_id']);
        drupal_set_message(t("微信群发成功"));
      }	  
    }
    if ($message_type == 'news' ) {
      $data['msgtype'] = 'mpnews';
	  //新闻的上传，需要先上传文章，获取media_id，然后再群发。
      $articles = $node_wrapper->field_article->value();
      $data1 = array();
      $data1['articles'] = array();
	  $i = 0;
	  //print debug($articles);
	  
      foreach($articles as $article){
	    $article_wrapper = entity_metadata_wrapper('node', $article);
		//print debug($article_wrapper);
        
		$image_fid = $article_wrapper->field_image->file->fid->value();
        $title = $article->title;
        $content = $article_wrapper->body->value->value(array('decode' => TRUE));
        $digest = $article_wrapper->body->value->value(array('decode' => TRUE));
         $author = $article_wrapper->author->name->value();
		
        $thumb_media_id = wechat_upload_media($image_fid, 'image');
		
        $content_source_url = url('node/' . $article->nid, array('absolute' => TRUE));
        if ($i == 0) {
          $show_cover_pic = 1;
        }
        else{
          $show_cover_pic = 0;
        }
        $i++;
        $data1['articles'][] = array(
           "thumb_media_id" => $thumb_media_id,
           "author" => $author,
           "title" => $title,
           "content_source_url" => $content_source_url,
           "content" => $content,
           "digest" => $digest,
           "show_cover_pic" => $show_cover_pic,
        );	
		
      }
	  
	  
      $result1 = $we_obj->uploadArticles($data1);
      //print debug($data1);
      //print debug($result1);
      if(empty($result1['media_id'])){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));
        return;		
      }
	  
      //第3步	  
      $data['mpnews']['media_id'] = $result1['media_id'];
      $result = $we_obj->sendGroupMassMessage($data);
	  //print debug($data);
	  //print debug($we_obj);
      if(empty($result)){
        $node->status = 0;
        drupal_set_message(t("微信群发失败"));		
      }
      else {
        $node_wrapper->field_errcode->set($result['errcode']);
        $node_wrapper->field_errmsg->set($result['errmsg']);
        $node_wrapper->field_msg_id->set($result['msg_id']);
        drupal_set_message(t("微信群发成功"));
      }	
	  
    }	
  }
}

function wechat_mass_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'wechat_mass_message_node_form') {
    $form['#attached']['css'] = array(
      drupal_get_path('module', 'wechat_mass') . '/wechat_mass.css',
    );
    $form['#attached']['js'] = array(
      drupal_get_path('module', 'wechat_mass') . '/wechat_mass.js',
    );
  }
}