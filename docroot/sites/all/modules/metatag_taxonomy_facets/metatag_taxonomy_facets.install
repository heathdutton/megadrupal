<?php

/**
 * @file
 * Install and uninstall functions for the metatag_taxonomy_facets module.
 */

/**
 * Implements hook_schema().
 */
function metatag_taxonomy_facets_schema() {
  $schema = array();

  $schema['taxonomy_facets_combinations'] = array(
    'description' => 'Table for storing taxonomy facets combinations',
    'fields' => array(
      'cid' => array(
        'description' => 'Primary Key: Unique combination ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'combination_hash' => array(
        'description' => 'combination hash',
        'type' => 'varchar',
        'length' => 32,
        'not null' => FALSE,
        'default' => '',
      ),
      'searcher' => array(
        'description' => 'searcher name',
        'type' => 'varchar',
        'length' => 256,
        'not null' => FALSE,
        'default' => '',
      ),
      'searcher_hash' => array(
        'description' => 'searcher hash',
        'type' => 'varchar',
        'length' => 32,
        'not null' => FALSE,
        'default' => '',
      ),
      'facets' => array(
        'description' => 'facets names delimited by semicolons',
        'type' => 'varchar',
        'length' => 2048,
        'not null' => FALSE,
        'default' => '',
      ),
    ),
    'primary key' => array('cid'),
    'indexes' => array(
      'combinations' => array('combination_hash'),
      'searcher' => array('searcher_hash'),
    ),
  );

  $schema['taxonomy_facets_items'] = array(
    'description' => 'Table for taxonomy facets combinations instances',
    'fields' => array(
      'tfid' => array(
        'description' => 'Primary Key: Unique combination ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'combination_id' => array(
        'description' => 'Combination Id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tids' => array(
        'description' => 'ids of terms for corresponding to active facets dalimited by commas',
        'type' => 'varchar',
        'length' => 512,
        'not null' => FALSE,
        'default' => '',
      ),
      'tids_hash' => array(
        'description' => 'tids hash',
        'type' => 'varchar',
        'length' => 32,
        'not null' => FALSE,
        'default' => '',
      ),
    ),
    'primary key' => array('tfid'),
    'indexes' => array(
      'facets' => array('combination_id', 'tids_hash'),
    ),
    'foreign keys' => array(
      'taxonomy_facets_combinations' => array(
        'table' => 'taxonomy_facets_combinations',
        'columns' => array(
          'combination_id' => 'cid',
        ),
      ),
    ),
  );

  return $schema;
}

/**
 * Enables metatags support for taxonomy_facets entities.
 * Implements hook_install().
 */
function metatag_taxonomy_facets_install() {
  variable_set('metatag_enable_taxonomy_facets', TRUE);
  variable_set('metatag_enable_taxonomy_facets__taxonomy_facets', TRUE);
}

/**
 * Implements hook_uninstall().
 */
function metatag_taxonomy_facets_uninstall() {
  variable_del('metatag_taxonomy_facets_selected');
  variable_del('metatag_taxonomy_facets_unselected');
  variable_del('metatag_taxonomy_facets_single_facets');
  variable_del('metatag_taxonomy_facets_ignore_unsupported_facets');
}

/**
 * Adds searcher_hash field to taxonomy_facets_combinations entity
 */
function metatag_taxonomy_facets_update_7103() {
  if (!db_field_exists('taxonomy_facets_combinations', 'searcher_hash')) {
    $db_field_info = array(
      'description' => 'searcher hash',
      'type' => 'varchar',
      'length' => 32,
      'not null' => FALSE,
      'default' => '',
    );
    db_add_field('taxonomy_facets_combinations', 'searcher_hash', $db_field_info);
  }
  if (db_index_exists('taxonomy_facets_combinations', 'searcher')) {
    db_drop_index('taxonomy_facets_combinations', 'searcher');
  }
  db_add_index('taxonomy_facets_combinations', 'searcher', array('searcher_hash'));

  $cids = db_select('taxonomy_facets_combinations', 'c')
      ->fields('c', array('cid'))
      ->execute()->fetchCol();
  $operations = array();
  foreach ($cids as $cid) {
    $operations[] = array('_metatag_taxonomy_facets_update_recalculate_hashes', array($cid));
  }
  $batch = array(
    'operations' => $operations,
    'finished' => '_metatag_taxonomy_facets_update_recalculate_hashes_finished',
    'title' => t('Updating existing combinations in database'),
    'init_message' => t('Update process is starting...'),
    'progress_message' => t('Processed @current out of @total.'),
    'error_message' => t('Error occured during combinations update process.'),
    'file' => drupal_get_path('module', 'metatag_taxonomy_facets') . '/metatag_taxonomy_facets.install',
  );
  batch_set($batch);
}

/**
 * Updates metatags taxonomy combinations entity.
 *
 * @param int $cid
 *  entity id
 */
function _metatag_taxonomy_facets_update_recalculate_hashes($cid) {
  $combination = entity_load_single('taxonomy_facets_combinations', $cid);
  entity_save('taxonomy_facets_combinations', $combination);
}

/**
 * Displays a message upon completion of a batched combinations update.
 * 
 * @param bool $success
 * @param array $results
 * @param array $operations
 */
function _metatag_taxonomy_facets_update_recalculate_hashes_finished($success, $results, $operations) {
  if ($success) {
    $message = t('Taxonomy facets combinations successfully updated');
  } else {
    $error_operation = reset($operations);
    $message = 'An error occurred while processing ' . $error_operation[0] . ' with arguments :' . print_r($error_operation[0], TRUE);
  }
  
  drupal_set_message($message);
}

/**
 * Enable taxonomy_facets entity metatags support
 */
function metatag_taxonomy_facets_update_7104() {
  variable_set('metatag_enable_taxonomy_facets', TRUE);
  variable_set('metatag_enable_taxonomy_facets__taxonomy_facets', TRUE);
}