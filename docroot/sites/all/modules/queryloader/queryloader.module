<?php

/**
 * @file
 * QueryLoader module, for configuring display QueryLoader2 on Drupal sites.
 */

/**
 * Visibility constants, adapted from the core block module.
 */
define('QUERYLOADER_VISIBILITY_NOTLISTED', 0);
define('QUERYLOADER_VISIBILITY_LISTED', 1);
define('QUERYLOADER_VISIBILITY_PHP', 2);

/**
 * Implements hook_library().
 */
function queryloader_library() {
  // Register the Query Loader library.
  $libraries['queryloader'] = array(
    'title' => 'QueryLoader2',
    'website' => 'https://github.com/Gaya/QueryLoader2',
    'version' => '2',
    'js' => array(
      libraries_get_path('queryloader2') . '/queryloader2.min.js' => array(
        'type' => 'file',
        'scope' => 'header',
        'group' => JS_LIBRARY,
      ),
      drupal_get_path('module', 'queryloader') . '/queryloader_drupal.js' => array(
        'type' => 'file',
        'scope' => 'header',
        'group' => JS_DEFAULT,
      ),
      array(
        'type' => 'setting',
        'data' => array(
          'queryloader' => variable_get('queryloader_options'),
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_menu().
 */
function queryloader_menu() {
  $items['admin/config/user-interface/queryloader'] = array(
    'title' => 'QueryLoader2 settings',
    'description' => 'Change the allowed paths and jQuery settings for QueryLoader2 page preloader.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('queryloader_admin'),
    'access callback' => TRUE,
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'queryloader.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_init().
 */
function queryloader_init() {
  // Variables for visibility.
  $paths = variable_get('queryloader_paths', '');
  $visibility_type = variable_get('queryloader_visibility', QUERYLOADER_VISIBILITY_LISTED);

  // Do the path patterns match the current path.
  $is_matched = drupal_match_path(current_path(), $paths);

  // Should they match?
  $should_match = ($visibility_type == QUERYLOADER_VISIBILITY_NOTLISTED) ? FALSE : TRUE;

  // Attach if the match and match method is consistent.
  if ($is_matched == $should_match) {
    queryloader_attach();
  }
}

/**
 * Implements hook_node_view().
 */
function queryloader_node_view($node, $view_mode, $langcode) {
  // Variables for visibility.
  $content_types = variable_get('queryloader_types', array());

  // Start the match testing.
  $is_matched = FALSE;

  foreach ($content_types as $type) {
    ($node->type == $type) ? $is_matched = TRUE : '';
  }

  // Attach if the content type is matched and we're on a full page.
  if ($is_matched && node_is_page($node)) {
    queryloader_attach();
  }
}

/**
 * The function that attaches the Query Loader 2 library and settings.
 * This can be called within other modules or Template.php within a theme if
 * necessary.
 */
function queryloader_attach($script_settings = NULL) {
  drupal_add_library('queryloader', 'queryloader');
}

