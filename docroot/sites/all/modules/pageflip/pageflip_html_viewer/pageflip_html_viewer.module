<?php

/**
 * @file
 * PageFlip basic viewer, using only HTML and JavaScript.
 *
 */

define('PAGEFLIP_HTML_VIEWER_ELEMENT_ID', 'pageflip-html-viewer');

/**
 * Implements hook_menu().
 */
function pageflip_html_viewer_menu() {
  $items = array();
  $items['admin/config/media/pageflip/html-viewer'] = array(
    'title' => 'HTML Viewer',
    'description' => 'Administer HTML Viewer settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pageflip_html_viewer_settings_form'),
    'access arguments' => array('administer pageflip'),
    'file' => 'pageflip_html_viewer.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['node/%node/pageflip/html-viewer'] = array(
    'title' => 'View in HTML Viewer',
    'page callback' => 'pageflip_html_viewer_view',
    'page arguments' => array(1, 4),
    'access callback' => 'pageflip_html_viewer_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Access callback.
 */
function pageflip_html_viewer_access($node) {
  return $node->type == PAGEFLIP_BOOK_CONTENT_TYPE && user_access('access content');
}

/**
 * Implements hook_theme().
 */
function pageflip_html_viewer_theme() {
  return array(
    'pageflip_html_viewer_html_document' => array(
      'variables' => array('book' => NULL, 'chapters' => array(), 'settings' => array()),
      'template' => 'pageflip-html-viewer-html-document',
    ),
    'pageflip_html_viewer_book' => array(
      'variables' => array('book' => NULL, 'chapters' => array(), 'settings' => array()),
      'template' => 'pageflip-html-viewer-book',
    ),
    'pageflip_html_viewer_page_pair' => array(
      'variables' => array('book' => NULL, 'settings' => array(), 'left_page' => NULL, 'right_page' => NULL, 'chapter_index' => 0, 'pair_index' => 0, 'page_index' => 0, 'page_width' => 0, 'page_height' => 0, 'very_last_pair' => FALSE),
      'template' => 'pageflip-html-viewer-page-pair',
    ),
  );
}

/**
 * HTML Viewer entry point.
 */
function pageflip_html_viewer_view($node, $resolution) {
  // Start with user's preferred settings if any, and override if we were given
  // a resolution argument.
  pageflip_set_active_viewer(PAGEFLIP_VIEWER_HTML, $node);
  $settings = pageflip_get_viewer_settings();

  if (isset($resolution) && !in_array($resolution, array('low', 'high'))) {
    drupal_not_found();
    exit();
  }

  if (!isset($resolution)) {
    $resolution = $settings['resolution'] === '1280x720' ? 'low' : 'high';
  }

  // Supply width and height of each page to the template.
  if ($resolution == 'low') {
    $settings['resolution'] = PAGEFLIP_VIEWER_LOW_RES;
    $settings['page_width'] = variable_get('pageflip_page_width_low', 640);
    $settings['page_height'] = variable_get('pageflip_page_height_low', 720);
  }
  elseif ($resolution == 'high') {
    $settings['resolution'] = PAGEFLIP_VIEWER_HIGH_RES;
    $settings['page_width'] = variable_get('pageflip_page_width', 960);
    $settings['page_height'] = variable_get('pageflip_page_height', 1080);
  }

  $chapters = pageflip_load_book($node);

  $base_library_dir = variable_get('pageflip_base_library_dir', 'sites/all/libraries');
  drupal_add_library('system', 'jquery.bbq');
  drupal_add_js($base_library_dir . '/jquery.cycle/jquery.cycle.all.min.js');
  drupal_add_css(drupal_get_path('module', 'pageflip_html_viewer') . '/pageflip_html_viewer.css');
  drupal_add_js(drupal_get_path('module', 'pageflip_html_viewer') . '/pageflip_html_viewer.js', 'file');

  print theme('pageflip_html_viewer_html_document',
    array(
      'book' => $node,
      'chapters' => $chapters,
      'settings' => $settings,
    )
  );
  exit();
}

/**
 * Generates the switch-resolution link for the viewer control bar.
 */
function pageflip_html_viewer_switch_link($node, $settings) {
  if ($settings['resolution'] == PAGEFLIP_VIEWER_HIGH_RES) {
    $label = t('low-res');
    $res = 'low';
  }
  else {
    $label = t('high-res');
    $res = 'high';
  }
  $link = t('[!resolution-link]', array('!resolution-link' => l($label, "node/$node->nid/pageflip/html-viewer/$res")));
  return t('Switch to:<br />!link', array('!link' => $link));
}

/**
 * Generates the site link for the viewer control bar.
 */
function pageflip_html_viewer_site_link() {
  $site_name = variable_get('pageflip_site_link_name', variable_get('site_name', 'Drupal'));
  $link = l($site_name, variable_get('site_frontpage', 'node'));
  return t('Return to<br />!link', array('!link' => $link));
}


/**
 * Builds the chapter-picker form for the viewer navigation.
 */
function pageflip_html_viewer_chapter_form($form, &$form_state, $node) {
  // The zeroth chapter starts with the front cover.
  $chapters[0] = t('Front Cover');
  $index = 1;
  if ($chapters_field = field_get_items('node', $node, 'field_pageflip_chapters')) {
    foreach ($chapters_field as $dummy) {
      $chapters[$index] = t('Chapter @number', array('@number' => $index));
      $index++;
    }
  }
  $form['chapter'] = array(
    '#type' => 'select',
    '#options' => $chapters,
    '#default_value' => 0, /* start with Front Cover selected */
  );
  return $form;
}

/**
 * Prepare data for pageflip-html-viewer-html-document.tpl.php.
 *
 * @see pageflip-html-viewer-html-document.tpl.php
 */
function template_preprocess_pageflip_html_viewer_html_document(&$vars) {
  // Add favicon.
  if (theme_get_setting('toggle_favicon')) {
    $element = array(
      '#tag' => 'link',
      '#attributes' => array(
        'href' => check_url(theme_get_setting('favicon')),
        'rel' => 'shortcut icon',
        'type' => 'image/x-icon',
      ),
    );
    drupal_add_html_head($element, 'favicon');
  }

  // Theme the content first *before* calling drupal_get_js()--the theme
  // functions need to add JS.
  $vars['content'] = theme('pageflip_html_viewer_book',
    array(
      'book' => $vars['book'],
      'chapters' => $vars['chapters'],
      'settings' => $vars['settings'],
    )
  );
  $vars['head'] = drupal_get_html_head();
  $vars['title'] = check_plain($vars['book']->title);
  $vars['styles'] = drupal_get_css();
  $vars['scripts'] = drupal_get_js();
}

/**
 * Injects advertisements.
 */
function pageflip_html_viewer_inject_ads(&$chapters) {
  $last_chapter = count($chapters) - 1;
  if ($last_chapter <= 0) {
    return;
  }

  // Inject either one or two ad pages after cover & credits pages
  // this will make chapter 0 an ODD LENGTH so that chapter 1 starts on the
  // right-hand side.
  $num_ads = (count($chapters[0]['pages']) % 2) + 1;
  $chapters[0]['pages'] = array_merge($chapters[0]['pages'], pageflip_ad($num_ads));

  $page_count = 0;
  for ($index = 0; $index <= $last_chapter; $index++) {
    // Don't start a chapter on the left; add a leading blank page
    // *to the previous chapter*.
    // Exceptions:
    // - Ch. 0: Cover page goes on the left (and there's no previous chapter).
    // - Ch. 1: We already set it up, above, with 1-2 ads tacked onto chapter 0.
    if ($index >= 2 && ($page_count % 2) == 0) {
      $chapters[$index - 1]['pages'] = array_merge($chapters[$index - 1]['pages'], array(NULL));

      // Don't forget we just added a page to the PREVIOUS chapter
      // if we don't increment here, we wouldn't count it.
      $page_count++;
    }
    $page_count += count($chapters[$index]['pages']);
  }

  // Add an ad or two depending on length of last chapter.
  // Remember, the last chapter will start on the right.
  // If the last chapter ENDS on a right page, we want two ads.
  // If it ends on a left page we want one.
  $num_ads = (count($chapters[$last_chapter]['pages']) % 2) + 1;
  $chapters[$last_chapter]['pages'] = array_merge($chapters[$last_chapter]['pages'], pageflip_ad($num_ads));
}

/**
 * Prepare data for book template.
 */
function template_preprocess_pageflip_html_viewer_book(&$vars) {
  $vars['title'] = check_plain($vars['book']->title);
  $vars['content'] = '';
  $vars['switch_link'] = pageflip_html_viewer_switch_link($vars['book'], $vars['settings']);
  $vars['share_widget'] = variable_get('pageflip_html_viewer_share_widget', '');
  $vars['chapter_form'] = drupal_get_form('pageflip_html_viewer_chapter_form', $vars['book']);
  $vars['site_link'] = pageflip_html_viewer_site_link();
  $chapter_index = 0;
  $last_chapter = count($vars['chapters']) - 1;

  // Even-indexed pages: left side. odd: right side.
  $page_index = 0;
  $very_last_pair = FALSE;

  pageflip_html_viewer_inject_ads($vars['chapters']);

  $page_width = $vars['settings']['page_width'];
  $page_height = $vars['settings']['page_height'];
  $vars['content_container_attributes'] = drupal_attributes(array(
    'style' => 'width: ' . ($page_width * 2) . "px; height: {$page_height}px",
  ));

  // Method: go through all the pages in each chapter, processing them in pairs.
  foreach ($vars['chapters'] as $chapter) {
    $last_page = count($chapter['pages']) - 1;

    // Always start as first pair of chapter.
    $pair_index = 0;

    // Process each page in the chapter.
    foreach ($chapter['pages'] as $page) {
      if (($page_index % 2) == 0) {
        $left_page = $page;
      }
      else {
        if ($chapter_index >= $last_chapter && $pair_index >= (count($chapter['pages']) / 2 - 1)) {
          $very_last_pair = TRUE;
        }

        $right_page = $page;
        $vars['content'] .= theme(
          'pageflip_html_viewer_page_pair',
          array(
            'book' => $vars['book'],
            'settings' => $vars['settings'],
            'left_page' => $left_page,
            'right_page' => $right_page,
            'chapter_index' => $chapter_index,
            'pair_index' => $pair_index,
            'page_index' => $page_index - 1, /* give index of left_page */
            'page_width' => $page_width,
            'page_height' => $page_height,
            'very_last_pair' => $very_last_pair,
          )
        );
        $pair_index++;
      }
      $page_index++;
    }
    $chapter_index++;
  }
  $settings = array(
    'pageFlip' => array(
      'numChapters' => count($vars['chapters']),
      'curPage' => 0,
      'totalPages' => _pageflip_html_viewer_count_pages($vars['chapters']),
      'chapters' => array(),
      'isMobile' => pageflip_is_mobile(),
      'mobileHelpMessage' => check_plain(variable_get('pageflip_html_viewer_mobile_help_message', '')),
      'callbacks' => array(
        'pageChange' => array(),
      ),
    ),
  );
  foreach ($vars['chapters'] as $chapter) {
    $settings['pageFlip']['chapters'][] = array(
      'numPages' => count($chapter['pages']),
    );
  }
  drupal_add_js($settings, 'setting');
}

/**
 * Counts total number of pages in an array of chapters, where each chapter is
 * an array of arrays as loaded by pageflip_load_book().
 */
function _pageflip_html_viewer_count_pages($chapters) {
  $total = 0;
  foreach ($chapters as $chapter) {
    $total += count($chapter['pages']);
  }
  return $total;
}

/**
 * Prepare data for a page pair.
 *
 * @param array $vars
 *   Array containing:
 *   - object book: Book node object.
 *   - array settings: HTML viewer settings (which resolution to use).
 *   - object left_page, object right_page: Page node objects or NULL to
 *     indicate blank pages.
 *   - int chapter_index: Which chapter in the book we are (0-based; chapter 0
 *     is front cover, credits pages, etc.).
 *   - int pair_index: Which page-pair in this chapter we are (0-based).
 */
function template_preprocess_pageflip_html_viewer_page_pair(&$vars) {
  $options = array('absolute' => TRUE);

  $vars['page_attributes'] = drupal_attributes(array(
    'style' => "width: {$vars['page_width']}px; height: {$vars['page_height']}px;",
  ));
  $vars['pair_attributes'] = drupal_attributes(array(
    'style' => "width: " . ($vars['page_width'] * 2) . "px; height: {$vars['page_height']}px;",
  ));
  foreach (array('left' => $vars['left_page'], 'right' => $vars['right_page']) as $which => $page) {
    $vars[$which] = array();
    if (!$page) {
      // Blank page.
      $vars[$which]['content'] = NULL;
      $vars[$which]['image'] = NULL;
    }
    elseif ($page->type !== PAGEFLIP_PAGE_CONTENT_TYPE || !empty($page->content['body']['#value'])) {
      // Assume this is an advertisement or other HTML content.
      $vars[$which]['content'] = token_replace($page->content['body']['#value'], array('site' => NULL, 'node' => $vars['book']));
    }
    else {
      // A normal book page.
      $vars[$which]['content'] = NULL;
      if ($vars['settings']['resolution'] == PAGEFLIP_VIEWER_HIGH_RES) {
        $vars[$which]['image'] = pageflip_page_image_url($page, 'high');
      }
      else {
        $vars[$which]['image'] = pageflip_page_image_url($page, 'low');
      }
    }
  }
}
