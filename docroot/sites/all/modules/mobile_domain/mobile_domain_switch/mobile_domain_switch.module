<?php
/**
 * @file
 * Switch mobile, Drupal module.
 */

/**
 * Cookie and parameter name prefix
 */
define('MOBILE_DOMAIN_SWITCH_PREFIX', 'mobile_domain_switch');

/*
 * Cookie value:
 * 1 = The site was switched, then switched back.
 * 0 = The site was switched, but not back.
 */
define('MOBILE_DOMAIN_SWITCH_AUTO_REDIRECT', 0);
define('MOBILE_DOMAIN_SWITCH_MANUAL_REDIRECT', 1);

/**
 * Implements hook_boot()
 */
function mobile_domain_switch_boot() {
  // Get current mode based on domain (standard|mobile)
  $current_mode = mobile_domain_current_mode();

  // If we are not in redirect mode, check cookies, domain and browser.
  if (!isset($_GET[MOBILE_DOMAIN_SWITCH_PREFIX]) && strpos($_GET['q'], 'sitemap.xml') === FALSE) {
    if ($cookie = _mobile_domain_switch_get_cookie()) {
      if ($cookie != $current_mode) {
        _mobile_domain_switch_boot_redirect($cookie);
      }
    }
    elseif ($browser_mode = mobile_domain_browser_mode()) {
      if ($current_mode === $browser_mode) {
        // We are fine, just set the cookie.
        _mobile_domain_switch_set_cookie($current_mode);
      }
      else {
        // We need to redirect, set the cookie first if possible
        _mobile_domain_switch_set_cookie($browser_mode);
        _mobile_domain_switch_boot_redirect($browser_mode);

      }
    }
  }
  // If it is a crawler we don't set cookie nor redirect anything.
}

/**
 * Redirect from bootstrap mode.
 */
function _mobile_domain_switch_boot_redirect($mode) {
  require_once DRUPAL_ROOT . '/includes/common.inc';
  require_once DRUPAL_ROOT . '/' . variable_get('path_inc', 'includes/path.inc');

  if ($options = _mobile_domain_switch_options($mode, $manual)) {
    drupal_goto(current_path(), $options);
  }
}

/**
 * Implements hook_init()
 */
function mobile_domain_switch_init() {
  if (isset($_GET[MOBILE_DOMAIN_SWITCH_PREFIX])) {
    // Set a cookie for switched clients so we don't switch again.
    _mobile_domain_switch_set_cookie(mobile_domain_current_mode());
    // If not a manual redirect, set message.
    if (!$_GET[MOBILE_DOMAIN_SWITCH_PREFIX]) {
      drupal_set_message(_mobile_domain_switch_message());
    }
  }
}

/**
 * Implements hook_html_head_alter().
 *
 * Adds rel attribute for cross linking mobile and standard pages.
 * See https://developers.google.com/webmasters/smartphone-sites/details
 */
function mobile_domain_switch_html_head_alter(&$head_elements){
  $mode = mobile_domain_switch_mode();
  if ($options = _mobile_domain_switch_options($mode, TRUE)) {
    // This is not a switcher link so remove the query value.
    unset($options['query'][MOBILE_DOMAIN_SWITCH_PREFIX]);
    $href = url(current_path(), $options);

    switch ($mode) {
      case MOBILE_DOMAIN_MODE_MOBILE:
        $attributes = array(
          'href' => $href,
          'rel' => 'alternate',
          'media' => 'only screen and (max-width: 640px)'
        );
        break;
      case MOBILE_DOMAIN_MODE_STANDARD:
        $attributes = array(
          'href' => $href,
          'rel' => 'canonical',
        );
        break;
    }
    $element = array(
      '#tag' => 'link', // The #tag is the html tag - <link />
      '#attributes' => $attributes,
      '#type' => 'html_tag'
    );
    $head_elements['mobile_domain:' . $mode] = $element;
  }
}

/**
 * Implements hook_block_info().
 */
function mobile_domain_switch_block_info() {
  $blocks['switch']['info'] = t('Mobile domain switcher');
  // Cannot be cached as it depends on each URL.
  $blocks['switch']['cache'] = DRUPAL_NO_CACHE;
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mobile_domain_switch_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'switch':
      if ($link = mobile_domain_switch_link()) {
        $block['content'] = $link;
        return $block;
      }
  }
}

/**
 * Get switch link (Mobile / Full).
 *
 * @return string|NULL
 *   HTML switch link
 */
function mobile_domain_switch_link() {
  $mode = mobile_domain_switch_mode();
  if ($options = _mobile_domain_switch_options($mode, TRUE)) {
    $text = $mode == MOBILE_DOMAIN_MODE_MOBILE ? t('Mobile version') : t('Full version');
    return l($text, current_path(), $options);
  }
}

/**
 * Get switch mode, different to current mode.
 */
function mobile_domain_switch_mode() {
  return mobile_domain_current_mobile() ? MOBILE_DOMAIN_MODE_STANDARD : MOBILE_DOMAIN_MODE_MOBILE;
}

/**
 * Get cookie value, FALSE if not set.
 */
function _mobile_domain_switch_get_cookie() {
  $name = MOBILE_DOMAIN_SWITCH_PREFIX . '_' . mobile_domain_current_mode();
  return isset($_COOKIE[$name]) ? $_COOKIE[$name] : FALSE;
}

/**
 * Set cookie value
 */
function _mobile_domain_switch_set_cookie($value) {
  setrawcookie(MOBILE_DOMAIN_SWITCH_PREFIX . '_' . mobile_domain_current_mode(), $value, REQUEST_TIME + 86400, '/');
}

/**
 * Get mobile switch URL
 *
 * @param $manual
 *   Whether this is an URL for manual switching.
 */
function _mobile_domain_switch_url($mode, $manual = FALSE) {
  if ($options = _mobile_domain_switch_options($mode, $manual)) {
    return url(current_path(), $options);
  }
}

/**
 * Build link options for switching domain.
 *
 * @param $manual
 *   Whether this is an URL for manual switching.
 */
function _mobile_domain_switch_options($mode, $manual = FALSE) {
  if ($base_url = mobile_domain_base_url($mode)) {
    $options['query'] = drupal_get_query_parameters();
    $options['query'][MOBILE_DOMAIN_SWITCH_PREFIX] = $manual ? MOBILE_DOMAIN_SWITCH_MANUAL_REDIRECT : MOBILE_DOMAIN_SWITCH_AUTO_REDIRECT;
    $options['base_url'] = $base_url;
    $options['absolute'] = TRUE;
    return $options;
  }
}


/**
 * Get switching message.
 */
function _mobile_domain_switch_message() {
  if (mobile_domain_check_domain()) {
    // Shorter message, for mobile.
    $message = t('Redirected to mobile page. <a href="!switch-url">Switch to full version</a>.', array('!switch-url' => _mobile_domain_switch_url('standard', TRUE)));
  }
  else {
    $message = t('You have been redirected to the full page. <a href="!switch-url">Switch to mobile version</a>.', array('!switch-url' => _mobile_domain_switch_url('mobile', TRUE)));
  }
  return $message; //'<div class="switch-mobile-message">' . $message . '</div>';
}

