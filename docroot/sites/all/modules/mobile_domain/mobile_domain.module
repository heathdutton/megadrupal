<?php
/**
 * @file
 * Switch mobile, Drupal module.
 */

/**
 * Strings representing different site modes.
 */
define('MOBILE_DOMAIN_MODE_MOBILE', 'mobile');
define('MOBILE_DOMAIN_MODE_STANDARD', 'standard');

/**
 * Implements hook_boot()
 */
function mobile_domain_boot() {
  // Load the module on bootstrap
}

/**
 * Implements hook_menu()
 */
function mobile_domain_menu() {
  $items['admin/structure/domain/mobile'] = array(
    'title' => t('Mobile'),
    'description' => t('Configure mobile version of the site.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('variable_group_form', 'mobile_domain'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/system/movil/options'] = array(
    'title' => t('Options'),
    'description' => t('Options for mobile domain'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  return $items;
}

/**
 * List site modes (mobile|standard)
 */
function mobile_domain_mode_list() {
  return array(
    MOBILE_DOMAIN_MODE_MOBILE => t('Mobile'),
    MOBILE_DOMAIN_MODE_STANDARD => t('Standard'),
  );
}

/**
 * Check whether the site is on the mobile domain.
 */
function mobile_domain_check_domain() {
  return mobile_domain_current_mode() === MOBILE_DOMAIN_MODE_MOBILE;
}

/**
 * Get the current mode for the site depending on current domain (standard|mobile)
 */
function mobile_domain_current_mode() {
  return variable_get('mobile_domain_type', MOBILE_DOMAIN_MODE_STANDARD);
}

/**
 * Check whether current domain is the mobile one.
 */
function mobile_domain_current_mobile() {
  return mobile_domain_current_mode() === MOBILE_DOMAIN_MODE_MOBILE;
}

/**
 * Get the mode for the site checking browser domain (standard|mobile)
 *
 * Return FALSE for a crawler.
 */
function mobile_domain_browser_mode() {
  if (mobile_domain_check_browser('crawler')) {
    return FALSE;
  }
  else {
    return mobile_domain_check_browser() ? MOBILE_DOMAIN_MODE_MOBILE : MOBILE_DOMAIN_MODE_STANDARD;
  }
}

/**
 * Check browser capabilities.
 *
 * Bootstrap safe: Load browscap module if not loaded
 *
 * @param string $property
 *   Property to check.
 */
function mobile_domain_check_browser($property = 'ismobiledevice') {
  static $browser;
  if (!isset($browser)) {
    if (!function_exists('browscap_get_browser')) {
      drupal_load('module', 'browscap');
    }
    $browser = browscap_get_browser(NULL);
  }
  if (!isset($browser[$property]) || $browser[$property] === 'false') {
    return FALSE;
  }
  else {
    return $browser[$property];
  }
}

/**
 * Get linked domain.
 */
function mobile_domain_linked_domain() {
  $domain = &drupal_static(__FUNCTION__);
  if (!isset($domain)) {
    if ($domain_name = variable_get('mobile_domain_linked')) {
      $domain_id = domain_load_domain_id($domain_name);
      $domains = domain_domains();
      return $domains[$domain_id];
    }
    else {
      $domain = FALSE;
    }
  }
  return $domain;
}

/**
 * Get base URL depending on mode.
 */
function mobile_domain_base_url($mode) {
  global $base_url;

  if (mobile_domain_current_mode() === $mode) {
    return $base_url;
  }
  elseif ($domain = mobile_domain_linked_domain()) {
    return domain_check_scheme($domain['scheme']) . '://' . $domain['subdomain'];
  }
  else {
    return NULL;
  }
}

/**
 * List existing domains array('machine_name' => domain_name);
 */
function _mobile_domain_list_domains() {
  $list = array();
  foreach (domain_domains() as $id => $domain) {
    $list[$domain['machine_name']] = $domain['sitename'];
  }
  return $list;
}