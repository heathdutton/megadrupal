<?php

/**
 * @author "Ahmad Hesamzadeh" <mngafa@gmail.com>
 * @file "Provides a text format for easily creating ngsl links in contents."
 */

/**
 * Implements hook_filter_info().
 */
function ngsl_textformat_filter_info() {
  $filters = array();

  $filters['filter_nginx_securelink'] = array(
    'title' => t('Nginx securelink filter'),
    'description' => t('Converts [ngsl=folder/file.ext] to a NGSL file request for the given file path.'),
    'process callback'  => '_ngsl_textformat_filter_nginx_securelink_process',
    'tips callback' => '_ngsl_textformat_filter_nginx_securelink_tips',
  );

  return $filters;
}

/**
 * nginx_securelink filter process callback.
 */
function _ngsl_textformat_filter_nginx_securelink_process($text, $filter, $format) {
  // Allowed chars in file path: alphanumeric, unicode alphanumeric, -,@=+#/.
  $pattern = '/\[ngsl ?\= ?([\w\-\,\@\=\+\#\.\/]+)\]/iu';

  // The base url of the request link page
  $url = url('requestlink', array('absolute' => TRUE));

  // Pattern for replace
  $replace = $url . '/$1.html';

  return preg_replace($pattern, $replace, $text);
}

/**
 * Filter tips callback for nginx_securelink filter.
 */
function _ngsl_textformat_filter_nginx_securelink_tips($filter, $format, $long = FALSE) {
  if (!$long) {
    // Short description
    return t('[ngsl=folder/file.ext] is converted to a NGSL file request for the given file path.');
  }
  else {
    // Full description
    return t('Allows the user to easily create NGSL file requests by putting the address of the file inside [ngsl=folder/file.ext]. This filter converts [ngsl=folder/file.ext] to a NGSL file request for the given file path.');
  }
}
