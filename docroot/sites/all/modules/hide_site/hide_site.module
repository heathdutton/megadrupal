<?php

/**
 * @file
 * Hide Site module main file
 */

/**
 * Implements hook_menu().
 */
function hide_site_menu() {
  $items['admin/config/system/hide-site'] = array(
    'title' => 'Hide Site settings',
    'page callback' => 'hide_site_config',
    'description' => 'Configuration for Hide Site module',
    'access arguments' => array('configure hide site'),
    'file' => 'hide_site.admin.inc',
  );

  $items['hide-site-access'] = array(
    'title' => 'This site is currently hidden',
    'page callback' => 'hide_site_access_prompt_page',
    'description' => 'Please provide access credentials.',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function hide_site_permission() {
  return array(
    'configure hide site' => array(
      'description' => t('Configure Hide Site settings.'),
      'title' => t('Configure Hide Site settings'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_boot().
 */
function hide_site_boot() {
  if ($_GET['q'] == 'hide-site-access') {
    global $conf;
    $conf['theme_default'] = 'seven';
  }
}

/**
 * Implements hook_init().
 */
function hide_site_init() {

  // Check current path isn't excluded in the admin configuration
  $exclude_paths = variable_get('hide_site_exclude_paths', FALSE);

  if ($exclude_paths) {

    $path = current_path();

    // Check against pure drupal paths and path aliases
    if (drupal_match_path($path, $exclude_paths) || drupal_match_path(drupal_get_path_alias($path), $exclude_paths)) {
      return;
    }

  }

  $authenticated = !empty($_SESSION['hide_site_access_allowed']) && $_SESSION['hide_site_access_allowed'] == TRUE;

  if (_not_ajax_or_drush() && $_GET['q'] !== 'hide-site-access' && !$authenticated) {

    $module_enabled = (bool) variable_get('hide_site_enabled', 0);

    $whitelist = variable_get('hide_site_whitelist', '');

    // Check whether current http host is matched in the configuration
    if ($module_enabled && !empty($whitelist) && !drupal_match_path($_SERVER['HTTP_HOST'], $whitelist)) {
      drupal_goto('hide-site-access', array('query' => array('destination' => drupal_get_path_alias($_GET['q']))));
    }

  }

}

/**
 * Implements hook_page_alter().
 */
function hide_site_page_alter(&$page) {
  if ($_GET['q'] == 'hide-site-access') {
    // Remove every page element except for the main content
    foreach (element_children($page) as $element) {
      if ($element !== 'content') {
        unset($page[$element]);
      }
    }
    unset($page['content']['user_login']);
  }
}

/**
 * Username / Password prompt page
 */
function hide_site_access_prompt_page() {
  $title = variable_get('hide_site_message', t("This site is currently hidden"));
  drupal_set_title($title);
  return render(drupal_get_form('hide_site_access_prompt_form'));
}

/**
 * Form prompting access credentials
 */
function hide_site_access_prompt_form($form, &$form_state) {

  $form['intro_text'] = array(
    '#markup' => t("Please enter the required username and password to enter @site_name", array('@site_name' => variable_get('site_name', t("this site")))),
  );

  $form['user'] = array(
    '#type' => 'textfield',
    '#title' => t("Username"),
  );

  $form['pass'] = array(
    '#type' => 'password',
    '#title' => t("Password"),
  );

  $form['actions']['#type'] = 'actions';
  $form['actions']['submit'] = array('#type' => 'submit', '#value' => t("Log in"));

  return $form;
}

function hide_site_access_prompt_form_submit($form, &$form_state) {
  if ($form_state['values']['user'] == variable_get('hide_site_user', '') && $form_state['values']['pass'] == variable_get('hide_site_pass', '')) {
    $_SESSION['hide_site_access_allowed'] = TRUE;
    drupal_goto(drupal_get_destination());
    drupal_set_message(t("You can now view the @site_name site.", array('@site_name' => variable_get('site_name', ''))));
  }
  else {
    drupal_set_message(t("The details you entered were incorrect."), 'error');
  }

}

/**
 * Utility function to determine whether a request is derived from AJAX or drush
 */
function _not_ajax_or_drush() {
  if (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) || php_sapi_name() == 'cli') {
    return FALSE;
  }
  return TRUE;
}
