<?php
/**
 * @file
 * Core functions for the Contextual modules module.
 */

/**
 * Implements hook_init().
 */
function context_module_init() {
  $plugin = context_get_plugin('reaction', 'module');
  if ($plugin) {
    $plugin->execute();
  }
}

/**
 * Implements hook_theme().
 */
function context_module_theme() {
  $items = array();

  $items['context_module_form'] = array(
    'render element' => 'form',
  );

  return $items;
}

/**
 * Implements hook_context_plugins().
 */
function context_module_context_plugins() {
  $plugins = array();

  $plugins['context_reaction_module'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'context_module') . '/plugins',
      'file' => 'context_reaction_module.inc',
      'class' => 'context_reaction_module',
      'parent' => 'context_reaction',
    ),
  );

  return $plugins;
}

/**
 * Implements hook_context_registry().
 */
function context_module_context_registry() {
  $registry = array();

  $registry['reactions'] = array(
    'module' => array(
      'title' => t('Modules'),
      'description' => t('Enable or disable Drupal modules'),
      'plugin' => 'context_reaction_module',
    ),
  );

  return $registry;
}

/**
 *
 */
function context_module_modules_get() {
  // Get current list of modules.
  $files = system_rebuild_module_data();

  // Remove hidden modules from display list.
  $visible_files = $files;
  foreach ($visible_files as $filename => $file) {
    if (! empty($file->info['hidden'])) {
      unset($visible_files[$filename]);
    }
  }

  module_load_include('inc', 'system', 'system.admin');
  uasort($visible_files, 'system_sort_modules_by_info_name');

  return $visible_files;
}

/**
 * Theme callback for context options form.
 */
function theme_context_module_form($variables) {
  $form = $variables['form'];
  $module_info = context_module_modules_get();

  drupal_add_css(drupal_get_path('module', 'context_module') . '/context_module.css');

  $enable = array();
  $disable = array();
  if (isset($form['module'])) {
    foreach (element_children($form['module']) as $module) {
      ${$form['module'][$module]['#value']}[] = array(
        render($form['module'][$module]) . $module_info[$module]->info['name'],
        render($form['remove'][$module]),
      );
    }
  }

  // Enable module.
  if (empty($enable)) {
    $enable = array(array(array(
      'colspan' => 2,
      'data' => t('No modules are set to be enabled.'),
    )));
  }
  $enable = theme('table', array(
    'header' => array(array(
      'colspan' => 2,
      'data' => t('Enable'),
    )),
    'rows' => $enable,
  ));

  // Disable module.
  if (empty($disable)) {
    $disable = array(array(array(
      'colspan' => 2,
      'data' => t('No modules are set to be disabled.'),
    )));
  }
  $disable = theme('table', array(
    'header' => array(array(
      'colspan' => 2,
      'data' => t('Disable'),
    )),
    'rows' => $disable
  ));

  return $enable . $disable . render($form['add']);
}
