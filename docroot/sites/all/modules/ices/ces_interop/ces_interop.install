<?php
/**
 * @file
 * Installation for ces_interop module.
 */

/**
 * Implements hook_install().
 *
 * Attach field transaction to oauth2 authorisation codes and tokens.
 */
function ces_interop_install() {
  // Create transaction field and instances for authorization code, access token
  // and refresh token from oauth2_server module.
  if (!field_info_field('ces_interop_transaction')) {
    field_create_field(array(
      'field_name' => 'ces_interop_transaction',
      'type' => 'number_integer',
      'cardinality' => 1,
    ));
    field_create_instance(array(
      'field_name' => 'ces_interop_transaction',
      'entity_type' => 'oauth2_server_authorization_code',
      'bundle' => 'oauth2_server_authorization_code',
    ));
    field_create_instance(array(
      'field_name' => 'ces_interop_transaction',
      'entity_type' => 'oauth2_server_token',
      'bundle' => 'access',
    ));
    field_create_instance(array(
      'field_name' => 'ces_interop_transaction',
      'entity_type' => 'oauth2_server_token',
      'bundle' => 'refresh',
    ));
  }

  // Create Oauth2 server for ICES interop services.
  $server = entity_create('oauth2_server', array());
  $server->name = CES_INTEROP_OAUTH2_SERVER_NAME;
  $server->label = 'ICES Interop';
  $server->settings = array(
    'default_scope' => CES_INTEROP_OAUTH2_OPENTRANSACT_SCOPE_NAME,
    'enforce_state' => TRUE,
    'allow_implicit' => FALSE,
    'require_exact_redirect_uri' => TRUE,
    'grant_types' => array(
      'authorization_code' => 'authorization_code',
      'client_credentials' => 0,
      'refresh_token' => 'refresh_token',
      'password' => 0,
    ),
    'always_issue_new_refresh_token' => TRUE,
    'access_lifetime' => 3600,
    'refresh_token_lifetime' => 1209600,
  );
  $server->save();

  // Create OAuth2 scope for OpenTransact protocol.
  $scope = entity_create('oauth2_server_scope', array());
  $scope->server = $server->name;
  $scope->name = CES_INTEROP_OAUTH2_OPENTRANSACT_SCOPE_NAME;
  $scope->description = 'Do financial operations with OpenTransact protocol.';
  $scope->save();

  // Create OAuth2 scope for resurces API.
  $scope = entity_create('oauth2_server_scope', array());
  $scope->server = $server->name;
  $scope->name = CES_INTEROP_OAUTH2_RESOURCES_SCOPE_NAME;
  $scope->description = 'Access your account data';
  $scope->save();

  // Create services endpoint. Code automatically created from the export
  // feature of services module.
  $endpoint = new stdClass();
  $endpoint->disabled = FALSE;
  $endpoint->api_version = 3;
  $endpoint->name = 'ces_interop_resources';
  $endpoint->server = 'rest_server';
  $endpoint->path = 'ces/interop/resources';
  $endpoint->authentication = array(
    'oauth2_server' => array(
      'server' => CES_INTEROP_OAUTH2_SERVER_NAME,
    ),
  );
  $endpoint->server_settings = array(
    'formatters' => array(
      'json' => TRUE,
      'xml' => FALSE,
      'bencode' => FALSE,
      'jsonp' => FALSE,
      'php' => FALSE,
    ),
    'parsers' => array(
      'application/json' => TRUE,
      'application/x-www-form-urlencoded' => TRUE,
      'application/xml' => FALSE,
      'text/xml' => FALSE,
      'application/vnd.php.serialized' => FALSE,
      'multipart/form-data' => FALSE,
    ),
  );
  $operations = array(
    'retrieve' => array(
      'enabled' => '1',
      'settings' => array(
        'oauth2_server' => array(
          'require_authentication' => '1',
          'scope' => CES_INTEROP_OAUTH2_RESOURCES_SCOPE_NAME,
        ),
      ),
    ),
  );
  $endpoint->resources = array(
    'ces_account' => array(
      'alias' => 'account',
      'operations' => $operations,
    ),
    'ces_transaction' => array(
      'alias' => 'transaction',
      'operations' => $operations,
    ),
    'ces_user' => array(
      'alias' => 'user',
      'operations' => $operations,
    ),
  );
  // Avoid PHP warning.
  $endpoint->export_type = EXPORT_IN_CODE;
  services_endpoint_save($endpoint);
}
/**
 * Implements hook_uninstall().
 */
function ces_interop_uninstall() {
  // Load constants definition.
  require_once drupal_get_path('module', 'ces_interop') . '/ces_interop.module';
  // Delete field attached to oauth2_server entities.
  field_delete_field('ces_interop_transaction');
  // Delete oauth2_server scopes and server.
  $scope = oauth2_server_scope_load(CES_INTEROP_OAUTH2_SERVER_NAME, CES_INTEROP_OAUTH2_OPENTRANSACT_SCOPE_NAME);
  entity_delete('oauth2_server_scope', $scope->identifier());
  $scope = oauth2_server_scope_load(CES_INTEROP_OAUTH2_SERVER_NAME, CES_INTEROP_OAUTH2_RESOURCES_SCOPE_NAME);
  entity_delete('oauth2_server_scope', $scope->identifier());
  $server = oauth2_server_load(CES_INTEROP_OAUTH2_SERVER_NAME);
  entity_delete('oauth2_server', $server->identifier());
  // Delete services endpoint.
  $endpoint = services_endpoint_load('ces_interop_resources');
  services_endpoint_delete($endpoint);
}
/**
 * Implements hook_schema().
 */
function ces_interop_schema() {
  $schema = array();
  $schema['ces_transaction_centxid'] = array(
    'description' => 'Community Exchange network transaction ids.',
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'centxid' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'centxid' => array('centxid'),
    ),
  );
  return $schema;
}
/**
 * Add CEN transaction id table.
 */
function ces_interop_update_7100() {
  $schema = ces_interop_schema();
  db_create_table('ces_transaction_centxid', $schema['ces_transaction_centxid']);
}
