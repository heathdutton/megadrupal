<?php
/**
 * @file
 * Implements the drupal hooks for this module.
 */

/**
 * @defgroup ces_blog Ces Blog
 * @ingroup ices
 * @{
 * Implements the drupal hooks for this module.
 */

/**
 * Implements hook_help().
 */
function ces_blog_help($path, $arg) {

}
/**
 * Implements hook_menu().
 */
function ces_blog_menu() {
  $menu = array();
  $menu['ces/bank/exchange/blog'] = array(
    'title' => 'Blog',
    'description' => 'View exchange posts',
    'page callback' => 'ces_blog_page',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => 'ces_bank_access',
    'access arguments' => array('view', 'exchange blog',
      CES_BANK_CURRENT_EXCHANGE),
    'expanded' => TRUE,
    'weight' => 210,
  );
  $menu['ces/admin/post'] = array(
    'title' => 'Post',
    'description' => 'Add new blog post',
    'page callback' => 'ces_blog_add_post',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => 'ces_bank_access',
    'access arguments' => array('admin', 'exchange blog',
      CES_BANK_CURRENT_EXCHANGE),
    'expanded' => TRUE,
    'weight' => 0,
  );
  return $menu;
}
/**
 * Page callback for adding new from exchange admin menu.
 */
function ces_blog_add_post() {
  drupal_goto('node/add/ces-blog');
}
/**
 * Implements hook_node_info().
 */
function ces_blog_node_info() {
  return array(
    'ces_blog' => array(
      'name' => t('Exchange blog entry'),
      'base' => 'ces_blog',
      'description' => t('Blog post for members of your exchange'),
    ),
  );
}
/**
 * Current exchange blog posts teaser page.
 */
function ces_blog_page() {
  $page = array();
  $query = new EntityFieldQuery();
  $exchange = ces_bank_get_current_exchange();
  $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'ces_blog')
        ->propertyCondition('status', 1)
        ->fieldCondition('ces_blog_exchange', 'value', $exchange['id'])
        ->propertyOrderBy('created', 'DESC')
        ->pager(10);
  $result = $query->execute();
  if (isset($result['node']) && count($result['node']) > 0) {
    $nids = array_keys($result['node']);
    $page['list'] = array();
    foreach ($nids as $nid) {
      $node = node_load($nid);
      $page['list'][] = node_view($node, 'teaser');
    }
  }
  else {
    $page['p1'] = array(
      '#prefix' => '<p>',
      '#markup' => t('There are no blog posts yet.'),
      '#suffix' => '</p>',
    );
    if (ces_bank_access('admin', 'exchange blog', CES_BANK_CURRENT_EXCHANGE)) {
      $page['p2'] = array(
        '#prefix' => '<p>',
        '#markup' => l(t('Add new post'), 'node/add/ces-blog'),
        '#suffix' => '</p>',
      );
    }
  }
  return $page;
}
/**
 * Implements hook_field_widget_info().
 */
function ces_blog_field_widget_info() {
  return array(
    'ces_blog_exchange' => array(
      'label' => t('CES blog exchange'),
      'field types' => array('ces_blog_exchange'),
    ),
  );
}
/**
 * Implements hook_form_after().
 */
function ces_blog_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'ces_blog_node_form') {
    $form['title'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#default_value' => (isset($form_state['node']->title)) ? $form_state['node']->title : t('Title'),
      '#size' => 80,
      '#maxlength' => 255,
      '#required' => TRUE,
    );
  }
}
/**
 * Implements hook_field_widget_form().
 */
function ces_blog_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $widget = $element;
  $widget['#delta'] = $delta;
  switch ($instance['widget']['type']) {
    case 'ces_blog_exchange':
      $exchange = ces_bank_get_current_exchange();
      $widget += array(
        '#type' => 'value',
        '#value' => array('value' => $exchange['id']),
      );
  }
  return $widget;
}
/**
 * Implements hook_field_formatter_info().
 */
function ces_blog_field_formatter_info() {
  return array(
    'ces_blog_exchange' => array(
      'label' => t('Hidden formatter'),
      'field types' => array('ces_blog_exchange'),
    ),
  );
}
/**
 * Implements hook_field_formatter_view().
 */
function ces_blog_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'ces_blog_exchange':
      // Nothing.
  }
  return $element;
}
/**
 * Implements hook_node_access().
 */
function ces_blog_node_access($node, $op, $account) {
  $type = is_object($node) ? $node->type : $node;
  if ($type == 'ces_blog') {
    if ($op != 'view') {
      $op = 'admin';
    }
    if (ces_bank_access($op, 'exchange blog', CES_BANK_CURRENT_EXCHANGE, $account->uid)) {
      return NODE_ACCESS_ALLOW;
    }
    else {
      return NODE_ACCESS_DENY;
    }
  }
  return NULL;
}
/**
 * Implements hook_menu_alter().
 */
function ces_blog_menu_alter(&$items) {
  // Remove Add content from menu.
  $items['node/add']['type'] = MENU_CALLBACK;
}
/** @} */
