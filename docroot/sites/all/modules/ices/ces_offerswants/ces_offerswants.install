<?php
/**
 * @file
 * Install and uninstall ces offerswants module.
 */

/**
 * @defgroup ces_offerswants_install Install OffersWants
 * @ingroup ces_offerswants
 * @{
 * Install and uninstall ces offerswants module.
 */

/**
 * Implements hook_schema().
 */
function ces_offerswants_schema() {
  $schema = array();
  $schema['ces_offerwant'] = array(
    'description' => 'Main table for offers and wants entities.',
    'fields' => array(
      'id' => array(
        'description' => 'ID of this offer or want',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of this entity. It is one of: offer, want.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'user' => array(
        'description' => 'UID of the owner user',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of this offer or want, always treated as non-markup plain text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'body' => array(
        'description' => 'The body of this offer or want. It is HTML.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'image' => array(
        'description' => 'Image source for this offer or want.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'category' => array(
        'description' => 'Reference to category table.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'keywords' => array(
        'description' => 'Keywords for this offer or want',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'state' => array(
        'description' => 'The state of this offer. 0 = hidden, 1 = public',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'modified' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'expire' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['ces_category'] = array(
    'description' => 'Table for offers and wants categories.',
    'fields' => array(
      'id' => array(
        'description' => 'ID of this offer or want',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'parent' => array(
        'description' => 'Parent category',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'Title for this category',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'Detailed description of this category',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'exchange' => array(
        'description' => 'The id of the exchange where this category belongs',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'context' => array(
        'description'   => 'Whether this category is applicable to offers (1), wants (2), both (3) or none (0)',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'parent' => array(
        'table' => 'ces_category',
        'columns' => array('parent' => 'id'),
      ),
    ),
  );
  $schema['ces_offercomment'] = array(
    'description' => 'Table for comments and ratings on offers.',
    'fields' => array(
      'cid' => array(
        'description' => 'Primary Key: Unique comment ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'oid' => array(
        'description' => 'The {ces_offerwant}.id of the parent offer.',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid who authored the comment.',
      ),
      'body' => array(
        'description' => 'The body of this comment. It is HTML.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'rating' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'description' => 'Rating of the offer: from 0 to 5.',
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time that the comment was created, as a Unix timestamp.',
      ),
    ),
    'primary key' => array('cid'),
  );
  return $schema;
}

/**
 * Implements hook_update_N().
 */
function ces_offerswants_update_7100() {
  $schema['ces_offercomment'] = array(
    'description' => 'Table for comments and ratings on offers.',
    'fields' => array(
      'cid' => array(
        'description' => 'Primary Key: Unique comment ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'oid' => array(
        'description' => 'The {ces_offerwant}.id of the parent offer.',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid who authored the comment.',
      ),
      'body' => array(
        'description' => 'The body of this comment. It is HTML.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'rating' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'description' => 'Rating of the offer: from 0 to 5.',
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time that the comment was created, as a Unix timestamp.',
      ),
    ),
    'primary key' => array('cid'),
  );
  db_create_table('ces_offercomment', $schema['ces_offercomment']);
}

/**
 * Implements hook_install().
 */
function ces_offerswants_install() {
  $t = get_t();

  // Create price field.
  $field = array(
    'field_name' => 'ces_offer_rate',
    'type' => 'text',
    'cardinality' => 1,
  );
  $field = field_create_field($field);
  $instance = array(
    'field_name' => 'ces_offer_rate',
    'entity_type' => 'ces_offerwant',
    'bundle' => 'offer',
    'label' => 'Rate',
    'widget' => array(
      'type' => 'text_textfield',
      'weight' => 10,
    ),
    'display' => array(
      'default' => array('type' => 'ces_offer_rate'),
    ),
  );
  $instance = field_create_instance($instance);
}
/**
 * Implements hook_uninstall().
 */
function ces_offerswants_uninstall() {
  drupal_uninstall_schema(ces_offerswants_schema());
  // Delete price field.
  field_delete_field('ces_offer_rate');
  $instances = field_info_instances('ces_offerwant', 'ces_offer_rate');
  if (empty($instances)) {
    return;
  }

  foreach ($instances as $instance) {
    field_delete_instance($instance);
  }
  field_purge_batch(1000);
}
/** @} */
