<?php

/**
 * @file
 * Main file for media_by_path module which provides a mechanism to load specific stylesheets according to
 * the current path.
 */

/**
 * Implements hook_theme().
 */
function media_by_path_theme($existing, $type, $theme, $path) {
  $theme_default = variable_get('theme_default', '');
  if (empty($theme_default)) {
    drupal_set_message(t("No default theme has been choosen."), 'warning');
  }

  $themes = list_themes();
  $theme = $themes[$theme_default];

  $styles = array();
  if (array_key_exists('path-stylesheets', $theme->info)) {
    $theme_path = drupal_get_path('theme', $theme->name);
    foreach ($theme->info['path-stylesheets'] as $path => $style) {
      foreach ($style as $media => $files) {
        foreach ($files as $file) {
          $styles[$theme_default][$path][] = array(
            'path' => $theme_path . '/' . $file,
            'media' => $media,
          );
        }
      }
    }
  }
  variable_set('media_by_path_styles', $styles);

  $scripts = array();
  if (array_key_exists('path-scripts', $theme->info)) {
    $theme_path = drupal_get_path('theme', $theme->name);
    foreach ($theme->info['path-scripts'] as $path => $script) {
      foreach ($script as $media => $files) {
        foreach ($files as $file) {
          $scripts[$theme_default][$path][] = array(
            'path' => $theme_path . '/' . $file,
            'media' => $media,
          );
        }
      }
    }
  }
  variable_set('media_by_path_scripts', $scripts);
  return array();
}

/**
 * Implements hook_page_build().
 */
function media_by_path_page_build(&$page) {
  // Get current theme
  $current_theme = media_by_path_current_theme();
  $drupal_path = drupal_get_path_alias($_GET['q']);
  $styles = variable_get('media_by_path_styles', array());

  // Only load css of current theme
  if (!empty($styles[$current_theme])) {
    foreach ($styles[$current_theme] as $path => $style) {
      if (drupal_match_path($drupal_path, $path) || drupal_match_path($_GET['q'], $path)) {
        foreach ($style as $css){
          drupal_add_css($css['path'], array('type' => 'file', 'weight' => CSS_THEME, 'media' => $css['media'], 'preprocess' => FALSE, 'group' => CSS_THEME));
        }
      }
    }
  }

  $scripts = variable_get('media_by_path_scripts', array());

  // Only load css of current theme
  if (!empty($scripts[$current_theme])) {
    foreach ($scripts[$current_theme] as $path => $script) {
      if (drupal_match_path($drupal_path, $path) || drupal_match_path($_GET['q'], $path)) {
        foreach ($script as $js){
          drupal_add_js($js['path']);
        }
      }
    }
  }
}

/**
 * Get Current Theme
 * return name of current theme
 */
function media_by_path_current_theme(){
  global $custom_theme, $theme, $user, $theme_key;

  if (!empty($user->theme)) {
    $current_theme = $user->theme;
  }
  elseif (!empty($custom_theme)) {
    $current_theme = $custom_theme;
  }
  elseif (!empty($theme_key)) {
    $current_theme = $theme_key;
  }
  else {
    $current_theme = $theme ? $theme : variable_get('theme_default', '');
  }

  return $current_theme;
}
