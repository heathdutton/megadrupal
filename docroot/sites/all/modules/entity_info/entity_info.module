<?php

/**
 * @file
 * Entity Info Storage module main file.
 */

/**
 * Implements hook_menu().
 */
function entity_info_menu() {
  return array(
    'admin/config/system/entity_info' => array(
      'title' => 'Store entity info',
      'description' => 'Stores entity information in per-language persistent system variables.',
      'access arguments' => array('administer site configuration'),
      'page callback' => 'entity_info_page',
    ),
  );
}

/**
 * Displays a simple success text while it saves entity info in the database.
 *
 * @return array
 *   An array to be rendered as an information text.
 */
function entity_info_page() {
  $output = t('Entity info has been stored in the next variables:');
  $output .= theme('item_list', array('items' => array_map(function ($item) { return '<code>' . $item . '</code>'; }, entity_info_store())));

  return array(
    '#type' => 'markup',
    '#markup' => $output,
  );
}

/**
 * Parses entity info and stores it into persistent system variables.
 *
 * @return array
 *   A list of generated variable names.
 */
function entity_info_store() {
  global $language;

  // Save the global $language. We'll restore it later.
  $language_clone = clone $language;

  $variables = array();
  foreach (language_list() as $language) {
    $name = 'entity_info_' . $language->language;

    // Force a cache clear to get fresh data.
    cache_clear_all('entity_info:' . $language->language, 'cache');
    drupal_static_reset('entity_get_info');

    variable_set($name, entity_get_info());
    $variables[] = $name;
  }

  // Restore global language.
  $language = $language_clone;

  return $variables;
}
