<?php
/**
 * @file
 * Install functions for the unilogin project.
 *
 * @author Mikkel Jakobsen <mikkel@adapt.dk>
 */

/**
 * Implements hook_requirements().
 */
function unilogin_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    // Error message is the default.
    $requirements['configuration'] = array(
      'title' => $t('UNI•Login configuration'),
      'value' => $t('Not configured'),
      'description' => $t('Visit the <a href="@url">configuration page</a> to set up the required UNI•Login parameters', array(
        '@url' => url('admin/config/services/unilogin'),
      )),
      'severity' => REQUIREMENT_WARNING,
    );

    // Check the configuration, and set the OK flag if good.
    $settings = array(
      'unilogin_active',
      'unilogin_id',
      'unilogin_url_login',
      'unilogin_url_return',
      'unilogin_secret',
    );

    if (_unilogin_check_vars($settings)) {
      $requirements['configuration']['value'] = $t('Configured');
      $requirements['configuration']['description'] = '';
      $requirements['configuration']['severity'] = REQUIREMENT_OK;
    }
  }

  return $requirements;
}

/**
 * Implements hook_schema().
 */
function unilogin_schema() {
  $schema['unilogin_tickets'] = array(
    'description' => 'Stored used tickets for improved security.',
    'fields' => array(
      'tid' => array(
        'description' => 'Ticket id',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Ticket name',
        'type' => 'varchar',
        'length' => '60',
        'not null' => TRUE,
        'default' => '0',
      ),
      'created' => array(
        'description' => 'Timestamp',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
    'indexes' => array(
      'created' => array('created'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function unilogin_uninstall() {
  db_query("DELETE FROM {blocks} WHERE module = 'unilogin'");
  db_query("DELETE FROM {variable} WHERE name LIKE 'unilogin%%'");
}

/**
 * Remove the web service settings if set.
 *
 * The web service is not used by the core of this module, so no need
 * for its configuration to stick around.
 */
function unilogin_update_7101(&$sandbox) {
  variable_del('unilogin_url_ws_infotjeneste');
  variable_del('unilogin_wsbrugerid');
  variable_del('unilogin_wspassword');
}
