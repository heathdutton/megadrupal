<?php
/**
 * @file
 * Main module file.
 */

require_once 'includes/chargebee.api.inc';
require_once 'includes/chargebee.form.inc';
require_once 'includes/chargebee.entity.inc';
require_once 'includes/api/chargebee.common.api.inc';
require_once 'includes/api/chargebee.card.api.inc';
require_once 'includes/api/chargebee.customer.api.inc';
require_once 'includes/api/chargebee.hostedpage.api.inc';
require_once 'includes/api/chargebee.plan.api.inc';
require_once 'includes/api/chargebee.subscription.api.inc';
require_once 'includes/api/chargebee.invoice.api.inc';
require_once 'includes/api/chargebee.event.api.inc';

/**
 * Implements hook_menu().
 */
function chargebee_menu() {
  $items = array();
  // Admin pages.
  $items['admin/config/services/chargebee'] = array(
    'title' => 'ChargeBee',
    'description' => 'ChargeBee API settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chargebee_settings_form'),
    'access arguments' => array('administer chargebee'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/chargebee.admin.inc',
  );
  $items['admin/config/services/chargebee/api'] = array(
    'title' => 'ChargeBee',
    'description' => 'ChargeBee API settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chargebee_settings_form'),
    'access arguments' => array('administer chargebee'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'includes/chargebee.admin.inc',
  );
  $items['admin/config/services/chargebee/plans'] = array(
    'title' => 'ChargeBee Plans',
    'description' => 'ChargeBee API plans settings and Drupal roles associations',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chargebee_plans_update_form'),
    'access arguments' => array('administer chargebee'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/chargebee.admin.inc',
  );
  $items['admin/config/services/chargebee/plans/%chargebee_plan_update/edit'] = array(
    'title' => 'ChargeBee Plan Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chargebee_plans_edit_form', 5),
    'access arguments' => array('administer chargebee'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/chargebee.admin.inc',
  );
  // Common pages.
  $items['chargebee/plan/%chargebee_plan_update'] = array(
    'title' => 'Plan',
    'title callback' => 'chargebee_plan_title_callback',
    'title arguments' => array(2),
    'page callback' => 'chargebee_plan_info_page',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.inc',
  );
  // User pages.
  $items['user/%chargebee_uid/chargebee'] = array(
    'title' => 'Subscription',
    'page callback' => 'chargebee_subscription_page',
    'page arguments' => array(1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/pages/chargebee.pages.subscription.inc',
  );
  $items['user/%chargebee_uid/chargebee/subscription'] = array(
    'title' => 'Subscription',
    'page callback' => 'chargebee_subscription_edit_page',
    'page arguments' => array(1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.subscription.inc',
  );
  $items['user/%chargebee_uid/chargebee/subscription/update/%chargebee_plan_update'] = array(
    'title' => 'Change subscription plan',
    'page callback' => 'chargebee_subscription_update_page',
    'page arguments' => array(1, 5),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.subscription.inc',
  );
  $items['user/%chargebee_uid/chargebee/subscription/close'] = array(
    'title' => 'Cancel subscription',
    'page callback' => 'chargebee_subscription_cancel_page',
    'page arguments' => array(1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.subscription.inc',
  );
  $items['user/%chargebee_uid/chargebee/card'] = array(
    'title' => 'Card Update',
    'page callback' => 'chargebee_card_edit_page',
    'page arguments' => array(1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.inc',
  );
  $items['user/%chargebee_uid/chargebee/customer'] = array(
    'title' => 'Customer Info',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chargebee_customer_information_form', 1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'includes/chargebee.form.inc',
  );
  $items['user/%chargebee_uid/chargebee/subscribe/%'] = array(
    'title' => 'Subscribe',
    'title callback' => 'chargebee_subscribe_page_title',
    'title arguments' => array(4),
    'page callback' => 'chargebee_subscribe_page',
    'page arguments' => array(1,4),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.inc',
  );
  // Callbacks.
  $items['chargebee/retrieve'] = array(
    'page callback' => 'chargebee_hostedpage_retrieve_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.retrieve.inc',
  );
  $items['chargebee/webhook/%chargebee_webhook_hash'] = array(
    'page callback' => 'chargebee_webhook_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages/chargebee.pages.webhook.inc',
  );
  return $items;
}

/**
 * Loads and callbacks.
 */

/**
 * Load function for webhook hash.
 *
 * @param string $hash
 *   ChargeBee webhook key. Must match in settings and in ChargeBee.
 *
 * @return bool
 *   Allow or deny access.
 */
function chargebee_webhook_hash_load($hash) {
  $true_hash = variable_get('chargebee_webhook_hash', '');
  return ($hash == $true_hash);
}

/**
 * Load function for UID.
 */
function chargebee_uid_load($uid) {
  $user = user_load($uid);
  return $user ? $user : FALSE;
}

/**
 * Load function for Plan.
 */
function chargebee_plan_update_load($plan_id) {
  $plan = chargebee_plan_load($plan_id);
  return $plan ? $plan : FALSE;
}

/**
 * Subscribe page title callback.
 */
function chargebee_subscribe_page_title($plan_id) {
  $title = t('Subscribe');
  if ($plan = chargebee_plan_load($plan_id)) {
    $title_values = array(
      '@plan_name' => $plan->name,
    );
    $title = t('Subscribe to @plan_name plan', $title_values);
  }
  return $title;
}

/**
 * Plan info page title callback.
 */
function chargebee_plan_title_callback($plan) {
  return t('Plan "@plan"', array('@plan' => $plan->name));
}

/**
 * Hooks.
 */

/**
 * Implements hook_libraries_info().
 */
function chargebee_libraries_info() {
  $items['chargebee-php'] = array(
    'name' => 'ChargeBee PHP',
    'version' => '1.4.2',
    // @TODO Need version callback.
    'path' => 'lib',
    'files' => array(
      'php' => array('ChargeBee.php'),
    ),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function chargebee_permission() {
  $permissions = array(
    'administer chargebee' => array(
      'title' => t('Administer ChargeBee module'),
    ),
  );
  return $permissions;
}

/**
 * Access callback.
 */
function chargebee_subscription_access($op, $entity = NULL, $account = NULL) {
  return user_access('administer chargebee', $account);
}

/**
 * Implements hook_flush_caches().
 */
function chargebee_subscription_flush_caches() {
  $tables = array(
    'cache_entity_chargebee_subscription',
    'cache_entity_chargebee_customer',
    'cache_entity_chargebee_card',
    'cache_entity_chargebee_plan',
  );
  return $tables;
}

/**
 * Implements hook_entity_info().
 */
function chargebee_entity_info() {
  $info = array();
  $entities = array('subscription', 'customer', 'card', 'plan');
  foreach ($entities as $entity) {
    $info['chargebee_' . $entity] = array(
      'label' => t('@label', array('@label' => ucfirst($entity))),
      'entity class' => 'Entity',
      'controller class' => 'EntityAPIController',
      'base table' => 'chargebee_' . $entity,
      'entity keys' => array(
        'id' => 'uid',
      ),
      'access callback' => 'chargebee_subscription_access',
      'module' => 'chargebee',
    );
    if ($entity == 'plan') {
      $info['chargebee_' . $entity]['entity keys']['id'] = 'id';
    }
    if (module_exists('entitycache') && chargebee_check_cache_tables_exists()) {
      $info['chargebee_' . $entity]['field cache'] = FALSE;
      $info['chargebee_' . $entity]['entity cache'] = TRUE;
    }
  }
  return $info;
}

/**
 * Implements hook_theme().
 */
function chargebee_theme($existing, $type, $theme, $path) {
  $themes = array(
    'chargebee_hostedpage' => array(
      'variables' => array(
        'hostedpage' => NULL,
      ),
      'file' => 'chargebee.theme.inc',
      'path' => $path . '/theme',
    ),
    'chargebee_subscription_info' => array(
      'template' => 'chargebee_subscription_info',
      'arguments' => array(
        'base_path' => NULL,
        'user' => NULL,
        'subscription' => NULL,
        'customer' => NULL,
        'card' => NULL,
      ),
      'path' => $path . '/theme/tpl',
    ),
    'chargebee_plan_info' => array(
      'template' => 'chargebee_plan_info',
      'arguments' => array(
        'plan' => NULL,
      ),
      'path' => $path . '/theme/tpl',
    ),
    'chargebee_form_table' => array(
      'render element' => 'element',
    ),
  );
  return $themes;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function chargebee_preprocess_chargebee_subscription_info(&$variables) {
  global $base_path;
  drupal_add_css(drupal_get_path('module', 'chargebee') . '/theme/css/chargebee.css');
  $variables['base_path'] = $base_path;
  $subscription = $variables['subscription'];
  $customer = $variables['customer'];
  $card = $variables['card'];
  $plan = chargebee_plan_load($subscription->plan_id);
  $plan_string_attr = array(
    '@period' => $plan->period,
    '@period_unit' => $plan->period_unit,
    '@price' => $plan->price,
  );
  if ($subscription) {
    $variables['subscription'] = array(
      'status' => $subscription->status,
      'date' => date('d-M-Y', $subscription->current_term_end),
      'plan_name' => $plan->name,
      'plan_cost' => $plan->price,
      'cost_message' => t('You recurring changes every @period @period_unit(s) $@price', $plan_string_attr),
    );
  }
  if ($customer) {
    $variables['customer'] = array(
      'First Name' => $customer->first_name,
      'Last Name' => $customer->last_name,
    );
  }
  if ($card) {
    $variables['card'] = array(
      'First Name' => $card->first_name,
      'Last Name' => $card->last_name,
      'Card type' => ucfirst($card->card_type),
      'Card Number' => $card->last4,
      'Expiry' => $card->expiry_month . '/' . $card->expiry_year,
    );
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function chargebee_preprocess_chargebee_plan_info(&$variables) {
  $plan = $variables['plan'];
  if (is_object($plan)) {
    $plans_info = array();
    $plans_info['id'] = array(
      'value' => $plan->plan_id,
      'label' => t('ID'),
    );
    $plans_info['name'] = array(
      'value' => $plan->name,
      'label' => t('Name'),
    );
    $plans_info['price'] = array(
      'value' => $plan->price,
      'label' => t('Price'),
    );
    $plans_info['period'] = array(
      'value' => $plan->period . ' / ' . $plan->period_unit,
      'label' => t('Period'),
    );
    $plans_info['trial'] = array(
      'value' => $plan->trial_period . ' / ' . $plan->trial_period_unit,
      'label' => t('Trial'),
    );
    $plans_info['status'] = array(
      'value' => $plan->status,
      'label' => t('Status'),
    );
    $rows = array();
    foreach ($plans_info as $element) {
      $rows[] = array($element['label'], $element['value']);
    }
    $header = array('Attribute', 'Value');
    $table_vars = array(
      'header' => $header,
      'rows' => $rows,
    );
    $variables['plan_table'] = theme('table', $table_vars);
  }
}

/**
 * Implements hook_cron_queue_info().
 */
function chargebee_cron_queue_info() {
  $queue = array(
    'chargebee_verify' => array(
      'worker callback' => 'chargebee_cron_callback',
    ),
  );
  return $queue;
}

/**
 * Cron queue worker callback.
 */
function chargebee_cron_callback($subscription) {
  $user = user_load($subscription->uid);
  if ($user) {
    chargebee_verify_subscription_status($user);
  }
  else {
    $message = 'Attempt to verify the subscription for non-existent user. UID: @uid';
    watchdog('ChargeBee Verify', $message, array('@uid' => $subscription->uid), WATCHDOG_WARNING);
  }
}

/**
 * Implements hook_cron().
 */
function chargebee_cron() {
  $subscriptions = chargebee_subscription_load_multiple();
  if ($subscriptions) {
    $queue = DrupalQueue::get('chargebee_verify');
    $queue->createQueue();
    foreach ($subscriptions as $subscription) {
      $queue->createItem($subscription);
    }
  }
}
