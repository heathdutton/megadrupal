<?php
/**
 * @file
 * Chee module.
 */

/**
 * Implements hook_menu().
 */
function chee_menu() {
  $items = array();

  $items['admin/config/user-interface/chee'] = array(
    'title' => 'Chee Settings',
    'description' => 'Configuration for highlightjs plugin',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chee_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'chee.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_help().
 */
function chee_help($path, $arg) {
  switch ($path) {
    case 'admin/config/user-interface/chee':
      return '<p>' . t('CHEE provides code highlight functionality for <a href="@epiceditor" target="_blank">EpicEditor</a> filter for Drupal <a href="@wysiwyg" target="_blank">Wysiwyg</a> editor.<br/>With this module you can highlight syntax in code in &lt;pre&gt;&lt;code&gt; tags: script finds blocks of code, detects a language and highlights it (but you can give it a hint by saying the language in class <i>e.g.&nbsp;&lt;code&nbsp;class="php"&gt;...</i>). Works for both admin and client sides and can be used different themes of color schema for these pages at the same time.', array('@epiceditor' => 'http://epiceditor.com/', '@wysiwyg' => 'https://www.drupal.org/project/wysiwyg')) . '</p>';
  }
}

/**
 * Implements hook_library().
 */
function chee_library() {
  $library_path = chee_get_highlight_path();
  $front = variable_get('chee_front_theme', 'default');

  $libraries['highlight'] = array(
    'title' => 'highlight',
    'website' => 'https://highlightjs.org',
    'js' => array(
      array(
        'data' => "{$library_path}/highlight.pack.js",
        'group' => 'JS_LIBRARY',
      ),
      array(
        'data' => array(
          'chee' => array(
            'libraryPath' => $library_path,
            'frontTheme' => $front,
            'backTheme' => variable_get('chee_back_theme', 'default'),
            'lineBreaks' => variable_get('chee_linebreaks', TRUE),
            'tabReplace' => variable_get('chee_tab_replace', '  '),
          ),
        ),
        'type' => 'setting',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_preprocess_field().
 */
function chee_preprocess_field(&$vars) {
  foreach ($vars['element']['#items'] as $item) {
    if (isset($item['format'])) {
      $format = filter_list_format($item['format']);
      // Add CHEE JS is filter_markdown is used.
      if (isset($format['filter_markdown'])) {
        chee_add_script();
        // One time will be enough.
        break;
      }
    }
  }
}

/**
 * Implements hook_filter_info_alter().
 */
function chee_filter_info_alter(&$info) {
  if (isset($info['filter_markdown'])) {
    // Add chee JS to content edit page where filter is applied.
    chee_add_script();
  }
}

/**
 * List the available themes.
 *
 * @return array
 *   Array of themes.
 */
function chee_list_themes() {
  static $themes;

  if (isset($themes)) {
    return $themes;
  }

  $cid = 'chee_list_themes';
  if ($cache = cache_get($cid)) {
    $themes = $cache->data;
  }
  else {
    $themes = array();
    $library_path = chee_get_highlight_path();
    $directory = "{$library_path}/styles/";

    if (!empty($directory)) {
      $files = file_scan_directory($directory, '/.*\.css$/', array('key' => 'name'));
      foreach ($files as $key => $fileinfo) {
        $themes[drupal_strtolower($key)] = drupal_ucfirst($key);
      }
      natcasesort($themes);
    }
    cache_set($cid, $themes);
  }

  return $themes;
}

/**
 * Get path to highlight library.
 *
 * @return string
 *   Path to highlight library
 */
function chee_get_highlight_path() {
  $library_path = module_exists('libraries') ? libraries_get_path('highlight') : 'sites/all/libraries/highlight';
  return $library_path;
}

/**
 * Add chee relates JS scripts and settings.
 *
 * Adds highlight library declared in chee_library() and
 * prepares data for passing to Drupal.settings array.
 */
function chee_add_script() {
  drupal_add_library('chee', 'highlight', TRUE);

  drupal_add_js(array(
    'chee' => array(
      'frontTheme' => variable_get('chee_front_theme', 'default'),
      'backTheme' => variable_get('chee_back_theme', 'default'),
    ),
  ), 'setting');

  drupal_add_js(drupal_get_path('module', 'chee') . '/js/chee.js');
}
