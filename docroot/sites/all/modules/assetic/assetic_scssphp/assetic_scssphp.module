<?php

/**
 * @file
 * Adds support to Assetic for the SCSS filter written in PHP.
 */

/**
 * A constant containing the needed version of the Assetic SCSSPHP library.
 */
define('ASSETIC_SCSSPHP_VERSION', '0.0.8');

/**
 * Implements hook_assetic_filters_info().
 */
function assetic_scssphp_assetic_filters_info() {
  return array(
    'scssphp' => array(
      'title' => 'SCSS PHP',
      'class' => 'Assetic\\Filter\\ScssphpFilter',
      'constructor callback' => 'assetic_scssphp_constructor_callback',
      'apply to' => '/.(sass|scss)$/',
    ),
  );
}

/**
 * Implements hook_assetic_filter_instance_FILTER_ALIAS_alter().
 */
function assetic_scssphp_assetic_instance_filter_scssphp_alter($filter, $context) {
  // Load the SCSSPHP library before using the filter.
  if (!$library = libraries_load('scssphp')) {
    drupal_set_message(t("The Assetic - leafo/scssphp library isn't correctly installed. Please check the !status for more information.", array(
      '!status' => l(t('status report'), 'admin/reports/status'),
    )), 'error', FALSE);
  }
}

function assetic_scssphp_constructor_callback($filter) {
  if (($library = libraries_load('scssphp')) && !empty($library['loaded'])) {
    return;
  }

  drupal_set_message(t("The SCSSPHP library isn't correctly installed. Please check the !status for more information.", array(
      '!status' => l(t('status report'), 'admin/reports/status'),
    )), 'error', FALSE);
}

/**
 * Implements hook_libraries_info().
 */
function assetic_scssphp_libraries_info() {
  $libraries['scssphp'] = array(
    'name' => 'leafo/scssphp',
    'vendor url' => 'https://github.com/leafo/scssphp',
    'download url' => 'https://github.com/leafo/scssphp/archive/v0.0.8.tar.gz',
    'version arguments' => array(
      'file' => 'README.md',
      'pattern' => '/^# scssphp v([[0-9\.]+)/',
      'lines' => 2,
      'cols' => 20,
    ),
    'files' => array(
      'php' => array(
        'scss.inc.php',
      ),
    ),
  );

  return $libraries;
}
