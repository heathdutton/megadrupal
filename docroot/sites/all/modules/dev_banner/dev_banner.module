<?php

/**
 * @file: dev_banner module
 */

// dev banner images width and height
define('DEV_BANNER_IMAGE_WIDTH', 72);
define('DEV_BANNER_IMAGE_HEIGHT', 72);
 
/**
 * Implementation of hook_menu().
 */
function dev_banner_menu() {
  $items['admin/config/development/dev_banner'] = array(
    'title' => 'Development banner',
    'description' => 'Settings for Development banner.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dev_banner_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer development banner'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'dev_banner.admin.inc',
  );
  $items['dev_banner/refresh'] = array(
    'title' => 'Development banner refresh callback',
    'description' => 'called when position is changed on admin screen.',
    'page callback' => 'dev_banner_admin_refresh_images',
    'access callback' => 'user_access',
    'access arguments' => array('view development banner'),
    'type' => MENU_CALLBACK,
    'file' => 'dev_banner.admin.inc',
  );

  return $items;
}


/**
 * Implementation of hook_help().
 */
function dev_banner_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#dev_banner':
      return t('<p>When developing Drupal sites, we are often switching between development 
versions and a production site. Since they normally look identical, it is easy 
to get confused as to which host we are on. This utility displays a small banner 
to indicate the status of a site, as a reminder to where you are.</p><p>Please see the !readme for more details on how to use it.</p>', array('!readme' => l('README', 'help/dev_banner/README.txt')));
  }
}


/**
 * Implmentation of hook_perm().
 */
function dev_banner_permission() {
  return array(
    'view development banner' => array(
      'title' => t('View development banners'), 
      'description' => t('Allow development banners to appear on pages.'),
    ),
    'administer development banner' => array(
      'title' => t('Administer development banners'), 
      'description' => t('Administer development banner settings.'),
    ),
  );
}
 

/**
* return array with definition of banner styles and names
* 
*/
function _dev_banner_definitions() {
  // styles of banners
  $dev_banner_styles = array('ribbon', 'blue_ribbon', 'triangle', 'translucent', 'white', 'custom');

  // names of banners
  $dev_banner_names = array('devel', 'stage', 'test');

  // path to custom images
  $custom_image_path = file_default_scheme() . ':/' . '/dev_banner/custom';
  
  return array('styles' => $dev_banner_styles, 'names' => $dev_banner_names, 'custom' => $custom_image_path);  
}


/**
 * Implementation of hook_init().
 */
function dev_banner_init() {
  $module_path = drupal_get_path('module', 'dev_banner');
  if (($_GET['q'] == 'admin/config/development/dev_banner') && user_access('administer development banner')) {
    drupal_add_css($module_path . '/css/dev_banner.admin.css');
  }
  if (variable_get('dev_banner_enabled', 0) && user_access('view development banner')) {
    // insert dev banner, if host match
    if ($banner = dev_banner_fetch()) {
      // banner found
      // if we are on the dev_banner admin page
      drupal_add_css($module_path . '/css/dev_banner.css');
      drupal_add_js(array(
        'dev_banner' => array(
        'banner' => $banner,
        'sticky' => variable_get('dev_banner_sticky', 1),
        'position' => variable_get('dev_banner_position', 'nw'),
        )
      ), 'setting');
      drupal_add_js($module_path . '/dev_banner.js');
    }
  }
}


// fetch dev banner for server context
function dev_banner_fetch() {
  global $base_url;
  
  $image = '';
  $host = preg_replace('@http\:\/\/@', '', $base_url);
  $banner_defs = _dev_banner_definitions();
  $image_set = variable_get('dev_banner_image_set', 0);
  $style = $banner_defs['styles'][$image_set];

  $banner = '';
  if ($host == variable_get('dev_banner_url_devel', '')) {
    $banner = 'devel';
  }
  elseif ($host == variable_get('dev_banner_url_stage', '')) {
    $banner = 'stage';
  }
  elseif ($host == variable_get('dev_banner_url_test', '')) {
    $banner = 'test';
  }

  if ($banner) {
    $placement = variable_get('dev_banner_position', 'nw') . '/';
    
    // we have a definition for this host
    if ($style == 'custom') {
      $image_base = $banner_defs['custom'] . '/' . $placement;
    }
    else {
      $image_base = drupal_get_path('module', 'dev_banner') . '/images/' . $placement;
    }
    $image = $image_base . $style . '_' . $banner . '.png';
  }

  $title = "development banner";
  $banner_rendered = theme_image($variables = array('path' => $image, 'title' => $title, 'alt' => $title, 'width' => DEV_BANNER_IMAGE_WIDTH, 'height' => DEV_BANNER_IMAGE_HEIGHT, 'attributes' => array('class' => 'dev-banner-img')));
  return $banner_rendered;
}


/**
* implementation of form_alter(&$form, &$form_state, $form_id)
* 
* adds images to options
* 
* @param mixed $form
* @param mixed $form_state
* @param mixed $form_id
*/
function dev_banner_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'dev_banner_admin_settings':
      // get banner definitions
      $banner_defs = _dev_banner_definitions();
      $placement = variable_get('dev_banner_position', 'nw');

      // add images to form
      foreach ($form['dev_banner_images']['dev_banner_image_set']['#options'] as $idx => $val) {
        $style = $banner_defs['styles'][$idx];
        $image_list = array();
        if ($style == 'custom') {
          $image_base = $banner_defs['custom'] . '/' . $placement;
          if (!file_prepare_directory($image_base, FILE_MODIFY_PERMISSIONS)) {
            // path doesn't exist; don't bother looking for custom images
            $image_base = NULL;
          }
        }
        else {
          $image_base = drupal_get_path('module', 'dev_banner') . '/images/' . $placement;
        }
        
        if ($image_base) {
          // build list of images
          $i = 0;
          foreach ($banner_defs['names'] as $banner) {
            $ipath = $image_base . '/' . $style . '_' . $banner . '.png';
            $title = "development banner";
            $image_list[] = array(
              'data' => theme_image($variables = array('path' => $ipath, 'title' => $title, 'alt' => $title, 'width' => DEV_BANNER_IMAGE_WIDTH, 'height' => DEV_BANNER_IMAGE_HEIGHT, 'attributes' => array())),
              'class' => array('dbi-' . $i));

            $i++;
          }
        }
        
        // now build our image element
        $images = NULL;
        if (count($image_list) > 0) {
          $images = theme_item_list(array('type' => 'ul', 'title' => NULL, 'items' => $image_list, 'attributes' => array('class' => array('dev-banner-images'), 'id' => array('dev-banner-images-' . $idx))));
        }
        else {
          if ($style == 'custom') {
            $images = '<div class="not-found"><div class="inner">(no custom images were found)</div></div>';
          }
        }
        if ($images) {
          $form['dev_banner_images']['dev_banner_image_set']['#options'][$idx] .= $images;
        }
      }
      break;
  }
}

