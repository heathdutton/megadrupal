<?php

define('API_URL', 'https://api.drupal.org/api/drupal/7/search/');

/**
 * Implements hook_permission().
 */
function drhook_permission() {
  return array(
    'access dr. hook reports' => array(
      'title' => t('Access Dr. Hook reports'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function drhook_menu() {
  $items['admin/reports/drhook'] = array(
    'title' => 'Dr. Hook',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_paths',
    'access arguments' => array('access dr. hook reports'),
  );

  $items['admin/reports/drhook/paths'] = array(
    'title' => 'Paths',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_paths',
    'access arguments' => array('access dr. hook reports'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -200,
  );

  // convert all values into strings!
  $items['admin/reports/drhook/variables'] = array(
    'title' => 'Variables',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_variables',
    'access arguments' => array('access dr. hook reports'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 195,
  );

  $items['admin/reports/drhook/functions'] = array(
    'title' => 'Functions',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_functions',
    'access arguments' => array('access dr. hook reports'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 190,
  );

  $items['admin/reports/drhook/constants'] = array(
    'title' => 'Constants',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_constants',
    'access arguments' => array('access dr. hook reports'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 195,
  );

  $items['admin/reports/drhook/system'] = array(
    'title' => 'System',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_system',
    'access arguments' => array('access dr. hook reports'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 200,
  );

  $items['admin/reports/drhook/blocks'] = array(
    'title' => 'Blocks',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_blocks',
    'access arguments' => array('access dr. hook reports'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 200,
  );

  $items['admin/reports/drhook/hooks'] = array(
    'title' => 'Hooks',
    'description' => 'Get a quick look at what hooks this install is using and how.',
    'page callback' => 'drhook_get_hooks',
    'access arguments' => array('access dr. hook reports'),
    'type' => MENU_LOCAL_TASK,
    'weight' => -195,
  );

  // drush command to profile a page
  // drush devel command to get sql log

  return $items;
}

/**
 * Page callback: Displays a table of info about all blocks.
 *
 * @return array
 *   A themed table of all blocks.
 *
 * @see drhook_menu()
 */
function drhook_get_blocks() {
  $blocks = db_query('SELECT * FROM {block} ORDER BY module');
  foreach ($blocks as $block) {
    $row = array(
      $block->module,
      $block->delta,
      l($block->module . '_block_info()', API_URL . $block->module . '_block_info'),
      $block->theme,
      $block->status,
      $block->weight,
      $block->region,
      $block->visibility,
      $block->pages,
      $block->cache,
    );
    $rows[] = $row;
  }
  return theme('table', array('header' => array('Module', 'Delta', 'Function', 'Theme', 'Status', 'Weight', 'Region', 'Visibility', 'Pages', 'Cache'), 'rows' => $rows));
}

/**
 * Page callback: Displays a table of info about all constants.
 *
 * @return array
 *   A themed table of all constants.
 *
 * @see drhook_menu()
 */
function drhook_get_constants() {

  $all_constants = get_defined_constants(TRUE);
  $constants = $all_constants['user'];

  $rows = array();
  foreach ($constants as $constant => $value) {
    $row = array(
      l($constant, API_URL . $constant),
      $value,
    );
    $rows[] = $row;
  }

  return theme('table', array('header' => array('Constant', 'Value'), 'rows' => $rows));
}

/**
 * Page callback: Displays a table of info about all functions.
 *
 * @return array
 *   A themed table of all functions.
 *
 * @see drhook_menu()
 */
function drhook_get_functions() {

  $all_funcs = get_defined_functions();
  $funcs = $all_funcs['user'];
  sort($funcs);
  $rows = array();
  foreach ($funcs as $func) {
    $row = array(
      l($func, API_URL . $func),
    );
    $rows[] = $row;
  }

  return theme('table', array('header' => array('Function'), 'rows' => $rows));
}

/**
 * Page callback: Displays a table of info about all paths.
 *
 * @return array
 *   A themed table of all paths.
 *
 * @see drhook_menu()
 */
function drhook_get_paths() {

  $menu_defs = menu_router_build();
  $items = array_shift($menu_defs);

  $rows = array();
  foreach ($items as $path => $item) {
    $callback_link = array();
    $callback_text = !empty($item['page callback']) ? $item['page callback'] : 'drupal_get_form';
    $callback_link[] = l($callback_text . '()', API_URL . $callback_text);
    $args = !empty($item['page arguments']) ? $item['page arguments'] : array();

    if ($callback_text == 'drupal_get_form') {
      $callback_link[0] = l('<del>' . $callback_text . '()</del>', API_URL . $callback_text, array('html' => TRUE));
      $callback_text = array_shift($args);
      $callback_link[] = l($callback_text . '()', API_URL . $callback_text);
    }

    foreach ($args as $i => $arg) {
      if (is_array($arg)) {
        $args[$i] = 'array(' . implode(', ', $arg) . ')';
      }

      if ($arg === TRUE) {
        $args[$i] = 'TRUE';
      }

      if ($arg === FALSE) {
        $args[$i] = 'FALSE';
      }
    }

    $display_args = implode(', ', $args);

    $file = !empty($item['file include']) ? $item['file include'] : $item['module'] . '.module';

    $file_link = l($file, API_URL . $file);

    $row = array(
      $path,
      implode(' ', $callback_link),
      $item['module'],
      $file_link,
      $display_args,
    );
    $rows[] = $row;
  }

  $headers = array(
    'Path',
    'Page Callback',
    'Module',
    'File',
    'Page Arguments',
  );

  $vars = array(
    'header' => $headers,
    'rows' => $rows,
  );

  return theme('table', $vars);
}

/**
 * Page callback: Displays a table of info about the (DB) system table.
 *
 * @return array
 *   A themed table of the (DB) system table.
 *
 * @see drhook_menu()
 */
function drhook_get_system() {
  $systems = db_query('SELECT * FROM {system}');
  foreach ($systems as $system) {
    $row = array(
      $system->name,
      $system->type,
      $system->status,
      $system->schema_version,
    );
    $rows[] = $row;
  }
  return theme('table', array('header' => array('Name', 'Type', 'Status', 'Schema Version'), 'rows' => $rows));
}

/**
 * Page callback: Displays a table of info about all variables.
 *
 * @return array
 *   A themed table of all variables.
 *
 * @see drhook_menu()
 */
function drhook_get_variables() {
  $vars = db_query('SELECT * FROM {variable}');
  foreach ($vars as $var) {
    $row = array(
      $var->name,
      unserialize($var->value),
    );
    $rows[] = $row;
  }
  return theme('table', array('header' => array('Name', 'Value'), 'rows' => $rows));
}

/**
 * Page callback: Displays a table of info about all hook implementations.
 *
 * @return array
 *   A themed table of all hook implementations.
 *
 * @see drhook_menu()
 */
function drhook_get_hooks() {
  $core_hooks = array(
    'hook_actions_delete',
    'hook_action_info',
    'hook_action_info_alter',
    'hook_admin_paths',
    'hook_admin_paths_alter',
    'hook_aggregator_fetch',
    'hook_aggregator_fetch_info',
    'hook_aggregator_parse',
    'hook_aggregator_parse_info',
    'hook_aggregator_process',
    'hook_aggregator_process_info',
    'hook_aggregator_remove',
    'hook_ajax_render_alter',
    'hook_archiver_info',
    'hook_archiver_info_alter',
    'hook_batch_alter',
    'hook_block_configure',
    'hook_block_info',
    'hook_block_info_alter',
    'hook_block_list_alter',
    'hook_block_save',
    'hook_block_view',
    'hook_block_view_alter',
    'hook_block_view_MODULE_DELTA_alter',
    'hook_boot',
    'hook_comment_delete',
    'hook_comment_insert',
    'hook_comment_load',
    'hook_comment_presave',
    'hook_comment_publish',
    'hook_comment_unpublish',
    'hook_comment_update',
    'hook_comment_view',
    'hook_comment_view_alter',
    'hook_contextual_links_view_alter',
    'hook_countries_alter',
    'hook_cron',
    'hook_cron_queue_info',
    'hook_cron_queue_info_alter',
    'hook_css_alter',
    'hook_custom_theme',
    'hook_dashboard_regions',
    'hook_dashboard_regions_alter',
    'hook_date_formats',
    'hook_date_formats_alter',
    'hook_date_format_types',
    'hook_date_format_types_alter',
    'hook_delete',
    'hook_disable',
    'hook_drupal_goto_alter',
    'hook_element_info',
    'hook_element_info_alter',
    'hook_enable',
    'hook_entity_delete',
    'hook_entity_info',
    'hook_entity_info_alter',
    'hook_entity_insert',
    'hook_entity_load',
    'hook_entity_prepare_view',
    'hook_entity_presave',
    'hook_entity_query_alter',
    'hook_entity_update',
    'hook_entity_view',
    'hook_entity_view_alter',
    'hook_exit',
    'hook_field_access',
    'hook_field_attach_create_bundle',
    'hook_field_attach_delete',
    'hook_field_attach_delete_bundle',
    'hook_field_attach_delete_revision',
    'hook_field_attach_form',
    'hook_field_attach_insert',
    'hook_field_attach_load',
    'hook_field_attach_prepare_translation_alter',
    'hook_field_attach_preprocess_alter',
    'hook_field_attach_presave',
    'hook_field_attach_purge',
    'hook_field_attach_rename_bundle',
    'hook_field_attach_submit',
    'hook_field_attach_update',
    'hook_field_attach_validate',
    'hook_field_attach_view_alter',
    'hook_field_available_languages_alter',
    'hook_field_create_field',
    'hook_field_create_instance',
    'hook_field_delete',
    'hook_field_delete_field',
    'hook_field_delete_instance',
    'hook_field_delete_revision',
    'hook_field_display_alter',
    'hook_field_display_ENTITY_TYPE_alter',
    'hook_field_extra_fields',
    'hook_field_extra_fields_alter',
    'hook_field_extra_fields_display_alter',
    'hook_field_formatter_info',
    'hook_field_formatter_info_alter',
    'hook_field_formatter_prepare_view',
    'hook_field_formatter_settings_form',
    'hook_field_formatter_settings_summary',
    'hook_field_formatter_view',
    'hook_field_info',
    'hook_field_info_alter',
    'hook_field_info_max_weight',
    'hook_field_insert',
    'hook_field_instance_settings_form',
    'hook_field_is_empty',
    'hook_field_language_alter',
    'hook_field_load',
    'hook_field_prepare_translation',
    'hook_field_prepare_view',
    'hook_field_presave',
    'hook_field_purge_field',
    'hook_field_purge_instance',
    'hook_field_read_field',
    'hook_field_read_instance',
    'hook_field_schema',
    'hook_field_settings_form',
    'hook_field_storage_create_field',
    'hook_field_storage_delete',
    'hook_field_storage_delete_field',
    'hook_field_storage_delete_instance',
    'hook_field_storage_delete_revision',
    'hook_field_storage_details',
    'hook_field_storage_details_alter',
    'hook_field_storage_info',
    'hook_field_storage_info_alter',
    'hook_field_storage_load',
    'hook_field_storage_pre_insert',
    'hook_field_storage_pre_load',
    'hook_field_storage_pre_update',
    'hook_field_storage_purge',
    'hook_field_storage_purge_field',
    'hook_field_storage_purge_field_instance',
    'hook_field_storage_query',
    'hook_field_storage_update_field',
    'hook_field_storage_write',
    'hook_field_update',
    'hook_field_update_field',
    'hook_field_update_forbid',
    'hook_field_update_instance',
    'hook_field_validate',
    'hook_field_widget_error',
    'hook_field_widget_form',
    'hook_field_widget_form_alter',
    'hook_field_widget_info',
    'hook_field_widget_info_alter',
    'hook_field_widget_properties_alter',
    'hook_field_widget_properties_ENTITY_TYPE_alter',
    'hook_field_widget_settings_form',
    'hook_field_widget_WIDGET_TYPE_form_alter',
    'hook_filetransfer_info',
    'hook_filetransfer_info_alter',
    'hook_file_copy',
    'hook_file_delete',
    'hook_file_download',
    'hook_file_download_access',
    'hook_file_download_access_alter',
    'hook_file_insert',
    'hook_file_load',
    'hook_file_mimetype_mapping_alter',
    'hook_file_move',
    'hook_file_presave',
    'hook_file_update',
    'hook_file_url_alter',
    'hook_file_validate',
    'hook_filter_FILTER_prepare',
    'hook_filter_FILTER_process',
    'hook_filter_FILTER_settings',
    'hook_filter_FILTER_tips',
    'hook_filter_format_disable',
    'hook_filter_format_insert',
    'hook_filter_format_update',
    'hook_filter_info',
    'hook_filter_info_alter',
    'hook_flush_caches',
    'hook_form',
    'hook_forms',
    'hook_form_alter',
    'hook_form_BASE_FORM_ID_alter',
    'hook_form_FORM_ID_alter',
    'hook_form_system_theme_settings_alter',
    'hook_help',
    'hook_hook_info',
    'hook_hook_info_alter',
    'hook_html_head_alter',
    'hook_image_default_styles',
    'hook_image_effect_info',
    'hook_image_effect_info_alter',
    'hook_image_styles_alter',
    'hook_image_style_delete',
    'hook_image_style_flush',
    'hook_image_style_save',
    'hook_image_toolkits',
    'hook_init',
    'hook_insert',
    'hook_install',
    'hook_install_tasks',
    'hook_install_tasks_alter',
    'hook_js_alter',
    'hook_language_fallback_candidates_alter',
    'hook_language_init',
    'hook_language_negotiation_info',
    'hook_language_negotiation_info_alter',
    'hook_language_switch_links_alter',
    'hook_language_types_info',
    'hook_language_types_info_alter',
    'hook_library',
    'hook_library_alter',
    'hook_load',
    'hook_locale',
    'hook_mail',
    'hook_mail_alter',
    'hook_menu',
    'hook_menu_alter',
    'hook_menu_breadcrumb_alter',
    'hook_menu_contextual_links_alter',
    'hook_menu_delete',
    'hook_menu_get_item_alter',
    'hook_menu_insert',
    'hook_menu_link_alter',
    'hook_menu_link_delete',
    'hook_menu_link_insert',
    'hook_menu_link_update',
    'hook_menu_local_tasks_alter',
    'hook_menu_site_status_alter',
    'hook_menu_update',
    'hook_modules_disabled',
    'hook_modules_enabled',
    'hook_modules_installed',
    'hook_modules_uninstalled',
    'hook_module_implements_alter',
    'hook_multilingual_settings_changed',
    'hook_node_access',
    'hook_node_access_acknowledge',
    'hook_node_access_explain',
    'hook_node_access_records',
    'hook_node_access_records_alter',
    'hook_node_delete',
    'hook_node_grants',
    'hook_node_grants_alter',
    'hook_node_info',
    'hook_node_insert',
    'hook_node_load',
    'hook_node_operations',
    'hook_node_prepare',
    'hook_node_presave',
    'hook_node_revision_delete',
    'hook_node_search_result',
    'hook_node_submit',
    'hook_node_type_delete',
    'hook_node_type_insert',
    'hook_node_type_update',
    'hook_node_update',
    'hook_node_update_index',
    'hook_node_validate',
    'hook_node_view',
    'hook_node_view_alter',
    'hook_openid',
    'hook_openid_discovery_method_info',
    'hook_openid_discovery_method_info_alter',
    'hook_openid_normalization_method_info',
    'hook_openid_normalization_method_info_alter',
    'hook_openid_response',
    'hook_options_list',
    'hook_overlay_child_initialize',
    'hook_overlay_parent_initialize',
    'hook_page_alter',
    'hook_page_build',
    'hook_page_delivery_callback_alter',
    'hook_path_delete',
    'hook_path_insert',
    'hook_path_update',
    'hook_permission',
    'hook_prepare',
    'hook_preprocess',
    'hook_preprocess_HOOK',
    'hook_process',
    'hook_process_HOOK',
    'hook_query_alter',
    'hook_query_TAG_alter',
    'hook_ranking',
    'hook_rdf_mapping',
    'hook_rdf_namespaces',
    'hook_registry_files_alter',
    'hook_requirements',
    'hook_schema',
    'hook_schema_alter',
    'hook_search_access',
    'hook_search_admin',
    'hook_search_execute',
    'hook_search_info',
    'hook_search_page',
    'hook_search_preprocess',
    'hook_search_reset',
    'hook_search_status',
    'hook_shortcut_default_set',
    'hook_simpletest_alter',
    'hook_stream_wrappers',
    'hook_stream_wrappers_alter',
    'hook_system_info_alter',
    'hook_system_themes_page_alter',
    'hook_system_theme_info',
    'hook_taxonomy_term_delete',
    'hook_taxonomy_term_insert',
    'hook_taxonomy_term_load',
    'hook_taxonomy_term_presave',
    'hook_taxonomy_term_update',
    'hook_taxonomy_term_view_alter',
    'hook_taxonomy_vocabulary_delete',
    'hook_taxonomy_vocabulary_insert',
    'hook_taxonomy_vocabulary_load',
    'hook_taxonomy_vocabulary_presave',
    'hook_taxonomy_vocabulary_update',
    'hook_test_finished',
    'hook_test_group_finished',
    'hook_test_group_started',
    'hook_theme',
    'hook_themes_disabled',
    'hook_themes_enabled',
    'hook_theme_registry_alter',
    'hook_tokens',
    'hook_tokens_alter',
    'hook_token_info',
    'hook_token_info_alter',
    'hook_translated_menu_link_alter',
    'hook_trigger_info',
    'hook_trigger_info_alter',
    'hook_uninstall',
    'hook_update',
    'hook_updater_info',
    'hook_updater_info_alter',
    'hook_update_dependencies',
    'hook_update_index',
    'hook_update_last_removed',
    'hook_update_N',
    'hook_update_projects_alter',
    'hook_update_status_alter',
    'hook_url_inbound_alter',
    'hook_url_outbound_alter',
    'hook_username_alter',
    'hook_user_cancel',
    'hook_user_cancel_methods_alter',
    'hook_user_categories',
    'hook_user_delete',
    'hook_user_insert',
    'hook_user_load',
    'hook_user_login',
    'hook_user_logout',
    'hook_user_operations',
    'hook_user_presave',
    'hook_user_role_delete',
    'hook_user_role_insert',
    'hook_user_role_presave',
    'hook_user_role_update',
    'hook_user_update',
    'hook_user_view',
    'hook_user_view_alter',
    'hook_validate',
    'hook_verify_update_archive',
    'hook_view',
    'hook_views_ajax_data_alter',
    'hook_views_api',
    'hook_views_data',
    'hook_views_data_alter',
    'hook_views_default_views',
    'hook_views_default_views_alter',
    'hook_views_form_substitutions',
    'hook_views_plugins',
    'hook_views_plugins_alter',
    'hook_views_post_build',
    'hook_views_post_execute',
    'hook_views_post_render',
    'hook_views_preview_info_alter',
    'hook_views_pre_build',
    'hook_views_pre_execute',
    'hook_views_pre_render',
    'hook_views_pre_view',
    'hook_views_query_alter',
    'hook_views_query_substitutions',
    'hook_views_ui_display_top_links_alter',
    'hook_watchdog',
    'hook_xmlrpc',
    'hook_xmlrpc_alter',
  );

  $rows = array();
  foreach ($core_hooks as $full_hook) {
    $mod_hooks = array();
    $hook = str_replace('hook_', '', $full_hook);
    $imps = module_implements($hook);

    foreach ($imps as $imp) {
      $mod_hooks[] = l($imp . '_' . $hook, API_URL . $imp . '_' . $hook);
    }
    $row = array(
      l($full_hook, API_URL . $full_hook),
      implode(', ', $mod_hooks),
    );
    $rows[] = $row;
  }
  return theme('table', array('header' => array('Hook', 'Implementations'), 'rows' => $rows));
}