<?php

/**
* @file
* Provides field values as variables in a view mode for an entity.
*/

/**
 * Implements hook_menu().
 */
function fieldvariables_menu() {
  return array('admin/structure/fieldvariables' => array(
      'title' => 'Field variables',
      'description' => 'Configure field variables support for different entities.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('fieldvariables_settings'),
      'access arguments' => array('administer content types'),
      'file' => 'fieldvariables.admin.inc',
    )
  );
}

/**
 * Implements hook_entity_view().
 */
function fieldvariables_entity_view($entity, $type, $view_mode, $langcode) {
  $entity_type = isset($entity->uid) ? 'user' : $entity->type;

  if (!_fieldvaribles_load($type, $entity_type, $view_mode)) {
    return;
  }

  $fields = field_info_instances($type, $entity->type);

  foreach ($fields as $field) {
    $field_name = _fieldvariables_field_name($entity->type, $field['field_name']);
    $field_name_formatted = $field_name . '_formatted';

    $field_values = field_extract_values($type, $entity, $field['field_name']);

    $formatter = _fieldvariables_formatter($field['display']['default']['module']);
    $field_values_formatted = field_extract_values($type, $entity, $field['field_name'], array('formatter' => $formatter));

    $entity->$field_name = _fieldvariables_field_values($field_values);
    $entity->$field_name_formatted = render(_fieldvariables_field_values($field_values_formatted));
  }
}

/**
 * Check whether to load field variables.
 */
function _fieldvaribles_load($type, $bundle, $view_mode) {
  // Always load when Field Variables Developer module is enabled.
  if (module_exists('fieldvariables_developer')) {
    return TRUE;
  }

  // For all bundles of this type?
  $fieldvariables_entity = variable_get('fieldvariables_entity_' . $type);
  if (!empty($fieldvariables_entity)) {
    return TRUE;
  }

  // For this view mode in this bundle?
  $fieldvariables_entity_bundle = variable_get('fieldvariables_entity_' . $type . '_' . $bundle . '_' . $view_mode);
  if (!empty($fieldvariables_entity_bundle)) {
    return TRUE;
  }

  return;
}

/**
 * Format the name of the field for our variable.
 */
function _fieldvariables_field_name($type, $field_name) {
  $field_name = $type . '_' . $field_name;
  $field_name = str_replace('field_', '', $field_name);

  return $field_name;
}

/**
 * Return proper field value.
 */
function _fieldvariables_field_values($field_values) {
  if (count($field_values) == 1) {
    foreach ($field_values as $key => $value) {
      return $field_values[$key];
    }
  }

  return $field_values;
}

/**
 * Set formatter
 * @param  string $module
 * @return string
 */
function _fieldvariables_formatter($module) {
  if ($module == 'link') {
    return 'link_default';
  } else {
    return 'default';
  }
}
