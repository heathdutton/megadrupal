<?php

/**
 * @file
 * File Scanner Bonus pack main functions.
 *
 * This file contains Drupal hooks and other useful functions to alter/enhance
 * the File Scanner module features.
 */

/**
 * Implements hook_theme_registry_alter
 */
function file_scanner_bonus_theme_registry_alter(&$theme_registry) {
  $theme_registry['file_scanner_analysis_results_display']['theme path'] = drupal_get_path('module', 'file_scanner_bonus');
  $theme_registry['file_scanner_analysis_results_display']['function'] = 'file_scanner_bonus_theme_file_scanner_analysis_results_display';
}

/**
 * Returns HTML for the analysis results display.
 *
 * @param array $variables
 *   An associative array containing:
 *   - analysis: Analysis object
 *   - analysis_results: All analysis results
 *
 * @todo
 *   Inclusion of jqtreetable plugin and jQuery library should be replaced
 *   by a more elegant way by using jQuery Multi module and Libraries API
 *   module:
 *   https://drupal.org/project/jqmulti
 *   https://drupal.org/project/libraries
 *
 * @ingroup themeable
 */
function file_scanner_bonus_theme_file_scanner_analysis_results_display($variables) {
  $module_path = drupal_get_path('module', 'file_scanner_bonus');
  drupal_add_css($module_path . base_path() . 'scripts/jqtreetable/stylesheets/jquery.treetable.css');
  drupal_add_css($module_path . base_path() . 'scripts/jqtreetable/stylesheets/jquery.treetable.theme.default.css');

  drupal_add_js($module_path . base_path() . 'scripts/jquery/jquery-1.10.2.min.js');
  drupal_add_js($module_path . base_path() . 'scripts/jquery/jquery-noconflict.js');
  drupal_add_js($module_path . base_path() . 'scripts/jqtreetable/javascripts/src/jquery.treetable.js');

  $output = '';
  // Reload results in flat mode (until we find a better solution)
  $results = file_scanner_get_analysis_results($variables['analysis']->aid, 'flat');

  // Give a unique id to each folder
  $tree_structure = array();
  $fid = 1;
  foreach ($results as $folder_name => $folder) {
    // Create an id for all folders, even those that are not in results
    $parts = explode('/', $folder_name);
    $current_folder = '';
    for ($i = 0; $i < count($parts); $i++) {
      ($i == 0) ? $current_folder .= $parts[0] : $current_folder .= '/' . $parts[$i];
      if (empty($tree_structure[$current_folder])) {
        $tree_structure[$current_folder] = 'fol-' . $fid;
        $fid++;
      }
    }
  }

  // Analysis results
  $header = array(
    '',
    t('# matches'),
  );

  $rows = array();
  $expanded_node = NULL;
  foreach ($tree_structure as $folder_path => $folder_id) {
    $folder_stats = '';
    if (!empty($results[$folder_path]['@folder'])) {
      $folder_stats = $results[$folder_path]['@folder']['files_selector_matched'] . ' / ' . $results[$folder_path]['@folder']['files_count'];
      // Store the first node that contains results
      if (empty($expanded_node)) {
        $expanded_node = $folder_id;
      }
    }
    $tree_stats = $results[$folder_path]['@tree']['files_selector_matched'] . ' / ' . $results[$folder_path]['@tree']['files_count'];
    $folder_path_array = explode('/', $folder_path);
    $folder_row = array(
      'data' => array(
        array(
          'data' => array_pop($folder_path_array) . ' (' . $tree_stats . ')',
          'class' => 'file_path',
        ),
        $folder_stats,
      ),
      'class' => array('folder'),
      'data-tt-id' => $folder_id,
    );
    // Find parent folder
    if (strrpos($folder_path, '/') !== FALSE) {
      $parts = explode('/', $folder_path);
      array_pop($parts);
      $parent_folder = implode('/', $parts);
      if (!empty($tree_structure[$parent_folder])) {
        $folder_row['data-tt-parent-id'] = $tree_structure[$parent_folder];
      }
    }
    $rows[] = $folder_row;

    // Install results right after the current folder
    if (!empty($results[$folder_path]['@files'])) {
      foreach ($results[$folder_path]['@files'] as $file) {
        $file_row = array(
          'data' => array(
            array(
              'data' => $file->filename,
              'class' => 'file_path',
            ),
            array(
              'data' => $file->result,
              'class' => 'file_result',
            ),
          ),
          'class' => array(
            'file',
            $file->result > 0 ? 'match' : 'no-match',
          ),
          'data-tt-id' => 'fil-' . $file->fid,
          'data-tt-parent-id' => $tree_structure[$folder_path],
        );
        $rows[] = $file_row;
      }
    }
  }

  $attributes = array(
    'class' => array('file_scanner-analysis_results'),
    'id' => 'file_scanner-analysis_results-' . $variables['analysis']->aid,
  );
  $output .= theme('table', array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => $attributes,
  ));

  // Add javascript snippet
  $js = '
(function ($) {
  $(document).ready(function() {
    $("#file_scanner-analysis_results-' . $variables['analysis']->aid . '").treetable(
      {expandable: true, clickableNodeNames: true}
    );';
  if ($expanded_node) {
    $js .= '$("#file_scanner-analysis_results-' . $variables['analysis']->aid . '").treetable("reveal", "' . $expanded_node . '");';
  }
    $js .= '
  });
})(jq1102)
  ';
  drupal_add_js($js, array('type' => 'inline'));

  return $output;
}
