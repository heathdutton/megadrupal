<?php

/**
 * @file
 * Module code for YPlan.
 */

/**
 * Implements hook_permission().
 */
function yplan_permission() {
  $permissions['administer yplan'] = array(
    'title' => t('Administer YPlan settings.'),
  );
  return $permissions;
}

/**
 * Implements hook_menu().
 */
function yplan_menu() {
  return array(
    'admin/config/services/yplan' => array(
      'title' => 'YPlan',
      'description' => 'Configure YPlan settings',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('yplan_settings_form'),
      'access arguments' => array('administer yplan'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function yplan_block_info() {
  return array(
    'yplan' => array(
      'info' => t('YPlan affiliate widget'),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function yplan_block_view($delta = '') {
  if ($delta == 'yplan') {
    $block['content'] = '<div id="yplan-widget"></div>';

    drupal_add_js('https://yplanapp.com/affiliate/v1/widget.js', array(
      'scope' => 'footer',
      'type' => 'external',
      'preprocess' => FALSE,
      'every_page' => TRUE,
    ));

    $script = _yplan_script();

    drupal_add_js($script, array(
      'scope' => 'footer',
      'type' => 'inline',
      'preprocess' => FALSE,
      'every_page' => TRUE,
    ));
    return $block;
  }

}

/**
 * Provide customised JavaScript for the YPlan widget.
 *
 * @return string
 *   The JavaScript to add.
 */
function _yplan_script() {

  $values['@affiliate_id'] = variable_get('yplan_affiliate_id', '');
  $values['@element_id'] = variable_get('yplan_element_id', 'yplan-widget');
  $values['@type'] = variable_get('yplan_type', 'collection');
  $values['@usecasePath'] = variable_get('yplan_usecase_path', '/london/book-now');
  $values['@category'] = variable_get('yplan_category', 'Comedy');
  $values['@style'] = variable_get('yplan_style', 'column');
  $values['@items'] = variable_get('yplan_items', 1);
  $values['@width'] = variable_get('yplan_width', 255);

  $options = "{element: document.getElementById('@element_id'),
  type: '@type',";

  switch ($values['@type']) {
    case 'collection':
      $options .= "usecasePath: '@usecasePath',";
      break;

    case 'category':
      $options .= "category: '@category',";
      break;
  }

  $options .= "style: '@style',
  items: @items,
  width: @width,
  affiliateId: '@affiliate_id'";

  $options .= "};";

  $script = "window.onload = function() {
  var options = {$options}
  var widget = new YPlan.Widget(options);
  widget.replaceElement();
};";

  return format_string($script, $values);
}

/**
 * Admin form callback.
 */
function yplan_settings_form() {
  $form = array();

  $form['yplan_affiliate_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Affiliate ID'),
    '#default_value' => variable_get('yplan_affiliate_id', ''),
    '#required' => TRUE,
  );

  $form['yplan_element_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Element ID'),
    '#description' => t('The element to replace with the widget'),
    '#default_value' => variable_get('yplan_element_id', 'yplan-widget'),
  );

  $form['yplan_type'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#options' => array(
      'category' => t('Category'),
      'collection' => t('Collection'),
    ),
    '#default_value' => variable_get('yplan_type', 'collection'),
  );

  $form['yplan_usecase_path'] = array(
    '#type' => 'textfield',
    '#title' => t('usecasePath'),
    '#description' => t('The value to set for YPlan usecasePath'),
    '#default_value' => variable_get('yplan_usecase_path', '/london/book-now'),
  );

  $form['yplan_category'] = array(
    '#type' => 'textfield',
    '#title' => t('Category'),
    '#description' => t('A valid YPlan category. There is a list on https://yplanapp.com/search/ under Discover Whats On'),
    '#default_value' => variable_get('yplan_category', 'Comedy'),
  );

  $form['yplan_style'] = array(
    '#type' => 'radios',
    '#title' => t('Style'),
    '#description' => t('The style to use for the YPlan element'),
    '#options' => array(
      'row' => t('Row'),
      'column' => t('Column'),
    ),
    '#default_value' => variable_get('yplan_style', 'column'),
  );

  $form['yplan_items'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of items'),
    '#description' => t('The number of items to show in the YPlan element'),
    '#default_value' => variable_get('yplan_items', 1),
    '#element_validate' => array('element_validate_integer_positive'),
  );

  $form['yplan_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Width'),
    '#description' => t('The width in pixels of the YPlan element'),
    '#default_value' => variable_get('yplan_width', 255),
    '#element_validate' => array('element_validate_integer_positive'),
  );

  return system_settings_form($form);
}
