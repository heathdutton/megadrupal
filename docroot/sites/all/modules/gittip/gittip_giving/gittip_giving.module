<?php

require_once dirname(__FILE__) . '/gittip_giving.field.inc';

function gittip_giving_fields() {
  $fields = field_read_fields(array('type' => 'gittip_giving'));
  foreach ($fields as $field_name => $field) {
    if (empty($field['settings']['api_key']) || empty($field['settings']['username'])) {
      unset($fields[$field_name]);
    }
  }
  return $fields;
}

function gittip_giving_is_username_valid($username, $platform) {
  switch ($platform) {
    case 'gittip':
      $url = 'https://www.gittip.com/' . $username . '/public.json';
      $request = drupal_http_request($url, array('method' => 'HEAD'));
      if (empty($request->error)) {
        return TRUE;
      }
      elseif ($request->code == 404) {
        return FALSE;
      }
      else {
        //throw new Exception($request->error);
      }
      break;
  }

  return TRUE;
}

function gittip_giving_calculate_total(array $items) {
  $total = 0.0;
  foreach ($items as $item) {
    $total += (float) $item['amount'];
  }
  return $total;
}

function gittip_giving_number_format($amount, $prefix = '') {
  return $prefix . number_format(round($amount, 2), 2, '.', ',');
}

/**
 * Implements hook_cron().
 */
function gittip_giving_cron() {
  foreach (gittip_giving_fields() as $field_name => $field) {
    $donations = gittip_giving_calculate_donations($field_name);
    gittip_giving_set_donations($field, $donations);
  }
}

function gittip_giving_calculate_donations($field_name) {
  $donations = array();

  $query = new EntityFieldQuery();
  $query->fieldCondition($field_name, 'amount', 0, '>');
  $results = $query->execute();

  foreach ($results as $entity_type => $entities) {
    $loaded_entities = entity_load($entity_type, array_keys($entities));
    foreach ($loaded_entities as $entity) {
      $items = field_get_items($entity_type, $entity, $field_name);
      foreach ($items as $item) {
        $key = $item['platform'] . ':' . $item['username'];
        if (!isset($donations[$key])) {
          $donations[$key] = array(
            'username' => $item['username'],
            'platform' => $item['platform'],
            'amount' => (float) $item['amount'],
          );
        }
        else {
          $donations[$key]['amount'] += (float) $item['amount'];
        }
      }
    }
  }

  return $donations;
}

function gittip_giving_set_donations(array $field, array $donations) {
  $options = array(
    'method' => 'POST',
    'headers' => array(
      'Content-Type' => 'application/json',
    ),
    'api_key' => $field['settings']['api_key'],
  );

  // Because the also_prune variable doesn't work correctly, we need to manually
  // set which users now should get no gittips.
  // @todo Remove when https://github.com/gittip/www.gittip.com/issues/1338 is fixed.
  _gittip_giving_add_undonated_users($field, $donations);

  $donations = array_values($donations);
  foreach ($donations as &$donation) {
    // Ensure the amount is a string.
    $donation['amount'] = gittip_giving_number_format($donation['amount']);
  }
  $options['data'] = drupal_json_encode($donations);

  $path = $field['settings']['username'] . '/tips.json';
  $request = gittip_api_request($path, $options);

  $variables = array(
    '%account' => $field['settings']['username'],
    '%field' => $field['field_name'],
  );
  if (empty($request->error)) {
    watchdog('gittip_giving', 'Updated gittips for %account from field %field.', $variables, WATCHDOG_INFO);
  }
  else {
    watchdog('gittip_giving', 'Failed to update gittips for %account from field %field.', $variables, WATCHDOG_ERROR);
  }
}

function _gittip_giving_add_undonated_users(array $field, array &$donations) {
  $path = $field['settings']['username'] . '/tips.json';
  $options = array('api_key' => $field['settings']['api_key']);
  $request = gittip_api_request($path, $options);

  if (empty($request->error) && !empty($request->data)) {
    if ($data = json_decode($request->data, TRUE)) {
      foreach ($data as $result) {
        $key = $result['platform'] . ':' . $result['username'];
        if (!isset($donations[$key])) {
          $result['amount'] = 0;
          $donations[$key] = $result;
        }
      }
    }
  }
}
