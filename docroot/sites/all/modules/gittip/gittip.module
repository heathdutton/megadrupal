<?php

/**
 * Implements hook_field_formatter_info().
 */
function gittip_field_formatter_info() {
  $return = array();

  $return['gittip_plain'] = array(
    'label' => t('Gittip: plain username linked to gittip'),
    'field types' => array('text'),
  );
  $return['gittip_button'] = array(
    'label' => t('Gittip button'),
    'field types' => array('text'),
  );
  $return['gittip_widget'] = array(
    'label' => t('Gittip widget'),
    'field types' => array('text'),
  );

  return $return;
}

/**
 * Implements hook_field_formatter_view().
 */
function gittip_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, &$items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'gittip_plain':
      foreach ($items as $delta => $item) {
        if ($item['safe_value']) {
          $element[$delta] = array(
            '#markup' => l($item['safe_value'], '//gittip.com/' . $item['safe_value'])
          );
        }
      }
      break;
    case 'gittip_button':
      foreach ($items as $delta => $item) {
        if ($item['safe_value']) {
          $element[$delta] = array(
            '#theme' => 'gittip_button',
            '#username' => $item['safe_value'],
          );
        }
      }
      break;
    case 'gittip_widget':
      foreach ($items as $delta => $item) {
        if ($item['safe_value']) {
          $element[$delta] = array(
            '#theme' => 'gittip_widget',
            '#username' => $item['safe_value'],
          );
        }
      }
      break;

  }

  return $element;
}

/**
 * Implements hook_theme().
 */
function gittip_theme() {
  return array(
    'gittip_button' => array(
      'variables' => array('username' => NULL),
      'template' => 'gittip-button',
    ),
    'gittip_widget' => array(
      'variables' => array('username' => NULL),
      'template' => 'gittip-widget',
    ),
  );
}

/**
 * Clone of drupal_http_request() that supports password-less authentication.
 *
 * @todo Remove when https://drupal.org/node/1414368 is fixed in core.
 */
function gittip_http_request($url, array $options = array()) {
  $uri = @parse_url($url);
  if (!empty($uri['user']) && empty($uri['pass'])) {
    $options['headers']['Authorization'] = 'Basic ' . base64_encode($uri['user'] . ':');
    $url = str_replace($uri['user'] . '@:', '', $url);
    $url = str_replace($uri['user'] . '@', '', $url);
  }
  return drupal_http_request($url, $options);
}

/**
 * Perform a Gittip API request.
 */
function gittip_api_request($path, array $options = array(), $api_key = NULL) {
  $options += array(
    'base_url' => 'https://www.gittip.com',
  );
  $url = $options['base_url'] . '/' . $path;

  // We cannot pass in the API key as the 'user' in the URL itself like
  // https://API-KEY:@www.gittip.com/ because drupal_http_request() has a bug
  // when HTTP requests have a username, but not a password for authentication.
  // @see https://drupal.org/node/1414368
  if (!empty($options['api_key'])) {
    $options['headers']['Authorization'] = 'Basic ' . base64_encode($options['api_key'] . ':');
  }

  $request = drupal_http_request($url, $options);
  // @todo Do some validation on the request?
  return $request;
}
