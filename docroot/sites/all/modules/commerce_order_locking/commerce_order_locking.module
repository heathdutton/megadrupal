<?php

/**
 * @file
 * Commerce Order Locking module.
 */

/**
 * Implements hook_permission().
 */
function commerce_order_locking_permission() {
  $perms = array(
    'administer commerce order locking' => array(
      'title' => t('Administer Commerce Order Locking'),
      'description' => t('Allows users to administer Commerce Order Locking.'),
      'restrict access' => TRUE,
    ),
  );

  return $perms;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function commerce_order_locking_form_commerce_order_settings_form_alter(&$form, &$form_state, $form_id) {
  $options = array();

  foreach (commerce_order_state_get_title() as $name => $title) {
    foreach (commerce_order_statuses(array('state' => $name)) as $order_status) {
      $options[check_plain($title)][$order_status['name']] = check_plain($order_status['title']);
    }
  }

  $form['commerce_order_locking_status'] = array(
    '#type' => 'select',
    '#title' => t("Order statuses to lock"),
    '#description' => t('Orders with the selected statuses will be locked for editing.'),
    '#required' => TRUE,
    '#multiple' => TRUE,
    '#options' => $options,
    '#default_value' => variable_get('commerce_order_locking_status'),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function commerce_order_locking_form_commerce_order_ui_order_form_alter(&$form, &$form_state, $form_id) {
  $locked = variable_get('commerce_order_locking_status');

  if (in_array($form['#entity']->status, $locked)) {
    $field_info = field_info_instances('commerce_order');

    foreach ($field_info['commerce_order'] as $key => $value) {
      unset($form[$key]);
    }

    $form['warning'] = array(
      '#markup' => '<div class="messages warning">' . t("This order is now locked. You have to change it's status to edit.") . '</div>',
    );
  }
}
