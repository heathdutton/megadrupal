<?php


/**
 * Implements hook_ds_fields_info()
 */
function views_content_ds_ds_fields_info($entity_type) {

  static $_fields;

  if (!isset($_fields)) {
    $_fields = _views_content_ds_collect_fields();
  }

  return $_fields;
}


function _views_content_ds_collect_fields() {

  $collector = new views_content_ds_FieldCollector();

  $views = views_get_all_views();

  foreach ($views as $view_id => $view) {
    if (!empty($view->disabled)) {
      continue;
    }

    $view->init_display();
    foreach ($view->display as $display_id => $display) {
      if (empty($display->handler->panel_pane_display)) {
        continue;
      }
      if (empty($display->display_options['argument_input'])) {
        continue;
      }
      if (count($display->display_options['argument_input']) > 1) {
        continue;
      }

      // Pick the first and only argument.
      foreach ($display->display_options['argument_input'] as $arg_name => $arg_options) {}

      if (!isset($arg_options['context'])) {
        continue;
      }

      $collector->viewsPane($arg_options, $display);
    }

    $view->destroy();
  }

  return $collector->fields();
}


/**
 * Callback to render our ds field..
 */
function _views_content_ds_field_print($field) {
  $entity = $field['entity'];
  $entity_type = $field['entity_type'];
  $info = entity_get_info($entity_type);
  $primary = @$info['entity keys']['id'];
  if (empty($primary)) {
    return;
  }
  $id = @$entity->$primary;
  if (empty($id)) {
    return;
  }
  $view_id = $field['_view_id'];
  $display_id = $field['formatter'];
  $conf = array(
    'context' => array('argument_entity_id:' . $entity_type . '_1'),
    'override_title' => 0,
    'override_title_text' => '',
  );
  $view = views_get_view($view_id);
  $view->set_display($display_id);
  $view->set_arguments(array($id));
  return $view->preview();
}
