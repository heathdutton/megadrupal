<?php

/**
 * Implements hook_menu().
 */
function dominion_social_menu() {
  $menu = array();

  $menu['admin/structure/dominion/settings/social'] = array(
    'title' => t('Social'),
    'page callback' => 'dominion_social_admin_settings_page',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'dominion_social.admin.inc',
    'weight' => 4,
  );

  $menu['admin/structure/dominion/settings/social/add'] = array(
    'title' => t('Add site'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dominion_social_site_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'dominion_social.admin.inc',
  );

  $menu['admin/structure/dominion/settings/social/edit/%'] = array(
    'title' => t('Social'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dominion_social_site_form', 6),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
    'file' => 'dominion_social.admin.inc',
  );

  $menu['admin/structure/dominion/settings/social/delete/%'] = array(
    'title' => t('Social'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dominion_social_delete_form', 6),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
    'file' => 'dominion_social.admin.inc',
  );

  return $menu;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dominion_social_form_dominion_form_alter(&$form, &$form_state) {
  $social_sites = array();
  if (!empty($form['#domain_id'])) {
    if ($subsite = dominion_get_info($form['#domain_id'])) {
      $social_sites = $subsite->social_sites;
    }
  }
  
  $query = db_select('dominion_social_site', 'ss');
  $b = $query->join('dominion_social_site_blueprint', 'ssb', 'ss.sid = ssb.sid');
  $query->condition("$b.blueprint", $form['#blueprint']);
  $fm = $query->leftJoin('file_managed', 'fm', 'ss.icon_fid = fm.fid');
  $query->fields('ss')->addField($fm, 'uri', 'icon_uri');
  $query->orderBy('ss.weight', 'asc');
  $sites = $query->execute()->fetchAll();
  
  if ($sites) {
    $form['dominion_social'] = array(
      '#type' => 'fieldset',
      '#title' => t('Social media'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    foreach ($sites as $site) {
      $form['dominion_social']['dominion_social_' . $site->sid] = array(
        '#type' => 'textfield',
        '#title' => $site->name,
        '#default_value' => isset($social_sites[$site->sid]) ? $social_sites[$site->sid] : '',
        '#description' => t('Full URL to the %name page for this subsite.', array('%name' => $site->name)),
      );
    }
  }

  $form['#validate'][] = 'dominion_social_validate_links';
}

/**
 * Form validate callback.
 */
function dominion_social_validate_links($form, &$form_state) {
  foreach ($form_state['values'] as $name => $value) {
    if (!preg_match('/^dominion_social_([0-9]+)$/s', $name, $match)) {
      continue;
    }
    $sid = $match[1];
    if (!empty($value) && (!valid_url($value) || !strstr($value, '://'))) {
      $name = $form['dominion_social']['dominion_social_' . $sid]['#title'];
      form_set_error('dominion_social_' . $sid, t('Invalid URL given for %name', array('%name' => $name)));
    }
  }
}

/**
 * Implements hook_dominion_insert()
 */
function dominion_social_dominion_insert($domain_id, $form_values = array()) {
  $sites = db_select('dominion_social_site', 'ss')->fields('ss')->execute()->fetchAll();
  foreach ($sites as $site) {
    if (!empty($form_values['dominion_social_' . $site->sid])) {
      $link = new stdClass();
      $link->domain_id = $domain_id;
      $link->sid = $site->sid;
      $link->href = $form_values['dominion_social_' . $site->sid];
      drupal_write_record('dominion_social_link', $link);
    }
  }
}

/**
 * Implements hook_dominion_update()
 */
function dominion_social_dominion_update($domain_id, $form_values = array()) {
  try {
    $transaction = db_transaction();
    $subsite = new stdClass();
    $subsite->domain_id = $domain_id;
    dominion_social_dominion_delete($subsite);
    dominion_social_dominion_insert($domain_id, $form_values);
  }
  catch (Exception $e) {
    $transaction->rollback();
    throw $e;
  }
}

/**
 * Implements hook_dominion_delete().
 */
function dominion_social_dominion_delete($subsite) {
  db_delete('dominion_social_link')->condition('domain_id', $subsite->domain_id)->execute();
}

/**
 * Implements hook_dominion_load().
 */
function dominion_social_dominion_load(&$subsite) {
  $subsite->social_sites = db_select('dominion_social_link', 'l')
    ->fields('l', array('sid', 'href'))
    ->condition('l.domain_id', $subsite->domain_id)
    ->execute()
    ->fetchAllKeyed();
}

/**
 * Implements hook_block_info().
 */
function dominion_social_block_info() {
  return array(
    'links' => array(
      'info' => t('Dominion social links'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function dominion_social_block_view($delta = '') {
  if ($delta == 'links') {
    return array(
      'subject' => t('Social links'),
      'content' => dominion_social_generate_block(),
    );
  }
}

/**
 * Generate block contents.
 * 
 * @return array Renderable array
 */
function dominion_social_generate_block() {
  if (!dominion_is_subsite()) {
    return;
  }
  $query = db_select('dominion_social_site', 'ss');
  $fm = $query->leftJoin('file_managed', 'fm', 'ss.icon_fid = fm.fid');
  $query->fields('ss')->addField($fm, 'uri', 'icon_uri');
  $query->orderBy('ss.weight', 'asc');
  $sites = $query->execute()->fetchAll();
  $listed_sites = array();
  foreach ($sites as $site) {
    $href = '';
    if ($site->inherit) {
      $domain_id = NULL;
      do {
        $subsite = dominion_get_info($domain_id);
        if (!empty($subsite->social_sites[$site->sid])) {
          $href = $subsite->social_sites[$site->sid];
          break;
        }
      } while (!empty($subsite->parent) && ($domain_id = $subsite->parent));
    }
    else {
      $subsite = dominion_get_info();
      if (!empty($subsite->social_sites[$site->sid])) {
        $href = $subsite->social_sites[$site->sid];
      }
    }
    if ($href) {
      $site->class = 'dominion-social-' . preg_replace('/[^\\w]/', '-', strtolower($site->name));
      $site->href = $href;
      $listed_sites[] = $site;
    }
  }
  if ($listed_sites) {
    return array(
      '#theme' => 'dominion_social_block',
      'sites' => $listed_sites,
    );
  }
}

/**
 * Implements hook_theme().
 */
function dominion_social_theme() {
  return array(
    'dominion_social_block' => array(
      'render element' => 'sites',
      'template' => 'dominion-social-block',
      'path' => drupal_get_path('module', 'dominion_social') . '/templates',
    ),
  );
}

/**
 * Implements hook_dominion_blueprint_delete().
 */
function dominion_social_dominion_blueprint_delete($blueprint) {
  db_delete('dominion_social_site_blueprint')
    ->condition('blueprint', $blueprint)
    ->execute();
}
