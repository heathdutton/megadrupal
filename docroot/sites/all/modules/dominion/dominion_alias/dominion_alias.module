<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dominion_alias_form_dominion_form_alter(&$form, &$form_state) {
  $form['dominion_alias'] = array(
    '#type' => 'fieldset',
    '#title' => t('Aliases'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $aliases = array();
  if (isset($form_state['values'])) {
    $aliases = _dominion_alias_get_configuration($form_state['values']);
  }
  elseif ($form['#domain_id']) {
    // Load aliases from database
    $aliases = _dominion_alias_get_configuration_from_database($form['#domain_id']);
  }

  $domain_suffix = variable_get(DOMINION_VAR_DOMAIN_SUFFIX, DOMINION_VAR_DOMAIN_SUFFIX_DEFAULT);

  $form['dominion_alias']['aliases'] = array(
    '#prefix' => '<div id="dominion-alias-aliases">',
    '#suffix' => '</div>',
  );

  $num = count($aliases) + 2;
  for ($i = 0; $i < $num; $i++) {
    $form['dominion_alias']['aliases']["dominion_alias_{$i}"] = array(
      '#type' => 'textfield',
      '#title' => t('Alias'),
      '#default_value' => !empty($aliases[$i]) ? $aliases[$i]->alias : '',
      '#description' => t('Part before %domain, i.e. "@example_subdomain" for %example_domain. ', array('%domain' => $domain_suffix, '@example_subdomain' => t('blog'), '%example_domain' => t('blog') . $domain_suffix)),
    );
    if (variable_get(DOMINION_VAR_ALLOW_TLD, DOMINION_VAR_ALLOW_TLD_DEFAULT)) {
      $form['dominion_alias']['aliases']["dominion_alias_{$i}_domain"] = array(
        '#type' => 'checkbox',
        '#title' => t('This is a full domainname instead of a subdomain of %domain.', array('%domain' => $domain_suffix)),
        '#default_value' => !empty($aliases[$i]) ? $aliases[$i]->domain : '',
      );
    }
    $form['dominion_alias']['aliases']["dominion_alias_{$i}_redirect"] = array(
      '#type' => 'checkbox',
      '#title' => t('Redirect this alias'),
      '#default_value' => !empty($aliases[$i]) ? $aliases[$i]->redirect : '',
    );
  }
}

/**
 * Implements hook_dominion_insert().
 */
function dominion_alias_dominion_insert($domain_id, $form_values) {
  $aliases = _dominion_alias_get_configuration($form_values);
  $domain_suffix = variable_get(DOMINION_VAR_DOMAIN_SUFFIX, DOMINION_VAR_DOMAIN_SUFFIX_DEFAULT);
  foreach ($aliases as $alias) {
    $pattern = $alias['domain'] ? $alias['alias'] : $alias['alias'] . $domain_suffix;
    $redirect = (int) $alias['redirect'];
    db_insert('domain_alias')->fields(array(
      'domain_id' => $domain_id,
      'pattern' => $pattern,
      'redirect' => $redirect
    ))->execute();
  }
}

/**
 * Implements hook_dominion_update().
 */
function dominion_alias_dominion_update($domain_id, $form_values) {
  db_delete('domain_alias')->condition('domain_id', $domain_id)->execute();
  dominion_alias_dominion_insert($domain_id, $form_values);
}

function _dominion_alias_get_configuration($values) {
  $aliases = array();
  foreach ($values as $name => $value) {
    if (preg_match('/^dominion_alias_([0-9]+)$/s', $name, $match)) {
      $id = $match[1];
      if (!empty($value)) {
        $aliases[] = array(
          'alias' => $value,
          'redirect' => !empty($values["dominion_alias_{$id}_redirect"]),
          'domain' => !empty($values["dominion_alias_{$id}_domain"]),
        );
      }
    }
  }
  return $aliases;
}

function _dominion_alias_get_configuration_from_database($domain_id) {
  $items = array();
  $domain_suffix = variable_get(DOMINION_VAR_DOMAIN_SUFFIX, DOMINION_VAR_DOMAIN_SUFFIX_DEFAULT);

  $aliases = db_select('domain_alias', 'da')
    ->fields('da', array('pattern', 'redirect'))
    ->condition('da.domain_id', $domain_id)
    ->execute()
    ->fetchAll();
  foreach ($aliases as $alias) {
    $regexp = '/' . preg_quote($domain_suffix) . '$/si';
    if (preg_match($regexp, $alias->pattern)) {
      $pattern = preg_replace($regexp, '', $alias->pattern);
      $domain = FALSE;
    }
    else {
      $pattern = $alias->pattern;
      $domain = TRUE;
    }
    $item = new stdClass();
    $item->alias = $pattern;
    $item->redirect = (bool) $alias->redirect;
    $item->domain = $domain;
    $items[] = $item;
  }
  return $items;
}
