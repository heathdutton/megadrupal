<?php

/**
 * @file
 * Install file.
 */

/**
 * Implements hook_install().
 */
function dominion_install() {
  if (!empty($_SERVER['HTTP_HOST'])) {
    // HTTP_HOST may be empty (when running from shell).
    variable_set(DOMINION_VAR_DOMAIN_SUFFIX, '.' . str_replace('www.', '', $_SERVER['HTTP_HOST']));
  }

  // Alter domain table.
  $ret = array();
  $schema['domain'] = array();
  dominion_schema_alter($schema);
  foreach ($schema['domain']['fields'] as $name => $spec) {
    db_add_field('domain', $name, $spec);
  }

  // Create default blueprint.
  $t = get_t();
  db_insert('dominion_blueprint')->fields(array(
    'blueprint' => 'default',
    'name' => $t('default'),
    'is_default' => 1,
    'allow_functions_override' => 1,
    'allow_tld' => 1,
    'default_frontpage' => '',
    'allow_custom_frontpage' => 1,
    'frontpage_nodetype' => '',
  ))->execute();
}

/**
 * Implements hook_uninstall().
 */
function dominion_uninstall() {
  $ret = array();
  $schema['domain'] = array();
  dominion_schema_alter($schema);
  foreach ($schema['domain']['fields'] as $name => $spec) {
    db_drop_field('domain', $name);
  }
}

/**
 * Implements hook_schema().
 */
function dominion_schema() {
  $schema = array();

  $schema['dominion_function'] = array(
    'fields' => array(
      'domain_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Domain ID.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Name of the functionality (machine readable name).',
      ),
    ),
    'primary key' => array('domain_id', 'name'),
  );

  $schema['dominion_blueprint'] = array(
    'fields' => array(
      'blueprint' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'is_default' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'allow_functions_override' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'allow_tld' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'default_frontpage' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'allow_custom_frontpage' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'frontpage_nodetype' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('blueprint'),
  );

  $schema['dominion_blueprint_function'] = array(
    'fields' => array(
      'blueprint' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'function' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Name of the functionality (machine readable name).',
      ),
    ),
    'primary key' => array('blueprint', 'function'),
  );

  $schema['dominion_editor_role'] = array(
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'domain_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('domain_id', 'uid', 'rid'),
  );

  $schema['dominion_role_mapping'] = array(
    'fields' => array(
      'domain_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'target_rid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('domain_id', 'rid'),
  );

  $table = drupal_get_schema_unprocessed('system', 'cache');
  $table['description'] = 'Cache table for dominion to store domain information.';
  $schema['cache_dominion'] = $table;

  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function dominion_schema_alter(&$schema) {
  // Adding a tinyint to mark if this is a dominion domain
  $schema['domain']['fields']['dominion_domain'] = array(
    'type' => 'int',
    'size' => 'tiny',
    'unsigned' => TRUE,
    'default' => 0,
    'description' => 'Dominion domain marker.',
  );
  // Add a field for the subsite directory.
  $schema['domain']['fields']['dominion_directory'] = array(
    'type' => 'varchar',
    'length' => 255,
    'description' => 'Dominion directory.',
  );
  // Add a field for the subsite blueprint.
  $schema['domain']['fields']['dominion_blueprint'] = array(
    'type' => 'varchar',
    'length' => 32,
    'description' => 'Dominion blueprint.',
  );
  // Add a field for the subsite blueprint.
  $schema['domain']['fields']['dominion_locked'] = array(
    'type' => 'int',
    'size' => 'tiny',
    'description' => 'Lock subsite.',
  );
}

/**
 * Implements hook_enable().
 */
function dominion_enable() {
  domain_bootstrap_register();
}

/**
 * Implements hook_disable().
 */
function dominion_disable() {
  if (function_exists('domain_bootstrap_unregister')) {
    domain_bootstrap_unregister('dominion');
  }
}


/**
 * Add domain.dominion_directory column.
 */
function dominion_update_7100() {
  $schema['domain'] = array();
  dominion_schema_alter($schema);
  foreach ($schema['domain']['fields'] as $name => $spec) {
    if (!db_field_exists('domain', $name)) {
      db_add_field('domain', $name, $spec);
    }
  }
}

/**
 * Add dominion blueprint tables and fields.
 */
function dominion_update_7101() {
  // Create non-existent fields on domain table.
  dominion_update_7100();

  // Create new tables.
  $table = drupal_get_schema_unprocessed('dominion', 'dominion_blueprint');
  db_create_table('dominion_blueprint', $table);
  $table = drupal_get_schema_unprocessed('dominion', 'dominion_blueprint_function');
  db_create_table('dominion_blueprint_function', $table);

  // Add default blueprint based on current settings.
  $t = get_t();
  db_insert('dominion_blueprint')->fields(array(
    'blueprint' => 'default',
    'name' => $t('default'),
    'is_default' => 1,
    'allow_functions_override' => 1,
    'allow_tld' => variable_get('dominion_allow_tld', TRUE),
    'default_frontpage' => variable_get('dominion_default_frontpage', ''),
    'allow_custom_frontpage' => variable_get('dominion_allow_custom_frontpage', TRUE),
    'frontpage_nodetype' => variable_get('dominion_default_frontpage', ''),
  ))->execute();

  // Set default blueprint for existing subsites.
  db_update('domain')->fields(array(
    'dominion_blueprint' => 'default'
  ))->condition('dominion_domain', 1)->execute();

  // Delete old variables.
  variable_del('dominion_allow_tld');
  variable_del('dominion_default_frontpage');
  variable_del('dominion_allow_custom_frontpage');
  variable_del('dominion_frontpage_nodetype');
}

/**
 * Add dominion_editor_role table.
 */
function dominion_update_7102() {
  $table = drupal_get_schema_unprocessed('dominion', 'dominion_editor_role');
  db_create_table('dominion_editor_role', $table);
}

/**
 * Fix primary key on dominion_blueprint_function table.
 */
function dominion_update_7103() {
  db_query('ALTER TABLE dominion_blueprint_function DROP PRIMARY KEY');
  db_query('ALTER TABLE dominion_blueprint_function ADD PRIMARY KEY (blueprint, function)');
}

/**
 * Create table dominion_function on sites where it does not exist.
 */
function dominion_update_7104() {
  if (!db_table_exists('dominion_function')) {
    $table = drupal_get_schema_unprocessed('dominion', 'dominion_function');
    db_create_table('dominion_function', $table);
  }
}

/**
 * Add domain.dominion_locked column.
 */
function dominion_update_7105() {
  $schema['domain'] = array();
  dominion_schema_alter($schema);
  foreach ($schema['domain']['fields'] as $name => $spec) {
    if (!db_field_exists('domain', $name)) {
      db_add_field('domain', $name, $spec);
    }
  }
}

/**
 * Add dominion_role_mapping table.
 */
function dominion_update_7106() {
  $table = drupal_get_schema_unprocessed('dominion', 'dominion_role_mapping');
  db_create_table('dominion_role_mapping', $table);
}
