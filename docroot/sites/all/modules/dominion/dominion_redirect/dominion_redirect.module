<?php

/**
 * Implements hook_module_implements_alter().
 *
 * Hijack the init hook from the redirect module. We have to change the way
 * redirect looks up the redirect, but it doesn't provide a suitable hook.
 */
function dominion_redirect_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'init' && isset($implementations['redirect'])) {
    unset($implementations['redirect']);
  }
}

/**
 * Implements hook_init().
 *
 * This is a copy of redirect_init(), with the difference that it adds the
 * dominion directory before looking for a redirect.
 */
function dominion_redirect_init() {
  global $_dominion_directory;

  if (!redirect_can_redirect()) {
    return;
  }

  // Fetch the current redirect.
  $path = request_path();
  $redirect = redirect_load_by_source($path, $GLOBALS['language']->language, drupal_get_query_parameters());
  if ($redirect) {
    redirect_redirect($redirect);
  }
}

/**
 * Implements hook_redirect().
 *
 * Check if the redirect leads to the same subsite. If so, do not redirect
 * to prevent redirection loops.
 *
 * @see redirect_redirect
 */
function dominion_redirect_alter(&$redirect) {
  global $_dominion_directory;
  $current = '//' . $_SERVER['HTTP_HOST'] . request_uri();
  $destination = preg_replace('/^https?:/', '', url($redirect->redirect, array('absolute' => TRUE)));
  if ($current == $destination) {
    $redirect->redirect = FALSE;
  }
}

/**
 * Implements hook_redirect_validate().
 *
 * Bypass the check that source and destination are the same. The redirect may
 * lead to another subsite.
 */
function dominion_redirect_redirect_validate($redirect, $form, $form_state) {
  if (url($redirect->source) == url($redirect->redirect)) {
    // This leads to an error, but should be allowed now. Suppress the error.
    $form = &drupal_static('form_set_error', array());
    if (isset($form['redirect'])) {
      unset($form['redirect']);
    }
    if (!empty($_SESSION['messages']['error'])) {
      foreach ($_SESSION['messages']['error'] as $key => $message) {
        if ($message == t('You are attempting to redirect the page to itself. This will result in an infinite loop.')) {
          unset($_SESSION['messages']['error'][$key]);
          // Renumber array.
          $_SESSION['messages']['error'] = array_values($_SESSION['messages']['error']);
        }
      }
    }
  }
}
