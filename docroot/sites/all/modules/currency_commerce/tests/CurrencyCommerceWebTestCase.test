<?php

/**
 * @file
 * Contains class CurrencyCommerceWebTestCase.
 */

/**
 * Tests CRUD.
 */
class CurrencyCommerceWebTestCase extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'description' => '',
      'name' => 'Drupal Commerce integration',
      'group' => 'Currency for Drupal Commerce',
      'dependencies' => array('currency_commerce'),
    );
  }

  function setUp(array $modules = array()) {
    parent::setUp($modules + array('currency_commerce'));
  }

  /**
   * Tests exposing currencies to Commerce.
   */
  function testCurrencies() {
    $this->assertTrue(commerce_currency_load('NLG'));
    module_disable(array('currency_commerce'));
    $this->assertFalse(module_exists('currency_commerce'));
    drupal_flush_all_caches();
    drupal_static_reset();
    $this->assertFalse(commerce_currency_load('NLG'));
  }

  /**
   * Test the currency format callback.
   */
  function testFormatCallback() {
    global $language;

    // Test using the Hindi locale, because it uses grouping sizes that are
    // supported by Currency, but not by Drupal Commerce.
    $language->language = 'hi';
    CurrencyLocalePattern::setCountryCode('IN');
    $this->assertEqual(commerce_currency_format(12345678, 'EUR'), 'â‚¬ 1,23,456.78');
  }

  /**
   * Test the currency conversion callback.
   */
  function testConversionCallback() {
    // Test currencies for which Currency has an exchange rate.
    $this->assertEqual(commerce_currency_convert(1, 'EUR', 'EEK'), 15.6466);
    // Test currencies for which Currency does not have an exchange rate.
    $this->assertEqual(commerce_currency_convert(1, 'EUR', 'UAH'), 1);
  }
}
