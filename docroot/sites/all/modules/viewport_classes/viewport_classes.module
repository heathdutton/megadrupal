<?php
/**
 * @file
 * Viewport Classes
 * Allows themers to define body classes which are applied to desired viewport widths.
 *
 * Copyright 2011 by Matthew Davidson (http://drupal.org/user/52996)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

function viewport_classes_theme_registry_alter(&$theme_registry) {
  if (!empty($theme_registry['page'])) {
    $theme_registry['page']['preprocess functions'][] = 'viewport_classes_add_js';
  }
}

function viewport_classes_add_js(&$vars) {
  static $seen = FALSE;
  if ($seen) {
    return;  // only add the js once
  }
  $classes = viewport_classes_get();
  if (count($classes)) {
    drupal_add_js(array('viewportClasses' => $classes), "setting");
  }
  $seen = TRUE;
}

function viewport_classes_get() {
  $classes = module_invoke_all('viewport_classes');

  // I have no idea how you're supposed write a hook you can implement in a theme.
  // Here's my kludge.
  global $theme_key;
  $themes = list_themes();
  $theme_info = $themes[$theme_key]->info;
  
  $functions = array();
  foreach (array('engine', 'base theme') as $name) {
    if (array_key_exists($name, $theme_info)) {
      $functions[] = $theme_info[$name] . '_viewport_classes';
    }
  }
  $functions[] = $theme_key . '_viewport_classes';

  $classes = array();
  foreach ($functions as $function) {
    if (function_exists($function)) {
      $classes = array_merge($classes, $function());
    }
  }

  return $classes;
}

