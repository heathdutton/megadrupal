<?php
/**
 * @file uc_simplenews.module
 * Simplenews subscription support for Ubercart
 *
 * Provide a simplenews newsletter subscription pane for the ubercart checkout.
 *
 * (C)2011 Michael Moritz miiimooo/at/drupal.org http://drupal.org/user/62954
 */

/**
 * Implements hook_theme().
 */
function uc_simplenews_theme() {
  return array(
    'uc_simplenews_checkout_pane_content' => array(
      'variables' => array( 'optin' => NULL, 'options' => array() ),
    ),
  );
}
/**
 * Implementation of hook_checkout_pane().
 */
function uc_simplenews_uc_checkout_pane() {
	$panes['simplenews'] = array(
		'id' => 'simplenews',
		'callback' => 'uc_simplenews_checkout_pane_simplenews',
		'title' => variable_get('uc_simplenews_newsletter_title',
      t('Newsletter subscription')),
		'weight' => 99,
	);
	return $panes;
}

/**
 * callback / dispatcher
 */
function uc_simplenews_checkout_pane_simplenews($op, $order, $form = NULL,
                                               &$form_state = NULL) {
  $f = __FUNCTION__ . "_$op";
  if (function_exists($f)) {
    return $f($order, $form, $form_state);
  }
}

function  uc_simplenews_uc_order($op, $order, $arg2) {
  if (($op != 'submit') || (!isset($order->data['simplenews']))) {
    return;
  }
  global $user;
  $mail = $order->primary_email;

  $style = variable_get('uc_simplenews_newsletter_subscription_style', 0);
  $simplenews = $order->data['simplenews'];
//   dsm($simplenews);
  if ($style == 0) {
    $select = is_array($simplenews) ? array_shift($simplenews) : $simplenews;
    $simplenews = array();
    $newsletters = variable_get('uc_simplenews_newsletter_newsletters', array());
    foreach($newsletters as $tid => $k) {
      if (!$k) {
        continue;
      }
      $simplenews[$tid] = $select;
    }
  }
  $account = _simplenews_user_load($mail);
  foreach ($simplenews as $tid => $val) {
    if (!$val) {
      continue;
    }
    if ($account->uid && ($account->uid == $user->uid)) {
      $confirm = FALSE;
    } 
    else {
      $confirm = variable_get('simplenews_opt_inout_' . $tid, 'double') == 'double';
    }
    simplenews_subscribe_user($mail, $tid, $confirm);
  }
}

function uc_simplenews_checkout_pane_simplenews_process($order, $form = NULL,
                                                       &$form_state = NULL) {
  $pane = $form_state['values']['panes']['simplenews'];
  $order->data['simplenews'] = (isset($pane['simplenews']) ? $pane['simplenews'] :
    array());
}
function uc_simplenews_checkout_pane_simplenews_view($order, $form = NULL,
                                                     &$form_state = NULL) {
  $newsletters = variable_get('uc_simplenews_newsletter_newsletters', array());
  foreach($newsletters as $key => $val) {
    if (!$val) {
      unset($newsletters[$key]);
    }
  }
  $options = array();
  foreach (taxonomy_get_tree(variable_get('simplenews_vid', '')) as $newsletter) {
//     $options[$newsletter->tid] = $newsletter->name;
    if ((count($newsletters) == 0) || (isset($newsletters[$newsletter->tid])
      && $newsletters[$newsletter->tid])) {
      $options[$newsletter->tid] = $newsletter->name;
    }
  }
  $style = variable_get('uc_simplenews_newsletter_subscription_style', 'preset');

  $optin = variable_get('uc_simplenews_newsletter_optin',
    t('I would like to receive the newsletter'));
  if ($style == 0) {
    $optin = ((count($options) == 1) && ($optin == '')) ? array_shift($options) :
      $optin;
    $contents = theme("uc_simplenews_checkout_pane_content",
      array('optin' => $optin));
  } 
  else {
    $contents = theme("uc_simplenews_checkout_pane_content",
      array('optin' => $optin, 'options' => $options));
  }
  return array(
    'description' => variable_get('uc_simplenews_newsletter_description', ''),
    'contents' => array("simplenews" => $contents),
  );
}

function uc_simplenews_checkout_pane_simplenews_settings($order, $form = NULL,
                                                       &$form_state = NULL) {
  /// @TODO this may be redundant
  if (!module_exists('simplenews')) {
    $text = 'This form uses the "newsletter_email" component which requires the !link to be installed and enabled!';
    $link = l(t('"Simplenews" module'), 'http://drupal.org/project/simplenews', array('attributes' => array('target' => '_blank')));
    $replace = array(
      '!link' => $link,
    );
    form_set_error('', t($text, $replace));
  }

  $options = array();
  foreach (taxonomy_get_tree(variable_get('simplenews_vid', '')) as $newsletter) {
    $options[$newsletter->tid] = $newsletter->name;
  }
  $form['uc_simplenews_newsletter_subscription_style'] = array(
    '#title' => t('Subscription method'),
    '#type' => 'radios',
    '#title' => t(''),
    '#options' => array(
      t('Automatically subscribe to newsletters selected below'),
      t('Allow customer to chose newsletter subscription(s)'),
    '#default_value' => variable_get('uc_simplenews_newsletter_subscription_style', 0),
    )
  );

  $form['uc_simplenews_newsletter_newsletters'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Available newsletters'),
    '#description' => t("Depending on the <em>subscription method</em> select which newsletters a customer will automatically be subscribed to by ticking the box or which newsletters are listed as options. If no newsletters are selected then the customer will be subscribed / see all newsletters."),
    '#options' => $options,
    '#default_value' => variable_get('uc_simplenews_newsletter_newsletters', array()),
  );
/** @TODO
  $types = array();
  foreach(uc_product_node_info() as $key => $vals) {
    $types[$key] = $vals['name'];
  }
  $form['uc_simplenews_newsletter_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Types'),
    '#options' => $types,
    '#default_value' => variable_get('uc_simplenews_newsletter_types', TRUE),
    '#description' => t("Only show for these product types (or all if none are selected)."),
  );
*/
  $form['uc_simplenews_newsletter_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title of subscription pane'),
    '#default_value' => variable_get('uc_simplenews_newsletter_title',
      t('Newsletter subscription')),
    '#description' =>t ("Note this will also override the pane name in the admin section."),
  );
  $form['uc_simplenews_newsletter_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Description text for subscription pane'),
    '#default_value' => variable_get('uc_simplenews_newsletter_description',
      ''),
  );
  $form['uc_simplenews_newsletter_optin'] = array(
    '#type' => 'textfield',
    '#title' => t('Text for opt-in'),
    '#default_value' => variable_get('uc_simplenews_newsletter_optin',
      t('I would like to receive the newsletter')),
    '#description' => t("Leave this field empty to display the newsletter name."),
  );

  return $form;
}

function theme_uc_simplenews_checkout_pane_content($args) {
  if (count($args['options'])) {
    return array(
      '#type' => 'checkboxes',
      '#title' => $args['optin'],
      '#options' => $args['options'],
      '#weight' => 2,
      '#default_value' => array(), //subscribe 0 for unsubscribe (use $arg1->data['subscribe_action'] ? 1 : 0  if you want the value saved with the order and are using review
    );
  } 
  else {
    return array(
      '#type' => 'checkbox',
      '#title' => $args['optin'],
      '#weight' => 2,
      '#default_value' => 0, //subscribe 0 for unsubscribe (use $arg1->data['subscribe_action'] ? 1 : 0  if you want the value saved with the order and are using review
    );
  }
}

