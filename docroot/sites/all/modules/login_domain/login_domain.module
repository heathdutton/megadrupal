<?php

/**
 * Implements hook_form_alter().
 */
function login_domain_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_login':
    case 'user_login_block':
      if ($base_url = login_domain_get_redirect_base_url()) {
        if (variable_get('login_domain_force', TRUE) && login_domain_can_redirect()) {
          drupal_goto(current_path(), array('query' => drupal_get_destination(), 'base_url' => $base_url, 'absolute' => TRUE));
        }
        else {
          $form['#action'] = url(current_path(), array('query' => drupal_get_destination(), 'base_url' => $base_url, 'absolute' => TRUE));
        }
      }
      break;
  }
}

/**
 * Implements hook_init().
 */
function login_domain_init() {
  if (variable_get('login_domain_force', TRUE) && !empty($GLOBALS['user']->uid) && login_domain_can_redirect() && $base_url = login_domain_get_redirect_base_url()) {
    drupal_goto(current_path(), array('query' => drupal_get_destination(), 'base_url' => $base_url, 'absolute' => TRUE));
  }
}

/**
 * Check if the current user can be redirected to the login domain.
 *
 * @return bool
 */
function login_domain_can_redirect() {
  $can_redirect = &drupal_static(__FUNCTION__);

  if (!isset($can_redirect)) {
    if (drupal_is_cli()) {
      // Do not redirect CLI/Drush requests.
      $can_redirect = FALSE;
    }
    else {
      $can_redirect = TRUE;
    }
  }

  return $can_redirect;
}

/**
 * @return string|null
 */
function login_domain_get_redirect_base_url() {
  if ($login_domain = variable_get('login_domain')) {
    if ($_SERVER['HTTP_HOST'] != $login_domain) {
      return (variable_get('https', FALSE) ? 'https://' : 'http://') . $login_domain;
    }
    elseif (variable_get('login_domain_https', TRUE) && variable_get('https', FALSE) && !$GLOBALS['is_https']) {
      return 'https://' . $login_domain;
    }
  }
}
