<?php
/**
 * @file
 * Taboola module code.
 */

/**
 * Implements hook_permission().
 */
function taboola_permission() {
  return array(
    'administer taboola' => array(
      'title' => t('Administer Taboola'),
      'description' => t('Administer account settings and visibility of Taboola on your site.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function taboola_menu() {
  $items['admin/config/system/taboola'] = array(
    'title' => 'Taboola',
    'description' => 'Configure Taboola blocks on your website.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taboola_admin_settings_form'),
    'access arguments' => array('administer taboola'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'taboola.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function taboola_theme() {
  return array(
    'taboola_container' => array(
      'variables' => array(
        'widget_class' => '',
        'widget_type' => '',
        'widget_id' => '',
      ),
      'path' => drupal_get_path('module', 'taboola') . '/theme',
      'template' => 'taboola-container',
    ),
  );
}

/**
 * Implements hook_help().
 */
function taboola_help($path, $arg) {
  switch ($path) {
    case 'admin/config/system/taboola':
      return t('<a href="@url">Taboola</a> is an analytics tool that provides links to other content either internally or from external sites.', array('@url' => 'http://www.taboola.com/'));
  }
}

/**
 * Implements hook_block_info().
 */
function taboola_block_info() {
  $blocks['taboola_block1'] = array(
    'info' => t('Taboola Block1'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['taboola_block2'] = array(
    'info' => t('Taboola Block2'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['taboola_block3'] = array(
    'info' => t('Taboola Block3'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['taboola_block4'] = array(
    'info' => t('Taboola Block4'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_page_alter().
 *
 * It's very important that this hook is fired after hook_page_build().
 * @see: taboola_dfp_native_page_build().
 */
function taboola_page_alter(&$page) {

  // Add header and footer JS.
  if (!path_is_admin(current_path()) && taboola_get_setting('taboola_enabled') && $service_path = taboola_get_setting('taboola_service_path')) {

    // Identifier coming from outside of the module.
    $loader_identifier = !empty($page['taboola']['vars']['loader_identifier']) ? $page['taboola']['vars']['loader_identifier'] : 'article';

    // Add inline header JS.
    $js = array(
      "window._taboola = window._taboola || [];",
      "_taboola.push({" . $loader_identifier . ":'auto'});",
      "!function (e, f, u) { e.async = 1; e.src = u; f.parentNode.insertBefore(e, f);}",
      "(document.createElement('script'), document.getElementsByTagName('script')[0], '$service_path');",
    );

    drupal_add_js(implode(PHP_EOL, $js), array(
      'scope' => 'header',
      'type' => 'inline',
      'weight' => 1,
    ));

    // Add inline footer JS.
    $footer_js = array(
      "window._taboola = window._taboola || [];",
      "_taboola.push({flush: true});",
    );
    drupal_add_js(implode(PHP_EOL, $footer_js), array(
      'scope' => 'footer',
      'type' => 'inline',
      'weight' => 2,
    ));

    // Execute taboola_escalate plugin.
    if (module_exists('context')) {
      $reactions = array('taboola_escalator', 'taboola_x');
      foreach ($reactions as $reaction) {
        if ($plugin = context_get_plugin('reaction', $reaction)) {
          $plugin->execute();
        }
      }
    }
  }
}

/**
 * Implements hook_block_view().
 */
function taboola_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'taboola_block1':
      $block = taboola_get_block_array($block, 'block1');
      break;

    case 'taboola_block2':
      $block = taboola_get_block_array($block, 'block2');
      break;

    case 'taboola_block3':
      $block = taboola_get_block_array($block, 'block3');
      break;

    case 'taboola_block4':
      $block = taboola_get_block_array($block, 'block4');
      break;

    default:
      break;
  }
  return $block;
}

/**
 * Create taboola block array.
 */
function taboola_get_block_array($block = array(), $type = 'block1') {
  // Create block subject and content.
  $block['subject'] = taboola_get_setting('taboola_block_subject_' . $type);
  if (taboola_get_setting('taboola_enabled')) {
    $block['content'] = array(
      '#attached' => array(
        'js' => taboola_get_attached_js($type),
      ),
      '#widget_type' => $type,
      '#theme' => 'taboola_container',
    );
  }
  else {
    $block['content'] = '';
  }
  return $block;
}

/**
 * Setup the widget container template.
 */
function template_process_taboola_container(&$vars) {
  // Set widget id.
  $vars['widget_id'] = taboola_get_setting('taboola_container_' . $vars['widget_type']);
}

/**
 * Returns attached JS array.
 */
function taboola_get_attached_js($type = 'default') {
  // Create JS.
  $js = array();
  $js[] = "window._taboola = window._taboola || [];";
  $js[] = taboola_get_widget_setting_js($type);
  return array(
    array(
      'data' => implode(PHP_EOL, $js),
      'type' => 'inline',
      'scope' => 'footer',
      'weight' => 0,
    ),
  );
}

/**
 * Get widget setting JS.
 *
 * @param string $type
 *   The widget type.
 * @param string $container
 *   The widget container.
 */
function taboola_get_widget_setting_js($type, $container = '') {
  // Get Taboola JS settings for this type.
  $mode = taboola_get_setting('taboola_mode_' . $type);
  $placement = taboola_get_setting('taboola_placement_' . $type);

  // Get container.
  $container = taboola_get_setting('taboola_container_' . $type);

  // Get target type setting.
  $target_type = taboola_get_setting('taboola_target_type_' . $type);
  $target_type_json = !empty($target_type) ? ", target_type:'" . check_plain($target_type) . "'" : '';

  // Return setting JS.
  return "_taboola.push({mode:'" . check_plain($mode) . "', container:'" . $container . "', placement:'" . check_plain($placement) . "'" . $target_type_json . "});";
}

/**
 * Get a Taboola setting through a wrapper.
 *
 * @param string $key
 *   Variable key.
 * @param string $default
 *   Default variable value.
 */
function taboola_get_setting($key, $default = '') {
  return variable_get($key, $default);
}

/**
 * Return array of widget types.
 */
function taboola_get_widget_types() {
  return array('block1', 'block2', 'block3', 'block4');
}

/**
 * Implements hook_context_registry().
 */
function taboola_context_registry() {
  return array(
    'reactions' => array(
      'taboola_escalator' => array(
        'title' => t('Taboola Escalator'),
        'plugin' => 'taboola_escalator_context_reaction',
      ),
      'taboola_x' => array(
        'title' => t('Taboola-X'),
        'plugin' => 'taboola_x_context_reaction',
      ),
    ),
  );
}

/**
 * Implements hook_context_plugins().
 */
function taboola_context_plugins() {
  $plugins = array();
  $plugins['taboola_escalator_context_reaction'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'taboola') . '/plugins',
      'file' => 'taboola_escalator_context_reaction.inc',
      'class' => 'taboola_escalator_context_reaction',
      'parent' => 'context_condition',
    ),
  );
  $plugins['taboola_x_context_reaction'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'taboola') . '/plugins',
      'file' => 'taboola_x_context_reaction.inc',
      'class' => 'taboola_x_context_reaction',
      'parent' => 'context_condition',
    ),
  );
  return $plugins;
}
