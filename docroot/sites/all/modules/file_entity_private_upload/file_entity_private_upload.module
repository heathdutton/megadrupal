<?php

/**
 * Implements hook_element_info_alter().
 */
function file_entity_private_upload_element_info_alter(&$type) {
  // use our own callback for managed files.
  $type['managed_file']['#process'][] = '_file_entity_private_upload_managed_file_process';
  $type['managed_file']['#value_callback'] = '_file_entity_private_upload_managed_file_process_value';
}

/**
 * Callback from managed file process callback.
 */
function _file_entity_private_upload_managed_file_process($element, $form_state, $form) {
  // If we are using private_upload then hide the upload button.
  if (isset($form['private_upload'])) {
    $element['upload_button']['#access'] = FALSE;
  }
  return $element;
}

/**
 * Callback from managed file value callback.
 */
function _file_entity_private_upload_managed_file_process_value(&$element, $input = FALSE, $form_state = array()) {
  // Make sure that the file hasn't been uploaded yet.
  if (empty($input['fid'])) {
    // Get what the old scheme would have been.
    $old_scheme = (!empty($form_state['input']['private_upload'])) ? 'public://' : 'private://';
    // Get what the new scheme should be based on how the checkbox was checked.
    $new_scheme = (!empty($form_state['input']['private_upload'])) ? 'private://' : 'public://';

    // Set the new upload location.
    $element['#upload_location'] = str_replace($old_scheme, $new_scheme, $element['#upload_location']);
  }

  // Now we need to call the original value callback for managed files.
  return file_managed_file_value($element, $input, $form_state);
}

/**
 * Implements hook_form_alter().
 */
function file_entity_private_upload_form_alter(&$form, &$form_state, $form_id) {
  // Our form only should exist on the file_entity_add_upload form
  $private_path = variable_get('file_private_path', '');
  if (!empty($private_path) && isset($form['#submit']) && in_array('file_entity_add_upload_submit', $form['#submit']) && empty($form_state['storage']['upload'])) {
    $form['private_upload'] = _file_entity_private_checkbox_form($form);
  }
}

/**
 * Gets our form element.
 */
function _file_entity_private_checkbox_form($form) {
  $scheme = variable_get('file_default_scheme', '');
  $form = array(
    '#type' => 'checkbox',
    '#title' => t('Private'),
    '#description' => t('Check this box to upload the file to the private folder.'),
    '#default_value' => ($scheme == 'private') ? TRUE : FALSE,
  );
  return $form;
}
