<?php

/**
 * @file
 * Htaccess module install file.
 */

/*
 * Implements hook_schema().
 * Create a table which will store htaccess profile.
 */
function htaccess_schema() {
$schema['htaccess'] = array(
    'description' => 'The table for htaccess.',
    'fields' => array(
      'id' => array(
        'description' => t('The unique identifier for a htaccess.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => t('The profile name of the htaccess.'),
        'type' => 'text',
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => t('The description of the htaccess.'),
        'type' => 'text',
      ),
      'htaccess' => array(
        'description' => t('The htaccess rules generated.'),
        'type' => 'text',
        'not null' => TRUE,
      ),
      'deployed' => array(
        'description' => t('Indicates the current htaccess used.'),
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => t('The created date of the generated htaccess rules.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'htaccess_created' => array('created'),
    ),
    'unique keys' => array(
      'id' => array('id'),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 * Store the Drupal default htaccess into database.
 */
function htaccess_install() {
  $htaccess_template = file_get_contents(HTACCESS_TEMPLATE_PATH);

  $with_www_default = "#RewriteCond %{HTTP_HOST} .\n";
  $with_www_default .= "#RewriteCond %{HTTP_HOST} !^www\. [NC]\n";
  $with_www_default .= "#RewriteRule ^ http%{ENV:protossl}://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\n";

  $without_www_default = "#RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]\n";
  $without_www_default .= "#RewriteRule ^ http%{ENV:protossl}://%1%{REQUEST_URI} [L,R=301]\n";

  $search = array("%%%rules_before%%%", "%%%symbolic_links%%%", "%%%with_www%%%", "%%%without_www%%%", "%%%boost_rules%%%");
  $replace = array("", "+FollowSymLinks", $with_www_default, $without_www_default, "");

  $htaccess_origin = str_replace($search, $replace, $htaccess_template);

  db_insert('htaccess')->fields(array(
    'name' => 'default',
    'description' => t('The default htaccess shipped with Drupal.'),
    'htaccess' => $htaccess_origin,
    'created' => REQUEST_TIME,
  ))->execute();
}

/**
 * Implements hook_requirements().
 */
function htaccess_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    // Check if the htaccess has been altered
    if (variable_get('htaccess_altered', false) == true) {
      $requirements['htaccess'] = array(
        'title' => $t('Htaccess module'),
        'description' => $t('Htaccess seems to be altered.'),
        'severity' => REQUIREMENT_WARNING,
        'value' => $t('Htaccess altered'),
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 * Remove all variables. Table will be removed by Core.
 */
function htaccess_uninstall() {
  db_query("DELETE FROM {variable} WHERE name LIKE 'htaccess_%'");
}

/**
 * Update default htaccess content.
 * Replace the %%%boost_rules%%% token by an empty value.
 * This only affects 7.x-2.1 version.
 */
function htaccess_update_7200() {
  $htaccess_default = db_select('htaccess', 'h')
    ->fields('h')
    ->condition('id', 1, '=')
    ->execute()
    ->fetchAssoc();

  $htaccess_default_content = $htaccess_default['htaccess'];

  $htaccess_boost_token_update = str_replace("%%%boost_rules%%%",'', $htaccess_default_content, $count);

  // We update only if a replacement has been made.
  if($count > 0){
    db_update('htaccess')->fields(array(
      'htaccess' => $htaccess_boost_token_update))
      ->condition('id', 1, '=')
      ->execute();

    return t('The default htaccess profile has been updated correctly.');
  }
  else{
    return t('The default htaccess profile seems to be clean. No change required.');
  }
}
