<?php
/**
 * @file
 * Provides the functionality for testing pages
 * @copyright Copyright(c) 2012 Previous Next Pty Ltd
 * @license GPL v2 http://www.fsf.org/licensing/licenses/gpl.html
 * @author Christian Biggins christian at previousnext dot com dot au
 */

/**
 * Implements hook_permission().
 */
function wcag_validate_permission() {
  return array(
    'Administer WCAG Validate' => array(
      'title' => t('Administer WCAG Validate'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function wcag_validate_menu() {

  $items['admin/config/services/wcag-validate-admin'] = array(
    'title' => 'WCAG Validate',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wcag_validate_admin_form'),
    'access arguments' => array('Administer WCAG Validate'),
    'file' => 'wcag_validate.admin.inc',
  );

  $items['admin/config/services/wcag-validate-connection-test'] = array(
    'title' => 'WCAG Validate Connection Test',
    'page callback' => 'wcag_validate_test_connection_page',
    'access arguments' => array('Administer WCAG Validate'),
  );

  $items['wcag-validate-url'] = array(
    'title' => 'Validate URL',
    'page callback' => 'wcag_validate_url',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function wcag_validate_theme() {
  return array(
    'wcag_validate_button' => array(
      'template' => 'wcag-validate-button',
      'variables' => array('title' => NULL),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function wcag_validate_block_info() {
  $blocks = array();

  $blocks['wcag_validate'] = array(
    'info' => t('Wcag Validate Button'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'node/*',
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function wcag_validate_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'wcag_validate':
      // Ensure we have the corrent permissions.
      if (!user_access('Administer WCAG Validate')) {
        return;
      }

      if (variable_get('wcag_validate_connection_status') == 'success') {
        $block['content'] = array(
          '#theme' => 'wcag_validate_button',
          '#title' => t('Validate This Page'),
          '#attached' => array(
            'js' => array(
              drupal_get_path('module', 'wcag_validate') . '/js/wcag_validate.js' => array('scope' => 'footer'),
            ),
            'css' => array(
              drupal_get_path('module', 'wcag_validate') . '/css/wcag_validate.css',
            ),
          ),
        );
      }
      break;
  }

  return $block;
}

/**
 * Request the report from the validation server.
 */
function wcag_validate_url() {
  $url = urldecode($_GET['url']);

  // HTTP_REFERER does not work with IE,
  // but we'll fall back incase no url was passed.
  if (empty($url)) {
    $url = $_SERVER['HTTP_REFERER'];
  }

  if (!empty($url)) {
    // Get the report, or redirect?
    if (wcag_validate_get_config('wcag_validate_report_redirect')) {
      drupal_goto(wcag_validate_get_service_url() . $url);
    }
    else {
      $html = file_get_contents($url);
      wcag_validate_send_html($html, $url);
    }
  }
}

/**
 * Helper for getting config for module, sets our default values.
 */
function wcag_validate_get_config($conf) {
  $conf_val = variable_get($conf, FALSE);

  if (empty($conf_val)) {
    switch ($conf) {
      case 'wcag_validate_server_base':
      case 'wcag_validate_server':
        // TODO: Fix this to allow for redirect &/or load.
        $conf_val = 'http://wcag.dev02.previousnext.com.au';
        break;

      case 'wcag_validate_server_view':
        $conf_val = '/view';
        break;

      case 'wcag_validate_server_process':
        $conf_val = '/process';
        break;

      case 'wcag_validate_report_redirect':
        $conf_val = FALSE;
        break;

      default:
        $conf_val = FALSE;
        break;

    }
  }

  return $conf_val;
}

/**
 * Send the page HTML to the validation service and retrieve the report id.
 */
function wcag_validate_send_html($html, $url) {
  $service_url = wcag_validate_get_config('wcag_validate_server_base') . wcag_validate_get_config('wcag_validate_server_process');

  $curl = curl_init($service_url);
  $curl_post_data = array(
    "html"    => $html,
    "url"     => $url,
    "format"  => 'json',
  );

  // Return the data back to us.
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);

  // Make sure we use POST.
  curl_setopt($curl, CURLOPT_POST, TRUE);

  // Set our post data.
  curl_setopt($curl, CURLOPT_POSTFIELDS, $curl_post_data);

  $curl_response = curl_exec($curl);

  if ($curl_response === FALSE || $curl_response == 'false') {
    watchdog('wcag_validate', "Invalid or no response received from wcag_validate service:<br/><br/>@response", array('@response' => print_r(curl_getinfo($curl), TRUE)), WATCHDOG_ERROR);
  }
  else {
    $report = json_decode($curl_response);

    $report_id = $report->report_id;

    // Log our report id so we can view it later if needed.
    watchdog('wcag_validate', 'Validation report can be viewed at ' . wcag_validate_get_config('wcag_validate_server_base') . wcag_validate_get_config('wcag_validate_server_view') . '?id=' . $report_id);

    drupal_goto(wcag_validate_get_config('wcag_validate_server_base') . wcag_validate_get_config('wcag_validate_server_view') . '?id=' . $report_id);
  }

}


/**
 * Helper function to combine auth and url to redirect to service.
 */
function wcag_validate_get_service_url($full = TRUE) {

  $url = wcag_validate_get_config('wcag_validate_server');
  $user = wcag_validate_get_config('wcag_validate_auth_user');
  $pass = wcag_validate_get_config('wcag_validate_auth_pass');

  $url = parse_url($url);

  // Build our auth string.
  $auth = $user;
  if (strlen($auth) > 0) {
    if ($pass) {
      $auth = $user . ':' . $pass;
    }
    $auth .= '@';
  }

  $new_url = '';
  $new_url .= $url['scheme'] . '://';
  $new_url .= $auth . $url['host'] . (!empty($url['path']) ? $url['path'] : '');

  if ($full) {
    $new_url .= '?' . $url['query'];
  }

  return $new_url;
}

/**
 * Implements hook_cron().
 */
function wcag_validate_cron() {
  $last_run = variable_get('wcag_validate_last_connection_test', 0);
  // Has it been more than an hour since we last checked?
  if ((time() - $last_run) > 3600) {
    wcag_validate_test_connection();
  }
}

/**
 * Performs our connection test to the server.
 *
 * If we cannot access the service or the service cannot access us, we'll error.
 */
function wcag_validate_test_connection() {
  global $base_url;

  $url = wcag_validate_get_service_url(FALSE) . '/check-connection?url=' . urlencode($base_url);

  $result = @drupal_http_request($url);

  if ($result->status_message == 'OK') {
    $result = json_decode($result->data);
    if ($result->result == 'success') {
      variable_set('wcag_validate_connection_status', 'success');
      variable_set('wcag_validate_connection_status_msg', '');
      return TRUE;
    }
    else {
      variable_set('wcag_validate_connection_status_msg', 'This site is not able to be accessed from the WCAG Validation service.');
      watchdog('wcag_validate', 'This site is not able to be accessed from the WCAG Validation service.', array(), WATCHDOG_WARNING);
    }
  }
  else {
    variable_set('wcag_validate_connection_status_msg', 'Unable to access WCAG Validation service.');
    watchdog('wcag_validate', 'Unable to access WCAG Validation service.', array(), WATCHDOG_WARNING);
  }

  variable_set('wcag_validate_connection_status', 'failed');
  return FALSE;
}

/**
 * Perform a connection test and send the user back to where they came from.
 */
function wcag_validate_test_connection_page() {
  wcag_validate_test_connection();
  drupal_set_message('Connection test performed.', 'status');
  if (!empty($_REQUEST['destination'])) {
    drupal_goto($_REQUEST['destination']);
  }
  else {
    drupal_goto('admin/config/services/wcag-validate-admin');
  }
}
