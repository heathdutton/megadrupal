<?php
/**
 * @file
 * Provides additional Rules integration for the Book module.
 */

/**
 * Implements hook_action_info().
 */
function book_rules_action_info() {
  return array(
    'book_rules_get_book_children_action' => array(
      'label' => t('Get all the pages in a book'),
      'group' => t('Data'),
      'type' => 'node',
      'configurable' => FALSE,
      'triggers' => array('any'),
      'parameter' => array(
        'book' => array(
          'type' => 'node',
          'label' => t('Book'),
          'description' => t('The Book from which to retrieve pages'),
          'restriction' => 'selector',
        ),
      ),
      'provides' => array(
        'book_pages' => array(
          'type' => 'list<node>',
          'label' => t('A list of pages in the book'),
        ),
      ),
    ),
  );
}

/**
 * Implements action function.
 */
function book_rules_get_book_children_action($book_node, $settings, $state, $element) {
  $pages = array();
  foreach (book_toc($book_node->book['bid'], 999) as $mlid => $title) {
    $book_menu_link = book_link_load($mlid);
    $book_page_node = node_load($book_menu_link['nid']);
    if ($book_page_node->nid == $book_node->nid) {
      // don't add the book itself to the list of pages.
      continue;
    }
    $pages[] = $book_page_node;
  }
  return array('book_pages' => $pages);
}
