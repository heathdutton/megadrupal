<?php
 
/**
 * @file
 * Provides a report showing where the PHP code format (from PHP Filter) is used
 */

/**
 * Implements hook_permission().
 */
function phpfilter_usage_report_permission() {
  return array(
    'view phpfilter_usage_report' => array(
      'title' => t('View phpfilter_usage_report'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function phpfilter_usage_report_menu() {
  $items = array();

  $items['admin/reports/php-filter-usage'] = array(
    'title' => 'PHP filter usage',
    'description' => 'Show entities and blocks where the "PHP Code" format is used.',
    'page callback' => 'phpfilter_usage_report_main',
    'access arguments' => array('view phpfilter_usage_report'),
  );

  $items['admin/reports/php-filter-usage/entities'] = array(
    'title' => 'Entities',
    'page callback' => 'phpfilter_usage_report_entities',
    'access arguments' => array('view phpfilter_usage_report'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/reports/php-filter-usage/blocks'] = array(
    'title' => 'Blocks',
    'page callback' => 'phpfilter_usage_report_blocks',
    'access arguments' => array('view phpfilter_usage_report'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Page callback for the main page
 *
 * @return string
 *   HTML output
 */
function phpfilter_usage_report_main() {
  $output = t('Use the tabs above to view the reports.');
  return $output;
}

/**
 * Page callback for the entities page
 *
 * @return string
 *   HTML output
 */
function phpfilter_usage_report_entities() {
  $output = phpfilter_usage_report_find_entities();
  return $output;
}

/**
 * Page callback for the blocks page
 *
 * @return string
 *   HTML output
 */
function phpfilter_usage_report_blocks() {
  $output = phpfilter_usage_report_find_blocks();
  return $output;
}

/**
 * Returns an array of all fields in the database that may allow the php_code format
 *
 * @return array
 */
function phpfilter_usage_report_find_fields() {
  $tables = drupal_get_schema();

  $fields = array();
  foreach ($tables as $table_name => $table) {
    if (strpos($table_name, 'field_revision') === 0) {
      foreach ($table['fields'] as $field_name => $field) {
        $pos = strpos($field_name, '_format');
        if ($pos !== FALSE && strlen($field_name) - 7 == $pos) {
          $fields[$table_name] = $field_name;
        }
      }
    }
  }

  return $fields;
}

/**
 * Returns all field revision database rows that use php_code as the text format
 *
 * @return array
 *   All field revision database rows where php_code is the field format value
 */
function phpfilter_usage_report_find_fields_dbrows() {
  $fields = phpfilter_usage_report_find_fields();

  $all_records = array();

  foreach ($fields as $table => $field) {
    $query = db_select($table, 't')
      ->condition('t.' . $field, 'php_code')
      ->fields('t');

    $result = $query->execute();
    while($record = $result->fetchAssoc()) {
      $all_records[] = $record;
    }
  }

  return $all_records;
}

/**
 * Returns HTML table of entities whose fields are using php_code filter
 *
 * @return string
 *   HTML output
 */
function phpfilter_usage_report_find_entities() {
  $db_rows = phpfilter_usage_report_find_fields_dbrows();
  if (!$db_rows) {
    return t('Did not detect any entities using the php_code format.');
  }

  $table_header = array('Entity ID', 'Bundle', 'Deleted', 'Entity ID', 'Revision ID', 'Value');
  $table_rows = '';

  foreach ($db_rows as $row) {
    // This probably isn't the safest/cleanest way to find the value for the field
    $field_value = '';
    foreach ($row as $field_name => $value) {
      $pos = strpos($field_name, '_value');
      if ($pos !== FALSE && strlen($field_name) - 6 == $pos) {
        $field_value = $value;
        break;
      }
    }

    // By using the entity_id as a key, we should end up with the last revision for each entity
    $this_id = $row['entity_type'] . '/' . $row['entity_id'];
    $table_rows[$this_id] = array(
      $this_id,
      (isset($row['bundle'])) ? $row['bundle']: '',
      (isset($row['deleted'])) ? $row['deleted']: '',
      (isset($row['entity_id'])) ? $row['entity_id']: '',
      (isset($row['revision_id'])) ? $row['revision_id']: '',
      '<pre>' . htmlspecialchars($field_value) . '</pre>',
    );
  }

  return theme('table', array('header' => $table_header, 'rows' => $table_rows));
}

/**
 * Returns all block_custom database rows that use php_code as the text format
 *
 * @return array
 *   All block_custom database rows where php_code is the field format value
 */
function phpfilter_usage_report_find_blocks_dbrows() {
  $all_records = array();

  $query = db_select('block_custom', 't')
    ->condition('t.format', 'php_code')
    ->fields('t');

  $result = $query->execute();
  while($record = $result->fetchAssoc()) {
    $all_records[] = $record;
  }

  return $all_records;
}

/**
 * Returns HTML table of blocks using php_code as the body format
 *
 * @return string
 *   HTML output
 */
function phpfilter_usage_report_find_blocks() {
  $db_rows = phpfilter_usage_report_find_blocks_dbrows();
  if (!$db_rows) {
    return t('Did not detect any blocks using the php_code format.');
  }

  $table_header = array('Block ID', 'Body', 'Info');
  $table_rows = '';

  foreach ($db_rows as $row) {
    $this_id = 'block/' . $row['bid'];
    $table_rows[$this_id] = array(
      $this_id,
      (isset($row['body'])) ? htmlspecialchars($row['body']): '',
      (isset($row['info'])) ? $row['info']: '',
    );
  }

  return theme('table', array('header' => $table_header, 'rows' => $table_rows));
}
