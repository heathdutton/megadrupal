<?php
/**
 * Installs the table(s).
 */

/**
 * Implements hook_schema().
 */
function aws_glacier_schema() {
  $schema['glacier_vault'] = array(
    'description' => 'A vault is a container for storing archives.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique vault ID.',
        'unsigned' => TRUE,
      ),
      'VaultName' => array(
        'description' => 'The name of the vault.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'VaultARN' => array(
        'description' => 'The Amazon Resource Name (ARN) of the vault.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'CreationDate' => array(
        'description' => 'The UTC date when the vault was created. A string representation of ISO 8601 date format, for example, "2012-03-20T17:03:43.221Z".',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'LastInventoryDate' => array(
        'description' => 'The UTC date when Amazon Glacier completed the last vault inventory. A string representation of ISO 8601 date format, for example, "2012-03-20T17:03:43.221Z".',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'NumberOfArchives' => array(
        'description' => 'The number of archives in the vault as of the last inventory date. This field will return null if an inventory has not yet run on the vault, for example, if you just created the vault.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'SizeInBytes' => array(
        'description' => 'Total size, in bytes, of the archives in the vault as of the last inventory date. This field will return null if an inventory has not yet run on the vault, for example, if you just created the vault.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'big',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['glacier_job'] = array(
    'fields' => array(
      'id' => array(
        'description' => 'Primary ',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'jobId' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'Format' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'Type' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'Description' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['glacier_archive'] = array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vaultName' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'archiveId' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'entity' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'field' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'entity_id' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'file_uri' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}
