<?php

/**
 * @file
 * Tests for cue_field.module.
 */

class CueFieldTestCase extends DrupalWebTestCase {

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'Cue Field tests',
      'description' => 'Tests the functionality of Cue Field',
      'group' => 'Cue Field',
    );
  }

  /**
   * Implements setUp().
   */
  public function setUp() {
    return parent::setUp(array('field_collection', 'hms_field', 'cue_field'));
  }

  /**
   * Test the creation of the field.
   *
   * Test for the field creation process using the UI.
   */
  public function testCreateField() {
    // Given a content type named media.
    $this->drupalCreateContentType(array('type' => 'media'));

    // And I am logged with permissions to create field collections.
    $user = $this->drupalCreateUser(array(
      'administer field collections',
      'administer content types',
      'administer site configuration',
    ));
    $this->drupalLogin($user);

    // When create a new cue field for content type media using the UI.
    $this->drupalGet('admin/structure/types/manage/media/fields/add_cue_field');
    $edit = array(
      'label' => 'Cue Points',
      'field_name' => 'cue_points',
    );
    $this->drupalPost('admin/structure/types/manage/media/fields/add_cue_field', $edit, t('Add new cue field'));

    // Make sure we actually see the fields in the following.
    field_info_cache_clear();

    // Then I should have a field collection field named "cue_points".
    $instance = field_info_instance('node', 'cue_points', 'media');
    $this->assertNotNull($instance, 'Cue Points fiend instance exists.');

    // And a field collection of bundle "cue_points".
    $entity_info = entity_get_info('field_collection_item');
    $this->assertNotNull($entity_info['bundles']['cue_points'], 'Field collection of bundle cue_points exists.');

    // And the field collection has a start and title field.
    $instance = field_info_instance('field_collection_item', CUE_FIELD_FIELD_NAME_START, 'cue_points');
    $this->assertNotNull($instance, 'Cue Points collection has field cue_field_start.');
    $instance = field_info_instance('field_collection_item', CUE_FIELD_FIELD_NAME_TITLE, 'cue_points');
    $this->assertNotNull($instance, 'Cue Points collection has field cue_field_title.');
  }
}
