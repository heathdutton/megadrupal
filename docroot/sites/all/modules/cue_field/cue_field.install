<?php

/**
 * @file
 * Install, update and uninstall functions for the cue field module.
 */

/**
 * Helper function that returns a schema field definition for UUID fields.
 *
 * @see uuid_schema_field_definition()
 */
function cue_field_schema_field_definition() {
  return array(
    'type' => 'char',
    'length' => 36,
    'not null' => TRUE,
    'default' => '',
    'description' => 'The Universally Unique Identifier.',
  );
}

/**
 * Implements of hook_schema_alter().
 *
 * @see uuid_schema_alter()
 */
function cue_field_schema_alter(&$schema = array()) {
  $field = cue_field_schema_field_definition();
  $schema['field_collection_item']['fields']['uuid'] = $field;
}

/**
 * Implements hook_install().
 *
 * @see uuid_install()
 */
function cue_field_install() {
  $field = cue_field_schema_field_definition();
  if (!db_field_exists('field_collection_item', 'uuid')) {
    db_add_field('field_collection_item', 'uuid', $field);
    db_add_index('field_collection_item', 'uuid', array('uuid'));
  }

  // Fetch empty records.
  $result = db_select('field_collection_item', 't')
    ->fields('t', array('item_id'))
    ->condition(db_or()->condition('uuid', '')->isNull('uuid'))
    ->execute();

  // Update empty records.
  foreach ($result as $record) {
    db_update('field_collection_item')
      ->fields(array('uuid' => cue_field_uuid_generate()))
      ->condition('item_id', $record->item_id)
      ->execute();
  }
}

/**
 * Implements hook_uninstall().
 *
 * @see uuid_uninstall()
 */
function cue_field_uninstall() {
  // Remove the uuid column only if the uuid module does not exists.
  if (!module_exists('uuid') && db_field_exists('field_collection_item', 'uuid')) {
    db_drop_field('field_collection_item', 'uuid');
    db_drop_index('field_collection_item', 'uuid');
  }
}


/**
 * Retrigger install.
 *
 * Retrigger install for sites that has cue field enabled previous
 * to adding uuid.
 */
function cue_field_update_7000() {
  cue_field_install();
}
