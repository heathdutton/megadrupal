<?php

/**
 * @file
 * This module provides a simple way to create a pager for webforms
 *
 * @author Marco Fijn <contact@marcofijn.nl>
 */

/**
 * Implements hook_menu().
 */
function webform_pager_menu() {
  // Add clobal config page.
  $items['admin/config/content/pager'] = array(
    'title'             => 'Webform pager settings',
    'description'       => 'Change webform pager settings',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('webform_pager_admin_settings'),
    'access arguments'  => array('administer site configuration'),
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'webform_pager.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_init().
 *
 * Retrieve and add javascript files needed for webform pager tooltips
 */
function webform_pager_node_view($node, $view_mode, $langcode) {
  $webform_types = webform_variable_get('webform_node_types');
  if (in_array($node->type, $webform_types)) {
    drupal_add_js(drupal_get_path('module', 'webform_pager') . '/js/webform_pager.js');
  }
}

/**
 * Implements hook_form_alter().
 */
function webform_pager_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['#node']) && isset($form['#node']->nid)) {
    $node = $form['#node'];
    $nid = $node->nid;
    // Loaded form is a webform.
    $webform_types = webform_variable_get('webform_node_types');
    $is_type_webform = (in_array($node->type, $webform_types));
    // Webform has page breaks.
    $is_multipage_webform = (isset($form['details']['page_count']['#value']) && $form['details']['page_count']['#value'] > 1);
    // If both conditions are met.
    if ($is_type_webform && $is_multipage_webform) {

      // Get settings for the pager.
      $show_percentages = variable_get('webform_pager_show_percentages', 0);
      $show_page_numbers = variable_get('webform_pager_show_page_numbers', 1);
      $show_page_names = variable_get('webform_pager_show_page_names', 0);

      $cur_page = $form['details']['page_num']['#value'];
      $tot_pages = $form['details']['page_count']['#value'];

      $weight = 7;
      // Create the pager in the form.
      $form['actions']['pager'] = array(
        '#markup' => webform_pager_show_pager($cur_page, $tot_pages, $show_percentages, $show_page_numbers),
        '#weight' => $weight,
      );

      // Show the page slider.
      if ($show_page_names) {
        $form['actions']['page_slider'] = array(
          '#markup' => webform_pager_show_page_slider($nid, $cur_page, $tot_pages),
          '#weight' => 50,
        );
      }
    }
  }
}

/**
 * Custom function for displaying webform pager.
 *
 * @param int $current_page
 *   The current page number
 * @param int $total_pages
 *   The number of pages in the multi-page webform
 * @param bool $show_percentages
 *   Boolean to determine wether or not to show percentages in the pager
 * @param bool $show_page_numbers
 *   Boolean to determine wether or not to show page numbers in the pager
 *
 * @return string
 *   The html for the pager
 */
function webform_pager_show_pager($current_page, $total_pages, $show_percentages = NULL, $show_page_numbers = NULL) {
  // Calculate percentage.
  $current_percentage = ($current_page / $total_pages) * 100;
  $current_percentage = number_format($current_percentage, 2);

  $pager = theme('webform_pager_page_num', array(
              'show_page_numbers'     => $show_page_numbers,
              'show_percentages'      => $show_percentages,
              'current_page'          => $current_page,
              'total_pages'           => $total_pages,
              'current_percentage'    => $current_percentage,
              )
            );

  return $pager;
}

/**
 * Custom function for displaying page slider below webform_pager.
 *
 * @param int $nid
 *   The nid of the webform node
 * @param int $current_page
 *   The current page number
 * @param int $total_pages
 *   The number of pages in the multi-page webform
 *
 * @return string
 *   The html for the page slider
 */
function webform_pager_show_page_slider($nid, $current_page, $total_pages) {
  $node = node_load($nid);

  $element_width = (100 / $total_pages) - 2;

  // Run through webform components to find pagebreaks and create slider items.
  foreach ($node->webform['components'] as $component) {
    if ($component['type'] == 'pagebreak') {

      // Define this sliders item's classes.
      $item_classes[] = 'webform-pager-page-slider-page-name';
      $item_classes[] = 'webform-pager-page-slider-page-' . $component['page_num'];

      // If page is first add first class.
      if ($component['page_num'] == 2) {
        $item_classes[] .= 'webform-pager-page-slider-page-first';
      }

      if ($current_page == ($component['page_num'] - 1)) {
        $item_classes[] .= 'webform-pager-page-slider-page-current';
      }
      elseif ($current_page > ($component['page_num'] - 1)) {
        $item_classes[] .= 'webform-pager-page-slider-page-visited';
      }
      elseif ($current_page == $total_pages) {
        $item_classes[] .= 'webform-pager-page-slider-page-current';
      }

      isset($component['extra']['page_description']) ? $tooltip = $component['extra']['page_description'] : $tooltip = '';

      $items[] = array(
        '#attributes' => array('class' => $item_classes),
        '#markup' => l($component['name'], '', array('attributes' => array('title' => $tooltip, 'class' => 'webform-pager-show-tooltip-link'))),
        '#prefix' => '<span style="width: ' . $element_width . '%" class="' . implode(' ', $item_classes) . '">',
        '#suffix' => '</span>',
      );
      unset($item_classes);
    }
  }

  // Last item, uses submit button text or default Submit.
  $item_classes[] = 'webform-pager-page-slider-page-name';
  $item_classes[] = 'webform-pager-page-slider-page-last';
  $item_classes[] = 'webform-pager-page-slider-page-' . ($component['page_num'] + 1);

  if ($current_page == $total_pages) {
    $item_classes[] = 'webform-pager-page-slider-page-current';
  }

  $submit_text = (empty($node->webform['submit_text']) ? t('Submit') : $node->webform['submit_text']);
  $tooltip = t('Send Form');
  $items[] = array(
    '#attributes' => array('class' => $item_classes),
    '#markup' => l($submit_text, '', array('attributes' => array('title' => $tooltip, 'class' => 'webform-pager-show-tooltip-link'))),
    '#prefix' => '<span style="width: ' . ($element_width-1) . '%" class="' . implode(' ', $item_classes) . '">',
    '#suffix' => '</span>',
  );

  $page_slider = theme('webform_pager_page_slider',
                  array(
                    'element_width' => $element_width,
                    'items' => $items,
                    'custom_class' => ' clearfix',
                  )
                );

  return $page_slider;
}

/**
 * Implements hook_form_webform_component_edit_form_alter().
 */
function webform_pager_form_webform_component_edit_form_alter(&$form, &$form_state) {
  if ($form['type']['#value'] == 'pagebreak') {
    $result = db_query('SELECT wp.page_description FROM {webform_pager} wp WHERE wp.nid = :nid AND wp.cid = :cid',
      array(
        ':nid' => $form['nid']['#value'],
        ':cid' => $form['cid']['#value'],
      )
    );

      foreach($result as $record) {
        $page_description = $record->page_description;
      }

    if (!isset($page_description)) {
      $page_description = '';
    }

    // Add the page description to the pagebreak edit form.
    $form['extra']['page_description'] = array(
      '#type' => 'textfield',
      '#title' => t('Page description'),
      '#description' => t('Page description for webform pager'),
      '#default_value' => $page_description,
      '#size' => 30,
      '#maxlength' => 253,
    );
  }
}

/**
 * Implements hook_webform_component_update().
 */
function webform_pager_webform_component_update($component) {
  if ($component['type'] == 'pagebreak') {
    $exists = false;
    $result = db_query('SELECT wp.page_description FROM {webform_pager} wp WHERE wp.nid = :nid AND wp.cid = :cid',
      array(
        ':nid' => $component['nid'],
        ':cid' => $component['cid'],
      )
    );

    foreach ($result as $record) {
      $exists = true;
    }

    if ($exists) {
      if (isset($component['extra']['page_description'])) {
        $default_value = $component['extra']['page_description'];
      }
      else {
        $default_value = '';
      }
      // Update a record in module table when a component is updated.
      $update = db_query("UPDATE {webform_pager} SET page_description = :page_description WHERE nid = :nid AND cid = :cid",
        array(
          ':page_description' => $default_value,
          ':nid' => $component['nid'],
          ':cid' => $component['cid'],
        )
      );
    }
    else {
      webform_pager_webform_component_insert($component);
    }
  }
}

/**
 * Implements hook_webform_component_insert().
 */
function webform_pager_webform_component_insert($component) {
  if ($component['type'] == 'pagebreak') {
    if (isset($component['extra']['page_description'])) {
      $default_value = $component['extra']['page_description'];
    }
    else {
      $default_value = '';
    }
    // Insert a record into table when a component is inserted.
    $insert = db_query("INSERT INTO {webform_pager} (nid, cid, page_description) VALUES (:nid, :cid, :page_description)",
      array(
        ':nid' => $component['nid'],
        ':cid' => $component['cid'],
        ':page_description' => $default_value,
      )
    );
  }
}

/**
 * Implements hook_webform_component_delete().
 */
function webform_pager_webform_component_delete($component) {
  if ($component['type'] == 'pagebreak') {
    // Delete a record in module table when a component is deleted.
    $delete = db_query('DELETE FROM {webform_pager} WHERE nid = :nid AND cid = :cid',
      array(
        ':nid' => $component['nid'],
        ':cid' => $component['cid'],
      )
    );
  }
}

/**
 * Implements hook_theme().
 */
function webform_pager_theme() {
  // Create custom template for page numbers pager.
  return array(
    'webform_pager_page_num' => array(
      'template' => 'webform_pager_page_num',
      'variables' => array(
        'show_page_numbers' => NULL,
        'current_page' => NULL,
        'total_pages' => NULL,
        'current_percentage' => NULL,
      ),
    ),
    'webform_pager_page_slider' => array(
      'template' => 'webform_pager_page_slider',
      'variables' => array(
        'element_width' => NULL,
        'items' => NULL,
        'classes' => NULL,
      ),
    ),
  );
}
