<?php
// $Id: yahoopipes.module,v 1.1.4.3 2011/01/27 23:37:39 robloach Exp $

/**
 * @file
 * Provides integration with Drupal and Yahoo! Pipes. 
 */

/**
 * Implement hook_help().
 */
function yahoopipes_help($path, $arg) {
  switch ($path) {
    case 'admin/help#yahoopipes':
      $output = '<p>'. t('<a href="!pipes">Pipes</a> is a powerful composition tool to aggregate, manipulate, and mashup content from around the web. In this example, we display the <a href="!drupalplanet">Drupalcon Planet</a> Pipe content.', array('!pipes' => 'http://pipes.yahoo.com', '!drupalplanet' => 'http://pipes.yahoo.com/pipes/pipe.info?_id=yp4aYwAI3RG0uvoh60jTQA')) .'</p>';

      $pipe = yahoopipes('yp4aYwAI3RG0uvoh60jTQA');
      if (isset($pipe['value']['items'])) {
        foreach ($pipe['value']['items'] as $item) {
          $output .= '<h3>' . $item['title'] . '</h3>';
          $output .= $item['description'];
        }
      }

      return $output;
    case 'admin/config/services/yahoopipes':
      return '<p>'. t('<a href="!pipes">Pipes</a> is a powerful composition tool to aggregate, manipulate, and mashup content from around the web. This page allows you to manipulate how it functions. See the <a href="@help">help page</a> for an example of it in use.', array('!pipes' => 'http://pipes.yahoo.com', '@help' => url('admin/help/yahoopipes'))) .'</p>';
  }
}

/**
 * Implement hook_permission().
 */
function yahoopipes_permission() {
  return array(
    'administer yahoo pipes' => array(
      'title' => t('Administer Yahoo Pipes'),
      'description' => t('Manage the way Yahoo Pipes behave.'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function yahoopipes_menu() {
  $items['admin/config/services/yahoopipes'] = array(
    'title' => 'Yahoo! Pipes',
    'description' => 'Manage Pipes that will be queried periodically.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yahoopipes_admin_form'),
    'access arguments' => array('administer yahoo pipes'),
    'file' => 'yahoopipes.admin.inc',
  );
  return $items;
}

/**
 * Read in a Yahoo Pipe.
 *
 * @param $id
 *   The ID of the Yahoo Pipe. This can be found in the URL of the pipe. In the
 *   following URL, the ID would be "yp4aYwAI3RG0uvoh60jTQA".
 *   http://pipes.yahoo.com/pipes/pipe.info?_id=yp4aYwAI3RG0uvoh60jTQA
 *
 * @param $arguments
 *   (optional) An associative array of arguments to pass to the Pipe.
 *
 * @param $reset
 *   (optional) Force a reset of the cache with the given pipe.
 */
function yahoopipes($id, $arguments = array(), $reset = FALSE) {
  $pipes = &drupal_static(__FUNCTION__, array());
  // Hold a key, which consists of the ID and the rendered arguments, so that we
  // can properly cache the results.
  $key = $id . '&'.  drupal_http_build_query($arguments);

  if (!isset($pipes[$key]) || $reset) {
    if (!$reset && ($cache = cache_get('yahoopipes:'. $key)) && !empty($cache->data)) {
      $pipes[$key] = $cache->data;
    }
    else {
      // Prepare the data and construct the URL for the GET request.
      $data = NULL;
      $url = 'http://pipes.yahoo.com/pipes/pipe.run?_id='. $key .'&_render=php';

      if (variable_get('yahoopipes_curl', FALSE)) {
        static $curl;
        if (!isset($curl)) {
          $curl = curl_init();
        }
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 5);
        curl_setopt($curl, CURLOPT_URL, $url);
        $data = curl_exec($curl);
      }
      else {
        $request = drupal_http_request($url);
        $data = $request->data;
      }

      // Pipes returns a serialized array.
      $pipes[$key] = unserialize($data);

      // Save the result in the cache.
      $time = variable_get('yahoopipes_cache_time', 10);
      $time = is_numeric($time)? ((int)$time) * 60 + time() : CACHE_PERMANENT;
      cache_set('yahoopipes:'. $key, $pipes[$key], 'cache', $time);
    }
  }

  return $pipes[$key];
}
