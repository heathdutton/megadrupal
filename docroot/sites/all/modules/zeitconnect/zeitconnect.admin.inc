<?php

/**
 * @file
 * Administrative page callbacks for the ZeitConnect module.
 */

/**
 * Form constructor for the configuration page.
 *
 * @see zeitconnect_admin_settings_form_validate()
 * @see zeitconnect_admin_settings_form_submit()
 * @ingroup forms
 */
function zeitconnect_admin_settings_form($form_state) {
  $form['account'] = array(
    '#type' => 'fieldset',
    '#title' => t('Your account'),
  );

  $form['account']['zeitconnect_account'] = array(
    '#title' => t('Module token'),
    '#type' => 'textfield',
    '#default_value' => variable_get('zeitconnect_account', ''),
    '#size' => 25,
    '#maxlength' => 32,
    '#required' => TRUE,
    '#description' => t('This token is generated by your ZeitConnect account, when your account is first created. To get the token for your account, log in to your ZeitConnect account and look under the "My Account" menu'),
  );
  $form['widgets'] = array(
    '#type' => 'fieldset',
    '#title' => t('Available widgets'),
    '#description' => t('Mark the widgets you would like to use on the site. For each checkbox you check, you will see a new block in the !url interface', array('!url' => l(t('Blocks'), 'admin/structure/block'))),
  );
  if (variable_get('zeitconnect_account')) {
    $ret = drupal_http_request('http://www.zeitconnect.com/api/widgets/token/' . variable_get('zeitconnect_account'));
    if (isset($ret->error)) {
      drupal_set_message(t('Was not able to reach ZeitConnect service!'));
      $widgets = NULL;
    }
    else {
      $widgets = drupal_json_decode($ret->data);
    }
    if ($widgets) {
      $types = array(
        1 => t('Schedule'),
        2 => t('Prospect'),
        4 => t('Enrollment'),
      );
      $names = array();
      foreach ($widgets as $widget) {
        $names[$widget['wkey']] = $widget['name'] . ' ( ' . $types[$widget['type']] . ' )';
        $form['widgets']['zeitconnect_' . $widget['wkey']] = array(
          '#title' => check_plain($widget['name'] . ' ( ' . $types[$widget['type']] . ' )'),
          '#type' => 'checkbox',
          '#default_value' => variable_get('zeitconnect_' . $widget['wkey'], ''),
        );
      }
      if (isset($names)) {
        $form['widget_names'] = array(
          '#type' => 'hidden',
          '#default_value' => drupal_json_encode($names),
        );
      }
    }
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Settings'),
  );

  return $form;
}

/**
 * Implements _form_validate().
 */
function zeitconnect_admin_settings_form_validate($form, &$form_state) {
  $form_state['values']['zeitconnect_account'] = trim($form_state['values']['zeitconnect_account']);

  if (drupal_strlen($form_state['values']['zeitconnect_account']) < 32) {
    form_set_error('zeitconnect_account', t('A valid ZeitConnect token should be 32 characters long'));
  }
}

/**
 * Implements _form_submit().
 */
function zeitconnect_admin_settings_form_submit($form, &$form_state) {
  db_truncate('zeitconnect')->execute();
  variable_set('zeitconnect_account', $form_state['values']['zeitconnect_account']);

  if (isset($form_state['values']['widget_names'])) {
    $names = drupal_json_decode($form_state['values']['widget_names']);
    if (count($names) > 0) {
      foreach ($form_state['values'] as $key => $value) {
        if (drupal_substr($key, 0, 12) == 'zeitconnect_') {
          variable_set($key, $value);
          $wkey = drupal_substr($key, 12, 5);
          if ($value == '1') {
            $rec = array(
              'wkey' => $wkey,
              'name' => $names[$wkey],
            );
            drupal_write_record('zeitconnect', $rec);
          }
          else {
            db_delete('zeitconnect')
              ->condition('wkey', drupal_substr($wkey, 5, 5))
              ->execute();
          }
        }
      }
      drupal_set_message(t('Settings saved successfully!'), 'status');
    }
    else {
      drupal_set_message(t('You must create some widgets before they show up here!'), 'error');
    }
  }
}
