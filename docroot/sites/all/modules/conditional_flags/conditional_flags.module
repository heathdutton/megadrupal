<?php

/**
 * Get the Flag's conditions
 */
function conditional_flags_get($name) {

  // Get conditions from static cache.
  $conditions = &drupal_static(__FUNCTION__, array());

  // Get conditions from drupal cache.
  if (empty($conditions)) {
    $cache_cid = 'conditional_flags_conditions';
    $cache = cache_get($cache_cid);

    if (!empty($cache->data)) {
      $conditions = $cache->data;
    }
  }
  
  // Get from hook_conditional_flags_conditions().
  if (empty($conditions)) {
    $conditions_hook = 'conditional_flags_conditions';
    foreach (module_implements($conditions_hook) as $module) {
      $conditions = array_merge($conditions, (array) module_invoke($module, $conditions_hook));
    }

    // Save to cache
    cache_set($cache_cid, $conditions, 'cache');
  }

  return !empty($conditions[$name]) ? $conditions[$name] : array();
}

/**
 * Implements hook_flag_alter().
 */
function conditional_flags_flag_alter(&$flag) {

  // Get the Flag's conditions
  $conditions = conditional_flags_get($flag->name);

  if (!empty($conditions)) {

    $flag->conditions = $conditions;
  }
}

/**
 * Implements hook_flag().
 * 
 * Act on a flagging.
 */
function conditional_flags_flag($op, $flag, $content_id, $account, $fcid) {
  // dd(array($op, $flag, $content_id, $fcid));
  
  // Check if exist a conditions for the Flag
  if (!empty($flag->conditions)) {
    foreach ($flag->conditions as $action => $reactions) {
      
      // Check if the action of the Flag is the $op action
      if ($action == $op && !empty($reactions)) {
        foreach ($reactions as $target_name => $target_action) {

          // Execute the reactions for the action
          flag($target_action, $target_name, $content_id, $account);
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_THEME_NAME().
 */
function conditional_flags_preprocess_flag(&$vars, $hook) {
  // Avoid duplication of conditions on settings
  $conditional_flags = &drupal_static(__FUNCTION__, array());
  
  if (!empty($vars['flag']->conditions) && empty($conditional_flags[$vars['flag']->name])) {
    
    drupal_add_js(array(
      'FlagConditions' => array(
        $vars['flag']->name => $vars['flag']->conditions,
      ),
    ), 'setting');
    
    $conditional_flags[$vars['flag']->name] = $vars['flag']->conditions;
    
    drupal_add_js(drupal_get_path('module', 'conditional_flags') . '/js/conditional_flags.js');
  }

}
