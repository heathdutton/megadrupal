<?php


/**
 * Define default web service descriptions.
 *
 * Currently provides 'topic', 'mqlread' and  'search' API definitions
 * as described at https://developers.google.com/freebase/
 *
 * @return
 *   An array of web service descriptions with the web service names as keys.
 */
function googleapi_wsclient_default_wsclient_service() {
  // Note the field 'type' is not identical to Drupal fields,
  // and is closer to the data types used by Rules.
  // eg, 'text_formatted'
  // @see rules_rules_core_data_info()

  $service = new WSClientServiceDescription();
  $service->name = 'freebase';
  $service->label = 'Google Freebase.';
  $service->url = "https://www.googleapis.com/freebase/v1/";
  $service->type = 'rest';
  $service->authentication = 'null';

  // Add info about the REST service,
  // @see https://developers.google.com/freebase/v1/topic
  $operation['label'] = 'Topic lookup';
  $operation['url'] = 'topic@id';
  $operation['type'] = 'GET';
  $operation['parameter']['id'] = array(
    'type' => 'token',
    'label' => 'ID',
    'description' => "The ID of the item that you want data about.",
  );
  $operation['parameter']['dateline'] = array(
    'type' => 'text',
    'label' => 'dateline',
    'description' => "Determines how up-to-date the data returned is. A UNIX epoch time, a <code>guid</code> or <code>now</code>.",
    'optional' => TRUE,
  );
  $operation['parameter']['filter'] = array(
    'type' => 'text',
    'label' => 'filter',
    'description' => 'A Freebase domain, type or property ID. <code>suggest</code>, <code>commons</code>, or <code>all</code>. Filter the results and return only appropriate properties. See <a href="https://developers.google.com/freebase/v1/topic-overview#filter">filters parameter details</a> for more information.',
    'optional' => TRUE,
  );
  $operation['parameter']['lang'] = array(
    'type' => 'text',
    'label' => 'lang',
    'description' => 'The language you\'d like the content in - a Freebase /type/lang language key.',
    'optional' => TRUE,
  );
  $operation['parameter']['limit'] = array(
    'type' => 'integer',
    'label' => 'Limit',
    'optional' => TRUE,
    'description' => 'The maximum number of property values to return for each property. Must be a positive integer. Default is 10.',
  );
  $operation['parameter']['raw'] = array(
    'type' => 'boolean',
    'label' => 'raw',
    'optional' => TRUE,
    'description' => 'Do not apply any constraints, or get any names. (Default: false)',
  );
  $operation['result'] = array(
    'type' => 'text',
    'label' => 'Topic'
  );
  $service->operations['topic'] = $operation;

  // @see https://developers.google.com/freebase/v1/mqlread
  $operation = array();
  $operation['label'] = 'MQL Read';
  $operation['url'] = 'mqlread';
  $operation['type'] = 'GET';
  $operation['parameter']['query'] = array(
    'type' => 'text_formatted',
    'label' => 'Query',
    'description' => "An envelope containing a single MQL query.",
  );
  $operation['parameter']['as_of_time'] = array(
    'type' => 'date',
    'label' => 'as_of_time',
    'optional' => TRUE,
    'description' => 'Run the query as it would have been run at the specified point in time. Must be a valid timestamp (e.g. "2007-01-09T22" or "2007-02").',
  );
  $operation['parameter']['callback'] = array(
    'type' => 'text',
    'label' => 'callback',
    'optional' => TRUE,
    'description' => 'JS method name for JSONP callbacks.',
  );
  $operation['parameter']['cost'] = array(
    'type' => 'text',
    'label' => 'cost',
    'optional' => TRUE,
    'description' => 'Toggles whether or not to show the costs. (Default: false)',
  );
  $operation['parameter']['cursor'] = array(
    'type' => 'text',
    'label' => 'Cursor',
    'optional' => TRUE,
    'description' => 'The MQL cursor. Provides a mechanism for paging out results. Can be used in conjunction with limit directive in MQL. Contains either no value (for the first request e.g. /mqlread?cursor=&query=...) OR a valid cursor returned by a previous request.'
  );
  $operation['parameter']['dateline'] = array(
    'type' => 'text',
    'label' => 'dateline',
    'description' => "The dateline that you get in a mqlwrite response to ensure consistent results.",
    'optional' => TRUE,
  );
  $operation['parameter']['html_escape'] = array(
    'type' => 'boolean',
    'label' => 'html_escape',
    'optional' => TRUE,
    'description' => 'Whether or not to escape entities. (Default: true)',
  );
  $operation['parameter']['indent'] = array(
    'type' => 'integer',
    'label' => 'indent',
    'optional' => TRUE,
    'description' => 'How many spaces to indent the JSON. (Default: false.)',
  );
  $operation['parameter']['lang'] = array(
    'type' => 'text',
    'label' => 'lang',
    'description' => 'The language of the results. An ID of a <code>/type/lang</code> object. Default: <code>/lang/en</code>',
    'optional' => TRUE,
  );
  $operation['parameter']['uniqueness_failure'] = array(
    'type' => 'text',
    'label' => 'uniqueness_failure',
    'description' => 'How MQL responds to uniqueness failures.',
    'optional' => TRUE,
  );
  $service->operations['mqlread'] = $operation;


  // @see https://developers.google.com/freebase/v1/search
  $operation = array();
  $operation['label'] = 'Search';
  $operation['url'] = 'search';
  $operation['type'] = 'GET';
  $operation['parameter']['query'] = array(
    'type' => 'text',
    'label' => 'Query',
  );
  $operation['parameter']['as_of_time'] = array(
    'type' => 'date',
    'label' => 'as_of_time',
    'optional' => TRUE,
    'description' => 'Run the query as it would have been run at the specified point in time. Must be a valid timestamp (e.g. "2007-01-09T22" or "2007-02").',
  );
  $operation['parameter']['callback'] = array(
    'type' => 'text',
    'label' => 'callback',
    'optional' => TRUE,
    'description' => 'JS method name for JSONP callbacks.',
  );
  $operation['parameter']['cursor'] = array(
    'type' => 'text',
    'label' => 'Cursor',
    'optional' => TRUE,
    'description' => 'The MQL cursor. Provides a mechanism for paging out results. Can be used in conjunction with limit directive in MQL. Contains either no value (for the first request e.g. /mqlread?cursor=&query=...) OR a valid cursor returned by a previous request.'
  );
  $operation['parameter']['domain'] = array(
    'type' => 'text',
    'label' => 'domain',
    'optional' => TRUE,
    'description' => 'Restrict to topics with this Freebase domain ID.',
  );
  $operation['parameter']['encode'] = array(
    'type' => 'text',
    'label' => 'encode',
    'optional' => TRUE,
    'description' => 'The encoding of the response. You can use this parameter to enable HTML encoding.',
  );
  $operation['parameter']['exact'] = array(
    'type' => 'boolean',
    'label' => 'exact',
    'optional' => TRUE,
    'description' => 'Query on exact name and keys only.',
  );
  $operation['parameter']['filter'] = array(
    'type' => 'text_formatted',
    'label' => 'filter',
    'optional' => TRUE,
    'description' => 'The filter parameter allows you to create more complex rules and constraints to apply to your query.',
  );
  $operation['parameter']['format'] = array(
    'type' => 'text',
    'label' => 'format',
    'optional' => TRUE,
    'description' => 'Structural format of the JSON response.',
  );
  $operation['parameter']['indent'] = array(
    'type' => 'boolean',
    'label' => 'indent',
    'optional' => TRUE,
    'description' => 'Whether to indent the JSON results or not.',
  );
  $operation['parameter']['lang'] = array(
    'type' => 'text',
    'label' => 'lang',
    'optional' => TRUE,
    'description' => "The code of the language with which to run the query. Default is 'en'.",
  );
  $operation['parameter']['limit'] = array(
    'type' => 'integer',
    'label' => 'limit',
    'optional' => TRUE,
    'description' => "Maximum number of results to return. By default, 20 matches in decreasing order of relevance are returned, if that many exist. Fewer or more matches may be requested by using the limit parameter with a different value.",
  );
  $operation['parameter']['mql_output'] = array(
    'type' => 'text_formatted',
    'label' => 'mql_output',
    'optional' => TRUE,
    'description' => "The MQL query to run againist the results to extract more data. After the query is run, the matching documents' IDs are passed to the mql_output MQL query to retrieve actual data about the matches. The MQL results are sorted by decreasing relevance score. ",
  );
  $operation['parameter']['prefixed'] = array(
    'type' => 'boolean',
    'label' => 'prefixed',
    'optional' => TRUE,
    'description' => 'Prefix match against names and aliases.',
  );
  $operation['parameter']['scoring'] = array(
    'type' => 'text',
    'label' => 'scoring',
    'optional' => TRUE,
    'description' => "Relevance scoring algorithm to use.",
  );
  $operation['parameter']['spell'] = array(
    'type' => 'text',
    'label' => 'spell',
    'optional' => TRUE,
    'description' => "Request 'did you mean' suggestions ",
  );
  $operation['parameter']['stemmed'] = array(
    'type' => 'boolean',
    'label' => 'stemmed',
    'optional' => TRUE,
    'description' => "Query on stemmed names and aliases. May not be used with prefixed.",
  );
  $operation['parameter']['type'] = array(
    'type' => 'text',
    'label' => 'type',
    'optional' => TRUE,
    'description' => "Restrict to topics with this Freebase type id.",
  );
  $operation['parameter']['with'] = array(
    'type' => 'text_formatted',
    'label' => 'with',
    'optional' => TRUE,
    'description' => "A filter rule to match against.",
  );
  $operation['parameter']['without'] = array(
    'type' => 'text_formatted',
    'label' => 'without',
    'optional' => TRUE,
    'description' => "A filter rule to not match against.",
  );
  $service->operations['search'] = $operation;

  $services[$service->name] = clone $service;

  // Other Google API services (non-freebase) can come here too.


  return $services;
}

