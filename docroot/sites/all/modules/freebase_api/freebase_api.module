<?php
/**
 * @file Freebase API
 *
 * Utility to make requests from the Freebase API.
 *
 * See the README for theory and usage.
 *
 * @author 'dman' Dan Morrison http://coders.co.nz/
 * @version 2014
 */

module_load_include('inc', 'freebase_api', 'freebase_api');


/**
 * Publishes admin config page and autocomplete callbacks.
 *
 * Implements hook_menu().
 */
function freebase_api_menu() {
  $items = array();
  $items['admin/config/services/freebase'] = array(
    'title' => 'Google Freebase',
    'description' => 'Freebase settings and tests.',
    'page callback' => 'freebase_api_admin_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'freebase_api.admin.inc',
  );
  $items['freebase_api/topic_autocomplete_callback'] = array(
    'title' => 'Autocomplete Freebase topic lookup',
    'page callback' => 'freebase_api_topic_autocomplete_callback',
    'access arguments' => array('access content'),
    'file' => 'freebase_api.admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['freebase_api/schema_autocomplete_callback'] = array(
    'title' => 'Autocomplete Freebase schema lookup',
    'page callback' => 'freebase_api_schema_autocomplete_callback',
    'access arguments' => array('access content'),
    'file' => 'freebase_api.admin.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}


/**
 * Implements hook_help()
 */
function freebase_api_help($path, $arg) {
  switch ($path) {
    case 'admin/config/services/freebase':
      return t('Sample queries here are for lightweight testing only. To really test the services with all options and diagnostics, enable and use the <a href="!test_link">WSClient tester module</a>', array('!test_link' => url('/admin/config/services/wsclient/manage/freebase/operation')));
  }
}


/**
 * hook_rdf_namespaces()
 *
 * Used on the off-change that the system is RDF-aware.
 * @see rdf.api D7
 */
function freebase_api_rdf_namespaces() {
  return array(
    'freebase'  => FB_NS,
  );
}


/**
 * Util to return an array of type IDs matching the freebase versions of any
 * known rdf mapping for a named entity type
 *
 * Currently unused, but here for reference to illustrate three gotchas in the
 * process.
 * array_map() to convert rdf CURIE to freebase slash notation
 * array_filter() to remove non-freebase items
 * and array_values() to remap to a zero-based array
 *
 * @return a zero-numbered array of freebase-style types that match the
 * named bundle definition. Empty array if none, or the rdf types are not
 * freebase.
 */
function freebase_api_schema_ids_for_bundle($type = 'node', $bundle = 'page') {
  if (! module_exists('rdf_mapping')) {
    watchdog('freebase_api', 'Cannot load schema IDs without an rdf_mapping utility, returning empty set.', array(), WATCHDOG_WARNING);
    return array();
  }
  $bundle_info = rdf_mapping_bundle_load($type, $bundle);
  if (empty($bundle_info['rdf_mapping'])) {
    return array();
  }
  $rdf_mapping = $bundle_info['rdf_mapping'];
  $rdf_schema_ids = (array)$rdf_mapping['rdftype'];
  // Convert the rdf curies to freebase keys.
  $freebase_schema_ids = array_filter(array_map('freebase_api_rdf_curie_to_freebase_id', $rdf_schema_ids));
  // Renumber it, as freebase_suggest requires a zero-numbered simple array, not an obj.
  $freebase_schema_ids = array_values($freebase_schema_ids);
  return $freebase_schema_ids;
}

/**
 * Render a link to a Freebase topic
 *
 * Utility function for data dumps.
 */
function freebase_api_link($id, $label = null, $options = array()) {
  return l((empty($label) ? $id : $label), 'http://www.freebase.com' . $id);
}

/**
 * Theme functions used by this module.
 */
function freebase_api_theme() {
  $theme = array();
  $theme['freebase_api_topic_summary'] = array(
    'file' => 'freebase_api.theme.inc',
    'variables' => array(
      'topic' => NULL,
      'nested' => NULL,
     ),
  );
  $theme['freebase_api_search_results'] = array(
    'file' => 'freebase_api.theme.inc',
    'variables' => array(
      'response' => NULL,
     ),
  );
  $theme['freebase_api_schema_summary'] = array(
    'file' => 'freebase_api.theme.inc',
    'variables' => array(
      'response' => NULL,
     ),
  );
  return $theme;
}

