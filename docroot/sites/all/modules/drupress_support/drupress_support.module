<?php
/**
 * @file
 */

/**
 * Implements hook_date_format_types().
 */
function drupress_support_date_format_types() {
  return array(
    'day'   => t('Day'),
    'month' => t('Month'),
    'year'  => t('Year'),
  );
}

/**
 * Implements hook_date_formats().
 */
function drupress_support_date_formats() {
  // Define format strings for our custom formats.
  $formats = array(
    array(
      'type'    => 'day',
      'format'  => 'd',
      'locales' => array(),
    ),
    array(
      'type'    => 'month',
      'format'  => 'm',
      'locales' => array(),
    ),
    array(
      'type'    => 'year',
      'format'  => 'Y',
      'locales' => array(),
    ),
  );

  // Save the custom date formats into variables.
  foreach ($formats as $format) {
    variable_set('date_format_' . $format['type'], $format['format']);
  }

  return $formats;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function drupress_support_form_node_form_alter(&$form, &$form_state, $form_id) {
  $form['body'][$form['language']['#value']][0]['summary']['#attached']['js'][0] = drupal_get_path('module', 'drupress_support') . '/drupress_support.js';
}

/**
 * Implementation of hook_field_widget_form_alter().
 *
 * Add WYSIWYG treatment to textarea summary form items.
 */
function drupress_support_field_widget_form_alter(&$element, &$form_state, $context) {
  if (isset($element['summary'])) {
    // Hide the format selector.
    drupal_add_css(drupal_get_path('module', 'drupress_support') . '/drupress_support.css');
    $element['summary']['#type'] = 'text_format';
    if (module_exists('better_formats') && isset($form_state['field']['body']['und']['instance']['settings']['better_formats'])) {
      $formats = array_filter(array_keys($form_state['field']['body']['und']['instance']['settings']['better_formats']['allowed_formats']));
      $element['summary']['#format'] = array_shift($formats);
    }
    else {
      $element['summary']['#format'] = $element['#format'];
    }
  }
}

/**
 * Implements hook_field_attach_presave().
 */
function drupress_support_field_attach_presave($entity_type, $entity) {
  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);

  foreach (field_info_instances($entity_type, $bundle) as $instance) {
    $field = field_info_field_by_id($instance['field_id']);
    $field_name = $field['field_name'];
    if ($field['type'] == 'text_with_summary' && !empty($entity->$field_name)) {
      $language = $entity->language;
      foreach ($entity->{$field_name}[$language] as $id => &$value) {
        if (isset($value['summary']) && is_array($value['summary'])) {
          $value['summary'] = $value['summary']['value'];
        }
      }
    }
  }
}


/**
 * Implements hook_views_api().
 */
function drupress_support_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Implements hook_views_default_views_alter().
 */
function drupress_support_views_default_views_alter(&$views) {
  // Order the archive summary block in descenting order.
  if (isset($views['archive'])) {
    $views['archive']->display['block']->display_options['title'] = t('Archive');
    $views['archive']->display['block']->display_options['arguments']['created_year_month']['summary']['sort_order'] = 'desc';
  }
}
