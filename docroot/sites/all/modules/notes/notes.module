<?

/**
 * Implements hook_block_info().
 */
function notes_block_info() {
  $blocks['note-add'] = array(
    'info' => t('Add Note'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['note-view'] = array(
    'info' => t('View Note'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function notes_block_view($delta = '') {
  global $user;
  switch($delta) {
    case 'note-add':
      $output = '';
      if (user_access('create notes content')) {
        module_load_include('inc', 'node', 'node.pages'); 
        
        // see if the user has a note referencing this location
        // if so... load it.
        if (user_access('edit own notes content')) {
          $query = new EntityFieldQuery;
          $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'notes')
            ->fieldCondition('field_notes', 'cpath', current_path(), '=')
            ->propertyCondition('uid', $user->uid, '=');
          $entities = $query->execute();
          if (!empty($entities)) {
            $nids = array_keys($entities['node']);
            $nid = array_shift($nids);
            $node = node_load($nid);
          }
        }
        
        // setup a dummy node object if they can add notes and have not already
        // added a note here

        if (empty($node) && user_access('add notes content')) {
          $node = (object) array(
            'uid' => $user->uid, 
            'name' => (isset($user->name) ? $user->name : ''), 
            'type' => 'notes', 
            'language' => LANGUAGE_NONE
          );
        }

        if (!empty($node)) {
          // unfortunately node_add($type); calls drupal_set_title()
          $output = drupal_get_form('notes_node_form', $node);
          $output['#attributes']['class'][] = 'notes-block-form'; 
          drupal_add_css(drupal_get_path('module', 'notes') . '/notes.css');
        }

        $block['subject'] = t('Add Note');
        $block['content'] =  !empty($output) ? $output : '';
      }
    break;
    case 'note-view':

      $query = new EntityFieldQuery;
      $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'notes')
        ->fieldCondition('field_notes', 'cpath', current_path(), '=');
      $entities = $query->execute();
      $content = array();
      if (!empty($entities['node'])) {
        $content = node_view_multiple(node_load_multiple(array_keys($entities['node'])), 'teaser');
      }
      if (!empty($content)) {
        $content['pager'] = array(
          '#theme' => 'pager',
          '#weight' => 5,
        );
      }
      $block['subject'] = t('Notes referring to here');
      $block['content'] = $content;
    break;

  }
  return $block;
}

function _notes_replace_vtabs_to_fieldsets(&$item, $key) {
  if ($item == 'vertical_tabs' && $key == '#type') {
    $item = 'fieldset';
  }
}

function notes_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'notes_node_form') {
    array_walk_recursive($form, '_notes_replace_vtabs_to_fieldsets');
  }
}
