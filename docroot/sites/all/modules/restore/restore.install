<?php
/**
 * @file
 * Restore module install file.
 */

/**
 * Implements hook_requirements().
 */
function restore_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    $output = '';
    $severity = REQUIREMENT_INFO;

    $scripts = restore_scripts();
    if (count($scripts)) {
      $header = array(
        array('data' => $t('Status'), 'width' => 100),
        array('data' => $t('Script')),
      );

      $rows = array();

      foreach ($scripts as $script) {
        $status = $script->status();
        $style = 'border-radius: 5px 5px 5px 5px; cursor: help; display: inline-block; padding: 0 5px;';

        switch ($status) {
          case RestoreScript::STATUS_OVERRIDEN:
            $title = $t('Overriden');
            $tip = $t('This script is overriden.');
            $style .= 'background-color: #333333; color: white;';
            break;

          case RestoreScript::STATUS_ACTIVE:
            $title = $t('Active');
            $tip = $t('This script is active.');
            $style .= 'background-color: green; color: white;';
            break;

          case RestoreScript::STATUS_ERROR:
            $title = $t('Error');
            $tip = $t('This script has an error.');
            $style .= 'background-color: red; color: white;';
            break;

          default:
            $title = $t('Missing');
            $tip = $t('This script has missing items.');
            $style = 'background-color: #ffaf00; color: #333333;';
        }

        $rows[] = array(
          "<span title=\"{$tip}\" style=\"{$style}\">{$title}</span>",
          l($script->title(), RESTORE_MENU_PATH . '/script/' . $script->name() . '/view'),
        );
      }

      $output .= theme('table', array('header' => $header, 'rows' => $rows));
    }
    else {
      $output .= t('There are currently no restore scripts.');
    }

    $requirements['restore'] = array(
      'title' => $t('Restore scripts'),
      'value' => $output,
      'severity' => $severity,
    );
  }

  return $requirements;
}
