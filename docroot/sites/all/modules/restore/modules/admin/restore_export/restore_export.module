<?php
/**
 * @file
 * The restore script export module.
 */

define('RESTORE_EXPORT_PERM_EXPORT', 'export restore scripts');

/**
 * Implements hook_menu().
 */
function restore_export_menu() {
  $items = array();

  $items[RESTORE_MENU_PATH . '/script/%restore/export'] = array(
    'title' => 'Export',
    'description' => 'Export the current script.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('restore_export_ui_script_export', 5),
    'access arguments' => array(RESTORE_EXPORT_PERM_EXPORT),
    'weight' => 10,
    'type' => MENU_LOCAL_TASK,
    'file' => 'ui/export.ui.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function restore_export_permission() {
  $items = array();

  $items[RESTORE_EXPORT_PERM_EXPORT] = array(
    'title' => RESTORE_EXPORT_PERM_EXPORT,
    'description' => 'Allow exporting restore scripts.',
  );

  return $items;
}

/**
 * Get all the available export formats.
 *
 * @return array
 *   An array of export formats and the callbacks.
 */
function restore_export_formats() {
  $formats = &drupal_static(__FUNCTION__);

  if (!isset($formats)) {
    $formats = module_invoke_all('restore_export_format');
  }

  return $formats;
}

/**
 * Implements hook_restore_export_format().
 */
function restore_export_restore_export_format() {
  $items = array();

  $items['json'] = array(
    'title' => t('Importable JSON'),
    'callback' => 'restore_export_export__json',
  );

  $items['hook_restore_script'] = array(
    'title' => t('Export as hook_restore_script'),
    'callback' => 'restore_export_export__hook_restore_script',
  );

  return $items;
}

/**
 * Callback to the 'JSON' export format.
 */
function restore_export_export__json(RestoreScript $script) {
  $output = array();
  $output['name'] = $script->name();
  $output['title'] = $script->title();
  $output['description'] = $script->description();
  $output['group'] = $script->group();
  $output['operations'] = array();

  foreach ($script as $operation) {
    $output['operations'][] = array(
      'type' => $operation->type(),
      'items' => $operation->items(),
    );
  }

  return json_encode($output, JSON_PRETTY_PRINT);
}

/**
 * Callback to the 'hook_restore_script' export format.
 */
function restore_export_export__hook_restore_script(RestoreScript $script) {
  /**
   * Helper function to prettify the JSON output.
   */
  function prettyPrint(array $print, array &$output, $tabs = 2) {
    foreach ($print as $key => $value) {
      $str = str_pad(' ', $tabs) . '"' . $key . '" => ';
      if (is_bool($value)) {
        $str .= $value ? 'TRUE' : 'FALSE';
      }
      elseif (is_array($value)) {
        $str .= 'array(';
        $output[] = $str;
        prettyPrint($value, $output, $tabs + 2);
        $str = str_pad(' ', $tabs) . ')';
      }
      elseif (is_numeric($value)) {
        $str .= $value;
      }
      else {
        $str .= '"' . $value . '"';
      }

      $output[] = "{$str},";
    }
  }

  $output = array();
  $output[] = 'function MYMODULE_hook_restore_script() {';
  $output[] = '  $items = array();';
  $output[] = '';
  $output[] = '  $items[\'' . $script->name() . '\'] = array(';
  $output[] = '    "title" => "' . $script->title() . '",';
  $output[] = '    "description" => "' . $script->description() . '",';
  $output[] = '    "group" => "' . $script->group() . '",';
  $output[] = '    "operations" => array(';

  foreach ($script as $operation) {
    $output[] = '      array(';
    $output[] = '        "type" => "' . $operation->type() . '",';
    $output[] = '        "items" => ' . prettyPrint($operation->items(), $output, 10);
    $output[] = '      ),';
  }

  $output[] = '    ),';
  $output[] = '  );';
  $output[] = '';
  $output[] = '  return $items;';
  $output[] = '}';
  $output[] = '';

  return implode("\n", $output);
}

/**
 * Export a given script in the provided format.
 *
 * @param RestoreScript $script
 *   The script to export.
 * @param string $format
 *   The export format.
 *
 * @return string|boolean
 *   The exported script, or FALSE.
 */
function restore_export_export(RestoreScript $script, $format) {
  $formats = restore_export_formats();
  if (!isset($formats[$format]) || !is_callable($formats[$format]['callback'])) {
    return FALSE;
  }

  return call_user_func_array($formats[$format]['callback'], array($script));
}
