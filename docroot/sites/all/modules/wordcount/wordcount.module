<?php

/**
 * @file
 * View number of words contributed by each user.
 *
 */

/**
 * Implements hook_permission().
 */
function wordcount_permission() {
  return array(
    'view word count' => array(
      'title' => t('View word count'),
      'description' => t('Access word count statistics.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function wordcount_menu() {
  $items['admin/reports/wordcount'] = array(
    'title' => 'Word count',
    'description' => 'View number of words contributed by each user.',
    'page callback' => 'wordcount_show_count',
    'access arguments' => array('view word count'),
  );
  return $items;
}

/**
 * Create table of word count data.
 *
 * @return String
 *   A themed HTML table of word count data
 *
 */
function wordcount_show_count() {
  // Count words.
  $rows = array();

  $posts = db_query("SELECT n.title, fdb.body_value AS body, n.uid, u.name FROM {node} AS n, {users} AS u, {field_data_body} AS fdb WHERE n.nid=fdb.entity_id and fdb.entity_type='node' and u.uid=n.uid and n.status=1");
  foreach ($posts as $post) {
    $id = $post->uid;
    if (!isset($rows[$id])) {
      $rows[$id]['id'] = $id;
      $rows[$id]['name'] = ($id) ? $post->name : variable_get('anonymous', 'Anonymous');
      $rows[$id]['posts'] = 0;
      $rows[$id]['num_words_post'] = 0;
      $rows[$id]['avg_post'] = 0;
      $rows[$id]['comments'] = 0;
      $rows[$id]['num_words_comments'] = 0;
      $rows[$id]['avg_comment'] = 0;
      $rows[$id]['total'] = 0;
    }
    $rows[$id]['posts']++;
    $rows[$id]['num_words_post'] += str_word_count(strip_tags($post->body)) + str_word_count($post->title);
  }

  $comments = array();
  $comment_on = module_exists('comment');
  if ($comment_on) {
    $comments = db_query("SELECT fdcb.comment_body_value AS comment, c.uid, c.name FROM {field_data_comment_body} AS fdcb, {comment} as c WHERE c.cid=fdcb.entity_id");
  }
  foreach ($comments as $comment) {
    $id = $comment->uid;
    if (!isset($rows[$id])) {
      $rows[$id]['id'] = $id;
      $rows[$id]['name'] = ($id) ? $comment->name : variable_get('anonymous', 'Anonymous');
      $rows[$id]['posts'] = 0;
      $rows[$id]['num_words_post'] = 0;
      $rows[$id]['avg_post'] = 0;
      $rows[$id]['comments'] = 0;
      $rows[$id]['num_words_comments'] = 0;
      $rows[$id]['avg_comment'] = 0;
      $rows[$id]['total'] = 0;
    }
    $rows[$id]['comments']++;
    $rows[$id]['num_words_comments'] += str_word_count(strip_tags($comment->comment));
  }

  foreach ($rows as $k => $v) {
    $rows[$k]['avg_post'] = ($rows[$k]['posts']) ? number_format($rows[$k]['num_words_post']/$rows[$k]['posts'], 1) : 0;
    $rows[$k]['avg_comment'] = ($rows[$k]['comments']) ? number_format($rows[$k]['num_words_comments']/$rows[$k]['comments'], 1) : 0;
    $rows[$k]['total'] = $rows[$k]['num_words_post'] + $rows[$k]['num_words_comments'];
  }
  $header = array(
    array('data' => 'id', 'field' => 'id'),
    array('data' => 'name', 'field' => 'name'),
    array('data' => 'nodes', 'field' => 'posts'),
    array('data' => 'words in nodes', 'field' => 'num_word_posts'),
    array('data' => 'words per node', 'field' => 'avg_post'),
    array('data' => 'comments', 'field' => 'comments'),
    array('data' => 'words in comments', 'field' => 'num_words_comments'),
    array('data' => 'words per comment', 'field' => 'avg_comment'),
    array('data' => 'total words', 'field' => 'total'),
  );

  $vars = array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array(
      'id' => 'wordcount',
      'class' => array('tablesorter'),
    ),
  );

  $output = theme('table', $vars);

  return $output;
}