<?php

/**
 * @file
 * Adds an rule event for when a user is blocked or unblocked.
 */

/**
 * Implements hook_user_update().
 */
function rules_block_user_user_update(&$edit, $account, $category) {
  // The original user object.
  $original = $edit['original'];

  if (isset($edit['status']) && $original->status == 1 && $edit['status'] == 0) {
    // The user has been blocked.
    rules_invoke_event('user_was_blocked', $account);
  }
  elseif (isset($edit['status']) && $original->status == 0 && $edit['status'] == 1) {
    // The user has been unblocked.
    rules_invoke_event('user_was_unblocked', $account);
  }
}

/**
 * Implements hook_rules_event_info().
 */
function rules_block_user_rules_event_info() {
  // User was blocked.
  $items['user_was_blocked'] = array(
    'label' => t('After blocking a user'),
    'group' => t('User'),
    'module' => 'rules_block_user',
    'variables' => array(
      'account' => array(
        'type' => 'user',
        'label' => t('updated user'),
      ),
    ),
  );

  // User was unblocked.
  $items['user_was_unblocked'] = array(
    'label' => t('After unblocking a user'),
    'group' => t('User'),
    'module' => 'rules_block_user',
    'variables' => array(
      'account' => array(
        'type' => 'user',
        'label' => t('updated user'),
      ),
    ),
  );

  return $items;
}
