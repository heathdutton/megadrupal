<?php
//! Drupal hook implementations.
  
//! Tokens:

/**
 * Implementation of hook_token_info().
 **/
function socbutt_token_info() {
  $info = array();
  
  $info['types']['socbutt'] = array(
    'name' => t('Socbutt tokens'),
    'description' => t("Socbutt tokens."),
  );

  $info['tokens']['socbutt']['vertical'] = array(
    'name' => t("Social button bar, vertical"),
    'description' => t("Social button bar, vertical layout."),
  );

  $info['tokens']['socbutt']['horizontal'] = array(
    'name' => t("Social button bar, horizontal"),
    'description' => t("Social button bar, horizontal layout."),
  );
  
  return $info;
}

/**
 * Implementation of hook_tokens().
 **/
function socbutt_tokens($type, $tokens, $data = array(), $options = array()) {
  $replacements = array();

  if ($type == 'socbutt') {
    $vertical = socbutt_buttons('vertical');
    $horizontal = socbutt_buttons('horizontal');

    // Loop through the available tokens.
    foreach ($tokens as $name => $original) {      
      // Find our custom tokens by name.
      switch ($name) {
        case 'vertical':
          // Give our token its value!
          $replacements[$original] = render($vertical);
          break;

        case 'horizontal':
          // Give our token its value!
          $replacements[$original] = render($horizontal);
          break;
      }
    }
  }
  
  return $replacements;
}


//! Blocks:

/**
 * Implements hook_block_info().
 *
 * This hook declares which blocks are provided by the module.
 */
function socbutt_block_info() {
  $blocks['vertical'] = array(
    // info: The name of the block.
    'info' => t('Social buttons: vertical layout'),
    'status' => FALSE,
    'region' => 'sidebar_second',
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  
  $blocks['horizontal'] = array(
    // info: The name of the block.
    'info' => t('Social buttons: horizontal layout'),
    'status' => FALSE,
    'region' => 'sidebar_second',
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function socbutt_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  $block = array();
  
  switch ($delta) {
    case 'vertical':
      $block['subject'] = NULL;
      $block['content'] = socbutt_buttons('vertical');
      break;

    case 'horizontal':
      $block['subject'] = NULL;
      $block['content'] = socbutt_buttons('horizontal');
      break;
  }
  
  return $block;
}


//! Module-specific code

/* The following links borrowed from https://github.com/cferdinandi/social-sharing

<a target="_blank" href="https://twitter.com/intent/tweet?text=YOUR-TITLE&url=YOUR-URL&via=TWITTER-HANDLE">Tweet</a>

<a target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=YOUR-URL">Share on Facebook</a>

<a target="_blank" href="https://plus.google.com/share?url=YOUR-URL">Plus on Google+</a>

<a target="_blank" href="https://www.linkedin.com/shareArticle?mini=true&url=YOUR-URL&title=YOUR-TITLE&summary=YOUR-SUMMARY&source=YOUR-URL">Share on LinkedIn</a>

<a target="_blank" href="https://pinterest.com/pin/create/button/?url=YOUR-URL&description=YOUR-DESCRIPTION&media=YOUR-IMAGE-SRC">Pin on Pinterest</a>

<a target="_blank" href="https://vk.com/share.php?url=YOUR-URL&title=YOUR-TITLE&description=YOUR-DESCRIPTION&image=YOUR-IMAGE-SRC&noparse=true">Share on VK</a>

<a target="_blank" href="https://www.xing-share.com/app/user?op=share;sc_p=xing-share;url=YOUR-URL">Share on Xing</a>

<a target="_blank" href="http://www.tumblr.com/share/link?url=YOUR-URL&description=YOUR-DESCRIPTION">Share on Tumblr</a>

<a target="_blank" href="http://www.reddit.com/submit?url=YOUR_URL&title=YOUR_TITLE">Share on Reddit</a>

*/

/**
 * Return a render array containing markup for the social sharing buttons.
 *
 * @param $vertical
 *   Do we want the buttons side-by-side (horizontal) or under each other
 *   (vertical)?
 * @return
 *   Render array containing the social buttons.
 */
function socbutt_buttons($layout = 'vertical', $msg_parts = array()) {
  global $base_url;
  
  $modulepath = drupal_get_path('module', 'socbutt');
  $horizontal = ($layout == 'horizontal');
  
  $tag = $horizontal ? 'span' : 'div';
  $horizontal_class = $horizontal ? ' inline' : '';

  $current_page_full_url = $base_url . '/' . request_path();

  $msg_parts_defaults = array(
    'subject' => drupal_get_title(),
    'body' => $current_page_full_url,
    'url' => $current_page_full_url,
  );
  
  $msg_parts = array_merge($msg_parts_defaults, $msg_parts);
  
  // URL encode so the strings can be used inside URLs;
  foreach ($msg_parts as $key => $msg) {
    $msg_parts[$key] = rawurlencode($msg);
  }
  
  $subject = $msg_parts['subject'];
  $body    = $msg_parts['body'];
  $url     = $msg_parts['url'];

  $output = array(
    '#prefix' => '<div class="social-share-links' . $horizontal_class . '">',
    '#suffix' => '</div>',
    '#attached' => array(
      'css' => array($modulepath . '/css/socbutt.min.css'),
    ),
  );
  
  $btn_classes = array('btn', 'btn-info', 'btn-xs');
  
  if ($layout == 'vertical') {
    $btn_classes[] = 'btn-block';
  }
  
  
  // mailto: link for email
  $link = "mailto:?subject=$subject&body=$body";
  $text = '<span class="fa fa-fw fa-2x fa-envelope"></span> '. t('Email');
  $output['email'] = array(
    '#prefix' => '<' . $tag . ' class="share-link share-email">',
    '#suffix' => "</$tag>",
    '#markup' => l($text, $link, array(
  	  'html' => TRUE,
  	  'attributes' => array(
    	  'class' => $btn_classes,
  	  )
	  )),
  );

  // Twitter share:
  $twitter_msg = $subject . ' -'; // Twitter adds the $url after this automatically.
  $link = "https://twitter.com/intent/tweet?text=$twitter_msg&url=$url";
  $text = '<span class="fa fa-fw fa-2x fa-twitter"></span> '. t('Twitter');
  $output['twitter'] = array(
    '#prefix' => '<' . $tag . ' class="share-link share-twitter">',
    '#suffix' => "</$tag>",
    '#markup' => l($text, $link, array(
  	  'html' => TRUE,
  	  'attributes' => array(
    	  'target' => '_blank',
    	  'class' => $btn_classes,
  	  )
	  )),
  );
  
  // Facebook share:
  $link = "https://www.facebook.com/sharer/sharer.php?u=$url";
  $text = '<span class="fa fa-fw fa-2x fa-facebook"></span> '. t('Facebook');
  $output['facebook'] = array(
    '#prefix' => '<' . $tag . ' class="share-link share-facebook">',
    '#suffix' => "</$tag>",
    '#markup' => l($text, $link, array(
  	  'html' => TRUE,
  	  'attributes' => array(
    	  'target' => '_blank',
    	  'class' => $btn_classes,
  	  )
	  )),
  );
  
  // Google Plus share:
  $link = "https://plus.google.com/share?url=$url";
  $text = '<span class="fa fa-fw fa-2x fa-google-plus"></span> '. t('Google Plus');
  $output['gplus'] = array(
    '#prefix' => '<' . $tag . ' class="share-link share-gplus">',
    '#suffix' => "</$tag>",
    '#markup' => l($text, $link, array(
  	  'html' => TRUE,
  	  'attributes' => array(
    	  'target' => '_blank',
    	  'class' => $btn_classes,
  	  )
	  )),
  );
     
  // Nested, so that Drupal's block system wraps the markup more as expected.
  return array(
    'socbutt' => $output,
  );
}
