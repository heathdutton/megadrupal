<?php
/**
 * @file
 * Code for the Character sheet basic feature.
 */

include_once('character_sheet_basic.features.inc');

/**
 * Additional features to include behaviors on a sheet.
 */

/* 
 * Implements hook_character_sheet_register_systems().
 * Given format of array of system information organized as follows:
  return array(
    'system_name' => array(                  // Machine name of the system, generally module name.
    'name' => 'System name',                 // Human name.
    'description' => 'System description',   // Human readable description.
    'admin_callback' => 'callback_function', // Admin function.
    'xp' => array(
      'types' => array('type1', 'type2'),    // Registered types of XP.
      'add_callback' => 'callback_function', // Call back function for adding XP.
    ),
  );
 */
function character_sheet_basic_character_sheet_register_systems() {
  $system['character_sheet_basic'] = array(
    'name' => 'Basic character sheet',
    'description' => 'Basic character sheet system example.',
    'admin_callback' => '_character_sheet_basic_admin_settings',
    'xp' => array(
      'types' => array('xp'),
      'add_callback' => '_character_sheet_basic_add_xp',
    ),
  );
  return $system;
}


/**
 * Implements hook_character_sheet_field_info().
 * Given format of array of field information organized as follows:
  return array(
    'field_name' => array(         // Keyed field name.
      'permissions' => array(      // Settings for permission driven changes by character sheet.
        'owner' => LIMIT_SHEET,    // For owner. DISABLE_SHEET / HIDE_SHEET / LIMIT_SHEET
        'other' => DISABLE_SHEET,  // For other people with edit permissions.
      ),
      permissions_callback => '',  // Override function to determine permissions on the field.
      validation_callback => '',   // Override function for validation on the field.
      submit_callback => '',       // Override function for submission on the field.
      'costs' => array(
        'xp_type' => 'xp',         // Type of xp to spend for cost. (Could be points, feats allowed, etc.)
        'cost' => 1,               // Cost of xp to increase. Only checked once sheet is in play, no check before that.
        'cost_mode' => 'flat',     // Override the default mode (multiplied), with flat cost per point.
        'step' => 1,               // How many steps per value. Default 1.
         value_callback => '',     // Function to handle value calculation for current value, instead of character sheet's own.
         costs_callback => '',     // Function to handle cost per next step(s), instead of character sheet's own.
      ),
    ),
  );
 */

/**
 * Implements hook_character_sheet_field_info().
 */
function character_sheet_basic_character_sheet_field_info() {
  return array(
    'title' => array( // No one can change the character name.
      'permissions' => array(
        'owner' => DISABLE_SHEET,
        'other' => DISABLE_SHEET,
      ),
    ),
    'field_back' => array(
      'permissions' => array(
        'other' => DISABLE_SHEET,
      ),
    ),
    'field_desc' => array(
      'permissions' => array(
        'other' => DISABLE_SHEET,
      ),
    ),
    'field_skill_name' => array(
      'permissions' => array(
        'owner' => DISABLE_SHEET,
      ),
    ),
    'field_skill_spec' => array(
      'permissions' => array(
        'owner' => DISABLE_SHEET,
      ),
    ),
    'field_skill_value' => array(
      'permissions' => array(
        'owner' => LIMIT_SHEET,
      ),
      'costs' => array(
        'xp_type' => 'xp',        
        'cost' => variable_get('character_sheet_basic_skill_cost', 1),
        'step' => 1,
      ),
    ),
    'field_cha' => array(
      'permissions' => array(
        'owner' => LIMIT_SHEET,
      ),
      'costs' => array(
        'xp_type' => 'xp',        
        'cost' => variable_get('character_sheet_basic_attribute_cost', 3),
        'step' => 1,
      ),
    ),
    'field_con' => array(
      'permissions' => array(
        'owner' => LIMIT_SHEET,
      ),
      'costs' => array(
        'xp_type' => 'xp',        
        'cost' => variable_get('character_sheet_basic_attribute_cost', 3),
        'step' => 1,
      ),
    ),
    'field_dex' => array(
      'permissions' => array(
        'owner' => LIMIT_SHEET,
      ),
      'costs' => array(
        'xp_type' => 'xp',        
        'cost' => variable_get('character_sheet_basic_attribute_cost', 3),
        'step' => 1,
      ),
    ),
    'field_int' => array(
      'permissions' => array(
        'owner' => LIMIT_SHEET,
      ),
      'costs' => array(
        'xp_type' => 'xp',        
        'cost' => variable_get('character_sheet_basic_attribute_cost', 3),
        'step' => 1,
      ),
    ),
    'field_str' => array(
      'permissions' => array(
        'owner' => LIMIT_SHEET,
      ),
      'costs' => array(
        'xp_type' => 'xp',        
        'cost' => variable_get('character_sheet_basic_attribute_cost', 3),
        'step' => 1,
      ),
    ),
    'field_wis' => array(
      'permissions' => array(
        'owner' => LIMIT_SHEET,
      ),
      'costs' => array(
        'xp_type' => 'xp',        
        'cost' => variable_get('character_sheet_basic_attribute_cost', 3),
        'step' => 1,
      ),
    ),
  );
}

/*
 * Callback for admin settings page for character sheets.
 */
function _character_sheet_basic_admin_settings() {
  $form['character_sheet_basic_attribute_cost'] = array(
    '#title' => 'Attribute cost',
    '#description' => 'How much XP an additional point in an attribute costs.',
    '#type' => 'textfield',
    '#default_value' => variable_get('character_sheet_basic_attribute_cost', 3),
  );
  $form['character_sheet_basic_skill_cost'] = array(
    '#title' => 'Skill cost',
    '#description' => 'How much XP points an additional point in a skill costs.',
    '#type' => 'textfield',
    '#default_value' => variable_get('character_sheet_basic_skill_cost', 1),
  );
  return $form;
}