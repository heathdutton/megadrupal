<?php
/**
 * @file av.module
 * AudienceView settings
 */

/**
 * Implements hook_menu().
 */
function av_menu() { 
  $items['admin/config/system/av'] = array(
    'title' => 'AudienceView',
    'description' => 'Configure server location and administrative account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('av_settings'),
    'access arguments' => array('administer site configuration'),
    'weight' => 0,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function av_settings($form, &$form_state) {
  $form = array();
  $form['av_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Location of AudienceView server'),
    '#default_value' => variable_get('av_url', 'https://example.com:8080'),
    '#description' => t('Address of your AudienceView server, including the http:// or https:// component and optional port number.  Do not put a trailing slash at the end.'),
    '#required' => TRUE,
  );
  if (module_exists('av_performance') || module_exists('av_user')) {
    $form['av_username'] = array(
      '#type' => 'textfield',
      '#title' => t('User with AV "Internet" role'),
      '#default_value' => variable_get('av_username', ''),
      '#description' => t('User account that has permissions to acccess Performances and/or Users in AudienceView'),
      '#required' => TRUE,
      '#size' => 25,
    );
    $form['av_password'] = array(
      '#type' => 'password',
      '#title' => t('Password'),
      '#default_value' => variable_get('av_password', ''),
      '#required' => TRUE,
      '#size' => 25,
    );
  }
  return system_settings_form($form);
}
function av_settings_validate($form, &$form_state) {
  if ($form_state['input']['av_username']) {
    $result = av_login($form_state['input']['av_username'], $form_state['input']['av_password']);
    if ($result == TRUE) {
      drupal_set_message(t('Test connection successful'));
    } 
    else {
      drupal_set_message(t('Test connection failed, not able to connect to AudienceView. Please verify your credentials and URL and try again.'), 'error');
    }
  }
}

function av_login($username, $password) {
  $cookie_jar = tempnam(file_directory_temp(), 'drupal_av_cookie' . date('U') . rand());
  $url = variable_get('av_url') . "/WebAPI/session/authenticateUser";
  $strPost = "userid=" . urlencode($username) . "&password=" . urlencode($password);

  $ch = @curl_init();
  @curl_setopt($ch, CURLOPT_POSTFIELDS, $strPost);
  @curl_setopt($ch, CURLOPT_URL, $url);
  @curl_setopt($ch, CURLOPT_COOKIESESSION, TRUE);
  @curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie_jar);
  @curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
  $response = @curl_exec($ch);

  $status = 1; // set fail condition becaause PHP defaults to 0 for no response
  $root = simplexml_load_string($response);
  $data = get_object_vars($root);

  $status = $data['result']->status;

  unlink($cookie_jar) or drupal_set_message(t("Can't unlink @file.", array('@file' => $cookie_jar)));

  if ($status == 0 ) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}
