<?php
/**
 * @file av_user.module
 * Provides integration with AudienceView Users data
 */

/**
 * Implements hook_menu().
 */
function av_user_menu() { 
  $items['av/user'] = array(
    'title' => 'AudienceView User',
    'description' => 'Display AV User Data',
    'page callback' => 'av_user_show',
    'page arguments' => array(2),
    'access arguments' => array('administer site configuration'),
    'weight' => 0,
    'type' => MENU_NORMAL_ITEM,
  );  

  return $items;
}

function av_user_show($user_id) {
  $output = '';
  $result = av_user_get($user_id);

  if ($user_id) {
    foreach ($result as $idx => $value) {
      $output .= '<dt>' . $idx . '</dt> <dd> ' . $value . '</dd>';
    }
  }
  else {
    drupal_set_message(t('You must provide a user_id at the end of the URL.'), 'error');
  }
  return $output; 
}

function av_user_get($user_id) {

  $cookie_jar = tempnam(file_directory_temp(), 'drupal_av_cookie' . date('U') . rand());
  $url = variable_get('av_url') . "/WebAPI/session/authenticateUser";
  $strPost = "userid=" . urlencode(variable_get('av_username')) . "&password=" . urlencode(variable_get('av_password'));

  $ch = @curl_init();
  @curl_setopt($ch, CURLOPT_POSTFIELDS, $strPost);
  @curl_setopt($ch, CURLOPT_URL, $url);
  @curl_setopt($ch, CURLOPT_COOKIESESSION, TRUE);
  @curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie_jar);
  @curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
  $response = @curl_exec($ch);

  // create object in AV
  $url = variable_get('av_url') . "/WebAPI/session/boCreate";
  @curl_setopt($ch, CURLOPT_URL, $url);
  $strPost = "handle=" . urlencode('MyCustomer') . "&object=" . urlencode('TScustomerBO');
  @curl_setopt($ch, CURLOPT_POSTFIELDS, $strPost);
  $response = @curl_exec($ch);

  // load user data into AV object
  $url = variable_get('av_url') . "/WebAPI/object/MyCustomer/load";
  @curl_setopt($ch, CURLOPT_URL, $url);
  $strPost = 'PARAM::Customer::customer_number=' . $user_id . '&GET=Customer';
  @curl_setopt($ch, CURLOPT_POSTFIELDS, $strPost);
  $response = @curl_exec($ch);

  $root = simplexml_load_string($response);
  $data = get_object_vars($root);

  $p['customer_id'] = $data['data']->Customer->customer_id;
  $p['language'] = $data['data']->Customer->language;
  $p['customer_type'] = $data['data']->Customer->customer_type; 
  $p['default_contact_id'] = $data['data']->Customer->default_contact_id; 
  $p['default_address_id'] = $data['data']->Customer->default_address_id; 

  // load address information from AV
  $url = variable_get('av_url') . "/WebAPI/session/boCreate";
  @curl_setopt($ch, CURLOPT_URL, $url);
  $strPost = "handle=" . urlencode('MyCustomerAdd') . "&object=" . urlencode('TScustomerBO');
  @curl_setopt($ch, CURLOPT_POSTFIELDS, $strPost);
  $response = @curl_exec($ch);

  $url = variable_get('av_url') . "/WebAPI/object/MyCustomerAdd/load";
  @curl_setopt($ch, CURLOPT_URL, $url);
  $strPost = 'PARAM::Customer::default_contact_id=' . $p['default_contact_id'] . '&GET=Contacts&GET=Addresses';
  @curl_setopt($ch, CURLOPT_POSTFIELDS, $strPost);
  $response = @curl_exec($ch);

  $root = simplexml_load_string($response);
  $data = get_object_vars($root);

  $p['title'] = $data['data']->Contacts->node->title;
  $p['first_name'] = $data['data']->Contacts->node->first_name;
  $p['middle_initial'] = $data['data']->Contacts->node->middle_initial;
  $p['last_name'] = $data['data']->Contacts->node->last_name;
  $p['company'] = $data['data']->Contacts->node->company;
  $p['email'] = $data['data']->Contacts->node->email;
  $p['e_address1'] = $data['data']->Contacts->node->e_address1;
  $p['phone_number1'] = $data['data']->Contacts->node->phone_number1;
  $p['phone_number2'] = $data['data']->Contacts->node->phone_number2;
  $p['phone_number3'] = $data['data']->Contacts->node->phone_number3;
  $p['phone_number4'] = $data['data']->Contacts->node->phone_number4;
  $p['street'] = $data['data']->Addresses->node->street;
  $p['city'] = $data['data']->Addresses->node->city;
  $p['state'] = $data['data']->Addresses->node->state;
  $p['zip'] = $data['data']->Addresses->node->zip;
  $p['gender'] = $data['data']->Contacts->node->gender;

  // remove the cookie jar
  unlink($cookie_jar) or drupal_set_message(t("Can't unlink @file.", array('@file' => $cookie_jar)));

  return $p;
}
