<?php

/**
 * @file
 * Update hooks and (un)install functions for the Rijksoverheid Cookie Opt-in
 * module.
 */

/**
 * Implements hook_schema().
 */
function ro_cookie_opt_in_schema() {
  $schema['ro_cookie_opt_in_log'] = array(
    'description' => 'Table for logging Rijksoverheid Cookie Opt-in responses.',
    'fields' => array(
      'resp_id' => array(
        'description' => 'ID of the reponse.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'The timestamp of the response.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'response' => array(
        'description' => 'The response itself',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'unique_id' => array(
        'description' => 'The unique id of the response',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
    ),
    'primary key' => array(
      'resp_id',
    ),
  );
  return $schema;
}

/**
 * Implements hook_requirements().
 */
function ro_cookie_opt_in_requirements($phase) {
  $requirements = array();

  // Ensure translations don't break at install time.
  $t = get_t();

  $requirements['rocoi_library']['title'] = $t('Rijksoverheid Cookie Opt-in library');

  if ($phase !== 'install') {
    // Check if the required library is installed.
    $library = libraries_detect('rijksoverheid-cookie-opt-in');
    if (!empty($library) && $library['installed'] === TRUE) {
      // Show the installed version.
      $requirements['rocoi_library']['value'] = $library['version'];
    }
    else {
      // Set an error stating the required library is not properly installed.
      $requirements['rocoi_library']['value'] = $t('Not installed!');
      $requirements['rocoi_library']['description'] = $t('The Rijksoverheid Cookie Opt-in library is not installed properly.');
      $requirements['rocoi_library']['severity'] = REQUIREMENT_ERROR;
    }
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function ro_cookie_opt_in_uninstall() {
  // Delete all module variables.
  variable_del('ro_cookie_opt_in_enabled');
  variable_del('ro_cookie_opt_in_log_enabled');
  variable_del('ro_cookie_opt_in_log_cleanup');
  variable_del('ro_cookie_opt_in_log_last_cleanup');
  variable_del('ro_cookie_opt_in_log_days_to_keep');
  variable_del('ro_cookie_opt_in_add_css');
  variable_del('ro_cookie_opt_in_add_resp_fix');
  variable_del('ro_cookie_opt_in_cookie_name');
  variable_del('ro_cookie_opt_in_cookie_accept');
  variable_del('ro_cookie_opt_in_cookie_deny');
  variable_del('ro_cookie_opt_in_close');
  variable_del('ro_cookie_opt_in_question_title');
  variable_del('ro_cookie_opt_in_question_intro');
  variable_del('ro_cookie_opt_in_question_learn_more');
  variable_del('ro_cookie_opt_in_change_title');
  variable_del('ro_cookie_opt_in_change_intro');
  variable_del('ro_cookie_opt_in_change_learn_more');
  variable_del('ro_cookie_opt_in_accept_button');
  variable_del('ro_cookie_opt_in_accept_extras');
  variable_del('ro_cookie_opt_in_accept_title');
  variable_del('ro_cookie_opt_in_accept_intro');
  variable_del('ro_cookie_opt_in_accept_current');
  variable_del('ro_cookie_opt_in_accept_learn_more');
  variable_del('ro_cookie_opt_in_deny_button');
  variable_del('ro_cookie_opt_in_deny_extras');
  variable_del('ro_cookie_opt_in_deny_title');
  variable_del('ro_cookie_opt_in_deny_intro');
  variable_del('ro_cookie_opt_in_deny_current');
  variable_del('ro_cookie_opt_in_deny_learn_more');
  variable_del('ro_cookie_opt_in_pre_block_link_text');
}
