<?php
/**
 * @file
 * Install, update and uninstall functions for the drulenium visual regression module.
 */

/**
 * Implements hook_schema()
 */
function drulenium_visual_regression_schema() {
  $schema['drulenium_vr_releases'] = array(
      'description' => 'Drulenium VR table to record releases.',
      'fields' => array(
          'rid' => array(
              'type' => 'serial',
              'description' => 'A database primary key to ensure uniqueness',
              'not null' => TRUE,
          ),
          'name' => array(
              'description' => 'Release name.',
              'type' => 'varchar',
              'length' => 255,
              'default' => '',
              'not null' => TRUE,
          ),
          'secure_id' => array(
              'description' => 'Secure ID.',
              'type' => 'varchar',
              'length' => 255,
              'default' => '',
              'not null' => TRUE,
          ),
          'base_url' => array(
              'description' => 'Base URL.',
              'type' => 'varchar',
              'length' => 200,
              'default' => '',
              'not null' => TRUE,
          ),
          'user_name' => array(
              'description' => 'User name.',
              'type' => 'varchar',
              'length' => 20,
              'default' => '',
              'not null' => TRUE,
          ),
          'user_pass' => array(
              'description' => 'User pass.',
              'type' => 'varchar',
              'length' => 20,
              'default' => '',
              'not null' => TRUE,
          ),
          'created' => array(
              'description' => 'The Unix timestamp when the release was created.',
              'type' => 'int',
              'not null' => TRUE,
              'default' => 0,
          ),
      ),
      'primary key' => array('rid'),
  );
  $schema['drulenium_vr_runs'] = array(
      'description' => 'Drulenium VR table to record runs.',
      'fields' => array(
          'rid' => array(
              'type' => 'serial',
              'description' => 'A database primary key to ensure uniqueness',
              'not null' => TRUE,
          ),
          're_id' => array(
          	  'description' => 'Release id',
              'type' => 'int',
              'unsigned' => TRUE,
        	  'not null' => TRUE,
              'default' => 0,
          ),
          'url' => array(
              'description' => 'URL.',
              'type' => 'text',
              'not null' => TRUE,
          ),
          'snapshot' => array(
              'description' => 'file path to snapshot image.',
              'type' => 'varchar',
              'length' => 555,
              'default' => '',
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('rid'),
  );
  $schema['drulenium_vr_results'] = array(
      'description' => 'Drulenium VR table to record results.',
      'fields' => array(
          'rid' => array(
              'type' => 'serial',
              'description' => 'A database primary key to ensure uniqueness',
              'not null' => TRUE,
          ),
          'release_base_id' => array(
              'description' => 'id for base release',
              'type' => 'int',
              'unsigned' => TRUE,
        	  'not null' => TRUE,
              'default' => 0,
          ),
          'release_cmp_id' => array(
              'description' => 'id for release to be compared',
              'type' => 'int',
              'unsigned' => TRUE,
        	  'not null' => TRUE,
              'default' => 0,
          ),
          'run_base_id' => array(
              'description' => 'id for base run',
              'type' => 'int',
              'unsigned' => TRUE,
        	  'not null' => TRUE,
              'default' => 0,
          ),
          'run_cmp_id' => array(
              'description' => 'id for run to be compared',
              'type' => 'int',
              'unsigned' => TRUE,
        	  'not null' => TRUE,
              'default' => 0,
          ),
          'diff_percent' => array(
              'description' => 'difference in percentage.',
              'type' => 'float',
          ),
          'diff_highlight' => array(
              'description' => 'file path to highlighted diff image.',
              'type' => 'varchar',
              'length' => 555,
              'default' => '',
              'not null' => TRUE,
          ),
          'diff_gif' => array(
              'description' => 'file path to diff gif image.',
              'type' => 'varchar',
              'length' => 555,
              'default' => '',
              'not null' => TRUE,
          ),
      ),
      'primary key' => array('rid'),
  );  
  return $schema;
}

/**
 * Implements hook_install().
 */
function drulenium_visual_regression_install() {
  
}

/**
 * Implements hook_uninstall().
 */
function drulenium_visual_regression_uninstall() {
  global $conf;
  foreach ($conf as $key => $value) {
    if (strpos($key, "drulenium_vr_") === 0) {
      variable_del($key);
    }
  }
}

/**
 * Add newcol base_url to {drulenium_vr_releases} table.
 */

function drulenium_visual_regression_update_7000() {
  db_add_field('drulenium_vr_releases', 'base_url', array(
			  'description' => 'Base URL.',
              'type' => 'varchar',
              'length' => 200,
              'default' => '',
              'not null' => TRUE,
  ));
}

/**
 * Add newcol diff_highlight to {drulenium_vr_results} table.
 */

function drulenium_visual_regression_update_7001() {
  db_add_field('drulenium_vr_results', 'diff_highlight', array(
			  'description' => 'file path to highlighted diff image.',
              'type' => 'varchar',
              'length' => 555,
              'default' => '',
              'not null' => TRUE,
  ));
}

/**
 * Add newcolumns release_base_id, release_cmp_id to {drulenium_vr_results} table.
 */

function drulenium_visual_regression_update_7002() {
  db_add_field('drulenium_vr_results', 'release_base_id', array(
              'description' => 'id for base release',
              'type' => 'int',
              'unsigned' => TRUE,
        	  'not null' => TRUE,
              'default' => 0,
          ));
  db_add_field('drulenium_vr_results', 'release_cmp_id', array(
              'description' => 'id for release to be compared',
              'type' => 'int',
              'unsigned' => TRUE,
        	  'not null' => TRUE,
              'default' => 0,
          ));
}

/**
 * Add newcolumns user_name, user_pass to {drulenium_vr_releases} table.
 */

function drulenium_visual_regression_update_7003() {
  db_add_field('drulenium_vr_releases', 'user_name', array(
              'description' => 'User name.',
              'type' => 'varchar',
              'length' => 20,
              'default' => '',
              'not null' => TRUE,
          ));
  db_add_field('drulenium_vr_releases', 'user_pass', array(
              'description' => 'User pass.',
              'type' => 'varchar',
              'length' => 20,
              'default' => '',
              'not null' => TRUE,
          ));
}
