<?php

/**
 * @return array
 */
function _entity_soft_delete_variables() {
  return array(
    'entity_soft_delete_entity_bundles_settings' => array(),
  );
}

/**
 * Implements hook_install().
 */
function entity_soft_delete_install() {
  _entity_soft_delete_variables_set(_entity_soft_delete_variables());
}

/**
 * Implements hook_uninstall().
 */
function entity_soft_delete_uninstall() {
  _entity_soft_delete_variables_del(_entity_soft_delete_variables());
}

/**
 * Implementation of hook_schema().
 */
function entity_soft_delete_schema() {
  return array(
    'entity_soft_delete_entities' => array(
      'description' => st("Entities that have been soft deleted."),
      'fields' => array(
        'id' => array(
          'description' => st("The entity's ID."),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'title' => array(
          'description' => st("The entity's title."),
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
          'default' => '',
        ),
        'vid' => array(
          'description' => st("The entity's version ID. For information only."),
          'type' => 'varchar',
          'length' => 100,
          'not null' => TRUE,
          'default' => 0,
        ),
        'entity_type' => array(
          'description' => st("The entity's type."),
          'type' => 'varchar',
          'length' => 100,
          'not null' => TRUE,
        ),
        'entity_bundle' => array(
          'description' => st("The entity's bundle."),
          'type' => 'varchar',
          'length' => 100,
          'not null' => TRUE,
        ),
        'uid' => array(
          'description' => st("The user ID from {users}.uid, of the user who soft deleted the entity."),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'timestamp' => array(
          'description' => st("The Unix timestamp indicating when the entity was soft deleted."),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0
        ),
      ),
      'unique keys' => array(
        'idx' => array('id', 'entity_type'),
      ),
    ),
  );
}

function _entity_soft_delete_variables_set($variables) {
  foreach ($variables as $key=>$val) {
    variable_set($key,$val);
  }
}

function _entity_soft_delete_variables_del($variables) {
  $variables = array_keys($variables);
  foreach ($variables as $variable) {
    variable_del($variable);
  }
}
