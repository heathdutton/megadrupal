<?php

/**
 * Implements hook_libraries_info().
 * @return mixed
 */
function headroomjs_libraries_info() {
  $libraries['headroomjs'] = array(
    'name' => 'Headroom.js',
    'vendor url' => 'https://wicky.nillia.ms/headroom.js',
    'download url' => 'https://raw.github.com/WickyNilliams/headroom.js/master/dist/headroom.js',
    'files' => array(
      'js' => array(
        'headroom.js',
        'jquery.headroom.js',
      ),
    ),
    'variants' => array(
      'uncompressed' => array(
        'files' => array(
          'js' => array(
            'headroom.js',
            'jquery.headroom.js',
          ),
        ),
      ),
      'minified' => array(
        'files' => array(
          'js' => array(
            'headroom.min.js',
            'jquery.headroom.min.js',
          ),
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_menu().
 * @return array
 */
function headroomjs_menu() {
  $items = array();

  $items['admin/config/system/headroomjs'] = array(
    'title' => 'Headroom.js',
    'description' => 'Configuration settings for the Headroom.js plugin.',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('headroomjs_admin_settings_form'),
    'file' => 'headroomjs.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_preprocess_html().
 * @param $variables
 */
function headroomjs_preprocess_html(&$variables) {
  $variant = variable_get('headroomjs_minified', TRUE) ? 'minified' : 'uncompressed';
  libraries_load_files(libraries_load('headroomjs', $variant));
  drupal_add_js(array('headroomjs' => _headroomjs_settings()), array('type' => 'setting'));
  drupal_add_js(drupal_get_path('module', 'headroomjs') . '/js/headroom.init.js', array('scope' => 'footer'));
}

/**
 * Return the configured settings for Headroom.js.
 * @return array
 */
function _headroomjs_settings() {
  return array(
    'offset' => variable_get('headroomjs_offset', 5),
    'tolerance' => variable_get('headroomjs_tolerance', 200),
    'selector' => variable_get('headroomjs_selector', 'header'),
    'initial_class' => variable_get('headroomjs_class_initial', 'headroom'),
    'pinned_class' => variable_get('headroomjs_class_pinned', 'headroom--pinned'),
    'unpinned_class' => variable_get('headroomjs_class_unpinned', 'headroom--unpinned'),
  );
}