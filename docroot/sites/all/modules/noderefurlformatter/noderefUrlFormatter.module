<?php

/**
 * Implements hook_info().
 */
function noderefUrlFormatter_field_formatter_info() {
  $formatters = array(
    'node_reference_url' => array(
      'label' => t('Display URL'),
      'field types' => array('node_reference'),
      'description' => t('Displays a URL to the referenced node.'),
    ),
  );
	
  return $formatters;
}

/**
 * Implements hook_field_formatter_view().
 */
function noderefUrlFormatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $urls = array();

  switch ($display['type']) {
    case 'node_reference_url':
      foreach ($items as $delta => $item) {
        if ($item['access']) {
					$node = $item['node'];
					$uri = entity_uri('node', $node);
					$urls[$delta] = url($uri['path']);
        }
      }
      break;
	}

	return $urls;
}

/**
 * Implements hook_theme().
 */
function noderefUrlFormatter_theme() {
  $theme = array(
    'noderefUrlFormatter_formatter_url' => array(
      'arguments' => array('urls' => NULL),
    ),
  );
 
  return $theme;
}

/**
 * Theme function to format the urls
 *
 * @param $urls
 *   an array of URLs that need to be formatted
 *
 * @return
 *   a usable array of URLs for further theming
 */
function theme_noderefUrlFormatter_formatter_url($urls) {
	$output = array();
	
	foreach ($urls as $key => $url) {
		$output[] = $url;
	}
 
  return $output;
}