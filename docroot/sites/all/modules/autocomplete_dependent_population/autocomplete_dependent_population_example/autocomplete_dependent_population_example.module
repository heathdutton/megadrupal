<?php
/**
 * @file
 * Examples which elaborate usage of autocompletedependent population module.
 * @author Debarya Das
 */

/**
 * Implements hook_help().
 */
function autocomplete_dependent_population_example_help($path, $arg) {
  switch ($path) {
    case 'admin/help#autocomplete_dependent_population_example':
      $output = '<p>' . t("Examples that elaborates the usage of the module.") . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Dependent element of type textfield population of an autocomplete form element</a>", array('@demo_url' => url('autocomplete_dependent_test_one'))) . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Dependent element of type textarea population of an autocomplete form element</a>", array('@demo_url' => url('autocomplete_dependent_test_two'))) . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Dependent element of type dropdown population of an autocomplete form element</a>", array('@demo_url' => url('autocomplete_dependent_test_three'))) . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Dependent element of type radio button selection of an autocomplete form element</a>", array('@demo_url' => url('autocomplete_dependent_test_four'))) . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Dependent element of type checkboxes selection of an autocomplete form element</a>", array('@demo_url' => url('autocomplete_dependent_test_five'))) . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Multiple Dependent elements of different types population/selection of an autocomplete form element </a>", array('@demo_url' => url('autocomplete_dependent_test_six'))) . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Multiple autocomplete form elements in a form which populate of each other</a>", array('@demo_url' => url('autocomplete_dependent_test_seven'))) . '</p>';
      $output .= '<p>' . t("<a href='@demo_url'>Dependent element of type textfield population of an autocomplete form element where both are added dynamically</a>", array('@demo_url' => url('autocomplete_dependent_test_eight'))) . '</p>';

      return $output;
  }
}
/**
 * Implements hook_menu().
 */
function autocomplete_dependent_population_example_menu() {
  $items['autocomplete_dependent_test_one'] = array(
    'title'      => 'Autocomplete Demo Form 1',
    'description' => 'Dependent form element of type textfield population.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_one'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_one_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_one_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_two'] = array(
    'title'      => 'Autocomplete Demo Form 2',
    'description' => 'Dependent form element of type textarea population.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_two'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_two_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_two_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_three'] = array(
    'title'      => 'Autocomplete Demo Form 3',
    'description' => 'Dependent form element of type dropdown population.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_three'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_three_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_three_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_four'] = array(
    'title'      => 'Autocomplete Demo Form 4',
    'description' => 'Dependent form element of type radio button selection.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_four'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_four_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_four_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_five'] = array(
    'title'      => 'Autocomplete Demo Form 5',
    'description' => 'Dependent form element of type checkbox selection.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_five'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_five_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_five_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_six'] = array(
    'title'      => 'Autocomplete Demo Form 6',
    'description' => 'Multiple Dependent form elements of different types.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_six'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_six_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_six_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_seven'] = array(
    'title'      => 'Autocomplete Demo Form 7',
    'description' => 'Multiple autocomplete form elements.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_seven'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_seven_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_seven_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_eight'] = array(
    'title'      => 'Autocomplete Demo Form 8',
    'description' => 'Dynamically added autocomplete form elements.',
    'page callback'  => 'drupal_get_form',
    'page arguments'  => array('autocomplete_dependent_population_test_eight'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['autocomplete_dependent_test_eight_callback'] = array(
    'page callback'  => 'autocomplete_dependent_population_test_eight_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Test form to populate a dependent form element of type texfield.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_one() {
  drupal_set_title(t('Demo form to populate a dependent form element of type texfield of an autocomplete form element.'));
  $form['field1'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field1'),
    '#path' => 'autocomplete_dependent_test_one_callback',
    '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
  );

  $form['field2'] = array(
    '#type' => 'textfield',
    '#title' => t('Field2'),
    '#default_value' => '',
    '#description' => t('Dependent form element which will be auto-populated when a value from the list of suggestion is selected.'),
  );

  return $form;
}

/**
 * Callback function for autocomplete_dependent_test_one.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form element name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_one_callback($keyup_field = '', $input = '') {
  $matches = array();

  $matches['data']['123']['textfield']['field2'] = 'product 1';

  $matches['data']['456']['textfield']['field2'] = 'product 2';

  $matches['data']['789']['textfield']['field2'] = 'product 3';

  $matches['data']['234']['textfield']['field2'] = 'product 4';

  drupal_json_output($matches);
}

/**
 * Test form to populate a dependent form element of type textarea.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_two() {
  drupal_set_title(t('Demo form to populate a dependent form element of type textarea of an autocomplete form element.'));
  $form['field1'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field1'),
    '#path' => 'autocomplete_dependent_test_two_callback',
    '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
  );

  $form['field2'] = array(
    '#type' => 'textarea',
    '#title' => t('Field2'),
    '#default_value' => '',
    '#description' => t('Dependent form element which will be auto-populated when a value from the list of suggestion is selected.'),
  );

  return $form;
}

/**
 * Callback function for autocomplete_dependent_test_two.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form element name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_two_callback($keyup_field = '', $input = '') {
  $matches = array();

  $matches['data']['123']['textarea']['field2'] = 'description for product 1';

  $matches['data']['456']['textarea']['field2'] = 'description for product 2';

  $matches['data']['789']['textarea']['field2'] = 'description for product 3';

  $matches['data']['234']['textarea']['field2'] = 'description for product 4';

  drupal_json_output($matches);
}

/**
 * Test form to populate a dependent form element of type dropdown.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_three() {
  drupal_set_title(t('Demo form to populate a dependent form element of type dropdown of an autocomplete form element.'));
  $form['field1'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field1'),
    '#path' => 'autocomplete_dependent_test_three_callback',
    '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
  );

  $form['field2'] = array(
    '#type' => 'select',
    '#title' => t('Field2'),
    '#options' => array(
      '' => t('select'),
      'select1' => t('select1'),
      'select2' => t('select2'),
      'select3' => t('select3'),
      'select4' => t('select4')),
    '#description' => t('Dependent form element which will be auto-populated when a value from the list of suggestion is selected.'),
  );

  return $form;
}

/**
 * Callback function for autocomplete_dependent_test_three.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form elment name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_three_callback($keyup_field = '', $input = '') {
  $matches = array();

  $matches['data']['123']['select']['field2'] = 'select2';

  $matches['data']['456']['select']['field2'] = 'select1';

  $matches['data']['789']['select']['field2'] = 'select4';

  $matches['data']['234']['select']['field2'] = 'select3';

  drupal_json_output($matches);
}

/**
 * Test form to select a dependent form element of type radio button.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_four() {
  drupal_set_title(t('Demo form to select a dependent form element of type radio button of an autocomplete form element.'));
  $form['field1'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field1'),
    '#path' => 'autocomplete_dependent_test_four_callback',
    '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
  );

  $form['field2'] = array(
    '#type' => 'radios',
    '#title' => t('Field2'),
    '#options' => array(0 => t('radio1'), 1 => t('radio2'), 2 => t('radio3')),
    '#description' => t('Dependent form element which will be auto-populated when a value from the list of suggestion is selected.'),
  );

  return $form;
}

/**
 * Callback function for autocomplete_dependent_test_four.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form elment name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_four_callback($keyup_field = '', $input = '') {
  $matches = array();

  $matches['data']['123']['radio']['field2'] = 1;

  $matches['data']['456']['radio']['field2'] = 0;

  $matches['data']['789']['radio']['field2'] = 2;

  $matches['data']['234']['radio']['field2'] = 1;

  drupal_json_output($matches);
}

/**
 * Test form to select a dependent form element of type checkboxes.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_five() {
  drupal_set_title(t('Demo form to select a dependent form element of type checkboxes of an autocomplete form element.'));
  $form['field1'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field1'),
    '#path' => 'autocomplete_dependent_test_five_callback',
    '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
  );

  $form['field2'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Field2'),
    '#options' => drupal_map_assoc(array(t('checkbox1'),
      t('checkbox2'),
      t('checkbox3'))),
    '#description' => t('Dependent form element which will be selected when a value from the list of suggestion is selected.'),
  );

  return $form;
}

/**
 * Callback function for autocomplete_dependent_test_five.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form elment name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_five_callback($keyup_field = '', $input = '') {
  $matches = array();

  $matches['data']['123']['checkbox']['field2'] = 'checkbox1, checkbox2';

  $matches['data']['456']['checkbox']['field2'] = 'checkbox1, checkbox3';

  $matches['data']['789']['checkbox']['field2'] = 'checkbox3';

  $matches['data']['234']['checkbox']['field2'] = 'checkbox1';

  drupal_json_output($matches);
}

/**
 * Test form to select a dependent form element of type checkboxes.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_six() {
  drupal_set_title(t('Demo form to populate/select multiple dependent form elements of different types of an autocomplete form element.'));
  $form['field1'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field1'),
    '#path' => 'autocomplete_dependent_test_six_callback',
    '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
  );

  $form['field2'] = array(
    '#type' => 'textfield',
    '#title' => t('Field2'),
    '#default_value' => '',
  );

  $form['field3'] = array(
    '#type' => 'textarea',
    '#title' => t('Field3'),
    '#default_value' => '',
  );
  $form['field4'] = array(
    '#type' => 'select',
    '#title' => t('Field4'),
    '#options' => array(
      '' => t('select'),
      'select1' => t('select1'),
      'select2' => t('select2'),
      'select3' => t('select3')),
  );

  $form['field5'] = array(
    '#type' => 'radios',
    '#title' => t('Field5'),
    '#options' => array(0 => t('radio1'), 1 => t('radio2'), 2 => t('radio3')),
  );

  $form['field6'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Field6'),
    '#options' => drupal_map_assoc(array(t('checkbox1'),
      t('checkbox2'),
      t('checkbox3'))),
  );

  return $form;
}

/**
 * Callback function for autocomplete_dependent_test_five.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form elment name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_six_callback($keyup_field = '', $input = '') {
  $matches = array();

  $matches['data']['123']['textfield']['field2'] = 'product 1';
  $matches['data']['123']['textarea']['field3'] = 'description for product 1';
  $matches['data']['123']['select']['field4'] = 'select2';
  $matches['data']['123']['radio']['field5'] = 1;
  $matches['data']['123']['checkbox']['field6'] = 'checkbox1, checkbox2';

  $matches['data']['456']['textfield']['field2'] = 'product 2';
  $matches['data']['456']['textarea']['field3'] = 'description for product 2';
  $matches['data']['456']['select']['field4'] = 'select1';
  $matches['data']['456']['radio']['field5'] = 0;
  $matches['data']['456']['checkbox']['field6'] = 'checkbox1, checkbox3';

  $matches['data']['789']['textfield']['field2'] = 'product 3';
  $matches['data']['789']['textarea']['field3'] = 'description for product 3';
  $matches['data']['789']['select']['field4'] = 'select1';
  $matches['data']['789']['radio']['field5'] = 2;
  $matches['data']['789']['checkbox']['field6'] = 'checkbox3';

  $matches['data']['234']['textfield']['field2'] = 'product 4';
  $matches['data']['234']['textarea']['field3'] = 'description for product 4';
  $matches['data']['234']['select']['field4'] = 'select3';
  $matches['data']['234']['radio']['field5'] = 1;
  $matches['data']['234']['checkbox']['field6'] = 'checkbox1';

  drupal_json_output($matches);
}

/**
 * Test form to populate a dependent form element of type texfield.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_seven() {
  drupal_set_title(t('Demo form which demonstrates multiple autocomplete form elements in a form which populate of each other.'));
  $form['field1'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field1'),
    '#path' => 'autocomplete_dependent_test_seven_callback',
    '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
  );

  $form['field2'] = array(
    '#type' => 'autocomplete_dependee',
    '#title' => t('Field2'),
    '#default_value' => '',
    '#path' => 'autocomplete_dependent_test_seven_callback',
    '#description' => t('This is an autocomplete form element. Type product 1, product 2, product 3 etc.'),
  );

  return $form;
}

/**
 * Callback function for autocomplete_dependent_test_seven.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form elment name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_seven_callback($keyup_field = '', $input = '') {
  $matches = array();
  // Depending on the $keyup_field which is the name of autocomplete
  // form element different sets of result can be returned.
  if ($keyup_field == 'field1') {
    $matches['data']['123']['textfield']['field2'] = 'product 1';
    $matches['data']['456']['textfield']['field2'] = 'product 2';
    $matches['data']['789']['textfield']['field2'] = 'product 3';
    $matches['data']['234']['textfield']['field2'] = 'product 4';
  }
  elseif ($keyup_field == 'field2') {
    $matches['data']['product 1']['textfield']['field1'] = '123';
    $matches['data']['product 2']['textfield']['field1'] = '456';
    $matches['data']['product 3']['textfield']['field1'] = '789';
    $matches['data']['product 4']['textfield']['field1'] = '234';
  }
  drupal_json_output($matches);
}

/**
 * Test form to populate a dependent form element of type texfield.
 *
 * @return array
 *   This function returns a form.
 */
function autocomplete_dependent_population_test_eight($form, &$form_state) {
  drupal_set_title(t('Demo form which demonstrates population of dependent form elements of a autocompletee_dependee form element which are dynamically added.'));

  $form['autocomplete_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Dynamically add autocomplete element.'),
    '#prefix' => '<div id="autocomplete-fieldset-wrapper">',
    '#suffix' => '</div>',
  );

  $form['autocomplete_fieldset']['add_autocomplete_element'] = array(
    '#type' => 'submit',
    '#value' => t('Add one'),
    '#submit' => array('autocomplete_dependent_population_add_more_add_one'),
    '#ajax' => array(
      'callback' => 'autocomplete_dependent_population_add_more_callback',
      'wrapper' => 'autocomplete-fieldset-wrapper',
    ),
  );

  if (empty($form_state['num_names'])) {
    $form_state['num_names'] = 1;
  }
  else {
    $form['autocomplete_fieldset']['field1'] = array(
      '#type' => 'autocomplete_dependee',
      '#title' => t('Field1'),
      '#path' => 'autocomplete_dependent_test_eight_callback',
      '#description' => t('This is an autocomplete form element. Type 123, 456, 789 etc.'),
    );

    $form['autocomplete_fieldset']['field2'] = array(
      '#type' => 'textfield',
      '#title' => t('Field2'),
      '#default_value' => '',
    );
  }

  return $form;
}

/**
 * Callback for both ajax-enabled buttons.
 *
 * Selects and returns the fieldset with the names in it.
 */
function autocomplete_dependent_population_add_more_callback($form, $form_state) {
  return $form['autocomplete_fieldset'];
}

/**
 * Submit handler for the "add-one" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function autocomplete_dependent_population_add_more_add_one($form, &$form_state) {
  $form_state['num_names']++;
  $form_state['rebuild'] = TRUE;
}

/**
 * Callback function for autocomplete_dependent_test_eight.
 *
 * @param string $keyup_field
 *   A string containing the autocomplete form elment name.
 * @param string $input
 *   A string containing the value autocomplete form element.
 */
function autocomplete_dependent_population_test_eight_callback($keyup_field = '', $input = '') {
  $matches = array();

  $matches['data']['123']['textfield']['field2'] = 'product 1';
  $matches['data']['456']['textfield']['field2'] = 'product 2';
  $matches['data']['789']['textfield']['field2'] = 'product 3';
  $matches['data']['234']['textfield']['field2'] = 'product 4';

  drupal_json_output($matches);
}
