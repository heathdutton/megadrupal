<?php

require_once dirname(__FILE__) . '/schema_reference.field.inc';

/**
 * Get an array of table options from a specific connection.
 */
function schema_reference_get_table_options($connection) {
  $schema = schema_reference_get_schema_info($connection);
  return !empty($schema) ? drupal_map_assoc(array_keys($schema)) : array();
}

/**
 * Get an array of column options for a specific connection and table.
 */
function schema_reference_get_column_options($connection, $table) {
  $schema = schema_reference_get_schema_info($connection);
  if (!empty($schema[$table])) {
    return drupal_map_assoc(array_keys($schema[$table]['fields']));
  }
  else {
    return array();
  }
}

function schema_reference_get_schema_info($connection) {
  $results = &drupal_static(__FUNCTION__, array());

  if (!isset($results[$connection])) {
    $results[$connection] = array();

    $cid = 'schema:connection:' . $connection;
    if ($cache = cache_get($cid)) {
      $results[$connection] = $cache->data;
    }
    elseif ($schema = schema_dbobject($connection)) {
      // Ensure that warnings are suppressed when performing inspection. We don't
      // want to see them here.
      $original = variable_get('schema_suppress_type_warnings');
      $GLOBALS['conf']['schema_suppress_type_warnings'] = TRUE;
      $results[$connection] = $schema->inspect($connection);
      $GLOBALS['conf']['schema_suppress_type_warnings'] = $original;
      cache_set($cid, $results[$connection]);
    }
  }

  return $results[$connection];
}
