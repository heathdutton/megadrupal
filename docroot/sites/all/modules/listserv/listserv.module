<?php

/**
 * @file
 * Impliments the core functionality of the Listserv module.
 *
 * Also defines custom blocks and forms for subscribing and unsubscribing to a
 * listserv.
 */

/**
 * Define variables.
 */
define('LISTSERV_EMAIL', '');
define('LISTSERV_DEFAULT', '');
define('LISTSERV_DEFAULT_OPERATION', 'subscribe');
define('LISTSERV_DEFAULT_USERNAME', 'Anonymous');

/**
 * Implements hook_menu().
 */
function listserv_menu() {
  $items['admin/config/services/listserv'] = array(
    'title' => 'Listserv',
    'access arguments' => array('admininster listserv'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('listserv_admin_config_form'),
    'file' => 'listserv.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function listserv_permission() {
  return array(
    'administer listserv' => array(
      'title' => t('Administer the Listserv module'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function listserv_block_info() {
  $blocks['listserv_subscribe'] = array(
    'info' => t('Listserv Subscribe'),
  );
  $blocks['listserv_unsubscribe'] = array(
    'info' => t('Listserv Unsubscribe'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function listserv_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'listserv_subscribe':
      $block['subject'] = t('Listserv Subscribe');
      $block['content'] = drupal_get_form('listserv_subscribe_form');
      break;

    case 'listserv_unsubscribe':
      $block['subject'] = t('Listserv Unsubscribe');
      $block['content'] = drupal_get_form('listserv_unsubscribe_form');
      break;
  }
  return $block;
}

/**
 * Listserv Subscribe form.
 */
function listserv_subscribe_form($form, &$form_state) {
  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Subscribe'),
  );
  return $form;
}

/**
 * Listserv Unsubscribe form validate handler.
 */
function listserv_subscribe_form_validate($form, &$form_state) {
  $email = $form_state['values']['email'];
  // Verify that the email address is valid.
  if (!valid_email_address($email)) {
    form_set_error('email', t('You must provide a valid email address.'));
  }
}

/**
 * Listserv Subscribe form submit handler.
 */
function listserv_subscribe_form_submit($form, &$form_state) {
  $email = $form_state['values']['email'];
  listserv_listserv_subscription($email, 'subscribe');
}

/**
 * Listserv Unsubscribe form.
 */
function listserv_unsubscribe_form($form, &$form_state) {
  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Unsubscribe'),
  );
  return $form;
}

/**
 * Listserv Unsubscribe form validate handler.
 */
function listserv_unsubscribe_form_validate($form, &$form_state) {
  $email = $form_state['values']['email'];
  // Verify that the email address is valid.
  if (!valid_email_address($email)) {
    form_set_error('email', t('You must provide a valid email address.'));
  }
}

/**
 * Listserv Unsubscribe form submit handler.
 */
function listserv_unsubscribe_form_submit($form, &$form_state) {
  $email = $form_state['values']['email'];
  listserv_listserv_subscription($email, 'unsubscribe');
}

/**
 * API: Listserv Subscription.
 */
function listserv_listserv_subscription($email, $operation = LISTSERV_DEFAULT_OPERATION, $name = NULL, $listserv = NULL, $send = TRUE) {
  // Verify that the email address is valid.
  if (!valid_email_address($email)) {
    drupal_set_message(t('You must provide a valid email address.'));
    return;
  }

  // Determine the listserv contact email address.
  $listserv_email = variable_get('listserv_email', LISTSERV_EMAIL);
  if ($listserv_email == '') {
    drupal_set_message(t('You need to set a listserv email address in admin/config/services/listserv.'));
    return;
  }

  // Determine the listserv name.
  $listserv_name = variable_get('listserv_default', LISTSERV_DEFAULT);
  if ($listserv) {
    $listserv_name = $listserv;
  }
  elseif ($listserv_name == '') {
    drupal_set_message(t('You need to set a default listserv list in admin/config/services/listserv.'));
    return;
  }

  // Determine the subscribers name.
  $name = ($name ? $name : LISTSERV_DEFAULT_USERNAME);

  // Determine the subject line and body text.
  switch ($operation) {
    case 'subscribe':
      $subject = 'Listserv Subscription';
      $body = 'SUBSCRIBE ' . $listserv_name . ' ' . $name;
      break;

    case 'unsubscribe':
      $subject = 'UNSUBSCRIBE Listserv';
      $body = 'UNSUBSCRIBE ' . $listserv_name;
      break;

    default:
      $subject = 'Listserv Subscription';
      $body = 'SUBSCRIBE ' . $listserv_name . ' ' . $name;
      break;
  }
  // Establishing a drupal_mail call with all params.
  $module = 'listserv';
  $key = $operation;
  $to = $listserv_email;
  $from = $email;
  $params['subject'] = $subject;
  $params['body'] = $body;
  $language = language_default();

  $result = drupal_mail($module, $key, $to, $language, $params, $from, $send);
  if ($result['result'] == TRUE && $operation == 'subscribe') {
    drupal_set_message(t('Successfully subscribed @email to @listserv_name.', array('@email' => $email, '@listserv_name' => $listserv_email)));
  }
  elseif ($result['result'] == TRUE && $operation == 'unsubscribe') {
    drupal_set_message(t('Successfully unsubscribed @email from @listserv_name.', array('@email' => $email, '@listserv_name' => $listserv_email)));
  }
  elseif ($result['result']) {
    drupal_set_message(t('Your message has been sent.'));
  }
  else {
    drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
  }
}

/**
 * Implements hook_mail().
 */
function listserv_mail($key, &$message, $params) {
  switch ($key) {
    case 'subscribe':
      $message['subject'] = drupal_html_to_text($params['subject']);
      $message['body'][] = drupal_html_to_text($params['body']);
      break;

    case 'unsubscribe':
      $message['subject'] = drupal_html_to_text($params['subject']);
      $message['body'][] = drupal_html_to_text($params['body']);
      break;
  }
}
