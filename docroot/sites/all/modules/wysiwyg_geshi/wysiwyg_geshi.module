<?php
/**
 * @file
 * Wysiwyg GeSHi module.
 */

/**
 * Implements hook_help().
 */
function wysiwyg_geshi_help($path, $arg) {
  switch ($path) {
    case 'admin/help#wysiwyg_geshi':
      $output = '<h2>' . t('General information') . '</h2>';
      $output .= '<p>' . t('This module provides an extra Wysiwyg button which allows you to insert a code snippet, pick a language and have it highlighted by the GeSHi Filter.') . '</p>';
      $output .= '<p>' . t('At the moment it only provides a CKEditor plugin, which has only been tested with CKEditor v4.0+.') . '</p>';
      $output .= '<p>' . t('In order to have this version set up you must use version 7.x-2.2 of the Wysiwyg module and apply the following <a href="!link">patch</a>', array('!link' => 'http://drupal.org/files/wysiwyg-support_v4_ckeditor-1853550-73.patch')) . '</p>';
      $output .= '<h2>' . t('GeSHi Filter configuration') . '</h2>';
      $output .= '<p>' . t('<a href="!geshi">Configure</a> the GeSHi Filter as you see fit.', array('!geshi' => url('admin/config/content/formats/geshifilter'))) . '</p>';
      $output .= '<p>' . t('There is one caveat: The "PHP style" container tag style in the GeSHi Filter settings is not, nor will ever be supported.') . '</p>';
      $output .= '<h2>' . t('Text format configuration') . '</h2>';
      $output .= '<p>' . t("In <a href=\"!format\">Text formats</a>, edit the \"Full HTML\" format or create one with similar permissions.", array('!format' => url('admin/config/content/formats'))) . '</p>';
      $output .= '<p>' . t("Regardless of the selected format, make sure that the following filters are disabled: \"Display any HTML as plain text\" and \"Limit allowed HTML tags\". Also, make sure that \"GeSHi filter\" is enabled and, if you are using the \"Enable GeSHi keyword URLs\" in the GeSHi filter configuration, make sure that \"Convert URLs into links\" is disabled.") . '</p>';
      $output .= '<p>' . t('IMPORTANT: Make sure that GeSHi filter is listed to run first under the filter processing order.') . '</p>';
      $output .= '<h2>' . t('Wysiwyg profile configuration') . '</h2>';
      $output .= '<p>' . t("In <a href=\"!profile\">Wysiwyg profiles</a>, under \"Buttons and plugins\", make sure that \"GeSHi code snippet\" is enabled.", array('!profile' => url('admin/config/content/wysiwyg'))) . '</p>';
      $output .= '<p>' . t("Under \"Cleanup and output\", make sure that \"Verify HTML\" and \"Apply source formatting\" are turned off and that \"Preformatted\" is turned on.") . '</p>';
      return $output;
  }
}

/**
 * Implements hook_wysiwyg_plugin().
 */
function wysiwyg_geshi_wysiwyg_plugin($editor, $version) {
  switch ($editor) {
    case 'ckeditor':
      if (version_compare($version, '4.0')) {
        return array(
          'geshi' => array(
            'path' => drupal_get_path('module', 'wysiwyg_geshi') . '/plugins/ckeditor',
            'buttons' => array(
              'geshi' => t('GeSHi code snippet'),
            ),
            'url' => 'http://drupal.org/project/wysiwyg_geshi',
            'load' => TRUE,
          ),
        );
      }
  }
}

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function wysiwyg_geshi_wysiwyg_editor_settings_alter(&$settings, $context) {
  // Check for CKEditor.
  if ($context['profile']->editor === 'ckeditor') {
    // Check if button is active.
    if (isset($context['profile']->settings['buttons']['geshi']['geshi'])) {
      if ($context['profile']->settings['buttons']['geshi']['geshi'] == 1) {
        // Add our custom config.
        $settings['customConfig'] = base_path() . drupal_get_path('module', 'wysiwyg_geshi') . '/plugins/ckeditor/ckeditor.config.js';

        // Add javascript settings for the selected format.
        _wysiwyg_geshi_add_settings($context['profile']->format);
      }
    }
  }
}

/**
 * Adds JavaScript settings for our plugin.
 *
 * @param string
 *   The selected text format.
 * @return boolean
 *   Whether we managed to get and add the settings.
 */
function _wysiwyg_geshi_add_settings($format) {
  $languages = _wysiwyg_geshi_get_languages($format);

  if (!empty($languages)) {
    if ($tag_style = _wysiwyg_geshi_get_tag_style($format)) {
      drupal_add_js(array(
        'wysiwyg_geshi' => array(
          'languages' => $languages,
          'tag_open' => $tag_style[0],
          'tag_close' => $tag_style[1],
        )
      ), 'setting');

      return TRUE;
    }
    else {
      // Display error because only GESHIFILTER_BRACKETS_PHPBLOCK is selected
      // and it' not supported.
      drupal_set_message(t("Wysiwyg GeSHi can't run. Please select at least one GeSHi Filter tag style other than \"PHP style\" in order to use it. Refer to the <a href=\"!help\">help</a> page for more information.", array('!help' => url('admin/help/wysiwyg_geshi'))), 'error', FALSE);
    }
  }
  else {
    // Display error because there are no languages selected.
    drupal_set_message(t("Wysiwyg GeSHi can't run. Please select at least one GeSHi Filter languaage in order to use it. Refer to the <a href=\"!help\">help</a> page for more information.", array('!help' => url('admin/help/wysiwyg_geshi'))), 'error', FALSE);
  }

  return FALSE;
}

/**
 * Returns the current selected GeSHi filter tag style.
 *
  * @param string
 *   The selected text format.
 * @return array|FALSE
 *   An array with both the opening and closing character used to wrap GeSHi
 *   Filter tags or FALSE if no valid styles are selected.
 */
function _wysiwyg_geshi_get_tag_style($format) {
  module_load_include('inc', 'geshifilter');
  $styles = _geshifilter_tag_styles($format);

  // If the user has multiple styles enabled, pick the first one to use.
  foreach ($styles as $style) {
    if ($style != 0) {
      break;
    }
  }

  switch ($style) {
    case GESHIFILTER_BRACKETS_ANGLE:
      return array('<', '>');
    case GESHIFILTER_BRACKETS_DOUBLESQUARE:
      return array('[[', ']]');
    case GESHIFILTER_BRACKETS_SQUARE:
      return array('[', ']');
  }

  return FALSE;
}

/**
 * Returns a list of languages and tags configured for the GeSHi Filter.
 *
 * @param string
 *   The selected text format.
 * @return array
 *   An array of language names, keyed by the geshi tag.
 */
function _wysiwyg_geshi_get_languages($format) {
  $languages = variable_get('geshifilter_available_languages_cache');
  module_load_include('inc', 'geshifilter');
  list(, $language_tags, $tag_to_lang) = _geshifilter_get_tags($format);

  $langs = array();
  foreach ($language_tags as $tag) {
    $geshi_tag = $tag_to_lang[$tag];
    $langs[$tag] = $languages[$geshi_tag]['fullname'];
  }

  return $langs;
}
