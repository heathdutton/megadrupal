<?php

/**
 * @file
 * Hooks for the codit module.
 */

include_once 'codit_helpers.inc';
include_once 'codit_functions_for_coders.inc';
include_once 'codit_output_func_for_coders.inc';

/**
 * Implements hook_init().
 */
function codit_init() {
  // This is called on every page request (non-cached).
  // Include base function recepticle.
  $path_to_local = codit_path_to_local();
  include_once $path_to_local . 'codit_local_function_definitions.inc';
}

/**
 * Implements hook_preprocess_html().
 */
function doj_theme_preprocess_html(&$vars) {
  codit_set_ie_to_edge();
}

/**
 * Implements hook_help().
 */
function codit_help($path, $arg) {
  switch ($path) {
    case 'admin/help#codit':
      $output = file_get_contents(drupal_get_path('module', 'codit') . '/README.md');
      if (module_exists('markdown')) {
        // Markdown can be used.
        module_load_include('php', 'markdown', 'markdown');
        $output = Markdown($output);
      }
      else {
        // Markdown is not available.
        $output = '<pre>' . $output . '</pre>';
      }
      return $output;
  }
}


/**
 * Implements hook_preprocess_html().
 */
function codit_preprocess_html(&$vars) {
  // Add local_stash.js
  $path_to_local = codit_path_to_local();
  drupal_add_js($path_to_local . 'codit_local.js', array(
    'type' => 'file',
    'scope' => 'header',
    'group' => 50,
    'weight' => 1,
    ));
}

/**
 * Implements hook_permission().
 */
function codit_permission() {
  return array(
    'view codit debug output' => array(
      'title' => t('View Debug Output'),
      'description' => t('If the correct debug GET is present and the user has this permission, the related debug output will be rendered to the screen.'),
    ),
    'view codit template tracers' => array(
      'title' => t('View Template Tracer HTML comments'),
      'description' => t('If the user has this permission, then any templates using the template tracer ouput functions will output html comments that reveal the location of the tpl.'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function codit_menu() {
  $items['codit debug request slug'] = array(
    'title' => 'Debug request slug',
    'page callback' => '_get_debug_request_slug',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/codit'] = array(
    'title' => 'Codit Settings',
    'description' => 'Settings for the Codit module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('codit_admin'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * The callback function creates an admin form for a menu hook.
 */
function codit_admin() {
  $form = array();

  $form['codit_debug_request_slug'] = array(
    '#type' => 'textfield',
    '#title' => t('Debug request slug'),
    '#default_value' => check_plain(variable_get('codit_debug_request_slug', 'debug')),
    '#size' => 15,
    '#maxlength' => 15,
    '#description' => t("The debug slug to initiate debug output. Example: ?[debug_slug]=blocks would cause block related debug output to be sent to the screen and browser console"),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}
