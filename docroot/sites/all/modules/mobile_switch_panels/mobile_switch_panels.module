<?php
/**
 * @file
 * Mobile Switch Panels provides an control plugin to show panel pages
 * in context of mobile device detection.
 */

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to look for the .inc file that
 * defines various args, contexts and content_types.
 */
function mobile_switch_panels_ctools_plugin_directory($module, $plugin) {
 if ($module == 'ctools' && !empty($plugin)) {
   return "plugins/$plugin";
 }
}

/**
 * Helper function that provides options.
 */
function mobile_switch_panels_ismobile_options() {
  return array(
    0 => t('Is not mobile'),
    1 => t('Is mobile')
  );
}

/**
 * Check theme cookie exists or a theme switch action by visitor.
 *
 * This check is necessary to ensure a logical functionality when using the
 * Mobile Switch Block module.
 *
 * @return boolean|string
 *   Possible string values: standard, mobile
 */
function mobile_switch_panels_check_theme_switch() {
  static $theme_switch;

  if (!$theme_switch) {
    $name = 'mobile_switch_mode';
    $theme_cookie = isset($_COOKIE[$name]) ? $_COOKIE[$name] : FALSE;

    // Theme switch from URL as visitor action.
    if (isset($_GET['mobile_switch'])) {
      switch ($_GET['mobile_switch']) {
        case 'standard':
          $theme_switch = 'standard';
          break;
        case 'mobile':
          $theme_switch = 'mobile';
          break;
      }
    }
    // Theme cookie exist.
    elseif ($theme_cookie) {
      switch ($theme_cookie) {
        case 'standard':
          $theme_switch = 'standard';
          break;
        case 'mobile':
          $theme_switch = 'mobile';
          break;
      }
    }
    else {
      $theme_switch = FALSE;
    }
  }

  return $theme_switch;
}

/**
 * Implements hook_help().
 */
function mobile_switch_panels_help($path, $arg) {
  switch ($path) {
    case 'admin/help#mobile_switch_panels':
      return check_markup(file_get_contents(dirname(__FILE__) . '/README.txt'));
  }
}
