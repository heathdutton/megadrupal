<?php

/**
 * @file
 * Install, update, and uninstall functions for the CRM Core Default Matching Engine module.
 */

/**
 * Implements hook_schema().
 */
function crm_core_default_matching_engine_schema() {
  $schema['crm_core_match_contact_types'] = array(
    'description' => 'Stores settings information for available contact types.',
    'fields' => array(
      'ct_id' => array(
        'description' => 'The primary identifier for a contact type.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'contact_type' => array(
        'description' => 'Machine readable name of a contact type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'threshold' => array(
        'description' => 'Defines the score at which a contact is considered a match.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Status of a contact type matching. (1 = enabled, 0 = disabled)',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'strict' => array(
        'description' => 'Strict matching status. (1 = enabled, 0 = disabled)',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'return_order' => array(
        'description' => 'The order in which to return contact matches.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('ct_id'),
  );

  $schema['crm_core_match_contact_type_rules'] = array(
    'description' => 'Stores settings information for contact type matching rules.',
    'fields' => array(
      'mrid' => array(
        'description' => 'The primary identifier for a matching rule.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'contact_type' => array(
        'description' => 'Machine readable name of a contact type, to which rule is applied.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'field_name' => array(
        'description' => 'Machine readable name of a field.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'field_type' => array(
        'description' => 'Machine readable type of a field.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'field_item' => array(
        'description' => 'Machine readable name of a field item.',
        'type' => 'varchar',
        'length' => 32,
      ),
      'operator' => array(
        'description' => 'Operator used for this rule.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'options' => array(
        'description' => 'Operator used for this rule.',
        'type' => 'text',
        'size' => 'normal',
      ),
      'score' => array(
        'description' => 'Defines the score for this rule.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Status of a rule. (1 = enabled, 0 = disabled)',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'weight' => array(
        'description' => 'Order in which rule would be applied.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('mrid'),
    'foreign keys' => array(
      'crm_core_match_contact_types' => array(
        'table' => 'crm_core_match_contact_types',
        'columns' => array('contact_type' => 'machine_name'),
      ),
    ),
  );

  return $schema;
}

/**
 * Rename field "ctid" to "ct_id" in "crm_core_match_contact_types" table.
 */
function crm_core_default_matching_engine_update_7001() {
  if (db_field_exists('crm_core_match_contact_types', 'ctid')) {
    db_change_field('crm_core_match_contact_types', 'ctid', 'ct_id',
      array(
        'description' => 'The primary identifier for a contact type.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ));
  }
}
