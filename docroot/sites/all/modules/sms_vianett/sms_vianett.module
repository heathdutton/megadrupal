<?php

/**
 * @file
 * Adds support for sending SMS messages using the Vianett gateway.
 */

/**
 * Implements hook_gateway_info().
 */
function sms_vianett_gateway_info() {
  return array(
    'vianett' => array(
      'name' => 'Vianett',
      'configure form' => 'sms_vianett_admin_form',
      'send' => 'sms_vianett_send',
      'send form' => 'sms_vianett_send_form',
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function sms_vianett_libraries_info() {
  $libraries['vianett'] = array(
    'name' => 'Vianett',
    'vendor url' => 'http://vianett.com',
    'download url' => 'https://github.com/zaporylie/vianett-php/archive/master.zip',
    'path' => 'src',
    'version arguments' => array(
      'file' => 'composer.json',
      'pattern' => '/\"version": \"((\d+)\.(\d+)\.(\d+))\",/',
    ),
    'versions' => array(
      '0.0.3' => array(
        'files' => array(
          'php' => array('Vianett.php'),
        ),
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_requirements().
 */
function sms_vianett_requirements($phase) {
  if ($phase != 'runtime') {
    return array();
  }
  $requirements = array();
  $library = libraries_detect('vianett');
  $requirements['vianett'] = array(
    'title' => t('Vianett library'),
    'value' => !empty($library['error message']) ? $library['error message'] : $library['version'],
    'severity' => !empty($library['error']) ? REQUIREMENT_ERROR : REQUIREMENT_INFO,
  );
  return $requirements;
}

/**
 * Gateway admin form with Vianett login credentials.
 */
function sms_vianett_admin_form() {
  $configuration = variable_get('sms_vianett_settings', _sms_vianett_configuration_defaults());
  $form['username'] = array(
    '#type' => 'textfield',
    '#title' => t('User'),
    '#description' => t('The username of your vianett account.'),
    '#default_value' => $configuration['username'],
  );

  $form['password'] = array(
    '#type' => 'password',
    '#title' => t('Password'),
    '#description' => t('The current password on your vianett account.'),
    '#default_value' => $configuration['password'],
  );

  $form['debug'] = array(
    '#type' => 'checkbox',
    '#title' => t('Debug Mode'),
    '#description' => t('Prevent from being sent any sms. Just show API request'),
    '#default_value' => $configuration['debug'],
  );

  $form['defaults'] = array(
    '#type' => 'fieldset',
    '#description' => t('Default values for the sending form.'),
  );

  $form['defaults']['sender'] = array(
    '#type' => 'textfield',
    '#title' => t('Sender'),
    '#default_value' => $configuration['sender'],
  );

  return $form;
}

/**
 * Returns custom additions to be added to the send forms.
 */
function sms_vianett_send_form() {
  $configuration = variable_get('sms_vianett_settings', _sms_vianett_configuration_defaults());

  $form['sender'] = array(
    '#type' => 'textfield',
    '#title' => t('Sender'),
    '#default_value' => $configuration['sender'],
  );

  return $form;
}

/**
 * Callback for sending messages.
 */
function sms_vianett_send($number, $message, $options) {
  // Get settings.
  $options += variable_get('sms_vianett_settings', _sms_vianett_configuration_defaults());
  try {
    // Load library.
    if (!($library = libraries_load('vianett')) || empty($library['loaded'])) {
      throw new Exception('ViaNett library does not exist. Download it first.');
    }

    if (!isset($options['message_id'])) {
      $options['message_id'] = variable_get('sms_vianett_last_message_id', 0) + 1;
    }

    // Create ViaNett client.
    $client = new \Vianett\Client($options['username'], $options['password']);
    // Create message.
    $sms = new \Vianett\Message($client);
    // Prepare SMS message.
    $sms->prepare($options['sender'], $number, $message, $options['message_id']);

    // Send or log to default log.
    if ($options['debug'] == TRUE) {
      throw new Exception($sms->debug(), WATCHDOG_DEBUG);
    }
    else {
      $sms->send();
      variable_set('sms_vianett_last_message_id', $options['message_id']);
    }
  }
  catch (Exception $e) {
    return array(
      'status' => FALSE,
      'message' => $e->getMessage(),
    );
  }
  return array(
    'status' => TRUE,
  );
}

/**
 * Returns default vianett configuration.
 *
 * @return array
 *   Array of default settings values.
 */
function _sms_vianett_configuration_defaults() {
  return array(
    'username' => NULL,
    'password' => NULL,
    'debug' => FALSE,
    'sender' => NULL,
  );
}
