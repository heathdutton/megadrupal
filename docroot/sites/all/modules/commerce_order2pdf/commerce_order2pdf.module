<?php
/**
 * @file commerce_order2pdf.module
 */

/**
 * Implements hook_requirements().
 */
function commerce_order2pdf_requirements($phase) {
  // Create an array to hold MPDF requirements
  $requirements = array();

  // Check requirements during the runtime phase
  if ($phase == 'runtime') {
    if (file_exists(libraries_get_path('MPDF54'))) {
      $requirements['mpdf_library'] = array(
        'title' => t('MPDF library'),
        'value' => t('Available'),
        'severity' => REQUIREMENT_OK,
      );
    } else {
      $requirements['mpdf_library'] = array(
        'title' => t('MPDF library'),
        'value' => t('Unavailable'),
        'description' => t('The MPDF 5.4 library is missing. Download the !mpdf and extract it to %sites/all or %sites/sitename.', array('%sites/all' => 'sites/all/libraries', '%sites/sitename' => 'sites/sitename/libraries', '!mpdf' => l('MPDF 5.4', 'http://mpdf1.com/repos/MPDF54.zip', array('external' => TRUE)))),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_menu().
 */
function commerce_order2pdf_menu() {
  $items['admin/commerce/config/order/order2pdf'] = array(
    'title' => 'Order2pdf settings',
    'description' => 'Configure order to PDF generation settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_order2pdf_settings_form'),
    'access arguments' => array('configure order settings'),
    'file' => 'order2pdf.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['order2pdf/%commerce_order'] = array(
    'page callback' => 'commerce_order2pdf_view',
    'page arguments' => array(1),
    'access callback' => 'commerce_order2pdf_access',
    'access arguments' => array(1, 'validate'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/commerce/orders/%commerce_order/export'] = array(
    'title' => 'pdf',
    'page callback' => 'commerce_order2pdf_view',
    'page arguments' => array(3),
    'access callback' => 'commerce_order_access',
    'access arguments' => array('view', 3),
    'weight' => 100,
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_views_api().
 */
function commerce_order2pdf_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commerce_order2pdf') . '/includes/views',
  );
}

/**
 * Implement hook_access.
 */
function commerce_order2pdf_access($order, $action = 'create') {
  $arg2 = arg(2);
  $hash = hash('md5', $order->order_id . $order->created);
  if ($action == 'create') {
    return $hash;
  }
  if ($action == 'validate') {
    if ($arg2 == $hash) {
      return TRUE;
    }
    if ($arg2 != $hash) {
      drupal_set_message(t('Sorry, wrong access key. Please contact a site administrator!'), 'error');
      return FALSE;
    }
  }
}

/**
 * Implements hook_views_data_alter().
 */
function commerce_order2pdf_views_data_alter(&$data) {
  if (isset($data['commerce_order2pdf_line_item'])) {
    $data['commerce_order2pdf_line_item']['table']['base']['access query tag'] = TRUE;
  }
}

/**
 * Custom function generation pdf page view.
 */
function commerce_order2pdf_view($order) {
  if (file_exists(libraries_get_path('MPDF54'))) {
    $lib_path = libraries_get_path('MPDF54');
    include_once($lib_path . '/mpdf.php');
  }
  $mpdf = new mPDF();
  // $html must be defined
  $style = file_get_contents(variable_get('order2pdf_pdf_style_file',
    drupal_get_path('module', 'commerce_order2pdf') . '/commerce_order2pdf.css'));
  $html_header = token_replace(variable_get('order2pdf_pdf_header'), array('commerce-order' => $order));
  $html = $html_header . views_embed_view('commerce_order2pdf', 'default', $order->order_id);
  $mpdf->WriteHTML($style, 1);
  $mpdf->WriteHTML($html);
  $pdf_title = variable_get('order2pdf_pdf_title', 'Order_[commerce-order:order-id]');
  $mpdf->Output(token_replace($pdf_title, array('commerce-order' => $order)).".pdf", 'd');
}
