<?php
/**
 * @file
 * Collected functions for the ref_debug module.
 */

/**
 * Implements hook_libraries_info().
 */
function ref_debug_libraries_info() {
  $libraries = array();
  $libraries['php-ref'] = array(
    'name' => 'PHP-ref',
    'vendor url' => 'https://github.com/digitalnature/php-ref',
    'download url' => 'https://github.com/digitalnature/php-ref/zipball/master',
    'version callback' => 'ref_debug_short_circuit_version',
    'files' => array(
      'js' => array(
        'ref.js',
      ),
      'php' => array(
        'ref.php',
      ),
    ),
  );
  return $libraries;
}

/**
 * Just returns TRUE for version check, because we don't need to check version.
 */
function ref_debug_short_circuit_version() {
  return "installed";
}

/**
 * Implements hook_boot().
 */
function ref_debug_boot() {
  // Nedd to get functions in common.inc to get libraries_get_path to work.
  require_once DRUPAL_ROOT . '/includes/common.inc';
  // Need to load the user module to get permissions.
  drupal_get_filename('module', 'user', 'modules/user/user.module');
  drupal_load('module', 'user');
  // Load the libraries module to get functions.
  drupal_load('module', 'libraries');
  // Ensure this module is properly loaded.
  drupal_load('module', 'ref_debug');
  if (user_access('access php-ref debug info') == TRUE) {
    if (function_exists('libraries_get_path') === TRUE) {
      $phpref_path = libraries_get_path('php-ref');
      if (!empty($phpref_path) && file_exists($phpref_path .= '/ref.php')) {
        include_once $phpref_path;
      }
    }
    else {
      drupal_set_message('Libraries module is missing, it is needed to get PHP
       ref to work', 'error');
    }
  }
}

/**
 * Implements hook_permissions().
 */
function ref_debug_permission() {
  return array(
    'access php-ref debug info' => array(
      'title' => t('Access php-ref debug info'),
      'description' => t('To get the debug info from php-ref.'),
    ),
    'administer php-ref debug' => array(
      'title' => t('Administer REF debug info'),
      'description' => t('To get the debug info from php-ref.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function ref_debug_menu() {
  $items['admin/config/ref'] = array(
    'title' => 'Ref debug',
    'description' => 'Settings for Ref debug.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ref_debug_admin_settings'),
    'access arguments' => array('administer php-ref debug'),
    'file' => 'ref_debug.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['node/%node/ref'] = array(
    'title' => 'Ref',
    'page callback' => 'ref_debug_load',
    'page arguments' => array('node', 1),
    'access arguments' => array('access php-ref debug info'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'weight' => 90,
    'file' => 'ref_debug.inc',
  );
  $items['user/%user/ref'] = array(
    'title' => 'Ref',
    'page callback' => 'ref_debug_load',
    'page arguments' => array('user', 1),
    'access arguments' => array('access php-ref debug info'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'weight' => 90,
    'file' => 'ref_debug.inc',
  );
  $items['taxonomy/term/%taxonomy_term/ref'] = array(
    'title' => 'Ref',
    'page callback' => 'ref_debug_load',
    'page arguments' => array('taxonomy_term', 2, 'term'),
    'access arguments' => array('access php-ref debug info'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'weight' => 90,
    'file' => 'ref_debug.inc',
  );
  $items['comment/%comment/ref'] = array(
    'title' => 'Ref',
    'page callback' => 'ref_debug_load',
    'page arguments' => array('comment', 1),
    'access arguments' => array('access php-ref debug info'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'weight' => 90,
    'file' => 'ref_debug.inc',
  );
  return $items;
}
