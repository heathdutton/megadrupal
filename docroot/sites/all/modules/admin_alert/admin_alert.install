<?php
// $Id$

/**
 * @file
 *
 */

function admin_alert_install() {
  drupal_set_message(t('Admin alert module has been installed.  Before you can use it you must <a href="/admin/config/administration/admin-alert">configure it</a>.'));
  $field = array(
    'field_name' => 'field_alert_title',
    'type' => 'text',
    'entity_types' => array('admin_alert'),
    'translatable' => TRUE,
    'locked' => TRUE,
  );
  $title = field_create_field($field);
  $field = array(
    'field_name' => 'field_alert_text',
    'type' => 'text_long',
    'entity_types' => array('admin_alert'),
    'translatable' => TRUE,
    'locked' => TRUE,
  );
  $text = field_create_field($field);
  foreach (admin_alert_types() as $bundle) {
    admin_alert_attach_fields($bundle);
  }
}

function admin_alert_uninstall() {
  foreach (array(
    'admin_alert_roles',
    'admin_alert_exclude_user_1',
    'admin_alert_alter_email',
    'admin_alert_replace_site_email',
    'admin_alert_use_admin_css',
  ) as $var) {
    variable_del($var);
  }
  field_delete_field('field_alert_title');
  field_delete_field('field_alert_text');
}

function admin_alert_attach_fields($bundle) {
  foreach (array('field_alert_title', 'field_alert_text') as $field) {
    field_create_instance(admin_alert_field_instance($field, $bundle));
  }
}

function admin_alert_field_instance($field, $bundle) {
  if ($field == 'field_alert_title') {
    return array(
      'field_name' => $field,
      'entity_type' => 'admin_alert',
      'bundle' => $bundle,
      'label' => t('Title'),
      'description' => t('Title of the alert on website, and subject for emails.'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'text_textfield',
        'weight' => -5,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_plain',
          'weight' => 5,
        ),
        'list' => array(
          'label' => 'hidden',
          'type' => 'text_plain',
          'weight' => 5,
        ),
        'full' => array(
          'type' => 'hidden',
        ),
      ),
    );
  }
  elseif ($field == 'field_alert_text') {
    return array(
      'field_name' => $field,
      'entity_type' => 'admin_alert',
      'bundle' => $bundle,
      'label' => t('Text'),
      'description' => t('Full text of the alert and body of the email.'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'text_textarea',
        'weight' => 0,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_plain',
          'weight' => 0,
        ),
        'full' => array(
          'label' => 'hidden',
          'type' => 'text_plain',
          'weight' => 0,
        ),
        'list' => array(
          'type' => 'hidden',
        ),
      ),
    );
  }
}

function admin_alert_schema() {
  $schema['admin_alert'] = array(
    'description' => 'The base table for admin alerts.',
    'fields' => array(
      'aaid' => array(
        'description' => 'The primary key for admin alerts.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The machine name of a single alert.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'The type of admin alert.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => 'info',
      ),
      'path' => array(
        'description' => 'The (optional) drupal path at which the admin alert can be accomplished.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'send' => array(
        'description' => 'Flag for when the alert should be sent to users.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'translate' => array(
        'description' => 'Flag for when the alert should be translated.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'replacements' => array(
        'description' => 'An array of elements for translation.',
        'type' => 'blob',
        'size' => 'normal',
        'not null' => FALSE,
        'serialize' => TRUE,
      ),
      'closed' => array(
        'description' => 'Unix timestamp at which the alert was marked done.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'Unix timestamp at which the alert was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('aaid'),
  );
  $schema['admin_alert_users'] = array(
    'description' => 'Tracks when nodes were last changed or commented on, for each user that authored the node or one of its comments.',
    'fields' => array(
      'aaid' => array(
        'description' => 'The {admin_alert}.aaid this record tracks.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The {users}.uid of the administrator.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'user_read' => array(
        'description' => 'The Unix timestamp when the alert was marked read.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('aaid', 'uid'),
    'foreign keys' => array(
      'read_alert' => array(
        'table' => 'admin_alert',
        'columns' => array('aaid' => 'aaid'),
      ),
      'tracked_user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );
  return $schema;
}
