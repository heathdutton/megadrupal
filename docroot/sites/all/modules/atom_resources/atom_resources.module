<?php
/**
 * @file
 * Code for Atom Resources.
 */

/**
 * Implements hook_field_extra_fields().
 */
function atom_resources_field_extra_fields() {
  $extra = array();

  $extra['node']['resource']['display'] = array(
    'resource_post_date' => array(
      'label' => t('Date Posted'),
      'description' => t('Displays the date posted.'),
      'weight' => -1,
    ),
  );

  return $extra;
}

/**
 * Implements hook_node_view().
 */
function atom_resources_node_view($node) {
  if ($node->type == 'resource') {
    $node->content['resource_post_date'] = array(
      '#markup' => '<div class="node-date">' . format_date($node->created, 'medium') . '</div>',
    );
  }
}

/**
 * Get the project resources.
 *
 * @return array
 *   An array of project resources
 *
 * @see hook_atom_resources_project_resources_alter()
 */
function atom_resources_get_project_resources($project, $limit = 0) {
  $resources = &drupal_static(__FUNCTION__ . '_' . $project->nid, array());

  if (!$resources && module_exists('atom_resource_and_project_connector')) {
    $query = db_select('field_data_field_resource_related_projects', 'p');
    $query->fields('p', array('entity_id'));
    $query->condition('field_resource_related_projects_target_id', $project->nid, '=');
    $query->join('node', 'n', 'n.nid=p.entity_id AND n.vid=p.revision_id');
    $query->fields('n', array('title'));
    $query->orderBy('title');
    if ($limit) {
      $query->range(0, $limit);
    }
    $results = $query->execute();
    $nids = array();
    while ($result = $results->fetchAssoc()) {
      array_push($nids, $result['entity_id']);
    }

    node_load_multiple($nids);
    foreach ($nids as $nid) {
      array_push($resources, node_load($nid));
    }
    drupal_alter('atom_resources_project_resources', $resources, $project);
  }

  return $resources;
}
