<?php

/**
 * @file
 * The module file of the PoolParty Semantic Connector for Drupal.
 */

/**
 * Implements hook_permission().
 */
function semantic_connector_permission() {
  return array(
    'administer semantic_connector' => array(
      'title' => t('Administer the PoolParty Semantic Connector'),
      'description' => t('Perform administration tasks for the PoolParty Semantic Connector.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function semantic_connector_menu() {
  $items['admin/config/services/semantic_connector'] = array(
    'title' => 'PoolParty Semantic Connector',
    'description' => 'Manage the collaboration of semantic Drupal modules installed on your site.',
    'page callback' => 'semantic_connector_overview',
    'access arguments' => array('administer semantic_connector'),
    'file' => 'includes/semantic_connector.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/services/semantic_connector/connections/%/%'] = array(
    'title' => 'Edit a Semantic Connector Connection',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('semantic_connector_connection_edit_form', 5, 6),
    'access arguments' => array('administer semantic_connector'),
    'file' => 'includes/semantic_connector.admin.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/semantic_connector/connections/%/%/delete'] = array(
    'title' => 'Delete a Semantic Connector Connection',
    'page callback' => 'semantic_connector_connection_delete',
    'page arguments' => array(6, TRUE),
    'access arguments' => array('administer semantic_connector'),
    'file' => 'includes/semantic_connector.admin.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/semantic_connector/connections/pp_server/%/refresh_projects'] = array(
    'title' => 'Refresh the project of a PoolParty Server Connection',
    'page callback' => 'semantic_connector_connection_refresh_projects',
    'page arguments' => array(6),
    'access arguments' => array('administer semantic_connector'),
    'file' => 'includes/semantic_connector.admin.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function semantic_connector_taxonomy_term_view_alter(&$build) {
  if (isset($build['#term']->field_uri) && module_exists('powertagging')) {
    drupal_set_title(t('All articles for the topic: @termname', array('@termname' => $build['#term']->name)));

    if (!empty($build['#term']->field_uri) && module_exists('smart_glossary')) {
      // Load all Smart Glossary configurations (they are required later).
      $glossary_configs = smart_glossary_config_load();
      $correct_glossary = NULL;

      // Load the correct PowerTagging configuration for the current term's vid.
      foreach (powertagging_config_load() as $conf) {
        if (isset($conf->config['projects'])) {
          foreach ($conf->config['projects'] as $project_id => $project) {
            if ($project['taxonomy_id'] == $build['#term']->vid) {
              // Get the URL of the corresponding SPARQL-endpoint.
              $connection_conf = $conf->connection->getConfig();
              if (isset($connection_conf['projects'])) {
                foreach ($connection_conf['projects'] as $connection_project) {
                  if ($connection_project->id == $project_id && isset($connection_project->sparql_endpoint_url)) {
                    // Check if a SmartGlossary configuration uses that URL.
                    foreach ($glossary_configs as $glossary_config) {
                      if ($glossary_config->connection->getURL() == $connection_project->sparql_endpoint_url) {
                        $correct_glossary = $glossary_config;
                        break;
                      }
                    }
                  }
                }
              }
            }

            if (!is_null($correct_glossary)) {
              break;
            }
          }
        }

        if (!is_null($correct_glossary)) {
          break;
        }
      }

      // Add a link to the Smart Glossary.
      if (!is_null($correct_glossary)) {
        global $base_path, $base_url;
        $build['semantic_connector_links'] = array(
          '#type' => 'item',
          '#markup' => '<div id="semantic_connector_taxonomy_term_links">' . l(t('Link to Smart Glossary'), $base_url . $base_path . $correct_glossary->base_path . '/' . $correct_glossary->language_mapping['']['glossary_languages'][0] . '/' . $build['#term']->name . '?uri=' . $build['#term']->field_uri[LANGUAGE_NONE][0]['value']) . '</div>',
        );
      }
    }
  }
}
