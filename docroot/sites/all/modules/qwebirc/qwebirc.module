<?php
// $Id: qwebirc.module,v 1.4 2011/07/29 20:35:55 japerry Exp $

/**
 * Implementation of hook_perm().
 */
function qwebirc_permission() {
  return array(
    'access qwebirc irc' => array(
      'title' => t('Access qwebirc page'),
      'description' => t('Allows users to see qwebirc page.'),
    ),
    'administer qwebirc irc' => array(
      'title' => t('Administer qwebirc settings'),
      'description' => t('Grants access to all the qwebirc admin settings.'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function qwebirc_menu() {    
    $items['irc'] = array(
      'page callback' => 'qwebirc_page',
      'access arguments' => array('access qwebirc irc'),
      'title' => variable_get('qwebirc_page_title', 'IRC Chat'),
      'type' => MENU_NORMAL_ITEM,
    );
    $items['admin/content/qwebirc'] = array(
      'title' => 'Qwebirc IRC',
      'description' => 'Configure Qwebirc IRC.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('qwebirc_admin_settings'),
      'access arguments' => array('administer qwebirc irc'),
      'type' => MENU_NORMAL_ITEM,
    );

  return $items;
}

/**
 * Menu callback; display qwebirc irc settings.
 */
function qwebirc_admin_settings() {
  $form['qwebirc_welcome'] = array(
    '#type' => 'textarea',
    '#title' => t('IRC welcome'),
    '#default_value' => variable_get('qwebirc_welcome', t('<p>Welcome to our Chat Room.<br />
      This room is hosted on an Internet Relay Chat (<a href="http://en.wikipedia.org/wiki/Irc">IRC</a>) server and powered by IRC software.<br />
      Feel free to join the conversations that are taking place.</p>')),
    '#description' => t('Optional welcome information that appears above the chat window.'),
    '#required' => FALSE,
  );
  $form['qwebirc_channel'] = array(
    '#type' => 'textfield',
    '#title' => t('Channel name'),
    '#default_value' => variable_get('qwebirc_channel', 'qwebirc'),
    '#description' => t('Name of the IRC channel to access. use pound # signs for double pound channels ## only.'),
    '#size' => 20,
    '#required' => TRUE,
  );
  $form['qwebirc_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Chat window width'),
    '#default_value' => variable_get('qwebirc_width', '500'),
    '#description' => t('Width of the IRC chat window.'),
    '#size' => 5,
    '#required' => TRUE,
  );
  $form['qwebirc_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Chat window height'),
    '#default_value' => variable_get('qwebirc_height', '280'),
    '#description' => t('Height of the IRC chat window.'),
    '#size' => 5,
    '#required' => TRUE,
  );
  $form['qwebirc_help'] = array(
    '#type' => 'textarea',
    '#title' => t('IRC help'),
    '#default_value' => variable_get('qwebirc_help', t('<p>New to IRC? Here are some commands to get you started:</p>
      <ul>
      <li>/help  Display help.</li>
      <li>/clear  Clear the chat output in this channel.</li>
      <li>/nick [nick]  Change your nickname.</li>
      <li>/msg [nick] [msg]  Send a private message.</li>
      <li>/whois [nick]  Find out all manner of things about someone.</li>
      <li>/me [text]  Emote.</li>
      <li>/away <msg>  Set your status to away.</li>
      <li>/back  Set your status to back.</li>
      </ul>')),
    '#description' => t('Optional help information that appears below the chat window.'),
    '#required' => FALSE,
  );
  
  $form['qwebirc_nicknamemode'] = array(
    '#type' => 'radios',
    '#title' => t('Nickname Mode'),
    '#description' => t('At startup would you like the client to use a random nickname, a preset nickname or a nickname of the users choice?'),
    '#default_value' => variable_get('qwebirc_nicknamemode', 0),
    '#options' => array(t('Make the user choose a nickname.'), t('Use a random nickname, e.g. qwebirc12883.'), t('Use a preset nickname of your choice.'), t('Use nickname of currently logged in user.') ),
  );

  $form['qwebirc_nickname'] = array(
    '#type' => 'textfield',
    '#title' => t('Preset Nickname'),
    '#description' => t('Enters a preset nickname of your choice. ONLY WORKS WITH preset nickname, option three of nickname mode'),
    '#default_value' => variable_get('qwebirc_nickname', ''),
  );
  $form['qwebirc_nickname_admmask'] = array(
    '#type' => 'textfield',
    '#title' => t('Admin Nickname Mask'),
    '#description' => t('Enters a preset nickname for user 1... if you desire to use irc as that user'),
    '#default_value' => variable_get('qwebirc_nickname_admmask', ''),
  );  
  $form['qwebirc_server'] = array(
    '#type' => 'textfield',
    '#title' => t('qwebirc server'),
    '#default_value' => variable_get('qwebirc_server', 'http://webchat.freenode.net/'),
    '#description' => t('the servername for the qwebirc client. Freenode is our default. YOU MUST use the full URI (http or https://) Please also include the trailing slash "/"'),
    '#size' => 64,
    '#required' => TRUE,
  );
  
  $form['qwebirc_dialog'] = array(
    '#type' => 'radios',
    '#title' => t('Display connect dialog?'),
    '#description' => t('Do you want the user to be shown the connect dialog (with the values you have supplied pre-entered) or just a connect confirmation?'),
    '#default_value' => variable_get('qwebirc_dialog', 1),
    '#options' => array(t('Connect without displaying the dialog.'), t('Show the connect dialog.')),
  );

  
  /* Define a validation function.
  $form['#validate'] = array(
    'qwebirc_admin_settings_validate' => array()
  );
   
   */
  return system_settings_form($form);
}

// Validate the settings form.
function qwebirc_admin_settings_validate($form, &$form_state) {
  if (!is_numeric($form_state['values']['qwebirc_width'])) {
    form_set_error('qwebirc_width', t('Please enter a number.'));
  }
  if (!is_numeric($form_state['values']['qwebirc_height'])) {
    form_set_error('qwebirc_height', t('Please enter a number.'));
  }
}

function qwebirc_page() {
  global $user;

  $url_args = array();  
  $title = variable_get('qwebirc_page_title', 'Live Chat');
  $server = variable_get('qwebirc_server', 'webchat.freenode.net');
  $width = 'width="' . variable_get('qwebirc_width', '500') . '"';
  $height = 'height="' . variable_get('qwebirc_height', '280') . '"';
  
  if (variable_get('qwebirc_channel', 'qwebirc_test')) {
    $channels = preg_replace('/##/', '%23', variable_get('qwebirc_channel', 'qwebirc_test'));
    $channels = preg_replace('/#/', '', $channels);
    if ($channels != '') {
      $url_args['channels'] = $channels;
    }
  }
  if (variable_get('qwebirc_nicknamemode', 0) == 1) {
    $url_args['randomnick'] = 1;
    if (variable_get('qwebirc_dialog', 1) == 1) {
      $url_args['prompt'] = 1;
    }    
  }
  elseif (variable_get('qwebirc_nicknamemode', 0) == 2) {
    $url_args['nick'] = variable_get('qwebirc_nickname', '');
    if (variable_get('qwebirc_dialog', 1) == 1 || variable_get('qwebirc_nickname', '') == '') {
      $url_args['prompt'] = 1;
    }
  }
  elseif (variable_get('qwebirc_nicknamemode', 0) == 3) {
    if (!isset($user) || $user->uid == 0) {
      $url_args['prompt'] = 1;
    }
    else {
      $url_args['nick'] = preg_replace('/ /', '_', $user->name);
      if (variable_get('qwebirc_dialog', 1) == 1 || $user->name == '') {
        $url_args['prompt'] = 1;
      }
    }
  }
  if (isset($url_args['nick']) && $url_args['nick'] == $user->name && $user->uid == 1 && variable_get('qwebirc_nickname_admmask', '') != '') {
    //reset admin name to something else
    $url_args['nick'] = variable_get('qwebirc_nickname_admmask', '');
  }
  
  $url = '';
  foreach ($url_args as $param => $val) {
    if ($url != '') {
      $url .= '&';
    }
    else {
      $url = '?';
    }
    $url .= $param . '=' . $val;
  }
  $url = $server . $url;
  $output = variable_get('qwebirc_welcome', '');  
  $output .= '<p><iframe src="' . $url . '" ' . $width . ' ' . $height . '></iframe></p>';
  $output .= variable_get('qwebirc_help', '');

  return $output;
}