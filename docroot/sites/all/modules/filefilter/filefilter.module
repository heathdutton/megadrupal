<?php
error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);

/**
 * Implementation of hook_init().
 */
function filefilter_init() {
  drupal_add_css(drupal_get_path('module', 'filefilter') .'/filefilter.css');
}

function filefilter_help($path = 'admin/help#filefilter', $arg) {
  switch ($path) {
    case 'admin/help#filefilter':
      return t('<p>The File filter allows you to enter placeholders for files uploaded via the File Field CCK module, using a content type\'s default field display settings, and specifying some basic parameters.</p>');
      break;
  }
}

/**
 * Implementation of hook_filter().
 */
function filefilter_filter_info() {
  $filters['filefilter'] = array(
    'title' => t('File filter'),
    'description' => t('Allows entering placeholders for uploaded files, using a content type\'s default field display settings, and specifying some basic parameters.'),
    'process callback' => '_filefilter_process',
  );
  return $filters;
}

/**
 * Filter process callback.
 */
function _filefilter_process($text, $format) {
  if (!empty($text)) :
    $filter = _filefilter_filter_match($text);

    if ( count($filter)) :
      foreach ( $filter[0] as $field ) :
        // Replace brackets with HTML comment
        $newfield = str_ireplace("[", "<!-- ", $field);
        $newfield = str_ireplace("]", " -->", $newfield);
        $text = str_ireplace($field, $newfield, $text);
      endforeach;

      return $text;
    else :
      return $text;
    endif;
  endif;
}

function filefilter_entity_view_alter(&$build) {
  $build['#post_render'][] = '_filefilter_post_render';
}

function _filefilter_post_render($content, $element) {
  $image_styles = image_styles();

  $matches = _filefilter_post_render_match($content);

  $matchesnew = array();
  foreach ( $matches[0] as $key => $string ) :
    $matchesnew[$key] = array(
      'match' => $string,
      'field' => $matches['field'][$key],
      'fieldno' => $matches['fieldno'][$key],
    );

    if ( strlen($matches['settings'][$key]) > 1 ) :
      $settings = explode("|", $matches['settings'][$key]);
      $settings_array = array();
      foreach ( $settings as $string ) :
        $array = explode(":", trim($string));
        if ( $array[0] == 'notitle' ) $array[1] = 'notitle';
        $settings_array[trim($array[0])] = trim($array[1]);
      endforeach;

      $matchesnew[$key]['settings'] = $settings_array;
    endif;
  endforeach;

  $matches = $matchesnew;
  unset($matchesnew);

  foreach ( $matches as $match ) :

    // Remove comment tags
    $fieldstring = preg_replace("/\s*\<*!*\-\-\>*\s*/", "", $match['match']);

    $fieldshortname = $match['field'];      // Will be used for classes
    $fieldname = 'field_' . $fieldshortname;
    $fieldno = $match['fieldno'];

    // Making sure that all assigned image numbers are greater than zero
    if ( $fieldno > 0 ) $fieldno = $fieldno - 1;
    else unset( $fieldno );

    !empty($match['settings']['align']) ? $align = explode(" ", $match['settings']['align']) : $align = array();
    !empty($match['settings']['class']) ? $class = explode(" ", $match['settings']['class']) : $class = array();
    $class = array_merge($align, $class);
    $class[] = "filefilter";
    $class[] = $fieldshortname;

    if ( isset($element[$fieldname]) ) :
      $field = $element[$fieldname];
      $type = $field['#field_type'];
      $node = $element['#node'];

      $instance = field_info_instance('node', $fieldname, $node->type);
      $view_mode = $field['#view_mode'] == 'full' ? 'default' : $field['#view_mode'];
      $display = $instance['display'][$view_mode];

      if ( $type == 'image' ) :
        if ( isset($match['settings']) ) :
          if ( isset($match['settings']['size']) ) :
            $size = $match['settings']['size'];
            $class[] = 'style-' . $size;
            // Checks if the selected image size exists in the system and replaces the default display with it
            if ( is_array($image_styles[$size]) ) :
              $display['settings']['image_style'] = $size;
            endif;
          endif;
        else :
          $match['settings'] = array();
        endif;
      endif;

      // Pick up field from node object
      if ( isset($node->{$fieldname}['und']) ) :
        $lang = 'und';
      elseif ( isset($node->{$fieldname}[0]) ) :
        $lang = 0;
      else :
        $lang = $node->language;
      endif;


      $field = $node->{$fieldname}[$lang];
      $fielditem = $field[$fieldno];
      $fielddata = field_view_value('node', $node, $fieldname, $fielditem, $display);
      $fieldview = theme('filefilter', array('field_type' => $type, 'field_data' => $fielddata, 'field_class' => $class, 'field_settings' => $match['settings']));

      $content = str_replace($match['match'], $fieldview, $content);
    endif;

  endforeach;

  return $content;
}

function _filefilter_filter_match($content) {
  // Match syntax like [field:n], where n is an integer
  // This may obviously interfere with other filters. Needs more specificity
  preg_match_all("/\[\w+:\d*\|?.*\]/", $content, $matches);

  return $matches;
}

function _filefilter_post_render_match($content) {
  preg_match_all("/\<!\-\-\s*" . "(?'field'\w+):(?'fieldno'\d*)\|?(?'settings'.*)" . "\s*\-\-\>/", $content, $matches);

  return $matches;
}

function theme_filefilter($variables) {
  $output = drupal_render($variables['field_data']);

  // Remove width and height from images to promote fluidity. Will have to be moved to own filter/function.
  if ( $variables['field_type'] == 'image' ) :
    $output = preg_replace("/\s*(width|height)=\"\d*\"/", "", $output, 2);
    $variables['field_class'][] = 'style-' . $variables['field_data']['#image_style'];
  endif;

  if ( count($variables['field_class']) ) :
    $class = " class=\"" . implode(" ", $variables['field_class']) . "\"";
  endif;

  $output = "<span" . $class . ">\n" . $output . "\n";

  if ( $variables['field_data']['#item']['title'] != '' && !isset($variables['field_settings']['notitle']) ) :
    $output .= "<span class=\"field caption\">" . $variables['field_data']['#item']['title'] . "</span>\n";
  endif;
  $output .= "</span>\n";

  return $output;
}

function filefilter_theme() {
  return array(
    'filefilter' => array(
      'variables' => array(
        'field_type' => NULL,
        'field_data' => array(),
        'field_class' => array(),
        'field_settings' => array()
      )
    )
  );
}