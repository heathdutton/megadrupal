<?php

/**
 * @file
 * Install, update and uninstall functions for the featureflags module.
 */

/**
 * Main schema for feature flags
 */
function featureflags_schema() {
  $schema['featureflags'] = array(
    'description' => t('Defines feature flags objects'),
    'fields' => array(
      'flag_name' => array(
        'type' => 'varchar',
        'length' => '64',
        'description' => 'The machine name for the feature flag',
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'description' => 'User friendly flag name',
      ),
      'description' => array(
        'type' => 'text',
        'description' => 'Notes or description of the feature flag',
      ),
      'updated' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time this flag was created or updated.',
      ),
      'status' => array(
        'description' => 'Status of the feature flag (disabled, enabled, ...)',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('flag_name'),
    'indexes' => array('updated' => array('updated')),
  );

  $schema['featureflags_rules'] = array(
    'description' => t('Defines the access rules for the feature flags (roleid, userid, ...)'),
    'fields' => array(
      'rid' => array(
        'description' => 'Feature flag rule ID.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'flag_name' => array(
        'type' => 'varchar',
        'length' => '64',
        'description' => 'The machine name for the feature flag',
        'not null' => TRUE,
      ),
      'rule_type' => array(
        'description' => 'Type of the feature flag rule (role, userid, ...)',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'rule_data' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized data being stored.',
        'serialize' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time this rule was created or updated.',
      ),
    ),
    'primary key' => array('rid'),
    'indexes' => array('updated' => array('updated')),
  );

  return $schema;
}


/**
 * Implements hook_install().
 */
function featureflags_install() {
  menu_rebuild();
}

/**
 * Implementats hook_uninstall().
 */
function featureflags_uninstall() {
  drupal_uninstall_schema('featureflags');
  drupal_uninstall_schema('featureflags_rules');
}


