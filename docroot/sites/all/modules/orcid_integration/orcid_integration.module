<?php

/**
 * @file
 * ORCID core functions.
 */

define('ORCID_INTEGRATION_API_VERSION', 'v1.1');

/**
 * Implements hook_menu().
 */
function orcid_integration_menu() {
  $items = array();

  $items['admin/config/services/orcid'] = array(
    'title' => 'ORCID',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('orcid_integration_services_configuration'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/orcid_integration.admin.inc',
  );

  $items['user/%user/orcid'] = array(
    'title' => 'ORCID',
    'page callback' => 'orcid_integration_view_page',
    'page arguments' => array(1),
    'access callback' => 'orcid_integration_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/orcid_integration.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function orcid_integration_permission() {
  return array(
    'administer orcid accounts' =>  array(
      'title' => t('Administer orcid accounts'),
    ),
    'edit own orcid account' =>  array(
      'title' => t('Edit own orcid account'),
    ),
  );
}

/**
 * Access callback for user account editing.
 */
function orcid_integration_edit_access($account) {
  return (($GLOBALS['user']->uid == $account->uid && user_access('edit own orcid account')) || user_access('administer orcid accounts')) && $account->uid > 0;
}

/**
 * Implements hook_theme().
 */
function orcid_integration_theme($existing, $type, $theme, $path) {
  return array(
    'orcid_integration_xml_bio' => array(
      'template' => 'orcid-integration-xml-bio',
      'variables' => array(
        'email' => NULL,
        'first_name' => NULL,
        'last_name' => NULL,
      ),
    ),
  );
}

/**
 * Searches for account(s) on ORCID.
 */
function orcid_integration_search_account($account) {
  $request_options = orcid_integration_generate_member_search_url();
  $request_options = array();
  $api_url = orcid_integration_generate_public_search_url();
  if (variable_get('orcid_integration_members_api_url')) {
    $request_options = orcid_integration_generate_member_search_url();
    $api_url = $request_options['api_url'];
  }
  $url_options = array(
    'query' => array(
      'q' => $account->mail
    ),
  );
  $response = orcid_integration_search_request($api_url, $url_options, $request_options);
  if ($response->code == "200") {
    return $response->decoded_data;
  }
  return FALSE;
}

/**
 * Searches for account on ORCID by account id.
 */
function orcid_integration_search_by_orcid_id($id) {
  $api_url = variable_get('orcid_integration_public_api_url', 'http://api.sandbox.orcid.org/');
  $url = url($api_url . ORCID_INTEGRATION_API_VERSION . "/{$id}/orcid-bio");
  $response = orcid_integration_search_request($url, array(), array());
  return $response;
}

/**
 * Generates public search url (and parameters).
 */
function orcid_integration_generate_public_search_url($api_url = NULL) {
  if (empty($api_url)) {
    $api_url = variable_get('orcid_integration_public_api_url', 'http://api.sandbox.orcid.org/');
  }
  return url($api_url . ORCID_INTEGRATION_API_VERSION . '/search/orcid-bio');
}

/**
 * Generates token based on scope.
 */
function orcid_integration_generate_token($client_id, $client_secret, $api_url, $scope, $redirect_url) {
  $options = array(
    'method' => 'POST',
    'headers' => array(
      'Accept' => 'application/json',
      'Content-Type' => 'application/x-www-form-urlencoded',
    ),
    'data' => implode('&', array(
      "client_id={$client_id}",
      "client_secret={$client_secret}",
      "scope={$scope}",
      "grant_type=client_credentials"
    )),
  );
  $request = drupal_http_request($api_url . 'oauth/token', $options);
  if ($request->code == "200") {
    $data = json_decode($request->data);
    return $data->access_token;
  }
  return FALSE;
}

/**
 * Generates member search url (and parameters).
 */
function orcid_integration_generate_member_search_url($client_id = NULL, $client_secret = NULL, $api_url = NULL, $redirect_url = NULL) {
  global $base_url;
  if (empty($client_id)) {
    $client_id = variable_get('orcid_integration_api_client_id', '');
  }
  if (empty($client_secret)) {
    $client_secret = variable_get('orcid_integration_api_client_secret', '');
  }
  if (empty($api_url)) {
    $api_url = variable_get('orcid_integration_members_api_url', '');
  }
  if (empty($redirect_url)) {
    $redirect_url = variable_get('orcid_integration_api_redirect_url', $base_url);
  }
  if ($token = orcid_integration_generate_token($client_id, $client_secret, $api_url, '/read-public', $redirect_url)) {
    return array(
      'api_url' => orcid_integration_generate_public_search_url($api_url),
      'token' => $token,
    );
  }
  return array(
    'api_url' => orcid_integration_generate_public_search_url(),
    'token' => $token,
  );
}

/**
 * Performs orcid request (includes search via query, by id).
 */
function orcid_integration_search_request($url, $url_options, $request_options) {
  $default_request_options = array(
    'headers' => array(
      'Accept' => 'application/orcid+json',
    ),
  );
  if (!empty($request_options['token'])) {
    $default_request_options['headers']['Authorization'] = "Bearer {$request_options['token']}";
  }
  $response = drupal_http_request(url($url, $url_options), $default_request_options);
  if ($response->code == "200") {
    $response->decoded_data = _orcid_integration_json_to_array(json_decode($response->data));
  }
  return $response;
}

/**
 * Provisions new account on ORCID.
 */
function orcid_integration_provision_new_account($email, $first_name, $last_name) {
  $client_id = variable_get('orcid_integration_api_client_id', '');
  $client_secret = variable_get('orcid_integration_api_client_secret', '');
  $api_url = variable_get('orcid_integration_members_api_url', '');
  $redirect_url = variable_get('orcid_integration_api_redirect_url', $base_url);
  $scope = '/orcid-profile/create';
  $token = orcid_integration_generate_token($client_id, $client_secret, $api_url, $scope, $redirect_url);
  $boundary = md5($email . $first_name . $last_name);
  $params = array(
    'file' => _orcid_integration_generate_default_user_template($email, $first_name, $last_name),
  );
  $options = array(
    'method' => 'POST',
    'headers' => array(
      'Accept' => 'application/xml',
      'Content-Type' => 'application/vdn.orcid+xml',
      'Authorization' => "Bearer {$token}",
    ),
    'data' => theme('orcid_integration_xml_bio', array('email' => $email, 'first_name' => $first_name, 'last_name' => $last_name)),
  );
  $response = drupal_http_request($api_url . ORCID_INTEGRATION_API_VERSION . '/orcid-profile', $options);
  if ($response->code == "201" && $response->status_message == 'Created') {
    $location = $response->headers['location'];
    $location = str_replace('/orcid-profile', '', $location);
    $location = trim(basename($location));
    return $location;
  }
  else {
    drupal_set_message($response->error, 'error');
  }
  return FALSE;
}

/**
 * Converts json to array.
 */
function _orcid_integration_json_to_array($json_data) {
  $array = array();
  foreach ($json_data as $key => $value) {
    if ($value instanceof StdClass) {
        $array[$key] = _orcid_integration_json_to_array($value);
    } else if (is_array($value)) {
      $array[$key] = array();
      foreach ($value as $subkey => $subvalue) {
        $array[$key][$subkey] = _orcid_integration_json_to_array($subvalue);
      }
    }
    else {
        $array[$key] = $value;
    }
  }
  return $array;
}

/**
 * Generates user template for provisioning purposes.
 */
function _orcid_integration_generate_default_user_template($email, $first_name, $last_name) {
  $xml = theme('orcid_integration_xml_bio', array('email' => $email, 'first_name' => $first_name, 'last_name' => $last_name));
  $file = file_save_data($xml, 'temporary://' . md5($email . $first_name . $last_name) . '.xml', FILE_EXISTS_REPLACE);
  return $file->uri;
}

/**
 * Generates request for account provisioning purposes.
 */
function _orcid_integration_http_request_multipart_encode($params, $boundary){
  $output = "";
  foreach ($params as $key => $value){
    $output .= "--$boundary\r\n";
    if ($key == 'file'){
      $output .= _orcid_integration_http_request_multipart_encode_file($value);
    } else $output .= _orcid_integration_http_request_multipart_encode_text ($key, $value);
  }
  $output .="--$boundary--";
  return $output;
}

/**
 * Encodes data for account provisioning purposes.
 */
function _orcid_integration_http_request_multipart_encode_text($name, $value){
  return "Content-Disposition: form-data; name=\"$name\"\r\n\r\n$value\r\n";
}

/**
 * Encodes file information for account provisioning purposes.
 */
function _orcid_integration_http_request_multipart_encode_file($path){
  if (substr($path, 0, 1) == "@") $path = substr($path, 1);
  $filename = basename($path);
  $mimetype = "application/xml";
  $data = "Content-Disposition: form-data; name=\"file\"; filename=\"$filename\"\r\n";
  $data .= "Content-Transfer-Encoding: binary\r\n";
  $data .= "Content-Type: $mimetype\r\n";
  $data .= file_get_contents($path) . "\r\n";
  return $data;
}

/**
 * Outputs user information to form.
 */
function _orcid_integration_generate_output_from_orcid_array($orcid_data) {
  $output = array(l($orcid_data['orcid-profile']['orcid-identifier']['path'], $orcid_data['orcid-profile']['orcid-identifier']['uri'], array('attributes' => array('target' => '_blank'))));
  if (isset($orcid_data['orcid-profile']['orcid-bio']['personal-details']['credit-name']['value'])) {
    $output[] = $orcid_data['orcid-profile']['orcid-bio']['personal-details']['credit-name']['value'];
  }
  else if (isset($orcid_data['orcid-profile']['orcid-bio']['personal-details']['given-names']['value'])) {
    $output[] = $orcid_data['orcid-profile']['orcid-bio']['personal-details']['given-names']['value'] . ' ' . $orcid_data['orcid-profile']['orcid-bio']['personal-details']['family-name']['value'];
  }
  $email_list = array();
  foreach ($orcid_data['orcid-profile']['orcid-bio']['contact-details']['email'] as $email) {
    $email_list[] = $email['value'];
  }
  $output[] = implode(', ', $email_list);
  return '(' . implode(') - (', $output) . ')';
}

/**
 * Validates orcid id via ajax.
 */
function orcid_integration_ajax_validate_orcid_callback($form, $form_state) {
  $values = $form_state['values'];
  $orcid = $values['orcid'];
  $orcid_data = orcid_integration_search_by_orcid_id($orcid);
  if (!empty($orcid_data->decoded_data)) {
    $output = _orcid_integration_generate_output_from_orcid_array($orcid_data->decoded_data);
  }
  else {
    $output = t('Please enter a valid orcid.');
  }
  $form['existing']['info']['#markup'] = $output;
  return $form['existing']['info'];
}

/**
 * Validates orcid id via ajax.
 */
function orcid_integration_ajax_search_orcid_callback($form, $form_state) {
  return $form['mapping']['mapping_options'];
}
