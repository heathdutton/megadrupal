<?php

/**
 * @file parish_info.module
 *
 * Parish information management module.
 */

/******************************************************************************
* CORE HOOKS
******************************************************************************/

/**
 * Implements hook_permission().
 */
function parish_info_permission() {
  return array(
    'administer parish info' => array(
      'title' => t('Administer Parish Info'),
      'description' => t('Change parish info settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function parish_info_menu() {
  $items['parish-info.xml'] = array(
    'page callback' => 'parish_info_xml_endpoint',
    'access callback' => TRUE,
    'file' => 'includes/parish_info.xml.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/system/parish_info'] = array(
    'title' => 'Parish Info',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('parish_info_configuration_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer parish info'),
    'file' => 'includes/parish_info.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function parish_info_theme($existing, $type, $theme, $path) {
  $theme_hooks = array(
    'parish_info__block_contact' => array(
      'template' => 'parish_info--block_contact',
      'path' => drupal_get_path('module', 'parish_info') . '/templates',
      'variables' => array(
        'template' => 'block_contact',
        'address_street' => FALSE,
        'address_street_2' => FALSE,
        'address_city' => FALSE,
        'address_state' => FALSE,
        'address_zip' => FALSE,
        'map_link' => FALSE,
        'phone' => FALSE,
        'fax' => FALSE,
        'email' => FALSE,
      ),
    ),
  );

  return $theme_hooks;
}

/**
 * Implements hook_block_info().
 */
function parish_info_block_info() {
  $blocks['contact'] = array(
    'info' => t('Parish Info - Contact Us'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function parish_info_block_view($delta) {
  switch ($delta) {
    case 'contact':
      // If there's parish information available, display it.
      if ($parish_info = parish_info_get_info()) {
        // Build a map link using Google Maps (simple URL query).
        $map_link = l(t('Map'), 'http://maps.google.com?q=' . implode(',', array(
          $parish_info['address_street'],
          $parish_info['address_city'],
          $parish_info['address_state'],
          $parish_info['address_zip'],
        )), array('external' => TRUE));

        // Set up variables for theming.
        $variables = array(
          'address_street' => $parish_info['address_street'],
          'address_street_2' => empty($parish_info['address_street_2']) ? FALSE : $parish_info['address_street_2'],
          'address_city' => $parish_info['address_city'],
          'address_state' => $parish_info['address_state'],
          'address_zip' => $parish_info['address_zip'],
          'map_link' => $map_link,
          'phone' => empty($parish_info['phone']) ? FALSE : $parish_info['phone'],
          'fax' => empty($parish_info['phone']) ? FALSE : $parish_info['fax'],
          'email' => empty($parish_info['email']) ? FALSE : $parish_info['email'],
        );

        // Theme the block using the block template.
        $content = theme('parish_info__block_contact', $variables);
      }

      // Otherwise, show an empty message.
      else {
        $content = t('This parish has not configured its contact information.');
      }

      $block = array(
        'subject' => t('Contact Us'),
        'content' => $content,
      );
      break;
  }

  return $block;
}

/******************************************************************************
* HELPER FUNCTIONS
******************************************************************************/

/**
 * Get a parish's info by id number.
 *
 * @param $id
 *   If ID is not given, the row for 'this_site' will be returned.
 */
function parish_info_get_info($id = NULL) {
  if ($id) {
    return db_query("SELECT * FROM {parish_info} WHERE id = :id", array(':id' => $id))->fetchAssoc();
  }
  else {
    return db_query("SELECT * FROM {parish_info} WHERE this_site = 1")->fetchAssoc();
  }
}

/**
 * Form builder for a single parish record.
 *
 * This function will add a set of parish information inside a pre-existing
 * 'parish_info' fieldset or container in your form (must be added prior to
 * calling this function), and a submit handler to save the data.
 *
 * @param $form
 *   The form to which you wish to add the parish information fields.
 * @param $parish_info
 *   Full array of parish information, as returned by parish_info_get_info().
 */
function parish_info_form($form, $parish_info = NULL) {
  // For convenience in building forms for parish websites, $parish_info doesn't
  // have to be passed to this function; if it's not, get info here.
  if (empty($parish_info)) {
    $parish_info = parish_info_get_info();
  }

  // Since we're using some functions from parish_info.admin.inc, make sure that
  // include file is loaded.
  module_load_include('inc', 'parish_info', 'includes/parish_info.admin');

  $form['parish_info']['description'] = array(
    '#markup' => '<p>' . t("Please enter the parish's information below and save the changes when finished.") . '</p>',
  );
  $form['parish_info']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Parish Name'),
    '#size' => 55,
    '#maxlength' => 255,
    '#default_value' => $parish_info['name'],
    '#required' => TRUE,
  );
  $form['parish_info']['diocese'] = array(
    '#type' => 'select',
    '#title' => t('Diocese'),
    '#options' => _parish_info_list_us_dioceses(),
    '#default_value' => $parish_info['diocese'],
    '#required' => TRUE,
  );
  $form['parish_info']['address_street'] = array(
    '#type' => 'textfield',
    '#title' => t('Street Address'),
    '#size' => 45,
    '#maxlength' => 255,
    '#default_value' => $parish_info['address_street'],
    '#required' => TRUE,
  );
  $form['parish_info']['address_street_2'] = array(
    '#type' => 'textfield',
    '#title' => t('Street Address 2'),
    '#size' => 45,
    '#maxlength' => 255,
    '#default_value' => $parish_info['address_street_2'],
  );
  $form['parish_info']['address_city'] = array(
    '#type' => 'textfield',
    '#title' => t('City'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $parish_info['address_city'],
    '#required' => TRUE,
  );
  $form['parish_info']['address_state'] = array(
    '#type' => 'select',
    '#title' => t('State'),
    '#options' => _parish_info_list_us_states(),
    '#default_value' => $parish_info['address_state'],
    '#required' => TRUE,
  );
  $form['parish_info']['address_zip'] = array(
    '#type' => 'textfield',
    '#title' => t('Zip Code'),
    '#size' => 10,
    '#maxlength' => 10,
    '#element_validate' => array('_parish_info_validate_zip'),
    '#default_value' => $parish_info['address_zip'],
    '#required' => TRUE,
  );
  $form['parish_info']['phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone number'),
    '#size' => 15,
    '#maxlength' => 15,
    '#element_validate' => array('_parish_info_validate_phone'),
    '#default_value' => $parish_info['phone'],
  );
  $form['parish_info']['fax'] = array(
    '#type' => 'textfield',
    '#title' => t('Fax number'),
    '#size' => 15,
    '#maxlength' => 15,
    '#element_validate' => array('_parish_info_validate_phone'),
    '#default_value' => $parish_info['fax'],
  );
  $form['parish_info']['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Parish Email'),
    '#size' => 35,
    '#maxlength' => 255,
    '#element_validate' => array('_parish_info_validate_email'),
    '#default_value' => $parish_info['email'],
  );
  $form['parish_info']['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Parish Email'),
    '#size' => 35,
    '#maxlength' => 255,
    '#element_validate' => array('_parish_info_validate_email'),
    '#default_value' => $parish_info['email'],
  );
  $form['parish_info']['website'] = array(
    '#type' => 'textfield',
    '#title' => t('Parish Website'),
    '#size' => 45,
    '#maxlength' => 255,
    '#element_validate' => array('_parish_info_validate_website'),
    '#default_value' => $parish_info['website'],
  );

  // Add some CSS to clean up the form a bit.
  $form['#attached']['css'] = array(drupal_get_path('module', 'parish_info') . '/css/parish_info.admin.css');

  $form['#submit'][] = 'parish_info_form_submit';

  return $form;
}

function parish_info_form_submit($form, &$form_state) {
  // If there is information entered for this parish, update the data in the db.
  if ($form_state['values']['parish_info_parish_website']) {
    // Get the parish info values.
    $parish_info = $form_state['values']['parish_info'];
    // Set the 'this_site' variable for this site.
    $parish_info['this_site'] = 1;
    $parish_info['updated'] = time();

    // Use db_merge() to either update or insert the row for this site.
    db_merge('parish_info')
      ->key(array('this_site' => $parish_info['this_site']))
      ->fields($parish_info)
      ->execute();

    // Clear the block cache to update the Contact Us block.
    cache_clear_all(NULL, 'cache_block');
  }
}

/**
 * Validate a given email address.
 */
function _parish_info_validate_email($element, &$form_state, $form) {
  if (!empty($element['#value']) && !valid_email_address($element['#value'])) {
    form_error($element, t('Please enter a valid email address (Example: <em>parish@example.com</em>).'));
  }
}

/**
 * Validate a given zip code.
 */
function _parish_info_validate_zip($element, &$form_state, $form) {
  if (!empty($element['#value']) && !preg_match("/^([0-9]{5})(-[0-9]{4})?$/i", $element['#value'])) {
    form_error($element, t('Please enter a valid US zip code (Example: <em>63119</em> or <em>63119-0334</em>).'));
  }
}

/**
 * Validate a given phone number.
 */
function _parish_info_validate_phone($element, &$form_state, $form) {
  if (!empty($element['#value']) && !preg_match('/\(?\d{3}\)?[-\s.]?\d{3}[-\s.]\d{4}/x', $element['#value'])) {
    form_error($element, t('Please enter a valid US phone number (Example: <em>314-444-4444</em>).'));
  }
}

/**
 * Validate a given website URL.
 */
function _parish_info_validate_website($element, &$form_state, $form) {
  if (!empty($element['#value']) && !valid_url($element['#value'], TRUE)) {
    form_error($element, t('Please enter a valid website URL (Example: <em>http://www.example.com/</em>).'));
  }
}
