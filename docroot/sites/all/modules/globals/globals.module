<?php

/**
 * @file
 * The Globals module
 *
 * @license GPL v2 http://www.fsf.org/licensing/licenses/gpl.html
 * @author Chris Skene chris at xtfer dot com
 * @copyright Copyright(c) 2015 Christopher Skene
 */

use Drupal\globals\Globals;

/**
 * Define a usage permission
 */
const GLOBALS_PERM_ADMIN = 'administer_globals';

/**
 * Defines common types.
 */
const GLOBALS_TYPE_VARIABLE = 'variable';

/**
 * Implements hook_perm().
 */
function globals_permission() {
  return array(
    GLOBALS_PERM_ADMIN => array(
      'title' => t('Use globals'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function globals_menu() {

  $menu = array();

  $menu['admin/structure/globals'] = array(
    'page callback' => '\Drupal\\ghost\\Page\\PageController::createPage',
    'page arguments' => array(
      '\Drupal\\globals\\Controller\\Main',
      'view',
    ),
    'title' => 'Global properties',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array(
      GLOBALS_PERM_ADMIN,
    ),
  );

  $menu['admin/structure/globals/edit/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'ghost_form',
      '\Drupal\globals\Form\EditGlobal',
      4,
    ),
    'title' => 'Global properties',
    'type' => MENU_CALLBACK,
    'access arguments' => array(
      GLOBALS_PERM_ADMIN,
    ),
  );

  return $menu;
}

/**
 * Implements hook_globals().
 */
function globals_globals() {
  $globals = array();

  $globals['globals_example'] = array(
    'name' => t('Example'),
    'description' => t('An example variable'),
    'type' => GLOBALS_TYPE_VARIABLE,
    'key' => 'globals_example',
    'validation' => 'globals_example_validate_callback',
    'default' => 'foo',
    'hidden' => TRUE,
  );

  return $globals;
}

/**
 * Get a global value.
 *
 * A useful shorthand for accessing the Globals object.
 *
 * @param string $key
 *   Key to access
 *
 * @return mixed
 *   Result of the global
 */
function globals_get($key) {

  return Globals::init()->getGlobalValue($key);
}

/**
 * Get a global value filtered.
 *
 * @param string $key
 *   Global value key
 * @param string $check_function
 *   Filter name. Defaults to 'check_plain'. If you provide another filter
 *   value, its up to you to ensure the output is secure.
 *
 * @return mixed
 *   Result of the query.
 * @throws \Drupal\ghost\Exception\GhostException
 */
function globals_filter($key, $check_function = 'check_plain') {

  return Globals::init()->getFilteredValue($key, $check_function);
}
