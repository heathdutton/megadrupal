<?php

/**
 * @file
 * Trello User module.
 */

/**
 * Implements hook_menu().
 */
function trello_user_menu() {
  $items = array();

  $items['user/trello'] = array(
    'title' => 'Log in with Trello',
    'page callback' => 'trello_user_loginpage',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback.
 */
function trello_user_loginpage() {
  $page = '';
  if (isset($_GET['token'])) {
    $page .= t('Success!');
    // Search for matching token.
    $t_user = _trello_user_get_user(array('token' => $_GET['token']));

    if (empty($t_user)) {
      // Create new user.
      $result = _trello_user_create_user($_GET['token']);
      $t_user = _trello_user_get_user(array('token' => $_GET['token']));
    }

    // Log in if match.
    if (!empty($t_user)) {
      _trello_user_login_user($t_user);
    }
    else {
      // Unable to match or create a user.
    }

    return $page;
  }

  drupal_add_js(drupal_get_path('module', 'trello') . '/trello_auth.js');

  $params = array(
    'return_url' => $GLOBALS['base_url'] . '/user/trello',
  );
  $page .= '<p>' . implode('<br />',
    array(
      l(t('Authorize for one day'), trello_auth_url($params + array('expiration' => '1day'))),
      l(t('Authorize for 30 days'), trello_auth_url($params + array('expiration' => '30days'))),
      l(t('Authorize forever'), trello_auth_url($params + array('expiration' => 'never'))),
    )
  ) . '</p>';

  return $page;
}

/**
 * Get a Drupal trello user.
 */
function _trello_user_get_user(array $condition) {
  $result = db_select('trello_user', 't')
    ->fields('t')
    ->condition('token', $condition['token'])
    ->execute()
    ->fetchAssoc();
  if (!empty($result)) {
    $result['user'] = user_load($result['uid']);
  }

  return $result;
}

/**
 * Create a Drupal user for the trello user.
 */
function _trello_user_create_user($token) {
  // Get Trello username.
  $t = new Trello();
  $t->get('/tokens/' . $token . '/member');
  $trello_user = $t->result['data'][0];
  if (empty($trello_user)) {
    drupal_set_message(t('Error: Could not find trello username, user not created.'), 'warning');
    return FALSE;
  }

  // Check for exiting username.
  $account = user_load_by_name($trello_user->username);

  // Create Drupal user if needed.
  if (empty($account)) {
    $new_user = array(
      'name' => $trello_user->username,
      'pass' => user_password(),
      'status' => 1,
    );
    $account = user_save(NULL, $new_user);
  }

  // Add trello token.
  $tuid = db_insert('trello_user')
    ->fields(array(
      'token' => $token,
      'uid' => $account->uid,
      'username' => $trello_user->username,
      'scope' => 'TODO',
      'expiration' => 'TODO',
      'created' => time(),
    ))
    ->execute();

  if (!empty($new_user)) {
    watchdog('trello_user',
      'User %u created from trello account, with token id %t.',
      array('%u' => $account->name, '%t' => $tuid));
  }

  return $account;
}

/**
 * Log in the trello user into Drupal.
 */
function _trello_user_login_user($t_user) {
  global $user;
  $user = $t_user['user'];
  $edit = array(
    'name' => $user->name,
    'pass' => $user->pass,
  );
  user_login_finalize($edit);

  drupal_set_message(t('You have been logged in via Trello. <a href="@link">Please set a password on your account.</a>',
    array('@link' => '/user/' . $user->uid . '/edit')));

}
