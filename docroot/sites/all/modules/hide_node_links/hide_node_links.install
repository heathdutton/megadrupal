<?php

/**
 * @file
 * Install file of the hide_node_links module
 *
 * @author Tom Kirkpatrick (mrfelton), www.systemseed.com
 */

/**
 * Implements hook_schema().
 */
function hide_node_links_schema() {
  $schema['hide_node_links'] = array(
    'description' => 'The base table for hide_node_links links.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key with type; a unique id for the item.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'type' => array(
        'description' => 'Primary key with id; the type of item (e.g. node, user, etc.).',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'subtype' => array(
        'description' => 'A sub-type identifier for the link (node type, menu name, term VID, etc.).',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'An integer that represents if the item is included in the sitemap.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'status_override' => array(
        'description' => 'A boolean that if TRUE means that the status field has been overridden from its default value.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id', 'type'),
    'indexes' => array(
      'type_subtype' => array('type', 'subtype'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function hide_node_links_uninstall() {
  drupal_load('module', 'node');
  drupal_load('module', 'hide_node_links');
  $node_types = array_keys(node_type_get_names());
  foreach ($node_types as $node_type) {
    hide_node_links_link_bundle_delete('node', $node_type);
  }
}

/**
 * Update database to Drupal 7 schema
 */
function hide_node_links_update_7000() {
  $spec = array(
    'id' => array(
      'description' => 'Primary key with type; a unique id for the item.',
      'type' => 'int',
      'not null' => TRUE,
      'unsigned' => TRUE,
      'default' => 0,
    ),
    'type' => array(
      'description' => 'Primary key with id; the type of item (e.g. node, user, etc.).',
      'type' => 'varchar',
      'length' => 32,
      'not null' => TRUE,
      'default' => '',
    ),
    'subtype' => array(
      'description' => 'A sub-type identifier for the link (node type, menu name, term VID, etc.).',
      'type' => 'varchar',
      'length' => 128,
      'not null' => TRUE,
      'default' => '',
    ),
    'status' => array(
      'description' => 'An integer that represents if the item is included in the sitemap.',
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 1,
    ),
    'status_override' => array(
      'description' => 'A boolean that if TRUE means that the status field has been overridden from its default value.',
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 0,
    ),
  );

  // Clean up duplicate entries from unused revision support.
  $query = db_select('hide_node_links', 'nl');
  $query->fields('nl');
  $query->orderBy('vid', 'DESC');
  $result = $query->execute();
  $nids = array();
  foreach ($result as $row) {
    if (isset($nids[$row->nid])) {
      $num_deleted = db_delete('hide_node_links')
        ->condition(db_and()->condition('nid', $row->nid)->condition('vid', $row->vid))
        ->execute();
        continue;
    }
    $nids[$row->nid] = $row;
  }
  
  db_drop_primary_key('hide_node_links', 'nid');
  db_drop_field('hide_node_links', 'vid');

  db_change_field('hide_node_links', 'nid', 'id', $spec['id']);
  db_change_field('hide_node_links', 'hide_node_links', 'status', $spec['status']);

  db_add_field('hide_node_links', 'type', $spec['type']);
  db_add_field('hide_node_links', 'subtype', $spec['subtype']);
  db_add_field('hide_node_links', 'status_override', $spec['status_override']);

  db_add_primary_key('hide_node_links', array('id', 'type'));
  db_add_index('hide_node_links', 'type_subtype', array('type', 'subtype'));

  // Find out the node type of all entries and add this data to the new table.
  $query = db_select('hide_node_links', 'nl');
  $query->join('node', 'n', 'n.nid = nl.id');
  $query->addField('nl', 'id');
  $query->addField('n', 'type');
  $result = $query->execute();
  foreach ($result as $row) {
    db_update('hide_node_links')
        ->fields(array('type' => 'node', 'subtype' => $row->type, 'status_override' => 1))
        ->condition('id', $row->id)
        ->execute();
  }
}