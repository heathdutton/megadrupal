<?php
/**
 * @file
 * Theme filter module file.
 */

/**
 * Implements hook_filter_info().
 *
 * Adds the Theme filter to the text format options.
 */
function theme_filter_filter_info() {
  $filters['theme_filter'] = array(
    'title' => t('Replace Theme Path'),
    'description' => t('Use it like [theme:THEME_NAME] to replace it as your theme path'),
    'process callback' => '_theme_filter_filter_tokens',
    'tips callback' => '_theme_filter_filter_tips',
    'cache' => FALSE,
  );

  return $filters;
}

/**
 * Filter process callback for the Theme path to replace.
 */
function _theme_filter_filter_tokens($text, $filter, $format, $langcode, $cache, $cache_id) {

  if (strpos($text, '[theme:') !== FALSE) {
    preg_match_all('/\[theme:(?P<themename>\w+)\]/', $text, $matches);

    $trans = array();
    if (!empty($matches)) {
      foreach ($matches[0] as $key => $match) {
        if (empty($matches['absolute'])) {
          $trans[$match] = $GLOBALS['base_path'] . drupal_get_path('theme', $matches['themename'][$key]);
        }
      }
    }

    preg_match_all('/\[theme:(?P<themename>\w+):(?P<absolute>\w+)\]/', $text, $matches);
    if (!empty($matches)) {
      foreach ($matches[0] as $key => $match) {
        if (!empty($matches['absolute'])) {
          $trans[$match] = file_create_url(drupal_get_path('theme', $matches['themename'][$key]));
        }
      }
    }

    $text = strtr($text, $trans);
  }

  if (strpos($text, '[path-to-theme]') !== FALSE) {
    preg_match_all('/\[path-to-theme]/', $text, $matches);

    $trans = array();
    if (!empty($matches)) {
      foreach ($matches[0] as $key => $match) {
        if (empty($matches['absolute'])) {
          $trans[$match] = $GLOBALS['base_path'] . path_to_theme();
        }
      }
    }

    preg_match_all('/\[path-to-theme:(?P<absolute>\w+)\]/', $text, $matches);
    if (!empty($matches)) {
      foreach ($matches[0] as $key => $match) {
        if (!empty($matches['absolute'])) {
          $trans[$match] = file_create_url(path_to_theme());
        }
      }
    }

    $text = strtr($text, $trans);
  }

  return $text;
}

/**
 * Filter tip callback for the Theme input filter.
 */
function _theme_filter_filter_tips($filter, $format, $long) {
  return t('Available tokens are [theme:THEME_NAME], [theme:THEME_NAME:absolute],
    [path-to-theme], [path-to-theme:absolute] which converts path as ( [theme:bartik] => /themes/bartik,
    [theme:bartik:absolute] => http://sitename.com/themes/bartik, [path-to-theme] => /themes/bartik,
    [path-to-theme:absolute] => http://sitename.com/themes/bartik ) respectivly');
}
