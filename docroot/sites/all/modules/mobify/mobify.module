<?php
	
/*  mobify - Version 0.91
*   ----------------------------------------------------------
*   Author: Peter McLachlan  (peter@mobify.me)
*   
*  Changelog:
*  - Version:  0.91 - generated Tue Apr 28 14:45:34 2009, fix namespace issue
*  - Version:  0.9 - generated Tue Apr 28 14:45:34 2009, first pre-release
*
*/

/*  
    Derived from work by Robin Jewsbury and Mike Rowehl
    Copyright 2009 (email : admin@mobify.me)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

/*
    plugin based on: Mobilize by Mippin Wordpress Plugin.  Copyright for mippin components : 
	Copyright 2008 (email : info@Mippin.com)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

define(MOBIFY_REDIRECT_DEFAULT, '##########');
define(MOBIFY_PARAM_NAME,'mobify');
define(MOBIFY_COOKIE_NAME,'mobify');
define(MOBIFY_COOKIE_EXPIRE,time() + 60 * 60 * 24 * 1);
define(LOGFILENAME,'/tmp/mobify_drupal.log');
define(DEBUG, 0);

function mobify_is_mobile_device() { 
	$isMobile = false;

	$op = strtolower($_SERVER['HTTP_X_OPERAMINI_PHONE']);
	$no = strtolower($_SERVER['HTTP_X_MOBILE_GATEWAY']);
	$ua = strtolower($_SERVER['HTTP_USER_AGENT']);
	$ac = strtolower($_SERVER['HTTP_ACCEPT']);
	$ip = $_SERVER['REMOTE_ADDR'];

	$isMobile = strpos($ac, 'application/vnd.wap.xhtml+xml') !== false
        || $op != ''
        || $no != '' 
		|| strpos($ua, 'alcatel') !== false 
		|| strpos($ua, 'audiovox') !== false 
		|| strpos($ua, 'au-mic') !== false 
		|| strpos($ua, 'avantgo') !== false 
		|| strpos($ua, 'bolt') !== false 
		|| strpos($ua, 'blackberry') !== false 
		|| strpos($ua, 'blazer') !== false 
		|| strpos($ua, 'cldc-') !== false 
		|| strpos($ua, 'danger') !== false 
		|| strpos($ua, 'dopod') !== false 
		|| strpos($ua, 'epoc') !== false 
		|| strpos($ua, 'ericsson') !== false 
		|| strpos($ua, 'Google Wireless Transcoder') !== false 
		|| strpos($ua, 'htc') !== false 
		|| strpos($ua, 'huawei') !== false 
		|| strpos($ua, 'iemobile') !== false 
		|| strpos($ua, 'ipaq') !== false 
		|| strpos($ua, 'iphone') !== false 
		|| strpos($ua, 'ipod') !== false 
		|| strpos($ua, 'j2me') !== false 
		|| strpos($ua, 'lg') !== false 
		|| strpos($ua, 'midp') !== false 
		|| strpos($ua, 'mobile') !== false 
		|| strpos($ua, 'mot') !== false 
		|| strpos($ua, 'moto') !== false 
		|| strpos($ua, 'motorola') !== false 
		|| strpos($ua, 'nec-') !== false 
		|| strpos($ua, 'netfront') !== false 
		|| strpos($ua, 'netfront') !== false 
		|| strpos($ua, 'nitro') !== false 
		|| strpos($ua, 'nokia') !== false 
		|| strpos($ua, 'novarra-vision') !== false 
		|| strpos($ua, 'opera mini') !== false 
		|| strpos($ua, 'palm') !== false 
		|| strpos($ua, 'palmsource') !== false 
		|| strpos($ua, 'panasonic') !== false 
		|| strpos($ua, 'philips') !== false 
		|| strpos($ua, 'pocketpc') !== false 
		|| strpos($ua, 'portalmmm') !== false 
		|| strpos($ua, 'rover') !== false 
		|| strpos($ua, 'sagem') !== false 
		|| strpos($ua, 'samsung') !== false 
		|| strpos($ua, 'sanyo') !== false 
		|| strpos($ua, 'sec') !== false 
		|| strpos($ua, 'series60') !== false 
		|| strpos($ua, 'sharp') !== false 
		|| strpos($ua, 'sie-') !== false 
		|| strpos($ua, 'smartphone') !== false 
		|| strpos($ua, 'sony') !== false 
		|| strpos($ua, 'symbian') !== false 
		|| strpos($ua, 't-mobile') !== false 
		|| strpos($ua, 'untrusted') !== false 
		|| strpos($ua, 'up.browser') !== false 
		|| strpos($ua, 'up.link') !== false 
		|| strpos($ua, 'vodafone/') !== false 
		|| strpos($ua, 'wap1.') !== false 
		|| strpos($ua, 'wap2.') !== false 
		|| strpos($ua, 'windows ce') !== false;

	if (strpos($ua, 'Intel Mac OS X') !== false
		|| strpos($ua, 'PPC Mac OS X') !== false
        || strpos($ua, 'Mac_powerPC') !== false
        || strpos($ua, 'SunOS') !== false
        || strpos($ua, 'Windows NT') !== false
        || strpos($ua, 'Windows 98') !== false
        || strpos($ua, 'WinNT') !== false )
			$isMobile = false;    
    
    mobify_log_to_file('ismobile value is: ' . $isMobile);
    return $isMobile;
}


function mobify_url() {
    # strip out mobify_param_name
    $url = 'http://' . variable_get('mobify_redirect_base', MOBIFY_REDIRECT_DEFAULT) . $_SERVER['REQUEST_URI'];
    $url = str_replace(MOBIFY_PARAM_NAME . '=1', '', $url); 
    $url = str_replace(MOBIFY_PARAM_NAME . '=0', '', $url);
    return $url;
}


function mobify_log_to_file($msg)
{ 
    if (DEBUG < 1) {
        return;
    }
    
	$fd = fopen(LOGFILENAME, "a");	
	fwrite($fd, $msg . "\n");
	fclose($fd);
}


function mobify_cookie_value() { 
    $result = 0;
    if (isset($_COOKIE[MOBIFY_COOKIE_NAME])) {
        if ($_COOKIE[MOBIFY_COOKIE_NAME] == '1') {
            $result = 1;
        } else { 
            $result = 0;
        }
    } else { 
        $result = -1;
    }
    mobify_log_to_file('cookie value is: ' . $result);
    return $result;
}

function mobify_param_value() {
    $result = 0;
    if (isset($_GET[MOBIFY_PARAM_NAME])) {
        if ($_GET[MOBIFY_PARAM_NAME] == '1') { 
            $result = 1;
        } else { 
            $result = 0;
        }
    } else { 
        $result = -1;
    }
    mobify_log_to_file('param value is: ' . $result);
    return $result;
}

function mobify_redirect() {
    mobify_log_to_file('begin mobify_redirect()');
    $groups = null;
    preg_match("/(?P<domain>[\w+]+\.[\w]+)$/", variable_get('mobify_redirect_base', MOBIFY_REDIRECT_DEFAULT), $groups);    
    $cookie_domain = "." . $groups[0];

    mobify_log_to_file('cookie domain is: ' . $cookie_domain);
    
    // get parameter has highest priority
    $mobify_param_value = mobify_param_value();
    if ($mobify_param_value == 1) { 
        mobify_go_mobile();
    } elseif ($mobify_param_value == 0) { 
        mobify_go_desktop();
        return;
    } 
    // mobify_param is not set, check out cookie setting
    $mobify_cookie_value = mobify_cookie_value();
    if ($mobify_cookie_value == 1 ) { 
        mobify_go_mobile();
    } elseif ($mobify_cookie_value == 0) { 
        mobify_go_desktop();
        return;
    }
    
    mobify_log_to_file('no user specified choice, using user-agent autodetection');
    // nothing is set, do autodetection
    if (mobify_is_mobile_device()) { 
        mobify_go_mobile();
    } 
    
    mobify_go_desktop();
}

function mobify_get_cookie_domain() { 
    $groups = null;
    preg_match("/(?P<domain>[\w+]+\.[\w]+)$/", variable_get('mobify_redirect_base', MOBIFY_REDIRECT_DEFAULT), $groups);    
    return "." . $groups[0];
}

function mobify_go_mobile() { 
    $cookie_domain = mobify_get_cookie_domain();
    
    // set cookie, then redirect
    mobify_log_to_file('set mobify cookie for domain' . $cookie_domain . " cookie name: " . MOBIFY_COOKIE_NAME . ' to value 1, going mobile');
    setcookie(MOBIFY_COOKIE_NAME, '1', MOBIFY_COOKIE_EXPIRE, '/', $cookie_domain);
    drupal_goto(mobify_url());
}

function mobify_go_desktop() { 
    $cookie_domain = mobify_get_cookie_domain();    
    
    mobify_log_to_file('set mobify cookie for domain ' . $cookie_domain . " cookie name: " . MOBIFY_COOKIE_NAME . ' to value 0, sending desktop version');
    setcookie(MOBIFY_COOKIE_NAME, '0', MOBIFY_COOKIE_EXPIRE, '/', $cookie_domain);
}


function mobify_help($path, $arg) {
    switch ($path) 
    {
        case 'admin/help#mobify':
            $output .= '<p>'. t('Help for mobify.me plugin') .'</p>';
            $output .= '<p>'. t('This module provides interaction between a Mobify mobile view and your drupal site.  For this plugin to work, you need an account on http://mobify.me');
    }
  return $output;
}

function mobify_configuration_form() {
    $form['mobify_settings'] = array(
       '#type' => 'fieldset',
       '#title' => t('Mobify.me settings'),
       '#collapsible' => FALSE,
       '#collapsed' => FALSE,
     );    
    
  $form['mobify_settings']['mobify_redirect_base'] = array(
    '#type' => 'textfield',
    '#title' => t('Mobify CNAME' ),
    '#description' => t('Enter the CNAME configured to point to your mobify.me account, example: m.yoursite.com'),
    '#default_value' => variable_get('mobify_redirect_base', MOBIFY_REDIRECT_DEFAULT),
  );
  return system_settings_form($form);
}


function mobify_install() { 
    mobify_log_to_file('install completed');
    variable_set('mobify_redirect_base', MOBIFY_REDIRECT_DEFAULT);
}

function mobify_menu() {
  $items['admin/settings/mobify'] = array(
    'title' => t('Mobify'),
    'description' => t('Configure your http://mobify.me CNAME'),
    'access arguments' => array('configure Mobify'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mobify_configuration_form'),
    'type' => MENU_NORMAL_ITEM,
  );  
  return $items;
}

function mobify_tools_perm() {
  return array('configure mobify');
}

function mobify_init() { 
    mobify_log_to_file('begin redirect');
    mobify_redirect();
    mobify_log_to_file('end redirect');
}