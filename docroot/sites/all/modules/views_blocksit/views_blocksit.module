<?php

/**
 * @file
 * Integrate the Blocksit library into views as a style plugin.
 */

define('VIEWS_BLOCKSIT_VERSION', '1.0');

/**
 * Implements hook_views_api().
 */
function views_blocksit_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Lists the file candidates for the blocksit library.
 *
 * @return array
 *   Returns an array of file candidates in preference order.
 */
function views_blocksit_get_file_candidates() {
  $libraries = libraries_get_libraries();
  if (isset($libraries['blocksit'])) {
    $library_path = libraries_get_path('blocksit');
    // In order of preference.
    $data = array(
      $library_path . '/blocksit.min.js',
      $library_path . '/blocksit.js',
    );
  }
  else {
    $data = array();
  }

  drupal_alter('views_blocksit_file_candidates', $data);
  return $data;
}

/**
 * Determine which file candidate to use.
 *
 * @param array $javascript_file_candidates
 *  An array of file candidates.
 *
 * @return string
 *  The file candidate or a blank string.
 */
function views_blocksit_determine_candidate($javascript_file_candidates) {
  $blocksit_library_file = FALSE;

  if (!empty($javascript_file_candidates)) {
    foreach ($javascript_file_candidates as $candidate) {
      if (file_exists($candidate)) {
        $blocksit_library_file = $candidate;
        break;
      }
    }
  }

  return ($blocksit_library_file) ? $blocksit_library_file : '';
}

/**
 * Implements hook_library().
 */
function views_blocksit_library() {
  $module_path = drupal_get_path('module', 'views_blocksit');
  $libraries = array();
  $javascript_file_candidates = views_blocksit_get_file_candidates();

  $blocksit_library_file = views_blocksit_determine_candidate($javascript_file_candidates);

  if (!empty($blocksit_library_file)) {
    $libraries['blocksit'] = array(
      'title' => t('Blocksit'),
      'website' => 'http://www.inwebson.com/jquery/blocksit-js-dynamic-grid-layout-jquery-plugin/',
      'version' => VIEWS_BLOCKSIT_VERSION,
      'js' => array(
        $blocksit_library_file => array(),
        $module_path . '/theme/views-blocksit.js' => array(),
      ),
      'css' => array(
        $module_path . '/theme/views-blocksit.css' => array(),
      ),
    );
  }

  return $libraries;
}

/**
 * Implements hook_theme().
 */
function views_blocksit_theme($existing, $type, $theme, $path) {
  return array(
    'views_blocksit_grid' => array(
      'path' => $path . '/theme',
      'template' => 'views-blocksit-grid',
      'variables' => array(
        'view' => NULL,
        'options' => NULL,
        'rows' => NULL,
        'title' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_requirements().
 */
function views_blocksit_requirements($phase) {
  $requirements = array();

  if ($phase === 'runtime') {
    $requirements['views_blocksit'] = array(
      'title' => t('Blocksit JS Library'),
    );

    $javascript_file_candidates = views_blocksit_get_file_candidates();
    $blocksit_library_file = views_blocksit_determine_candidate($javascript_file_candidates);

    if (!empty($blocksit_library_file)) {
      $requirements['views_blocksit']['value'] = t('Installed');
      $requirements['views_blocksit']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['views_blocksit']['value'] = t('Not Installed');
      $requirements['views_blocksit']['severity'] = REQUIREMENT_ERROR;
      $requirements['views_blocksit']['description'] = t('Please install the Blocksit JS library %url.', array('%url' => 'http://www.inwebson.com/jquery/blocksit-js-dynamic-grid-layout-jquery-plugin/'));
    }
  }

  return $requirements;
}
