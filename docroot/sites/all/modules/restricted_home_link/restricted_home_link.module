<?php

/**
 * Implementation of hook_permission.
 */
function restricted_home_link_permission() {
  $perm_name = 'create/edit/delete/move menu items pointing at front page';
  $perms[$perm_name] = array(
    'title' => $perm_name
  );
  return $perms;
}


/**
 * Implementation of hook_form_FORM_ID_alter
 *
 * Remove tooltip suggesting that the user enter <front>.
 * Add validation handler to handle restrictions on <front> path.
 */
function restricted_home_link_form_menu_edit_item_alter(&$form, &$form_state, $form_id) {
  $form['link_path']['#description'] = t('The path for this menu link. This can be an internal Drupal path such as %add-node or an external URL such as %drupal.', array('%add-node' => 'node/add', '%drupal' => 'http://drupal.org'));
  $form['#validate'][] = '_restricted_home_link_menu_edit_item_validate';
}

/**
 * Validation handler for menu link
 *
 * If path is <front> and user is not allowed, set form error
 */
function _restricted_home_link_menu_edit_item_validate($form, &$form_state) {
  if (($form_state['values']['link_path'] == '<front>') && !user_access('create/edit/delete/move menu items pointing at front page')) {
    form_set_error('link_path', t('You are not allowed to use %front as a path in menu links.', array('%front' => '<front>')));
  }
}


/**
 * Implementation of hook_form_FORM_ID_alter.
 *
 * Restrict operations on menu link overview form.
 */
function restricted_home_link_form_menu_overview_form_alter(&$form, &$form_state) {
  // If current user is not allowed to move/edit/delete frontpage links.
  if (!user_access('create/edit/delete/move menu items pointing at front page')) {
    // Add js to disallow moving <front> menu items
    drupal_add_js(drupal_get_path('module', 'restricted_home_link') . '/js/restricted_home_link.js');
    // For each <front> menu item
    foreach (element_children($form) as $element) {
      if (isset($form[$element]['mlid']) && ($form[$element]['#item']['link_path'] == '<front>')) {
        // Remove edit / delete links
        $form[$element]['operations'] = array();
        // Add css class so the js will not allow this item to move
        $form[$element]['#attributes']['class'][] = 'front-menu-link';
        // Add a tip so the user knows the item cannot be moved
        $form[$element]['title']['#markup'] .= ' ' . t('(cannot be moved)');
      }
    }
  }
}


/**
 * Implementation of hook_menu_alter
 *
 * Restrict access to menu item edit & delete pages.
 */
function restricted_home_link_menu_alter(&$items) {
  $items['admin/structure/menu/item/%menu_link/edit']['access callback']    = '_restricted_home_link_can_move_menu_link';
  $items['admin/structure/menu/item/%menu_link/edit']['access arguments']   = array(4);
  $items['admin/structure/menu/item/%menu_link/delete']['access callback']  = '_restricted_home_link_can_move_menu_link';
  $items['admin/structure/menu/item/%menu_link/delete']['access arguments'] = array(4);
}

/**
 * Check if user is allowed to move a menu item.
 */
function _restricted_home_link_can_move_menu_link($link) {
  return ($link['link_path'] != '<front>') || user_access('create/edit/delete/move menu items pointing at front page');
}

