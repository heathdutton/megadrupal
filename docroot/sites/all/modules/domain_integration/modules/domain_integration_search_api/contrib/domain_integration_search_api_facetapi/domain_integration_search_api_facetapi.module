<?php
/**
 * @file
 * Domain Integration Search API FacetAPI.
 */

/**
 * Implements hook_facetapi_filters().
 */
function domain_integration_search_api_facetapi_facetapi_filters() {
  $facetapi_filters = array(
    'exclude_domains' => array(
      'handler' => array(
        'label' => t('Exclude domains the current user does not have access to'),
        'class' => 'FacetapiFilterExcludeDomains',
      ),
    ),
  );

  return $facetapi_filters;
}

/**
 * Implements hook_form_alter().
 *
 * Add 'exclude_domain' filter to all domain facets when saving the facets
 * default form.
 */
function domain_integration_search_api_facetapi_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'facetapi_realm_settings_form') {
    // Add form submit handler.
    $form['#submit'][] = 'domain_integration_search_api_facetapi_facetapi_realm_settings_form_submit';
  }
}

/**
 * Form submission handler for facetapi_realm_settings_form().
 *
 * Get all 'domain' facets.
 * Save them with the 'exclude_filter' enabled.
 */
function domain_integration_search_api_facetapi_facetapi_realm_settings_form_submit($form, &$form_state) {

  // Get facets after form-submission.
  $facets = $form_state['values']['enabled_facets'];

  // Pulls variables for code readability.
  $adapter = $form['#facetapi']['adapter'];
  $realm = $form['#facetapi']['realm'];
  $facet_info = $form['#facetapi']['facet_info'];

  // Domain facets have a key that starts with 'domain_'.
  // Enabled facets have a value, disabled facets don't.
  foreach ($facets as $facet_key => $enabled) {
    if ($enabled && substr($facet_key, 0, 7) == 'domain_') {

      // Get settings from this specific facet.
      $facet = $facet_info[$facet_key];
      $settings = $adapter->getFacet($facet)->getSettings($realm);

      // Enable 'exclude_domain' filter.
      $settings->settings['filters']['exclude_domains']['status'] = TRUE;

      // Saves the configuration options.
      if (FALSE !== ctools_export_crud_save('facetapi', $settings)) {
        $message = "Enabled 'exclude_domains' filter for '" . $settings->facet . "' facet.";
        drupal_set_message(t($message));
      }
      else {
        drupal_set_message(t('Error saving configuration options.'), 'error');
      }
    }
  }
}
