<?php

/**
 * @file
 * Install, update and uninstall functions for the Server Monitor module.
 */

/**
 * Implements hook_schema().
 */
function server_monitor_schema() {
  $schema['server_monitor'] = array(
    'description' => 'All servers that are being monitored by Server monitor module.',
    'fields' => array(
      'sid' => array(
        'description' => 'The server identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The server name. Always plain-text.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'address' => array(
        'description' => 'The server IP address or URI to check. Always plain-text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '127.0.0.1',
      ),
      'status' => array(
        'description' => 'The last recorded server status.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => -1,
      ),
      'timestamp' => array(
        'description' => 'The time when the status was last recorded.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'method' => array(
        'description' => 'The method of testing to use. One of http, curl, ping, socket.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => 'http',
      ),
      'weight' => array(
        'description' => 'The server weight.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'server_description' => array(
        'description' => 'A brief server description.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ),
      'configuration' => array(
        'description' => 'Additional configurations, such as expected results, timeout, etc.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('sid'),
    'indexes' => array('sid_address' => array('sid', 'address')),
  );
  return $schema;
}

/**
 * Implements hook_enable().
 */
function server_monitor_enable() {

}

/**
 * Implements hook_disable().
 */
function server_monitor_disable() {

}

/**
 * Implements hook_uninstall().
 */
function server_monitor_uninstall() {
  variable_del('server_monitor_cron');
  variable_del('server_monitor_last_run');
  variable_del('server_monitor_use_json_block');
}
