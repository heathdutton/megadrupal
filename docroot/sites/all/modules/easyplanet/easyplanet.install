<?php

/**
 * @file
 * Install processes for the planet module
 */


function easyplanet_migrate_settings() {
  $names = array('feed_items', 'block_header', 'block_feeds',
           'block_footer', 'user_max', 'user_add', 'user_edit');
  foreach ($names as $name) {
    if (variable_get('udplanet_' . $name)) {
      variable_set('easyplanet_' . $name, variable_get('udplanet_' . $name));
      variable_del('udplanet_' . $name);
    }
  }
}

function easyplanet_migrate_db() {
  try {
    $rows = db_select('udplanet_feeds', 'uf')->fields('uf')->execute();
    foreach ($rows as $row) {
      db_insert('easyplanet_feeds')
        ->fields(array('lid' => $row->lid,
            'fid' => $row->fid,
            'uid' => $row->uid,
            'disabled' => $row->disabled,
            'frozen' => $row->frozen))
        ->execute();
      db_delete('udplanet_feeds')->condition('lid', $row->lid)->execute();
    }

  } catch (Exception $e) {
    watchdog_exception('easyplanet_migrated_db', $e);
  }
}

/**
 * Implementation of hook_install().
 */
function easyplanet_install() {
  // on install, migrate from udplanet if the settings exist
  easyplanet_migrate_settings();
  easyplanet_migrate_db();
}

/**
 * Implementation of hook_uninstall().
 *
 * This will automatically uninstall the database tables for the planet module for MySQL.
 *
 *
 */
function easyplanet_uninstall() {
  // Delete variables
  variable_del('udplanet_feed_items');
  variable_del('udplanet_block_header');
  variable_del('udplanet_block_feeds');
  variable_del('udplanet_block_footer');
  variable_del('udplanet_user_max');
  variable_del('udplanet_user_add');
  variable_del('udplanet_user_edit');
}

/**
 * Implementation of hook_schema().
 */

function easyplanet_schema() {
  $schema['easyplanet_feeds'] = array(
    'description' => t('Table for UD Planet.'),
    'fields' => array(
      'lid' => array(
        'description' => t('Link ID'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => t('User ID the feed belongs to'),
        'type' => 'int',
        'unsigned' => 1,
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => t('Feed ID within aggregator module'),
        'type' => 'varchar',
        'length' => 80,
        'not null' => TRUE,
      ),
      'disabled' => array(
        'description' => t('Whether or not the feed is enabled'),
        'type' => 'int',
        'length' => 1,
        'not null' => FALSE,
      ),
      'frozen' => array(
        'description' => t('Same as enabled except only the administrator can control this'),
        'type' => 'int',
        'length' => 1,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('lid'),
  );

  return $schema;
}
