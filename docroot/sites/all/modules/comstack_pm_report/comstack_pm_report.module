<?php

/**
 * @file
 * comstack_pm_report.module
 */

include_once __DIR__ . '/includes/comstack_pm_report.entity.inc';

/**
 * Implements hook_permission().
 */
function comstack_pm_report_permission() {
  $permissions = array(
    'view comstack_pm_report entries' => array(
      'title' => t('View conversation reports'),
      'description' => t('Allows users to view conversation reports and the contents of the reported conversation.'),
      'restrict access' => TRUE,
    ),
    'view own comstack_pm_report entries' => array(
      'title' => t('View own reports'),
      'description' => t('Allows users to view their own reports.'),
    ),
    'create comstack_pm_report entries' => array(
      'title' => t('Create conversation reports'),
      'description' => t('Create new reports about conversations citing reasons why.'),
    ),
    'update own comstack_pm_report entries' => array(
      'title' => t('Update own reports'),
      'description' => t('Allows a user to update and make changes to their own report entries.'),
    ),
    'update comstack_pm_report entries' => array(
      'title' => t('Update any report'),
      'description' => t('Allows a user to update any report entry.'),
      'restrict access' => TRUE,
    ),
    'delete own comstack_pm_report entries' => array(
      'title' => t('Delete own reports'),
      'description' => t('Allows users to delete their own reports.'),
    ),
    'delete comstack_pm_report entries' => array(
      'title' => t('Delete any report'),
      'description' => t('Allows users to delete any report.'),
      'restrict access' => TRUE,
    ),
  );

  return $permissions;
}

/**
 * Implements hook_menu().
 */
function comstack_pm_report_menu() {
  $items = array();

  $items['admin/ajax/cs-pm-r/dismiss/%comstack_pm_report/%/%ctools_js'] = array(
    'title' => 'Conversation dismiss report',
    'page callback' => 'comstack_pm_report_dismiss_report',
    'page arguments' => array(4, 5, 6),
    'access arguments' => array('view comstack_pm_report entries'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/ajax/cs-pm-r/view-conversation/%comstack_pm_report/%/%ctools_js'] = array(
    'title' => 'View conversation',
    'page callback' => 'comstack_pm_report_view_conversation',
    'page arguments' => array(4, 5, 6),
    'access arguments' => array('view comstack_pm_report entries'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_views_api().
 */
function comstack_pm_report_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'comstack_pm_report'),
  );
}

/**
 * Page callback to dismiss a report.
 */
function comstack_pm_report_dismiss_report($report, $token, $js = NULL) {
  global $user;
  $output = array();

  if (empty($token) || $report && $token && !drupal_valid_token($token, $report->cspmr_id . $user->uid)) {
    $output[] = $js ? ajax_command_alert(t('Invalid security token.')) : t('Invalid security token.');
  }
  // Dismiss it.
  elseif ($report) {
    db_update('comstack_pm_report')
      ->fields(array('dismissed' => 1))
      ->condition('cspmr_id', $report->cspmr_id)
      ->execute();

    $output[] = $js ? ajax_command_replace('#cs-pm-report-dismiss-' . $report->cspmr_id, t('Report dismissed')) : t('Report dismissed');
  }
  // Failed to load.
  else {
    $output[] = $js ? ajax_command_alert(t("Sorry, couldn't find that report.")) : t("Sorry, couldn't find that report.");
  }

  // Output.
  if ($js) {
    print ajax_render($output);

    global $devel_shutdown;
    $devel_shutdown = FALSE;

    drupal_exit();
  }
  else {
    return implode('', $output);
  }
}

/**
 * Page callback to view a conversation via reporting.
 */
function comstack_pm_report_view_conversation($report, $token, $js = NULL) {
  global $user;
  $output = NULL;

  if (empty($token) || $report && $token && !drupal_valid_token($token, $report->cspmr_id . $report->dismissed . $user->uid)) {
    return MENU_ACCESS_DENIED;
  }

  if (!$report) {
    return MENU_NOT_FOUND;
  }

  // Work it out.
  $wrapper = entity_metadata_wrapper('comstack_pm_report', $report);
  $ids = $wrapper->field_cs_pm_report_conversation->value(array('identifier' => TRUE));
  $conversation_id = is_array($ids) ? reset($ids) : $ids;

  if (!$report->dismissed) {
    $output = views_embed_view(variable_get('comstack_pm_report__view_conversation_name', 'cs_pm_report__view_conversation'), 'default', $conversation_id);
  }
  else {
    $output = t('The report for this conversation has been dismissed.');
  }

  if ($js) {
    ctools_include('ajax');
    ctools_include('modal');

    print ctools_modal_render(t('View conversation'), $output);

    global $devel_shutdown;
    $devel_shutdown = FALSE;

    drupal_exit();
  }
  else {
    return $output;
  }
}
