<?php

/**
 * @file
 * Installation and un-installation instructions for the PM report module.
 */

/**
 * Implements hook_install().
 */
function comstack_pm_report_install() {
  comstack_pm_report_install_entity_fields();
}

/**
 * Implements hook_uninstall().
 */
function comstack_pm_report_uninstall() {
  variable_del('comstack_pm_report__view_conversation_name');

  // Remove fields from the comstack_pm_report entity.
  $fields = array('field_cs_pm_report_conversation', 'field_cs_pm_report_additional', 'field_cs_pm_report_reason', 'field_cs_pm_messages');
  foreach ($fields as $field) {
    $instance = field_info_instance('comstack_pm_report', $field, 'comstack_pm_report');
    field_delete_instance($instance);
    field_delete_field($field);
  }
}

/**
 * Implements hook_schema().
 */
function comstack_pm_report_schema() {
  $schema = array();

  $schema['comstack_pm_report'] = array(
    'description' => 'The base table for reports.',
    'fields' => array(
      'cspmr_id' => array(
        'description' => 'The primary identifier for this report.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The ID of the user related to this record.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the report was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the report was last updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'dismissed' => array(
        'description' => 'Whether or not the report has been dismissed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'boolean' => TRUE,
      ),
    ),
    'indexes' => array(),
    'foreign keys' => array(),
    'primary key' => array('cspmr_id'),
  );

  return $schema;
}

/**
 * Deploy the fields required for reporting.
 */
function comstack_pm_report_install_entity_fields() {
  $field_bases['field_cs_pm_report_conversation'] = array(
    'field_name' => 'field_cs_pm_report_conversation',
    'type' => 'entityreference',
    'module' => 'entityreference',
    'cardinality' => 1,
    'entity_types' => array(),
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(),
      ),
      'target_type' => 'comstack_conversation',
    ),
    'foreign keys' => array(
      'comstack_conversation' => array(
        'columns' => array(
          'target_id' => 'conversation_id',
        ),
        'table' => 'comstack_conversation',
      ),
    ),
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 1,
    'translatable' => 0,
    'active' => 1,
    'deleted' => 0,
  );
  field_create_field($field_bases['field_cs_pm_report_conversation']);

  $field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_report_conversation'] = array(
    'bundle' => 'comstack_pm_report',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 5,
      ),
    ),
    'entity_type' => 'comstack_pm_report',
    'field_name' => 'field_cs_pm_report_conversation',
    'label' => 'Conversation',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 3,
    ),
  );
  field_create_instance($field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_report_conversation']);

  // Additional information longtext field.
  $field_bases['field_cs_pm_report_additional'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_cs_pm_report_additional',
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => 0,
    'module' => 'text',
    'settings' => array(),
    'translatable' => 0,
    'type' => 'text_long',
  );
  field_create_field($field_bases['field_cs_pm_report_additional']);

  $field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_report_additional'] = array(
    'bundle' => 'comstack_pm_report',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 2,
      ),
    ),
    'entity_type' => 'comstack_pm_report',
    'field_name' => 'field_cs_pm_report_additional',
    'label' => 'Additional information',
    'required' => 0,
    'settings' => array(
      'better_formats' => array(
        'allowed_formats' => array(
          'cs_pm' => 'cs_pm',
        ),
        'allowed_formats_toggle' => 0,
        'default_order_toggle' => 0,
        'default_order_wrapper' => array(
          'formats' => array(
            'cs_pm' => array(
              'weight' => 0,
            ),
          ),
        ),
      ),
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => 3,
    ),
  );
  field_create_instance($field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_report_additional']);

  // Report reason.
  $field_bases['field_cs_pm_report_reason'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_cs_pm_report_reason',
    'indexes' => array(
      'value' => array(
        0 => 'value',
      ),
    ),
    'locked' => 0,
    'module' => 'list',
    'settings' => array(
      'allowed_values' => array(
        'spam' => 'Spam or unsolicited advertising',
        'abusive' => 'Abusive, impersonation or harassment',
        'obscene' => 'Obscene, violent or profane content',
        'in-breach' => 'In breach of site terms and conditions',
        'other' => 'Other - please give details',
      ),
      'allowed_values_function' => '',
    ),
    'translatable' => 0,
    'type' => 'list_text',
  );
  field_create_field($field_bases['field_cs_pm_report_reason']);

  $field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_report_reason'] = array(
    'bundle' => 'comstack_pm_report',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'comstack_pm_report',
    'field_name' => 'field_cs_pm_report_reason',
    'label' => 'Reason',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 2,
    ),
  );
  field_create_instance($field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_report_reason']);

  $field_bases['field_cs_pm_messages'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_cs_pm_messages',
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(
          'cs_pm' => 'cs_pm',
        ),
      ),
      'target_type' => 'message',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );
  field_create_field($field_bases['field_cs_pm_messages']);

  $field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_messages'] = array(
    'bundle' => 'comstack_pm_report',
    'default_value' => NULL,
    'default_value_function' => '',
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'entityreference',
        'settings' => array(
          'link' => FALSE,
        ),
        'type' => 'entityreference_label',
        'weight' => 3,
      ),
    ),
    'entity_type' => 'comstack_pm_report',
    'field_name' => 'field_cs_pm_messages',
    'label' => 'Messages',
    'required' => 0,
    'settings' => array(
      'behaviors' => array(
        'prepopulate' => array(
          'status' => 0,
        ),
      ),
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 4,
    ),
  );
  field_create_instance($field_instances['comstack_pm_report-comstack_pm_report-field_cs_pm_messages']);
}

/* Update hooks. */

/**
 * Install the new report entity schema.
 */
function comstack_pm_report_update_7100() {
  if (!db_table_exists('comstack_pm_report')) {
    drupal_install_schema('comstack_pm_report');
    comstack_pm_report_install_entity_fields();
  }
}

/**
 * Add the dismissed field to the report entity.
 */
function comstack_pm_report_update_7101() {
  if (!db_field_exists('comstack_pm_report', 'dismissed')) {
    $schema = drupal_get_schema('comstack_pm_report');
    db_add_field('comstack_pm_report', 'dismissed', $schema['fields']['dismissed']);
  }
}
