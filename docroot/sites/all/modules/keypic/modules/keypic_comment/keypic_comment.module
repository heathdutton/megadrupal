<?php

/**
 * @file keypic_comment.module
 */

/**
 * Implements hook_form_alter().
 *
 * Make sure the comment form is always protected.
 */
function keypic_comment_form_alter(&$form, $form_state, $form_id) {
  // Captcha is already included
  if (isset($form['captcha'])) {
    return;
  }

  // Detect comment form
  $is_comment = isset($form['#form-id']) && strpos($form['#form-id'], 'comment-form') === 0;
  if (!$is_comment) {
    return;
  }

  $form['captcha'] = array(
    '#type' => 'captcha',
    '#captcha_type' => 'keypic/KeyPic',
    '#weight' => 100,
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function keypic_comment_form_comment_admin_overview_alter(&$form, $form_state) {
  $comment_ids = array_keys($form['comments']['#options']);

  foreach (keypic_load_entities_points('comment', $comment_ids) as $info) {
    $cid = $info->entity_id;
    $alter = TRUE;

    $items = array();
    $items['point'] = t('!number% of spam', array('!number' => $info->point));
    $items['point'] .= ' (' . keypic_get_status_info($info->point) . ')';
    if (!empty($info->form_id)) {
      $items['report'] = l(t('Report spam'), "keypic/report-spam/{$info->form_id}/{$info->token}");
    }

    $form['comments']['#options'][$cid]['keypic'] = theme('item_list', array('items' => $items));
  }

  /**
   * Avoid php warnings.
   */
  foreach ($comment_ids as $comment_id) {
    if (!isset($form['comments']['#options'][$cid]['keypic'])) {
      $form['comments']['#options'][$cid]['keypic'] = '';
    }
  }

  if (!empty($alter)) {
    $form['comments']['#header']['keypic']['data'] = t('KeyPic');
  }
}

/**
 * Implements keypic.module\hook_keypic_validate().
 */
function keypic_comment_keypic_validate($response = 0, $token = '', $form = array(), $form_state = array()) {
  static $keypic_spam_point = 0;
  static $keypic_spam_token = '';

  // Detect comment form
  if (!empty($form_state)) {
    $is_comment = $form_state['build_info']['base_form_id'] === 'comment_form';
    if (!$is_comment) {
      return;
    }
  }

  if (!empty($response)) {
    $keypic_spam_point = $response;
  }

  if (!empty($token)) {
    $keypic_spam_token = $token;
  }

  return array($keypic_spam_point, $keypic_spam_token);
}

/**
 * Implemens hook_comment_insert().
 */
function keypic_comment_comment_insert($comment) {
  list($keypic_spam_point, $keypic_spam_token) = keypic_comment_keypic_validate();

  if (!$keypic_spam_point || !$keypic_spam_token) {
    return;
  }

  $record = new stdClass();
  $record->entity_type = 'comment';
  $record->entity_id = $comment->cid;
  $record->point = $keypic_spam_point;
  $record->token = $keypic_spam_token;
  $record->timestamp = time();
  if ($keypic_form_id = variable_get('keypic_form_id', '')) {
    $record->form_id = $keypic_form_id;
  }
  drupal_write_record('keypic_log', $record);
}

/**
 * Implements hook_comment_view_alter()
 */
function keypic_comment_comment_view_alter(&$build) {
  if (user_access('report keypic')) {
    if ($logs = keypic_load_entities_points('comment', array($build['#comment']->cid))) {
      $log = reset($logs);

      $build['links']['comment']['#links']['keypic_comment_report'] = array(
        'title' => t('Report spam !number%', array('!number' => $log->point)),
        'href' => "keypic/report-spam/{$log->form_id}/{$log->token}",
      );
    }
  }
}

/**
 * Implements hook_comment_delete().
 */
function keypic_comment_comment_delete($comment) {
  db_delete('keypic_log')
    ->condition('entity_type', 'comment')
    ->condition('entity_id', $comment->cid)
    ->execute();
}
