<?php
/**
 * @file
 * Feeds Filemaker - A Feeds plugin that imports data from FileMaker to
 * Drupal.
 */

/**
 * Implements hook_feeds_plugins().
 */
function feeds_filemaker_feeds_plugins() {
  return array(
    'FeedsFileMakerFetcher' => array(
      'name' => t('FileMaker fetcher'),
      'description' => t('Retrieve data from FileMaker.'),
      'handler' => array(
        'parent' => 'FeedsFetcher',
        'class'  => 'FeedsFileMakerFetcher',
        'file' => 'FeedsFileMakerFetcher.inc',
        'path' => drupal_get_path('module', 'feeds_filemaker'),
      ),
    ),
    'FeedsFileMakerParser' => array(
      'name' => t('FileMaker parser'),
      'description' => t('Parse data from FileMaker.'),
      'handler' => array(
        'parent' => 'FeedsParser',
        'class'  => 'FeedsFileMakerParser',
        'file' => 'FeedsFileMakerParser.inc',
        'path' => drupal_get_path('module', 'feeds_filemaker'),
      ),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function feeds_filemaker_libraries_info() {
  $libraries['filemaker'] = array(
    'name' => 'FileMaker API for PHP',
    'vendor url' => 'http://www.filemaker.com',
    'download url' => 'http://fmdl.filemaker.com/MISC/PHPAPI/win/FM_API_for_PHP_Standalone.zip',
    'version callback' => 'feeds_filemaker_get_version',
    'files' => array(
      'php' => array(
        'FileMaker.php',
      ),
    ),
  );
  return $libraries;
}

/**
 * Detects the version of the Filmaker API and returns it.
 */
function feeds_filemaker_get_version() {
  $filemaker_library = libraries_load('filemaker');
  if ($filemaker_library['loaded']) {
    return $fm->getAPIVersion();
  }
  else {
    return t('Version not Found');
  }
}
