<?php

/**
 * @file
 * Implements "Contact Save Remind" functionality with drupal_set_message().
 */

/**
 * Implements hook_menu().
 */
function csremind_message_menu() {
  $items = array();

  $items['user/%user/reminder/%csremind/%'] = array(
    'title' => "Update reminder configuration",
    'page callback' => 'csremind_message_ajax_update_reminder_config',
    'page arguments' => array(1, 3, 4),
    'access callback' => 'csremind_message_ajax_access',
    'access arguments' => array(3),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Custom access callback for AJAX menu item.
 *
 * Only the user who owns the reminder is to be able to affect its config.
 *
 * @param array $reminder
 *   Array of reminder information whose status is to be updated.
 *
 * @return bool
 *   Returns TRUE if user should have access to URL, FALSE otherwise.
 */
function csremind_message_ajax_access($reminder) {
  global $user;

  return ($user->uid == $reminder['uid']);
}

/**
 * AJAX functionality callback.
 *
 * @param object $account
 *   Drupal user account object.
 * @param array $reminder
 *   Array representing a reminder.
 * @param string $action
 *   Action to take on a reminder, suppress or deactivate.
 * @param string $request_type
 *   Identifies if the request is via AJAX.
 *
 * @return array
 *   An array of Drupal AJAX framework commands.
 */
function csremind_message_ajax_update_reminder_config($account, $reminder, $action, $request_type) {
  if ($request_type == 'ajax') {
    $config = array();
    $commands = array();
    $message = '';

    if ($action == 'deactivate') {
      $config['active'] = 0;
      $commands[] = ajax_command_remove('.deactivate-link-wrapper');
      $commands[] = ajax_command_remove('.suppress-link-wrapper');
      $message = csremind_message_build_deactivated_message($reminder);
    }
    else {
      $config['suppress'] = 1;
      $commands[] = ajax_command_remove('.suppress-link-wrapper');
      $message = csremind_message_build_suppressed_message($reminder);
    }

    csremind_update_reminder($reminder['id'], $config);
    $commands[] = ajax_command_replace('.reminder-status-wrapper', drupal_render($message));

    $page = array(
      '#type' => 'ajax',
      '#commands' => $commands,
    );

    ajax_deliver($page);
  }
  else {
    // Deal with having no AJAX support by sending the user to their reminder
    // config tab on their user profile, where they can update preferences.
    drupal_goto('user/' . $account->uid . '/reminders');
  }
}

/**
 * Implements hook_csremind_remind_user().
 */
function csremind_message_csremind_remind_user($reminder, $unread_message_count) {
  $module_path = drupal_get_path('module', 'csremind_message');
  drupal_add_js($module_path . '/js/csremind_message.js', 'file');
  drupal_add_css($module_path . '/css/csremind_message.css', 'file');

  $message = csremind_message_build_reminder_message($reminder, $unread_message_count);
  drupal_set_message(drupal_render($message));
}

/**
 * Implements hook_theme().
 */
function csremind_message_theme($existing, $type, $theme, $path) {
  return array(
    'csremind_message_reminder_message' => array(
      'render element' => 'element',
    ),
    'csremind_message_deactivated_message' => array(
      'render element' => 'element',
    ),
    'csremind_message_suppressed_message' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Default theming of the reminder message that will be displayed to the user.
 *
 * @param array $variables
 *   Render element array for theming.
 *
 * @return string
 *   Themed message.
 */
function theme_csremind_message_reminder_message($variables) {
  $reminder = $variables['element']['#reminder'];
  $unread_message_count = $variables['element']['#unread_message_count'];

  $output = '<div class="reminder-message">';
  $output .= l(
    t('There are @number unread saved @form_type contact form messages', array(
      '@number' => $unread_message_count,
      '@form_type' => $reminder['form_type']
    )),
    'admin/structure/contact/messages',
    array(
      'attributes' => array(
        'class' => array(
          'reminder-link',
          'reminder-message-link',
        ),
      ),
    )
  );
  $output .= '</div>';

  $output .= '<div class="reminder-actions-wrapper">';
  foreach (element_children($variables['element']['action_links']) as $link) {
    $output .= '<span class="' . $link . '-link-wrapper">';
    $output .= drupal_render($variables['element']['action_links'][$link]);
    $output .= '</span>';
  }
  $output .= '</div>';

  // Container for status message, after clicking ''deactivate'/'suppress' link.
  // If this element is not present, no AJAX throbber or message will show after
  // a link is clicked.
  $output .= '<div class="reminder-status-wrapper"></div>';

  return $output;
}

/**
 * Default theming of the deactivate success message.
 *
 * @param array $variables
 *  A render element, with reminder properties.
 *
 * @return string
 *   Themed message.
 */
function theme_csremind_message_deactivated_message($variables) {
  $reminder = $variables['element']['#reminder'];
  $config_link = l('reminder config page', 'user/' . $reminder['uid'] . '/reminders');

  return t("Reminder has been permanently deactivated. If you wish to reactivate
    the reminder, visit your !link.",
    array(
      '@form_type' => $reminder['form_type'],
      '!link' => $config_link,
    )
  );
}

/**
 * Default theming of the suppress success message.
 *
 * @param array $variables
 *  A render element, with reminder properties.
 *
 * @return string
 *   Themed message.
 */
function theme_csremind_message_suppressed_message($variables) {
  $reminder = $variables['element']['#reminder'];
  $config_link = l('reminder config page', 'user/' . $reminder['uid'] . '/reminders');

  return t("Reminders have been suppressed for the remainder of your current
    session. If you wish to re-enable the reminder, visit your !link.",
    array(
     '@form_type' => $reminder['form_type'],
     '!link' => $config_link,
    )
  );
}

/**
 * Build the reminder message render array.
 *
 * @param array $reminder
 *   Array representing a reminder.
 * @param int $unread_message_count
 *   Number of currently unread messages.
 *
 * @return array
 *   Drupal renderable array.
 */
function csremind_message_build_reminder_message($reminder, $unread_message_count) {
  $link_base = 'user/' . $reminder['uid'] . '/reminder/' . $reminder['id'];
  $deactivate_link = $link_base . '/deactivate/nojs/';
  $suppress_link = $link_base . '/suppress/nojs/';

  $message = array(
    '#theme' => 'csremind_message_reminder_message',
    '#theme_wrappers' => array('container'),
    '#attributes' => array('class' => array('reminder-message-wrapper')),
    '#reminder' => $reminder,
    '#unread_message_count' => $unread_message_count,
    'action_links' => array(
      'suppress' => array(
        '#type' => 'link',
        '#title' => t('(Suppress)'),
        '#href' => $suppress_link,
        '#options' => array(
          'attributes' => array(
            'title' => t('Suppress reminder messages for the rest of this session.'),
            'class' => array(
              'reminder-link',
              'suppress-link',
            ),
          ),
        ),
        '#ajax' => array(
          'path' => $suppress_link,
          'progress' => array(
            'type' => 'throbber',
            'message' => t('Suppressing reminder...'),
          ),
        ),
      ),
      'deactivate' => array(
        '#type' => 'link',
        '#title' => t('(Deactivate)'),
        '#href' => $deactivate_link,
        '#options' => array(
          'attributes' => array(
            'title' => t('Permanently deactivate reminder messages.'),
            'class' => array(
              'reminder-link',
              'deactivate-link',
            ),
          ),
        ),
        '#ajax' => array(
          'path' => $deactivate_link,
          'progress' => array(
            'type' => 'throbber',
            'message' => t('Deactivating reminder...'),
          ),
        ),
      ),
    ),
  );

  return $message;
}

/**
 * Build the 'deactivated' message shown after clicking AJAX link render array.
 *
 * @param array $reminder
 *   Array representing a reminder.
 *
 * @return array
 *   Drupal renderable array.
 */
function csremind_message_build_deactivated_message($reminder) {
  $message = array(
    '#theme' => 'csremind_message_deactivated_message',
    '#theme_wrappers' => array('container'),
    '#attributes' => array('class' => array('reminder-status-wrapper')),
    '#reminder' => $reminder,
  );

  return $message;
}

/**
 * Build the 'suppressed' message shown after clicking AJAX link render array.
 *
 * @param array $reminder
 *   Array representing a reminder.
 *
 * @return array
 *   Drupal renderable array.
 */
function csremind_message_build_suppressed_message($reminder) {
  $message = array(
    '#theme' => 'csremind_message_suppressed_message',
    '#theme_wrappers' => array('container'),
    '#attributes' => array('class' => array('reminder-status-wrapper')),
    '#reminder' => $reminder,
  );

  return $message;
}
