<?php

/**
* @file
* This Twitter Profile modules fetch twitter data & display it on site.
*/

/**
 * Implements hook_block_info().
 * Provides one block named 'Twitter Profile' that is globally cached.
 */
function twitter_profile_block_info() {
  $blocks = array();
  $blocks['twitter_profile_block'] = array(
    'info' => t('Twitter Profile'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function twitter_profile_block_view($delta = '') {
  $block = array();
  switch ($delta) {
  case 'twitter_profile_block':
    $block['subject'] = t('Twitter Profile');
    $block['content'] = twitter_fetch();
  }
  return $block;
}

/**
 * Implements hook_block_configure().
 * Creates the form fields.
 */
function twitter_profile_block_configure($delta = '') {
  $form = array();
  if ($delta == 'twitter_profile_block') {
  $form['twitter_profile_username']=array(
    '#type' => 'textfield',
    '#title' => t('Twitter Username'),
    '#required' => TRUE,
    '#default_value' => variable_get('twitter_profile_username', t('Drupal'))
  );
  $form['twitter_profile_userinfo']=array(
    '#type' => 'checkbox',
    '#title' => t('Show User Profile Info'),
    '#default_value' => variable_get('twitter_profile_userinfo', 1)
  );
  $form['twitter_profile_tweets']=array(
    '#type' => 'checkbox',
    '#title' => t('Show Tweets Count'),
    '#default_value' => variable_get('twitter_profile_tweets', 1)
  );
  $form['twitter_profile_favourites']=array(
    '#type' => 'checkbox',
    '#title' => t('Show Favourites Count'),
    '#default_value' => variable_get('twitter_profile_favourites', 1)
  );
  $form['twitter_profile_list']=array(
    '#type' => 'checkbox',
    '#title' => t('Show List Count'),
    '#default_value' => variable_get('twitter_profile_list', 1)
  );
  $form['twitter_profile_followers']=array(
    '#type' => 'checkbox',
    '#title' => t('Show Followers Count'),
    '#default_value' => variable_get('twitter_profile_followers', 1)
  );
  $form['twitter_profile_following']=array(
    '#type' => 'checkbox',
    '#title' => t('Show Following Count'),
    '#default_value' => variable_get('twitter_profile_following', 1)
  );
  $form['twitter_profile_ver_hor']=array(
    '#type' => 'radios',
    '#title' => t('Show Followers & following fans'),
    '#options' => array(
    'vertical' => t('Vertical 50% width format'),
    'horizontal' => t('Horizontal 100% width format')),
    '#default_value' => variable_get('twitter_profile_ver_hor', 'vertical'),
  );
  $form['twitter_profile_frdimg']=array(
    '#type' => 'textfield',
    '#title' => t('Max Number of Fans Images to show, Use zero for none'),
    '#size' => 2,
    '#maxlength' => 2,
    '#default_value' => variable_get('twitter_profile_frdimg', 14)
  );
  $form['twitter_profile_frdimgsize']=array(
    '#type' => 'textfield',
    '#title' => t('Fans Images Size'),
    '#size' => 2,
    '#maxlength' => 2,
    '#default_value' => variable_get('twitter_profile_frdimgsize', 37)
  );
  $form['twitter_profile_select']=array(
    '#type' => 'select',
    '#title' => t('Select Theme Preset'),
    '#options' => drupal_map_assoc(array('Dark', 'Medium', 'Colorfull')),
    '#default_value' => variable_get('twitter_profile_select', 1)
  );
  }
  return $form;  
}

/**
 * Implements hook_block_save().
 * Stores Twitter config settings.
 */
function twitter_profile_block_save($delta = '', $edit = array()) {
  variable_set('twitter_profile_username', $edit['twitter_profile_username']);
  variable_set('twitter_profile_userinfo', $edit['twitter_profile_userinfo']);
  variable_set('twitter_profile_select', $edit['twitter_profile_select']);
  variable_set('twitter_profile_tweets', $edit['twitter_profile_tweets']);
  variable_set('twitter_profile_favourites', $edit['twitter_profile_favourites']);
  variable_set('twitter_profile_list', $edit['twitter_profile_list']);
  variable_set('twitter_profile_followers', $edit['twitter_profile_followers']);
  variable_set('twitter_profile_following', $edit['twitter_profile_following']);
  variable_set('twitter_profile_ver_hor', $edit['twitter_profile_ver_hor']);
  variable_set('twitter_profile_frdimg', $edit['twitter_profile_frdimg']);
  variable_set('twitter_profile_frdimgsize', $edit['twitter_profile_frdimgsize']);  
}

/**
 * Renders display of block view.
 */
function twitter_fetch() {
  $username = variable_get('twitter_profile_username', 1);
  $location = "http://twitter.com/users/show/$username" ;
  $options = array('attributes' => array('target' => '_blank'), 'html' => TRUE);
  $result = drupal_http_request($location);
  if ($result->code == 200) {
    $output = "<div id='twitter_block'>";
    // User Profile Image & Name
    if (preg_match('/profile_image_url>(.*)</', $result->data, $match)!=0) {      
      $text = '<div class="twitter_top"><img class="userpic" src=' . $match[1] . ' alt="profile image" /><span class="break-word">' . $username . '</span></div>';
      $path = "http://twitter.com/#!/$username";
      $output .= l($text, $path, $options); 
    }
    // Twittr Profile Info
    if ($username) {
      $output .= "<div class='twitter_stats'>";
      if (preg_match('/location>(.*)</', $result->data, $match)!=0) {
        $output .= "<b>Location:  </b>" . $match[1] . "<br>";
      }
      if (preg_match('/description>(.*)</', $result->data, $match)!=0) {
        $output .= "<b>Bio:  </b>" . $match[1] . "<br>";
      }   
      if (preg_match('/<url(.*)?>(.*)?<\/url>/', $result->data, $match)) {
        $rawtext = str_replace('http://', '', $match[2]); 
        $output .= "<b>Web:  </b><a href=" . $match[2] . " target='_blank'>" . $rawtext . "</a><br>";
      }
      $output .= "</div>";
    }
    // Tweets-Update Count 
    if (variable_get('twitter_profile_tweets', TRUE)) {
      if (preg_match('/statuses_count>(.*)</', $result->data, $match)!=0) {
        $text = '<div class="even"><span>' . t("Tweets") . '</span>' . $match[1] . '</div>';
        $path = "http://twitter.com/#!/$username";
        $output .= l($text, $path, $options); 
      }
    }
    // Favroute Count
    if (variable_get('twitter_profile_favourites', TRUE)) {
      if (preg_match('/favourites_count>(.*)</', $result->data, $match)!=0) {
        $text = '<div class="odd"><span>' . t("Favourites") . '</span>' . $match[1] . '</div>';
        $path = "http://twitter.com/#!/$username/favorites";
        $output .= l($text, $path, $options); 
      }
    }
    // list Count
    if (variable_get('twitter_profile_list', TRUE)) {
      if (preg_match('/listed_count>(.*)</', $result->data, $match)!=0) {
        $tw['count'] = $match[1];
        $text = '<div class="even"><span>' . t("Listed") . '</span>' . $match[1] . '</div>';
        $path = "http://twitter.com/#!/$username/lists/memberships";
        $output .= l($text, $path, $options); 
      }
    }
    // Vertical Fans Style
    if (variable_get('twitter_profile_ver_hor', 'vertical') == 'vertical') {
      if (variable_get('twitter_profile_followers', TRUE)) {
        if (preg_match('/followers_count>(.*)</', $result->data, $match)!=0) {
          $text = '<div class="followers">' . $match[1] . '<span>' . t("Followers") . '</span>' . twitter_followers() . '</div>';
          $path = "http://twitter.com/#!/$username/followers";
          $output .= l($text, $path, $options); 
        }
      }
      if (variable_get('twitter_profile_following', TRUE)) {
        if (preg_match('/friends_count>(.*)</', $result->data, $match)!=0) {
          $text = '<div class="following">' . $match[1] . '<span>' . t("Following") . '</span>' . twitter_friends() . '</div>';
          $path = "http://twitter.com/#!/$username/following";
          $output .= l($text, $path, $options); 
        }
      }
    }
    //Horizontal Fans Style
    else {
      if (variable_get('twitter_profile_followers', TRUE)) {
        if (preg_match('/followers_count>(.*)</', $result->data, $match)!=0) {
          $text = '<div class="folow1">' . $match[1] . '<span>' . t("Followers") . '</span>' . twitter_followers() . '</div>';
          $path = "http://twitter.com/#!/$username/followers";
          $output .= l($text, $path, $options); 
        }
      }
      if (variable_get('twitter_profile_following', TRUE)) {
        if (preg_match('/friends_count>(.*)</', $result->data, $match)!=0) {
          $text = '<div class="folow2">' . $match[1] . '<span>' . t("Following") . '</span>' . twitter_friends() . '</div>';
          $path = "http://twitter.com/#!/$username/following";
          $output .= l($text, $path, $options); 
        }
      }
    }
    $output .= "</div>";
    return $output;
  }
}

//Display Twitter followers images
function twitter_followers() {
  $output = "";
  $image_count = variable_get('twitter_profile_frdimg', 1);
  if ($image_count>=1) {
    $image_size = variable_get('twitter_profile_frdimgsize', 1);
    $username = variable_get('twitter_profile_username', 1);
    $location = "http://api.twitter.com/1/statuses/followers.json?screen_name=$username&count=$image_count";
    $result = drupal_http_request($location);
    if ($result->code == 200) {
      $output .= '<div class="clear">';
      $followers = drupal_json_decode($result->data);
      foreach ($followers as $value) {
        $output .= '<img height="' . $image_size . '" width="' . $image_size . '" src="' . $value["profile_image_url"] . '"/>';
      }
      $output .= '</div>';
    }
  }
  return $output;
}

//Display Twitter friends images
function twitter_friends() {
  $output = "";
  $image_count = variable_get('twitter_profile_frdimg', 1);
  if ($image_count>=1) {
    $image_size = variable_get('twitter_profile_frdimgsize', 1);
    $username = variable_get('twitter_profile_username', 1);
    $location = "http://api.twitter.com/1/statuses/friends.json?screen_name=$username&count=$image_count" ;
    $result = drupal_http_request($location);
    if ($result->code == 200) {
      $output .= '<div class="clear">';
      $friends = drupal_json_decode($result->data);
      foreach ($friends as $frd_value) {
        $output .= '<img  height="' . $image_size . '" width="' . $image_size . '" src="' . $frd_value['profile_image_url'] . '" />';
      }
      $output .= '</div>';
    }
  }
  return $output;
}

/**
 * Implementation of hook_init().
 */
function twitter_profile_init() {
  $get_style = variable_get('twitter_profile_select', 1);
  switch ($get_style) {
    case 'Dark':
      drupal_add_css(drupal_get_path('module', 'twitter_profile') . '/dark.css');
      break;
    case 'Medium':
      drupal_add_css(drupal_get_path('module', 'twitter_profile') . '/medium.css');
      break;
    case 'Colorfull':
      drupal_add_css(drupal_get_path('module', 'twitter_profile') . '/colorfull.css');
      break;
  }
}

/**
 * Implementation of hook_enable()
 */
function twitter_profile_enable() {
  drupal_set_message(t(l('Configure Twitter Profile Block.', 'admin/structure/block/manage/twitter_profile/twitter_profile_block/configure')), 'status');
}