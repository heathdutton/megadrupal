<?php

/**
 * @file
 * Install and uninstall schema and functions for the curlypage clicks module.
 */

/**
 * Implements hook_schema().
 */
function curlypage_clicks_schema() {
  return array(
    'curlypage_clicks' => array(
      'description' => 'The main table to hold the curlypage clicks statistics data.',
      'fields' => array(
        'cpid' => array(
          'description' => 'The foreign key to curlypage.cpid',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'enabled' => array(
          'description' => 'Clicks track enabled for this curlypage',
          'type' => 'int',
          'not null' => TRUE,
          'size' => 'tiny',
          'default' => 0,
        ),
        'clicks' => array(
          'description' => 'Clicks count',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'views_open' => array(
          'description' => 'Open curlypage views count',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'views_close' => array(
          'description' => 'Close curlypage views count',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'max_views_open' => array(
          'description' => 'Max open curlypage views.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'max_views_close' => array(
          'description' => 'Max close curlypage views.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('cpid'),
    ),
    'curlypage_clicks_detail' => array(
      'description' => 'The main table to hold the curlypage clicks detail statistics.',
      'fields' => array(
        'cpclid' => array(
          'description' => 'Unique curlypage clicks detail id',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'cpid' => array(
          'description' => 'The foreign key to curlypage.cpid',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'uid' => array(
          'description' => 'The foreign key to users.uid',
          'type' => 'int',
          'not null' => TRUE,
          'size' => 'tiny',
          'default' => 0,
        ),
        'link' => array(
          'description' => 'URL clicked.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'timestamp' => array(
          'description' => 'The timestamp when user clicked.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
      ),
      'primary key' => array('cpclid'),
    ),
  );
}

/**
 * Implements hook_enable().
 */
function curlypage_clicks_enable() {

  // test if any curlypage have been deleted while curlypage clicks have been
  // disabled and delete those rows from curlypage_clicks and
  // curlypage_clicks_detail
  $result = db_query('SELECT cpcl.cpid FROM {curlypage_clicks} cpcl LEFT JOIN {curlypages} cp ON cpcl.cpid = cp.cpid WHERE cp.cpid IS NULL');

  foreach ($result as $curlypage) {

    db_delete('curlypage_clicks')
      ->condition('cpid', $curlypage->cpid)
      -> execute();

    db_delete('curlypage_clicks_detail')
      ->condition('cpid', $curlypage->cpid)
      -> execute();

  }

  // test if any curlypage have been added while curlypage clicks have been
  // disabled and insert those rows into curlypage_clicks
  $result = db_query('SELECT cp.cpid FROM {curlypages} cp LEFT JOIN {curlypage_clicks} cpcl ON cp.cpid = cpcl.cpid WHERE cpcl.cpid IS NULL');

  foreach ($result as $curlypage) {

    db_insert('curlypage_clicks')
      -> fields(array(
        'cpid' => $curlypage->cpid,
        'enabled' => 0,
        'clicks' => 0,
        'views_open' => 0,
        'views_close' => 0,
        'max_views_open' => 0,
        'max_views_close' => 0,
      ))
      -> execute();

  }

}

/**
 * Implements hook_update_N().
 */
function curlypage_clicks_update_6301() {

  db_add_field('curlypage_clicks', 'views', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Views count.',
  ));

}

function curlypage_clicks_update_6302() {

  db_add_field('curlypage_clicks', 'views_open', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Open curlypage views count.',
  ));
  db_change_field('curlypage_clicks', 'views', 'views_close', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Close curlypage views count.',
  ));

}

function curlypage_clicks_update_6303() {

  db_add_field('curlypage_clicks', 'max_views_open', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Max open curlypage views.',
  ));
  db_add_field('curlypage_clicks', 'max_views_close', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Max close curlypage views.',
  ));

}
