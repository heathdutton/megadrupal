<?php
/**
 * @file
 * Tests for the IDNA Convert module.
 */


/**
 * Tests API of the IDNA Convert module.
 */
class IDNAConvertTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'IDNA Convert',
      'description' => 'Tests for the module API.',
      'group' => 'IDNA Convert',
    );
  }

  protected $toUTF8;
  protected $toPunycode;

  function setUp() {
    // Install the IDNA Convert module.
    parent::setUp(
      'idna_convert'
    );

    // Prepare parameters and results for module tests.
    $this->toUTF8 = array(
      'xn--d1acufc.xn--p1ai' => 'домен.рф',
    );
    $this->toPunycode = array(
       'домен.рф' => 'xn--d1acufc.xn--p1ai',
    );
  }

  /**
   * Test for the idna_convert_decode() function.
   * @see idna_convert_decode()
   */
  function testToUTF8() {
    foreach($this->toUTF8 as $parameter => $result) {
      $this->assertEqual(idna_convert_decode($parameter), $result, 'idna_convert_decode(' . $parameter . ') = ' . $result);
    }
  }

  /**
   * Test for the idna_convert_encode() function.
   * @see idna_convert_encode()
   */
  function testToPunycode() {
    foreach($this->toPunycode as $parameter => $result) {
      $this->assertEqual(idna_convert_encode($parameter), $result, 'idna_convert_encode(' . $parameter . ') = ' . $result);
    }
  }
}
