<?php

// $Id$
/**
 * @file
 *
 */
define('LOCALE_COOKIE_NEGOTIATION_COOKIE', 'language-cookie');

function locale_cookie_init() {
  global $base_path;
  global $language;
  $param = variable_get('locale_cookie_language_negotiation_cookie_param', 'language');
  if (isset($_COOKIE[$param])) {
    if (is_object($language) && $_COOKIE[$param] != $language->language) {
      $langcode = $language->language;
    }
    else {
      $langcode = $_COOKIE[$param];
    }
  }
  else {
    $langcode = $language->language;
  }
  $expire = REQUEST_TIME + (86400 * variable_get('locale_cookie_language_negotiation_cookie_expire', 7));
  setcookie($param, $langcode, $expire, $base_path);
}

function locale_cookie_language_negotiation_info() {
  $file = drupal_get_path('module', 'locale_cookie') . '/includes/locale_cookie.inc';
  $providers[LOCALE_COOKIE_NEGOTIATION_COOKIE] = array(
    'types' => array(LANGUAGE_TYPE_CONTENT, LANGUAGE_TYPE_INTERFACE, LANGUAGE_TYPE_URL),
    'callbacks' => array(
      'language' => 'locale_cookie_language_from_cookie',
    ),
    'file' => $file,
    'weight' => -8,
    'name' => t('Cookie'),
    'description' => t('Determine the language from a cookie.'),
    'config' => 'admin/config/regional/language/configure/cookie',
  );
  return $providers;
}

function locale_cookie_menu() {
  $items['admin/config/regional/language/configure/cookie'] = array(
    'title' => 'Cookie language detection configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('locale_cookie_language_providers_cookie_form'),
    'access arguments' => array('administer languages'),
    'file' => 'locale_cookie.admin.inc',
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  return $items;
}