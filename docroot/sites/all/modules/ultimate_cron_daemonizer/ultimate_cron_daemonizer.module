<?php

/**
 * Form for daemonize settings
 */
function ultimate_cron_daemonizer_form_ultimate_cron_function_settings_form_alter(&$form, &$form_state) {
  $function = $form['function']['#value'];

  // Don't daemonize queues
  $queue_name = str_replace('ultimate_cron_queue_', '', $function);
  if ($queue_name !== $function) {
    return;
  }

  // Load settings
  $hooks = ultimate_cron_get_hooks();
  $hook = $hooks[$function];
  $conf = ultimate_cron_get_settings($function);
  $conf += _ultimate_cron_default_settings();

  $form['general']['daemonize'] = array(
    '#type' => 'textfield',
    '#default_value' => empty($conf['daemonize']) ? 0 : $conf['daemonize'],
    '#title' => 'Daemonize for N seconds',
    '#description' => t('Number of seconds to keep alive before restarting cron job'),
  );
  $form['general']['daemonize_polling_interval'] = array(
    '#type' => 'textfield',
    '#default_value' => empty($conf['daemonize_polling_interval']) ? 1 : $conf['daemonize_polling_interval'],
    '#title' => 'Daemonize polling interval',
    '#description' => t('Time in seconds to wait before running cron job again within the same request'),
  );
}

/**
 * Implements hook_cron_alter().
 *
 * Steal daemonized hooks.
 */
function ultimate_cron_daemonizer_cron_alter(&$hooks) {
  foreach ($hooks as $function => &$hook) {
    // Don't daemonize queues
    $queue_name = str_replace('ultimate_cron_queue_', '', $function);
    if ($queue_name !== $function) {
      continue;
    }

    $conf = ultimate_cron_get_settings($function) + _ultimate_cron_default_settings();
    if (empty($conf['daemonize'])) {
      continue;
    }
    $hook['daemonize_callback'] = $hook['callback'];
    $hook['callback'] = 'ultimate_cron_daemonizer_cron_daemonize';
  }
}

/**
 * Cron hook.
 * Process daemonized hooks.
 */
function ultimate_cron_daemonizer_cron_daemonize() {
  $hook = ultimate_cron_get_current_hook();
  $callback = $hook['daemonize_callback'];
  $expire = time() + $hook['settings']['daemonize'];
  do {
    if (is_callable($callback)) {
      call_user_func($callback);
    }
    else {
      module_invoke($hook['module'], 'cronapi', 'execute', $function, $hook);
    }
    sleep($hook['settings']['daemonize_polling_interval']);
  } while (time() < $expire);

  $hook['settings'] = ultimate_cron_get_settings($hook['function']) + _ultimate_cron_default_settings();
  if ($hook['settings']['enabled'] && $hook['settings']['daemonize'] > 0) {
    $hook['timestamp'] = time();
    background_process_keepalive($hook['function'], $hook);
  }
}
