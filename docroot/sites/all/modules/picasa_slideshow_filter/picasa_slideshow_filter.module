<?php
/**
 * @file
 * Provides the ability to embed slideshows from Picasa Webalbums
 *
 * This module provides an input filter to add a slideshow from Picasa Webalbum anywhere
 * input filters are accepted.
 */

// @todo how to set defaults for settings?
// @todo how to set the settings

/**
 * Implements hook_help().
 */
function picasa_slideshow_filter_help($path, $arg) {
  switch ($path) {
    case 'admin/help#picasa_slideshow_filter':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Picasa Slideshow Input filter makes it possible to embed slideshows everywhere input filters are accepted. For more information, see the project for <a href="@picasa_slideshow">Picasa Slideshow Input Filter</a>.', array('@picasa_slideshow' => 'http://drupal.org/project/picasa_slideshow_filter')) . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Usage') . '</dt>';
      $output .= '<dd>' . t('To embed a slideshow, you need to use the following code snippet: <samp>[picasa_slideshow id=album_id]</samp>.') . '.</dd>';
      $output .= '<dt>' . t('How to find the album id?') . '</dt>';
      $output .= '<dd><ul>';
      $output .= '<li>' . t('Navigate to the Picasa Webalbum and find the album, you want to embed') . '.</li>';
      $output .= '<li>' . t('Click on the RSS icon in the right sidebar') . '.</li>';
      $output .= '<li>' . t('You will find the album id in the link. Interpret it like this:') . '.</li>';
      $output .= '<li><samp>https://picasaweb.google.com/data/feed/base/user/[user_id]/albumid/<strong>[album_id]</strong></samp></li>';
      $output .= '</ul></dd>';

      $output .= '</dl>';
      return $output;
  }
}

/**
 * Implementation of hook_filter_info().
 */
function picasa_slideshow_filter_filter_info() {
  $filters['picasa_slideshow_filter'] = array(
    'title' => t('Picasa Webalbum Slideshow filter'),
    'description' => t('Substitutes [picasa_slideshow id=xxx user=yyy] tags with a slideshow of the album you can find at https://picasaweb.google.com/data/feed/base/user/[user_id]/albumid/[album_id]'),
    'process callback'  => 'picasa_slideshow_filter_filter_process',
    'settings callback' => 'picasa_slideshow_filter_filter_settings',
    'tips callback' => 'picasa_slideshow_filter_filter_tips',
    'cache' => TRUE,
  );
  return $filters;
}

/**
 * Process callback for hook_filter_info().
 */
function picasa_slideshow_filter_filter_process($text, $filter, $format) {
  $psi = new PicasaSlideshowInputFilter($filter);
  return $psi->parse($text);
}

class PicasaSlideshowInputFilter {
  protected $filter;
  protected $pattern = '/\[picasa_slideshow id=(\d+)\s*(?:user=(\S+))?]/';
  public function __construct($filter) {
    $this->filter = $filter;
  }
  public function parse($text) {
    return preg_replace_callback($this->pattern, array($this, 'embed'), $text);   
  }
  protected function embed($matches) {
    if (!empty($matches[1])) {
      $data['album_id'] = $matches[1];
    } else {
      // @todo what to do if no album id has been set?
    }
    if (!empty($matches[2])) {
      $data['user'] = $matches[2];
    } else {
      // use default user
      $data['user'] = $this->filter->settings['picasa_user'];
    }
    if (!empty($matches[3])) {
      $data['picasa_authkey'] = $matches[3];
    } else {
      // use default authentication key
      if ($this->filter->settings['picasa_authkey'] != '') {
        $data['picasa_authkey'] = $this->filter->settings['picasa_authkey'];
      } else {
        $data['picasa_authkey'] = '';
      }
    }
  
    $url_options = array();
    $url_options[] = 'alt=rss';
    $url_options[] = 'kind=photo';
    $url_options[] = 'hl=Den_US';
  
    $url_options[] = 'captions=' . check_plain($this->filter->settings['picasa_slideshow_filter_show_captions']);
    if ($this->filter->settings['picasa_slideshow_filter_autoplay'] == 0) {
      $url_options[] = 'noautoplay=1';
    }

    if (!empty($data['picasa_authkey'])) {
      $url_options[] = 'authkey=' . check_plain($data['picasa_authkey']);
    }
  
    $slideshow_url = 'https://picasaweb.google.com/data/feed/api/user/'.check_plain($data['user']).'/albumid/'.check_plain($data['album_id']).'?' . implode('&', $url_options);

    $flashvars = array();
    $flashvars[] = 'host=picasaweb.google.com';
    $flashvars[] = 'hl=en_US';
    $flashvars[] = 'feat=flashalbum';
    $flashvars[] = 'RGB=0x000000';
    $flashvars[] = 'feed=' . rawurlencode($slideshow_url);
    
    if ($this->filter->settings['picasa_slideshow_filter_wmode']) {
      $wmode = 'wmode="' . check_plain($this->filter->settings['picasa_slideshow_filter_wmode']) . '"';
    }

    $sizes = array(
      'medium' => array('height' => 192, 'width' => 288),
      'large' => array('height' => 267, 'width' => 400),
      'x-large' => array('height' => 400, 'width' => 600),
      'xx-large' => array('height' => 533, 'width' => 800), 
    );
    $what_size = $this->filter->settings['picasa_slideshow_filter_size'];
    if (!isset($sizes[$what_size])) {
      $what_size = 'large';
    }
    $chosen_size = $sizes[$what_size];

    $output = array(
      '<embed type="application/x-shockwave-flash" src="https://picasaweb.google.com/s/c/bin/slideshow.swf" width="'.check_plain($chosen_size['width']).'" height="'.check_plain($chosen_size['height']).'" flashvars="'.implode('&', $flashvars).'" ' . $wmode . ' pluginspage="http://www.macromedia.com/go/getflashplayer"></embed>',
  );
  
    return implode('\n', $output);
  }
}

/**
 * Settings callback for picasa_slideshow_filter
 */
function picasa_slideshow_filter_filter_settings($form, $form_state, $filter, $format, $defaults) {
  $settings['picasa_authkey'] = array(
    '#type' => 'textfield',
    '#title' => t('Picasaweb Auth Key'),
    '#required' => false,
    '#default_value' => !empty($filter->settings['picasa_authkey']) ? $filter->settings['picasa_authkey'] : '',
  );
  $settings['picasa_user'] = array(
    '#type' => 'textfield',
    '#title' => t('Picasaweb Default User'),
    '#required' => true,
    '#default_value' => !empty($filter->settings['picasa_user']) ? $filter->settings['picasa_user'] : '',
  ); 

  $settings['picasa_slideshow_filter_size'] = array(
    '#title' => t('Default size for slideshow'),
    '#type' => 'select',
    '#options' => array(
      'medium' => t('Medium 288x192px'),
      'large' => t('Large 400x267px'),
      'x-large' => t('X-Large 600x400px'),
      'xx-large' => t('XX-Large 800x533px'),      
    ),
    '#default_value' => !empty($filter->settings['picasa_slideshow_filter_size']) ? $filter->settings['picasa_slideshow_filter_size'] : 'large',
  );  
  $settings['picasa_slideshow_filter_show_captions'] = array(
    '#title' => t('Show captions'),
    '#type' => 'select',
    '#options' => array(
      '1' => t('Yes'),
      '0' => t('No'),
    ),
    '#default_value' => isset($filter->settings['picasa_slideshow_filter_show_captions']) ? $filter->settings['picasa_slideshow_filter_show_captions'] : 1,
  ); 
  $settings['picasa_slideshow_filter_autoplay'] = array(
    '#title' => t('Autoplay'),
    '#type' => 'select',
    '#options' => array(
      '1' => t('Yes'),
      '0' => t('No'),
    ),
    '#default_value' => isset($filter->settings['picasa_slideshow_filter_autoplay']) ? $filter->settings['picasa_slideshow_filter_autoplay'] : 1,
  );
  $settings['picasa_slideshow_filter_wmode'] = array(
    '#title' => t('WMode'),
    '#type' => 'select',
    '#options' => array(
      'window' => t('Window'),
      'direct' => t('Direct'),
      'opaque' => t('Opaque'),
      'transparent' => t('Tranparent'),
      'gpu' => t('GPU'),
    ),
    '#default_value' => isset($filter->settings['picasa_slideshow_filter_wmode']) ? $filter->settings['picasa_slideshow_filter_wmode'] : 'window',
  );
  return $settings;
}

/**
 * Implements hook_filter_tips().
 */
function picasa_slideshow_filter_filter_tips($filter, $format, $long = FALSE) {
  $action = t('embed the picasaweb slideshow');
  return t('Use [picasa_slideshow id=xx user=yyy] where xx is you album id and yyy is an optional user id if different from default settings to %action.', array('%action' => $action));
}
