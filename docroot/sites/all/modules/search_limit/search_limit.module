<?php
/**
 * Implements hook_menu().
 */
function search_limit_menu() {

  $items['admin/config/search/search_limit'] = array(
    'title' => 'Extend search limits',
    'description' => 'Excludes nodes from the site search based on their node ID. Also provide configuration to limit number of items on Search Result page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('search_limit_exclude_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer search limit'),
  );

  return $items;
}

/**
 * Implements hook_query_alter
 */
function search_limit_query_alter(&$query) {

  // This is a search result query and we want to change the
  // number of search results per page to dynamic.
  $limit = variable_get('search_limit_items_to_display', 10);
  if ($query instanceof PagerDefault
    && ($tables = $query->getTables())
    && isset($tables['i']['table'])
    && $tables['i']['table'] === 'search_index') {
    $query->limit($limit);
  }

  foreach ($query->getTables() as $table) {
    if ($table['table'] == 'search_index') {
      if ($excluded_nids = variable_get('search_limit_exclude_nids', array())) {
        $excluded_nids = explode(',', $excluded_nids);
        if (count($excluded_nids)) {
          // Remove the node IDs from the query.
          $query->condition('n.nid', $excluded_nids, 'NOT IN');
        }
        break;
      }      
    }
  }
}

/**
 * Form constructor for the module's settings form.
 *
 * @see search_exclude_nid_search_exclusion_form_submit()
 *
 * @ingroup forms
 */
function search_limit_exclude_form() {
  $form = array();

  $form['search_limit_exclude_nids'] = array(
    '#title' => t('Node ids to be excluded from search result'),
    '#type' => 'textfield',
    '#maxlength' => '1024',
    '#default_value' => variable_get('search_limit_exclude_nids', array()),
    '#description' => t('Please enter the node ids separated by a "," (for example: 345,22,1234)'),
  );
  $form['search_limit_exclude_crawl'] = array(
    '#type' => 'checkbox',
    '#title' => t('Hide Excluded Nodes from Search Engine Crawl'),
    '#default_value' => variable_get('search_limit_exclude_crawl', 0),
  );
  $form['search_limit_items_to_display'] = array(
    '#title' => t('Items to display'),
    '#type' => 'textfield',
    '#default_value' => variable_get('search_limit_items_to_display', 10),
    '#description' => t('Total number of items to display on search result.'),
  );

  return system_settings_form($form);
}

function search_limit_preprocess_search_results(&$vars) {
  // search.module shows 10 items per page (this isn't customizable)
  $limit = variable_get('search_limit_items_to_display', 10);
  $itemsPerPage = $limit;

  // Determine which page is being viewed
  // If $_REQUEST['page'] is not set, we are on page 1
  $currentPage = (isset($_REQUEST['page']) ? $_REQUEST['page'] : 0) + 1;

  // Get the total number of results from the global pager
  $total = $GLOBALS['pager_total_items'][0];

  // Determine which results are being shown ("Showing results x through y")
  $start = ($itemsPerPage * $currentPage) - ($itemsPerPage - 1);
  // If on the last page, only go up to $total, not the total that COULD be
  // shown on the page. This prevents things like "Displaying 11-20 of 17".
  $end = (($itemsPerPage * $currentPage) >= $total) ? $total : ($itemsPerPage * $currentPage);

  // If there is more than one page of results:
  if ($total > $itemsPerPage) {
    $vars['search_totals'] = t('!start - !end of !total results', array(
      '!start' => $start,
      '!end' => $end,
      '!total' => $total,
    ));
  }
  else {
    // Only one page of results, so make it simpler
    $vars['search_totals'] = t('!total !results_label', array(
      '!total' => $total,
      // Be smart about labels: show "result" for one, "results" for multiple
      '!results_label' => format_plural($total, 'result', 'results'),
    ));
  }
}

/**
 * Implements template_preprocess_node.
 *
 * This checks the list of protected content types
 * and if the current node is in the list, then it gates it
 * showing a marketo form that should be filled before
 * allowing the user to continue
 *
 * @param array $variables
 */
function search_limit_preprocess_node(&$variables) {
  global $user;

  // The current node type being loaded
  $node = &$variables['node'];
  //$content = &$variables['content'];
  if ($excluded_nids = variable_get('search_limit_exclude_nids', array())) {
    $excluded_nids = explode(',', $excluded_nids);
  }

  if (in_array($node->nid, $excluded_nids) && variable_get('search_limit_exclude_crawl', 0)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'robots',
        'content' => 'noindex',
      ),
    );
    drupal_add_html_head($element, 'robots');
  }
}