<?php

/**
 * Implements of hook_init().
 */
function comment_count_notify_init() {
  $_paramsg_comment_count_notify_ = array();
}

/**
 * Implements of hook_help().
 */
function comment_count_notify_help($path, $arg) {
  global $base_url;
  switch ($path) {
    case 'admin/help#comment_count_notify':
      return t('This module can save you from receiving a notification email' .
               ' on every comment post. It would send an email periodically informing' .
               ' you about the total number of comments pending for approval.') .'<p>'.
               'This module should only be used if you have comment moderation activated.';
      break;
    case 'admin/settings/comment_count_notify':
      return t('Visit the') .'<a href='. $base_url .'/admin/help/comment_count_notify>&nbsp;'. t('help') .
               '</a>&nbsp;'. t('page for available configuration options');
      break;
    }
}

/**
 * Implements of hook_perm().
 */
function comment_count_notify_permissions() {
  return array('Administer Comment Count Notify');
}

/**
 * Implements of hook_menu().
 */
function comment_count_notify_menu() {
  $items = array();
  $items['admin/config/content/comment_count_notify'] = array
    (
      'title' => 'Comment Count Notify',
      'description' => 'Add the email address where to send the notifications',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('comment_count_notify_settings_page'),
      'access arguments' => array('Administer Comment Count Notify'),
      'type' => MENU_NORMAL_ITEM,
    );
  return $items;
}

/**
 * The configuration page for CCN.
 */
function comment_count_notify_settings_page() {
  $form = array();
  $form['comment_count_notify_mail_sending_interval'] = array(
    '#type' => 'select',
    '#title' => t('Send notification after every'),
    '#options' => array(
      '0' => t('No notifications'),
      '1' => t('1 Hour'),
      '3' => t('3 Hours'),
      '6' => t('6 Hours'),
      '12' => t('12 Hours'),
      '24' => t('24 Hours')),
    '#default_value' => variable_get('comment_count_notify_mail_sending_interval', ''),
    '#description' => t('Enter the interval after which the notifications should be sent'),
  );

  $form['comment_count_notify_recipent_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#description' => t('Enter the email where the notification would be sent'),
    '#default_value' => variable_get('comment_count_notify_recipent_email', comment_count_notify_get_admin_email()),
    '#required' => 'TRUE',
  );

  $form['comment_count_notify_email_sender'] = array(
    '#type' => 'textfield',
    '#title' => t('From'),
    '#default_value' => variable_get('comment_count_notify_email_sender', t('comment@count.notifier')),
    '#description' => t('Enter the email from which the notifications will be received. This may get overwritten by your server settings.'),
    '#required' => 'TRUE',
  );

  $form['comment_count_notify_email_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#default_value' => variable_get('comment_count_notify_email_subject', t('Your pending Comment count')),
    '#description' => t('Enter the email subject'),
    '#required' => 'TRUE',
  );
  return system_settings_form($form);
}

/**
 * Get number of comments in approval queue.
 */
function comment_count_notify_queued_comment_count() {
  $comment_count_notify_queued_comments_query = db_query("SELECT COUNT(status) AS comment_count FROM {comment} WHERE status=0")->fetchField();
  return $comment_count_notify_queued_comments_query;
}

/**
 * CCN function.
 */
function comment_count_notify() {
  $comment_count_notify_config_data = array();
  $comment_count_notify_config_data['comment_count_notify_mail_sending_interval'] = variable_get('comment_count_notify_mail_sending_interval', '');
  $comment_count_notify_config_data['comment_count_notify_recipent_email'] = variable_get('comment_count_notify_recipent_email', comment_count_notify_get_admin_email());
  $comment_count_notify_config_data['comment_count_notify_email_sender'] = variable_get('comment_count_notify_email_sender', t('Comment Count Notifier'));
  $comment_count_notify_config_data['comment_count_notify_email_subject'] = variable_get('comment_count_notify_email_subject', t('Your pending Comment count'));
  $comment_count_notify_config_data['comment_count_notify_mailing_key'] = 'ccn_send_mail';
  comment_count_notify_send_email($comment_count_notify_config_data);
}

/**
 * This function calls drupal_mail().
 */
function comment_count_notify_send_email($comment_count_notify_post_data) {
  global $base_url;
  $params = array();
  $comment_count_notify_send_mail_to = $comment_count_notify_post_data['comment_count_notify_recipent_email'];
  $comment_count_notify_mail_subject = $comment_count_notify_post_data['comment_count_notify_email_subject'];
  $comment_count_notify_mail_sender = $comment_count_notify_post_data['comment_count_notify_email_sender'];

  //mail body
  $comment_count_notify_mail_body = '';
  $comment_count_notify_mail_body .= "***Please do not reply to this mail***" . "\n\n";
  $comment_count_notify_mail_body .= "Dear Admin," . "\n\n";
  $comment_count_notify_mail_body .= "You have " . comment_count_notify_queued_comment_count() . " comments pending for approval. " . "\n\n";
  $comment_count_notify_mail_body .= "To clear the pending comment approval queue, kindly login at " . $base_url . " with your admin account and clear the comment approval queue at:";
  $comment_count_notify_mail_body .= "\n\n" . $base_url . "/admin/content/comment/approval";

  $module = "comment_count_notify";
  $comment_count_notify_mailing_key = $comment_count_notify_post_data['comment_count_notify_mailing_key'];
  $language = language_default();

  global $_paramsg_comment_count_notify_;
  $_paramsg_comment_count_notify_['comment_count_notify_mail_body'] = $comment_count_notify_mail_body;
  $_paramsg_comment_count_notify_['comment_count_notify_mail_sender'] = $comment_count_notify_mail_sender;
  $_paramsg_comment_count_notify_['comment_count_notify_mail_subject'] = $comment_count_notify_mail_subject;

  if (drupal_mail($module, $comment_count_notify_mailing_key, $comment_count_notify_send_mail_to, $language, $params, $comment_count_notify_mail_sender)) {
  }
  else {
    drupal_set_message(t('Error in comment count notification process!'), 'error');
    watchdog('comment_count_notify', 'Error sending mail', WATCHDOG_ERROR);
  }
}

/**
 * Implements hook_mail().
 */
function comment_count_notify_mail($key, &$message, $params) {
  global $_paramsg_comment_count_notify_;
  switch ($key) {
    case 'ccn_send_mail':
      $message['subject'] = $_paramsg_comment_count_notify_['comment_count_notify_mail_subject'];
      $message['body'][] = $_paramsg_comment_count_notify_['comment_count_notify_mail_body'];
      break;
  }
}

/**
 * Implements of hook_cronapi().
 */
function comment_count_notify_cronapi($op, $job=NULL) {
  switch ($op) {
    case 'list':
      return array(
         'Send comment count every '. variable_get('comment_count_notify_mail_sending_interval', '') .' hours' => 'Send periodic comment count notifications');
    case 'rule':
      if ($job=='Send comment count every 0 hours') {
        return 'Disabled';
      }
      if ($job=='Send comment count every 1 hours') {
        return '0 */1 * * *';
      }
      if ($job=='Send comment count every 3 hours') {
        return '0 */3 * * *';
      }
      if ($job=='Send comment count every 6 hours') {
        return '0 */6 * * *';
      }
      if ($job=='Send comment count every 12 hours') {
        return '0 */12 * * *';
      }
      if ($job=='Send comment count every 24 hours') {
        return '0 */23 * * *';
      }
    case 'execute':
      if ($job != 'Send comment count every 0 hours') {
        comment_count_notify();
      }
    }
}

/**
 * Get email of the administrator.
 */
function comment_count_notify_get_admin_email() {
  $comment_count_notify_get_admin_email_query = db_query("SELECT mail FROM {users} WHERE uid=1")->fetchField();
  return $comment_count_notify_get_admin_email_query;
}

/**
 * Implementation of validate function.
 */
function comment_count_notify_settings_page_validate($form, &$form_state) {
  if (!valid_email_address($form_state['values']['comment_count_notify_recipent_email'])) {
    form_set_error('', t('Please provide a valid email address in the Email field.'));
  }
  elseif (!valid_email_address($form_state['values']['comment_count_notify_email_sender'])) {
    form_set_error('', t('Please provide a valid email address in the From field'));
  }
}
