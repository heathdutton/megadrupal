<?php
/**
 * @file
 * The main file of the videopublishing module.
 */

/**
 * Callbacks
 */


/**
 * Processes video queue items.
 *
 * Updates the embed codes for the video fields.
 *
 * @param array $data
 */
function videopublishing_video_embed_codes_worker(array $queue_item) {
  VideopublishingEmbedCode::embedCodeWork($queue_item);
}


/**
 * Generic hooks.
 */

/**
 * Implements hook_menu().
 */
function videopublishing_menu() {
  return VideopublishingHooks::menu();
}

/**
 * Implements hook_permission().
 */
function videopublishing_permission() {
  return VideopublishingHooks::permission();
}

/**
 * Implements hook_theme().
 */
function videopublishing_theme() {
  return VideopublishingHooks::theme();
}

/**
 * Implements hook_cron_queue_info().
 */
function videopublishing_cron_queue_info() {
  return VideopublishingHooks::cronQueueInfo();
}


/**
 * Field Hooks.
 */

/**
 * Implements hook_field_info().
 */
function videopublishing_field_info() {
  return VideopublishingFieldHooks::info();
}

/**
 * Implements hook_field_instance_settings_form().
 */
function videopublishing_field_instance_settings_form($field, $instance) {
  return VideopublishingFieldHooks::instanceSettingsForm($field, $instance);
}

/**
 * Implements hook_field_update_instance().
 */
function videopublishing_field_update_instance($instance, $prior_instance) {
  VideopublishingFieldHooks::fieldUpdateInstance($instance, $prior_instance);
}

/**
 * Implements hook_field_presave().
 */
function videopublishing_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  VideopublishingFieldHooks::presave($entity_type, $entity, $field, $instance, $langcode, $items);
}

/**
 * Implements hook_field_is_empty().
 */
function videopublishing_field_is_empty($item, $field) {
  return VideopublishingFieldHooks::isEmpty($item, $field);
}

/**
 * Implements hook_field_widget_info().
 */
function videopublishing_field_widget_info() {
  return VideopublishingFieldHooks::widgetInfo();
}

/**
 * Implements hook_field_widget_form().
 */
function videopublishing_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  return VideopublishingFieldHooks::widgetForm($form, $form_state, $field, $instance, $langcode, $items, $delta, $element);
}

/**
 * Implements hook_field_formatter_info().
 */
function videopublishing_field_formatter_info() {
  return VideopublishingFieldHooks::formatterInfo();
}

/**
 * Implements hook_field_formatter_view().
 */
function videopublishing_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  return VideopublishingFieldHooks::formatterView($entity_type, $entity, $field, $instance, $langcode, $items, $display);
}