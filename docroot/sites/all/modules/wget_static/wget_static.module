<?php
/**
 * @file
 * Provides publish to ftp feature for homepages.
 */

/**
 * Implements hook_help().
 */
function wget_static_help($path, $arg) {
  switch ($path) {
    case 'admin/help#wget_static':
      $output = file_get_contents(drupal_get_path('module', 'wget_static') . '/README.txt');
      return $output;
  }
}

/**
 * Implements hook_cron().
 */
function wget_static_cron() {
  // Deleting temporary files.
  file_unmanaged_delete_recursive(file_directory_temp() . '/wget');
  file_unmanaged_delete(file_directory_temp() . '/wget.log');
}

/**
 * Implements hook_menu().
 */
function wget_static_menu() {
  $items = array();

  // Menu item for module configurations.
  $items['wget_static/%'] = array(
    'title' => 'Wget Static Generate and Save',
    'description' => 'Wget Static data generation and save form.',
    'page callback' => 'wget_static_page_callback',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('wget generate static'),
    'file' => 'wget_static.forms.inc',
  );
  $items['admin/config/wget_static'] = array(
    'title' => 'Wget Static',
    'description' => 'Provides configuration settings for Wget static form.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wget_static_config_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'wget_static.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function wget_static_permission() {
  return array(
    'wget generate static' => array(
      'title' => t('Use wget static'),
      'description' => t('Access to generate static HTML and download/save to remote server.'),
    ),
    'wget use supercmd' => array(
      'title' => t('Use wget command options directly'),
      'description' => t('Allow to input wget options directly as command.') . ' <em>' . t('Warning: Give to trusted roles only; this permission has security implications.') . '</em>',
    ),
  );
}
