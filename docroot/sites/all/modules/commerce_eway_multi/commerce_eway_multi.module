<?php
/**
 * @file
 * Commerce eWay Module file.
 */


/**
 * Implements hook_commerce_payment_method_info_alter().
 *
 * @param array  $payment_methods
 *   Payment method array.
 */
function commerce_eway_multi_commerce_payment_method_info_alter(&$payment_methods) {
  $payment_methods['commerce_payment_eway']['callbacks']['submit_form_submit'] = 'commerce_eway_multi_commerce_payment_method_submit_form_submit';
}

/**
 * Implements CALLBACK_commerce_payment_method_submit_form_submit().
 *
 * @param array $payment_method
 *   Payment method details.
 * @param array $pane_form
 *   Checkout pane form.
 * @param array $pane_values
 *   Checkout pane values.
 * @param commerce_order $order
 *   Commerce order object.
 * @param array $charge
 *   The amount to be charged.
 */
function commerce_eway_multi_commerce_payment_method_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {

  // Invoke our event to give the opportunity to overwrite the customer Id.
  rules_invoke_event_by_args('commerce_eway_multi_before_payment', array('commerce_order' => $order));

  // Try get the new eway customer Id.
  $new_customer_id = commerce_eway_multi_current_eway_id();

  // Overwrite the customer eway Id if was has been set by our action.
  if ($new_customer_id !== NULL) {
    $payment_method['settings']['customer_id'] = $new_customer_id;
  }

  // Call the eway payment submit.
  module_load_include('module', 'commerce_payment_eway');

  return commerce_payment_eway_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge);

}

/**
 * Keep track of current customer Id.
 *
 * We save the new customer Id statically. This is injected into the
 * payment_method['settings'] array by our event if it has been set.
 *
 * @param bool|int $eway_id
 *   new customer eway Id.
 *
 * @return int|NULL
 *   Returns null or the new customer Id.
 */
function commerce_eway_multi_current_eway_id($eway_id = FALSE) {

  static $internal_eway_id = NULL;

  if (FALSE !== $eway_id) {
    $internal_eway_id = $eway_id;
  }

  return $internal_eway_id;
}
