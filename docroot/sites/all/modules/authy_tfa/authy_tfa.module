<?php
/**
 * @file
 * Module file for Authy TFA
 */
module_load_include('inc', 'authy_tfa', 'authy_tfa.authy');

/**
 * Implements hook_menu().
 */
function authy_tfa_menu() {
  $items = array();

  $items['admin/config/people/authy_tfa'] = array(
    'title' => 'Authy Two-factor Authentication',
    'description' => 'Implementation of the Authy two-factor authentication service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('authy_tfa_admin_settings'),
    'access arguments' => array('admin authy settings'),
    'file' => 'authy_tfa.admin.inc',
  );

  $items['authy_tfa'] = array(
    'title' => 'Authy Two-factor Authentication',
    'description' => 'Implementation of the Authy two-factor authentication service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('authy_tfa_authy_form'),
    'access callback' => '_authy_tfa_access',
    'type' => MENU_CALLBACK,
    'file' => 'authy_tfa.authy.inc',
  );

  $items['authy_tfa/%/%'] = array(
    'title' => 'Request alternative code',
    'description' => 'Allow either a phone call or SMS message request.',
    'page callback' => 'authy_tfa_alternate_code',
    'page arguments' => array(1,2),
    'access callback' => '_authy_tfa_access',
    'type' => MENU_CALLBACK,
    'file' => 'authy_tfa.authy.inc',
  );

  $items['authy_tfa/cellphone'] = array(
    'title' => 'Authy Two-factor Cellphone entry',
    'description' => 'Cellphone number entry form.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('authy_tfa_cellphone_entry_form'),
    'access callback' => '_authy_tfa_access',
    'type' => MENU_CALLBACK,
    'file' => 'authy_tfa.authy.inc',
  );

  return $items;
}

/**
 * Implements hook_init().
 *
 * Redirect the user back to the authy page if they haven't given a valid
 * token.
 */
function authy_tfa_init() {
  global $user;

  if (!_authy_check_config()) {
    return FALSE;
  }

  // check to see if TFA is required.
  if ($user->uid > 0 && !isset($_SESSION['authy_tfa']) && (variable_get('authy_require_all', 0) || authy_tfa_user_require_tfa($user))) {

    if (current_path() != 'user/logout' && current_path() != 'authy_tfa' && current_path() != 'authy_tfa/cellphone') {
      drupal_goto('authy_tfa');
    }
  }
}

/**
 * Check the configuration of the authy api key.
 */
function _authy_check_config() {

  return (strlen(variable_get('authy_api_key', '')) == 32);
}

/**
 * Implements hook_permission().
 */
function authy_tfa_permission() {
  return array(
    'admin authy settings' => array(
      'title' => t('Administer Global Authy Settings.'),
    ),
    'use authy_tfa' => array(
      'title' => t('Use Authy Two-Factor Auth.'),
    ),
    'require authy_tfa' => array(
      'title' => t('Require Authy Two-Factor Auth.'),
    ),
  );
}

/**
 * Access callback for the authy_tfa form.
 */
function _authy_tfa_access() {
  global $user;

  // this can happen if the user is in the process of logging in.
  // We will check to see if there is an authy_uid set in the session.
  $account = isset($_SESSION['authy_uid']) ? user_load($_SESSION['authy_uid']) : $user;

  return (user_access('use authy_tfa', $account) || user_access('require authy_tfa', $account));
}

/**
 * Implements hook_libraries_info().
 */
function authy_tfa_libraries_info() {
  return array(
    'authy-php' => array(
      'name' => 'Authy PHP',
      'vendor url' => 'https://www.authy.com/',
      'download url' => 'https://github.com/authy/authy-php/tarball/master',
      'version arguments' => array(
        'file' => 'lib/Authy/Api.php',
        'pattern' => '@const VERSION = \'([0-9\.]+)\'@',
        'lines' => 40,
        'cols' => 30,
      ),
      'files' => array(
        'php' => array(
          'Authy.php',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_user_delete().
 *
 * Clean up this user if they are on the Authy system.
 */
function authy_tfa_user_delete($account) {
  authy_tfa_authy_user_remove($account);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter the user profile page to allow the user to turn on or off Authy
 * Two-Factor.
 */
function authy_tfa_form_user_profile_form_alter(&$form, &$form_state) {

  $authy_user = _authy_tfa_authy_get($form_state['user']->uid);

  $description = t('Authy allows for two factor authentication. <em>Authy does not allow you to change your phone number, please double check it before you submit.</em>');

  $form['#attached']['js'][] = array(
    'data' => '//cdnjs.cloudflare.com/ajax/libs/authy-forms.js/2.0/form.authy.min.js',
    'type' => 'external',
  );

  $form['#attached']['css'][] = array(
    'data' => '//cdnjs.cloudflare.com/ajax/libs/authy-forms.css/2.0/form.authy.min.css',
    'type' => 'external',
  );

  $form['authy_tfa'] = array(
    '#type' => 'fieldset',
    '#title' => t('Authy Two-Factor'),
    '#description' => $description,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['authy_tfa']['use_authy'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use Authy Two-Factor Authentication'),
    '#default_value' => isset($authy_user->use_authy) ? $authy_user->use_authy : FALSE,
  );

  $form['authy_tfa']['authy_country'] = array(
    '#type' => 'textfield',
    '#title' => t('Country Code'),
    '#description' => t('For the US or Canada this is 1'),
    '#default_value' => isset($authy_user->country_code) ? $authy_user->country_code : '',
    //'#id' => 'authy-countries',
  );

  $form['authy_tfa']['authy_cellnumber'] = array(
    '#type' => 'textfield',
    '#title' => t('Cellphone'),
    '#default_value' => isset($authy_user->cellphone) ? $authy_user->cellphone : '',
    //'#id' => 'authy-cellphone',
  );

  // handle this form.
  $form['#submit'][] = 'authy_tfa_form_user_profile_submit';
  $form['#validate'][] = 'authy_tfa_form_user_profile_validate';
}

/**
 * Implements hook_validate().
 *
 * Acts on the user profile submit to add Authy information.
 */
function authy_tfa_form_user_profile_validate(&$form, &$form_state) {

  $country_code = $form_state['values']['authy_country'];
  if (!is_numeric($country_code) || $country_code > 2420) {
    form_set_error('authy_country', 'Your country code must only contain numbers.');
  }

  $cellnumber = $form_state['values']['authy_cellnumber'];
  if (!preg_match('/^([0-9][0-9][0-9])\W*([0-9][0-9]{2})\W*([0-9]{0,5})$/', $cellnumber)) {
    form_set_error('authy_cellnumber', 'The cellnumber entered is invalid.');
  }

}

/**
 * Implements hook_submit().
 *
 * Acts on the user profile submit to add Authy information.
 */
function authy_tfa_form_user_profile_submit(&$form, &$form_state) {
  global $user;

  $use_authy = FALSE;
  $uid = -1;

  if (isset($form_state['values']['uid'])) {
    $uid = $form_state['values']['uid'];
    $use_authy = $form_state['values']['use_authy'];
  }
  else {
    $uid = $user->uid;
  }

  $country_code = $form_state['values']['authy_country'];
  $cellnumber = $form_state['values']['authy_cellnumber'];

  _authy_tfa_authy_save($uid, $use_authy, $country_code, $cellnumber);

  // if this came from the authy_tfa_cellphone_entry_form form, we need to
  // logout the user so they can validate using the authy application.
  if ($form['#form_id'] == 'authy_tfa_cellphone_entry_form') {
    // using the same functions as user_logout, but we need to set a message.
    watchdog('user', 'Session closed for %name.', array('%name' => $user->name));
    module_invoke_all('user_logout', $user);
    // Destroy the current session, and reset $user to the anonymous user.
    session_destroy();

    // restart the session so we can set messages.
    drupal_session_start();
    drupal_set_message('Your number has been saved, please login again.');
    drupal_goto('user/login');
  }
}

/**
 * Implements hook_theme().
 */
function authy_tfa_theme() {
  return array(
    'authy_form_page' => array(
      'template' => 'theme/authy_tfa',
      'render element' => 'page'
    ),
  );
}

/**
 * Allow an override to the theme page to be used for token entry form.
 */
function authy_tfa_preprocess_page(&$variables, $hook) {

  if (arg(0) == 'authy_tfa') {
    $variables['theme_hook_suggestions'][] = 'authy_form_page';
  }
}

