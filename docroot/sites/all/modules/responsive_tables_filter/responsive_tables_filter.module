<?php
/**
 * @file
 * Make tables responsive, when filter is enabled for the field.
 */

/**
 * Implements hook_filter_info().
 */
function responsive_tables_filter_filter_info() {
  $filters = array();
  $filters['tablesaw'] = array(
    'title' => t('Make tables responsive'),
    'process callback' => '_tablesaw_filter',
  );
  return $filters;
}

/**
 * Filter callback for tablesaw filter.
 */
function _tablesaw_filter($text, $filter, $format, $langcode, $cache, $cache_id) {
  // Add tablesaw classes & data-mode to the <table> element.
  return preg_replace('/<table[^>]*>/i', '<table class="tablesaw tablesaw-stack" data-tablesaw-mode="stack">', $text);
}

/**
 * Implements hook_preprocess_page().
 *
 * Adds tablesaw JS when tables present.
 */
function responsive_tables_filter_preprocess_page(&$variables) {
  if (isset($variables['node'])) {
    $formats_with_tablesaw = array();
    // Get text formats that have "tablesaw filter" enabled.
    $result = db_query('SELECT n.format FROM {filter} n WHERE n.module = :module AND n.status = 1', array(':module' => 'responsive_tables_filter'));
    foreach ($result as $record) {
      $formats_with_tablesaw[] = $record->format;
    }
    array_unique($formats_with_tablesaw);
    $node = $variables['node'];
    $field_info = field_info_instances('node', $node->type);
    $fields = array_keys($field_info);
    foreach ($fields as $field) {
      $f = $field;
      // Add the required JS only if the following 3 conditions are met:
      // (1) The field must have a text format value
      // (2) The field format must have tablesaw filter enabled
      // (3) The field value must contain '<table'.
      if (isset($node->{$f}['und'][0]['format']) && in_array($node->{$f}['und'][0]['format'], $formats_with_tablesaw) && preg_match('/<table/', $node->{$f}['und'][0]['value'])) {
        $tablesaw_path = libraries_get_path('tablesaw');
        $module_path = drupal_get_path('module', 'responsive_tables_filter');
        if (file_exists($tablesaw_path . '/dist/stackonly/tablesaw.stackonly.js') and file_exists($tablesaw_path . '/dist/tablesaw.css')) {
          drupal_add_js(libraries_get_path('tablesaw') . '/dist/stackonly/tablesaw.stackonly.js', array('scope' => 'footer', 'weight' => 30));
          drupal_add_css(libraries_get_path('tablesaw') . '/dist/tablesaw.css');
          drupal_add_css($module_path . '/theme/responsive_tables_filter.css');
        }
        else {
          global $user;
          if (is_array($user->roles) && in_array('administrator', $user->roles) or $user->uid == '1') {
            drupal_set_message(
              t('The tablesaw filter is enabled, but its library could not be found. See !readme', array(
                '!readme' => l(t('README.txt'), $module_path . '/README.txt'),
              )),
              'warning');
          }
        }
        // Quit searching once a field matching the criteria is found.
        break;
      }
    }
  }
}
