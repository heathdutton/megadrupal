<?php

/**
 * Implements hook_menu().
 */
function shopify_api_menu() {
  $items = array();
  $items['admin/config/services/shopify'] = array(
    'title' => 'Shopify API',
    'description' => 'Configure the Shopify API integration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shopify_api_admin_settings'),
    'access arguments' => array('administer shopify api'),
    'file' => 'shopify_api.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function shopify_api_permission() {
  $perms = array();
  $perms['administer shopify api'] = array(
    'title' => t('Administer Shopify API'),
  );
  return $perms;
}

/**
 * Implements hook_libraries_info().
 */
function shopify_api_libraries_info() {
  $libraries = array();
  $libraries['shopify'] = array(
    'name' => 'Shopify API',
    'vendor url' => 'http://docs.shopify.com/api/libraries/php/',
    'download url' => 'https://github.com/cmcdonaldca/ohShopify.php',
    'version' => '1.0',
    'files' => array(
      'php' => array(
        'shopify.php',
      ),
    ),
  );
  return $libraries;
}

/**
 * Create a Shopify API client class.
 *
 * @return
 *   A ShopifyClient class if all connection settings are present, otherwise
 *   NULL.
 */
function shopify_api_client() {
  // Load the library
  libraries_load('shopify');

  // Mark what is required
  $required = array('domain', 'token', 'secret', 'key');

  // Iterate the required items and fetch the data
  foreach ($required as $key) {
    // If we cannot get a value, then we cannot get a client
    if (!(${$key} = variable_get("shopify_api_{$key}", ''))) {
      return NULL;
    }
  }

  // Create the client
  return new ShopifyClient($domain, $token, $key, $secret);
}
