<?php

/**
 * Implements of hook_menu().
 */
function steroids_menu() {
  $items = array();

  $items['admin/config/development/steroids'] = array(
      'title' => 'Steroids',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('steroids_settings'),
      'access arguments' => array('administer steroids'),
      'file' => 'includes/steroids.admin.inc',
      'type' => MENU_NORMAL_ITEM,
  );

  $plugins = steroids_get_plugins_by_function('hook_menu');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_menu')) {
      $function($items);
    }
  }

  return $items;
}

/**
 * Implements hook_permission().
 */
function steroids_permission() {
  return array(
    'administer steroids' => array(
      'title' => t('Administer steroids'),
      'description' => t('Perform administration tasks for steroids.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function steroids_theme($existing, $type, $theme, $path) {
  $items = array();

  $plugins = steroids_get_plugins_by_function('hook_theme');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_theme')) {
      $items = array_merge($items, $function($existing, $type, $theme, $path));
    }
  }

  return $items;
}

/*
 * Implements hook_node_load().
 */
function steroids_node_view($node, $view_mode, $langcode) {
  $plugins = steroids_get_plugins_by_function('hook_node_view');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_node_view')) {
      $function($node);
    }
  }
}

/*
 * Implements hook_comment_insert().
 */
function steroids_comment_insert($comment) {
  $plugins = steroids_get_plugins_by_function('hook_comment_insert');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_comment_insert')) {
      $function($comment);
    }
  }
}

/*
 * Implements hook_comment_update()
 */
function steroids_comment_update($comment) {
  $plugins = steroids_get_plugins_by_function('hook_comment_update');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_comment_update')) {
      $function($comment);
    }
  }
}

/*
 * Implements hook_comment_publish()
 */
function steroids_comment_publish($comment) {
  $plugins = steroids_get_plugins_by_function('hook_comment_publish');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_comment_publish')) {
      $function($comment);
    }
  }
}

/*
 * Implements hook_comment_unpublish()
 */
function steroids_comment_unpublish($comment) {
  $plugins = steroids_get_plugins_by_function('hook_comment_unpublish');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_comment_unpublish')) {
      $function($comment);
    }
  }
}

/*
 * Implements hook_comment_delete().
 */
function steroids_comment_delete($node) {
  $plugins = steroids_get_plugins_by_function('hook_comment_delete');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_comment_delete')) {
      $function($comment);
    }
  }
}


/*
 * Implements hook_node_insert().
 */
function steroids_node_insert($node) {
  $plugins = steroids_get_plugins_by_function('hook_node_insert');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_node_insert')) {
      $function($node);
    }
  }
}

/*
 * Implements hook_node_update()
 */
function steroids_node_update($node) {
  $plugins = steroids_get_plugins_by_function('hook_node_update');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_node_update')) {
      $function($node);
    }
  }
}

/*
 * Implements hook_node_delete().
 */
function steroids_node_delete($node) {
  $plugins = steroids_get_plugins_by_function('hook_node_delete');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_node_delete')) {
      $function($node);
    }
  }
}

/*
 * Implements hook_node_revision_delete().
 */
function steroids_node_revision_delete($node) {
  $plugins = steroids_get_plugins_by_function('hook_node_revision_delete');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_node_revision_delete')) {
      $function($node);
    }
  }
}

/*
 * Implements hook_form_alter()
 */
function steroids_form_node_form_alter(&$form, &$form_state, $form_id) {
  $plugins = steroids_get_plugins_by_function('node_form_alter');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'node_form_alter')) {
      $function($form, $form_state);
    }
  }
}

/**
 * Implements hook_init().
 */
function steroids_init() {
  $plugins = steroids_get_plugins_by_function('hook_init');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_init')) {
      $function();
    }
  }
}

/*
 * Implements hook_exit().
 */
function steroids_exit() {
  $plugins = steroids_get_plugins_by_function('hook_exit');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_exit')) {
      $function();
    }
  }
}

/*
 * Implements template_preprocess_block().
 */
function steroids_preprocess_block(&$vars) {
  $plugins = steroids_get_plugins_by_function('hook_preprocess_block');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_preprocess_block')) {
      $function($vars);
    }
  }
}

/*
 * Implements hook_user_login()
 */
function steroids_user_login(&$edit, $account) {
  $plugins = steroids_get_plugins_by_function('hook_user_login');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_user_login')) {
      $function($edit, $account);
    }
  }
}

/*
 * Implements hook_user_logout()
 */
function steroids_user_logout($account) {
  $plugins = steroids_get_plugins_by_function('hook_user_logout');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_user_logout')) {
      $function($account);
    }
  }
}

/**
 * Implements hook_steroids_purge().
 */
function steroids_steroids_purge($urls, $wildcard, $hostnames) {
 $plugins = steroids_get_plugins_by_function('hook_steroids_purge');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_steroids_purge')) {
      $function($urls, $wildcard, $hostnames);
    }
  }
}

/**
 * Implements hook_steroids_cache_clear().
 */
function steroids_steroids_cache_clear() {
 $plugins = steroids_get_plugins_by_function('hook_steroids_expire_all');
  foreach ((array) $plugins as $plugin) {
    $handlers = steroids_get($plugin);
    if ($function = ctools_plugin_get_function($handlers, 'hook_steroids_expire_all')) {
      $function();
    }
  }
}

/**
 * Retreive all plugins given a specific hook or function available
 * for delegation.
 *
 * @param String $function
 *   The name of the function or hook to delegate.
 *
 * @return Array
 *   A list of plugins.
 *
 */
function steroids_get_plugins_by_function($function) {
  // Retreive the function cache.
  $registry = steroids_plugin_function_cache();

  if (isset($registry[$function]) && !empty($registry[$function])) {
    return $registry[$function];
  }

  return array();
}

/**
 * Retreive the function list of all available plugins.
 *
 * @staticvar Array $cache
 *   Reuse the cache variable when function gets called multiple times.
 *
 * @param Boolean $rebuild
 *   Rebuilds from scratch or allow fetch from cache.
 *
 * @return Array
 */
function steroids_plugin_function_cache($rebuild = FALSE) {
  static $cache;

  // Return static.
  if (!empty($cache) && !$rebuild) {
    return $cache;
  }

  // Return from cache.
  if (!$rebuild) {
    $cache = cache_get('steroids:hooks');

    if (!empty($cache->data)) {
      $cache = $cache->data;
      return $cache;
    }
  }

  $plugins = steroids_get_all();
  $cache = array();

  foreach ($plugins as $plugin_key => $plugin) {
    foreach ($plugin as $key => $value) {
      if (isset($cache[$key])) {
        $cache[$key][] = $plugin_key;
      }
      else {
        $cache[$key] = array($plugin_key);
      }
    }
  }

  cache_set('steroids:hooks', $cache);
  return $cache;
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 */
function steroids_ctools_plugin_directory($module, $type) {
  if ($module == 'steroids' && $type == 'plugins') {
    return 'plugins';
  }
}

/**
 * Implements hook_ctools_plugin_type().
 */
function steroids_ctools_plugin_type() {
  return array(
    'plugins' => array(
      'process' => 'steroids_plugin_defaults',
      'cache' => FALSE,    // @TODO set this TRUE after development!
    ),
  );
}

/**
 * Load all plugins
 */
function steroids_get_all() {
  ctools_include('plugins');
  return ctools_get_plugins('steroids', 'plugins');
}

/**
 * Load single plugin
 */
function steroids_get($plugin_name) {
  ctools_include('plugins');
  return ctools_get_plugins('steroids', 'plugins', $plugin_name);
}

/**
 * Retrieves all plugins as options
 * @param type $exclude
 * @return type
 */
function steroids_get_plugin_options($exclude = array()) {
  $plugins = steroids_get_all();
  $options = array();

  foreach((array)$plugins as $key => $plugin) {
    $options[$key] = $plugin['name'];
  }

  return $options;
}

/**
 *
 * Implements hook_ctools_plugin_api()
 * @param unknown_type $module
 * @param unknown_type $api
 */
function steroids_ctools_plugin_api($module, $api) {
  if ($module == 'steroids' && $api = 'steroids') {
    return array(
      'version' => 1,
    );
  }
}
