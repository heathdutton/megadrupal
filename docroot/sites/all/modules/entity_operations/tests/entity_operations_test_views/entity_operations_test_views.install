<?php

/**
 * @file entity_operations_test_views.install
 * Contains install hooks.
 */

/**
 * Implements hook_install().
 */
function entity_operations_test_views_install() {
  // Create a node type that we'll display in a view output as a tab on test
  // entities.
  $type = array(
    // Node types whose names end in 'node' cause trouble with hook names.
    'type' => 'entity_operations_node_test',
    'name' => st('Entity Operations Test Node Type'),
    'base' => 'node_content',
    'description' => st('Test node type for Entity Operations.'),
    'custom' => 1,
    'modified' => 1,
    'locked' => 0,
  );

  $type = node_type_set_defaults($type);
  node_type_save($type);

  // Create FieldAPI fields and instances.
  // Reference field on test nodes that points to test entities.
  $field = array(
    'field_name'  => 'field_test_test_entities',
    'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    'type'        => 'entityreference',
    'settings'    => array(
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 0,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array(),
      ),
      'profile2_private' => FALSE,
      'target_type' => 'entity_operations_test',
    ),
  );
  field_create_field($field);

  $instance = array(
    'field_name'  => 'field_test_test_entities',
    'entity_type' => 'node',
    'bundle'      => 'entity_operations_node_test',
    'label'       => 'Test entities',
    'widget'      => array(
      'type'      => 'options_buttons',
    ),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'entityreference_entity_id',
      ),
    ),
  );
  field_create_instance($instance);
}

/**
 * Implements hook_uninstall().
 */
function entity_operations_test_views_uninstall() {
  // This is not needed for tests, but useful if using this module as a demo
  // or testing manually.
  field_delete_field('field_test_test_entities');
  node_type_delete('entity_operations_node_test');
}
