<?php

/**
 * @file
 * Reroute all civicrm emails to a configurable destination.
 */

/**
 * Implements hook_menu().
 */
function civicrm_reroute_email_menu() {
  $items = array();

  $items['admin/config/development/civicrm_reroute_email'] = array(
    'title' => 'CiviCRM Reroute Email',
    'description' => 'Reroute CiviCRM emails to a specified email address.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('civicrm_reroute_email_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Admin settings form.
 */
function civicrm_reroute_email_settings() {
  $form['civicrm_reroute_email_enable'] = array(
    '#type'          => 'checkbox',
    '#title'         => t('Enable CiviCRM rerouting'),
    '#default_value' => variable_get('civicrm_reroute_email_enable', 0),
    '#description'   => t('Check this box if you want to enable CiviCRM email rerouting. Uncheck to disable rerouting.'),
  );
  $form['civicrm_reroute_email_address'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Email addresses'),
    '#default_value' => variable_get('civicrm_reroute_email_address', variable_get('site_mail')),
    '#description'   => t('Provide an email address to reroute all emails to this address.'),
    '#states' => array(
      'visible' => array(':input[name=reroute_email_enable]' => array('checked' => TRUE)),
    ),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_civicrm_alterMailParams().
 */
function civicrm_reroute_email_civicrm_altermailparams(&$params) {
  // Nothing to do if reroute is not enabled.
  if (!variable_get('civicrm_reroute_email_enable', 0)) {
    return;
  }

  $civicrm_reroute_email_address = trim(variable_get('civicrm_reroute_email_address'));

  // Nothing to do if reroute email is not set.
  if (!$civicrm_reroute_email_address) {
    return;
  }

  $actual_recipient = $params['toEmail'];

  // Set the reroute email address as the destination email.
  $params['toEmail'] = $civicrm_reroute_email_address;

  // Add the reroute information in the log.
  watchdog('civicrm_reroute_email', 'Actual recipient was: <strong>@actual_recipient</strong>.<br/>Email rerouted to <strong>@civicrm_reroute_email_address</strong>.', array(
    '@actual_recipient' => $actual_recipient,
    '@civicrm_reroute_email_address' => $civicrm_reroute_email_address,
  ));

  global $base_url;

  // Show message at the top of the rerouted email.
  $msg  = t("This email was rerouted.") . "\n";
  $msg .= t("Web site: @site", array('@site' => $base_url)) . "\n";
  $msg .= t("Rerouted to: @civicrm_reroute_email_address", array('@civicrm_reroute_email_address' => $civicrm_reroute_email_address)) . "\n";
  $msg .= t("Originally to: @actual_recipient", array('@actual_recipient' => $actual_recipient)) . "\n";
  $msg .= "==================================================\n\n";

  // Prepare the text formatted email.
  $params['text'] = $msg . $params['text'];

  // Prepare the HTML formatted email.
  $params['html'] = nl2br($msg) . $params['html'];
}
