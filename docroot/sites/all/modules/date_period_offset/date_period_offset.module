<?php

/**
 * @file
 * Offset the display of a date by a certain amount of days.
 */

/**
 * Implements hook_field_formatter_info().
 */
function date_period_offset_field_formatter_info() {
  return array(
    'date_period_offset' => array(
      'label' => t('Offset Date'),
      'field types' => array('date', 'datestamp', 'datetime'),
      'settings' => array(
        'plus_minus' => 'minus',
        'offset' => '1',
        'period' => 'day',
        'format_type' => 'long',
        'multiple_number' => '',
        'multiple_from' => '',
        'multiple_to' => '',
        'fromto' => 'both',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function date_period_offset_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = date_field_formatter_settings_form($field, $instance, $view_mode, $form, $form_state);
  $element['plus_minus'] = array(
    '#type' => 'select',
    '#title' => t('Add or Subtract'),
    '#description' => t('Choose to add or subtract the offset'),
    '#default_value' => $settings['plus_minus'],
    '#options' => array(
      'plus' => '+',
      'minus' => '-',
    ),
  );
  $element['offset'] = array(
    '#type' => 'textfield',
    '#title' => t('Offset'),
    '#description' => t('Enter the amount to offset by.'),
    '#default_value' => $settings['offset'],
  );
  $element['period'] = array(
    '#type' => 'select',
    '#title' => t('Period'),
    '#description' => t('Choose the period to offset'),
    '#default_value' => $settings['period'],
    '#options' => array(
      'seconds' => t('Second(s)'),
      'minutes' => t('Minute(s)'),
      'hours' => t('Hour(s)'),
      'days' => t('Day(s)'),
      'weeks' => t('Week(s)'),
      'months' => t('Month(s)'),
      'years' => t('Year(s)'),
    ),
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function date_period_offset_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $operator = array(
    'plus' => '+',
    'minus' => '-',
  );
  $plus_minus = $operator[$settings['plus_minus']];
  $offset = $settings['offset'];
  $period = $settings['period'];
  module_load_include('inc', 'date', 'date.field');
  $summary = date_field_formatter_settings_summary($field, $instance, $view_mode);
  $summary .= '<br>' . t('Date Offset by') . ' ' . $plus_minus . $offset . ' ' . $period;

  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function date_period_offset_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];
  $operator = array(
    'plus' => '+',
    'minus' => '-',
  );
  $plus_minus = $operator[$settings['plus_minus']];
  $offset = $settings['offset'];
  $period = $settings['period'];
  foreach ($items as $key => $item) {
    $items[$key]['value'] = date('Y-m-d h:i:s', strtotime($item['value'] . ' ' . $plus_minus . $offset . $period));
    if (isset($items[$key]['value2'])) {
      $items[$key]['value2'] = date('Y-m-d h:i:s', strtotime($item['value2'] . ' ' . $plus_minus . $offset . $period));
    }
  }

  return date_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display);
}
