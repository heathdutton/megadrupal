<?php

/**
 * @file
 * Install file for Brighttalk Channel module.
 *
 */

/**
 * Implements hook_install().
 *
 *
 * We will:
 * - Add the body field.
 * - Configure the body field.
 * - Create color, quantity, and image fields.
 * - Create color, quantity, and image instances.
 *
 * @see node_type_set_defaults()
 * @see field_info_instance()
 * @see field_update_instance()
 * @see field_create_field()
 * @see field_create_instance()
 * @ingroup node_example
 */
function brighttalkchannel_install() {
  foreach (_brighttalkchannel_installed_bundles() as $bundle) {
    _brighttalkchannel_create_bundle($bundle);
  }
  variable_set('comment_brighttalk_channel', '1');
  variable_set('node_options_brighttalk_webcast', array('promoted' => 0));
  variable_set('node_preview_brighttalk_channel', 0);
  variable_set('node_submitted_brighttalk_webcast', 0);


}
/**
 * Implements hook_uninstall().
 *
 * This hook is called when the user not only has disabled the module,
 * but also uninstalls it from the 'uninstall' tab in the module page.
 *
 * So it's a perfect time to remove our fields and instances and new
 * node type from the database.
 *
 * @ingroup node_example
 */
function brighttalkchannel_uninstall() {
  foreach (_brighttalkchannel_installed_bundles() as $bundle => $definition) {
    _brighttalkchannel_remove_content($bundle);
  }
}

/**
 *
 * @param $content_definition
 */
function _brighttalkchannel_create_bundle($bundle_definition){
  $t = get_t();
  // Complete the node type definition by setting any defaults not explicitly
  // declared above.
  // http://api.drupal.org/api/function/node_type_set_defaults/7
  $content_type = node_type_set_defaults($bundle_definition);
  //We add a body field and set the body label immediately.
  node_add_body_field($content_type, $bundle_definition['body_label']);
  // Save the content type
  node_type_save($content_type);




  // Create all the fields we are adding to our content type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_brighttalkchannel_installed_fields($bundle_definition['type']) as $field) {
    if (!field_info_field($field['field_name'])) {
     field_create_field($field);
    }
  }
  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_brighttalkchannel_installed_instances($bundle_definition['type']) as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $bundle_definition['type'];
    if (!field_info_instance($instance['entity_type'],$instance['field_name'],$instance['bundle'])) {
      field_create_instance($instance);
    }
  }
}

/**
 * Defines the bundles we want to create as
 */
function _brighttalkchannel_installed_bundles(){
  $t = get_t();
  $bundles=array();
  $bundles['brighttalk_webcast'] = array(
    'type' => 'brighttalk_webcast',
    'name' => $t('BrightTALK Webcast'),
    // 'base' tells Drupal the base string for hook functions.
    // This is often the module name; if base is set to 'mymodule', Drupal
    // would call mymodule_insert() or similar for node hooks.
    // In this case, we set base equal to 'node_content' so Drupal will handle
    // our node as if we had designed it in the UI.
    'base' => 'node_content',
    'description' => $t('An individual BrightTALK Webcast'),
    'title_label' => $t('Title'),
    'custom' => TRUE,
    // body label is used by our own code to set the label
    'body_label' => $t('Summary')
  );
  $bundles['brighttalk_channel'] = array(
    'type' => 'brighttalk_channel',
    'name' => $t('BrightTALK Channel'),
    // 'base' tells Drupal the base string for hook functions.
    // This is often the module name; if base is set to 'mymodule', Drupal
    // would call mymodule_insert() or similar for node hooks.
    // In this case, we set base equal to 'node_content' so Drupal will handle
    // our node as if we had designed it in the UI.
    'base' => 'node_content',
    'description' => $t('A BrightTALK channel, used to define a new channel feed'),
    'title_label' => $t('Title'),
    'custom' => TRUE,
    // body label is used by our own code to set the label
    'body_label' => $t('Overview'),
    'help' => $t('Note that adding a new channel can take time if the channel has a lot of content to import.')
  );
  return $bundles;
}
/**
 * Returns a structured array defining the fields created by this content type.
 *
 * This is factored into this function so it can be used in both
 * node_example_install() and node_example_uninstall().
 *
 * @return
 *  An associative array specifying the fields we wish to add to our
 *  new node type.
 *
 * @ingroup node_example
 */
function _brighttalkchannel_installed_fields($type) {
  $t = get_t();
  $types=array();
  $types['brighttalk_webcast'] = array(
    'field_bt_player' => array(
      'field_name' => 'field_bt_player',
      'cardinality' => 1,
      'type'        => 'text_long',
    ),
    'field_bt_feed_author' => array(
      'field_name' => 'field_bt_feed_author',
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 255,
      ),
    ),
    'field_bt_feed_channel_id' => array(
      'field_name' => 'field_bt_feed_channel_id',
      'type' => 'number_integer',
      'cardinality' => 1,
    ),
    'field_bt_feed_communication_id' => array(
      'field_name' => 'field_bt_feed_communication_id',
      'type' => 'number_integer',
      'cardinality' => 1,
    ),
    'field_bt_feed_duration' => array(
      'field_name' => 'field_bt_feed_duration',
      'type' => 'number_integer',
      'cardinality' => 1,
    ),
    'field_bt_feed_image' => array(
      'field_name' => 'field_bt_feed_image',
      'type' => 'image',
      'settings'=>array(),
      'cardinality' => 1,
   ),
    'field_bt_feed_slides' => array(
      'field_name' => 'field_bt_feed_slides',
      'type' => 'image',
      'settings'=>array(),
      'cardinality' => 1,
    ),
    'field_bt_feed_start' => array(
      'field_name' => 'field_bt_feed_start',
      'type' => 'datestamp',
      'cardinality' => 1,
      'settings' => array(
        'granularity' => array(
          'month' => 'month',
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'year' => 'year',
          'second' => 0,
        ),
        'tz_handling' => 'site',
        'timezone_db' => 'UTC',
        'cache_enabled' => 0,
        'cache_count' => '4',
        'todate' => '',
      ),
    ),
    'field_bt_feed_status' => array(
      'field_name' => 'field_bt_feed_status',
      'type' => 'list_text',
      'settings' => array(
        'allowed_values' => array(
          'upcoming' => 'upcoming',
          'live' => 'live',
          'recorded' => 'recorded',
        ),
      ),
      'cardinality' => 1,
    ),
    'field_bt_feed_tags' => array(
      'field_name' => 'field_bt_feed_tags',
      'type' => 'taxonomy_term_reference',
       'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'tags',
            'parent' => 0,
          ),
        ),
      ),
      'cardinality' => 1,
    ),
    'field_bt_feed_webcast_url' => array(
      'field_name' => 'field_bt_feed_webcast_url',
      'type' => 'link_field',
       'settings' => array(
        'attributes' => array(
          'target' => 'default',
          'class' => '',
          'rel' => '',
        ),
        'url' => 0,
        'title' => 'optional',
        'title_value' => '',
        'title_maxlength' => 128,
        'enable_tokens' => 1,
        'display' => array(
          'url_cutoff' => 80,
        ),
      ),
      'cardinality' => 1,
    ),
  );
  $types['brighttalk_channel'] = array(
    'field_bt_channel_id' => array(
      'field_name' => 'field_bt_channel_id',
      'type' => 'number_integer',
      'cardinality' => 1,
    ),
    'field_bt_channel_title' => array(
      'field_name' => 'field_bt_channel_title',
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 255,
      ),
    ),
    'field_bt_channel_description' => array(
      'field_name' => 'field_bt_channel_description',
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 255,
      ),
    ),
    'field_bt_channel_link' => array(
      'field_name' => 'field_bt_channel_link',
      'type' => 'link_field',
       'settings' => array(
        'attributes' => array(
          'target' => 'default',
          'class' => '',
          'rel' => '',
        ),
        'url' => 0,
        'title' => 'none',
        'title_value' => '',
        'title_maxlength' => 128,
        'enable_tokens' => 1,
        'display' => array(
          'url_cutoff' => 80,
        ),
      ),
      'cardinality' => 1,
    )
  );

  return $types[$type];
}

/**
 * Returns a structured array defining the instances for this content type.
 *
 * @return
 *  An associative array specifying the instances we wish to add to our new
 *  node type.
 *
 * @ingroup node_example
 */
function _brighttalkchannel_installed_instances($type) {
  $t = get_t();
  $instances=array();
  $instances['brighttalk_webcast'] = array(
    'field_bt_feed_author' => array(
      'field_name' => 'field_bt_feed_author',
      'label'       => $t('Author'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
        ),
      ),
    ),
    'field_bt_feed_channel_id' => array(
      'field_name' => 'field_bt_feed_channel_id',
      'label'       => $t('Channel ID'),
      'widget'      => array(
        'type'      => 'number',
        'weight'    => '2',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'number_unformatted'
        ),
      ),
    ),
    'field_bt_feed_communication_id' => array(
      'field_name' => 'field_bt_feed_communication_id',
      'label'       => $t('Communication ID'),
      'widget'      => array(
        'type'      => 'number',
        'weight'    => '1',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'number_unformatted'
        ),
      ),
    ),
    'field_bt_feed_duration' => array(
      'field_name' => 'field_bt_feed_duration',
      'label'       => $t('Duration'),
      'widget'      => array(
        'type'      => 'number',
        'weight'    => '8',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'number_unformatted'
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'number_unformatted'
        ),
      ),
    ),
    'field_bt_feed_image' => array(
      'field_name' => 'field_bt_feed_image',
      'label'       => $t('Image URL'),
      'widget'      => array(
        'type'      => 'image_image',
        'weight'    => '0',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
          'weight' => '1',
            'settings' => array(
              'image_style' => '',
              'image_link' => '',
            ),
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'image',
          'weight' => '1',
            'settings' => array(
              'image_style' => '',
              'image_link' => '',
            ),
        ),
      ),
    ),
    'field_bt_feed_slides' => array(
      'field_name' => 'field_bt_feed_slides',
      'label'       => $t('Slide URL'),
      'widget'      => array(
        'type'      => 'image_image',
        'weight'    => '5',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
          'weight' => '5',
            'settings' => array(
              'image_style' => '',
              'image_link' => '',
            ),
        ),
      ),
    ),
    'field_bt_feed_start' => array(
      'field_name' => 'field_bt_feed_start',
      'label'       => $t('Start'),
      'widget'      => array(
        'type'      => 'date_select',
        'weight'    => '6',
        'settings' => array(
            'input_format' => 'm/d/Y - H:i:s',
            'input_format_custom' => '',
            'increment' => 15,
            'text_parts' => array(),
            'year_range' => '-3:+3',
            'label_position' => 'above',
          ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline',
          'type' => 'date_default',
          'weight' => '1',
            'settings' => array(
               'format_type' => 'long',
            ),
        ),
        'teaser' => array(
          'label' => 'inline',
          'type' => 'date_default',
          'weight' => '1',
            'settings' => array(
               'format_type' => 'long',
            ),
        ),
      ),
    ),
    'field_bt_feed_status' => array(
      'field_name' => 'field_bt_feed_status',
      'label'       => $t('Status'),
      'widget'      => array(
        'type'    => 'options_select',
        'weight'    => '7'
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline',
        ),
      ),
    ),
    'field_bt_feed_tags' => array(
      'field_name' => 'field_bt_feed_tags',
      'label'       => $t('Tags'),
      'widget'      => array(
        'type'    => 'taxonomy_autocomplete',
        'weight'    => '-2',
        'settings' => array(
            'size' => 60,
            'autocomplete_path' => 'taxonomy/autocomplete',
          ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline',
          'type' => 'taxonomy_term_reference_link',
          'weight' => 6,
        ),
      ),
    ),
    'field_bt_player' => array(
      'field_name' => 'field_bt_player',
      'label'       => $t('Player'),
      'widget'      => array(
        'type'    => 'text_textarea',
        'settings' => array(
          'rows' => '5',
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'weight'    => '4',
        ),
      ),
    ),
    'field_bt_feed_webcast_url' => array(
      'field_name' => 'field_bt_feed_webcast_url',
      'label'       => $t('Url'),
      'widget'      => array(
        'type'    => 'link_field',
        'weight'    => '4',
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline',
          'type' => 'link_url',
          'weight' => 4,
        ),
      ),
    ),
  );


  $instances['brighttalk_channel'] = array(
    'field_bt_channel_id' => array(
      'field_name' => 'field_bt_channel_id',
      'label'       => $t('Channel ID'),
      'widget'      => array(
        'type'      => 'number',
        'weight'    => '2',
        'description' => $t('This field is set automatically. '),
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline',
        ),
      ),
    ),

    'field_bt_channel_link' => array(
      'field_name' => 'field_bt_channel_link',
      'label'       => $t('Channel homepage'),
      'widget'      => array(
        'type'    => 'link_field',
        'weight'    => '4',
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline',
          'type' => 'link_url',
          'weight' => 4,
        ),
      ),

      'settings' => array(
        'validate_url' => 1,
        'url' => 0,
        'title' => 'none',
        'title_value' => '',
        'title_maxlength' => '128',
        'display' => array(
          'url_cutoff' => '80',
        ),
        'attributes' => array(
          'target' => 'default',
          'rel' => '',
          'class' => '',
          'configurable_title' => 0,
          'title' => '',
        ),
      ),

    ),
    'field_bt_channel_description' => array(
      'field_name' => 'field_bt_channel_description',
      'label'       => $t('Channel description'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline',
        ),
      ),
    ),
    'field_bt_channel_title' => array(
      'field_name' => 'field_bt_channel_title',
      'label'       => $t('Channel Title'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
        ),
      ),
    ),

  );
  // If the hidden_field module exists, use it to hide the channel field
  //if (module_exists('hidden_field')) {
  //  $instances['brighttalk_channel']['field_brughttalk_feed_channel_id']['widget']['type'] = 'hidden_hidden';
  //}

  return $instances[$type];
}


/**
 * Removes all content and definitions for a specified bundle
 * @param string $content_type
 */
function _brighttalkchannel_remove_content($bundle){
  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  // http://api.drupal.org/api/function/db_query/7
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => $bundle));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  // http://api.drupal.org/api/function/node_delete_multiple/7
  node_delete_multiple($nids);

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  // http://api.drupal.org/api/function/field_delete_field/7
  foreach (array_keys(_brighttalkchannel_installed_fields($bundle)) as $field) {
    field_delete_field($field);
  }

  // Loop over any remaining field instances attached to the node_example
  // content type (such as the body field) and delete them individually.
  // http://api.drupal.org/api/function/field_delete_field/7
  $instances = field_info_instances('node', $bundle);
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete our content type
  // http://api.drupal.org/api/function/node_type_delete/7
  node_type_delete($bundle);

  // Purge all field infromation
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
}
