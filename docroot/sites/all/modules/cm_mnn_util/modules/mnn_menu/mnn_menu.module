<?php
/**
 * @file
 * Code for generating custom menu pages for MNN 
 */
 

/**
 * Implements hook_menu().
 */
function mnn_menu_menu() {
  $i = 0;
  //PROGRAMMING MENU ITEMS
  $projects_menu_block = 
    array(
	  array('title'=>t('Manage Projects'),
		'menu_alias'=>'manage',
		'path'=>'admin/projects/manage'),
	  array('title'=>t('Add Project'),
		'menu_alias'=>'add',
		'path'=>'node/add/cm-project'),
	  array('title'=>t('Labels and Letters'),
		'menu_alias'=>'pdfs',
		'path'=>'admin/projects/pdfs'),
	  array('title'=>t('Active Series Spreadsheet'),
		'menu_alias'=>'spreadsheet',
		'path'=>'active_series_dl'),
	  );
    $scheduling_menu_block = 
    array(
	  array('title'=>t('Scheduling Grid'),
		'menu_alias'=>'grid',
		'path'=>'admin/manage/scheduling'),
	  array('title'=>t('Scheduling Grid (Series)'),
		'menu_alias'=>'grid-series',
		'path'=>'admin/manage/scheduling/1/0/6/filter_end'),
	  array('title'=>t('Find Airing'),
		'menu_alias'=>'find',
		'path'=>'admin/airings/search'),
	  //array('title'=>t('Add Airing'),
	  //  'menu_alias'=>'add',
	  //  'path'=>'airing/add'),
	  array('title'=>t('Quarterly Replication/Scheduling'),
		'menu_alias'=>'quarterly-scheduling',
		'path'=>'admin/airings/quarterly-scheduling'),
    );
    $producers_menu_block = 
    array(
	  array('title'=>t('Find Producer'),
		'menu_alias'=>'find',
		'path'=>'admin/people/search-advanced'),
	  array('title'=>t('Add Producer'),
		'menu_alias'=>'add',
		'path'=>'admin/people/create'),
    );
    $show_menu_block = 
    array(
	  array('title'=>t('Find Show/Tape'),
		'menu_alias'=>'find',
		'path'=>'admin/shows/manage'),
	  array('title'=>t('Add Show/Tape'),
		'menu_alias'=>'add',
		'path'=>'node/add/cm-show'),
    );

    $reservations_block = 
    array(
	  array('title'=>t('Studio Chart'),
		'menu_alias'=>'studio-chart',
		'path'=>'admin/reservations/manage/chart/studio-chart'),
	  array('title'=>t('Find Reservation'),
		'menu_alias'=>'find',
		'path'=>'admin/reservations/manage/search'),
	  array('title'=>t('Add 59th Reservation'),
		'menu_alias'=>'add-59th-reservation',
		'path'=>'node/add/reservations-reservation/inventory/804'),
	  array('title'=>t('Add Firehouse Reservation'),
		'menu_alias'=>'add-firehouse-reservations',
		'path'=>'node/add/reservations-reservation/inventory/1043'),
    );

    $exports_block = 
    array(
	  array('title'=>t('Media Load Log'),
		'menu_alias'=>'load-log',
		'path'=>'admin/shows/load-log'),
	  array('title'=>t('Required Media Log'),
		'menu_alias'=>'required-log',
		'path'=>'admin/shows/required-log'),
	  array('title'=>t('Probel/Morpheus XML'),
		'menu_alias'=>'probel-morpheus-xml',
		'path'=>'admin/shows/probel-morpheus-xml'),
	  array('title'=>t('Weekly TV Guide'),
		'menu_alias'=>'tvguide',
		'path'=>'admin/shows/tvguide'),
    );

  //permissions arrays for the menu items, need one for each menu page
  $permissions = array('Programming' => array('view airing grid'));
		       

  //BUILD LARGE DATA ARRAY CONTAINING ALL OF THE MENU ITEMS
  $menus = 
    array(
	  //THE MAIN PROGRAMMING ADMIN MENU PAGE
	  'Programming' =>
	  array(
		t('Scheduling') => $scheduling_menu_block,
		t('Shows/Tapes') => $show_menu_block,
		t('Exports') => $exports_block,
		t('Reservations') => $reservations_block,
		t('Producers') => $producers_menu_block,
		t('Projects') => $projects_menu_block,

		)
	  );

  //LOOP THROUGH ARRAY, BUILDING MENU ITEMS
  $menu_weight = 0;
  foreach ($menus as $menu_title=>$menu_page) {
    $menu_path = "admin/".strtolower(str_replace(' ', '-', $menu_title));
    $menu_weight++;
    //THE MENU ITEM FOR THE PARTICULAR MENU PAGE
    $items[$menu_path] = array(
			       'title' => $menu_title,
			       'description' => $menu_title,
			       'page callback' => 'mnn_menu_management_page',
			       'page arguments' => array($menu_path),
			       'access arguments' => $permissions[$menu_title],
			       'weight'=>$menu_weight,
			       );
    $block_weight = 0;
    $block_count = count($menu_page);
    foreach($menu_page as $block_title => $menu_block) {
      $block_path = strtolower(str_replace(' ', '-', $block_title));
      $block_weight++;
      $position = ($block_weight<=round($block_count/2)) ? 'left' : 'right';
      // ADDS A BLOCK OF MENU ITEMS FOR EACH SECTION ON THE PAGE
      $items[$menu_path.'/'.$block_path] = 
	array(
	      'title' => $block_title,
	      'position' => $position,
	      'page callback' => 'system_admin_menu_block_page',
	      'access arguments' => $permissions[$menu_title],
	      'file' => 'system.admin.inc',
	      'file path' => drupal_get_path('module', 'system'),
	      'weight' => $block_weight,
	      );
      $item_weight=0;
      foreach($menu_block as $menu_item) {
	$item_weight++;
	$item_alias = $menu_item['menu_alias'];
	$items[$menu_path."/".$block_path."/".$item_alias] = 
	  array(
		'title' => $menu_item['title'],
		'page callback' => 'mnn_menu_alias_callback',
		'page arguments' => array($menu_item['path']),
		'access arguments' => $permissions[$menu_title],
		'type' => MENU_NORMAL_ITEM,
		'weight' => $item_weight,
		);
      }
    }
  }  
  return $items;
}

function mnn_menu_alias_callback($path) {
  drupal_goto($path);
}


/**
 * Menu callback; Provide the administration overview page.
 */
function mnn_menu_management_page($path) {
  $blocks = array();

  $sql = "SELECT menu_name, mlid 
          FROM {menu_links} 
          WHERE link_path = '$path'";

  $db_result = db_query($sql);

  $menu_info = $db_result->fetchAssoc();

  if ($menu_info) {
    $menu_name = $menu_info['menu_name'];
    $mlid = $menu_info['mlid'];
    $result = db_query("
      SELECT m.*, ml.*
      FROM {menu_links} ml
      INNER JOIN {menu_router} m ON ml.router_path = m.path
      WHERE ml.link_path <> 'admin/help' 
      AND menu_name = '$menu_name' 
      AND ml.plid = $mlid
      AND hidden = 0", array(), array('fetch' => PDO::FETCH_ASSOC));

    foreach ($result as $item) {
      _menu_link_translate($item);
      if (!$item['access']) {
        continue;
      }
      // The link description, either derived from 'description' in hook_menu()
      // or customized via menu module is used as title attribute.
      if (!empty($item['localized_options']['attributes']['title'])) {
        $item['description'] = 
	  $item['localized_options']['attributes']['title'];
        unset($item['localized_options']['attributes']['title']);
      }
      $block = $item;
      $block['content'] = '';
      $block['content'] .= 
	theme('admin_block_content', 
	      array('content' => system_admin_menu_block($item)));

      if (!empty($block['content'])) {
        $block['show'] = TRUE;
      }

      // Prepare for sorting as in function _menu_tree_check_access().
      // The weight is offset so it is always positive, with a uniform 5-digits.
      $blocks[(50000 + $item['weight']) . ' ' . $item['title'] . ' ' . 
	      $item['mlid']] = $block;
    }
  }
  if ($blocks) {
    ksort($blocks);
    return theme('admin_page', array('blocks' => $blocks));
  }
  else {
    return t('You do not have any administrative items.');
  }
}

function mnn_menu_user_view_alter(&$build) {
  $start_string = '<span class="user-page-link" id="user-page-profile-Cer" >';
  $end_string = "Edit Certifications</a></span>";

  if (isset($build['Certifications'])) {
    $html = $build['Certifications']['Certifications']['#value'];
    $start = strpos($html, $start_string);
    $end = strpos($html, $end_string) + strlen($end_string);
    $html = substr($html, 0, $start);
    $build['Certifications']['Certifications']['#value'] = $html;



    $html = $build['Certifications']['Certifications']['#markup'];
    $start = strpos($html, $start_string);
    $end = strpos($html, $end_string) + strlen($end_string);
    $html = substr($html, 0, $start);
    $build['Certifications']['Certifications']['#markup'] = $html;
  }
}