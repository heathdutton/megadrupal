<?php
/**
 * @file
 * Install and update hooks for Beid Mellon Auth module.
 */

/**
 * Implements hook_install().
 */
function beidmellon_auth_install() {
  _beidmellon_auth_setup_fields();
}

/**
 * Implements hook_update().
 */
function beidmellon_auth_update_7001() {
  _beidmellon_auth_setup_fields();
}

/**
 * Set up user fields to be used by this module.
 */
function _beidmellon_auth_setup_fields() {
  // Check if our field is not already created.
  if (!field_info_field('field_fedid')) {
    field_info_cache_clear();
    $field = array(
      'translatable' => 0,
      'locked' => 1,
      'type' => 'beidmellon_fedid',
      'module' => 'beidmellon_fedid',
      'field_name' => 'field_fedid',
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_fedid',
      'entity_type' => 'user',
      'label' => 'Belgian FedID',
      'description' => 'Belgian FedID (hashed).',
      'type' => 'beidmellon_fedid',
      'module' => 'beidmellon_fedid',
      'bundle' => 'user',
      'required' => 0,
      'settings' => array(
        'user_register_form' => 0,
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '1',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'settings' => array(),
          'weight' => 1,
          'type' => 'hidden',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'settings' => array(),
          'type' => 'hidden',
        ),
      ),
    );
    field_create_instance($instance);
  }

  // Check if our field is not already created.
  if (!field_info_field('field_eid_surname')) {
    field_info_cache_clear();
    $field = array(
      'translatable' => 0,
      'locked' => 1,
      'type' => 'text',
      'field_name' => 'field_eid_surname',
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_eid_surname',
      'entity_type' => 'user',
      'label' => 'e-ID Surname',
      'description' => 'Original surname as returned by identity provider at time of registration.',
      'bundle' => 'user',
      'required' => 0,
      'settings' => array(
        'user_register_form' => 0,
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '1',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'settings' => array(),
          'weight' => 1,
          'type' => 'hidden',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'settings' => array(),
          'type' => 'hidden',
        ),
      ),
    );
    field_create_instance($instance);
  }

  if (!field_info_field('field_eid_given_name')) {
    field_info_cache_clear();
    $field = array(
      'translatable' => 0,
      'locked' => 1,
      'type' => 'text',
      'field_name' => 'field_eid_given_name',
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_eid_given_name',
      'entity_type' => 'user',
      'label' => 'e-ID Given name',
      'description' => 'Original given name as returned by identity provider at time of registration.',
      'bundle' => 'user',
      'required' => 0,
      'settings' => array(
        'user_register_form' => 0,
      ),
      'widget' => array(
        'type' => 'textfield',
        'weight' => '1',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'settings' => array(),
          'weight' => 1,
          'type' => 'hidden',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'settings' => array(),
          'type' => 'hidden',
        ),
      ),
    );
    field_create_instance($instance);
  }
}
