<?php

/**
 * @file
 * Tests Bronto API and Rules integration.
 */

/**
 * Tests Rules integration for Bronto API.
 */
class BrontoAPIRulesIntegrationTest extends DrupalWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Rules Integration Test',
      'description' => 'Tests Rules Integration with Bronto.',
      'group' => 'Bronto',
    );
  }

  /**
   * Sets up the test environment for Simpletest.
   */
  public function setUp() {
    parent::setUp(array(
      'brontoapi',
      'rules',
      'brontoapi_rules',
        )
    );
  }

  /**
   * Creates a rules action and executes the rules action programmatically.
   */
  public function testBrontoRulesIntegration() {
    global $conf;
    $brontoapi_token = $conf['brontoapi_token'];
    variable_set("brontoapi_token", $brontoapi_token);
    $brontoapi_msg_id = $conf['brontoapi_msg_id'];
    variable_set("brontoapi_msg_id", $brontoapi_msg_id);
    $email = $email;
    variable_set("brontoapi_default_from", $email);
    variable_set("brontoapi_default_from_name", "Developer");

    $action = rules_action('brontoapi_rules_send_to_message');

    $action->execute(variable_get("brontoapi_msg_id"), $email, array());
  }

}

/**
 * Test replacing a Bronto API tag with a field value in a Bronto API message.
 */
class BrontoAPIRulesReplaceFieldsTest extends DrupalWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Rules Replace Test',
      'description' => 'Tests Rules Replacement Rule with Bronto API.',
      'group' => 'Bronto',
    );
  }

  /**
   * Sets up the test environment for Simpletest.
   */
  public function setUp() {
    parent::setUp(array(
      'brontoapi',
      'rules',
      'brontoapi_rules',
        )
    );
  }

  /**
   * Creates a rules action and executes the rules action programmatically.
   */
  public function testBrontoRulesFieldReplace() {
    global $conf;
    $brontoapi_token = $conf['brontoapi_token'];
    variable_set("brontoapi_token", $brontoapi_token);
    $brontoapi_msg_id = $conf['brontoapi_msg_id'];
    $brontoapi_test_field = $conf['brontoapi_test_field'];
    variable_set("brontoapi_test_field", $brontoapi_test_field);
    variable_set("brontoapi_msg_id", $brontoapi_msg_id);
    $email = $email;
    variable_set("brontoapi_default_from", $email);
    variable_set("brontoapi_default_from_name", "Developer");

    $action_field_replace = rules_action("brontoapi_rules_replace");

    $item = $action_field_replace->execute(variable_get("brontoapi_test_field"), "html");

    $action_send_message = rules_action('brontoapi_rules_send_to_message');

    $action_send_message->execute(variable_get("brontoapi_msg_id"), $email, $item);
  }

}

/**
 * Test replacing a Bronto API tag with a value in a Bronto API message.
 */
class BrontoAPIRulesReplaceTagTest extends DrupalWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Rules Replace Tag',
      'description' => 'Tests Rules Replacement Rule with Bronto API.',
      'group' => 'Bronto',
    );
  }

  /**
   * Sets up the test environment for Simpletest.
   */
  public function setUp() {
    parent::setUp(array(
      'brontoapi',
      'rules',
      'brontoapi_rules',
        )
    );
  }

  /**
   * Creates a rules action and executes the rules action programmatically.
   */
  public function testBrontoRulesTagReplace() {
    global $conf;
    $brontoapi_token = $conf['brontoapi_token'];
    variable_set("brontoapi_token", $brontoapi_token);
    $brontoapi_msg_id = $conf['brontoapi_msg_id'];
    $brontoapi_test_string = $conf['brontoapi_test_string'];
    variable_set("brontoapi_test_string", $brontoapi_test_string);
    variable_set("brontoapi_msg_id", $brontoapi_msg_id);
    $email = $email;
    variable_set("brontoapi_default_from", $email);
    variable_set("brontoapi_default_from_name", "Developer");

    $action_string_replace = rules_action("brontoapi_rules_replace_string");

    $action_string_replace->execute(variable_get("brontoapi_test_string"), "html", "Test String Here");

    // If $action_string_replace provided a return, this is how it looks.
    $item = array(array(
        "name" => variable_get("brontoapi_test_string"),
        "type" => "html",
        "content" => "Test String Here",
      ),
    );

    $action_send_message = rules_action('brontoapi_rules_send_to_message');

    $action_send_message->execute(variable_get("brontoapi_msg_id"), $email, $item);
  }

}
