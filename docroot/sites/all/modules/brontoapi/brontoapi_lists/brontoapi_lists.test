<?php

/**
 * @file
 * Tests Bronto API Lists.
 */

/**
 * Parent class for any tests which only require
 * brontoapi and brontoapi_list module to function.
 * Carries crucial variables over to the testing environment.
 */
class BrontoListWebTestCase extends DrupalWebTestCase {
  /**
   * Sets up the test environment for Simpletest.
   */
  public function setUp() {
    $brontoapi_token = variable_get('brontoapi_token', '');
    $site_mail = variable_get('site_mail', ini_get('sendmail_from'));
    $brontoapi_list = variable_get('brontoapi_list', '');

    parent::setUp(
      array(
        'brontoapi',
        'brontoapi_lists',
      )
    );

    variable_set('brontoapi_token', $brontoapi_token);
    variable_set('site_mail', $site_mail);
    variable_set('brontoapi_list', $brontoapi_list);
  }

}


/**
 * Tests reading lists from Bronto API.
 */
class BrontoAPIReadListTest extends BrontoListWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Read List Test',
      'description' => 'Tests reading lists for Bronto API.',
      'group' => 'Bronto',
    );
  }

  /**
   * Reads a list.
   */
  public function testBrontoReadLists() {
    $res = brontoapi_lists_read_lists();
    $message = "Tested reading Bronto API lists.";
    $this->assertTrue($res, $message, "Bronto");
  }

}

/**
 * Tests adding a contact to a list.
 */
class BrontoAPIAddContactToListTest extends BrontoListWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API adds a contact to a list',
      'description' => 'Tests adding contacts to lists for Bronto API.',
      'group' => 'Bronto',
    );
  }

  /**
   * Adds an email to a list.
   */
  public function testAddContactToLists() {
    $email = variable_get('site_mail', ini_get('sendmail_from'));
    $lists = variable_get('brontoapi_list', '');

    $res = brontoapi_lists_add_to_lists($email, $lists);
    $message = "Tested adding contacts to lists.";
    $this->assertFalse($res->results->isError, $message, "Bronto");

    $contact = brontoapi_get_contact_obj($email, TRUE);
    $success = TRUE;
    if (!is_array($lists)) {
      $lists = array($lists);
    }
    if (!isset($contact->listIds)) {
      $contact->listIds = array();
    }
    elseif (!is_array($contact->listIds)) {
      $contact->listIds = array($contact->listIds);
    }
    foreach ($lists as $list) {
      if (!in_array($list, $contact->listIds)) {
        $success = FALSE;
      }
    }
    $message = "Tested whether the lists actually made it into the contact.";
    $this->assertTrue($success, $message, "Bronto");
  }

}

/**
 * Tests removing a contact from a list.
 */
class BrontoAPIRemoveContactFromListTest extends BrontoListWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API remove contact from list',
      'description' => 'Tests removing contacts from lists for Bronto API.',
      'group' => 'Bronto',
    );
  }

  /**
   * Remove an email from a list.
   */
  public function testBrontoUpdateLists() {
    $email = variable_get('site_mail', ini_get('sendmail_from'));
    $lists = variable_get('brontoapi_list', '');

    // Add the lists so we can remove them.
    brontoapi_lists_add_to_lists($email, $lists);

    $res = brontoapi_lists_remove_from_lists($email, $lists);
    $message = "Tested updating contact's list information.";
    $this->assertFalse($res->results->isError, $message, "Bronto");

    $contact = brontoapi_get_contact_obj($email, TRUE);
    $success = TRUE;
    if (!is_array($lists)) {
      $lists = array($lists);
    }
    if (!isset($contact->listIds)) {
      $contact->listIds = array();
    }
    elseif (!is_array($contact->listIds)) {
      $contact->listIds = array($contact->listIds);
    }
    foreach ($lists as $list) {
      if (in_array($list, $contact->listIds)) {
        $success = FALSE;
      }
    }
    $message = "Tested whether the lists were actually removed from the contact.";
    $this->assertTrue($success, $message, "Bronto");
  }

}

/**
 * Test to create new block.
 */
class BrontoAPICreateBlockTest extends BrontoListWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Creates a block for list sign-up',
      'description' => 'Tests creating a block.',
      'group' => 'Bronto',
    );
  }

  /**
   * Creates block.
   */
  public function testBrontoCreateBlock() {
    $brontoapi_block = $conf['brontoapi_block'];
    $form = brontoapi_lists_block_view($brontoapi_block);

    $this->assertTrue($form, "Form received");
  }

}

/**
 * Test to create rules action.
 */
class BrontoAPICreateRulesActionTest extends DrupalWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Creates a rules action for sign-up',
      'description' => 'Tests creating a rules action.',
      'group' => 'Bronto',
    );
  }

  /**
   * Sets up the test environment for Simpletest.
   */
  public function setUp() {
    $brontoapi_token = variable_get('brontoapi_token', '');
    $site_mail = variable_get('site_mail', ini_get('sendmail_from'));
    $brontoapi_list = variable_get('brontoapi_list', '');

    parent::setUp(
      array(
        'brontoapi',
        'brontoapi_lists',
        'rules',
      )
    );

    variable_set('brontoapi_token', $brontoapi_token);
    variable_set('site_mail', $site_mail);
    variable_set('brontoapi_list', $brontoapi_list);
  }

  /**
   * Creates handler.
   */
  public function testBrontoCreateSignupRulesAction() {
    $email = variable_get('site_mail', ini_get('sendmail_from'));
    $brontoapi_list = variable_get('brontoapi_list', '');
    $action = rules_action('brontoapi_lists_rules_signup');

    $action->execute($email, $brontoapi_list);
    // Assert something here.
  }

}

/**
 * Test to create webform component.
 */
class BrontoAPICreateWebformComponentTest extends DrupalWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Creates a webform component',
      'description' => 'Tests creating a Webform component.',
      'group' => 'Bronto',
    );
  }

  /**
   * Sets up the test environment for Simpletest.
   */
  public function setUp() {
    $brontoapi_token = variable_get('brontoapi_token', '');
    $site_mail = variable_get('site_mail', ini_get('sendmail_from'));
    $brontoapi_list = variable_get('brontoapi_list', '');

    parent::setUp(array(
      'brontoapi',
      'brontoapi_lists',
      'webform',
        )
    );

    variable_set('brontoapi_token', $brontoapi_token);
    variable_set('site_mail', $site_mail);
    variable_set('brontoapi_list', $brontoapi_list);
    variable_set("webform_" . $brontoapi_list, 1);
  }

  /**
   * Creates Webform component and returns it.
   */
  public function testBrontoCreateWebformComponent() {
    $this->_webform_components = array(
      'brontoapi_list' => array(
        'name' => '',
        'form_key' => NULL,
        'required' => 0,
        'pid' => 0,
        'weight' => 0,
        'extra' => array(
          'description' => '',
          'brontoapi_list' => '',
        ),
      ),
    );
    $this->assertTrue($this->_webform_components, "Webform component created.");
    return $this->_webform_components;

  }

}
