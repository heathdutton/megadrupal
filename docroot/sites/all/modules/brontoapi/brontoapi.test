<?php
/**
 * @file
 * Tests Bronto API functionality.
 */

/**
 * Parent class for any tests which only require brontoapi module to function.
 * Carries crucial variables over to the testing environment.
 */
class BrontoWebTestCase extends DrupalWebTestCase {
  /**
   * Sets up the test environment for Simpletest.
   */
  public function setUp() {
    $brontoapi_token = variable_get('brontoapi_token', '');
    $site_mail = variable_get('site_mail', ini_get('sendmail_from'));

    parent::setUp(array('brontoapi'));

    variable_set('brontoapi_token', $brontoapi_token);
    variable_set('site_mail', $site_mail);
  }
}

/**
 * TestCase tests
 */

/**
 * This class tests whether Bronto API can create a Bronto session successfully.
 */
class BrontoAPITestAPISession extends BrontoWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Test Session',
      'description' => 'Bronto API Test Session.',
      'group' => 'Bronto',
    );
  }

  /**
   * Tests the Bronto API session.
   */
  public function testBrontoSession() {
    $result = brontoapi_session();
    $message = "Tested creating Bronto API Session.";
    $this->assertTrue($result, $message, "Bronto");
  }

}

/**
 * Tests executing a sample command in Bronto API.
 */
class BrontoAPITestExec extends BrontoWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Test Exec',
      'description' => 'Bronto API Test Exec.',
      'group' => 'Bronto',
    );
  }

  /**
   * Tests the brontoapi_exec_all() & brontoapi_exec() functions.
   */
  public function testBrontoExec() {
    $email = variable_get('site_mail', ini_get('sendmail_from'));
    $result = brontoapi_exec_all('readContacts', array(
      'filter' => array(
        'email' => array(
          'value' => $email,
          'operator' => 'EqualTo',
        ),
      ),
        )
    );
    $message = "Tested executing Bronto API Session.";
    $this->assertTrue($result, $message, "Bronto");
  }

}

/**
 * Bronto API adds email test.
 */
class BrontoAPIAddEmail extends BrontoWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Add Email',
      'description' => 'Bronto API Adds Email VIA API.',
      'group' => 'Bronto',
    );
  }

  /**
   * Adds an email to the contacts of Bronto API.
   */
  public function testBrontoAddEmail() {
    $email = variable_get('site_mail', ini_get('sendmail_from'));
    $result = brontoapi_add_email($email);
    $message = "Tested executing Bronto API Add Email.";
    $this->assertTrue($result, $message, "Bronto");
  }

}

/**
 * Sends a list of test messages based on every type of message id.
 */
class BrontoAPISendTestMessages extends BrontoWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Test Messages',
      'description' => "Sends a message of every type to new Bronto Contacts.",
      'group' => 'Bronto',
    );
  }

  /**
   * Sends the test messages for every type of message id.
   */
  public function testBrontoAPISendTestMessages() {
    variable_set("brontoapi_default_from", variable_get('site_mail', ini_get('sendmail_from')));
    variable_set("brontoapi_default_from_name", "Developer");
    $msgs = brontoapi_get_all_messages_by_folder();
    foreach ($msgs as $msg => $id) {
      $email = variable_get('site_mail', ini_get('sendmail_from'));
      $result = brontoapi_mail_message($email, $id);
      $this->assertTrue($result, "Response received");
    }
  }

}

/**
 * Tests overriding drupal_mail and sending via Bronto API instead.
 */
class BrontoAPISendMailTest extends BrontoWebTestCase {

  /**
   * User interface information for this Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Bronto API Test Mail',
      'description' => "Sends mail.",
      'group' => 'Bronto',
    );
  }

  /**
   * Loads user information and passes it to drupal_mail.
   *
   * If the template is overriden by Bronto API, then Bronto will send the mail.
   */
  public function testBrontoAPISendTestMail() {
    global $user;
    $account = user_load($user->uid);
    $params["account"] = $account;
    $language = NULL;
    $email = variable_get('site_mail', ini_get('sendmail_from'));
    $result = drupal_mail("user", "register_no_approval_required", $email, $language, $params);
    $this->assertTrue($result, "Response received");
  }

}
