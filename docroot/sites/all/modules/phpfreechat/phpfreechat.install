<?php
/**
 * @file
 * Install and uninstall phpFreeChat tables and data files.
 */

/**
 * Implements hook_schema().
 */
function phpfreechat_schema() {
  $schema['phpfreechat'] = array(
    'description' => 'phpFreeChat data table',
    'fields' => array(
      'nid' => array(
        'description' => 'the node the chatbox is connected to',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'phpfreechat_enabled' => array(
        'description' => 'whether chat is enabled for this node',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'phpfreechat_title' => array(
        'description' => 'chatbox title, if chats are enabled for node',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'phpfreechat_channels' => array(
        'description' => 'chatbox channels, if chats are enabled for node',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function phpfreechat_install() {
  // Create phpFreeChat table (called automatically in D7).
  // drupal_install_schema('phpfreechat');
    
  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'phpfreechat') . '/phpfreechat.inc';

  $errors = 0;
  
  // Is phpFreeChat (3rd party files) installed?
  if (!_phpfreechat_check_install()) {
    form_set_error('op', _phpfreechat_not_found());
    $errors++;
  }

  // Have the phpFreeChat data folders been created?
  if (!_phpfreechat_check_files()) {
    form_set_error('op', t('Unable to create data folders for phpfreechat.'));
    $errors++;
  }
  
  if (!$errors) {
    drupal_set_message("The phpFreeChat module was successfully installed. Please now set user permissions, associate chats with a content type, and visit the phpFreeChat configuration page.<br />");
  }
}

/**
 * Implements hook_uninstall().
 */
function phpfreechat_uninstall() {
  // Remove phpFreeChat table (called automatically in D7).
  // drupal_uninstall_schema('phpfreechat');

  $settings = array(
    'serverid',
    'language',
    'output_encoding',
    'nick',
    'max_nick_len',
    'frozen_nick',
    'nickmeta',
    'nickmeta_private',
    'nickmeta_key_to_hide',
    'isadmin',
    'admins',
    'firstisadmin',
    'title',
    'channels',
    'frozen_channels',
    'max_channels',
    'privmsg',
    'max_privmsg',
    'refresh_delay',
    'refresh_delay_steps',
    'timeout',
    'islocked',
    'lockurl',
    'skip_proxies',
    'post_proxies',
    'pre_proxies',
    'proxies_cfg',
    'proxies_path',
    'proxies_path_default',
    'cmd_path',
    'cmd_path_default',
    'max_text_len',
    'max_msg',
    'max_displayed_lines',
    'quit_on_closedwindow',
    'focus_on_connect',
    'connect_at_startup',
    'start_minimized',
    'height',
    'shownotice',
    'nickmarker',
    'clock',
    'startwithsound',
    'openlinknewwindow',
    'notify_window',
    'short_url',
    'short_url_width',
    'display_ping',
    'display_pfc_logo',
    'displaytabimage',
    'displaytabclosebutton',
    'showwhosonline',
    'showsmileys',
    'btn_sh_whosonline',
    'btn_sh_smileys',
    'bbcode_colorlist',
    'nickname_colorlist',
    'theme',
    'theme_path',
    'theme_url',
    'theme_default_path',
    'theme_default_url',
    'container_type',
    'server_script_path',
    'server_script_url',
    'client_script_path',
    'data_private_path',
    'data_public_path',
    'data_public_url',
    'prototypejs_url',
    'debug',
    'time_offset',
    'date_format',
    'time_format',
    'get_ip_from_xforwardedfor',
    'dyn_params',
  );

  foreach ($settings as $setting) {
    variable_del('phpfreechat_' . $setting);
  }

  // Remove the file system data that phpFreeChat creates.
  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'phpfreechat') . '/phpfreechat.inc';
  $pfc_data_dir = PHPFREECHAT_DATA_DIR;
  _phpfreechat_rm($pfc_data_dir);
}

?>
