<?php

/**
 * Implements hook_views_api().
 */
function views_linker_views_api() {
  return array(
    'api' => 3
  );
}

/**
 * Implements hook_theme().
 */
function views_linker_theme() {
  $return = array();

  $return['views_linker_block'] = array(
    'variables' => array(),
  );

  return $return;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function views_linker_ctools_plugin_api($owner, $api) {
  if ($owner == 'views_linker' && $api == 'plugins') {
    return array('version' => 1);
  }
}

function views_linker_views_post_render(&$view, &$output, &$cache) {

  $views_enabled = variable_get('views_linker_views', array());

  if (isset($views_enabled[$view->name]) && isset($views_enabled[$view->name][$view->current_display])) {
    $output = views_linker_results_alter($output);
  }

}

function views_linker_results_alter($output) {

  $dom_document = new DOMDocument('1.0', 'utf-8');
  @$dom_document->loadHTML('<?xml encoding="UTF-8"><div id="views-linker">' . $output . '</div>');

  $divs = $dom_document->getElementsByTagName('div');

  foreach ($divs as $key => $div) {
    views_linker_row_process($div);
  }

  // Output DOM to a string.
  // Unfortunately below PHP 5.3.6 saveHTML() doesn't expect a parameter.
  $output_updated = $dom_document->saveHTML();

  // So we have to remove wrapping tags ourseleves.
  $content_fragments = explode('<div id="views-linker">', $output_updated);
  $output            = str_replace('</div></body></html>', '', $content_fragments[1]);

  return $output;
}

function views_linker_row_process(&$div) {
  $row = views_linker_is_row($div);

  if (!$row) {
    return;
  }

  $query = drupal_get_query_parameters();
  $attributes = array('query' => $query);
  $links = $div->getElementsByTagName('a');

  foreach ($links as $key => $link) {
    $href = $link->getAttribute('href');
    $href = trim($href, '/');

    // Deal with fragments bu moving to end of URL.
    if (strpos($href, '#') !== FALSE) {
      $url = parse_url($href);

      if (!empty($url["fragment"])) {
        $attributes['fragment'] = $url["fragment"];
      }

      $href = str_ireplace('#' . $url["fragment"], '', $href);
    }


    $url = url($href, $attributes);
    $link->setAttribute('href', $url);
  }
}

function views_linker_is_row($div) {
  $row = FALSE;

  $classes_string = $div->getAttribute('class');

  if (!empty($classes_string)) {
    $classes = explode(' ', $classes_string);

    if (in_array('views-row', $classes)) {
      $row = TRUE;
    }
  }

  return $row;
}

/**
 * Implements hook_block_info().
 */
function views_linker_block_info() {
  $return = array();

  $views = variable_get('views_linker_views', array());

  foreach ($views as $view => $view_settings) {

    foreach ($view_settings as $display => $display_setting) {

      if (!empty($display_setting['views_linker_enabled'])) {
        $return[$display_setting['views_linker_block_delta']] = array(
          'info'  => t('Views Linker: ' . $view . ' ' . $display),
          'cache' => DRUPAL_CACHE_PER_PAGE,
        );
      }
    }
  }

  return $return;
}

/**
 * Implements hook_block_view().
 */
function views_linker_block_view($delta = '') {
  $block = array();
  $views = variable_get('views_linker_views', array());

  foreach ($views as $view => $view_settings) {

    foreach ($view_settings as $display => $display_setting) {

      if ($delta == $display_setting['views_linker_block_delta']) {
        drupal_add_js(drupal_get_path('module', 'views_linker') .'/views_linker.js', 'file');

        // Set default link behaviour which will display if JS is disabled.
        if (empty($display_setting['direct_label']) || empty($display_setting['back_path'])) {
          $display_setting['default_display'] = FALSE;
          $display_setting['default_label'] = $display_setting['search_label'];
        }
        else {
          $display_setting['default_display'] = TRUE;
          $display_setting['default_label'] = $display_setting['direct_label'];
        }

        $block['subject'] = NULL;
        $block['content'] = theme('views_linker_block', $display_setting);
      }
    }
  }

  return $block;
}

function theme_views_linker_block($settings) {
  $content = '';

  if (!isset($settings['back_path']) || empty($settings['back_path'])) {
    return $content;
  }

  // Use JS to change link and label
  drupal_add_js(array('viewsLinker' => $settings), 'setting');

  $link_attributes = array('id' => 'views-linker-' . $settings['views_linker_block_delta']);

  $link = l($settings['default_label'], $settings['back_path'], $link_attributes);

  $content = '<div id="' . 'views-linker-' . $settings['views_linker_block_delta'] . '"';

  if (!$settings['default_display']) {
    $content .= ' style="display:none;"';
  }

  $content .= '">' . $link . '</div>';

  return $content;
}

/**
 * Implements hook_views_invalidate_cache().
 */
function views_linker_views_invalidate_cache() {
  $views_linker_views = array();
  $views = views_get_all_views();

  foreach ($views as $view_id => $view) {

    foreach ($view->display as $display_id => $display) {

      if (empty($view->disabled) && isset($display->display_options['views_linker_enabled']) && !empty($display->display_options['views_linker_enabled'])) {

        $settings = array(
          'back_path' => $display->display_options['back_path'],
          'direct_label' => $display->display_options['direct_label'],
          'search_label' => $display->display_options['search_label'],
          'views_linker_enabled' => $display->display_options['views_linker_enabled'],
          'views_linker_block_delta' => $display->display_options['views_linker_block_delta'],
        );

        $views_linker_views[$view_id][$display_id] = $settings;

      }
    }
  }

  variable_set('views_linker_views', $views_linker_views);
  //block_flush_caches();
}
