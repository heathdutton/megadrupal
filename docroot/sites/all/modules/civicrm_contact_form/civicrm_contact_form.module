<?php

/**
 * Implements hook_form_alter().
 */
function civicrm_contact_form_form_alter(&$form, &$form_state, $form_id) {
  // In D6 is is contact_mail_page, in D7 it is contact_site_form
  if (($form_id == 'contact_mail_page' || $form_id == 'contact_site_form')
  && !empty($form['cid'])) {
    drupal_add_css(drupal_get_path('module', 'civicrm_contact_form') . '/civicrm_contact_form.css');
    // Break Name field into separate First and Last Name fields.
    $form['name']['#title'] = t('First Name');
    $form['name']['#prefix'] = '<div class="subset">';
    $form['name']['#size'] = 25;

    // Insert last_name form element
    $newform = array();
    foreach ($form as $key => $value) {
      $newform[$key] = $value;
      if ($key == 'name') {
        $newform['last_name'] = array(
          '#type' => 'textfield',
          '#title' => t('Last Name'),
          '#suffix' => '</div>',
          '#maxlength' => 255,
          '#required' => TRUE,
          '#size' => 25,
        );
      }
    }
    $form = $newform;

    // Add submit handler.
    array_unshift($form['#submit'], 'civicrm_contact_form_sitewide_form');

    // Set defaults for logged-in users
    global $user;
    if ($user->uid) {
      civicrm_initialize();
      $params = array(
         'contact_id' => $_SESSION['CiviCRM']['userID'],
         'return_first_name' => 1,
         'return_last_name' => 1,
         'version' => 3,
      );
      $contact = civicrm_api('contact', 'get', $params);
      $contact = array_pop($contact['values']);
      if (!empty($contact['first_name']) && !empty($contact['last_name'])) {
        $form['name']['#default_value'] = $form['name']['#value'] = $contact['first_name'];
        $form['last_name']['#default_value'] = $form['last_name']['#value'] = $contact['last_name'];
        $form['last_name']['#disabled'] = $form['name']['#disabled'] = TRUE;
      }
      if (!empty($form['mail']['#default_value'])) {
        $form['mail']['#value'] = $form['mail']['#default_value'];
        $form['mail']['#disabled'] = TRUE;
      }
    }
  }
}

/**
 * Callback for sitewide contact form.
 */
function civicrm_contact_form_sitewide_form($form, &$form_state) {
  $vals = $form_state['values'];
  $cid = NULL;
  $category = empty($form['cid']['#options']) ? t('Contact Form') : $form['cid']['#options'][$vals['cid']];
  civicrm_initialize();

  // Get contact form recipient(s) from drupal api.
  $contact_load = contact_load($vals['cid']);
  $recipients = explode(',', $contact_load['recipients']);
  $target_ids = array();

  // Get recipient contact ids.
  foreach ($recipients as $email) {
    $result = civicrm_api('email', 'get', array('email' => $email, 'version' => 3));
    if (!empty($result['values'])) {
      foreach ($result['values'] as $recipient) {
        $target_ids[$recipient['contact_id']] = $recipient['contact_id'];
      }
    }
  }

  // Process contact form sender.
  $params = array(
    'check_permission' => FALSE,
    'civicrm_contact' => array(
      'contact_type' => 'Individual',
      'first_name' => $vals['name'],
      'last_name' => $vals['last_name'],
      'email' => $vals['mail'],
      'version' => 3,
    ),
    'civicrm_email' => array(
      'email' => $vals['mail'],
    ),
  );
  global $user;
  if ($user->uid) {
    $cid = $_SESSION['CiviCRM']['userID'];
    if (empty($form['last_name']['#disabled']) && $cid) {
      $params['civicrm_contact']['contact_id'] = $cid;
      civicrm_api('contact', 'create', $params['civicrm_contact']);
    }
  }
  else {
    require_once 'CRM/Dedupe/Finder.php';
    if ($dupes = CRM_Dedupe_Finder::dupesByParams($params, 'Individual')) {
      $cid = $dupes[0];
    }
    else {
      $params['civicrm_contact']['source'] = t('Contact Form') . (empty($form['cid']['#options']) ? '' : ' [' . $category . ']');
      $result = civicrm_api('contact', 'create', $params['civicrm_contact']);
      $cid = $result['id'];
    }
  }
  $target_ids[$cid] = $cid;
  // Lookup activity type
  $result = civicrm_api('activity_type', 'get', array('version' => 3));
  $types = array_flip($result['values']);
  if (!($type = CRM_Utils_Array::value('Inbound Email', $types))) {
    if (!($type = CRM_Utils_Array::value('Email', $types))) {
      // If we can't find an email type, at least fetch some valid activity type
      $type = array_shift($result['values']);
    }
  }
  // Create email activity.
  $params = array(
    'version' => 3,
    'activity_type_id' => $type,
    'source_contact_id' => $cid,
    'target_contact_id' => $target_ids,
    'subject' => '[' . $category . '] ' . $vals['subject'],
    'status_id' => 2,
    'activity_date_time' => date('YmdHis'),
    'details' => $vals['message'],
  );
  civicrm_api('activity', 'create', $params);

  // Merge first and last name into a single field for the sake of contact_mail_page_submit.
  if ($vals['last_name']) {
    $form_state['values']['name'] .= ' ' . $vals['last_name'];
  }
}
