<?php

/**
 * @file
 * Add subaccount functionality to Mailchimp module.
 */

/**
 * Implements hook_menu().
 */
function mandrill_subaccount_menu() {
  $items['admin/config/services/mandrill/subaccount'] = array(
    'title' => 'Subaccount',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mandrill_subaccount_settings_form'),
    'access callback' => TRUE,
    'description' => 'Setup a Mandrill subaccount for this site.',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  return $items;
}

/**
 * Sub account settings.
 *
 * @return array
 *   An array containing form items to place on the module settings page.
 */
function mandrill_subaccount_settings_form($form, &$form_state) {
  $id = variable_get('mandrill_subaccount_id');
  $form['mandrill_subaccount_id'] = array(
    '#title' => t('Mandrill Subaccount ID'),
    '#type' => 'textfield',
    '#description' => t('Ger your sub account id from this link !link.',
      array('!link' => l(t('Mandrill Subaccounts'), 'https://mandrillapp.com/subaccounts'))),
    '#default_value' => $id,
    '#required' => TRUE,
  );
  $form['mandrill_subaccount_create_new'] = array(
    '#title' => t('Create a new Mandrill subaccount?'),
    '#type' => 'checkbox',
    '#description' => t('Create a new subaccount if the above account does not exist.'),
    '#default_value' => FALSE,
  );
  $form['submit_subaccount_settings'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['submit_subaccount_settings_clear'] = array(
    '#type' => 'submit',
    '#value' => t('Clear Subaccount'),
  );
  return $form;
}

/**
 * Submit handler for mandrill_subaccount_settings_form().
 *
 * Checks for existing subaccount id, if it exists, it assigns the subaccount
 * id, if the id does not exist and the check box to create a new subaccount
 * it is created, if it does not exist and checkbox was not checked, leave.
 */
function mandrill_subaccount_settings_form_submit($form, &$form_state) {
  if($form_state['values']['op'] == 'Clear Subaccount'){
    variable_del('mandrill_subaccount_id');
    drupal_set_message(t('Your subaccount was removed.'), 'status');
    return;
  }
  $id = $form_state['values']['mandrill_subaccount_id'];
  $mandrill = mandrill_subaccount_get_api_object();
  if (!$mandrill) {
    drupal_set_message(t('Mandrill API key not set'), 'error');
    return;
  }
  $lists = $mandrill->subaccountsList($id);
  foreach ($lists as $list) {
    if ($list['id'] == $id) {
      variable_set('mandrill_subaccount_id', $id);
      drupal_set_message(t('Your subaccount %k has been assigned.', array('%k' => $id)), 'status');
      return;
    }
  }
  if ($form_state['values']['mandrill_subaccount_create_new'] == 1) {
    $mandrill->subaccountsAdd($id);
    variable_set('mandrill_subaccount_id', $id);
    drupal_set_message(t('Your subaccount %k has been created and assigned.', array('%k' => $id)), 'status');
  }
  else {
    drupal_set_message(t('Your subaccount %k was not found.', array('%k' => $id)), 'error');
  }
}


/**
 * Implements hook_mandrill_mail_alter().
 */
function mandrill_subaccount_mandrill_mail_alter(&$mandrill_params, $message) {
  $id = variable_get('mandrill_subaccount_id');
  $mandrill_params['message']['subaccount'] = $id;
}


/**
 * Return Mandrill API object for communication with the mailchimp server.
 *
 * This was rewrite to the exntended subaccount class.
 *
 * @param bool $reset
 *   Pass in TRUE to reset the statically cached object.
 *
 * @throws MandrillException
 *
 * @return Mandrill|bool
 *   Mandrill Object upon success
 *   FALSE if variable_get('mandrill_api_key') is unset
 */
function mandrill_subaccount_get_api_object($reset = FALSE) {
  $api =& drupal_static(__FUNCTION__, NULL);
  if ($api === NULL || $reset === TRUE) {
    $api_key = variable_get('mandrill_api_key', '');
    $api_timeout = variable_get('mandrill_api_timeout', 60);
    if (empty($api_key)) {
      return FALSE;
    }

    $api = new MandrillSubaccount($api_key, $api_timeout);
  }

  return $api;
}
