<?php

/**
 * @file
 * Contains tests for the Views filter option limit module.
 */

/**
 * Test case.
 */
class ViewsFilterOptionLimitTestCase extends DrupalWebTestCase {

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => t('Views Filter Option Limit tests'),
      'description' => t('Tests basic operation of the limited filter.'),
      'group' => t('Views Filter Option Limit'),
    );
  }

  /**
   * Implements setUp().
   */
  function setUp() {
    // Call the parent with an array of modules to enable for the test.
    parent::setUp(array('entityreference', 'views', 'views_filter_option_limit'));
    // Stupid Simpletest can't enable this module at the same time: the field
    // type won't exist. FAIL.
    module_enable(array('views_filter_option_limit_test'));
    // ... and for some reason we don't get a cache clear. WTF?
    $this->resetAll();
  }

  /**
   * Test the module's functionality.
   */
  function testView() {
    $country_city_data = views_filter_option_limit_test_country_city_data();

    // Look at our view.
    $this->drupalGet('test-vfol');

    // Get the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    unset($options[0]);
    //debug($options);

    // Our view has is set to show no options without limiting handlers.
    $this->assertEqual($options, array(), "With no values on limiting handlers, the city options are empty.");

    // Get the titles and nids of the country and city nodes.
    $country_data = db_query("SELECT title, nid FROM {node} WHERE type = 'test_vfol_country'")->fetchAllKeyed();
    $city_data = db_query("SELECT title, nid FROM {node} WHERE type = 'test_vfol_city'")->fetchAllKeyed();

    // Filter on the country field filter with a single value.
    $this->drupalGet('test-vfol', array(
      'query' => array(
        'country' => array(
          $country_data['Britain'],
        ),
      ),
    ));

    // Check the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    // Unset the 'Any' option.
    unset($options[0]);
    sort($options);

    $expected_cities = array_keys($country_city_data['Britain']);
    sort($expected_cities);

    $this->assertEqual($options, $expected_cities, "When the country filter has a value, the city filter options are limited.");

    // Add the city filter. The options for cities should stay the same.
    $this->drupalGet('test-vfol', array(
      'query' => array(
        'country' => array(
          $country_data['Britain'],
        ),
        'city'    => $city_data['London'],
      ),
    ));

    // Check the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    // Unset the 'Any' option.
    unset($options[0]);
    sort($options);

    $this->assertEqual($options, $expected_cities, "When the country and city filters have a value, the city filter options are limited.");

    // Now suppose the user wants to change the country filter. The city filter
    // will have a value that is no longer present in the options. Check this
    // doesn't cause a validation error.
    $this->drupalGet('test-vfol', array(
      'query' => array(
        'country' => array(
          $country_data['France'],
        ),
        'city'    => $city_data['London'],
      ),
    ));

    // Check the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    // Unset the 'Any' option.
    unset($options[0]);
    sort($options);

    $expected_cities = array_keys($country_city_data['France']);
    sort($expected_cities);

    $this->assertEqual($options, $expected_cities, "When the country filter's value is changed, the city filter options are limited.");

    // Filter on the country field filter with multiple values.
    $this->drupalGet('test-vfol', array(
      'query' => array(
        'country' => array(
          $country_data['France'],
          $country_data['Italy'],
        ),
      ),
    ));

    // Check the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    // Unset the 'Any' option.
    unset($options[0]);
    sort($options);

    $expected_cities = array_merge(
      array_keys($country_city_data['France']),
      array_keys($country_city_data['Italy'])
    );
    sort($expected_cities);

    $this->assertEqual($options, $expected_cities, "When the country filter has a multiple value, the city filter options are limited.");

    // Filter on the country field argument.
    $this->drupalGet('test-vfol/' . $country_data['France']);

    // Check the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    // Unset the 'Any' option.
    unset($options[0]);
    sort($options);

    $expected_cities = array_keys($country_city_data['France']);
    sort($expected_cities);

    $this->assertEqual($options, $expected_cities, "When the country argument has a value, the city filter options are limited.");

    // Filter on two field filters.
    $this->drupalGet('test-vfol', array(
      'query' => array(
        'country' => array(
          $country_data['France'],
        ),
        'promote' => 1,
      ),
    ));

    // Check the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    // Unset the 'Any' option.
    unset($options[0]);
    sort($options);

    $expected_cities = array('Paris');
    $this->assertEqual($options, $expected_cities, "When the country and promote filters have values, the city filter options are limited.");

    $result = db_query("SELECT title, promote FROM {node}")->fetchAllKeyed();
    debug($result);

    // Mix filters and arguments.
    $this->drupalGet('test-vfol/' . $country_data['France'], array(
      'query' => array(
        'promote' => 1,
      ),
    ));

    // Check the city options.
    $options = $this->getSelectOptions('//select[@id="edit-city"]');
    // Unset the 'Any' option.
    unset($options[0]);
    sort($options);

    $expected_cities = array('Paris');
    $this->assertEqual($options, $expected_cities, "When the country and promote filters have values, the city filter options are limited.");
  }

  /**
   * Helper to get the options for a SELECT element.
   */
  function getSelectOptions($xpath) {
    // TODO: surely there is a more elegant way of doing this???
    // Some of this is possibly sensitive to PHP version, as I could have sworn
    // it was working on my laptop which has 5.4!!!
    $xpath = $this->buildXPathQuery($xpath);
    $fields = $this->xpath($xpath);
    $field = array_pop($fields);
    $field_array = (array) $field;
    $options = $field_array['option'];

    // WTF.
    if (!is_array($options)) {
      $options = array($options);
    }

    return $options;
  }

}
