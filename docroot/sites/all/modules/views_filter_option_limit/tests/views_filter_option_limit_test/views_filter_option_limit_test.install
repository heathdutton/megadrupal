<?php

/**
 * @file views_filter_option_limit_test.install
 * Contains install hooks.
 */

/**
 * Implements hook_install().
 */
function views_filter_option_limit_test_install() {
  // Create FieldAPI fields and instances.
  // City reference field...
  $field = array(
    'field_name'  => 'test_vfol_city_ref',
    'type'        => 'entityreference',
    'cardinality' => 1,
    'settings' => array(
      'handler' => 'base',
      'target_type' => 'node',
      'handler_settings' => array(
        'behaviors' => array(
          'views_filter_option_limit' => array(
            'status' => 1,
          ),
        ),
        'sort' => array(
          'type' => 'property',
          'property' => 'title',
          'direction' => 'ASC',
        ),
        'target_bundles' => array(
          'test_vfol_city' => 'test_vfol_city',
        ),
      ),
    ),
  );
  field_create_field($field);

  // ... on the node...
  $instance = array(
    'field_name'  => 'test_vfol_city_ref',
    'entity_type' => 'node',
    'bundle'      => 'test_vfol_article',
    'label'       => 'City',
    'widget'      => array(
      'type'      => 'options_select',
      // To be higher than body (for manual testing) we need to be lighter than
      // -4, which puts us above the title probably.
      'weight'    => -6,
    ),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'entityreference_label',
      ),
    ),
  );
  field_create_instance($instance);

  // Country reference field...
  $field = array(
    'field_name'  => 'test_vfol_country_ref',
    'type'        => 'entityreference',
    'cardinality' => 1,
    'settings' => array(
      'handler' => 'base',
      'target_type' => 'node',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 1,
          ),
        ),
        'sort' => array(
          'direction' => 'ASC',
          'field' => 'body:value',
          'property' => 'nid',
          'type' => 'none',
        ),
        'target_bundles' => array(
          'test_vfol_country' => 'test_vfol_country',
        ),
      ),
    ),
  );
  field_create_field($field);

  // ... on the node...
  $instance = array(
    'field_name'  => 'test_vfol_country_ref',
    'entity_type' => 'node',
    'bundle'      => 'test_vfol_city',
    'label'       => 'Country',
    'widget'      => array(
      'type'      => 'options_select',
      // To be higher than body (for manual testing) we need to be lighter than
      // -4, which puts us above the title probably.
      'weight'    => -6,
    ),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'entityreference_label',
      ),
    ),
  );
  field_create_instance($instance);

  // Get country and city data.
  $country_city_data = views_filter_option_limit_test_country_city_data();

  // Create country nodes. Node titles are the keys of the data array.
  $country_nids = array();
  foreach (array_keys($country_city_data) as $country) {
    $node = new stdClass();
    $node->type = 'test_vfol_country';
    node_object_prepare($node);

    $node->title    = $country;
    $node->language = LANGUAGE_NONE;

    node_save($node);

    $country_nids[$country] = $node->nid;
  }

  // Create city nodes.
  foreach ($country_city_data as $country => $city_data) {
    foreach ($city_data as $city => $node_data) {
      $node = new stdClass();

      $node->type = 'test_vfol_city';
      node_object_prepare($node);

      $node->title    = $city;
      $node->language = LANGUAGE_NONE;

      $node->test_vfol_country_ref[LANGUAGE_NONE][0]['target_id'] = $country_nids[$country];

      // Go after node_object_prepare() to save us faffing about with node
      // options variables.
      $node_data += array(
        'promote' => FALSE,
      );
      foreach ($node_data as $property => $value) {
        $node->{$property} = $value;
      }

      node_save($node);
    }
  }
}

/**
 * Implements hook_uninstall().
 *
 * Not needed for testing, but useful for when developing tests as it allows
 * use of Devel module's reinstall tool.
 */
function views_filter_option_limit_test_uninstall() {
  // Delete all our nodes.
  $nids = db_query("SELECT nid FROM {node} WHERE type IN ('test_vfol_article', 'test_vfol_city', 'test_vfol_country')")->fetchCol();
  $nodes = entity_load('node', $nids);
  foreach ($nodes as $node) {
    node_delete($node);
  }

  // Delete our fields.
  field_delete_field('test_vfol_city_ref');
  field_delete_field('test_vfol_country_ref');
}
