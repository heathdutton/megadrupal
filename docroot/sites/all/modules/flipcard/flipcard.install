<?php

/**
 * Implements hook_install.
 * 
 * Set up some defaults for permissions.  These can of course be changed manually later
 * via the permissions page (admin/people/permissions), but this here ensures that they
 * are not left blank by default.
 */
function flipcard_install() {
  // rid=1 => anonymous user
  user_role_change_permissions(1,
    array(
      'flipcard anonymous user' => TRUE,
      'flipcard authenticated user' => TRUE,
      )
  );
  
  // rid=2 => authenticated user
  user_role_change_permissions(2,
    array(
      'flipcard anonymous user' => TRUE,
      'flipcard authenticated user' => TRUE,
    )
  );
}


/**
 * Implements hook_schema.
 */
function flipcard_schema() {
	$schema['flipcard_cards'] = array(
			'description' => 'Used by the flipcard module to store flipcard cards',
			'fields' => array(
					'uid' => array(
							'description' => 'The user id of the user who has looked at this flipcard',
							'type' => 'int',
							'not null' => TRUE,
					),
					'nid' => array(
							'description' => 'The node id of the flipcard which has been looked at.',
							'type' => 'int',
							'not null' => TRUE,
					),
					'shown' => array(
							'description' => 'How many times this flipcard (node) has been shown to this user.',
							'type' => 'int',
							'not null' => TRUE,
					),
					'correct' => array(
							'description' => 'How many times this flipcard (node) has been correctly answered.',
							'type' => 'int',
							'not null' => TRUE,
					),
					'box' => array(
							'description' => 'The Leitner box in which this card is currently.',
							'type' => 'int',
							'not null' => TRUE,
					),
					'time_reviewed' => array(
							'description' => 'Time that the card was last reviewed',
							'type' => 'int',
							'not null' => TRUE,
					),
			),
			'primary key' => array('uid', 'nid'),
	);
	
	$schema['flipcard_question'] = array(
			'description' => 'Stores summary of each question asked',
			'fields' => array(
					'quizid' => array(
							'description' => 'TODO: please describe this field!',
							'type' => 'int',
							'not null' => TRUE,
					),
					'question' => array(
							'description' => 'Number of the question (1 to 10)',
							'type' => 'int',
							'not null' => TRUE,
					),
					'nid' => array(
							'description' => 'Node which question asked',
							'type' => 'int',
							'not null' => TRUE,
					),
					'time_asked' => array(
							'description' => 'Time of when the question was asked',
							'type' => 'int',
							'not null' => TRUE,
					),
					'correct' => array(
							'description' => 'Whether the question was answered correctly or not',
							'type' => 'int',
							'size' => 'tiny',
							'not null' => TRUE,
					),
					'start_level' => array(
							'description' => 'Level (1-10) that node started at before this question',
							'type' => 'int',
							'size' => 'tiny',
							'not null' => TRUE,
					),
					'end_level' => array(
							'description' => 'Level (1-10) that node ended at after this question',
							'type' => 'int',
							'size' => 'tiny',
							'not null' => TRUE,
					),
			),
			'primary key' => array('quizid', 'question'),
	);
	
	$schema['flipcard_quiz'] = array(
			'description' => 'Summary of flipcard quiz taken by a user',
			'fields' => array(
					'quizid' => array(
							'description' => 'Index of quiz',
							'type' => 'serial',
							'not null' => TRUE,
					),
					'uid' => array(
							'description' => 'User id of user who took quiz',
							'type' => 'int',
							'not null' => TRUE,
					),
					'tid' => array(
							'description' => 'Taxonomy id of quiz',
							'type' => 'int',
							'not null' => TRUE,
					),
					'quiz_type' => array(
							'description' => 'Id of quiz type',
							'type' => 'text',
							'not null' => TRUE,
					),
					'time_started' => array(
							'description' => 'Time quiz was started',
							'type' => 'int',
							'not null' => TRUE,
					),
					'time_ended' => array(
							'description' => 'Time quiz ended, taken from time last question answered',
							'type' => 'int',
							'not null' => TRUE,
					),
					'correct' => array(
							'description' => 'Number of questions answered correctly',
							'type' => 'int',
							'size' => 'tiny',
							'not null' => TRUE,
					),
					'questions' => array(
							'description' => 'How many questions asked',
							'type' => 'int',
							'size' => 'tiny',
							'not null' => TRUE,
							'default' => 10,
					),
			),
			'primary key' => array('quizid'),
			'indexes' => array(
					'uid' => array('uid'),
			),
	);
	
	$schema['flipcard_quiz_type'] = array(
			'description' => 'Type of quiz',
			'fields' => array(
					'type' => array(
							'description' => 'Type, e.g. multi-choice',
							'type' => 'text',
							'not null' => TRUE,
					),
					'name' => array(
							'description' => 'Name used in quiz type selection, e.g. 2 - quiz_multi_choice',
							'type' => 'text',
							'not null' => TRUE,
					),
			),
			'primary key' => array(array('type', 32)),
	);
	
  return $schema;
}

/**
 * Changes the datatype of flipcard_cards time_reviewed column which is
 * datetime to unix_timestamp.
 */
function flipcard_update_7101() {
	// Create the new field, but empty
	db_add_field('flipcard_cards', 'time_reviewed_new', array(
		'type' => 'int', 
		'length' => 11,
		'description' => 'Timestamp for when card was last reviewed.'));
	// Fill the new field by converting the values from the old field
	$query = db_update('flipcard_cards')
		->expression('time_reviewed_new', "UNIX_TIMESTAMP(time_reviewed)")
		->execute();
	// Get rid of the old field
	db_drop_field('flipcard_cards', 'time_reviewed');
	// Rename the new field to the name of the old field
	db_change_field('flipcard_cards', 'time_reviewed_new', 'time_reviewed', array(
 		'type' => 'int', 
 		'length' => 11,
 		'description' => 'Timestamp for when card was last reviewed.'));
}