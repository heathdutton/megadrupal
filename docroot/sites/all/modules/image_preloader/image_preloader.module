<?php

/**
 * @file
 * A module that include loader icon for images.
 *
 * Maintainer: http://www.developmenticon.com/
 * Written by Himanshu Shakhar (developmenticon)
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 */
function image_preloader_help($path, $arg) {
  switch ($path) {
    case "admin/help#image_preloader":
      return '<p>' . t("Include loader icon for image on the selected content type, block and views page") . '</p>';
      break;
  }
}

/**
 * Implements hook_permission().
 */
function image_preloader_permission() {
  $perms = array(
    'access administer image_preloader' => array(
      'title' => t('Administer image preloader'),
      'restrict access' => TRUE,
    ),
  );
  return $perms;
}

/**
 * Implements hook_menu().
 */
function image_preloader_menu() {
  $items = array();

  $items['admin/config/user-interface/image_preloader'] = array(
    'title' => 'Image Preloader',
    'description' => 'Configuration for Image Preloader',
    'page callback' => 'image_preloader_admin_display',
    'access arguments' => array('access administer image_preloader'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'image_preloader.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_page_build().
 */
function image_preloader_page_build(&$page) {
  $image_preloader_id = array();
  $number = 0;

  // Check content type pages who has enabled image preloader.
  $nodetype = menu_get_object('node');
  if ($nodetype && (variable_get('image_preloader_posts_' . $nodetype->type . '_enabled') == TRUE)) {
    $image_preloader_id[$number]['image_preloader_id'] = '#node-' . $nodetype->nid;
    $number++;
  }

  // Check views pages who has enabled image preloader.
  if (module_exists('views')) {
    $views_page = views_get_page_view();
    if ($views_page && variable_get('image_preloader_viewspage_' . $views_page->name . '_enabled') == TRUE) {
      $image_preloader_id[$number]['image_preloader_id'] = '.view-id-' . $views_page->name;
      $number++;
    }
  }

  // Check block who has enabled image preloader.
  global $theme;
  $all_regions = system_region_list($theme);
  $blocks = array();
  foreach (array_keys($all_regions) as $region) {
    $blocks += block_list($region);
  }

  foreach ($blocks as $i => $block) {
    $delta = $block->delta;
    if (variable_get('image_preloader_blockname_' . $delta . '_enabled') == TRUE) {
      $image_preloader_id[$number]['image_preloader_id'] = strtr(('#block-' . $block->module . '-' . $block->delta), '_', '-');
      $number++;
    }
  }

  if (!empty($image_preloader_id)) {
    image_preloader_display($image_preloader_id);
  }
}

/**
 * Implements image preloader display.
 */
function image_preloader_display($image_preloader_id) {
  $image_preloader_icons_selected = variable_get('image_preloader_icons_selected');
  $image_preloader_icons_selected_path = array();

  preg_match('/src="([^"]*)"/i', $image_preloader_icons_selected, $image_preloader_icons_selected_path);
  $style_content = '.image-preloader-icon {display:inline-block; background-color:#ffffff; background-image:url(' . $image_preloader_icons_selected_path[1] . '); background-repeat:no-repeat; background-position:center center;}';
  drupal_add_css($style_content, 'inline');

  drupal_add_js(array('image_preloader' => array('nodeid' => $image_preloader_id, 'loadericon' => $image_preloader_icons_selected_path[1])), array('type' => 'setting'));
  drupal_add_js(drupal_get_path('module', 'image_preloader') . '/js/image_preloader.js');
}
