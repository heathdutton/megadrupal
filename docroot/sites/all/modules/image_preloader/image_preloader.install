<?php

/**
 * @file
 * Install, update and uninstall functions for the image preloader module.
 */

/**
 * Implements hook_uninstall().
 */
function image_preloader_uninstall() {

  // Get the list of all content type vaiables and deleted.
  $node_types = node_type_get_types();
  $node_names = node_type_get_names();

  if (is_array($node_names) and count($node_names)) {
    foreach ($node_names as $key => $value) {
      variable_del('image_preloader_posts_' . $node_types[$key]->type . '_enabled');
    }
  }

  // Get the list of all views page variables and deleted.
  if (module_exists('views')) {
    $views = views_get_enabled_views();

    foreach ($views as $id => $view) {
      foreach (array_keys($view->display) as $id) {
        if ($id == 'page') {
          variable_del('image_preloader_viewspage_' . $view->name . '_enabled');
        }
      }
    }
  }

  // Get the list of all block variables and deleted.
  $blocks = array();
  // These are {block}.bid values to be kept.
  $bids = array();
  $or = db_or();

  foreach (module_implements('block_info') as $module) {
    $module_blocks = module_invoke($module, 'block_info');
    foreach ($module_blocks as $delta => $block) {
      // Compile a condition to retrieve this block from the database.
      $condition = db_and()
        ->condition('module', $module)
        ->condition('delta', $delta);
      $or->condition($condition);
      // Add identifiers.
      $block['module'] = $module;
      $block['delta']  = $delta;
      $blocks[] = $block;
    }
  }

  foreach ($blocks as $i => $block) {
    variable_del('image_preloader_blockname_' . $block['delta'] . '_enabled');
  }

  // Delete selected image loader icon vaiables.
  variable_del('image_preloader_icon');
  variable_del('image_preloader_icons_selected');
}
