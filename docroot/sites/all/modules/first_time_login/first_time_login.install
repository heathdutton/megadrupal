<?php

/**
 * @file
 * Install function for the first login module.
 */

/**
 * Implements hook_schema().
 */
function first_time_login_schema() {
  $schema['user_first_login'] = array(
    'description' => 'Stores data related to user\'s first login.',
    'fields' => array(
      'uid' => array(
        'description' => "Primary Key: User's uid.",
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'first_time_login' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "1-First time user | 0-Non First time user.",
      ),
      'updated_date' => array(
        'description' => 'Timestamp, when user has updated their profile.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('uid'),
    'indexes' => array(
      'updated_date' => array('updated_date'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function first_time_login_install() {
  $query_newuser = db_select('users', 'u')
    ->fields('u', array('uid', 'access'))
    ->condition('login', 0, '=')
    ->condition('uid', 0, '!=')
    ->execute();
  $query_olduser = db_select('users', 'u')
    ->fields('u', array('uid', 'access'))
    ->condition('login', 0, '!=')
    ->condition('uid', 1, '!=')
    ->execute();
  while ($data = $query_newuser->fetchObject()) {
    db_insert('user_first_login')
      ->fields(array(
        'uid' => $data->uid,
        'first_time_login' => 1,
        'updated_date' => $data->access,
        ))
      ->execute();
  }
  while ($data = $query_olduser->fetchObject()) {
    db_insert('user_first_login')
      ->fields(array(
        'uid' => $data->uid,
        'first_time_login' => 0,
        'updated_date' => $data->access,
        ))
      ->execute();
  }
  variable_set('first_time_login_config_days', 120);
}

/**
 * Implements hook_uninstall().
 */
function first_time_login_uninstall() {
  variable_del('first_time_login_config_days');
}
