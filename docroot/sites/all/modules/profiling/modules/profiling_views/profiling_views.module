<?php

/**
 * @file
 * Profiling Views module.
 */

/**
 * Implementation of hook_profiling_timer_help().
 */
function profiling_views_profiling_timer_help() {
  $items = array();
  // Since the main goal of these modules is to be the almost invisible, I'd
  // rather not make it depending on Views, and remain silent if wrongly
  // enabled.
  // This will avoid some bad WSOD, and make it not enabling the Views module
  // if enabled per error by the site admin.
  if (function_exists('views_get_all_views')) {
    foreach (views_get_all_views() as $view) {
      foreach ($view->display as $display_id => $display) {
        $items['view_' . $view->name . '-' . $display_id] = array(
          'title' => t("View @name (@display)", array('@name' => $view->name, '@display' => $display->display_title)),
          'description' => t("View statistics."),
        );
      }
    }
  }
  return $items;
}

/**
 * Implementation of hook_profiling_analyze().
 */
function profiling_views_profiling_analyze($name, $row, $thresholds) {
  // FIXME: TODO
}

/**
 * Implementation of hook_profiling_collection_help().
 */
function profiling_views_profiling_collection_help() {
  $items = array();
  $items['views'] = array(
    'title' => t("Views"),
    'description' => t("Views build, execute and render time."),
  );
  return $items;
}

/**
 * Implementation of hook_views_pre_view().
 * 
 * Ran before anything else in a view lifespan.
 */
function profiling_views_views_pre_view(&$view) {
  profiling_start('view_' . $view->name . '-' . $view->current_display, 'views');
}

/**
 * Implementation of hook_views_post_render().
 * 
 * This is the really last hook on which we can hookup in a view lifespan.
 */
function profiling_views_views_post_render(&$view) {
  profiling_stop('view_' . $view->name . '-' . $view->current_display);
}

