<?php

/**
 * @file
 * Provides integration with AnalyticsEngine.net
 */

/**
 * Implements hook_menu().
 */
function analyticsengine_menu() {
  $items = array();

  $items['admin/config/system/analyticsengine'] = array(
    'title' => 'Analytics Engine',
    'description' => 'Configure Analytics Engine API keys.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('analyticsengine_admin_settings_form'),
    'access arguments' => array('administer analytics engine'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function analyticsengine_permission() {
  return array(
    'administer analytics engine' => array(
      'title' => t('Administer Analytics Engine'),
      'description' => t('Perform maintenance tasks for Analytics Engine.'),
    ),
  );
}

/**
 * Settings form callback.
 */
function analyticsengine_admin_settings_form($form_state) {
  $form['account'] = array(
    '#type' => 'fieldset',
    '#title' => t('General settings'),
  );

  $form['account']['analyticsengine_account'] = array(
    '#title' => t('Account ID'),
    '#type' => 'textfield',
    '#default_value' => variable_get('analyticsengine_account', ''),
    '#size' => 42,
    '#maxlength' => 34,
    '#required' => TRUE,
    '#description' => t('This ID is unique to each site you want to track with Analytics Engine and can be found in the tracking code after <code>var APEcode=</code>.'),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_page_alter() to insert JavaScript to the appropriate scope/region of the page.
 */
function analyticsengine_page_alter(&$page) {
  global $user;

  $googleanalytics_account = variable_get('googleanalytics_account', '');
  $analyticsengine_account = variable_get('analyticsengine_account', '');

  // Get page status code for visibility filtering.
  $status = drupal_get_http_header('Status');
  $trackable_status_codes = array(
    '403 Forbidden',
    '404 Not Found',
  );

  // This is the same condition that Google Analytics uses to determine whether
  // or not to insert the Analytics code. Analytics Engine should only be loaded
  // if Google Analytics is also loaded.
  if (!empty($googleanalytics_account) && !empty($analyticsengine_account) && (_googleanalytics_visibility_pages() || in_array($status, $trackable_status_codes)) && _googleanalytics_visibility_user($user)) {
    // Write the Analytics Engine code to the same scope as Google Analytics
    $scope = variable_get('googleanalytics_js_scope', 'header');

    // Sanitize the account keys for output in Javascript code.
    $googleanalytics_account = drupal_json_encode($googleanalytics_account);
    $analyticsengine_account = drupal_json_encode($analyticsengine_account);

    $code = <<<EOL
var APEcode={$analyticsengine_account}, APEtracker = APEtracker || { config: { account: {$googleanalytics_account} } };
(function(c){
var D = document, p = D.location.protocol, s = 'script', S = D.createElement(s), b = D.getElementsByTagName(s)[0];
S.src = [ p, '//', (('https:' == p) ? 'amikay-ape.appspot.com' : 'ape.amikay.com'), '/c/', c].join(''); S.type = 'text/javascript'; S.async = true;
return b.parentNode.insertBefore(S,b);
})(APEcode);
EOL;

    drupal_add_js($code, array('scope' => $scope, 'type' => 'inline'));
  }
}
