<?php

/**
 * @file
 * The Ajax Document viewer module enables you to link the documents on your
 * servers to the viewer on "http://www.ajaxdocumentviewer.com/" server.
 * No installation is  required for viewing the documents in the same page or
 * in new tab.
 */
define('AJAXDOCUMENTVIEWER_URL', 'http://connect.ajaxdocumentviewer.com/');

/**
 * Implements hook_menu().
 */
function ajaxdocumentviewer_menu() {
  $items = array();
  $items['admin/config/user-interface/ajaxdocumentviewer'] = array(
    'title' => 'Ajax document viewer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ajaxdocumentviewer_settings_form'),
    'access arguments' => array('administer ajax document viewer'),
    'description' => 'Allows the user to configure the ajax document viewer settings',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function ajaxdocumentviewer_permission() {
  $perm = array(
    'administer ajax document viewer' => array(
      'title' => t('Administer ajax document viewer'),
    ),
  );
  return $perm;
}

/**
 * Implements hook_settings_form().
 */
function ajaxdocumentviewer_settings_form() {
  $form = array();
  $form['ajaxdocumentviewer_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Key'),
    '#required' => TRUE,
    '#default_value' => variable_get('ajaxdocumentviewer_key', ''),
    '#description' => t('You can get the key from <a href ="!key" target = "_blank">here</a>.', array('!key' => url('http://www.ajaxdocumentviewer.com/cloudconnect-api.asp'))),
    );

  $form['ajaxdocumentviewer_viewer_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Viewer Height'),
    '#default_value' => variable_get('ajaxdocumentviewer_viewer_height', '500'),
    '#description' => t('viewer-height: is the display height of the viewer. You can choose any +ve number for this.'),
    );

  $form['ajaxdocumentviewer_viewer_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Viewer Width'),
    '#default_value' => variable_get('ajaxdocumentviewer_viewer_width', '500'),
    '#description' => t('viewer-width: is the display width of the viewer. You can choose any +ve number for this.'),
    );

  $form['ajaxdocumentviewer_toolbarheight'] = array(
    '#type' => 'textfield',
    '#title' => t('ToolBar Height'),
    '#default_value' => variable_get('ajaxdocumentviewer_toolbarheight', '32'),
    '#description' => t('toolbarheight: allows to set the height of buttons on toolbar. (Default Value=32). Can be any numeric number.'),
    );

  $form['ajaxdocumentviewer_toolbarcolor'] = array(
    '#type' => 'textfield',
    '#title' => t('ToolBar Color'),
    '#default_value' => variable_get('ajaxdocumentviewer_toolbarcolor', 'EE0000'),
    '#description' => t('For color selection Please see this <a href ="!colors" target = "_blank">link</a>. Do not include  "#"', array('!colors' => url('http://www.december.com/html/spec/colorhex.html'))),
    );

  $form['ajaxdocumentviewer_save_button'] = array(
    '#type' => 'radios',
    '#title' => t('Show save button in ajax document viewer'),
    '#default_value' => variable_get('ajaxdocumentviewer_save_button', 'Yes'),
    '#options' => array('Yes' => 'Yes', 'No' => 'No'),
    '#description' => t('saveButton is the ability to switch save document button on and off'),
  );

  $form['ajaxdocumentviewer_print_button'] = array(
    '#type' => 'radios',
    '#title' => t('Show print button in ajax document viewer'),
    '#default_value' => variable_get('ajaxdocumentviewer_print_button', 'Yes'),
    '#options' => array('Yes' => 'Yes', 'No' => 'No'),
    '#description' => t('printButton is the ability to switch print document button on and off'),
  );

  $form['ajaxdocumentviewer_copytext_button'] = array(
    '#type' => 'radios',
    '#title' => t('Show copy text button in ajax document viewer'),
    '#default_value' => variable_get('ajaxdocumentviewer_copytext_button', 'Yes'),
    '#options' => array('Yes' => 'Yes', 'No' => 'No'),
    '#description' => t('copytextButton is the ability to switch copying of text to Clipboard on and off'),
  );

  $form['ajaxdocumentviewer_image_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Logo URL'),
    '#default_value' => variable_get('ajaxdocumentviewer_image_url', 'http://www.ajaxdocumentviewer.com/logo.gif'),
    '#description' => t('logoimage is the logo of your company that will appear when viewer is loading'),
  );

  $form['ajaxdocumentviewer_document_quality'] = array(
    '#type' => 'radios',
    '#title' => t('Quality of the document'),
    '#default_value' => variable_get('ajaxdocumentviewer_document_quality', 'medium'),
    '#options' => array('low' => 'Low', 'medium' => 'Medium', 'high' => 'High'),
    '#description' => t('quality is the fidelity of the document being loaded. You can control the quality and resolution of document loaded in viewer'),
  );
  return system_settings_form($form);
}

/**
 * Form validation handler for ajaxdocumentviewer_settings_form_validate().
 */
function ajaxdocumentviewer_settings_form_validate(&$elements, &$form_state, $form_id = NULL) {
  if ((!(is_numeric($form_state['values']['ajaxdocumentviewer_viewer_height']))) && (!empty($form_state['values']['ajaxdocumentviewer_viewer_height']))) {
    form_set_error('ajaxdocumentviewer_viewer_height', t('Value should be numeric'));
  }
  if ((!(is_numeric($form_state['values']['ajaxdocumentviewer_viewer_width']))) && (!empty($form_state['values']['ajaxdocumentviewer_viewer_width']))) {
    form_set_error('ajaxdocumentviewer_viewer_width', t('Value should be numeric'));
  }
  if ((!(is_numeric($form_state['values']['ajaxdocumentviewer_toolbarheight']))) && (!empty($form_state['values']['ajaxdocumentviewer_toolbarheight']))) {
    form_set_error('ajaxdocumentviewer_toolbarheight', t('Value should be numeric'));
  }
  if ((!preg_match('([0-9A-Fa-f]{6})', $form_state['values']['ajaxdocumentviewer_toolbarcolor'])) && (!empty($form_state['values']['ajaxdocumentviewer_toolbarcolor']))) {
    form_set_error('ajaxdocumentviewer_toolbarcolor', t('Color should be in Hexa decimal values only'));
  }
  if ((!valid_url($form_state['values']['ajaxdocumentviewer_image_url'], TRUE)) && (!empty($form_state['values']['ajaxdocumentviewer_image_url']))) {
    form_set_error('ajaxdocumentviewer_image_url', t('Please enter the valid url.'));
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function ajaxdocumentviewer_field_formatter_info() {
  $ajax_document_viewer_formatter = array();
    $ajax_document_viewer_formatter['ajax_document_view_new_window'] = array(
      'label' => t('Ajax document new window view'),
      'field types' => array('file'),
    );
    $ajax_document_viewer_formatter['ajax_document_view_inline'] = array(
      'label' => t('Ajax document inline view'),
      'field types' => array('file'),
    );
  if (module_exists('lightbox2')) {
    $ajax_document_viewer_formatter['ajax_document_view_lightbox'] = array(
      'label' => t('Ajax document lightbox view'),
      'field types' => array('file'),
    );
  }
  return $ajax_document_viewer_formatter;
}

/**
 * Implements hook_field_formatter_view().
 */
function ajaxdocumentviewer_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'ajax_document_view_new_window':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme' => 'ajax_document_view_new_window',
          '#items' =>  $item,
        );
      }
      break;

    case 'ajax_document_view_inline':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme' => 'ajax_document_view_inline',
          '#items' =>  $item,
        );
      }
      break;

    case 'ajax_document_view_lightbox':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme' => 'ajax_document_view_lightbox',
          '#items' =>  $item,
        );
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_theme().
 */
function ajaxdocumentviewer_theme() {
  return array(
    'ajax_document_view_new_window' => array(
      'variables' => array('items' => NULL),
    ),
    'ajax_document_view_inline' => array(
      'variables' => array('items' => NULL),
    ),
    'ajax_document_view_lightbox' => array(
      'variables' => array('items' => NULL),
    ),
  );
}

/**
 * Theme function for displays the file in new window or tab.
 *
 * @param array $items
 *   items of field elements
 *
 * @returns
 *   returns the link for viewing the field output.
 */
function theme_ajax_document_view_new_window($items = NULL) {
  $file_url = _ajaxdocumentviewer_get_url($items);
  $output = l($items['items']['filename'], $file_url, array('attributes' => array('target' => '_blank')));
  return $output;
}

/**
 * Theme function for displays the file in lightbox.
 *
 * @param array $items
 *   items of field elements
 *
 * @returns
 *   the lightbox processed link which displays the ajaxdocumentviewer output
 *   in overlay.
 */
function theme_ajax_document_view_lightbox($items = NULL) {
  $file_url = _ajaxdocumentviewer_get_url($items);
  $lightbox_height = variable_get('ajaxdocumentviewer_viewer_height', '500') . "px";
  $lightbox_width = variable_get('ajaxdocumentviewer_viewer_width', '500') . "px";
  $output = l($items['items']['filename'], $file_url, array('attributes' => array('rel' => 'lightframe[|width:' . $lightbox_width . '; height:' . $lightbox_height . '; scrolling: auto;]')));
  return $output;
}

/**
 * Theme function for displays the file in inline the page.
 *
 * @param array $items
 *   items of field elements
 *
 * @returns
 *   the inline ajaxdocument viewer output.
 */
function theme_ajax_document_view_inline($items = NULL) {
  drupal_add_js(drupal_get_path('module', 'ajaxdocumentviewer') . '/js/ajaxdocumentviewer.js');
  $file_url = check_url(_ajaxdocumentviewer_get_url($items));
  $iframe_width = check_plain(variable_get('ajaxdocumentviewer_viewer_width', '500'));
  $iframe_height = check_plain(variable_get('ajaxdocumentviewer_viewer_height', '500'));
  $output = l($items['items']['filename'], '', array('attributes' => array('class' => 'show_iframe', 'fid' => $items['items']['fid'])));
  $output .= "<div class = 'ajaxdocumentview-iframe' id = 'document-viewer-" . $items['items']['fid'] . "' style = 'display: none; clear: both;'>";
  $output .= "<iframe name='ajaxdocumentviewer' src=" . $file_url . "border='0' height=" . $iframe_height . " width=" . $iframe_width . " scrolling='no' align='left' frameborder='0' marginwidth='1 marginheight='1'>" . t("Your browser does not support inline frames or is currently configured not to display inline frames.") . "</iframe>";
  $output .= "</div>";
  return $output;
}

/**
 * building the required url format for ajaxdocument viewer.
 *
 * @param array $items
 *   field elements array.
 *
 * @returns
 *   required url for ajaxdocument viewer.
 */
function _ajaxdocumentviewer_get_url($items) {
  $ajax_url = AJAXDOCUMENTVIEWER_URL;
  $key = "key=" . variable_get('ajaxdocumentviewer_key', '500');
  $document = "&document=" . file_create_url(file_build_uri($items['items']['filename']));
  $viewer_height = "viewerheight=" . variable_get('ajaxdocumentviewer_viewer_height', '500');
  $viewer_width = "viewerwidth=" . variable_get('ajaxdocumentviewer_viewer_width', '500');
  $toolbarheight = "toolbarHeight=" . variable_get('ajaxdocumentviewer_toolbarheight', '32');
  $toolbarcolor = "toolbarColor=" . variable_get('ajaxdocumentviewer_toolbarcolor', 'EE000');
  $save_button = "saveButton=" . variable_get('ajaxdocumentviewer_save_button', 'Yes');
  $print_button = "printButton=" . variable_get('ajaxdocumentviewer_print_button', 'Yes');
  $document_quality = "quality=" . variable_get('ajaxdocumentviewer_document_quality', 'medium');
  $image_url = "logoimage=" . variable_get('ajaxdocumentviewer_image_url', 'http://www.ajaxdocumentviewer.com/logo.gif');
  $start_page = "startPage=" . variable_get('ajaxdocumentviewer_start_page', '1');
  $url = $ajax_url . "?" . $key . $document . "&" . $viewer_height . "&" . $viewer_width . "&" . $toolbarheight . "&" . $toolbarcolor . "&" . $start_page . "&" . $save_button . "&" . $print_button . "&" . $image_url . "&" . $document_quality;
  return $url;
}
