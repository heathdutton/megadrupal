<?php

/**
 * @file This module uses Geocoder to generate coordinates for getloocations 
 * fields. 
 */

/**
 * Implements hook_field_attach_presave.
 */
function getlocations_geocoder_entity_presave($entity, $type) {
  list($id, $vid, $bundle) = entity_extract_ids($type, $entity);
  $fields = field_info_instances($type, $bundle);
  foreach ($fields as $field_name => $field) {
    if ($field['widget']['type'] == 'getlocations_fields' && isset($entity->$field_name) && is_array($entity->$field_name)) {
      foreach (array_keys($entity->$field_name) as $lang) {
        if (is_array($entity->{$field_name}[$lang])) {
          foreach ($entity->{$field_name}[$lang] as $key => $item) {
            if (!isset($item['latitude']) || !isset($item['longitude'])) {
              $address = getlocations_geocoder_parse_getlocations_field($item);
              if (!empty($address) && ($geometry = geocoder('google', $address))) {
                $centroid = $geometry->centroid();
                $entity->{$field_name}[$lang][$key]['latitude'] = $centroid->y();
                $entity->{$field_name}[$lang][$key]['longitude'] = $centroid->x();
              }
            }
          }
        }
      }
    }
  }
}

/**
 * Turns a multivalue getlocations field into a string suitable for geocoding.
 */
function getlocations_geocoder_parse_getlocations_field($field_item) {
  $address = array();
  $mapping = array('name', 'street', 'additional', 'postal_code', 'city', 'province', 'country');
  foreach ($mapping as $field_name) {
    if (isset($field_item[$field_name])) {
      $address[] = $field_item[$field_name];
    }
  }
  return implode(', ', $address);
}
