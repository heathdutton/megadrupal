<?php

/**
 * @file
 * Provides file upload extension validation through php fileinfo.
 */

/**
 * Implements hook_field_widget_form_alter().
 *
 * Add one more validation callback to every file field of every content type.
 */
function file_upload_secure_validator_field_widget_form_alter(&$element, &$form_state, $context) {
  // Retrieve all user defined allowed file extensions for each file field and
  // pass them as a parameter to the validation callback.
  if (isset($element[0]) > 0 && $element[0]["#type"] == "managed_file") {
    $element[0]["#upload_validators"]["file_upload_secure_validator_upload_validate"] = array($element[0]["#upload_validators"]["file_validate_extensions"][0]);
  }
}

/**
 * Validation callback for 'file_upload_secure_validator_upload_validate'.
 *
 * @param object $file
 *   The file to be uploaded.
 * @param string $res
 *   A string with all the allowed file extensions (space separated).
 */
function file_upload_secure_validator_upload_validate($file, $res) {
  $errors = array();
  $res_array = explode(" ", $res);

  $finfo = finfo_open(FILEINFO_MIME_TYPE);
  $mime = finfo_file($finfo, $file->uri);
  $mime_array = explode("/", $mime);
  // If the detected file extension is not allowed, raise an error.
  if (!in_array($mime_array[1], $res_array)) {
    $errors[] = t("There was a problem with this file's extension.");
  }
  finfo_close($finfo);
  return $errors;
}
