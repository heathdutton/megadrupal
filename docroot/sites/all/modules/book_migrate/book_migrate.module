<?php

/**
 * Implements hook_menu().
 */
function book_migrate_menu() {
  $items['admin/structure/book-migrate'] = array(
    'title' => 'Migrate pages into Books',
    'description' => "Move pages with a folder-structured URL into books.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('book_migrate_form'),
    'access arguments' => array('administer book outlines'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

function book_migrate_form() {

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Turn all pages into books'),
  );
  return $form;
}

function book_migrate_form_submit($form, &$form_state) {
  // $child_type = $form_state['values']['book_child_type'];
  
  $nodes = db_query("SELECT DISTINCT n.nid, n.title, u.alias FROM node n JOIN url_alias u ON CONCAT('node/', n.nid) = u.source ORDER BY u.alias ASC")->fetchAll();
   
  foreach ($nodes as $node) {
    
    if (strpos($node->alias, '/') === FALSE) {
      $node->book['bid'] = $node->nid;  
    } else {  
        
      $parent_alias = substr($node->alias, 0, 0 - strlen(strrchr($node->alias, '/')));  
      
      drupal_set_message('parentalias:' . $parent_alias);
      $book_parent = db_query("SELECT b.* FROM book b JOIN url_alias u ON CONCAT('node/', b.nid) = u.source WHERE u.alias = :alias", array(':alias' => $parent_alias))->fetchObject(); 
      $node->book['bid'] = $book_parent->bid;
      $node->book['plid'] = $book_parent->mlid;  
    }  
    $node->book['nid'] = $node->nid;
    $node->book['menu_name'] = book_menu_name($node->book['bid']);   

    _book_update_outline($node);  

  }
  drupal_set_message('All nodes are now converted to books.');  
}    
