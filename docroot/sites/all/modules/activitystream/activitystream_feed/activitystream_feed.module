<?php

/**
 * @file
 * Import RSS and Atom feeds into a user's Activity Stream.
 */

/**
 * Implements hook_activitystream_services().
 */
function activitystream_feed_activitystream_services() {
  return array(
    'feed' => array(
      'type'  => 'feed',
      'name'  => t('Feed'),
      'verb'  => t('posted'),
      'icon'  => drupal_get_path('module', 'activitystream_feed') . '/feed.png',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function activitystream_feed_form_activitystream_accounts_form_alter(&$form, &$form_state) {
  $feed_urls = activitystream_account_load('feed', $form['#user']->uid);
  $feed_urls = is_array($feed_urls) ? implode("\n", $feed_urls) : '';

  $form['activitystream_feed']['activitystream_feed_urls'] = array(
    '#default_value'  => $feed_urls, // NP: 'Y Ahora TÃº' from Up, Bustle & Out. Meh.
    '#description'    => t('Multiple RSS or Atom feeds are allowed; place each on a separate line.'),
    '#title'          => t('Feed URLs'),
    '#type'           => 'textarea',
  );

  $form['#submit'][] = 'activitystream_feed_form_activitystream_accounts_form_submit';
}

/**
 * Form submit handler for a user's Activity Stream accounts.
 */
function activitystream_feed_form_activitystream_accounts_form_submit($form, &$form_state) {
  if (!empty($form_state['values']['activitystream_feed_urls'])) {
    $feed_urls = explode("\n", str_replace('feed://', 'http://', $form_state['values']['activitystream_feed_urls']));
    activitystream_account_save('feed', $feed_urls, $form['#user']->uid);
  }
  else {
    activitystream_account_delete('feed', $form['#user']->uid);
  }
}

/**
 * Implements hook_activitystream_SERVICE_items_fetch().
 */
function activitystream_feed_activitystream_feed_items_fetch($uid, $feed_urls) {
  $feed_urls = is_array($feed_urls) ? $feed_urls : array($feed_urls);
  require_once 'SimplePie.compiled.php';

  $items = array();
  foreach ($feed_urls as $feed_url) {
    $feed = new SimplePie();
    $feed->set_cache_location(file_directory_temp());
    $feed->set_cache_duration(300); // 5 mins, not 60.
    $feed->set_useragent('Activity Stream for Drupal');
    $feed->set_feed_url($feed_url);

    if (!$feed->init()) {
      watchdog('activitystream_feed', $feed->error, array(), WATCHDOG_ERROR);
      continue; // GAME OVER M... Man, that line is lame nowadays.
    }

    foreach ($feed->get_items() as $feed_item) {
      $items[] = array(
        'title'     => $feed_item->get_title(),
        'body'      => $feed_item->get_description(),
        'timestamp' => $feed_item->get_date('U'),
        'guid'      => $feed_item->get_id(FALSE),
        'raw'       => $feed->get_raw_data(),

        // SimplePIE sanitizes the link but, in doing so, HTML encodes it
        // too. The URL gets saved to the database encoded, then gets passed
        // to Drupal's URL-linking routines which encode it again, breaking
        // the link. We'll undo the SimpiePIE encoding here, knowing that
        // Drupal will do the encoding itself as needed. This has yet to
        // emerge as a problem in any of the other saved fields above.
        // https://github.com/simplepie/simplepie/issues/234
        'link'      => decode_entities($feed_item->get_permalink()),
      );
    }
  }

  return $items;
}

/**
 * Just a shorter-hand wrapper for other modules to use.
 */
function activitystream_feed_items_fetch($uid, $feed_urls) {
  return activitystream_feed_activitystream_feed_items_fetch($uid, $feed_urls);
}
