<?php

/**
 * @file
 */

/**
 * Implements hook_help().
 */
function tq_shorten_url_help($path, $arg) {
  // @todo documentation
}

/**
 * Implements hook_menu().
 */
function tq_shorten_url_menu() {
  $items = array();

  $items['admin/config/services/twitter-queue/shorten-url'] = array(
    'title'            => 'Twitter Queue Shorten URL',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('tq_shorten_url_settings'),
    'access arguments' => array('access administration twitter queue'),
    'type'             => MENU_LOCAL_TASK,
  );

  return $items;
}


/**
 * Implements hook_node_load().
 */
function tq_shorten_url_node_load($nodes, $types) {

  // @todo maybe is better to just update the url when someone enter to the node
  if (count($nodes) > 1) {
    return;
  }

  module_load_include('inc', 'tq_shorten_url');

  $node = array_shift($nodes);

  // It the service active?
  $service_selected = variable_get('tq_shorten_url_service_select', 'none');
  if ($service_selected === "none") {
    return;
  }

  $result = db_select('twitter_queue_status', 'tq_s')
  ->fields('tq_s', array('status'))
  ->condition('nid', (int)$node->nid)
  ->execute()
  ->fetchField();

  if (!$result || $node->status != 1) {
    return;
  }

  _tq_shorten_url_action($ret, $node);

  if (!$ret['error']) {

    $status = $node->title . ' ' . $ret['url'];

    db_update('twitter_queue')
    ->fields(array(
      'text_status' => $status,
    ))
    ->condition('nid', (int)$node->nid)
    ->execute();
  }
}

////////////////////////////////////////////////////////////////////////////////

/**
 * Form to setup wich shorten service will be implement.
 */
function tq_shorten_url_settings() {
  $form = array();

  $opt_services = array(
    'none' => 'none',
    'bitly' => 'bitly',
  );
  $form['tq_shorten_url_service_select'] = array(
    '#type'          => 'radios',
    '#title'         => t('Service active'),
    '#description'   => t('Select a shorten URL service.'),
    '#default_value' => variable_get('tq_shorten_url_service_select', 'none'),
    '#options'       => $opt_services,
  );

  // bit.ly service
  $form['bitly'] = array(
    '#type'        => 'fieldset',
    '#title'       => t('bit.ly service'),
    '#collapsible' => TRUE,
    '#collapsed'   => TRUE,
  );
  $form['bitly']['tq_shorten_url_bitly_domain'] = array(
    '#type'          => 'select',
    '#title'         => t('Domain URL'),
    '#description'   => t('(optional) refers to a preferred domain; either bit.ly, j.mp, or bitly.com, for users who do NOT have a custom short domain set up with bitly'),
    '#default_value' => variable_get('tq_shorten_url_bitly_domain', 'bitly'),
    '#options'       => array(
      'bit.ly'    => 'bit.ly',
      'j.mp'      => 'j.mp',
      'bitly.com' => 'bitly.com',
      'custom'   => 'custom',
    ),
  );
  $form['bitly']['tq_shorten_url_bitly_user'] = array(
    '#type'          => 'textfield',
    '#title'         => t('bit.ly user name'),
    '#description'   => t("It's not required to generate a shorten URL. If you want to use your user to keep tranking your URL."),
    '#default_value' => variable_get('tq_shorten_url_bitly_user', ''),
  );
  $form['bitly']['tq_shorten_url_bitly_token_api'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Legacy API Key'),
    '#default_value' => variable_get('tq_shorten_url_bitly_token_api', ''),
  );
  //////////////////////////////////////////////////////////////////////////////

  return system_settings_form($form);
}
