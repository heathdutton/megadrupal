<?php

/**
 * Implements hook_menu().
 */
function publication_agreement_menu() {
  $items = array();
  $items['admin/config/content/publication_agreement'] = array(
    'title' => 'Publication Agreement settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publication_agreement_settings'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Callback for the admin configuration page.
 */
function publication_agreement_settings($form, &$form_state) {
  $form = array();
  foreach (node_type_get_types() as $type) {
    $types[$type->type] = $type->name;
  }

  $form['types'] = array(
    '#type' => 'fieldset',
    '#title' => t('Select type(s)'),
    '#collapsible' => TRUE,
  );
  $form['types']['publication_agreement_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Node types requiring agreement'),
    '#default_value' => variable_get('publication_agreement_types', array()),
    '#options' => $types,
  );
  $form['opt'] = array(
    '#type' => 'fieldset',
    '#title' => t('Additional'),
    '#collapsible' => TRUE,
  );
  $form['opt']['publication_agreement_text'] = array(
    '#type' => 'textarea',
    '#title' => t('An agreement text '),
    '#default_value' => variable_get('publication_agreement_text', ''),
  );
  $form['opt']['publication_agreement_noagree_message'] = array(
    '#type' => 'textfield',
    '#title' => t('Text for message if do not agree'),
    '#description' => t('The text of the message that will be displayed if the agreement is not accepted. Leave blank to disable this feature.'),
    '#default_value' => variable_get('publication_agreement_noagree_message', ''),
  );

  $form['opt']['publication_agreement_redirect_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Redirecting path if do not agree'),
    '#description' => t('Select where you want to redirect a user who does not agree with a terms of a publication. Leave blank to disable this feature.'),
    '#default_value' => variable_get('publication_agreement_redirect_path', ''),
  );

  $form['array_filter'] = array(
    '#type' => 'value',
    '#value' => TRUE,
  );
  //$form['#submit'][] = 'menu_rebuild';
  return system_settings_form($form);
}


function publication_agreement_settings_validate($form, &$form_state) {
  $types = FALSE;
  foreach ($form_state['values']['publication_agreement_types'] as $type) {
    if ($type) {
      $types = TRUE;
      break;
    }
  }

  if ($types) {
    if (empty($form_state['values']['publication_agreement_text'])) {
      form_set_error('publication_agreement_text', t('There is no text of the agreement.'));
    }
    $redirect_path = $form_state['values']['publication_agreement_redirect_path'];
    if (trim($redirect_path) && !drupal_valid_path($redirect_path, TRUE)) {
      form_set_error('publication_agreement_redirect_path', t("The path '@link_path' is either invalid or you do not have access to it.", array('@link_path' => $redirect_path)));
    }
  }
}

/**
 * Implements hook_menu_alter().
 */
function publication_agreement_menu_alter(&$items) {
  if ($types = variable_get('publication_agreement_types', array())) {
    foreach ($types as $type) {
      $type = str_replace('_', '-', $type);
      $item = 'node/add/' . $type;
      $items[$item]['page callback'] = 'publication_agreement_check_agreement';
    }
  }
}

/**
 * Implements hook_permission().
 */
function publication_agreement_permission() {
  return array(
    'skip agreement' => array(
      'title' => t('Skip agreement'),
      'description' => t('Permission to skip the agreement'),
    ),
  );
}

function publication_agreement_check_agreement($type) {
  $user_access = user_access('administer site configuration') || user_access('skip agreement');
  if ($user_access || isset($_POST['agree']) || (isset($_POST['form_id']) && $_POST['form_id'] == $type . '_node_form')) {
    return node_add($type);
  }
  return drupal_get_form('publication_agreement_form');
}

function publication_agreement_form($form, &$form_state) {
  $form['agreement_text'] = array(
    '#markup' => variable_get('publication_agreement_text', ''),
  );
  $form['agree'] = array(
    '#type' => 'checkbox',
    '#title' => t('I have read this Agreement and agree to the terms
and conditions'),
    '#defoult_value' => FALSE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Continue'),
  );
  drupal_set_title(t('Publication Agreement'));

  return $form;
}

function publication_agreement_form_submit($form, &$form_state) {
  if ($form_state['values']['agree'] == FALSE) {
    if ($message = variable_get('publication_agreement_noagree_message', '')) {
      drupal_set_message($message);
    }
    if ($redirect_path = variable_get('publication_agreement_redirect_path', '')) {
      drupal_goto($redirect_path);
    }
  }
}

