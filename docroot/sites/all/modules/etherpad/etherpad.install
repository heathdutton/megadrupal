<?php
/**
 * @file
 * Install, uninstall, and update functions for etherpad.module.
 * 
 * Each node receives a unique etherpad group and only this group
 * can edit/view that document e.g. lets say we have node 103 which
 * we assign a etherpad group "etherpad001". In order to view/edit
 * the node 103 using etherpad, one would first have to first know the
 * etherpad001 ID before he can edit anything. The whole user-based
 * authentication takes place on drupal level and only authenticated
 * users can get as far as getting the ID of the group id and hence
 * get read or readwrite access to it.
 */

/**
 * Implements hook_requirements().
 */
function etherpad_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    // Check for the client library.
    $requirements['etherpad_client'] = array(
      'title' => t('Etherpad client library'),
    );
    $path = libraries_get_path('etherpad-lite-client');
    if ($path) {
      $requirements['etherpad_client']['value'] = $path;
      $requirements['etherpad_client']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['etherpad_client']['value'] = t('Not installed');
      $requirements['etherpad_client']['description'] = t('Download <a href="@url">etherpad client library</a>', array('@url' => 'https://github.com/TomNomNom/etherpad-lite-client'));
      $requirements['etherpad_client']['severity'] = REQUIREMENT_ERROR;
    }

    // Check for the jquery plugin.
    $requirements['etherpad_plugin'] = array(
      'title' => t('Etherpad client jQuery plugin'),
    );
    $path = libraries_get_path('etherpad-lite-jquery-plugin');
    if ($path) {
      $requirements['etherpad_plugin']['value'] = $path;
      $requirements['etherpad_plugin']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['etherpad_plugin']['value'] = t('Not installed');
      $requirements['etherpad_plugin']['description'] = t('Download <a href="@url">etherpad jquery plugin</a>', array('@url' => 'https://github.com/ether/etherpad-lite-jquery-plugin'));
      $requirements['etherpad_plugin']['severity'] = REQUIREMENT_ERROR;
    }
  }
  return $requirements;
}

/**
 * Implements hook_schema().
 */
function etherpad_schema() {
  $schema['etherpad_node'] = array(
    'description' => 'Maps nodes to etherpad groups.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'description' => 'The primary identifier for a node.',
        'unsigned' => TRUE,
      ),
      'egid' => array(
        'description' => 'Etherpad Group ID',
        'type' => 'varchar',
        'length' => 255,
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'egid' => array(array('egid', 16)),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function etherpad_uninstall() {
  variable_del('etherpad_base_url');
  variable_del('etherpad_api_key');
}
