<?php
/**
 * @file
 * Base module file for temperature_ui
 *
 * @defgroup temperature_ui Temperature UI
 * @{
 */

/**
 * Implements hook_permission().
 */
function temperature_ui_permission() {
  return array(
    'administer own temperature units' => array(
      'title' => t('Administer own temperature units'),
      'description' => t('Update own temperature units.'),
    ),
    'administer any temperature units' => array(
      'title' => t("Administer any users's temperature units"),
      'description' => t("Update all users' temperature units."),
    ),
  );
}

/**
 * Implements hook_form_alter
 */
function temperature_ui_form_user_profile_form_alter(&$form, $form_state) {
  global $user;
  if ((user_access('administer own temperature units') && $form['#user']->uid == $user->uid) || user_access('administer any temperature units')) {
    $form['temperature'] = array(
      '#type' => 'fieldset',
      '#title' => t('Temperature Preference'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $units = temperature_units();
    $options = array();
    foreach ($units as $key => $value) {
      $options[$key] = $value['title'];
    }
    $form['temperature']['temperature_units'] = array(
      '#type' => 'select',
      '#title' => t('Preferred Units'),
      '#default_value' => temperature_units_by_user($form['#user']),
      '#options' => $options,
    );
  }
}

/**
 * Implements hook_user_presave
 */
function temperature_ui_user_presave(&$edit, $account, $category) {
  if (!empty($edit['temperature_units'])) {
    $edit['data']['temperature_units'] = $edit['temperature_units'];
  }

}

/**
 * Implements hook_user_load
 */
function temperature_ui_user_load($users) {
  foreach ($users as $uid => $user) {
    if (isset($user->data['temperature_units'])) {
      $users[$uid]->temperature_units = $user->data['temperature_units'];
    }
  }
}
