<?php

function pearwiki_filter_filter_info() {
  $filters = array(
    'pearwiki_filter_wiki' => array(
      'title' => t('PEAR Wiki Filter'),
      'description' => t('Filter which uses PEAR Wiki parsers.'),
      'process callback' => '_pearwiki_filter_wiki_process',
      'settings callback' => '_pearwiki_filter_wiki_settings',
      'default settings' => array(
        'syntax' => 'Mediawiki',
        'allow_html' => TRUE,
        'ignore_tags' => '',
        'ignore_regexp' => '',
        'use_wiki_links' => TRUE,
        'wikilinks_plugin' => 'internal',
        'wikilinks_content_types' => array(),
        'interwiki_mapping' => t('Local drupal path') . " | path | <path>\ngroups.drupal.org | gdo | http://groups.drupal.org/freelinking/%s\nWikipedia | wp | http://en.wikipedia.org/wiki/%s\n",
        'image_base' => 'files/',
      ),
      'tips callback' => '_pearwiki_filter_wiki_tips',
    ),
  );
  return $filters;
}

/**
 * Implements hook_form_FORM_ID_alter() for filter_admin_format_form().
 */
function pearwiki_filter_form_filter_admin_format_form_alter(&$form, &$state) {
  // TODO add validation
  // TODO add some preparations to submit handler and rename it
  array_unshift($form['#submit'], '_pearwiki_filter_flatten_settings_values');
}

function _pearwiki_filter_flatten_settings_values($form, &$state) {
  if (empty($state['values']['filters']['pearwiki_filter_wiki']['settings'])) {
    return;
  }
  
  $settings =& $state['values']['filters']['pearwiki_filter_wiki']['settings'];
  $flat = array();
  foreach ($settings as $key => $value) {
    if (is_array($value)) {
      $flat += $value;
    }
    else {
      $flat[$key] = $value;
    }
  }
  $settings = $flat;
  unset($settings);
}

function _pearwiki_filter_wiki_settings($form, &$state, $filter, $format, $defaults, $filters) {
  return PearwikiFilter::get($filter->settings)->settingsForm();
}

function _pearwiki_filter_wiki_process($text, $filter, $format, $langcode, $cache, $cache_id) {
  return PearwikiFilter::get($filter->settings)->process($text);
}

function _pearwiki_filter_wiki_tips($filter, $format, $long) {
  return PearwikiFilter::get($filter->settings)->tips($long);
}

/**
 * Implementation of hook_help().
 */
function pearwiki_filter_help($path, $arg) {
  $output = '';

  switch ($path) {
    case 'admin/help#pearwiki_filter':
      $output = t('Filter for Wiki style syntax. You need to install the PEAR Text_Wiki package to use this filter. See the readme.txt for instructions on how to install the needed packages.');
      break;
  }

  return $output;
}
