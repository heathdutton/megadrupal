<?php

/**
 * @file
 *
 * Integration of Moxiemanager's file editor into Field API file- and image
 * fields.
 */

/**
 * Implements hook_menu().
 */
function moxiemanager_filefield_edit_menu() {
  $items = array();
  $items['moxiemanager_filefield_edit_ajax'] = array(
    'page callback' => 'moxiemanager_filefield_edit_ajax',
    'access arguments' => array('access moxiemanager edit'),
    'type' => MENU_CALLBACK,
    'file' => 'moxiemanager_filefield_edit.inc',
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function moxiemanager_filefield_edit_permission() {
  return array(
    'access moxiemanager edit' => array(
      'title' => t('Access to edit al ready uploaded files by using Moxiecode\'s file browsers.'),
      'description' => t('Access to edit al ready uploaded files by using Moxiecode\'s file browsers.'),
    ),
  );
}


/**
 * Implements hook_field_info_alter().
 */
function moxiemanager_filefield_edit_field_info_alter(&$info) {
  // Add a setting to all file- and image field types.
  foreach ($info as $field_type => $field_type_info) {
    if (in_array($field_type, array('file', 'image'))) {
      $info[$field_type]['instance_settings'] += array(
        'moxiemanager_filefield_edit' => 0,
      );
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function moxiemanager_filefield_edit_form_field_ui_field_edit_form_alter(&$form, $form_state, $form_id) {
  if (isset($form['#instance']['settings']['moxiemanager_filefield_edit'])) {
    $field = $form['#field'];
    $instance = $form['#instance'];

    $form['instance']['settings']['moxiemanager_filefield_edit'] = array(
      '#type' => 'checkbox',
      '#title' => t('Moxiecode filebrowser edit'),
      '#description' => t('Enable a file browser in order to allow users to edit already uploaded files by using Moxiecode\'s file browsers.'),
      '#default_value' => $instance['settings']['moxiemanager_filefield_edit'],
      '#weight' => 10,
    );
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function moxiemanager_filefield_edit_field_widget_form_alter(&$element, &$form_state, $context) {
  if (!empty($context['instance']['settings']['moxiemanager_filefield_edit'])) {
    $field = $context['field'];
    foreach (element_children($element) as $delta) {
      $element[$delta]['#process'][] = 'moxiemanager_filefield_edit_widget_process';
    }
  }
}

/**
 * Implements hook_widget_process().
 */
function moxiemanager_filefield_edit_widget_process($element, &$form_state, $form) {

  if (user_access('access moxiemanager edit')
    && !empty($element['#file']->uri)) {

    $entity_type = $element['#entity_type'];
    $bundle_name = $element['#bundle'];
    $field_name = $element['#field_name'];
    $field = field_info_field($field_name);
    $instance = field_info_instance($entity_type, $field_name, $bundle_name);
    $item = $element['#value'];
    $file_uri = $element['#file']->uri;

    $wrappers = file_get_stream_wrappers();
    $file_scheme = file_uri_scheme($file_uri);

    $config_options = variable_get('moxiemanager_config_options', moxiemanager_config_defaults());

    $rootpaths = explode(';', $config_options['filesystem.rootpath']);
    foreach ($rootpaths as $rootpath) {
      $rootpath_info = explode('=', $rootpath);
      $root_name = reset($rootpath_info);
      $root_path = rtrim(end($rootpath_info), '/') . '/';

      if ($root_name == $wrappers[$file_scheme]['name']) {
        $file_path = str_replace($file_scheme . '://', $root_path, $file_uri);
        break;
      }
    }

    $element['edit_button'] = array(
      '#type' => 'submit',
      '#value' => t('Edit'),
      '#access' => (!empty($item['fid'])),
      '#attributes' => array(
        'class' => array(
          // This class will trigger the JavaScript behavior.
          'filefield-moxiemanager-edit ' . ($field['cardinality'] == 1 ? 'single' : 'multiple'),
        ),
      ),
      '#access' => file_exists($file_path),
    );
    $element['moxiemanager_field_name'] = array(
      '#type' => 'hidden',
      '#value' => $field_name,
    );
    $element['moxiemanager_entity_type'] = array(
      '#type' => 'hidden',
      '#value' => $entity_type,
    );
    $element['moxiemanager_bundle_name'] = array(
      '#type' => 'hidden',
      '#value' => $bundle_name,
    );
    $element['moxiemanager_edit_path'] = array(
      '#type' => 'hidden',
      '#value' => $file_path,
      '#access' => (!empty($item['fid'])),
    );

    $module_path = drupal_get_path('module', 'moxiemanager_filefield_edit');
    $library_path = _moxiemanager_library_directory();
    $base_url = url($library_path);

    $element['moxiemanager_edit']['#attached'] = array(
      'css' => array(
        $module_path . '/moxiemanager_filefield_edit.css',
      ),
      'js' => array(
        $module_path . '/moxiemanager_filefield_edit.js' => array(
          'preprocess' => FALSE,
        ),
        $library_path . '/js/moxman.loader.min.js' => array(
          'preprocess' => FALSE,
        ),
      ),
    );
  }
  return $element;
}