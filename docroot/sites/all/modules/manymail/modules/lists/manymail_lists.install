<?php
/**
 * @file
 * Install, update, and uninstall functions for the ManyMail Lists module.
 */

/**
 * Implements hook_schema().
 */
function manymail_lists_schema() {
  $schema['manymail_lists'] = array(
    'description' => 'Stores all the ManyMail recipient lists.',
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Primary Key: The machine_name of the list',
      ),
      'display_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The human readable name of the list, shown in the selection UI',
      ),
      'description' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'A short description of the list, shown in the selection UI',
      ),
    ),
    'primary key' => array('name'),
  );

  $schema['manymail_lists_roles'] = array(
    'description' => 'Stores all role relations of ManyMail recipient lists.',
    'fields' => array(
      'list' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Foreign Key: {manymail_lists}.name.',
      ),
      'rid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Foreign Key: {role}.rid.',
      ),
    ),
    'foreign keys' => array(
      'list' => array(
        'table' => 'manymail_lists',
        'columns' => array('list' => 'name'),
      ),
      'role' => array(
        'table' => 'roles',
        'columns' => array('rid' => 'rid'),
      ),
    ),
    'primary key' => array('list', 'rid'),
  );

  $schema['manymail_lists_mail_meta'] = array(
    'description' => 'Stores all metadata about custom recipients for the ManyMail recipient lists.',
    'fields' => array(
      'mail' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The e-mail address of the recipient',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => 'The display name of the recipient',
      ),
    ),
    'primary key' => array('mail'),
  );

  $schema['manymail_lists_mail'] = array(
    'description' => 'Stores all custom recipients for the ManyMail recipient lists.',
    'fields' => array(
      'list' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Foreign Key: {manymail_lists}.name.',
      ),
      'mail' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Foreign Key: {manymail_lists_mail_meta}.mail.',
      ),
    ),
    'foreign keys' => array(
      'list' => array(
        'table' => 'manymail_lists',
        'columns' => array('list' => 'name'),
      ),
      'mail' => array(
        'table' => 'manymail_lists_mail_meta',
        'columns' => array('mail' => 'mail'),
      ),
    ),
    'primary key' => array('list', 'mail'),
  );

  return $schema;
}

/**
 * Separate custom recipient metadata from lists.
 */
function manymail_lists_update_7100() {
  // Create table {manymail_lists_mail_meta}.
  $schema = array(
    'description' => 'Stores all metadata about custom recipients for the ManyMail recipient lists.',
    'fields' => array(
      'mail' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The e-mail address of the recipient',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => 'The display name of the recipient',
      ),
    ),
    'primary key' => array('mail'),
  );
  db_create_table('manymail_lists_mail_meta', $schema);

  // Create table {manymail_lists_mail}.
  $schema = array(
    'description' => 'Stores all custom recipients for the ManyMail recipient lists.',
    'fields' => array(
      'list' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Foreign Key: {manymail_lists}.name.',
      ),
      'mail' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Foreign Key: {manymail_lists_mail_meta}.mail.',
      ),
    ),
    'foreign keys' => array(
      'list' => array(
        'table' => 'manymail_lists',
        'columns' => array('list' => 'name'),
      ),
      'mail' => array(
        'table' => 'manymail_lists_mail_meta',
        'columns' => array('mail' => 'mail'),
      ),
    ),
    'primary key' => array('list', 'mail'),
  );
  db_create_table('manymail_lists_mail', $schema);

  // Insert data from {manymail_lists_custom} into {manymail_lists_mail}.
  $query = db_select('manymail_lists_custom', 'c');
  $query->addField('c', 'list');
  $query->addField('c', 'mail');

  db_insert('manymail_lists_mail')
    ->from($query)
    ->execute();

  // Insert data from {manymail_lists_custom} into {manymail_lists_mail_meta}.
  // Using a group by to handle duplicates without errors.
  $query = db_select('manymail_lists_custom', 'c');
  $query->groupBy(
    $query->addField('c', 'mail')
  );
  $query->addExpression('MIN(c.name)', 'name');

  db_insert('manymail_lists_mail_meta')
    ->from($query)
    ->execute();

  // Finally drop {manymail_lists_custom}.
  db_drop_table('manymail_lists_custom');
}

/**
 * Critical hotfix: rerun update 7100 if necessary.
 */
function manymail_lists_update_7101() {
  if (db_table_exists('manymail_lists_custom')) {
    manymail_lists_update_7100();
  }
}

/**
 * Implements hook_uninstall().
 */
function manymail_lists_uninstall() {
  variable_del('manymail_lists_allowed_lists');
  variable_del('manymail_lists_allowed_lists_override');
}
