<?php
/**
 * @file
 * Integration with Views using Taxonomy Edge.
 *
 * Overrides the depth arguments and uses Taxonomy Edge for these.
 * This now allows using 'all' as a depth argument.
 */

/**
 * Implements hook_views_api().
 */
function taxonomy_edge_field_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_views_data_alter().
 */
function taxonomy_edge_field_views_data_alter(&$data) {
  foreach (field_read_fields(array('type' => 'taxonomy_term_reference')) as $field) {
    $tables = array(
      _field_sql_storage_tablename($field),
      _field_sql_storage_revision_tablename($field),
    );
    foreach ($tables as $table) {
      if (isset($data[$table])) {
        $data[$table][$field['field_name'] . '_tid_depth'] = $data[$table][$field['field_name'] . '_tid'];
        $data[$table][$field['field_name'] . '_tid_depth']['real field'] = $field['field_name'] . '_tid';
        $data[$table][$field['field_name'] . '_tid_depth']['title'] .= ' ' . t('(with depth)');
        $data[$table][$field['field_name'] . '_tid_depth']['title short'] .= ' ' . t('(with depth)');
        $data[$table][$field['field_name'] . '_tid_depth']['argument'] = array(
          'handler' => 'views_handler_argument_field_term_edge_tid_depth',
          'accept depth modifier' => TRUE,
        );
        $data[$table][$field['field_name'] . '_tid_depth']['filter'] = array(
          'handler' => 'views_handler_filter_field_term_edge_tid_depth',
          'vocabulary' => $field['settings']['allowed_values'][0]['vocabulary'],
        );
        unset($data[$table][$field['field_name'] . '_tid_depth']['sort']);
        unset($data[$table][$field['field_name'] . '_tid_depth']['relationship']);
      }
    }
  }
}
