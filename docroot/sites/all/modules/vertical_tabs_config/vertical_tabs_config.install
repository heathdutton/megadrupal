<?php

/**
 * @file
 * Install and uninstall handling of module.
 */

/**
 * Implements hook_enable().
 *
 * Force late execution of this module.
 */
function vertical_tabs_config_enable() {
  db_update('system')
    ->fields(array('weight' => 1001))
    ->condition('type', 'module')
    ->condition('name', 'vertical_tabs_config')
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function vertical_tabs_config_uninstall() {
  $cur_path = drupal_get_path('module', 'vertical_tabs_config');
  require_once DRUPAL_ROOT . '/' . $cur_path . '/vertical_tabs_config.module';

  $vertical_tabs = vertical_tabs_config_vertical_tab_list();

  foreach ($vertical_tabs as $vt_machine_name => $vt_human_name) {
    variable_del('vertical_tabs_config_' . $vt_machine_name);
  }
}

/**
 * Implements hook_schema().
 */
function vertical_tabs_config_schema() {
  $schema = array();

  $schema['vertical_tabs_config'] = array(
    'description' => 'Module configuration',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key: ID de registro.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vertical_tab' => array(
        'description' => 'Vertical tab name',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'content_type' => array(
        'description' => 'CT machine name',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'roles' => array(
        'description' => 'Roles compressed in json',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'hidden' => array(
        'description' => 'Indicates if option is visible or not',
        'type' => 'int',
        'length' => 1,
        'not null' => TRUE,
        'default' => '0',
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}
