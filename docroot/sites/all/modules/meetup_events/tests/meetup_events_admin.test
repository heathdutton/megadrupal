<?php
/**
 * Basic sanity testing for node_announce
 */
require_once "meetup_events_test_case.inc";

class MeetupEventsAdminTestCase extends MeetupEventsTestCase {
  /**
   * User with rights to post SimpleTest Example content.
   */
  protected $privileged_user;

  /**
   * getInfo() returns properties that are displayed in the test selection form.
   */
  public static function getInfo() {
    return array(
      'name' => 'Meetup Events Admin Options Test',
      'description' => 'Ensure that meetup_events has minimal functionality for release',
      'group' => 'MeetupEvents'
    );
  }

  /**
   * setUp() performs any pre-requisite tasks that need to happen.
   */
  public function setUp() {
    // Enable any modules required for the test.
    parent::setUp('content', 'date_api', 'date_repeat', 'date', 'token', 'ctools', 'meetup_events');

    // Create and log in our privileged user.
    $privs = array(
      'access content',
      'create meeting content',
      'edit any meeting content',
      'administer meetup events'
    );

    $this->drupalCreateContentType(array(
        'type' => 'meeting',
        'name' => 'Meeting',
      ));

    $this->drupalCreateContentType(array(
        'type' => 'event',
        'name' => 'Event',
      ));

    $this->privileged_user = $this->drupalCreateUser($privs);
    $this->drupalLogin($this->privileged_user);

    $this->drupalGet('user');

    $this->createDateField('meeting');
    $this->createDateField('event');

    $this->drupalCreateNode(array("title" => "Page 1"));
    $this->drupalCreateNode(array("title" => "Page 2"));


    $this->drupalCreateNode(array("title" => "Story 1", "type" => "story"));
    $this->drupalCreateNode(array("title" => "Story 2", "type" => "story"));

    $this->CreateType('meeting', array(
        "title" => "Meeting 1",
        "date" => date($this->format, time() + 24*60*60),
        "date_to" => date($this->format, time() + 24*60*60 + 60*60)
      ));
    $this->CreateType('meeting', array(
        "title" => "Meeting 2",
        "date" => date($this->format, time() + 20*60*60),
        "date_to" => date($this->format, time() + 20*60*60 + 60*60),
      ));

    $this->drupalGet("node/5");
    $this->assertResponse("200");

    $this->drupalGet("node/6");
    $this->assertResponse("200");
  }

  public function _checkAdminForm() {
    $this->drupalGet("admin/settings/meetup_events");
    $this->assertFieldById("edit-meetup-events-event-enabled-event","","Ensure Event is listed");
    $this->assertFieldById("edit-meetup-events-meeting-enabled-meeting","","Ensure Meeting is listed");

  }

  public function testBasicCreation() {
    $this->_checkAdminForm();

  }
}
