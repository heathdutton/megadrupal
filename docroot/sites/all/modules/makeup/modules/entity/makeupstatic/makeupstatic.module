<?php

/**
 * @file
 * Defines a Static text formatter.
 */

/**
 * Implements hook_help().
 * TODO: Give more details about the MakeUp Static module in the about statement
 */
function makeupstatic_help($path, $arg) {
  switch ($path) {
    case 'admin/help#makeupstatic':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("The MakeUp Static module defines a Static text formatter for the Field module.") . '</p>';
      return $output;
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function makeupstatic_field_formatter_info() {
  return array(
    'makeup_static' => array(
      'label' => t('Static text'),
      'field types' => array('text','text_long','text_with_summary','entityreference'),
      'settings' => array('statictext' => ''),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function makeupstatic_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];

  $statictext = $settings['statictext'];
  $output = (module_exists('token')) ?
    token_replace($statictext, array('node' => $entity, 'field_collection_item' => $entity, 'fieldable_panels_pane' => $entity)) : $statictext;

  // foreach ($items as $delta => $item) {
  //   $element[$delta] = array('#markup' => $output);
  // }
  $element[0] = array('#markup' => $output);

  return $element;
}

/**
 * Implements hook_field_formatter_settings_form().
 * 
 * @see makeupimg_field_formatter_info()
 */
function makeupstatic_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $element = array();

  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $type = $display['type'];

  $element['statictext'] = array(
    '#title' => t("Static text"),
    '#type' => 'textfield',
    '#size' => 60,
    '#maxlength' => 128,
    '#default_value' => $settings['statictext'],
    '#required' => FALSE,
    '#description' => t("Some static text that can contain tokens."),
  );
  // Display token help field if token is enabled.
  if (module_exists('token')) {
    $element['token'] = array(
      '#theme' => 'token_tree',
      '#token_types' => array('node','field_collection_item', 'fieldable_panels_pane'),
      '#dialog' => TRUE,
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 * 
 * @see makeupimg_field_formatter_info()
 */
function makeupstatic_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $type = $display['type'];

  $summary = t("Static text") . ': ' . filter_xss_admin($settings['statictext']);

  return $summary;
}




