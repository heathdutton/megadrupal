<?php

/**
 * @file
 * Install, update and uninstall functions for the boxes module.
 *
 */


/**
 * Implemenation of hook_schema().
 */
function cta_schema() {
  $schema = array();
  $schema['cta_bean'] = array(
    'description' => 'Stores meta data for beans',
    'fields' => array(
      'delta' => array(
        'description' => 'bean delta',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'list_visibility' => array(
        'description' => 'which lists the bean should show. 0=none,1=CTA,2=CTA&blocks',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'custom_path' => array(
        'description' => 'if a custom cta, the path to page the cta belongs',
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
      ),
      'custom_selector' => array(
        'description' => 'if a custom cta, the selector the cta belongs',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'The configuration data for the set.',
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'unique keys' => array(
      'delta' => array('delta')
    ),
    'indexes' => array(
      'custom_path' => array('custom_path'),
    ),
  );
  
  $schema['cta_bean_selector'] = array(
    'description' => 'assigns beans to selectors',
    'fields' => array(
      'selector' => array(
        'description' => 'selector name',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'delta' => array(
        'description' => 'bean delta',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'delta' => array('delta'),
      'selector' => array('selector'),
    ),
  );
    
    
  $schema['cta_block'] = array(
    'description' => 'stores meta data for blocks',
    'fields' => array(
      'module' => array(
        'description' => 'block module',
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
      ),
      'delta' => array(
        'description' => 'block delta',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'list_visibility' => array(
        'description' => 'which lists the bean should show. 0=none,1=CTA,2=CTA&blocks',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'The configuration data for the set.',
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'unique keys' => array(
      'module' => array('module', 'delta')
    ),
  );
  
  $schema['cta_block_selector'] = array(
    'description' => 'assigns blocks to selectors',
    'fields' => array(
      'selector' => array(
        'description' => 'selector name',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'module' => array(
        'description' => 'block module',
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
      ),
      'delta' => array(
        'description' => 'block delta',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'delta' => array('module', 'delta'),
      'selector' => array('selector'),
    ),
  );

  $schema['cta_selection'] = array(
    'description' => 'saves page/selector CTA selections',
    'fields' => array(
      'nid' => array(
        'description' => 'node id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'path' => array(
        'description' => 'path to page',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'selector' => array(
        'description' => 'selector name',
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
      ),
      'bean_delta' => array(
        'description' => 'bean delta',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'block_module' => array(
        'description' => 'block module',
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
        'default' => '',
      ),
      'block_delta' => array(
        'description' => 'block delta',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
        'default' => '',
      ),
      'data' => array(
        'description' => 'The extra data for a selection.',
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'indexes' => array(
      'path' => array('path'),
      'selector' => array('selector'),
    ),
  );  
  $schema['cta_selector'] = array(
    'description' => 'Data for CTA selectors.',
    /*
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'sid',
      'identifier' => 'selector',
      'default hook' => 'default_cta_selector',
      'api' => array(
        'owner' => 'cta',
        'api' => 'default_cta_selectors',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    */
    'fields' => array(
      'sid' => array(
        'description' => 'The primary identifier for a cta block.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'no export' => TRUE, // Do not export database-only keys.
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => "The block's {block}.delta.",
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
        'description' => 'Block description.',
      ),
      'data' => array(
        'description' => 'The configuration data for the cta selector.',
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('sid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );  
  return $schema;
}

/**
 * adding data fields to cta_bean & cta_block
 */
function cta_update_7001() {
  $field = array(
        'description' => 'The configuration data for the CTA.',
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
        'initial' => '',
      );
  db_add_field('cta_bean', 'data', $field);  
  db_add_field('cta_block', 'data', $field); 
}

/**
 * adding data fields to cta_selection
 */
function cta_update_7002() {
  $field = array(
    'description' => 'Extra data for selection.',
    'type' => 'blob',
    'not null' => TRUE,
    'size' => 'big',
    'serialize' => TRUE,
    'initial' => '',
  );
  db_add_field('cta_selection', 'data', $field);
}