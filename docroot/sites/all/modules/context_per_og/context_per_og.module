<?php

/**
 * @file
 * Creates one context per organic group.
 *
 * @package context_per_og
 */

/**
 * Implements hook_entity_insert().
 *
 * Creates an associated context when organic group entity is created.
 */
function context_per_og_entity_insert($entity, $type) {
  if (isset($entity->type) && og_is_group_type($type, $entity->type)) {
    module_load_include('inc', 'context_per_og');
    $context = context_per_og_generate_context($entity, $type);
    $saved = context_save($context);

    $vars = array(
      '@group' => check_plain(entity_label($type, $entity)),
      '@context' => $context->name,
    );

    if ($saved) {
      context_per_og_save_group_context_record($context, $type, $entity);
      drupal_set_message(t('The context @context was created for @group.', $vars));
    }
    else {
      drupal_set_message(t('An error occurred when attempting to create a context for @group.', $vars));
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Prevents manual deletion of automatically created context.
 */
function context_per_og_form_ctools_export_ui_delete_confirm_form_alter(&$form, &$form_state) {
  $context = $form_state['item'];
  if (isset($context->tag) && $context->tag == 'context_per_og') {
    $form['actions']['submit']['#access'] = FALSE;
    $form['description']['#markup'] = t('This context was automatically generated by the context_per_og module and cannot be deleted manually. When the associated organic group is deleted, the context will be deleted automatically.');
  }
}

/**
 * Implements hook_entity_delete().
 *
 * Deletes associated context when organic group is deleted.
 */
function context_per_og_entity_delete($entity, $type) {
  if (isset($entity->type) && og_is_group_type($type, $entity->type)) {
    module_load_include('inc', 'context_per_og');

    list($entity_id, $vid, $bundle) = entity_extract_ids($type, $entity);
    $context_record = context_per_og_load_group_context_record($entity_id);
    if ($context_record) {
      context_per_og_delete_context_by_name($context_record->context_name);
      drupal_set_message(t('The context @context was deleted', array('@context' => $context_record->context_name)));
    }
  }
}
