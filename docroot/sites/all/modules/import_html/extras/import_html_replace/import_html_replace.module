<?php

/**
 * @file Perform simple search and replace on content as it is being imported.
 *
 * The primary use for this add-on is to support replacement patterns to remove
 * legacy absolute URLs like http://example.com/ in the source content and
 * replace it with just '/'.
 *
 * Import_html url-rewriting can deal with legacy relative links, but sometimes
 * absolute ones slip through.
 */

/**
 *
 * Implementation of HOOK_import_html_preprocess()
 */
function import_html_replace_import_html_preprocess($profile, $raw_source) {
  foreach ($profile['import_html_replace_patterns'] as $i => $pattern) {
    if (empty($pattern['search'])) {
      continue;
    }
    if (empty($pattern['regexp'])) {
      $raw_source = str_replace($pattern['search'], $pattern['replace'], $raw_source);
    }
    else {
      $raw_source = preg_replace($pattern['search'], $pattern['replace'], $raw_source);
    }
  }
  import_html_debug('Preprocess: Replacing strings in the raw source.', array(), WATCHDOG_INFO);
  return $raw_source;
}


/**
 * Publish some extra settings to display on the import_html config page
 *
 * This is a version of {module}_form_{formname}_alter
 *
 * Used to modify our import_html_profile_settings form and add extra
 * options to it
 */
function import_html_replace_form_import_html_profile_settings_alter(&$form, $form_state) {
  $profile = $form['#profile'];

  $form['replication']['import_html_replace_patterns'] = array(
    '#type' => 'fieldset',
    '#title' => t('String replacements'),
    '#tree' => TRUE,
    '#theme' => 'import_html_form_table',
    '#description' => t('
      Simple string replacements can be done on the text as it is being processed.
      Enter a list of search and replace patterns here, eg:
      <br/>
      <code>http://www.example.com/</code>
      <br/>replace with <code>/</code>.
      <br/>This replacement will run on the raw input text, early in the process,
      before it has been parsed or split up into field values.
      <br/>Regular expressions may be used.
      If entering a regular expression, include the delimiters,
      escape characters and modifiers as needed.
      eg, this will match the absolute URL, both with and without the www prefix.
      <br/>
      <code>%http\://(www\.)?example\.com/%</code>
      <br/> replace with: <code>/</code>.
    '),
  );
  $replacements = $profile['import_html_replace_patterns'];
  // Trim empties
  $cleaned_replacements = array();
  foreach ($replacements as $i => $pattern) {
    if (!empty($pattern['search'])) {
      $cleaned_replacements[] = $replacements[$i];
    }
  }
  $replacements = $cleaned_replacements;
  // Add a new empty
  $replacements[] = array(
    'search' => '',
    'regexp' => FALSE,
    'replace' => '',
  );
  foreach ($replacements as $i => $pattern) {
    $form['replication']['import_html_replace_patterns'][$i] = array(
      'search' => array(
        '#title' => t('Search pattern'),
        '#type' => 'textfield',
        '#default_value' => $pattern['search'],
      ),
      'regexp' => array(
        '#title' => t('RegExp?'),
        '#type' => 'checkbox',
        '#default_value' => $pattern['regexp'],
      ),
      'replace' => array(
        '#title' => t('Replacement string'),
        '#type' => 'textfield',
        '#default_value' => $pattern['replace'],
      ),
    );
  }
}


/**
 * hook_import_html_default_settings()
 *
 * Return an array defining the keys that settings need to save.
 * If we define a profile setting of our own, it needs to be listed here to be
 * serialized.
 */
function import_html_replace_import_html_default_settings() {
  return array(
    'import_html_replace_patterns' => array(),
  );
}
