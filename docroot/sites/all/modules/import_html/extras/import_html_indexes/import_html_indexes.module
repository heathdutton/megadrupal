<?php

/**
 * Process imported documents to classify them against the configured
 * taxonomies according to the rules.
 *
 * Implementation  of HOOK_import_html()
 */
function import_html_indexes_import_html($profile, &$node, $datadoc = NULL) {
  // We have a custom list of sections of the site,
  // which correspond to taxonomy terms.

  // Content which is to be imported into those sections should be tagged
  // with the term, and not given a menu item.

  $vids = (array) $profile['import_html_indexes_vids'];
  $indexable_paths = import_html_indexes_term_paths($vids);

  // See if the current node path matches any of the possible term paths
  foreach ($indexable_paths as $search_tid => $search_path) {
    if (strpos($node->path_alias, $search_path) === 0) {
      $tid = $search_tid;
      break;
      // TODO what about nested categories? If a term matches more than one path?
    }
  }
  if (! $tid) {
    return;
  }
  $term = taxonomy_term_load($tid);
  $strings = array(
    '%title' => $node->title,
    '!term' => l($term->name, taxonomy_term_uri($term)),
  );

  // If it's an exact match, Do not import it.
  // The display will be taken care of by the taxonomy term page behaviour
  if ($node->path_alias == $search_path) {
    import_html_debug('This page matches the path %match that is reserved for the term !term. It will not be imported, as the term index will be displayed here.', $strings, WATCHDOG_NOTICE);
    // Setting a value in this attribute will abort processing.
    $node->import_html_exclude = 'This is a taxonomy term index page';
    return;
  }

  import_html_debug('This is an indexable item, the import path matches %match in our list of indexable taxonomy term paths. We will tag it as !term and not give it a menu item.', $strings, WACHDOG_INFO);

  // Flag that this page does not deserve a menu item
  $node->import_html_no_menus = TRUE;

  // Tag it with the setion term
  $node->taxonomy[$tid] = $term;
  return;
}

/**
 * Return a list of url paths that match the terms in the given vocabs.
 *
 * ONLY returns aliased paths, not system ones
 *
 * @param $vids An array of vocabulary IDs
 *
 * @return An array of ALL path aliases for all aliased terms in those
 * vocabs. Indexed by term ID.
 */
function import_html_indexes_term_paths($vids) {
  // Internal caching
  static $paths;
  foreach ($vids as $vid) {
    // Compile the lookups for the vocabs individually
    if (! isset($paths[$vid])) {
      $path_list = array();
      $terms = taxonomy_get_tree($vid);
      foreach ($terms as $term) {
        $path = taxonomy_term_uri($term);
        $alias = drupal_get_path_alias($path);
        if ($alias != $path) {
          $path_list[$term->tid] = $alias;
        }
      }
      $paths[$vid] = $path_list;
    }
  }
  // Return an aggregation of all requested vocabs terms paths
  $return = array();
  foreach ($vids as $vid) {
    $return += $paths[$vid];
  }
  return $return;
}


/**
 * Publish some extra settings to display on the import_html config page
 *
 * This is a version of {module}_form_{formname}_alter
 *
 * Used to modify our import_html_profile_settings form and add extra
 * options to it
 */
function import_html_indexes_form_import_html_profile_settings_alter(&$form, $form_state) {
  $profile = $form['#profile'];

  $form['replication']['import_html_indexes'] = array(
    '#type' => 'fieldset',
    '#title' => t('Taxonomy Indexes'),
  );

  $vocabs = taxonomy_get_vocabularies();
  $get_name = create_function('$o', 'return $o->name;');
  $vocab_options = array_map($get_name, $vocabs);

  $form['replication']['import_html_indexes']['import_html_indexes_vids'] = array(
    '#title' => t('Use vocabulary terms as index pages'),
    '#type' => 'select',
    '#multiple' => TRUE,
    '#options' => $vocab_options,
    '#default_value' => $profile['import_html_indexes_vids'],
    '#description' => t("
       If you are using alias paths for a set of terms, Choose the appropriate
       vocab that contains those terms here.
       The alias will not be overwritten during import,
       leaving behind normal taxonomy/term/n behavior.
       Any content being imported that would fall <em>below</em> the path of a
       term will be auto-tagged with that term, and will not be given a menu
       item.
       <br/>
       You must set up the taxonomy term aliases first.
    "),
  );
}

/**
 * hook_import_html_default_settings()
 *
 * Return an array defining the keys that settings need to save.
 * If we define a profile setting of our own, it needs to be listed here to be
 * serialized.
 */
function import_html_indexes_import_html_default_settings() {
  return array(
    'import_html_indexes_vids' => 0,
  );
}
