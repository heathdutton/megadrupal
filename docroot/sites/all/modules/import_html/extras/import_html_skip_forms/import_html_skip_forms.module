<?php

/**
 * @file Extra process to avoid importing pages containing form elements
 *
 * Implementation  of HOOK_import_html()
 */
function import_html_skip_forms_import_html($profile, &$node, $datadoc = NULL) {
  // TODO: need rewrite to deal with d7 text fields, not $node->body
  return;

  if (!strstr($node->body, '<form') ) {
    // No worries, carry on
    return;
  }

  switch ($profile['import_html_skip_forms_method']) {
    case 'placeholder':
      $node->body = '<div class="warning">This page contains a form element - needs special attention. (import_html process)</div>' . $node->body;
      break;
    case 'skip':
      if (! isset($node->import_html_exclude)) {
        $node->import_html_exclude = 'This page contains a form element - needs special attention';
      }
      break;
    case 'strip':
      import_html_debug('import_html_skip_forms is stripping all form tags. Things will stop working on this page.', array(), WATCHDOG_INFO);
      // remove all form,input,select,button elements
      $patterns = array();
      foreach (array('form', 'input', 'select', 'button', 'option') as $tag) {
        $patterns[] = "</?" . $tag . "[^>]*?>";
      }
      $pattern = "@" . join('|', $patterns) . "@";
      $node->body = preg_replace($pattern, '', $node->body);
      break;
    case 'nothing':
      break;
    default:
      import_html_debug('import_html_skip_forms_method was not configured, please check the import_html settings.', array(), WATCHDOG_WARNING);
  }
  return;
}


/**
 * @file Extra process to remove some troublesome markup before htmltidy runs
 *
 * Implementation  of HOOK_import_html_preprocess()
 */
function import_html_skip_forms_import_html_preprocess($profile, $raw_source) {
  // Some terrible input (aspx default pages) tries to wrap the entire page in a form.
  // this just hurts as any validation error inside that may kill htmltidy
  // remove all form tags.
  switch ($profile['import_html_skip_forms_method']) {
    case 'strip_during_preprocess':
      $raw_source = preg_replace('@</?form[^>]*>@', '', $raw_source);
      break;
  }
  return $raw_source;
}

/**
 * Publish some extra settings to display on the import_html config page
 *
 * This is a version of {module}_form_{formname}_alter
 *
 * Used to modify our import_html_profile_settings form and add extra
 * options to it
 */
function import_html_skip_forms_form_import_html_profile_settings_alter(&$form, $form_state) {
  $profile = $form['#profile'];

  $form['replication']['import_html_skip_forms_method'] = array(
    '#title' => t('What to do when a form element is encountered'),
    '#type' => 'select',
    '#options' => array(
      'nothing' => 'do nothing, leave as-is',
      'skip' => 'do not import',
      'placeholder' => 'create a placeholder',
      'strip' => 'remove form elements',
      'strip_during_preprocess' => 'remove form tags before even trying to parse the page',
    ),
    '#default_value' => $profile['import_html_skip_forms_method'],
  );
}

/**
 * hook_import_html_default_settings()
 *
 * Return an array defining the keys that settings need to save.
 * If we define a profile setting of our own, it needs to be listed here to be
 * serialized.
 */
function import_html_skip_forms_import_html_default_settings() {
  return array(
    'import_html_skip_forms_method' => 'skip',
  );
}
