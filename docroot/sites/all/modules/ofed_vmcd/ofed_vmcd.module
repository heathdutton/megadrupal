<?php

/**
 * @file
 * Module needed to change the style of the views multi-column display with
 * the Openfed distribution.
 */

/**
 * Implements hook_permission().
 */
function ofed_vmcd_permission() {
  return array(
    'administer views multi-column display' => array(
      'title' => t('Administer views multi-column display'),
      'description' => t('Configure settings for the views multi-column display.'),
    ),
    'use views multi-column display' => array(
      'title' => t('Use views multi-column display'),
      'description' => t('Allow the user to define a views multi-column display.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function ofed_vmcd_menu() {
  $items = array();

  $items['admin/structure/views/views-multi-column-display'] = array(
    'title' => 'Views multi-column display',
    'description' => 'Configure views multi-column display settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ofed_vmcd_admin_settings_form'),
    'access arguments' => array('administer views multi-column display'),
    'file' => 'includes/ofed_vmcd.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/structure/views/views-multi-column-display/set'] = array(
    'page callback' => 'ofed_vmcd_misc_view_display_save',
    'page arguments' => array(),
    'access callback' => 'user_access',
    'access arguments' => array('use views multi-column display'),
    'file' => 'includes/ofed_vmcd.misc.inc',
    'weight' => 0,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  return $items;
}

/**
 * Implements hook_views_pre_render().
 */
function ofed_vmcd_views_pre_render(&$view) {
  // Get the view name.
  $view_name = $view->name;
  // Get the current display name.
  $view_display = $view->current_display;
  // Check if the customisation of the layout is enabled for this display.
  $associed_displays = variable_get('ofed_vmcd_associed_displays', array());
  if (isset($associed_displays[$view_name . '_' . $view_display]) && !empty($associed_displays[$view_name . '_' . $view_display])) {
    // Get the current path.
    $path = $_GET['q'];
    // Set the name of the variable.
    $variable_name = 'ofed_vmcd_' . $view_name . '_' . $view_display;
    // Get the latest value of the variable for the current path.
    $variable_content = variable_get($variable_name, array());
    if (isset($variable_content[$path])) {
      $value = $variable_content[$path];
      // Override the display.
      // Set style plugin.
      $view->style_plugin->plugin_type = 'style';
      $view->style_plugin->plugin_name = 'grid';
      $view->style_plugin->options['columns'] = $value;
      $view->style_plugin->options['alignment'] = 'horizontal';
      $view->style_plugin->definition['theme'] = 'views_view_grid';
      $view->style_plugin->definition['uses fields'] = FALSE;
      $view->style_plugin->definition['uses row plugin'] = TRUE;
      $view->style_plugin->definition['uses row class'] = TRUE;
      $view->style_plugin->definition['uses options'] = TRUE;
      // Set style options.
      $view->style_options['columns'] = $value;
      $view->style_options['alignment'] = 'horizontal';
    }
  }
}

/**
 * Implements contextual_links_view_alter().
 */
function ofed_vmcd_contextual_links_view_alter(&$element, $items) {
  // Get the page view.
  $view_page = views_get_page_view();
  if (!empty($view_page)) {
    // Get the view name.
    $view_name = $view_page->name;
    // Get the current display name.
    $view_display = $view_page->current_display;
    // Check if the customisation of the layout is enabled for this display.
    $associed_displays = variable_get('ofed_vmcd_associed_displays', array());
    if (isset($associed_displays[$view_name . '_' . $view_display]) && !empty($associed_displays[$view_name . '_' . $view_display])) {
      $colums = variable_get('ofed_vmcd_allowed_choices_columns', '1, 2, 3');
      $colums = explode(',', $colums);
      if (is_array($colums) && !empty($colums)) {
        // Generate contextual links.
        foreach ($colums as $column) {
          $element['#links']['views_vos_contextual_link_column_' . $column] = array(
            'title' => t('Display content in !column column', array('!column' => $column)),
            'href' => 'admin/structure/views/views-multi-column-display/set',
            'query' => array(
              'view' => $view_name,
              'display' => $view_display,
              'path' => $_GET['q'],
              'redirect' => $_GET['q'],
              'number' => $column,
            ),
          );
        }
      }
    }
  }
}
