<?php

/**
 * @file
 * Schema and installation hooks for redhen_campaign module.
 */

/**
 * Implements hook_schema().
 */
function redhen_campaign_schema() {
  $schema['redhen_campaign'] = array(
    'description' => 'The base table for redhen_campaign module.',
    'fields' => array(
      'campaign_id' => array(
        'description' => 'The primary identifier for a redhen_campaign.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {redhen_campaign_type}.type of this redhen_campaign.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'The label of this redhen_campaign, always treated as non-markup plain text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'author_uid' => array(
        'description' => 'The uid of the user who created this redhen_campaign.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'progress' => array(
        'description' => 'Total funds raised for this campaign.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the redhen_campaign was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the redhen_campaign was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'promote' => array(
        'description' => 'Boolean indicating whether the campaign should be displayed on the home page.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'sticky' => array(
        'description' => 'Boolean indicating whether the campaign should be displayed at the top of lists in which it appears.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'redhen_campaign_updated' => array('updated'),
      'redhen_campaign_created' => array('created'),
      'redhen_campaign_type' => array(array('type', 4)),
      'redhen_campaign_progress' => array('progress'),
      'redhen_campaign_author' => array('author_uid'),
      'redhen_campaign_label' => array('label'),
    ),
    'foreign keys' => array(
      'redhen_campaign_author' => array(
        'table' => 'users',
        'columns' => array('author_uid' => 'uid'),
      ),
      'redhen_campaign_type' => array(
        'table' => 'redhen_campaign_type',
        'columns' => array('type' => 'name'),
      ),
    ),
    'primary key' => array('campaign_id'),
  );

  $schema['redhen_campaign_type'] = array(
    'description' => 'Stores information about all defined campaign types.',
    'fields' => array(
      'campaign_type_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique campaign type ID.',
      ),
      'name' => array(
        'description' => 'The machine-readable name of this campaign type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this campaign type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this campaign type in relation to others.',
      ),
      'locked' => array(
        'description' => 'A boolean indicating whether the administrator may delete this type.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this campaign type.',
        'merge' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'donation_type' => array(
        'description' => 'Name of the default donation type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'hide_donation_type' => array(
        'description' => 'A boolean indicating whether donation type option should be hidden from non-administrators.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
    ),
    'primary key' => array('campaign_type_id'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  $schema['redhen_campaign_page'] = array(
    'description' => 'The base table for redhen_campaign_page entity.',
    'fields' => array(
      'page_id' => array(
        'description' => 'The primary identifier for a redhen_campaign_page.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {redhen_campaign_type}.type of this redhen_campaign_page.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'The label of this redhen_campaign_page, always treated as non-markup plain text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'author_uid' => array(
        'description' => 'The uid of the user who created this redhen_campaign_page.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'progress' => array(
        'description' => 'The fundraising progress for this page.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the redhen_campaign_page was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the redhen_campaign_page was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'campaign' => array(
        'description' => 'The parent campaign of this campaign page.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'team' => array(
        'description' => 'Another campaign page to which this campaign belongs.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'campaign_page_type' => array(
        'description' => 'Either Team or Individual.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => REDHEN_CAMPAIGN_PAGE_INDIVIDUAL,
      ),
    ),
    'indexes' => array(
      'redhen_campaign_page_updated' => array('updated'),
      'redhen_campaign_page_created' => array('created'),
      'redhen_campaign_page_type' => array(array('type', 4)),
      'redhen_campaign_page_progress' => array('progress'),
      'redhen_campaign_page_author' => array('author_uid'),
      'redhen_campaign_page_label' => array('label'),
    ),
    'foreign keys' => array(
      'redhen_campaign_page_author' => array(
        'table' => 'users',
        'columns' => array('author_uid' => 'uid'),
      ),
      'redhen_campaign_page_type' => array(
        'table' => 'redhen_campaign_type',
        'columns' => array('type' => 'name'),
      ),
    ),
    'primary key' => array('page_id'),
  );

  $schema['redhen_campaign_page_type'] = array(
    'description' => 'Stores information about all defined campaign page types.',
    'fields' => array(
      'campaign_page_type_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique campaign page type ID.',
      ),
      'name' => array(
        'description' => 'The machine-readable name of this campaign page type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this campaign page type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this campaign page type in relation to others.',
      ),
      'locked' => array(
        'description' => 'A boolean indicating whether the administrator may delete this type.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this campaign page type.',
        'merge' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'page_type' => array(
        'type' => 'int',
        'not null' => FALSE,
        'size' => 'tiny',
        'description' => 'Determines whether to create team or individual pages.',
      ),
    ),
    'primary key' => array('campaign_page_type_id'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function redhen_campaign_install() {
  // Add context fields to redhen_donation.
  $campaign_context = array(
    'description' => 'The id of the referring redhen_campaign entity.',
    'type' => 'int',
    'not null' => FALSE,
    'default' => NULL,
  );
  // Add a campaign context field to redhen_donation.
  $page_context = array(
    'description' => 'The id of the referring redhen_campaign_page entity.',
    'type' => 'int',
    'not null' => FALSE,
    'default' => NULL,
  );
  db_add_field('redhen_donation', 'redhen_campaign_context', $campaign_context);
  db_add_field('redhen_donation', 'redhen_campaign_page_context', $page_context);
}

/**
 * Implements hook_uninstall().
 */
function redhen_campaign_uninstall() {
  db_drop_field('redhen_donation', 'redhen_campaign_context');
  db_drop_field('redhen_donation', 'redhen_campaign_page_context');
}
