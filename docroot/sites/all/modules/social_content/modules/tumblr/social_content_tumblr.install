<?php
/**
 * @file
 * Install/uninstall code for Social Content: Tumblr.
 */

 /**
  * Create the tumblr text format.
  */
function social_content_tumblr_create_text_format() {
  // Exported format: Tumblr.
  $format = (object) array(
    'format' => 'tumblr',
    'name' => 'Tumblr',
    'cache' => 1,
    'status' => 1,
    'weight' => 0,
    'filters' => array(
      'filter_html' => array(
        'weight' => -10,
        'status' => 1,
        'settings' => array(
          'allowed_html' => '<a> <em> <strong> <cite> <blockquote> <code> <ul> <ol> <li> <dl> <dt> <dd> <img> <p>',
          'filter_html_help' => 1,
          'filter_html_nofollow' => 0,
        ),
      ),
    ),
  );

  filter_format_save($format);
}

 /**
  * Implements hook_node_install().
  */
function social_content_tumblr_install() {
  $create_bundle = variable_get('social_content_create_bundles', TRUE);
  if (!$create_bundle) {
    return;
  }

  social_content_tumblr_create_text_format();

  // Ensure the node type is available.
  node_types_rebuild();

  module_load_include('inc', 'social_content_tumblr', 'social_content_tumblr.fields');
  $fields = social_content_tumblr_field_default_field_bases();
  foreach ($fields as $field) {
    field_create_field($field);
  }

  $instances = social_content_tumblr_field_default_field_instances();
  foreach ($instances as $instance) {
    field_create_instance($instance);
  }
}

/**
 * Implements hook_node_info().
 */
function social_content_tumblr_node_info() {
  $items = array(
    'tumblr' => array(
      'name' => t('Tumblr'),
      'base' => 'node_content',
      'description' => '',
      'has_title' => '1',
      'title_label' => t('Title'),
      'help' => '',
    ),
  );
  return $items;
}

/**
 * Implements hook_node_info().
 */
function social_content_tumblr_form($node, $form_state) {
  return array();
}

/**
 * Create tumblr text format.
 *
 * Implements hook_update_N().
 */
function social_content_tumblr_update_7000() {
  social_content_tumblr_create_text_format();
}
