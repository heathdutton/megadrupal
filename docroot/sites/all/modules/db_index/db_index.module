<?php

/**
 * @file
 * Giving the UI to do the New Database indexes.
 */

/**
 * Implements hook_menu().
 */
function db_index_menu() {
  $items['admin/db/index'] = array(
    'title' => 'Database Indexes',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('db_index_database_index_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer DB Index'),
    'file' => 'includes/db_index.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/db/index/list'] = array(
    'title' => 'List of Database Indexes',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('db_index_database_index_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer DB Index'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'includes/db_index.pages.inc',
    'weight' => -10,
  );
  $items['admin/db/index/new'] = array(
    'title' => 'ADD New Database Index',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('db_index_new_database_index_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer DB Index'),
    'file' => 'includes/db_index.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -8,
  );
  $items['admin/db/index/usage'] = array(
    'title' => 'Index usages',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('db_index_index_usage_statistics'),
    'access callback' => 'user_access',
    'access arguments' => array('administer DB Index'),
    'file' => 'includes/db_index.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -9,
  );
  $items['admin/db/index/drop'] = array(
    'title' => 'Drop index',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('db_index_drop_unused_index'),
    'access callback' => 'user_access',
    'access arguments' => array('administer DB Index'),
    'file' => 'includes/db_index.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -7,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function db_index_permission() {
  return array(
    'administer DB Index' => array(
      'title' => t('Administer DB Index'),
      'description' => drupal_placeholder(t("Providing the permission to Add or Drop Database Indexes.")) . drupal_placeholder(t('Warning: Give to trusted roles only; this permission has security implications.')),
    ),
  );
}


/**
 * Callback submit handler function db_index_new_database_index_form().
 */
function db_index_new_database_index_form_submit($form, &$form_state) {
  $tables = db_index_get_schema_in_table_group('table');
  $selected_table = $form_state['values']['select_table_to_index'];
  // Name of the table to be indexed.
  $table = $tables['tables'][$selected_table];
  $field_info = drupal_get_schema($table);
  // Field types needed prefix of column values.
  $prefix_column_types = array(
    'blob',
    'text',
  );
  // New index name.
  $name = check_plain($form_state['values']['index_new_name']);
  $fields = array();
  // $count_field_set = count($form_state['values']['index_fieldset']);
  foreach ($form_state['values']['index_fieldset'] as $field => $array) {
    if (is_numeric($field)) {
      $field_name = $tables[$selected_table][$array['select_fields_to_index']];
      $field_type = $field_info['fields'][$field_name]['type'];
      // Checking the type of the field needs prefix or not.
      if (in_array($field_type, $prefix_column_types)) {
        // Columns to be indexed with prefix key.
        $fields[] = array(
          $field_name,
          strlen($field_name),
        );
      }
      else {
        // Columns to be indexed.
        $fields[] = $field_name;
      }
    }
  }
  db_add_index($table, $name, $fields);
  drupal_set_message(t("You have successfully added the index for the table %table", array('%table' => $table)));
}

/**
 * Callback submit handler function db_index_drop_unused_index().
 */
function db_index_drop_unused_index_submit($form, &$form_state) {
  $table_to_index = db_index_get_schema_in_table_group('table');
  $table = $table_to_index['tables'][$form_state['values']['select_table_to_index']];
  $index = db_index_get_index_from_table($table);
  $name = $index[$form_state['values']['index_to_drop']];
  db_drop_index($table, $name);
  drupal_set_message(t("The index @name has been removed from the table @table", array('@name' => $name, '@table' => $table)));
}
