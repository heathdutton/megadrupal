<?php

/**
 * @file
 * Installation and update functions for the Ooyala module.
 */

/**
 * Implements hook_field_schema().
 */
function ooyala_field_schema($field) {
  if ($field['type'] == 'ooyala') {
    $columns = array(
      'value' => array(
        'type' => 'varchar',
        'length' => 255,
        'index' => TRUE,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'length' => array(
        'type' => 'int',
        'size' => 'big',
      ),
    );
  }

  // Allow modules to add additional columns to store custom data. We have to
  // have this additional hook as hook_field_schema_alter() is Drupal 8 only at
  // this point.
  $columns += module_invoke_all('ooyala_columns');

  // Build our array of indexes for the field.
  $indexes = array();
  foreach ($columns as $key => $column) {
    if (isset($column['index']) && $column['index'] == TRUE) {
      $indexes[$key] = array($key);
      unset($columns[$key]['index']);
    }
  }

  return array(
    'columns' => $columns,
    'indexes' => $indexes,
  );
}

/**
 * Implements hook_uninstall().
 */
function ooyala_uninstall() {
  variable_del('ooyala_pending_thumbnails');
  variable_del('ooyala_last_sync');
  variable_del('ooyala_thumbnail_path');
  variable_del('ooyala_video_height');
  variable_del('ooyala_video_width');
  variable_del('ooyala_reporting_level');
  variable_del('ooyala_primary_content_type');
  variable_del('ooyala_global_secret');
  variable_del('ooyala_global_v1_pcode');
  variable_del('ooyala_global_v1_secret');
  variable_del('ooyala_global_pcode');
  variable_del('ooyala_autopublish');
}

/**
 * Add *_status and *_length columns for all ooyala video fields.
 */
function ooyala_update_6001() {
  $ret = array();

  module_load_include('inc', 'content', 'includes/content.admin');

  // Build a list of fields that need data updating.
  $fields = array();
  foreach (content_types_install() as $type => $type_fields) {
    foreach ($type_fields as $field) {
      if ($field['type'] == 'ooyala') {
        // We only process a given field once.
        $fields[$field['field_name']] = $field;
      }
    }
  }

  // Re-build all field definitions.
  content_associate_fields('ooyala');

  // Update database storage (add status and length columns).
  foreach ($fields as $field) {
    $new_field = $field;

    // Setup new field definition
    $new_field['columns']['status'] = array(
      'type' => 'varchar',
      'length' => 100,
      'not null' => FALSE,
    );
    $new_field['columns']['length'] = array(
      'type' => 'varchar',
      'length' => 100,
      'not null' => FALSE,
    );

    content_alter_db($field, $new_field);
    $ret[] = array('success' => TRUE, 'query' => t('The file field %field has been updated with new settings.', array('%field' => $field['field_name'])));
  }

  // @TODO: Should we add a batch opteration here to update the data of all
  // existing fields. Or just let it get updated on cron?

  // Clear caches.
  cache_clear_all('*', content_cache_tablename(), TRUE);
  cache_clear_all('*', 'cache', TRUE);

  return $ret;
}

/**
 * Install the new initial Ooyala schema.
 */
function ooyala_update_6002() {
  // Update removed. The Ooyala taxonomy module now owns this table.
  return array();
}

/**
 * Synchronize status/length information for videos that do not have it yet.
 */
function ooyala_update_6003(&$context) {
  // This cheap approach simply updates all the videos on the whole site.
  module_load_include('inc', 'ooyala', 'includes/ooyala.sync');
  ooyala_sync_pull_videos_batch();
  return array();
}

/**
 * Migrate V1 API credentials to the V1 API variable.
 */
function ooyala_update_7001() {
  if (!variable_get('ooyala_global_v1_pcode', FALSE) && !variable_get('ooyala_global_v1_secret', FALSE)) {
    variable_set('ooyala_global_v1_pcode', variable_get('ooyala_global_pcode', FALSE));
    variable_set('ooyala_global_v1_secret', variable_get('ooyala_global_secret', FALSE));
    variable_del('ooyala_global_pcode');
    variable_del('ooyala_global_secret');
  }
}

/**
 * Show a notice about the need for new API keys.
 */
function ooyala_update_7002() {
  return t('Ooyala V2 API credentials must be provided in order for the Ooyala module to continue functioning. Please copy the V2 API keys from the Ooyala backlot and paste them into <a href="@ooyala-settings">Ooyala settings</a> form.', array('@ooyala-settings' => url('admin/config/media/ooyala/settings')));
}

/**
 * Remove the old V1 API keys.
 */
function ooyala_update_7003() {
  variable_del('ooyala_global_v1_pcode');
  variable_del('ooyala_global_v1_secret');
  return t('Ooyala V1 API keys are no longer needed and have been deleted.');
}

/**
 * Set the Ooyala Player version to v2 for backwards-compatibility.
 *
 * This setting may be changed to v3 via the administration UI for users who
 * would like to switch to the new player.
 */
function ooyala_update_7004() {
  variable_set('ooyala_player_version', 'v2');
  drupal_flush_all_caches();
  return t('Ooyala player version set to V2 to maintain compatibility. If you would like to use the new V3 Ooyala player, you may enable it on the <a href="!url">Ooyala settings page</a>.', array('!url' => url('admin/config/media/ooyala/settings')));
}
