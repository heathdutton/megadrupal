<?php

/**
 * @file
 * Simply utility which allows to log JS errors information (script, line, error message) to watchdog.
 */

/**
 * Implements of hook_menu().
 */
function js2watchdog_menu() {

  $items['js2watchdog/exception'] = array(
    'page callback'    => 'js2watchdog_exception',
    'access arguments' => array('log js errors'),
    'type'             => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements of hook_init().
 */
function js2watchdog_init() {
  if (user_access('log js errors')) {
    drupal_add_js(drupal_get_path('module', 'js2watchdog') . '/js2watchdog.js');
    // @TODO check it with different caching modes.
    drupal_add_js(array('js2watchdog' => array('token' => drupal_get_token('js2watchdog'))), 'setting');
  }
}

/**
 * Menu callback to log JS errors
 */
function js2watchdog_exception() {
  if (isset($_POST['token']) && drupal_valid_token($_POST['token'], 'js2watchdog')) {
    // Remove token from message
    unset($_POST['token']);

    $message_parts = array();
    $args = array();
    if (!empty($_POST)) {
      foreach ($_POST as $key => $value) {
        if (!empty($value)) {
          $key = check_plain($key);
          $args["@{$key}"] = $value;
          $message_parts[] = "{$key}: @{$key}";
        }
      }
      if (!empty($message_parts)) {
        watchdog('js2watchdog', implode('<br />', $message_parts), $args, WATCHDOG_ERROR);
      }
    }
    echo drupal_json_encode(array('status' => 'Ok'));
    exit();
  }
  echo drupal_json_encode(array('status' => 'Invalid token.'));
  exit();
}

/**
 * Implements hook_permission().
 */
function js2watchdog_permission() {
  return array(
    'log js errors' => array(
      'title' => 'Log js errors to watchdog'
    ),
  );
}