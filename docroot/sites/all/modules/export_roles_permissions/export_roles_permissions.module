<?php

/**
 * @file
 * Provides a way of exporting roles in to code.
 */

/**
 * Implements hook_menu().
 */
function export_roles_permissions_menu() {
  $items = array();

  $items['admin/people/export'] = array(
    'title' => 'Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('export_roles_permissions_form'),
    'access arguments' => array('administer permissions'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Form constructor for the export generation form.
 *
 * @see export_roles_permissions_form_submit()
 */
function export_roles_permissions_form($form, &$form_state) {
  $form = array(
    '#tree' => TRUE,
  );

  if (isset($form_state['code'])) {
    $form[] = array(
      '#type' => 'item',
      '#markup' => "Add the following code to " . $form_state['values']['module'] . ".install<br />If you already have a hook_install() implementation, you'll need to manually merge the 2 blocks of code.",
    );
    $form[] = array(
      '#type' => 'textarea',
      '#rows' => 30,
      '#cols' => 250,
      '#default_value' => implode("\n", $form_state['code']),
    );
  }
  else {
    $form['roles'] = array(
      '#type' => 'checkboxes',
      '#title' => 'Roles to export',
      '#options' => user_roles(TRUE),
    );

    $form['module'] = array(
      '#type' => 'textfield',
      '#title' => 'Module name',
      '#description' => 'The machine name of the module, used in function names.',
      '#required' => TRUE,
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Create',
    );
  }

  return $form;
}

/**
 * Form submission handler for export_roles_permissions_form().
 */
function export_roles_permissions_form_submit($form, &$form_state) {
  $code = array();
  $roles = user_roles(TRUE);

  $code[] = '/**';
  $code[] = ' * Implements hook_install().';
  $code[] = ' */';
  $code[] = 'function ' . $form_state['values']['module'] . '_install() {';

  foreach ($form_state['values']['roles'] as $rid) {
    if ($rid != 0) {
      $code[] = '  // Create the role if necessary.';
      $code[] = '  $role = user_role_load_by_name(\'' . $roles[$rid] . '\');';
      $code[] = '  if (!$role) {';
      $code[] = '    $role = new stdClass();';
      $code[] = '    $role->name = \'' . $roles[$rid] . '\';';
      $code[] = '    user_role_save($role);';
      $code[] = '  }';
      $code[] = '';
      $code[] = '  // Add the permissions to the role.';
      $code[] = '  $permissions = array(';

      $perms = user_role_permissions(array($rid => $rid));
      foreach ($perms[$rid] as $perm => $val) {
        $code[] = "    '" . $perm . "',";
      }

      $code[] = '  );';
      $code[] = '  user_role_grant_permissions($role->rid, $permissions);';
      $code[] = '';
    }
  }

  array_pop($code);
  $code[] = '}';

  $form_state['code'] = $code;
  $form_state['rebuild'] = TRUE;
}
