<?php

/**
 * @file
 * Hooks and functions for the Context Query Param Test module.
 */


/**
 * Implements hook_ctools_plugin_api().
 */
function context_query_param_test_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "context" && $api == "context") {
    return array("version" => "3");
  }
}

/**
 * Implements hook_context_default_contexts().
 */
function context_query_param_test_context_default_contexts() {
  $contexts = array();

  // The require_rulesets_unchecked_1 context.
  $context = new stdClass();
  $context->disabled = FALSE;
  $context->api_version = 3;
  $context->name = 'require_rulesets_unchecked_1';
  $context->description = 'Part 1 (of 2) to ensure multiple contexts are triggered when "require all rulesets" is unchecked for both.';
  $context->tag = 'testMultipleRequireAllRulesets';
  $context->conditions = array(
    'query_param' => array(
      'values' => array(
        'parameters' => serialize(array(
           0 => array(
             'name' => 'drew',
             'operator' => 'equals',
             'value' => 'paul',
           ),
        )),
        'require_all_params' => 0,
      ),
    ),
  );
  $context->reactions = array(
    'block' => array(
      'blocks' => array(
        'context_query_param_test-block1' => array(
          'module' => 'context_query_param_test',
          'delta' => 'block1',
          'region' => 'sidebar_second',
          'weight' => '-10',
        ),
      ),
    ),
  );
  $context->condition_mode = 1;
  $contexts[$context->name] = $context;

  // The require_rulesets_unchecked_2 context.
  $context = new stdClass();
  $context->disabled = FALSE;
  $context->api_version = 3;
  $context->name = 'require_rulesets_unchecked_2';
  $context->description = 'Part 2 (of 2) to ensure multiple contexts are triggered when "require all rulesets" is unchecked for both.';
  $context->tag = 'testMultipleRequireAllRulesets';
  $context->conditions = array(
    'query_param' => array(
      'values' => array(
        'parameters' => serialize(array(
          0 => array(
            'name' => 'omg',
            'operator' => 'equals',
            'value' => 'wtf',
          ),
        )),
        'require_all_params' => 0,
      ),
    ),
  );
  $context->reactions = array(
    'block' => array(
      'blocks' => array(
        'context_query_param_test-block2' => array(
          'module' => 'context_query_param_test',
          'delta' => 'block2',
          'region' => 'sidebar_second',
          'weight' => '-10',
        ),
      ),
    ),
  );
  $context->condition_mode = 0;
  $contexts[$context->name] = $context;

  return $contexts;
}

/**
 * Implements hook_block_info().
 */
function context_query_param_test_block_info() {
  return array(
    'block1' => array(
      'info' => 'Block1',
      'cache' => DRUPAL_NO_CACHE,
    ),
    'block2' => array(
      'info' => 'Block2',
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function context_query_param_test_block_view($delta = '') {
  return array(
    'subject' => $delta . ' subject',
    'content' => $delta . ' content.',
  );
}
