<?php
/**
 * @file
 * Blocks Mass Cache Module.
 * @TODO Allow blocks to have custom cache expiration.
 */

/**
 * Implements hook_help().
 */
function blocks_mass_cache_help($path, $arg) {
  switch ($path) {
    case 'admin/structure/block/mass-cache':
      return t('Blocks Mass Cache allows fine tuning of blocks cache.');
  }
}

/**
 * Implements hook_block_info_alter().
 */
function blocks_mass_cache_block_info_alter(&$blocks, $theme, $code_blocks) {
  _blocks_mass_cache_set_cache($blocks);
}

/**
 * Implements hook_context_block_info_alter().
 */
function blocks_mass_cache_context_block_info_alter(&$blocks) {
  _blocks_mass_cache_set_cache($blocks);
}

/**
 * Function _blocks_mass_cache_set_cache().
 *
 * Helper function to set cache.
 */
function _blocks_mass_cache_set_cache(&$blocks = array()) {
  // Get cache settings.
  $block_storage = variable_get('blocks_mass_cache_storage', array());

  // Loop through blocks.
  foreach ($blocks as $module => $block) {
    // Check if block is array (Drupal default).
    if (is_array($block)) {
      foreach ($blocks[$module] as $key => $block_content) {
        $bid = $block_content['module'] . '-' . $block_content['delta'];
        if (isset($block_storage[$bid])) {
          $blocks[$module][$key]['cache'] = $block_storage[$bid];
        }
      }
    }
    // Check if block is object (context module).
    if (is_object($block)) {
      $bid = $block->module . '-' . $block->delta;
      if (isset($block_storage[$bid])) {
        $blocks[$bid]->cache = $block_storage[$bid];
      }
    }
  }
}
