<?php

class GoMailCommandTestCase extends DrupalUnitTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Test drush gomail command',
      'description' => 'Test function send mail of drush gomail command.',
      'group' => 'Go Module',
    );
  }

  public function setUp() {
    parent::setUp('go');
  }

  public function testGoMailCommand() {
    module_load_include('inc', 'go', 'drush/go.mail');

    $msg['subject'] = 'Test from Go1 Staff - ' . time();
    $msg['body'] = 'Email send by Simple Test';
    $from = variable_get('site_mail', ini_get('sendmail_from'));
    $to = variable_get('site_mail', 'go1_mail_test@mailinator.com');

    $this->assertTrue(drush_go_mail_send($msg, $from, $to));

    // waiting to make sure that mail has been sent to mailinator
    sleep(10);

    $data = $this->getInboxMailinator();

    if (count($data) > 0) {
      foreach ($data as $mail_info) {
        $this->assertTrue($mail_info->subject == $msg['subject']);
        if ($mail_info->subject == $msg['subject']) {
          break;
        }
      }
    }
    else {
      $this->assertTrue(false);
    }
  }

  private function getAddress() {
    // Get address parameter
    $address = drupal_http_request('http://mailinator.com/unsub?box=go1_mail_test');
    $address = json_decode($address->data);
    return $address->address;
  }

  private function getInboxMailinator() {
    // Get inbox from mailinator
    $ch = curl_init('http://mailinator.com/pubsub?inbox=go1_mail_test&address=' . $this->getAddress());
    curl_setopt($ch, CURLOPT_USERAGENT, "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:23.0) Gecko/20100101 Firefox/23.0");
    curl_setopt($ch, CURLOPT_REFERER, 'http://mailinator.com/inbox.jsp?to=go1_mail_test');

    // Request Headers
    $headers = array(
      'X-Requested-With: XMLHttpRequest',
      'Accept: application/json, text/javascript, */*; q=0.01',
      'Accept-Encoding: deflate',
      'Accept-Language: en-us;q=0.7,en;q=0.3',
    );

    // Send header
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_BINARYTRANSFER, 1);
    $data = curl_exec($ch);
    curl_close($ch);

    return json_decode($data);
  }

}
