<?php
/**
 * @file
 * The Webform Field Repeat module enables the webform to remember selected
 * field entries from current submission for up to an hour . It uses the 
 * $_SESSION to do so. If the session is active, the form will be populated 
 * with selected entries from remembered submission when opened again.
 */


/**
 * Implements hook_webform_component_delete().
 */
function webform_field_repeat_webform_component_delete($component) {
  db_delete('webform_field_repeat')
    ->condition('nid', $component['nid'])
    ->condition('cid', $component['cid'])
    ->execute();
}

/**
 * Implements hook_node_delete().
 */
function webform_field_repeat_node_delete($node) {
  db_delete('webform_field_repeat')
    ->condition('nid', $node->nid)
    ->execute();
}

/**
 * Implements hook_form_alter().
 */
function webform_field_repeat_form_alter(&$form, &$form_state, $form_id) {

  // Checks if this is a web client form.
  if (array_key_exists('#node', $form) && !empty($form['#node']->nid) && $form_id == 'webform_client_form_' . $form['#node']->nid) {
    // Looks up webform_field_repeat table to see which components are selected.
    $result = db_query("SELECT cid FROM {webform_field_repeat} WHERE nid = :nid", array(
      ':nid' => $form['#node']->nid,
    ));

    $cids = array();

    if ($result) {
      while ($record = $result->fetchAssoc()) {
        $cids[] = $record['cid'];
      }
    }
    // If the repeat option is selected.
    if (!empty($cids)) {

      // Provides an option to rememeber values for another submission.
      $form['webform_field_repeat'] = array(
        '#type' => 'checkbox',
        '#title' => t('Remember me.'),
        '#default_value' => FALSE,
        '#description' => t("This will remember your information for another submission within the next hour."),
      );

      $form['#submit'][] = 'webform_field_repeat_session_submit';

      // If the session variable is set and hasn't yet expired.
      if (isset($_SESSION['webform_field_repeat']) && REQUEST_TIME <= ($_SESSION['webform_field_repeat']['created'] + 3600)) {

        // Loads the submission.
        $submission = webform_get_submission($form['#node']->nid, $_SESSION['webform_field_repeat']['sid']);

        if ($submission) {

          webform_field_repeat_populate_components($form['submitted'], $submission, $cids);

        }
      }
    }
  }
}
/**
 * Traveses the fieldset to find components that need to be populated.
 */
function webform_field_repeat_populate_components(&$component, &$submission, &$cids) {

  foreach ($component as &$item) {

    if ($item['#type'] == 'fieldset') {

      webform_field_repeat_populate_components($item, $submission, $cids);

    }
    elseif (array_key_exists('#webform_component', $item) && in_array($item['#webform_component']['cid'], $cids)) {

      $item['#default_value'] = $submission->data[$item['#webform_component']['cid']]['value'][0];

    }

  }

}

/**
 * Updates the $_SESSION variable.
 */
function webform_field_repeat_session_submit($form, &$form_state) {

  // Checks if the user wants to remembered.
  if ($form['webform_field_repeat']['#checked'] == TRUE) {
    // Saves current sid and request time in session variables.
    $_SESSION['webform_field_repeat']['sid'] = $form_state['values']['details']['sid'];
    $_SESSION['webform_field_repeat']['created'] = REQUEST_TIME;

  }
  else {
    // Removes the session variables.
    unset($_SESSION['webform_field_repeat']);

  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function webform_field_repeat_form_webform_configure_form_alter(&$form, &$form_state, $form_id) {

  // Check if it has been set before.
  $result = db_query("SELECT nid, cid FROM {webform_field_repeat} WHERE nid = :nid", array(
    ':nid' => $form['nid']['#value'],
  ));

  $cids = array();

  if ($result) {
    while ($record = $result->fetchAssoc()) {
      $cids[] = $record['cid'];
    }
  }

  $node = node_load($form['nid']['#value']);

  $form['submission']['redirection']['repeat'] = array(
    '#type' => 'checkbox',
    '#title' => t('Repeat fields'),
    '#default_value' => (!empty($cids)),
    '#description' => t("This allows for selected fields' values to be automatically repeated for another submission."),
  );

  $form['submission']['redirection']['repeat_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => "Select the fields to be repeated",
    '#description' => '',
    '#collapsible' => TRUE,
    '#states' => array(
      'invisible' => array(
        ':input[name=repeat]' => array('checked' => FALSE),
      ),
    ),
  );
  // Adds check boxes to represent webform fields.
  foreach ($node->webform['components'] as $cid => $component) {
    $title = $node->webform['components'][$cid]['name'];
    $form['submission']['redirection']['repeat_fieldset'][$cid] = array(
      '#type' => 'checkbox',
      '#title' => check_plain($title),
      '#default_value' => (!empty($cids) && in_array($cid, $cids)),
      '#description' => '',
    );
  }

  $form['#submit'][] = "webform_field_repeat_form_submit";
}

/**
 * Updates the webform_field_repeat table up on submission.
 */
function webform_field_repeat_form_submit($form, &$form_state) {

  // Each record in database table is made up of node id and component id.
  // The records are deleted first.
  db_delete('webform_field_repeat')
    ->condition('nid', $form['nid']['#value'])
    ->execute();

  // If the repeat option is checked in webform settings page, the selected
  // component ids will be added in the database.
  if ($form['submission']['redirection']['repeat']['#checked'] == TRUE) {
    $fieldset = $form['submission']['redirection']['repeat_fieldset'];
    foreach ($fieldset as $field) {
      if (is_array($field) && in_array('#type', $field)) {
        if ($field['#type'] == "checkbox" && $field['#checked'] == TRUE) {

          db_insert('webform_field_repeat')
          ->fields(array(
            'nid' => $form['nid']['#value'],
            'cid' => $field['#name'],
          ))
          ->execute();
        }
      }
    }
  }

}

/**
 * Returns the user's IP address.
 */
function webform_field_repeat_user_ip() {

  $user_ip = ip_address();

  if (isset($_SERVER['HTTP_X_REAL_IP'])) {
    if ($user_ip != $_SERVER['HTTP_X_REAL_IP']) {
      $user_ip = $_SERVER['HTTP_X_REAL_IP'];
    }
  }

  return $user_ip;
}
