<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_menu().
 * @return array Menu router information.
 */
function html_import_menu() {
  $items = array();
  $items['admin/html-import'] = array(
    'title' => 'HTML Import',
    'page arguments' => array('html_import_admin_form'),
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/html_import.pages.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function _html_import_import_submit($form, &$form_state) {
  _html_import_import_process();
}

function html_import_perm($permission = 'administer content') {
  return TRUE;
}

function _html_import_import_process() {

  $books = db_query('SELECT DISTINCT bid FROM {book}')->fetchAll();
  // Using Batch API for bulk processing
  if (count($books) > 0) {
    $batch = array(
      'title' => t('HTML Import - Consolidate imported pages'),
      'operations' => array(),
      'finished' => '_html_import_import_batch_finished',
      'init_message' => t('Initializing...'),
      'progress_message' => t('Processing @current out of @total books.'),
      'error_message' => t('Processing encountered an error.'),
      'file' => drupal_get_path('module', 'html_import') . '/includes/html_import.batch.inc',
    );
    foreach ($books as $book) {
      $batch['operations'][] = array(
        '_html_import_import_batch_process_entity',
        array(
          $book,
          $task = 'consolidate',
        ),
      );
    }
    batch_set($batch);
    batch_process();
  }

}

/**
 * Implementation of hook_feeds_plugins().
 */
function html_import_feeds_plugins() {
  $info = array();
  $info['HtmlImportParser'] = array(
    'name' => 'HTML Import Parser',
    'description' => 'Parses HTML files into sections.',
    'handler' => array(
      'parent' => 'FeedsParser',
      // A plugin needs to derive either directly or indirectly from FeedsFetcher, FeedsParser or FeedsProcessor.
      'class' => 'HtmlImportParser',
      'file' => 'includes/HtmlImportParser.inc',
      'path' => drupal_get_path('module', 'html_import'),
    ),
  );
  $info['HtmlImportProcessor'] = array(
    'name' => 'HTML Import Processor',
    'description' => 'Processes advanced publications into book structure.',
    'handler' => array(
      'parent' => 'FeedsNodeProcessor',
      // A plugin needs to derive either directly or indirectly from FeedsFetcher, FeedsParser or FeedsProcessor.
      'class' => 'HtmlImportProcessor',
      'file' => 'includes/HtmlImportProcessor.inc',
      'path' => drupal_get_path('module', 'html_import'),
    ),
  );
  $info['HtmlImportFetcher'] = array(
    'name' => 'HTML Import Fetcher',
    'description' => 'Fetches an advanced publication.',
    'handler' => array(
      'parent' => 'FeedsFileFetcher',
      // A plugin needs to derive either directly or indirectly from FeedsFetcher, FeedsParser or FeedsProcessor.
      'class' => 'HtmlImportFetcher',
      'file' => 'includes/HtmlImportFetcher.inc',
      'path' => drupal_get_path('module', 'html_import'),
    ),
  );
  return $info;
}

/**
 * Implementation of hook_enable.
 */
function html_import_enable() {
  cache_clear_all('plugins:feeds:plugins', 'cache');
}
