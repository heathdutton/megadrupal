<?php

/**
 * @file
 * Defines a webform provider for Scald.
 */

/**
 * Implements hook_scald_atom_providers().
 */
function scald_webform_scald_atom_providers() {
  return array(
    'webform' => 'Webform',
  );
}

/**
 * Implements hook_scald_add_form().
 */
function scald_webform_scald_add_form(&$form, &$form_state) {
  $webform_types = webform_variable_get('webform_node_types');
  $nodes = array();
  if ($webform_types) {
    $nodes = db_select('node', 'n')
      ->fields('n')
      ->condition('n.type', $webform_types, 'IN')
      ->execute()
      ->fetchAllAssoc('nid');
  }

  $titles = array();
  foreach ($nodes as $node) {
    $titles[$node->nid] = $node->title;
  }

  $form['identifier'] = array(
    '#type'             => 'select',
    '#title'            => t('Webform'),
    '#required'         => TRUE,
    '#options'          => $titles,
    '#default_value'    => '',
    '#element_validate' => array('scald_webform_validate_id'),
  );
}

/**
 * Implements hook_scald_add_form_fill().
 */
function scald_webform_scald_add_form_fill(&$atom, $form, $form_state) {
  $option = $form['identifier']['#value'];
  $title = $form['identifier']['#options'][$option];
  $atom->title = $title;
  $atom->base_id = $option;
}

/**
 * Implements hook_scald_fetch().
 */
function scald_webform_scald_fetch($atom, $type) {
  if ($type == 'atom') {
    $scald_thumbnail = field_get_items('scald_atom', $atom, 'scald_thumbnail');
    if (!empty($scald_thumbnail)) {
      $thumbnail = file_load($scald_thumbnail[0]['fid']);
      $atom->thumbnail_source = $thumbnail->uri;
    }
    else {
      if (!file_exists('public://scald_webform/icons/webform.png')) {
        $dir = 'public://scald_webform/icons';
        file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
        
        $handle = fopen(drupal_get_path('module', 'scald_webform') . '/icons/webform.png', 'r');
        $file = file_save_data($handle, 'public://scald_webform/icons/webform.png');
        fclose($handle);
      }
      $atom->thumbnail_source = 'public://scald_webform/icons/webform.png';
    }
    $atom->omit_legend = TRUE;
  }
}

/**
 * Implements hook_scald_prerender().
 */
function scald_webform_scald_prerender($atom, $context, $options, $mode) {
  if ($mode == 'atom') {
    variable_set('scald_always_rebuild', TRUE);
    
    $node = node_load($atom->base_id);
    $webform = node_view($node, $view_mode = 'full', $langcode = NULL);
    
    $atom->rendered->player = theme('scald_webform_render',
      array(
        'vars' =>
        array(
          'webform' => $webform,
        ),
      )
    );
  }
}

/**
 * Implements hook_theme().
 */
function scald_webform_theme() {
  return array(
    'scald_webform_render' => array(
      'variables' => array('vars' => NULL),
      'template' => 'scald_webform_render',
    ),
  );
}

/**
 * Checks if a webform has already been imported, based on its id.
 *
 * @param int $id
 *   The webform identifier.
 *
 * @return mixed
 *   FALSE if the webform was never imported, the scald identifier of
 *   the webform otherwise.
 */
function scald_webform_already_imported($id) {
  $query = array('provider' => 'scald_webform', 'base_id' => $id);
  return scald_search($query, FALSE, TRUE);
}

/**
 * Form element validation handler for Webform identifier.
 */
function scald_webform_validate_id($element, &$form_state) {
  $id = $element['#value'];
  if (scald_webform_already_imported($id)) {
    form_error($element, t('Webform already imported.'));
  }
}
