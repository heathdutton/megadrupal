<?php
/**
 * @file
 * Simpletests for the chartbeat_mostpopular module.
 */

/**
 * This class creates a series of tests to test the chartbeat_mostpopular
 * module.
 */
class ChartbeatMostPopularTests2 extends DrupalWebTestCase {
  /**
   * Metadata about our test case.
   */
  public static function getInfo() {
    return array(
      // The human readable name of the test case.
      'name' => 'Test configuration screen',
      // A short description of the tests this case performs.
      'description' => 'Tests input fields on the configuration screen.',
      // The group that this case belongs too, used for grouping tests together
      // in the UI.
      'group' => 'Chartbeat Most Popular',
    );
  }

  /**
   * Perform any setup tasks for our test case.
   */
  public function setUp() {
    parent::setUp(array('chartbeat_mostpopular'));
    $web_user = $this->drupalCreateUser(array('administer_chartbeat_mostpopular'));
    $this->drupalLogin($web_user);
  }

  /**
   * This function does most of the testing for Chartbeat Most Popular.
   */
  public function testChartbeatMostPopular() {
    $web_user = $this->drupalCreateUser(array('administer_chartbeat_mostpopular'));
    $this->drupalLogin($web_user);
    debug($web_user);
    $configure_fields = array();
    $configure_fields['chartbeat_mostpopular_apikey'] = '317a25eccba186e0f6b558f45214c0e7';
    $configure_fields['chartbeat_mostpopular_host'] = 'gizmodo.com';
    $this->drupalPost('admin/config/services/chartbeat_mostpopular', $configure_fields, t('Save configuration'));
    // Verify that the fields got passed to Drupal.
    $this->assertText('The configuration options have been saved.', 'All required fields were passed - OK', 'Chartbeat Most Popular');
    $this->assertNoText('Enter your host name here. Example: "benamer.com" field is required.', 'A hostname was passed', 'Chartbeat Most Popular');
    $this->assertNoText('Chartbeat API key field is required.', 'Chartbeat API Key was passed', 'Chartbeat Most Popular');
  }

  /**
   * Tears down the Drupal environment created for testing.
   */
  public function tearDown() {
    parent::tearDown();
  }
}