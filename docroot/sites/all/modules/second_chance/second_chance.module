<?php
/**
 * @file
 * Second chance module.
 */

/**
 * Implements hook_entity_delete().
 *
 * TODO When entities are linked to files, mark the second chance row as a usage
 * on the file.
 */
function second_chance_entity_delete($entity, $type) {

  list($id, , $bundle) = entity_extract_ids($type, $entity);
  $label = entity_label($type, $entity);

  db_insert('second_chance')->fields(array(
    'entity_type' => $type,
    'entity_id' => $id,
    'bundle' => $bundle,
    'entity' => serialize($entity),
    'label' => $label,
    'date' => REQUEST_TIME,
    'uid' => $GLOBALS['user']->uid,
  ))->execute();
}

/**
 * Implements hook_menu().
 */
function second_chance_menu() {

  $items = array();
  $items['admin/content/second-chance'] = array(
    'title' => 'Recycle bin',
    'description' => 'Restore deleted content',
    'page callback' => 'second_chance_list',
    'page arguments' => array('node'),
    'access arguments' => array('administer content'),
    'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
    'file' => 'second_chance.pages.inc',
  );

  $items['admin/content/second-chance/restore/%second_chance_item'] = array(
    'title' => 'Restore deleted item',
    'page callback' => 'second_chance_restore_item',
    'page arguments' => array(4),
    'access arguments' => array('administer content'),
    'type' => MENU_CALLBACK,
    'file' => 'second_chance.pages.inc',
  );

  return $items;
}

/**
 * Load a second chance record by its ID.
 */
function second_chance_item_load($scid) {
  $query = db_select('second_chance', 'sc');
  $query->condition('sc.scid', $scid);
  $query->fields('sc');
  $object = $query->execute()->fetchObject();
  if ($object) {
    $object->entity = unserialize($object->entity);
  }
  return $object;
}

/**
 * Thrown when something goes wrong when restoring a deleted entity.
 */
class SecondChanceRestoreException extends Exception {}
