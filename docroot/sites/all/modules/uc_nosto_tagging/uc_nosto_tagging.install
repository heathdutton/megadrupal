<?php

/**
 * @file
 * Install, update, and uninstall functions for the module.
 */

define('UC_NOSTO_TAGGING_CONTENT_TYPE', 'nosto_tagging');
define('UC_NOSTO_TAGGING_TOP_SELLERS_NODE', 'top_sellers');

/**
 * Implements hook_install().
 *
 * Creates a new content type for Nosto pages and configures it.
 * Also creates a "top sellers" node for that content type and
 * adds a link to it to the main menu.
 */
function uc_nosto_tagging_install() {
  $t = get_t();
  $content_type_name = $t(ucwords(str_replace('_', ' ', UC_NOSTO_TAGGING_CONTENT_TYPE)));
  $node_title = $t(ucwords(str_replace('_', ' ', UC_NOSTO_TAGGING_TOP_SELLERS_NODE)));

  // Create content type.
  if (!in_array(UC_NOSTO_TAGGING_CONTENT_TYPE, node_type_get_names())) {
    $type = array(
      'type' => UC_NOSTO_TAGGING_CONTENT_TYPE,
      'name' => $content_type_name,
      'description' => $t('Use <em>' . $content_type_name . '</em> for Nosto content, such as the "' . $node_title . '" page.'),
      'base' => 'node_content',
      'custom' => 0,
      'locked' => 1,
    );

    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Configure content type.
  // No preview before submit.
  variable_set('node_preview_' . UC_NOSTO_TAGGING_CONTENT_TYPE, 0);
  // Publish but do not promote to front page.
  variable_set('node_options_' . UC_NOSTO_TAGGING_CONTENT_TYPE, array('status'));
  // Comments are hidden.
  variable_set('comment_' . UC_NOSTO_TAGGING_CONTENT_TYPE, 0);
  // Do not display author and date information.
  variable_set('node_submitted_' . UC_NOSTO_TAGGING_CONTENT_TYPE, FALSE);

  // Create node.
  $node = (object) array(
    'type' => UC_NOSTO_TAGGING_CONTENT_TYPE,
    'title' => $node_title,
    'language' => LANGUAGE_NONE,
    'path' => array(
      'pathauto' => FALSE,
      'alias' => str_replace('_', '-', UC_NOSTO_TAGGING_TOP_SELLERS_NODE),
    ),
  );

  node_object_prepare($node);

  $node->body[$node->language][0]['value'] = '';
  $node->body[$node->language][0]['summary'] = '';
  $node->body[$node->language][0]['format'] = 'full_html';

  // Add link to node in main menu.
  $node->menu['enabled'] = 1;
  $node->menu['link_title'] = $node_title;
  $node->menu['description'] = '';
  $node->menu['parent'] = 'main-menu:0';
  $node->menu['menu_name'] = 'main-menu';

  $node = node_submit($node);
  node_save($node);
}

/**
 * Implements hook_uninstall().
 *
 * Deletes all nodes for the Nosto page content type.
 * Also deletes the content type itself and all its configurations.
 */
function uc_nosto_tagging_uninstall() {
  // Remove all nodes with the Nosto content type.
  $result = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('type', UC_NOSTO_TAGGING_CONTENT_TYPE, '=')
    ->execute();
  $node_ids = array();
  foreach ($result as $node) {
    $node_ids[] = $node->nid;
  }
  node_delete_multiple($node_ids);

  // Remove content type configuration.
  variable_del('node_preview_' . UC_NOSTO_TAGGING_CONTENT_TYPE);
  variable_del('node_options_' . UC_NOSTO_TAGGING_CONTENT_TYPE);
  variable_del('node_submitted_' . UC_NOSTO_TAGGING_CONTENT_TYPE);

  // Remove content type.
  node_type_delete(UC_NOSTO_TAGGING_CONTENT_TYPE);

  // Remove module config variables.
  $variables = array(
    'nosto_tagging_server_address',
    'nosto_tagging_account_name',
    'nosto_tagging_content_type_category_field_id',
    'nosto_tagging_content_type_brand_field_id',
    'nosto_tagging_vocabulary_category_vid',
    'nosto_tagging_content_type_image_field_id',
    'nosto_tagging_element_page_product1_id',
    'nosto_tagging_element_page_product2_id',
    'nosto_tagging_element_page_product3_id',
    'nosto_tagging_element_page_category1_id',
    'nosto_tagging_element_page_category2_id',
    'nosto_tagging_element_page_search1_id',
    'nosto_tagging_element_page_search2_id',
    'nosto_tagging_element_page_cart1_id',
    'nosto_tagging_element_page_cart2_id',
    'nosto_tagging_element_page_cart3_id',
    'nosto_tagging_element_page_top_id',
    'nosto_tagging_element_page_footer_id',
    'nosto_tagging_element_column_left_id',
    'nosto_tagging_element_column_right_id',
    'nosto_tagging_element_page_top_sellers_id',
  );
  foreach ($variables as $variable) {
    variable_del($variable);
  }
}

/**
 * Implements hook_enable().
 *
 * Publishes all nodes that have the "Nosto Tagging" content type.
 * Note: if a node was manually unpublished by the user before disabling
 * the module, it will get published when enabling the module again.
 */
function uc_nosto_tagging_enable() {
  // Publish nodes with the nosto_tagging content type.
  $nodes = node_load_multiple(array(), array('type' => UC_NOSTO_TAGGING_CONTENT_TYPE));
  foreach ($nodes as $node) {
    if (!$node->status) {
      $node->status = 1;
      node_save($node);
    }
  }
}

/**
 * Implements hook_disable().
 *
 * Un-publishes all nodes that have the "Nosto Tagging" content type.
 */
function uc_nosto_tagging_disable() {
  // Un-publish nodes with the nosto_tagging content type.
  $nodes = node_load_multiple(array(), array('type' => UC_NOSTO_TAGGING_CONTENT_TYPE));
  foreach ($nodes as $node) {
    if ($node->status) {
      $node->status = 0;
      node_save($node);
    }
  }
}
