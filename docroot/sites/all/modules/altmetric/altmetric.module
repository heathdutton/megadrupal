<?php

function altmetric_menu(){
  $items['admin/config/content/altmetric'] = array(
    'title' => 'Altmetric',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('altmetric_settings'),
    'access arguments' => array(
      'administer biblio'
    ),
    'description' => t('Administer Altmeric settings'),
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM
  );
  $items['admin/config/content/altmetric/settings'] = array(
    'title' => 'Altmetric',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('altmetric_settings'),
    'access arguments' => array(
      'administer biblio'
    ),
    'description' => t('Administer Altmeric settings'),
    'access callback' => 'user_access',
    'type' => MENU_DEFAULT_LOCAL_TASK
  );
  return $items;
}

function altmetric_node_view_alter(&$build) {
  $source = NULL;  //Which identifier do we use? DOI/PubMed/ArXiv
  if ($build['#node']->type == 'biblio') {
  	//Get the identifier
  	if (isset($build['#node']->biblio_doi) && !is_null($build['#node']->biblio_doi) && $build['#node']->biblio_doi != "") {
  	  $source = "data-doi='". $build['#node']->biblio_doi . "'";
  	} else if (isset($build['#node']->biblio_pubmed_id) && !is_null($build['#node']->biblio_pubmed_id) && $build['#node']->biblio_pubmed_id != "") {
  	  $source = "data-pmid='". $build['#node']->biblio_pubmed_id . "'";
  	}
  	
  	//If we have an identifier, render the badge
  	if (!is_null($source)) {
  	  $badge_type = variable_get('altmetric_badge', 'Default');
  	  $badge_display= '';
  	  $badge_position= variable_get('altmetric_position', 'right');
  	  switch (variable_get('altmetric_display', 'none')){
  	  	case '':
  	  	case 'none':
  	  	  break;
  	  	case 'details':
  	  	  $badge_display = "data-badge-details='$badge_position'";
  	  	  break;
  	  	case 'popover':
  	  	  $badge_display = "data-badge-popover='$badge_position'";
  	  }
  	  drupal_add_js('https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js', 'external');
  	  $build['body']['#markup'] .= "<div class='altmetric-embed' data-badge-type='$badge_type' $source $badge_display></div>";
  	}
  	
  }
}

function altmetric_settings(){
  $badge_types = array(
    'Default' => 'Default (88x18)',
    'donut' => 'Small donut (64x64)',
    'medium-donut' => 'Medium donut (120x120)',
    'large-donut' => 'Large donut (180x180)',
    '1' => 'Am score box (110x20)',
    '4' => 'Small box (85x15)'
  );
  
  $badge_data_display = array(
    'none' => 'None',
    'details' => 'Details',
    'popover' => 'Popovers',
  );
  
  $badge_data_position = array(
    'top' => 'Top',
    'bottom' => 'Bottom',
    'left' => 'Left',
    'right' => 'Right',
  );
  
  $form['badge_type'] = array(
    '#title' => t('Badge type'),
    '#type' => 'select',
    '#description' => t('Select type of badge to be shown on Biblio node pages.'),
    '#options' => $badge_types,
    '#default_value' =>  variable_get('altmetric_badge', 'default'),
  );
  $form['badge_data_display'] = array(
    '#title' => t('Badge data display'),
    '#type' => 'select',
    '#description' => t('Select how data are displayed.'),
    '#options' => $badge_data_display,
    '#default_value' => variable_get('altmetric_display', 'none'),
  );
  $form['badge_data_position'] = array(
    '#title' => t('Details/Popover position'),
    '#type' => 'select',
    '#description' => t('Select type of badge to be shown on Biblio node pages.'),
    '#options' => $badge_data_position,
    '#default_value' => variable_get('altmetric_position', 'right'),
  );
  
  $form['submit'] = array(
    '#value' => 'Save',
    '#type' => 'submit'
  );

  $form['#submit'][] = 'altmetric_settings_submit';
  return $form;
}

function altmetric_settings_submit($form, $form_state) {
  variable_set('altmetric_badge', $form_state['values']['badge_type']);
  variable_set('altmetric_display', $form_state['values']['badge_data_display']);
  variable_set('altmetric_position', $form_state['values']['badge_data_position']);
}
