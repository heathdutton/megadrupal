<?php

/**
 * @file
 * This module add a reorder tab on node view page.
 * administrators can reorders the submenus of a menu item.
 */

/**
 * Implements hook_menu().
 */
function submenu_reorder_menu() {
  $items = array();

  $items['node/%node/reorder'] = array(
    'title' => 'Reorder',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('submenu_reorder_node_page_reorder', 1),
    'access callback' => '_submenu_reorder_tab_access',
    'access arguments' => array(1),
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'submenu_reorder.pages.inc',
  );
  $items['reorder/sibling/menu_items'] = array(
    'title' => 'Reorder',
    'page callback' => 'submenu_reorder_sibling_menu_items',
    'access arguments' => array('reorder pages'),
    'type' => MENU_CALLBACK,
    'file' => 'submenu_reorder.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function submenu_reorder_permission() {
  return array(
    'reorder pages' => array(
      'title' => t('Reorder Subpages'),
      'description' => t('Perform reordering of subpages with Reorder tab.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function submenu_reorder_theme() {
  return array(
    'submenu_reorder_node_page_reorder' => array(
      'render element' => 'form',
      'file' => 'submenu_reorder.pages.inc',
    ),
  );
}

/**
 * Custom access callback function for reorder tab.
 */
function _submenu_reorder_tab_access($node) {
  if (node_access('update', $node)) {
    $menu_record = db_select('menu_links', 'ml')
        ->condition('ml.link_path', 'node/' . $node->nid)
        ->fields('ml', array('mlid', 'plid', 'has_children'))
        ->execute()
        ->fetchObject();
    if (is_object($menu_record)) {
      if ($menu_record->has_children) {
        return TRUE;
      }
      else {
        return FALSE;
      }
    }
  }
  else {
    return FALSE;
  }
}
