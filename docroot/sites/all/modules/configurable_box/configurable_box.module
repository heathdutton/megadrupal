<?php
/**
 * Implements hook_ctools_plugin_api().
 */
function configurable_box_ctools_plugin_api($module, $api) {
  if ($module == 'boxes' && $api == 'plugins') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_ctools_plugin_plugins().
 */
function configurable_box_ctools_plugin_type() {
  return array(
    'plugins' => array(
      'cache' => TRUE,
      'use hooks' => TRUE,
      'classes' => array('handler'),
    ),
  );
}

/**
 * Implements hook_boxes_plugins().
 */
function configurable_box_boxes_plugins() {
  $info = array();
  $path = drupal_get_path('module', 'configurable_boxes') . '/plugins';
  $info['configurable'] = array(
    'handler' => array(
      'class' => 'configurable_box',
      'file' => 'configurable_box.inc',
      'parent' => 'box',
      'path' => $path,
    ),
  );

  $info['configurable_simple'] = array(
    'title' => 'Box (Override)',
    'handler' => array(
      'parent' => 'configurable',
      'class' => 'configurable_simple',
      'file' => 'configurable_simple.inc',
      'path' => $path,
    ),
  );
  return $info;
}

/**
 * Implements hook_boxes_box_load_alter to apply the override
 * 
 * @param boxes_box $box
 * @param string $delta
 */
function configurable_box_boxes_box_load_alter(&$box, $delta) {
  if ($box instanceof configurable_box) {
    $overrides = configurable_box_load_override($delta);
    if ($overrides) {
      $overrides->options = unserialize($overrides->options);
      $box->options = $overrides->options;
      $box->title = $overrides->title;
      $box->description = $overrides->description;
    }
  }
}

/**
 * Implements hook_form_alter for block_admin_configure().
 */
function configurable_box_form_block_admin_configure_alter(&$form, &$form_state) {
  if ($form['module']['#value'] == 'boxes') {
    $box = boxes_box_load($form['delta']['#value']);
    if ($box instanceof configurable_box) {
      $override = configurable_box_load_override($form['delta']['#value']);

      if ($box->export_type & EXPORT_IN_CODE) {
        if ($override) {
          $form['reset'] = array(
            '#type' => 'submit',
            '#value' => t('Reset to Default'),
            '#submit' => array('configurable_box_reset_submit'),
          );
        }

        $form['override'] = array(
          '#type' => 'submit',
          '#value' => t('Override'),
          '#submit' => array('configurable_box_override_submit'),
        );
      }
    }
  }
}

/**
 * Submit handler to redirect to reset form
 * 
 * @param array $form
 * @param array $form_state
 */
function configurable_box_reset_submit($form, &$form_state) {
  $_GET['destination'] = 'admin/structure/block/manage/boxes/' . $form_state['values']['delta'] . '/reset';
  drupal_goto('admin/structure/block/manage/boxes/' . $form_state['values']['delta'] . '/reset');
}

/**
 * Submit handler to override the box
 * 
 * @param array $form
 * @param array $form_state
 */
function configurable_box_override_submit($form, &$form_state) {
  $box = boxes_factory($form_state['values']['plugin_key'], $form_state['values']);

  if ($box instanceof configurable_box) {
    $box->override();
  }

  drupal_set_message(t('The block configuration has been saved.'));
  cache_clear_all();
  $form_state['redirect'] = 'admin/structure/block';
}

/**
 * Implements hook_menu
 * 
 * @return array
 */
function configurable_box_menu() {
  $items = array();

  $items['admin/structure/block/manage/boxes/%boxes_box/reset'] = array(
    'title' => 'Reset box',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('configurable_box_reset_form', 5),
    'access arguments' => array('administer boxes'),
    'type' => MENU_CALLBACK,
    'file' => 'configurable_box.admin.inc',
  );

  return $items;
}

/**
 * Loads the override
 * 
 * @param string $delta
 * @return stdClass
 */
function configurable_box_load_override($delta) {
  return db_query('SELECT title, description, options FROM {box_overrides} WHERE delta = :delta', array(':delta' => $delta))->fetchObject();
}
