<?php
/**
 * @file
 * Code for nm_landing_pages.
 */

include_once 'nm_landing_pages.features.inc';

/**
 * Implements hook_menu().
 */
function nm_landing_pages_menu() {
  $item = array();
  $items['admin/config/nodemaker/nm-landing-pages'] = array(
    'title' => t('NodeMaker Landing Pages'),
    'description' => t('Select your home page layout.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nodemaker_nm_landing_pages_config_form'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}


/**
 * Configuration form.
 */
function nodemaker_nm_landing_pages_config_form() {
  $form = array();

  $form['#attached']['css'] = array(
    drupal_get_path('module', 'nm_landing_pages') . '/css/nm_landing_pages.css',
  );

  //variables used throughout form
  $destination = drupal_get_destination();
  $destination = $destination['destination'];

  //default Drupal layout at /node
  $layouts = array(
    'node' => array(
      'name' => t('Default Drupal'),
      'path' => 'node',
      'icon' => 'node-icon.png',
      'description' => t('A stream of all content in reverse chronology of when they were created.  There are %num items per page.  You can !link.', array('%num' => variable_get('default_nodes_main', 10), '!link' => l('configure how many items per page', 'admin/config/system/site-information', array('query' => array('destination' => $destination))))),
    ), 
  );

  //get landing pages from View
  $view = views_get_view('nm_landing');
  foreach ($view->display as $k => $v) {
    if ($v->display_plugin == 'page') {

      //all paths should match pattern of landing/$module
      //check to see if module is enabled, b/c pointless if not
      $path_parts = explode('/', $v->display_options['path']);
      $module = $path_parts[1];

      if (module_exists($module)) {

        $layouts[$v->display_options['path']] = array(
          'name' => $v->display_title,
          'description' => $v->display_options['display_description'],
          'path' => $v->display_options['path'],
        );
        //add icon if exists
        if (file_exists( drupal_get_path('module', 'nm_landing_pages') . '/icons/'.str_replace('/', '_', $v->display_options['path']).'-icon.png')) {
          $layouts[$v->display_options['path']]['icon'] = str_replace('/', '_', $v->display_options['path']).'-icon.png';
        }

      }

    }
  }


  //check to see if current url is in one of our options, else add it
  $current = variable_get('site_frontpage', 'node');

  if (!isset($layouts[$current])) {

    $layouts[$current] = array();

    //get the title from menu router (must be exact match - no args)
    $query = db_select('menu_router', 'm')
      ->fields('m', array('title', 'description'))
      ->condition('path', $current)
      ->execute()->fetchAssoc();

    if (isset($query['title'])) {
      $layouts[$current]['name'] = $query['title'];
      //see if we got a description
      if (isset($query['description'])) {
        $layouts[$current]['description'] = $query['description'];
      }
    }
    //get the title from nodes
    else {

      $query = db_select('node', 'n');
      $query->addJoin('left', 'field_data_field_nm_body', 'd', 'n.nid = d.entity_id');
      $query->fields('n', array('title'));
      $query->fields('d', array('field_nm_body_value'));
      $query->condition('nid', str_replace('node/', '', $current));
      $result = $query->execute()->fetchAssoc();

      if (isset($result['title'])) {
        $layouts[$current]['name'] = $result['title'];
        //see if we got a desccription
        if (isset($result['field_nm_body_value'])) {
          $layouts[$current]['description'] = text_summary($result['field_nm_body_value'], 'plain_text', '200') . ' ...';
        }

      }

    }

    //make sure we have data to pass
    if (!isset($layouts[$current]['name']) || $layouts[$current]['name'] == '') {
       $layouts[$current]['name'] = $current;
    }
    if (!isset($layouts[$current]['description'])) {
       $layouts[$current]['description'] = '';
    }      
  }

  //turn $layouts into usable $options
  $options = array();
  foreach($layouts as $k => $v) {
    if (isset($v['icon']) && !is_null($v['icon'])) {
      $image = theme('image', array('path' => drupal_get_path('module', 'nm_landing_pages') . '/icons/'.$v['icon']));
    }
    else {
      $image = theme('image', array('path' => drupal_get_path('module', 'nm_landing_pages') . '/icons/default-icon.png'));
    }
    $label = '<strong>' . $v['name'] . '</strong>';
    $description = '<p>' . $v['description'] . '</p>';
    //$options[$k] = $image . $label . $description;
    $options[$k] = $label . $description;
  }

  $form['layout'] = array(
    '#type' => 'fieldset',
    '#title' => t('Home Page Layout'),
  );
  $form['layout']['site_frontpage'] = array(
    '#type' => 'radios',
    '#title' => t('Select which layout you would like for the home page'),
    '#options' => $options,
    '#default_value' => variable_get('site_frontpage', 'node'),
    '#attributes' => array(
      'class' => array('nodemaker-app-config'),
    ),
  );

  $form['settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Other Home Page Settings'),
  );
  $destination = drupal_get_destination();
  $destination = $destination['destination'];
  $settings = array(
    '<strong>' . t('Number of Posts on Front Page') . '</strong>. ' . t('If you are using the "default Drupal" home page, !link.', array('!link' => l('configure the number of items that display', 'admin/config/system/site-information', array('query' => array('destination' => $destination))))),
    '<strong>' . t('Number of columns on the front page') . '</strong>. ' . t('If you are the NodeMaker Omega Isotope feature, !link?', array('!link' => l('how many columns do want for the main content on the home page', 'admin/appearance/settings/omega_nodemaker', array('query' => array('destination' => $destination))))),
    '<strong>' . t('Pixel spacing between columns') . '</strong>. ' . t('If you are the NodeMaker Omega Isotope feature, !link?', array('!link' => l('how pixels do you want in between each column on the home page', 'admin/appearance/settings/omega_nodemaker', array('query' => array('destination' => $destination))))),
  );

  $form['settings']['home'] = array(
    '#type' => 'markup',
    '#theme' => 'item_list',
    '#items' => $settings,
  );

  return system_settings_form($form);
}


/**
 * Implements hook_help().
 */
function nm_landing_pages_help($path, $arg) {
  switch ($path) {
    case 'admin/help#nm_landing_pages':
      $content = array(
        '#group' => 'info',
        '#theme' => 'item_list',
        '#attributes' => array(
          'class' => array('nodemaker-apps-details'),
        ),
        '#items' => nm_landing_pages_help_details(),
      );

      return render($content);
      break;
  }
}


/**
  * Content for hook_help().
  */
function nm_landing_pages_help_details() {
  $items = array();
  $items[] = '<strong>' . t('Home Page Layouts.') . '</strong>  ' . t('Provides several options for a home page layout based on other NodeMaker apps installed.');
  $items[] = '<strong>' . t('Issues?') . '</strong>  ' . t('Have a support question?  Find a bug?  !issue!', array('!issue' => '<a href="http://drupal.org/project/issues/nm_core" title="NodeMaker Core Issue Queue" target="_blank">Please use the issue queue</a>'));
  return $items;
}

function nodemaker_nm_landing_pages_getting_started_form() {
  $form = nodemaker_nm_landing_pages_getting_started_content();
  return system_settings_form($form);
}

/**
  * Content for nodemaker_getting_started_form().
  * Content for nodemaker_nm_landing_pages_getting_started_form().
  */
function nodemaker_nm_landing_pages_getting_started_content() {

  //variables used throughout form
  $destination = drupal_get_destination();
  $destination = $destination['destination'];
  
  //get the icon
  $icon = drupal_get_path('module', 'nm_core') . '/' . 'nm_core' . '-icon.png';
  if (file_exists($icon)) {
    $image = l(theme('image', array('path' => $icon, 'attributes' => array('class' => array('nodemaker-icon')))), 'admin/nodemaker/apps/'. 'nm_landing_pages', array('html' => TRUE, 'attributes' => array('class' => array('nodemaker-icon-link'), 'title' => 'NodeMaker Landing Pages Details')));
  }
  else {
    $image = '';
  }
  
  //group
  $form['tabs']['nm_landing_pages_getting_started'] = array(
    '#type' => 'fieldset',
    '#title' => t('NodeMaker Landing Pages'),
    '#description' => $image . t('<h4>NodeMaker Landing Pages Launch Checklist</h4><p>NodeMaker Landing Pages provides many default configurations, including several that were defined during installation. This launch checklist will help you understand some of the configurations that you should verify are correct for your needs prior to launching your new website.</p>'),
    '#attributes' => array(
      'class' => array('getting-started'),
    ),
    '#weight' => -10,
  );
  
  //home page
  $description = t('When you installed NodeMaker, we selected the home page layout for you.  But, you have choices!  Please !layouts for your website.', array('!layouts' => l('confirm this is the best home page layout', 'admin/config/nodemaker/nm-landing-pages', array('query' => array('destination' => $destination), 'attributes' => array('title' => 'Home Page Layouts')))));
  $form['tabs']['nm_landing_pages_getting_started']['nm_landing_pages_getting_started_home'] = array(
    '#type' => 'checkbox',
    '#title' => t('Home Page Layout'),
    '#description' => $description,
    '#default_value' => variable_get('nm_landing_pages_getting_started_home', 0),
    '#title_display' => 'after',
    '#theme' => 'toggleswitch',
  );

  return $form;

}