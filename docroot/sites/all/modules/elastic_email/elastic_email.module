<?php
/**
 * @file
 * This module directs outbound email to the Elastic Email service.
 * To use this service, you need an Elastic Email account so you can provide a
 * username and API key to this module.
 *
 * This module allows for the inclusion of ElasticEmail as the native Drupal mail
 * handler using the new Drupal mail system interface.
 *
 * @see http://elasticemail.com
 */

/**
 * Constant for the Elastic Email web service endpoint URL.
 */
define('ELASTIC_EMAIL_ENDPOINT', 'https://api.elasticemail.com/mailer/send');

/**
 * Constant for the Elastic Email username variable/parameter.
 */
define('ELASTIC_EMAIL_USERNAME', 'elastic_email_username');

/**
 * Constant for the API key variable/parameter.
 */
define('ELASTIC_EMAIL_API_KEY', 'elastic_email_api_key');

/**
 * Constant for the "is email queued?" variable/parameter.
 */
define('ELASTIC_EMAIL_QUEUE_ENABLED', 'elastic_email_queue_enabled');

/**
 * Constant for the "are successful transactions logged?" variable/parameter.
 */
define('ELASTIC_EMAIL_LOG_SUCCESS', 'elastic_email_log_success');

/**
 * Implements hook_menu().
 */
function elastic_email_menu() {
  $items = array();

  $items['admin/config/system/elastic_email'] = array(
    'title' => 'Elastic Email',
    'description' => 'Elastic Email Dashboard',
    'page callback' => 'elastic_email_dashboard',
    'file' => 'elastic_email.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'weight' => 0,
  );

  $items['admin/config/system/elastic_email/elastic_email'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Elastic Email',
    'description' => 'Elastic Email Dashboard',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
  );

  $items['admin/config/system/elastic_email/activity_log'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Activity Log',
    'description' => 'View the Elastic Email activity log',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('elastic_email_activity_log'),
    'file' => 'elastic_email.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'weight' => 1,
  );

  $items['admin/config/system/elastic_email/settings'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Settings',
    'description' => 'Configure Elastic Email',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('elastic_email_settings_form'),
    'file' => 'elastic_email.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'weight' => 10,
  );

  $items['admin/config/system/elastic_email/test'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Test Email',
    'description' => 'Send test email via Elastic Email',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('elastic_email_send_test'),
    'file' => 'elastic_email.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'weight' => 11,
  );

  return $items;
}

/**
 * Implements hook_help().
 */
function elastic_email_help($path = '', $arg = '') {
  switch ($path) {
    case 'admin/help/elastic_email':
      // Return the README inside a <pre> element.
      $help = file_get_contents(dirname(__FILE__) . "/README.txt");
      return '<pre>' . $help . '</pre>';

    case 'admin/config/system/elastic_email':
      // Introductory text.
      $help = '<p>'
        . t('Elastic Email is a (commercial) mail relay service. It is particularly of use as a mail relay for cloud-hosted (e.g. Amazon EC2) websites that may be subject to IP-based spam filtering, or sites that have restrictions on outbound ports.')
        . '</p><p>'
        . t('This module intercepts outgoing Drupal mail, and delivers it to the Elastic Email REST-style service over HTTPS. Note that email is delivered as though all recipients are BCC (that is, recipients cannot see other recipients of the message).')
        . '</p><p>'
        . t('To use the service, visit the <a href="http://elasticemail.com">Elastic Email website</a> and sign-up to get an account <em>username</em> and <em>API Key</em>.')
        . '</p>';
      return $help;
  }
}

/**
 * Implements hook_cron_queue_info().
 */
function elastic_email_cron_queue_info() {
  $queues = array();
  $queues['elastic_email'] = array(
    'worker callback' => 'elastic_email_cron_send',
    'time' => 5,
  );
  return $queues;
}

/**
 * Sends the emails that are in the queue.
 *
 * @param $message
 *   The email message string that will be sent.
 */
function elastic_email_cron_send($message) {
  module_load_include('inc', 'elastic_email', 'mail');
  ElasticEmailMailSystem::cronSend($message);
}

/**
 * Implements hook_init().
 */
function elastic_email_init() {
  if (user_access('administer site configuration') && path_is_admin(current_path())) {
    try {
      $account_data = ElasticEmailApiAccountDetails::getInstance()->makeRequest();
      $credit_low_threshold = variable_get('elastic_email_credit_low_threshold', 0);
      if ($account_data['credit'] <= $credit_low_threshold) {
        drupal_set_message(t('Your Elastic Email credit is getting low - currently at %credit %currency',
          array(
            '%credit' => $account_data['credit'],
            '%currency' => $account_data['currency']
          )),
          'warning', FALSE);
      }
    }
    catch (ElasticEmailException $e) {
    }
  }
}

/**
 *  Implements hook_theme().
 */
function elastic_email_theme() {
  return array(
    'elastic_email_dashboard' => array(
      'template' => 'elastic-email-dashboard',
      'variables' => array('data' => NULL),
      'path' => drupal_get_path('module', 'elastic_email') . '/theme',
    ),
  );
}