<?php

/**
 * @file
 * Install, update, and uninstall functions for module.
 */

/**
 * Implements hook_schema().
 */
function dynamic_panes_fc_layout_schema() {
  $schema['dynamic_panes_fc_layout'] = array(
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a layout.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of this layout, always treated as non-markup plain text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the layout was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the layout was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function dynamic_panes_fc_layout_install() {
  $bases = _dynamic_panes_fc_layout_field_bases();
  $instances = _dynamic_panes_fc_layout_field_instances();

  foreach ($bases as $base) {
    field_create_field($base);
    field_create_instance($instances[$base['field_name']]);
  }
}

/**
 * Implements hook_modules_enabled().
 *
 * @see dynamic_panes_fc_layout_node_type_insert()
 */
function dynamic_panes_fc_layout_modules_enabled($modules) {
  if (in_array('dynamic_panes_fc_layout', $modules)) {
    // Ensure that the list of node types reflects newly enabled modules.
    node_types_rebuild();

    // Create layout fields for each node type, if needed.
    foreach (node_type_get_types() as $info) {
      _dynamic_panes_fc_layout_layout_field_create($info);
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function dynamic_panes_fc_layout_uninstall() {
  $bases = _dynamic_panes_fc_layout_field_bases();
  $bases = array_keys($bases);
  krsort($bases);
  $bases[] = 'field_dp_layout';

  foreach ($bases as $field_name) {
    field_delete_field($field_name);
  }

  db_delete('variable')
    ->condition('name', 'dynamic_panes_fc_layout_%', 'LIKE')
    ->execute();

  cache_clear_all('variables', 'cache_bootstrap');
}

/**
 * Provides fields, which must be created on module installation.
 *
 * @return array
 *   An array contains a fields structure.
 */
function _dynamic_panes_fc_layout_field_bases() {
  // Define structure of field 'field_dp_layout_regions'.
  $bases['field_dp_layout_regions'] = array(
    'field_name' => 'field_dp_layout_regions',
    'type' => 'field_collection',
    'entity_types' => array('dynamic_panes_fc_layout'),
    'cardinality' => -1,
    'settings' => array(
      'hide_blank_items' => 1,
      'path' => '',
    ),
    'locked' => TRUE,
  );

  // Define structure of field 'field_dp_regions_region'.
  $bases['field_dp_regions_region'] = array(
    'field_name' => 'field_dp_regions_region',
    'type' => 'text',
    'entity_types' => array('field_collection_item'),
    'cardinality' => 1,
    'settings' => array(
      'max_length' => 255,
    ),
    'locked' => TRUE,
  );

  // Define structure of field 'field_dp_regions_blocks'.
  $bases['field_dp_regions_blocks'] = array(
    'field_name' => 'field_dp_regions_blocks',
    'type' => 'field_collection',
    'entity_types' => array('field_collection_item'),
    'cardinality' => -1,
    'settings' => array(
      'hide_blank_items' => 1,
      'path' => '',
    ),
    'locked' => TRUE,
  );

  // Define structure of field 'field_dp_blocks_block'.
  $bases['field_dp_blocks_block'] = array(
    'field_name' => 'field_dp_blocks_block',
    'type' => 'entityreference',
    'entity_types' => array('field_collection_item'),
    'cardinality' => -1,
    'settings' => array(
      'target_type' => 'bean',
      'handler' => 'base',
      'handler_settings' => array(
        'target_bundles' => array(),
        'sort' => array('type' => 'none'),
      ),
    ),
    'locked' => TRUE,
  );

  // Define structure of field 'field_dp_blocks_level'.
  $bases['field_dp_blocks_level'] = array(
    'field_name' => 'field_dp_blocks_level',
    'type' => 'list_text',
    'entity_types' => array('field_collection_item'),
    'cardinality' => 1,
    'settings' => array(
      'allowed_values' => drupal_map_assoc(range(1, 10)),
      'allowed_values_function' => '',
    ),
    'locked' => TRUE,
  );

  // Define structure of field 'field_dp_layout_ruleset'.
  $bases['field_dp_layout_ruleset'] = array(
    'field_name' => 'field_dp_layout_ruleset',
    'type' => 'text',
    'entity_types' => array('dynamic_panes_fc_layout'),
    'cardinality' => -1,
    'settings' => array(
      'max_length' => 255,
    ),
    'locked' => TRUE,
  );

  return $bases;
}

/**
 * Provides field instances, which must be created on module installation.
 *
 * @return array
 *   An array contains a field instances structure.
 */
function _dynamic_panes_fc_layout_field_instances() {
  // Define instance data for field 'field_dp_layout_regions'.
  $instances['field_dp_layout_regions'] = array(
    'label' => 'Regions',
    'widget' => array(
      'weight' => 1,
      'type' => 'field_collection_embed',
      'module' => 'field_collection',
      'active' => 0,
      'settings' => array(),
    ),
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'default_value' => NULL,
    'required' => FALSE,
    'field_name' => 'field_dp_layout_regions',
    'entity_type' => 'dynamic_panes_fc_layout',
    'bundle' => 'dynamic_panes_fc_layout',
  );

  // Define instance data for field 'field_dp_regions_region'.
  $instances['field_dp_regions_region'] = array(
    'label' => 'Region',
    'widget' => array(
      'weight' => 1,
      'type' => 'dynamic_panes_region',
      'module' => 'dynamic_panes',
      'active' => 0,
      'settings' => array(),
    ),
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'default_value' => NULL,
    'required' => TRUE,
    'field_name' => 'field_dp_regions_region',
    'entity_type' => 'field_collection_item',
    'bundle' => 'field_dp_layout_regions',
  );

  // Define instance data for field 'field_dp_regions_blocks'.
  $instances['field_dp_regions_blocks'] = array(
    'label' => 'Blocks',
    'widget' => array(
      'weight' => 2,
      'type' => 'field_collection_embed',
      'module' => 'field_collection',
      'active' => 0,
      'settings' => array(),
    ),
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'default_value' => NULL,
    'required' => TRUE,
    'field_name' => 'field_dp_regions_blocks',
    'entity_type' => 'field_collection_item',
    'bundle' => 'field_dp_layout_regions',
  );

  // Define instance data for field 'field_dp_blocks_block'.
  $instances['field_dp_blocks_block'] = array(
    'label' => 'Block',
    'widget' => array(
      'weight' => 1,
      'type' => 'entityreference_autocomplete',
      'module' => 'options',
      'active' => 1,
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'size' => 60,
        'path' => '',
      ),
    ),
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'default_value' => NULL,
    'required' => TRUE,
    'field_name' => 'field_dp_blocks_block',
    'entity_type' => 'field_collection_item',
    'bundle' => 'field_dp_regions_blocks',
  );

  // Define instance data for field 'field_dp_blocks_level'.
  $instances['field_dp_blocks_level'] = array(
    'label' => 'Level',
    'widget' => array(
      'weight' => 3,
      'type' => 'options_select',
      'module' => 'options',
      'active' => 1,
      'settings' => array(),
    ),
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'default_value' => NULL,
    'field_name' => 'field_dp_blocks_level',
    'entity_type' => 'field_collection_item',
    'bundle' => 'field_dp_regions_blocks',
  );

  // Define instance data for field 'field_dp_layout_ruleset'.
  $instances['field_dp_layout_ruleset'] = array(
    'label' => 'Ruleset',
    'widget' => array(
      'weight' => 2,
      'type' => 'dynamic_panes_ruleset',
      'module' => 'dynamic_panes',
      'active' => 0,
      'settings' => array(),
    ),
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'default_value' => NULL,
    'field_name' => 'field_dp_layout_ruleset',
    'entity_type' => 'dynamic_panes_fc_layout',
    'bundle' => 'dynamic_panes_fc_layout',
  );

  return $instances;
}
