<?php

/**
 * @file
 * Install file for the ecard module.
 */

/**
 * Implements hook_schema().
 */
function ecard_schema() {
  $schema['ecard'] = array(
    'description' => 'The table for ecards.',
    'fields' => array(
      'hash' => array(
        'description' => 'The hash-value unique identifier.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_type' => array(
        'description' => 'The entity type of the parent entity the ecard is saved in.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'description' => 'The bundle of the parent entity the entity is saved in.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'The entity:bundle:id of the parent entity the ecard is saved in.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'field_name' => array(
        'description' => 'The field name of the ecard field.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The user id of the author of the ecard.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'mail_from' => array(
        'description' => 'The e-mail address of the sender.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'name_from' => array(
        'description' => 'The name of the sender.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'mail_to' => array(
        'description' => 'The e-mail address of the recipient.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'name_to' => array(
        'description' => 'The name of the recipient.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'text' => array(
        'description' => 'The content of the ecard.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'pick_up' => array(
        'description' => 'Timestamp for the picked up event.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The timestamp the ecard was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'sent_time' => array(
        'description' => 'The timestamp the ecard was sent.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'scheduled_time' => array(
        'description' => 'The timestamp the ecard is/was scheduled to be sent at.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'sent' => array(
        'description' => 'Whether or not the card has been sent',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
      ),
      'notify' => array(
        'description' => 'Whether or not the sender should be notified when the card is picked up',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'entity_type' => array('entity_type'),
      'bundle' => array('bundle'),
      'entity_id' => array('entity_id'),
      'uid' => array('uid'),
    ),
    'primary key' => array('hash'),
  );
  return $schema;
}

/**
 * Implements hook_field_schema().
 */
function ecard_field_schema($field) {
  $columns = array(
    'id' => array(
      'description' => 'CSS ID for the ecard div.',
      'type' => 'varchar',
      'not null' => TRUE,
      'length' => 255,
      'default' => '',
    ),
    'class' => array(
      'description' => 'CSS class for the ecard div.',
      'type' => 'varchar',
      'not null' => TRUE,
      'length' => 255,
      'default' => '',
    ),
    'top' => array(
      'description' => 'Top offset of the ecard text in pixel.',
      'type' => 'int',
      'size' => 'small',
      'not null' => TRUE,
      'default' => 0,
      'unsigned' => TRUE,
    ),
    'left' => array(
      'description' => 'Left offset of the ecard text in pixel.',
      'type' => 'int',
      'size' => 'small',
      'not null' => TRUE,
      'default' => 0,
      'unsigned' => TRUE,
    ),
    'width' => array(
      'description' => 'Width of the ecard text in pixel.',
      'type' => 'int',
      'size' => 'small',
      'not null' => TRUE,
      'default' => 300,
      'unsigned' => TRUE,
    ),
    'color' => array(
      'description' => 'Color of the ecard message to be displayed in hexadecimal.',
      'type' => 'varchar',
      'not null' => TRUE,
      'length' => 6,
      'default' => '000000',
    ),
    'font' => array(
      'description' => 'Path to a font file to be used to render the message.',
      'type' => 'varchar',
      'not null' => TRUE,
      'length' => 255,
      'default' => '',
    ),
    'font_size' => array(
      'description' => 'Font size of the ecard text in pixel.',
      'type' => 'int',
      'size' => 'small',
      'not null' => TRUE,
      'default' => 12,
      'unsigned' => TRUE,
    ),
  );
  return array(
    'columns' => $columns,
  );
}

/**
 * Change the pickup field from a boolean flag to an int for a timestamp.
 */
function ecard_update_7001() {
  $spec = array(
    'description' => 'Timestamp for the picked up event.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  db_change_field('ecard', 'pick_up', 'pick_up', $spec);
}

/**
 * Add in "sent" and "notify" boolean fields.
 */
function ecard_update_7002() {
  $spec = array(
    'description' => 'Whether or not the card has been sent',
    'type' => 'int',
    'size' => 'tiny',
    'default' => 0,
  );
  db_add_field('ecard', 'sent', $spec);

  $spec = array(
    'description' => 'Whether or not the sender should be notified when the card is picked up',
    'type' => 'int',
    'size' => 'tiny',
    'default' => 0,
  );
  db_add_field('ecard', 'notify', $spec);
}

/**
 * Rename 'timestamp' to 'created', and add in 'sent_time' and 'scheduled_time'
 * fields.
 */
function ecard_update_7003() {
  $spec = array(
    'description' => 'The timestamp the ecard was created.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  db_change_field('ecard', 'timestamp', 'created', $spec);
  $spec = array(
    'description' => 'The timestamp the ecard was sent.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('ecard', 'sent_time', $spec);
  $spec = array(
    'description' => 'The timestamp the ecard is/was scheduled to be sent at.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('ecard', 'scheduled_time', $spec);
  $spec = array(
    'description' => 'The field name of the ecard field.',
    'type' => 'varchar',
    'length' => 128,
    'not null' => TRUE,
    'default' => '',
  );
  db_add_field('ecard', 'field_name', $spec);
}

