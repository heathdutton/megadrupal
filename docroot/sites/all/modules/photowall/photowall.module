<?php
/**
 * @file
 * This is main module file of Photowall.
 */

/**
 * Implements hook_help().
 */
function photowall_help($path, $arg) {
  switch($path) {
    case 'admin/help#photowall':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides a <em>Photowall</em> format for displaying <em>Image</em> or <em>Media</em> field, using JQuery <a href="@photowall">Photowall</a> plugin.', array('@photowall' => 'https://github.com/tanmayk/jquery-photowall')) . '</p>';
      $output .= '<h3>' . t('Usage') . '</h3>';
      $output .= '<p>' . t('Create or edit a <a href="@content_types">content type</a> and include an <em>Image</em> field. Edit this image field to make it so that multiple image files may be added ("Number of values" setting at @content_type_setting).', array('@content_types' => url('admin/structure/types'), '@content_type_setting' => 'admin/structure/types/manage/{content type}/fields/{field_image/field_media}')) . '</p>';
      $output .= '<p>' . t('Go to Manage display for your content type (/admin/structure/types/manage/{content type}/display) and switch the format of your multiple image/media field from Image to Photowall.') . '</p>';
      $output .= '<p>' . t('Click the settings wheel in the slideshow-formatted multiple image field to edit advanced settings.') . '</p>';
      $output .= '<p>' . t('Save! and here you go.') . '</p>';
      $output .= '<h3>' . t('Available option') . '</h3>';
      $output .= '<p>' . t('<strong>Zoom factor:</strong> Set zoom factor between 1.3 to 1.6 for better results.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function photowall_theme() {
  return array(
    'photowall' => array(
      'variables' => array(
        'items' => NULL,
        'zoom_factor' => NULL,
        'field_type' => NULL,
      ),
      'template' => 'theme/photowall',
      'file' => 'theme/theme.inc',
    ),
  );
}

/**
 * Implements hook_views_api().
 * TODO Integration with views.
 */
function photowall_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function photowall_field_formatter_info() {
  $formatters = array(
    'photowall' => array(
      'label' => t('Photowall'),
      'field types' => array('image', 'media'),
      'settings' => array(
        'zoom_factor' => '1.5',
      ),
    ),
  );
  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function photowall_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $form = array(
    '#tree' => TRUE,
  );
  if ($field['type'] == 'image' || $field['type'] == 'media') {
    $form['zoom_factor'] = array(
      '#title' => t('Zoom factor'),
      '#type' => 'textfield',
      '#size' => 4,
      '#default_value' => $settings['zoom_factor'],
      '#element_validate' => array('element_validate_number'),
      '#required' => TRUE,
      '#description' => t('Enter value between 1.3 to 1.6 for better results.'),
    );
  }
  return $form;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function photowall_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  if (isset($settings['zoom_factor']))
    $summary[] = t('Zoom factor: @zoom', array('@zoom' => $settings['zoom_factor']));
  else
    $summary[] = t('Zoom factor: 1.5');

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function photowall_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];
  $element = array();
  if (!isset($settings['zoom_factor'])) {
    $settings['zoom_factor'] = '1.5';
  }

  //Check for plugin.
  if (module_exists('libraries')) {
    $path = libraries_get_path('jquery-photowall');
  }
  if (!file_exists($path . '/jquery-photowall.js')) {
    drupal_set_message(t('JQuery Photowall must be installed'), 'warning', FALSE);
  }

  if (count($items)) {
    $element[] = array(
      '#theme' => 'photowall',
      '#items' => $items,
      '#zoom_factor' => $settings['zoom_factor'],
      '#field_type' => $field['type'],
    );
  }
  return $element;
}
