<?php
/**
 * @file
 * context_meta.module
 */

/**
 * Implements hook_permission().
 */
function context_meta_permission() {
  return array(
    'administer context meta settings' => array(
      'title' => t('administer context meta settings'),
    ),
  );
}

/**
 * Implements hook_init().
 */
function context_meta_init() {
  global $user;

  $markup = '';
  $token_data = array();
  $meta_tags = context_meta_get_tags();

  // Place tags in html head if not in admin section.
  if ($meta_tags && arg(0) != 'admin') {
    $token_data['node'] = menu_get_object();
    $token_data['user'] = $user;
    $token_data['term'] = (arg(0) == 'taxonomy' && arg(1) == 'term' && is_numeric(arg(2))) ? taxonomy_term_load(arg(2)) : NULL;

    foreach ($meta_tags as $meta_tag) {
      if ($meta_tag->meta_url == current_path()) {
        $tag = '<meta ' . check_plain($meta_tag->meta_attr) . '="' . check_plain($meta_tag->meta_attr_value) . '" content="' . check_plain($meta_tag->meta_content) . '">' . "\r\n";
        $tag = token_replace($tag, array('node' => $token_data['node'], 'user' => $token_data['user'], 'term' => $token_data['term']),
        array('sanitize' => TRUE, 'clear' => TRUE));
        $markup .= $tag;
      }
    }
  }

  $all_tags = array(
    '#type' => 'markup',
    '#markup' => $markup,
  );

  drupal_add_html_head($all_tags, 'context_meta_tags');
}

/**
 * Implements hook_menu().
 */
function context_meta_menu() {
  $items = array();

  $items['admin/config/context-meta'] = array(
    'title' => 'Context Meta tag setting',
    'description' => 'URL based context meta tag',
    'position' => 'right',
    'weight' => 0,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
  );

  $items['admin/config/context-meta/list'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Context Meta List',
    'description' => 'Context meta tag listing',
    'page callback' => 'context_meta_list',
    'file' => 'context_meta.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer context meta settings'),
  );

  $items['admin/config/context-meta/add'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Add new meta',
    'description' => 'Add new context meta tag',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('context_meta_form'),
    'file' => 'context_meta.admin.inc',
    'access callback' => 'user_access',
    'access arguments' => array('administer context meta settings'),
  );

  $items['admin/config/context-meta/edit/%context_meta'] = array(
    'title' => 'Edit meta tag',
    'description' => 'Re-configure existing tags.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('context_meta_form', 4),
    'file' => 'context_meta.admin.inc',
    'access arguments' => array('administer context meta settings'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/context-meta/remove/%'] = array(
    'page callback' => 'context_meta_remove_tag',
    'page arguments' => array(4),
    'access arguments' => array('administer context meta settings'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_load().
 */
function context_meta_load($meta_id = NULL) {
  $query = db_select('context_meta', 'cm');
  $query->fields('cm');
  $query->condition('cm.meta_id', $meta_id, '=');
  $result = $query->execute()->fetchObject();
  return $result;
}

/**
 * Implements function get_tags().
 */
function context_meta_get_tags($action = '') {
  $query = db_select('context_meta', 'cm');
  $query->fields('cm');
  if ($action != 'all') {
    $query->condition('cm.status', 1, '=');
  }
  $result = $query->execute()->fetchAll();
  return $result;
}

/**
 * Implements function remove_tags().
 */
function context_meta_remove_tag($meta_id) {
  db_delete('context_meta')
    ->condition('meta_id', $meta_id)
    ->execute();
  drupal_set_message(t('Meta tag removed.'));
  drupal_goto('admin/config/context-meta/list');
}
