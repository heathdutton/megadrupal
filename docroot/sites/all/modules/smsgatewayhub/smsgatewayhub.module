<?php

/**
 * @file
 * Send SMS through SMS gateway hub (http://www.smsgatewayhub.com).
 */

/**
 * Implements hook_permission().
 */
function smsgatewayhub_permission() {
  return array(
    'administer smsgatewayhub' => array(
      'title' => t('Administer SMS gateway hub'),
      'description' => t('Administer SMS gateway hub'),
    ),
    'send sms' => array(
      'title' => t('Send SMS'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function smsgatewayhub_menu() {
  $items['admin/config/services/smsgatewayhub'] = array(
    'title' => 'SMS gateway hub',
    'description' => 'Configure SMS gateway hub',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smsgatewayhub_settings'),
    'access arguments' => array('administer smsgatewayhub'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'smsgatewayhub.admin.inc',
  );

  $items['admin/config/services/smsgatewayhub/settings'] = array(
    'title' => 'SMS gateway hub',
    'description' => 'Configure SMS gateway hub',
    'access arguments' => array('administer smsgatewayhub'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 10,
  );

  $items['admin/config/services/smsgatewayhub/test-sms'] = array(
    'title' => 'Send test SMS',
    'description' => 'Send test sms',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smsgatewayhub_send_test_sms'),
    'access arguments' => array('administer smsgatewayhub'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'smsgatewayhub.admin.inc',
    'weight' => 20,
  );

  $items['admin/config/services/smsgatewayhub/delivery-report'] = array(
    'title' => 'SMS delivery report',
    'description' => 'SMS delivery report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smsgatewayhub_delivery_report'),
    'access arguments' => array('administer smsgatewayhub'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'smsgatewayhub.admin.inc',
    'weight' => 30,
  );

  $items['admin/config/services/smsgatewayhub/credit-balance'] = array(
    'title' => 'Credit balance',
    'description' => 'SMS gateway hub credit balance',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smsgatewayhub_credit_balance'),
    'access arguments' => array('administer smsgatewayhub'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'smsgatewayhub.admin.inc',
    'weight' => 40,
  );

  return $items;
}

/**
 * Send SMS.
 *
 * @param string $numbers
 *   Single number or comma separated numbers.
 * @param string $message
 *   SMS message.
 * @param int $flash
 *   0 or 1 indicating whether this SMS should be sent as flash message.
 * @param int $transactional
 *   0 or 1 indicating whether this SMS should be sent as transactional message.
 * @param int $scheduled_time
 *   Timestamp indicating when the message will be sent. If 0 then scheduled
 *   time is disabled.
 *
 * @return string
 *   Unique message id or failed response.
 */
function smsgatewayhub_send_sms($numbers, $message, $flash = 0, $transactional = 0, $scheduled_time = 0) {
  // Perform alter operations.
  $alter = array(
    'numbers' => &$numbers,
    'message' => &$message,
    'flash' => &$flash,
    'transactional' => &$transactional,
    'scheduled_time' => &$scheduled_time,
  );
  drupal_alter('smsgatewayhub_sms', $alter);

  $data = array(
    'user' => variable_get('smsgatewayhub_username', ''),
    'pwd' => variable_get('smsgatewayhub_password', ''),
    'to' => smsgatewayhub_remove_spaces($numbers),
    'sid' => variable_get('smsgatewayhub_senderid', ''),
    'msg' => $message,
    'fl' => $flash,
  );

  if ($transactional) {
    $data['gwid'] = 2;
  }

  if ($scheduled_time) {
    $date = date('Y/m/d h:i:s A', $scheduled_time);
    $data['schedtime'] = $date;
  }

  // Message needs to be urlencoded, and this is handled by url().
  $url = url('http://api.smsgatewayhub.com/smsapi/pushsms.aspx', array('query' => $data));

  // Operations to be carried out before sending SMS.
  if (module_exists('rules')) {
    rules_invoke_event('smsgatewayhub_before_send_sms');
  }
  module_invoke_all('smsgatewayhub_before_send_sms', $numbers, $message, $flash, $transactional, $scheduled_time);

  $response = drupal_http_request($url);

  // Operations to be carried out after sending SMS.
  if (module_exists('rules')) {
    rules_invoke_event('smsgatewayhub_after_send_sms');
  }
  module_invoke_all('smsgatewayhub_after_send_sms', $numbers, $message, $flash, $transactional, $scheduled_time, $response);

  // Log response.
  if (variable_get('smsgatewayhub_log', 1)) {
    if (stripos($response->data, 'Failed') !== FALSE) {
      watchdog('smsgatewayhub', 'Failed to send SMS to @numbers. Response: @error_response',
        array(
          '@numbers' => $numbers,
          '@error_response' => $response->data,
        ), WATCHDOG_ERROR, NULL);
    }
    else {
      if ($transactional) {
        $log_transactional = ('Yes');
      }
      else {
        $log_transactional = t('No');
      }

      if ($flash) {
        $log_flash = ('Yes');
      }
      else {
        $log_flash = t('No');
      }

      if ($scheduled_time) {
        $log_scheduled_time = $date;
      }
      else {
        $log_scheduled_time = t('Disabled');
      }

      watchdog('smsgatewayhub', 'SMS successfully sent to @numbers. Transactional: @log_transactional. Flash: @log_flash. Scheduled time: @log_scheduled_time. Message id: @log_message_id',
        array(
          '@numbers' => $numbers,
          '@log_transactional' => $log_transactional,
          '@log_flash' => $log_flash,
          '@log_scheduled_time' => $log_scheduled_time,
          '@log_message_id' => $response->data,
        ), WATCHDOG_NOTICE, NULL);
    }
  }

  return $response->data;
}

/**
 * Removes spaces from string.
 *
 * This is required to validate the input passed in SMS Gateway hub API.
 *
 * @param string $string
 *   String containing spaces.
 *
 * @return string
 *   String without any spaces.
 */
function smsgatewayhub_remove_spaces($string) {
  // http://stackoverflow.com/a/2109339/1233922
  return preg_replace('/\s+/', '', $string);
}
