<?php
/**
 * @file
 * Install function for opac authorities module.
 */

/**
 * Implements hook_schema().
 */
function opac_authorities_schema() {
  $schema = array();

  $schema['opac_authority'] = array(
    'description' => 'The base table for opac_authorities.',
    'fields' => array(
      'authid' => array(
        'description' => 'The primary identifier for the authority.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'authtype' => array(
        'description' => 'The type (bundle) of this authority.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of the authority.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'server_id' => array(
        'description' => 'ILS id this authority come from.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'server_authid' => array(
        'description' => 'ILS id of the authority.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the authority was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the authority was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('authid'),
  );

  $schema['opac_authority_type'] = array(
    'description' => 'Stores information about all defined authority types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique authority type ID.',
      ),
      'authtype' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('authtype'),
    ),
  );

  $schema['opac_authorities_server_types'] = array(
    'description' => 'Content types for OPAC servers',
    'fields' => array(
      'serv_id' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'authtype' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'matching_field' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'value' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('serv_id', 'authtype'),
  );

  $schema['opac_authority_mapping'] = array(
    'description' => 'Stores opac authority fields mapping informations.',
    'fields' => array(
      'serv_id' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'authtype' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'authority_field_name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 32,
      ),
      'authority_field_label' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'mapped_with' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'null' => TRUE,
      ),
      'vocabulary_machine_name' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'vocabulary_name' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'term_field' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'term_field_label' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'nomatch_rule' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
    ),
    'foreign keys' => array(
      'opac_servers_serv_id' => array(
        'table' => 'opac_servers', 'columns' => array('serv_id' => 'serv_id'),
      ),
      'opac_authority_type_authtype' => array(
        'table' => 'opac_authority_type', 'columns' => array('authtype' => 'authtype'),
      ),
      'vocabulary_vid' => array(
        'table' => 'taxonomy_vocabulary', 'columns' => array('vid' => 'vid'),
      ),
    ),
    'primary key' => array('serv_id', 'authtype', 'authority_field_name'),
  );

  return $schema;
}

/**
 * Add opac_authorities_server_types and opac_authority_mapping tables.
 */
function opac_authorities_update_7100() {

  $tables['opac_authorities_server_types'] = array(
    'description' => 'Content types for OPAC servers',
    'fields' => array(
      'serv_id' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'authtype' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'matching_field' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'value' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('serv_id', 'authtype'),
  );

  $tables['opac_authority_mapping'] = array(
    'description' => 'Stores opac authority fields mapping informations.',
    'fields' => array(
      'serv_id' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'authtype' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'authority_field_name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 32,
      ),
      'authority_field_label' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'mapped_with' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'null' => TRUE,
      ),
      'vocabulary_machine_name' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'vocabulary_name' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'term_field' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'term_field_label' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
      'nomatch_rule' => array(
        'type' => 'varchar',
        'null' => TRUE,
        'length' => 255,
      ),
    ),
    'foreign keys' => array(
      'opac_servers_serv_id' => array(
        'table' => 'opac_servers', 'columns' => array('serv_id' => 'serv_id'),
      ),
      'opac_authority_type_authtype' => array(
        'table' => 'opac_authority_type', 'columns' => array('authtype' => 'authtype'),
      ),
      'vocabulary_vid' => array(
        'table' => 'taxonomy_vocabulary', 'columns' => array('vid' => 'vid'),
      ),
    ),
    'primary key' => array('serv_id', 'authtype', 'authority_field_name'),
  );

  $message = t('Nothing to do.');
  foreach ($tables as $name => $table) {
    if (!db_table_exists($name)) {
      db_create_table($name, $table);
      $message = t('Create tables opac_authorities_server_types and opac_authority_mapping.');
    }
  }
  return $message;
}

/**
 * Implements hook_field_schema().
 */
function opac_authorities_field_schema($field) {
  return array(
    'columns' => array(
      'authid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'authid' => array('authid'),
    ),
    'foreign keys' => array(
      'authid' => array(
        'table' => 'opac_authority',
        'columns' => array('authid' => 'authid'),
      ),
    ),
  );
}
