<?php
/**
 * @file
 * Code for the Anki UI feature.
 */

include_once 'anki_ui.features.inc';
/**
 * @file
 * Hook implementations and API functions for the Anki UI module.
 */

/**
 * Implements hook_menu().
 */
function anki_ui_menu() {
  $items = array();
  $items['anki'] = array(
    'title' => 'My flashcards',
    'access callback' => TRUE,
    'page callback' => 'anki_ui_anki_page',
    'file' => 'anki_ui.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  // This item will be replace by Views. We include it here to prevent a
  // redirect loop when accessing /anki if the View gets disabled somehow.
  $items['anki/%user'] = array(
    'title' => 'My flashcards',
    'access callback' => 'anki_ui_access',
    'access arguments' => array('view', 1),
    'page callback' => 'anki_ui_view_page',
    'file' => 'anki_ui.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['anki/%user/view'] = array(
    'title' => 'Browse',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -1,
  );
  $items['anki/%user/review'] = array(
    'title' => 'Review',
    'access callback' => 'anki_ui_access',
    'access arguments' => array('review', 1, 3),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('anki_ui_review_form', 1, 3),
    'file' => 'anki_ui.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['anki/%user/add/note'] = array(
    'title' => 'Add flashcard',
    'access callback' => 'anki_ui_access',
    'access arguments' => array('create', 1, 3),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('anki_ui_note_edit_form', 1, 3),
    'file' => 'anki_ui.pages.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function anki_ui_permission() {
  return array(
    'view own anki flashcards online' => array(
      'title' => t('View own Anki flashcards online'),
    ),
    'view any anki flashcards online' => array(
      'title' => t('View any Anki flashcards online'),
      'restrict access' => TRUE,
    ),
    'review own anki flashcards online' => array(
      'title' => t('Review own Anki flashcards online'),
    ),
    'review any anki flashcards online' => array(
      'title' => t('Review any Anki flashcards online'),
      'restrict access' => TRUE,
    ),
    'create own anki flashcards online' => array(
      'title' => t('Create own Anki flashcards online'),
    ),
    'create any anki flashcards online' => array(
      'title' => t('Create any Anki flashcards online'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function anki_ui_theme() {
  return array(
    'anki_ui_review_finished' => array(
      'variables' => array('review_count' => 0, 'new_count' => 0),
      'template' => 'anki-ui-review-finished',
      'path' => drupal_get_path('module', 'anki_ui') . '/templates',
    ),
  );
}

/**
 * Checks the current user is permitted to perform the operation.
 *
 * @todo: allow other modules to alter this for richer permissions.
 *
 * @param string $op
 *   The operation to perform, ex: view, review, create.
 * @param object $account
 *   The user who's collection we are attempting to access.
 * @param string $deck
 *   (Optional) The name of the deck we are attempting to review.
 *
 * @return boolean
 *   TRUE if the user has permission; otherwise FALSE.
 */
function anki_ui_access($op, $account, $deck = NULL) {
  global $user;

  $any_own = ($user->uid != $account->uid) ? 'any' : 'own';

  // Review is the only operation that doesn't require view permissions.
  if ($op == 'review') {
    return user_access("review $any_own anki flashcards online");
  }

  // First establish if the user has view permissions to this collection/deck.
  if (!user_access("view $any_own anki flashcards online")) {
    return FALSE;
  }

  switch ($op) {
    case 'view':
      // If were looking for 'view' then we're already set.
      return TRUE;

    case 'create':
      return user_access("create $any_own anki flashcards online");
  }

  return FALSE;
}

/**
 * Shows and logs an error.
 *
 * @param AnkiServerException $e
 *   The exception that was thrown.
 */
function anki_ui_show_error(AnkiServerException $e) {
  drupal_set_message(t('Error communicating with flashcard server. Sorry for the inconvenience! Please try again later.'), 'error');

  watchdog('anki', 'AnkiServerException: %message - !http_response', array(
    '%message' => $e->getMessage(),
    '!http_response' => print_r($e->getHttpResponse(), TRUE)
  ), WATCHDOG_ERROR);
}
