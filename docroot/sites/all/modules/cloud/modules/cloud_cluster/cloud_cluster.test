<?php

/**
 * @file
 * Test Cases for Cluster Module
 *
 * Copyright (c) 2010-2011 DOCOMO Innovations, Inc.
 *
 */

/**
 * Updated by yas   2011/02/03
 * Updated by yas   2010/12/14
 * Updated by yas   2010/12/09
 * Updated by jamir 2010/12/03
 * Updated by yas   2010/12/02
 * Created by yas   2010/12/01
 */

module_load_include('test', 'aws_cloud') ;

define('CLOUD_CLUSTER_REPEAT_COUNT', 3);

class ClusterTestCase extends AwsCloudTestCase {

  public static function getInfo() {
    return array(
      'name'        => 'Cluster'           ,
      'description' => 'Cluster Test Cases',
      'group'       => 'Cloud'             ,
    );
  }

  public function testCluster() {

    // Access to Design | Cluster
    $this->drupalGet('design/cluster');
    $this->assertResponse(200, t('HTTP 200: Design | Cluster'));
    $this->assertText(  t('- Refresh Page -'), t('Found: - Refresh Page -'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
    
    $clusterName = array();
    $clusterDesc = array();

    for ($i = 0; $i < CLOUD_CLUSTER_REPEAT_COUNT; $i++) { // 3 times

      // Input Fields
      $clusterName[] = t('#@number: @date - SimpleTest Cluster Name'       , array(
                          '@number' => $i + 1,
                          '@date'   => date('D M j G:i T Y')));
      $clusterDesc[] = t('#@number: @date - SimpleTest Cluster Description', array(
                          '@number' => $i + 1,
                          '@date'   => date('D M j G:i T Y')));
         
      $edit = array(
        'nickname_text'    => $clusterName[$i],
        'description_text' => $clusterDesc[$i],
      );

      $this->drupalPost('design/cluster/create', $edit, t('Next'));
      $this->assertResponse(200, t('HTTP 200: New Cluster Form | Add'));
      $this->assertText(t('Cluster successfully created.'),
                        t('Confirm Message:') . t('Cluster successfully created.'));
      $this->assertText($clusterName[$i], t('Confirm Item on Listing Page: @cluster_name', array('@cluster_name' => $clusterName[$i])));
      $this->assertNoText(t('Notice'), t('Make sure w/o Notice'));
      
      for ( $j = 0; $j < $i + 1; $j++) {

        $cluster_id = $j + 1 ;
        $this->drupalGet('design/cluster/describe/info/' . $cluster_id );
        $this->assertResponse(200, t('HTTP 200: Display Cluster Detail Page: @number', array('@number' => $cluster_id)));
        $this->assertText($clusterDesc[$j], t('Confirm Cluster Description on Infor Page: @cluster_desc', array('@cluster_desc' => $clusterDesc[$j])));
        $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
        $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
      }
    }
    
    //filtering cluster item
    $filter = array(
        'filter'    => 'Test',
        'operation' => 0,
      );
      
    $this->drupalPost('design/cluster', $filter, t('Apply'));
    $this->assertResponse(200, t('HTTP 200: Search Listings | Filter'));
    $cluster_id = CLOUD_CLUSTER_REPEAT_COUNT - 1 ;
    $this->assertText($clusterName[$cluster_id], t('Confirm Item:') . $clusterName[$cluster_id ]);
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
    ///////end
  }

  
  public function testClusterListServers() {

    $edit = array(
      'nickname_text'    => 'Cluster_List_Servers',
      'description_text' => 'Cluster_description' ,
    );

    $this->drupalPost('design/cluster/create', $edit, t('Next'));
    $this->assertResponse(200, t('HTTP 200: New Cluster Form | Add'));
    $this->assertText(t('Cluster successfully created.'), t('Confirm Message:') . t('Cluster successfully created.'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));  

    // Access to Cluster | Servers
    $this->drupalGet('design/cluster/describe/servers/1');
    $this->assertResponse(200, t('HTTP 200: Cluster | Servers'));
    $this->assertText(t('Instances'), t('Found: Instances'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
  }

  
  public function testClusterModify() {

    $edit = array(
      'nickname_text'    => 'Name testClusterModify'    ,
      'description_text' => 'description_ClusterModify ',
    );

    $this->drupalPost('design/cluster/create', $edit, t('Next'));
    $this->assertResponse(200, t('HTTP 200: New Cluster Form | Add'));
    $this->assertText(  t('Cluster successfully created.'), t('Confirm Message:') . t('Cluster successfully created.'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));    

    // Cluster | Update
    $this->drupalGet('design/cluster/describe/servers/1');
    $this->assertResponse(200, t('HTTP 200: Cluster | Instances'));
    $this->assertText(  t('Instances'), t('Found: Instances'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));    

    $this->drupalGet('design/cluster/describe/info/1' );
    $this->assertResponse(200, t('HTTP 200: Cluster | Servers'));
    $this->assertText(  t('Nickname'), t('Found: Nickname'));
    $this->assertNoText(t('Notice'), t('Make sure w/o Notice'));
    
    $modify_params = array(
      'nickname_text'    => 'New_Nickname'   ,
      'description_text' => 'New_Description',
      'cluster_id'       => '1'              ,
    );

    $this->drupalPost('design/cluster/describe/info/1', $modify_params, t('Update'));
    $this->assertResponse(200, t('HTTP 200: Cluster | Update'));
    $this->assertText(t('Cluster has been updated'), t('Cluster has been updated'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
  }


  public function testClusterDelete() {

    // Cluster | Create
    $edit = array(
      'nickname_text'    => 'Name testClusterDelete',
      'description_text' => 'description_ClusterDelete',
    );

    $this->drupalPost('design/cluster/create', $edit, t('Next'));
    $this->assertResponse(200, t('HTTP 200: New Cluster Form | Add'));
    $this->assertText(t('Cluster successfully created.'), t('Confirm Message:') . t('Cluster successfully created.'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
        
    // Cluster | Delete
    $this->drupalGet('design/cluster/delete/1' );
    $this->assertResponse(200, t('HTTP 200: Cluster | Delete'));
    $this->assertText(t('Cluster deleted successfully'), t('Found: Servers'));
    $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
    $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
  }
}