<?php

/**
 * @file
 * Provides a set of trigger and action for cloud management
 * Works with Cloud module.
 *
 * Copyright (c) 2010-2011 DOCOMO Innovations, Inc.
 *
 */

module_load_include('inc', 'cloud'       , 'cloud_constants'       );
module_load_include('inc', 'cloud_alerts', 'cloud_alerts_constants');
module_load_include('inc', 'cloud_alerts'                          );
module_load_include('inc', 'cloud_alerts', 'cloud_alerts_db'       );

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function cloud_alerts_get_options() {

  $alerts_escalations       = array(
    'critical' => t('critical'),
    'default' => t('default'),
    'scale in' => t('scale in'),
    'scale out' => t('scale out'),
    'send e-mail' => t('send e-mail'),
    'warning' => t('warning'),
  );
  $alerts_metric_options    = array(
    'cpu' => t('CPU'),
    'memory' => t('Memory/RAM'),
    'traffic' => t('Traffic'),
    'disk' => t('Disk'),
    'users' => t('Users/Users'),
  );
  $alerts_variable_options  = array(
    'value' => t('value'),
    'state' => t('state'),
    'count' => t('count'),
    'status' => t('status'),
    'ping' => t('ping'),
  );
  $alerts_condition_options = array(
    '<' => '<',
    '>' => '>',
    '=' => '=',
    '!=' => '!=',
  );

  asort($alerts_escalations       );
  asort($alerts_metric_options    );
  asort($alerts_variable_options  );
  asort($alerts_condition_options );

  $alerts_options = array(
    'ALERTS_ESCALATIONS' => $alerts_escalations       ,
    'ALERTS_METRIC_OPTIONS' => $alerts_metric_options    ,
    'ALERTS_VARIABLE_OPTIONS' => $alerts_variable_options  ,
    'ALERTS_CONDITION_OPTIONS' => $alerts_condition_options,
  );

  return $alerts_options;
}

/**
 * Implements hook_help().
 */
function cloud_alerts_help($section) {

  switch ($section) {

    case 'admin/help#':
      $output = '<p>' . t('The cloud module creates a user interface for users to manage clouds. Users can Create Instances,   Describe Instances etc..') . '</p>';
      return $output;

    case 'admin/content/comment':
    case 'admin/content/comment/create':
      return '<p>' . t("Below is a list of the latest comments posted to your site. Click on a subject to see the comment,   the author's name to edit the author's user information ,   'edit' to modify the text,   and 'delete' to remove their submission.") . '</p>';

    case 'admin/content/comment/approval':
      return '<p>' . t("Below is a list of the comments posted to your site that need approval. To approve a comment,   click on 'edit' and then change its 'moderation status' to Approved. Click on a subject to see the comment,   the author's name to edit the author's user information,   'edit' to modify the text,   and 'delete' to remove their submission.") . '</p>';

    case 'admin/content/comment/settings':
      return '<p>' . t("Comments can be attached to any node,   and their settings are below. The display comes in two types: a 'flat list' where everything is flush to the left side,   and comments come in chronological order,   and a 'threaded list' where replies to other comments are placed immediately below and slightly indented,   forming an outline. They also come in two styles: 'expanded',   where you see both the title and the contents,   and 'collapsed' where you only see the title. Preview comment forces a user to look at their comment by clicking on a 'Preview' button before they can actually add the comment.") . '</p>';
  }
}

/**
 * Implements hook_menu().
 */
function cloud_alerts_menu() {

  $items = array();

  $access = user_access('access design');

  // alerts Menu

  $items['design/alerts'] = array(
    'title' => 'Alerts',
    'description' => 'Get a quick synopsis of Alert Specifications.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloud_alerts_list'),
    'weight' => 15,
    'access arguments' => array('list server templates'),
    'file' => '',
  );

  $items['design/alerts/getdata'] = array(
    'path' => 'design/alerts/getdata',
    'title' => 'alerts Get data',
    'page callback' => '_cloud_alerts_getdata',
    'page arguments' => array('cloud_alerts'),
    'access arguments' => array('list alerts'),
    'type' => MENU_CALLBACK,
    'file' => '',
  );

  $items['design/alerts/%/view'] = array(
    //'path'             => '',
    'title' => 'Alert Info',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloud_alerts_view', 2),
    //'weight'           => -1,
    'access arguments' => array('list alerts'),
    'type' => MENU_CALLBACK,
    'file' => '',
  );

  $items['design/alerts/create'] = array(
    //'path'           => '',
    'title' => 'Add/Edit Alert',
    'description' => 'Get a quick synopsis of Alert Specifications.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloud_alerts_new'),
    //'weight'           => -1,
    'access arguments' => array('create alert'),
    'type' => MENU_CALLBACK,
    'file' => '',
  );

  $items['design/alerts/%/edit'] = array(
    //'path'             => '',
    'title' => 'Add/Edit Alert',
    'description' => 'Get a quick synopsis of Alert Specifications.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloud_alerts_new', 2),
    //'weight'           => -1,
    'access arguments' => array('create alert'),
    'type' => MENU_CALLBACK,
    'file' => '',
  );


  $items['design/alerts/%/delete'] = array(
    //'path'             => '',
    'title' => 'Delete',
    'page callback' => 'cloud_alerts_delete',
    'page arguments' => array(2),
    'access arguments' => array('delete alert'),
    'type' => MENU_CALLBACK,
    'file' => '',
  );

  // End of alerts Menu

  return $items;
}


/**
 * Implements hook_permission().
 */
function cloud_alerts_permission() {

  return array(
    'list alerts' => array(
      'title' => t('list alerts'  ),
      'description' => t('TODO Add a description for \'list alerts\''),
    ),
    'create alert' => array(
      'title' => t('create alert'),
      'description' => t('TODO Add a description for \'create alert\''),
    ),
    'view alerts' => array(
      'title' => t('view alerts'  ),
      'description' => t('TODO Add a description for \'view alerts\''),
    ),
    'edit alert' => array(
      'title' => t('edit alert'),
      'description' => t('TODO Add a description for \'edit alert\''),
    ),
    'delete alert' => array(
      'title' => t('delete alert'),
      'description' => t('TODO Add a description for \'delete alert\''),
    ),
  );
}


/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function cloud_alerts_theme() {

  return array(
    'cloud_alerts_list' => array(
      'render element' => 'form',
      'file' => 'cloud_alerts.inc',
    ),
    'cloud_alerts_view' => array(
      'render element' => 'form',
      'file' => 'cloud_alerts.inc',
    ),
    'cloud_alerts_new' => array(
      'render element' => 'form',
      'file' => 'cloud_alerts.inc',
    ),
  );
}
