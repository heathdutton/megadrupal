<?php

/**
 * @file
 * Test Cases for Activity Audit Module.
 *
 * Copyright (c) 2010-2011 DOCOMO Innovations, Inc.
 *
 */

/**
 * Updated by yas 2010/12/19
 * Updated by yas 2010/12/14
 * Updated by yas 2010/12/01
 * Updated by yas 2010/11/29
 * Created by yas 2010/11/28
 */

module_load_include('test', 'aws_cloud') ;

class ActivityAuditTestCase extends AwsCloudTestCase {
  
  public static function getInfo() {
    return array(
      'name'        => 'Activity Audit'          ,
      'description' => 'Activity Audit Test Case',
      'group'       => 'Cloud'                   ,
    );
  }
  
  public function testActivityAuditList() {
    $clouds = $this->getClouds();
    foreach ($clouds as $cloud) {
      $this->refreshInstances($cloud);

      // Access to Report Menu
      $this->drupalGet('reports');
      $this->assertResponse(200, t('HTTP 200: Report Menu'));
  
      // List Activity Audit
      $this->drupalGet('reports/activity_audit/report');
      $this->assertResponse(200, t('HTTP 200: Report | Activity Audit'));
  
      $this->assertText(t('Updated: Instances'),
                        t('Confirm Message:') . t('Updated: Instances'));
      $this->assertText(t('Updated: SSH Key(s)'),
                        t('Confirm Message:') . t('Updated: SSH Key(s)'));
      $this->assertText(t('Updated: User Key(s)'),
                        t('Confirm Message:') . t('Updated: User Key(s)'));
      $this->assertText(t('Updated: Security Group(s)'),
                        t('Confirm Message:') . t('Updated: Security Group(s)'));
      $this->assertText(t('Updated: Availability Zone(s)'),
                        t('Confirm Message:') . t('Updated: Availability Zone(s)'));
      $this->assertText(t('Updated: Snapshot(s)'),
                        t('Confirm Message:') . t('Updated: Snapshot(s)'));
      $this->assertText(t('Updated: Elastic IP(s)'),
                        t('Confirm Message:') . t('Updated: Elastic IP(s)'));
      $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
      $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
      
      //filtering audit item
      $filter = array(
          'filter'    => 'Instances',
          'operation' => 'message',
        );
        
      $this->drupalPost('reports/activity_audit/report', $filter, t('Apply'));
      $this->assertResponse(200, t('HTTP 200: Search Listings | Filter'));
      $this->assertText('Updated: Instances', t('Confirm Item:') . 'Updated: Instances');
      $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
      $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
    }
    ///////end
  }


  public function testActivityAuditDelete() {
    $clouds = $this->getClouds();        
    foreach ($clouds as $cloud) {
      $this->refreshInstances($cloud);

      // Access to Report Menu
      $this->drupalGet('reports');
      $this->assertResponse(200, t('HTTP 200: Report Menu'));
      $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
      $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
          
      // Delete an Activity Audit Item
      $this->drupalGet('reports/activity_audit/1/delete', array(
                       'id' => 1
                      ));
      $this->assertResponse(200, t('HTTP 200: Report | Activity Audit'));
      $this->assertNoText(t('Notice' ), t('Make sure w/o Notice'  ));
      $this->assertNoText(t('warning'), t('Make sure w/o Warnings'));
    
    }
  }
}
