<?php

/**
 * @file
 * Provides input parameter user interface for Server Templates and Cluster module.
 * Works with Cloud module.
 *
 * Copyright (c) 2010-2011 DOCOMO Innovations, Inc.
 *
 */

module_load_include('inc', 'cloud'       , 'cloud_constants'       );
module_load_include('inc', 'cloud_inputs', 'cloud_inputs_constants');
module_load_include('inc', 'cloud_inputs', 'cloud_inputs'          );
module_load_include('inc', 'cloud_inputs', 'cloud_inputs_db'       );

function _cloud_inputs_get_options() {

  $_ENV_VARIABLES_OPTIONS   = array(
    'instance_nickname' => t('instance_nickname'  ),
    'image_id' => t('image_id'           ),
    'instance_state_code' => t('instance_state_code'),
    'instance_state_name' => t('instance_state_name'),
    'private_dns_name' => t('private_dns_name'   ),
    'dns_name' => t('dns_name'           ),
    'key_name' => t('key_name'           ),
    'ami_launch_index' => t('ami_launch_index'   ),
    'product_codes' => t('product_codes'      ),
    'instance_type' => t('instance_type'      ),
    'launch_time' => t('launch_time'        ),
    'placement' => t('placement'          ),
    'kernel_id' => t('kernel_id'          ),
    'ramdisk_id' => t('ramdisk_id'         ),
    'platform' => t('platform'           ),
    'monitoring' => t('monitoring'         ),
    'owner_id' => t('owner_id'           ),
  );

  asort($_ENV_VARIABLES_OPTIONS);

  $_CLOUD_INPUTS_TYPE_OPTIONS  = array('text' => t('Text'));
  asort($_CLOUD_INPUTS_TYPE_OPTIONS);

  $inputs_options = array(
    'CLOUD_INPUTS_TYPE_OPTIONS' => $_CLOUD_INPUTS_TYPE_OPTIONS,
    'ENV_VARIABLES_OPTIONS' => $_ENV_VARIABLES_OPTIONS,
  );

  return $inputs_options;
}


/**
 * Implements hook_help().
 */
function cloud_inputs_help($section) {
  switch ($section) {
    case 'admin/help#':
      $output = '<p>' . t('The cloud module creates a user interface for users to manage clouds. Users can Create Instances,  Describe Instances etc..') . '</p>';
      return $output;
    case 'admin/content/comment':
    case 'admin/content/comment/create':
      return '<p>' . t("Below is a list of the latest comments posted to your site. Click on a subject to see the comment,  the author's name to edit the author's user information ,  'edit' to modify the text,  and 'delete' to remove their submission.") . '</p>';
    case 'admin/content/comment/approval':
      return '<p>' . t("Below is a list of the comments posted to your site that need approval. To approve a comment,  click on 'edit' and then change its 'moderation status' to Approved. Click on a subject to see the comment,  the author's name to edit the author's user information,  'edit' to edit the text,  and 'delete' to remove their submission.") . '</p>';
    case 'admin/content/comment/settings':
      return '<p>' . t("Comments can be attached to any node,  and their settings are below. The display comes in two types: a 'flat list' where everything is flush to the left side,  and comments come in chronological order,  and a 'threaded list' where replies to other comments are placed immediately below and slightly indented,  forming an outline. They also come in two styles: 'expanded',  where you see both the title and the contents,  and 'collapsed' where you only see the title. Preview comment forces a user to look at their comment by clicking on a 'Preview' button before they can actually add the comment.") . '</p>';
  }
}


/**
 * Implements hook_menu().
 */
function cloud_inputs_menu() {
  $items = array();
  $items['design/%/%/inputs'] = array(
    'title' => 'Inputs',
    'description' => 'Get inputs variables.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloud_inputs_edit', 1, 2),
    'access arguments' => array('list inputs'),
    'file' => '',
    'type' => MENU_CALLBACK,
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function cloud_inputs_permission() {

  return array(
    'list inputs' => array(
      'title' => t('list inputs'   ),
      'description' => t('TODO Add a description for \'list inputs\''),
    ),
    'edit inputs' => array(
      'title' => t('edit inputs'),
      'description' => t('TODO Add a description for \'edit inputs\''),
    ),
  );
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function cloud_inputs_theme() {
  return array(
    'cloud_inputs_edit' => array(
      'render element' => 'form',
      'file' => 'cloud_inputs.inc',
    ),
  );
}
