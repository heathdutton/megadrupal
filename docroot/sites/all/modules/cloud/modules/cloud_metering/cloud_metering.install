<?php

/**
 * @file
 * Install file for the Cloud Metering module
 * Works with Cloud Metering module
 *
 * Copyright (c) 2011 DOCOMO Innovations, Inc.
 *
 */

module_load_include('inc', 'cloud_metering', 'cloud_metering_constants');

/**
 * Implementation of hook_schema().
 */
function cloud_metering_schema() {

  $schema = array();

  $schema[CLOUD_METERING_MAILS_TABLE] = array(
    'description' => t('Cloud Metering Mails Data'),
    'fields' => array(
      'mid' => array(
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'cloud_name' => array(
        'type' => 'varchar',
        'length' => 64  ,
        'not null' => FALSE,
      ),
      'instance_id' => array(
        'type' => 'varchar',
        'length' => 64  ,
        'not null' => FALSE,
      ),
      'uid' => array(
        'type' => 'int'    ,
        'default' => 0,
      ),
      'gid' => array(
        'type' => 'int'    ,
        'default' => 0,
      ),
      'timestamp' => array(
        'type' => 'int'    ,
        'not null' => TRUE,
      ),
      'token' => array(
        'type' => 'varchar',
        'not null' => TRUE  ,
        'length' => 64,
      ),
      'token_used' => array(
        'type' => 'int'    ,
        'size' => 'tiny',
        'default' => 0,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 32    ,
        'default' => 'threshold',
      ),
    ),
    'primary key' => array('mid'),
  );

  $schema[CLOUD_METERING_USER_BUDGET_TABLE] = array(
    'description' => t('Cloud Users Budget'),
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'auto_increment' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'grid' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'threshold' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'budget' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'precision' => 10,
        'scale' => 2,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema[CLOUD_METERING_BUDGET_GROUP_TABLE] = array(
    'description' => t('Cloud Users Budget'),
    'fields' => array(
      'gid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'auto_increment' => TRUE,
      ),
      'user_data' => array('type' => 'text'),
      'grid' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'threshold' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'group_budget' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'precision' => 10,
        'scale' => 2,
      ),
    ),
    'primary key' => array('gid'),
  );

  $schema[CLOUD_METERING_INSTANCES_BUDGET_TABLE] = array(
    'description' => t('Cloud Instances Initial Budget'),
    'fields' => array(
      'cloud_context' => array(
        'type' => 'varchar',
        'length' => 100,
      ),
      'instance_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'initial_budget' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
      ),
      'cost_threshold' => array(
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
      'terminate' => array(
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('cloud_context', 'instance_id'),
  );

  $schema[CLOUD_METERING_TEMPLATES_BUDGET_TABLE] = array(
    'description' => t('Server template budget'),
    'fields' => array(
      'template_id' => array('type' => 'int'),
      'initial_budget' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
      ),
      'cost_threshold' => array(
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('template_id'),
  );

  $schema[CLOUD_METERING_QUEUE_TABLE] = array(
    'description' => t('Cloud Metering Queue Data'),
    'fields' => array(
      'qid' => array(
        'type' => 'serial'  ,
        'not null' => TRUE,
      ),
      'task' => array(
        'type' => 'varchar',
        'length' => 32  ,
        'not null' => TRUE,
      ),
      'uuid' => array(
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'updated' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 32    ,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int'     ,
        'not null' => TRUE,
      ),
      'data' => array('type' => 'text'    ),
    ),
    'primary key' => array('qid'),
  );

  return $schema;
}

/**
 * Update token field to 64 characters
 */
function cloud_metering_update_7100() {
  db_change_field(CLOUD_METERING_MAILS_TABLE, 'token', 'token', array('type' => 'varchar', 'not null' => TRUE, 'length' => 64));
}

/**
 * Update created and updated columns in cloud_metering_queue_table.  Change from text to int.   
 */
function cloud_metering_update_7101() {
  db_change_field(CLOUD_METERING_QUEUE_TABLE, 'created', 'created', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE));
  db_change_field(CLOUD_METERING_QUEUE_TABLE, 'updated', 'updated', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE));
}

/**
 * Add terminate flag to the instance table. To be used to determine if 
 * an instance should be terminated when the budget is passed.
 */
function cloud_metering_update_7102() {
  $field = array(
    'type' => 'int',
    'size' => 'normal',
    'not null' => TRUE,
    'default' => 0,
  );
  
  db_add_field(CLOUD_METERING_INSTANCES_BUDGET_TABLE, 'terminate', $field);
}
