<?php

/**
 * @file
 * Install for aws_cloud.module
 *
 * Copyright (c) 2010-2011 DOCOMO Innovations, Inc.
 *
 */

module_load_include('inc', 'aws_cloud', 'includes/aws_cloud_constants');
module_load_include('inc', 'aws_cloud', 'includes/aws_cloud_db');
module_load_include('inc', 'aws_cloud', 'includes/aws_cloud');


/**
 * Implements hook_requirements()
 */
function aws_cloud_requirements($phase) {
  $t = get_t();
  $requirements = array();
  if ($phase == 'runtime') {
    $info = libraries_load('awssdk');
    if (!$info['loaded']) {
      $requirements['awssdk'] = array(
        'severity' => REQUIREMENT_ERROR,
        'title' => $t('AWSSDK'),
        'value' => $t('Failed to load the AWSSDK'),
        'description' => $t('Please make sure the AWSSDK library is installed in the libraries directory. <a href="http://aws.amazon.com/sdkforphp/">Download the AWSSDK from http://aws.amazon.com/sdkforphp/</a>.  Install the sdk in the libraries directory as awssdk.'),
      );
    }
    else {
      // check compatibility
      include $info['library path'] . '/_compatibility_test/sdk_compatibility.inc.php';
      if ($compatiblity == REQUIREMENTS_NOT_MET) {
        $requirements['awssdk']['severity'] = REQUIREMENT_ERROR;
        $requirements['awssdk']['description'] = $t('Your PHP environment does not support the minimum requirements for the AWS SDK for PHP.');
      }
    }
  }
  return $requirements;
}

/**
 * Implementation of hook_install().
 */
function aws_cloud_install() {
}

/**
 * Implementation of hook_uninstall().
 */
function aws_cloud_uninstall() {
  drupal_load('module', 'cloud');
  
  $clouds = cloud_get_db_results("SELECT cloud_name from {" . CLOUD_CLOUDS_TABLE . "} where module = 'aws_cloud'");
  foreach ($clouds as $cloud) {
    
    variable_del($cloud['cloud_name'] . '_menu_path');

    aws_cloud_delete_all($cloud['cloud_name']);
    
    $num_deleted = db_delete(CLOUD_CLOUDS_TABLE)
    ->condition('cloud_name', array($cloud['cloud_name']))
    ->execute();
    $num_deleted = db_delete('cloud_server_templates')
    ->condition('cloud_type', array($cloud['cloud_name']))
    ->execute();

    if (module_exists('cloud_pricing')) {
    cloud_pricing_delete_data($cloud['cloud_name']);
    }
  }
  menu_rebuild();
}

/**
 * Implementation of hook_schema().
 */
function aws_cloud_schema() {
  // Table column names
  $aws_cloud_instances_table = aws_cloud_get_table_info(AWS_CLOUD_INSTANCES_TABLE);
  $aws_cloud_instances_lock_table = aws_cloud_get_table_info(AWS_CLOUD_INSTANCES_LOCK_TABLE);
  $aws_cloud_images_table = aws_cloud_get_table_info(AWS_CLOUD_IMAGES_TABLE);
  $aws_cloud_ssh_keys_table = aws_cloud_get_table_info(AWS_CLOUD_SSH_KEYS_TABLE);
  $aws_cloud_security_groups_table = aws_cloud_get_table_info(AWS_CLOUD_SECURITY_GROUPS_TABLE);
  $aws_cloud_security_groups_details_table = aws_cloud_get_table_info(AWS_CLOUD_SECURITY_GROUPS_DETAILS_TABLE);
  $aws_cloud_zone_table = aws_cloud_get_table_info(AWS_CLOUD_ZONE_TABLE);
  $aws_cloud_elastic_ip_table = aws_cloud_get_table_info(AWS_CLOUD_ELASTIC_IP_TABLE);
  $aws_cloud_snapshot_table = aws_cloud_get_table_info(AWS_CLOUD_SNAPSHOTS_TABLE);
  $aws_cloud_volumes_table = aws_cloud_get_table_info(AWS_CLOUD_EBS_VOLUMES_TABLE);
  $aws_cloud_volumes_device_opt_table = aws_cloud_get_table_info(AWS_CLOUD_VOLUMES_DEVICE_OPTIONS_TABLE);
  $aws_cloud_user_keys_table  = aws_cloud_get_table_info(AWS_CLOUD_USER_KEYS_TABLE);
  $aws_cloud_register_image_table = aws_cloud_get_table_info(AWS_CLOUD_REGISTER_IMAGE_STATUS_TABLE);
  
  $schema = array();
  $schema[AWS_CLOUD_DETAILS_TABLE] = array(
    'fields' => array(
      'cloud_name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
      ),
      'api_version' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 10,
      ),
      'host_uri' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 256,
      ),
      'aws_access_key' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 32,
      ),
      'aws_secret_key' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
      ),
      'user_id' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 32,
      ),
      'image_upload_url' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
      ),
      'image_register_url' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
      ),
      'certificate' => array(
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cloud_name'),
  );
  $schema[AWS_CLOUD_BUNDLE_INSTANCES_TABLE] = array(
    'description' => t('Instances Bundle information'),
    'fields' => array(
      'bundle_id' => array(
        'type' => 'serial', 
        'unsigned' => TRUE, 
        'not null' => TRUE,
      ),
      'cloud_context' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'instance_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'nickname' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'bucketname' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'foldername' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'volume_size' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('bundle_id'),
  );
  $schema[$aws_cloud_instances_table] = array(
    'description' => t('EC2 Instances'),
    'fields' => array(
      'instance_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'instance_nickname' => array(
        'type' => 'varchar',
        'length' => 256,
      ),
      'image_id' => array(
        'type' => 'varchar',
        'length' => 64
      ),
      'kernel_id' => array(
        'type' => 'varchar',
        'length' => 16,
      ),
      'ramdisk_id' => array(
        'type' => 'varchar',
        'length' => 16,
      ),
      'owner_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'group_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'reservation_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'platform' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'instance_type' => array(
        'type' => 'varchar',
        'length' => 16,
      ),
      'placement' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'instance_state_code' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'private_dns_name' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'dns_name' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'key_name' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'instance_state_name' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'reason' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'ami_launch_index' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'product_codes' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'monitoring' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'launch_time' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('instance_id'),
  );
  
  $schema[$aws_cloud_images_table] = array(
    'description' => t('EC2 Images'),
    'fields' => array(
      'image_id' => array(
        'type' => 'varchar',
        'length' => 64
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'image_nickname' => array(
        'type' => 'varchar',
        'length' => 256,
      ),
      'architecture' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'kernel_id' => array(
        'type' => 'varchar',
        'length' => 16,
      ),
      'ramdisk_id' => array(
        'type' => 'varchar',
        'length' => 16,
      ),
      'imageowner_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'image_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'region' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'image_location' => array(
        'type' => 'varchar',
        'length' => 256,
      ),
      'image_state' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'is_public' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'root_device_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('image_id'),
  );
  
  $schema[$aws_cloud_volumes_table] = array(
    'description' => t('Volume'),
    'fields' => array(
      'volume_id' => array(
        'type' => 'varchar',
        'length' => 64
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'nickname' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'snapshot_id' => array(
        'type' => 'varchar',
        'length' => 64
      ),
      'instance_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'vol_size' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'vol_zone' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'device' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'created' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'attached' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('volume_id'),
  );
  
  $schema[$aws_cloud_elastic_ip_table] = array(
    'description' => t('Elastic IP'),
    'fields' => array(
      'cloud_type' => array(
          'type' => 'varchar',
          'length' => 64,
      ),
      'public_ip' => array(
          'type' => 'varchar',
          'length' => 16,
      ),
      'instance_id' => array(
          'type' => 'varchar',
          'length' => 64,
      ),
      'public_ip_name' => array(
          'type' => 'varchar',
          'length' => 128,
      ),
    ),
    'primary key' => array('public_ip'),
  );
  
  $schema[$aws_cloud_instances_lock_table] = array(
    'description' => t('Instance Information'),
    'fields' => array(
      'instance_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'monitor' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'script_status' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'is_locked' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'ssh_user_name' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('instance_id'),
  );
  
  $schema[$aws_cloud_register_image_table] = array(
    'description' => t('EC2 Instance Types'),
    'fields' => array(
      'id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'image_id' => array(
        'type' => 'varchar',
        'length' => 64
      ),
      'owner' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('id'),
  );
  
  $schema[$aws_cloud_security_groups_table] = array(
    'description' => t('EC2 Security Groups'),
    'fields' => array(
      'owner_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'group_name' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'group_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'group_description' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'permissions' => array(
        'type' => 'varchar',
        'length' => 1280,
      ),
    ),
    'primary key' => array('owner_id', 'cloud_type', 'group_name'),
  );
  
  $schema[$aws_cloud_security_groups_details_table] = array(
    'description' => t('EC2 Security Groups Details Table'),
    'fields' => array(
      'group_name' => array(
      'type' => 'varchar',
      'length' => 64,
      ),
      'cloud_type' => array(
      'type' => 'varchar',
      'length' => 64,
      ),
      'ip_protocol' => array(
      'type' => 'varchar',
      'length' => 16,
      ),
      'from_port' => array(
      'type' => 'varchar',
      'length' => 16,
      ),
      'to_port' => array(
      'type' => 'varchar',
      'length' => 16,
      ),
      'user_id' => array(
      'type' => 'varchar',
      'length' => 64,
      ),
      'tgt_group_name' => array(
      'type' => 'varchar',
      'length' => 64,
      ),
      'cidr_ip' => array(
      'type' => 'varchar',
      'length' => 64,
      ),
    ),
  );
  
  $schema[$aws_cloud_snapshot_table] = array(
    'description' => t('EC2 Snapshot'),
    'fields' => array(
      'snapshot_id' => array(
        'type' => 'varchar',
        'length' => 64
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'nickname' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'volume_id' => array(
        'type' => 'varchar',
        'length' => 64
      ),
      'owner_id' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'volume_size' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'progress' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => 256,
      ),
      'created' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('snapshot_id'),
  );
  
  $schema[$aws_cloud_ssh_keys_table] = array(
    'description' => t('EC2 SSH Keys'),
    'fields' => array(
      'key_name' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'fingerprint' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'key_material' => array(
        'type' => 'varchar',
        'length' => 4096,
      ),
    ),
    'primary key' => array('key_name', 'cloud_type'),
  );
  
  $schema[$aws_cloud_user_keys_table] = array(
    'description' => t('User Keys'),
    'fields' => array(
      'key_name' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'owner' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('key_name', 'cloud_type'),
  );
  
  $schema[$aws_cloud_zone_table] = array(
    'description' => t('Availability Zone'),
    'fields' => array(
      'region' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'zone_name' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'cloud_type' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'zone_state' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('zone_name', 'cloud_type'),
  );
  
  return $schema;
}

/**
 * Alter host_uri field length from 64 to 256
 */
function aws_cloud_update_7100() {
  $new_field = array(
    'type' => 'varchar',
    'not null' => TRUE,
    'length' => 256,
  );
  db_change_field(AWS_CLOUD_DETAILS_TABLE, 'host_uri', 'host_uri', $new_field);
}

/**
 * Alter instance_id column from 16 to 64 in instance, volume, elastic_ip, instances_lock
 */
function aws_cloud_update_7101() {
  $aws_cloud_instances_table = aws_cloud_get_table_info(AWS_CLOUD_INSTANCES_TABLE);
  $aws_cloud_instances_lock_table = aws_cloud_get_table_info(AWS_CLOUD_INSTANCES_LOCK_TABLE);
  $aws_cloud_elastic_ip_table = aws_cloud_get_table_info(AWS_CLOUD_ELASTIC_IP_TABLE);
  $aws_cloud_volumes_table = aws_cloud_get_table_info(AWS_CLOUD_EBS_VOLUMES_TABLE);
  $aws_cloud_security_groups_table = aws_cloud_get_table_info(AWS_CLOUD_SECURITY_GROUPS_TABLE);
  $aws_cloud_snapshot_table = aws_cloud_get_table_info(AWS_CLOUD_SNAPSHOTS_TABLE);
  
  $new_field = array(
    'type' => 'varchar',
    'length' => 64,
  );
  
  db_change_field($aws_cloud_instances_table, 'instance_id', 'instance_id', $new_field);
  db_change_field($aws_cloud_instances_lock_table, 'instance_id', 'instance_id', $new_field);
  db_change_field($aws_cloud_elastic_ip_table, 'instance_id', 'instance_id', $new_field);
  db_change_field($aws_cloud_volumes_table, 'instance_id', 'instance_id', $new_field);
  db_change_field($aws_cloud_security_groups_table, 'owner_id', 'owner_id', $new_field);
  db_change_field($aws_cloud_snapshot_table, 'owner_id', 'owner_id', $new_field);
}

/**
 * Add root_type field to images table.  This field stores whether the image is EBS backed or S3 backed
 */
function aws_cloud_update_7102() {
  $aws_cloud_images_table = aws_cloud_get_table_info(AWS_CLOUD_IMAGES_TABLE);
  $field = array('type' => 'varchar', 'length' => 64);
  db_add_field($aws_cloud_images_table, 'root_device_type', $field);
}

/**
 * Remove all primary keys, unique keys and index from cloud_aws_images table
 */
function aws_cloud_update_7130() {
  $aws_cloud_images_table = aws_cloud_get_table_info(AWS_CLOUD_IMAGES_TABLE);
  // Drop all primary keys.
  db_drop_primary_key($aws_cloud_images_table);
  // Drop all index.
  db_drop_index($aws_cloud_images_table, 'image_id');
  // Drop all unique keys
  db_drop_unique_key($aws_cloud_images_table, 'image_id');
}
