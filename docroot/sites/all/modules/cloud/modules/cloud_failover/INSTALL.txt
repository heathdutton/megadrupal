// Date of Preparation: 10/15/2010

Nagios Setup
============


0. Our Testing Environment
==========================

  1) Machine Name  OS           Architecture
  2) clanavi       Ubuntu 10.04 x86_64
  3) cloud-monitor Ubuntu 10.04 x86_64
  4) xcp-master    XCP    0.1.1 x86_64
  5) xcp-slave-1   XCP    0.1.1 x86_64
  6) vm-1          CentOS 5.4   x86_64


1. Deployment Prerequisites
===========================

  1) Mac Address to inform DHCP server to render same address 
  2) Size of the '/' directory to be atleast 100GB
  3) Allow Monitoring host incoming requests through the host's firewall. 
  4) Nagios   version 3.2.x
  5) Collectd version 4.9.x


2. Installation
===============

     # apt-get update
     # apt-get upgrade
     # apt-get install apache2 libapache2-mod-php5 build-essential libgd2-xpm-dev  
     # /usr/sbin/useradd -m -s /bin/bash nagios 
     # passwd nagios 
     # /usr/sbin/groupadd nagcmd 
     # /usr/sbin/usermod -a -G nagcmd nagios 
     # /usr/sbin/usermod -a -G nagcmd www-data 

 
3. Download Nagios and the Plugins
==================================

  1) Create a directory for storing the downloads. 

     # mkdir ~/downloads 
     # cd ~/downloads 

  2) Download source code tarballs of both Nagios and the Nagios plugins:

     Go to: http://www.nagios.org/download/ 

     # wget http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-3.2.1.tar.gz 
     # wget http://prdownloads.sourceforge.net/sourceforge/nagiosplug/nagios-plugins-1.4.14.tar.gz 


4. Setup Nagios
===============

  1) Extract the Nagios source code tarball. 

     # tar xzf nagios-3.2.1.tar.gz 
     # cd nagios-3.2.1 

  2) Run the Nagios configure script,  passing the name of the group you created
     earlier like so: 

     # ./configure --with-command-group=nagcmd 

  3) Compile the Nagios source code. 

     # make all 

  4) Install binaries,  init script,  sample config files and set permissions on
     the external command directory. 

     # make install 
     # make install-init 
     # make install-config 
     # make install-commandmode 

  5) Configure the Web Interface
     Install the Nagios web config file in the Apache conf.d directory. 

     # make install-webconf 

  6) Create a nagiosadmin account for logging into the Nagios web interface.
     Remember the password you assign to this account - you'll need it later. 

     # htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin 

  7) Restart Apache to make the new settings take effect. 
    
     # /etc/init.d/apache2 reload
  
  8) Compile and Install the Nagios Plugins 
     Extract the Nagios plugins source code tarball. 

     # tar xzf nagios-plugins-1.4.14.tar.gz 
     # cd nagios-plugins-1.4.14 

  9) Compile and install the plugins. 

     # ./configure --with-nagios-user=nagios --with-nagios-group=nagios 
     # make 
     # make install 

 10) Copy the following lines to the file /usr/local/nagios/etc/nagios.cfg

     cfg_file=/usr/local/nagios/etc/objects/cloud_hosts.cfg
     cfg_file=/usr/local/nagios/etc/objects/cloud_services.cfg
     cfg_file=/usr/local/nagios/etc/objects/cloud_commands.cfg

 11) Copy the following files to location /usr/local/nagios/etc/objects

     cloud_commands.cfg
     cloud_hosts.cfg            Permission: 3666
     cloud_services.cfg         Permission: 3666

 12) Install Postfix

     # apt-get install postfix mailutils

 13) Restart Nagios

     # service nagios restart


5. Setup E-mail Alert and Notification
======================================

  1) Sendmail utility configuration
     Edit following lines

     # vi /etc/postfix/main.cf

     myhostname = cloud-monitor.dcml.docomolabs-usa.com
     mydestination = cloud-monitor.dcml.docomolabs-usa.com,  
     relayhost = Microsoft exchange server hostname (Need managerâ€™s approval)
     mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
     mailbox_size_limit = 0
     recipient_delimiter = +
     inet_interfaces = all

  2) Restart Postfix

     # service postfix restart

  3) Edit /usr/local/nagios/etc/objects/contacts.cfg

     # vi /usr/local/nagios/etc/objects/contacts.cfg

     define contact{
       contact_name  nagiosadmin              ; Short name of user
       use           generic-contact          ; Inherit default values from generic-contact template (defined above)
       alias         Nagios Admin             ; Full name of user
        email        YOUR_NAME@YOURDOMAIN.COM ; <<***** CHANGE THIS TO YOUR EMAIL ADDRESS ******
     }


  4) Edit /usr/local/nagios/etc/objects/commands.cfg

     # vi /usr/local/nagios/etc/objects/commands.cfg

     define command{
       command_name  notify-host-by-email
       command_line  /usr/bin/printf "%b" "Subject:** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **\n***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost:  $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/sbin/sendmail -t $CONTACTEMAIL$
     }

     # 'notify-service-by-email' command definition
     define command{
       command_name  notify-service-by-email
       command_line  /usr/bin/printf "%b" "Subject:** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **\n***** Nagios *****\n\nNotification Type:  $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$" | /usr/sbin/sendmail -t $CONTACTEMAIL$
     }


  5) Add new hosts in /usr/local/nagios/etc/objects/cloud_hosts.cfg
  
     # vi /usr/local/nagios/etc/objects/cloud_hosts.cfg

       define host {
         name                            cloud-host      ; The name of this host template
         check_period                    24x7            ; By default,  Linux hosts are checked round the clock
         check_interval                  5               ; Actively check the host every 5 minutes
         retry_interval                  1               ; Schedule host check retries at 1 minute intervals
         max_check_attempts              10              ; Check each Linux host 10 times (max)
         check_command                   check-host-alive!check_http!check_ssh ; Default command to check Linux hosts
         notification_period             workhours       ; Linux admins hate to be woken up,  so we only notify during the day
         notification_interval           120             ; Resend notifications every 2 hours
         notification_options            d, u, r           ; Only send notifications for specific host states
         contact_groups                  admins          ; Notifications get sent to the admins by default
         register                        1               ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST,  JUST A TEMPLATE!
       }

       define host {
         name                            clanavi         ; The name of this host template
         use                             cloud-host
         host_name                       clanavi
         alias                           clanavi
         address                         CLOUD_HOST_IP_ADDRESS (e.g. 172.21.12.3)
       }

  6) Add new services in /usr/local/nagios/etc/objects/cloud_services.cfg

     # vi /usr/local/nagios/etc/objects/cloud_services.cfg

       define service {
         name                            cloud-ping
         use                             local-service   ; Name of service template to use
         host_name                       clanavi
         service_description             PING
         check_command                   check_ping!100.0, 20%!500.0, 60%
         notifications_enabled           1
       }

       define service {
         use                             cloud-ping      ; Name of service template to use
         host_name                       clanavi
       }
  7) RESTART NAGIOS
  
     service nagios restart
     

Copyright
=========

Copyright (c) 2010-2011 DOCOMO Innovations, Inc.
     

 End of This File