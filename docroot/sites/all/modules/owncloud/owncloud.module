<?php

/**
 * Implements hook_stream_wrappers().
 *
 * Create a stream wrapper for ownCloud
 */
function owncloud_stream_wrappers() {
  return array(
    'owncloud' => array(
      'name' => 'ownCloud',
      'class' => 'ownCloudStreamWrapper',
      'description' => t('ownCloud file storage'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function owncloud_menu() {
  $items['admin/config/media/owncloud'] = array(
    'title' => 'ownCloud settings',
    'description' => 'Configure the ownCloud integration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('owncloud_settings'),
    'access arguments' => array('administer files'),
    'file' => 'includes/owncloud.admin.inc',
  );

  $items['owncloud/api/%'] = array(
    'title' => 'Sync request from ownCloud',
    'page callback' => 'owncloud_api',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'includes/owncloud.api.inc',
  );
  $items['owncloud/file/%'] = array(
    'title' => 'Download a file from ownCloud',
    'page callback' => 'owncloud_file',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'includes/owncloud.file.inc',
  );

  return $items;
}

/**
 * Implements hook_file_presave().
 */
function owncloud_file_presave($file) {
  if (isset($file->owncloud)) {
    $file->filesize = $file->owncloud['filesize'];
  }
}

function owncloud_image_style_path_alter(&$result, $style_name, $uri) {
  if (strpos($uri, 'owncloud://') === 0) {
    $file = owncloud_file_load_by_remote_id($uri);
    if (!empty($file->fid)) {
      $suffix = '/' . $file->filename;
      if (strrpos($result, $suffix) + strlen($suffix) == strlen($result)) {
        $suffix = '';
      }
      $result = str_replace('owncloud://', 'public://', $result) . $suffix;
    }
  }
}

function owncloud_file_load_by_remote_id($id, $filename = NULL) {
  if (strpos($id, 'owncloud://') === 0) {
    $path  = str_replace('owncloud://', '', $id);
    list($id) = explode('/', $path);
  }
  $uri =  'owncloud://' . $id;
  $files = file_load_multiple(array(), array('uri' => $uri));
  if (empty($files)) {
    $file = new stdClass();
    $file->uid      = 1;
    $file->status   = 1;
    $file->uri      = $uri;
    $file->filesite = 0;
    if (isset($filename)) {
      $file->filename = $filename;
      $file->filemime = file_get_mimetype($filename);
    }
  }
  else {
    $file = reset($files);
  }
  return $file;
}

function owncloud_hash($string) {
  return drupal_hash_base64(variable_get('owncloud_secret', '') . $string);
}

function owncloud_request($path, $query = array(), $url = NULL) {
  $query['t'] = REQUEST_TIME;
  $query['token'] = drupal_random_key(32);
  $query['hash'] = owncloud_hash($query['token'] . $query['t']);
  $_url = isset($url) ? $url : variable_get('owncloud_url');
  $_url .= '/index.php/apps/drupal/' . $path . '?' . drupal_http_build_query($query);
  $response = drupal_http_request($_url, array(
    'max_redirects' => 0,
  ));

  if (empty($response->code) || $response->code != 200) {
    return FALSE;
  }
  if ($response->headers['content-type'] == 'application/json') {
    return drupal_json_decode($response->data);
  }
  return $response->data;
}
