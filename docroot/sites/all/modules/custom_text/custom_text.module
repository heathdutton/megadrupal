<?php
/**
 * @file Custom Text module file. 
 */


/**
 * Implements hook_menu(). 
 */
function custom_text_menu() {
  $items = array();

  $items['admin/structure/custom_text'] = array(
    'title' => 'Custom Text',
    'description' => 'Edit custom texts used throughout the website.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_text_admin_form'),
    'access arguments' => array('change custom text'),
  );

  return $items;
}

/**
 * Implements hook_permission(). 
 */
function custom_text_permission() {
  $permissions = array();

  $permissions['change custom text'] = array(
    'title' => t('Change custom text'),
    'description' => t('Allow user to change custom texts.'),
  );

  return $permissions;
}

/**
 * Implements hook_hook_info(). 
 */
function custom_text_hook_info() {
  $hooks = array();

  $hooks['custom_text_group_info'] = array(
    'group' => 'custom_text',
  );

  $hooks['custom_text_info'] = array(
    'group' => 'custom_text',
  );

  return $hooks;
}

/**
 * Returns the text.
 *
 * The returned text is already formatted, there is no need to pass it throught
 * check_plain() or check_markup().
 */
function custom_text_get($identifier, $langcode = NULL) {
  if (!$langcode) {
    global $language;
    $langcode = $language->language;
  }

  $query = db_select('custom_text', 'ct');
  $query->condition('identifier', $identifier);
  $query->condition('language', $langcode);
  $query->addField('ct', 'text_cache');

  $text = $query->execute()->fetchField();
  return $text;
}

/**
 * Returns all (unformatted) texts for the form.
 */
function _custom_text_get_all() {
  $query = db_select('custom_text', 'ct');
  $query->fields('ct', array('identifier', 'language', 'text', 'text_format'));

  $texts = array();
  foreach ($query->execute() as $row) {
    $texts[$row->identifier][$row->language] = array(
      'value' => $row->text,
      'format' => $row->text_format,
    );
  }
  return $texts;
}

/**
 * Change a text.
 */
function custom_text_set($identifier, $text, $text_format, $langcode = NULL) {
  if (!$langcode) {
    global $language;
    $langcode = $language->language;
  }

  $record = (object) array(
    'identifier' => $identifier,
    'language' => $langcode,
    'text' => $text,
    'text_format' => $text_format,
    'text_cache' => $text_format ? check_markup($text, $text_format, $langcode) : check_plain($text),
  );

  db_transaction();
  if (custom_text_get($identifier, $langcode) === FALSE) {
    // New record, insert
    return drupal_write_record('custom_text', $record);
  }
  else {
    // Existing record, update
    return drupal_write_record('custom_text', $record, array('identifier', 'language'));
  }
}

/**
 * Form builder for the text admin form. 
 */
function custom_text_admin_form($form, &$form_state) {
  $form = array();

  // Get the texts info
  $texts_group_info = module_invoke_all('custom_text_group_info');
  $texts_info = module_invoke_all('custom_text_info');

  // If there are no valid identifiers, quit.
  if (!$texts_info || !$texts_group_info) {
    $form['error'] = array(
      '#title' => t('Error'),
      '#markup' => t('There are no texts defined by any of the modules used by this site, or you do not have permission to edit any of the texts. See <code>custom_text.api.php</code>.'),
    );

    return $form;
  }

  $languages = language_list();
  $texts = _custom_text_get_all();

  $form['texts'] = array(
    '#type' => 'vertical_tabs',
    '#title' => t('Custom Texts'),
  );

  foreach ($texts_group_info as $text_group_identifier => $text_group_element) {
    $form['texts'][$text_group_identifier] = array(
      '#type' => 'fieldset',
    ) + $text_group_element;

    $form['texts'][$text_group_identifier]['passthru'] = array(
      '#type' => 'vertical_tabs',
    );

    foreach ($languages as $langcode => $language) {
      $form['texts'][$text_group_identifier]['passthru'][$langcode] = array(
        '#type' => 'fieldset',
        '#title' => $language->native,
      );

      foreach ($texts_info[$text_group_identifier] as $text_identifier => $text_element) {
        if (preg_match('/^[\w_-]{1,64}$/', $text_identifier) && !preg_match('/--/', $text_identifier)) {
          $form['texts'][$text_group_identifier]['passthru'][$langcode]['text--' . $text_identifier . '--' . $langcode] = array(
            '#default_value' => isset($texts[$text_identifier][$langcode]) ? $texts[$text_identifier][$langcode]['value'] : '',
            '#format' => isset($texts[$text_identifier][$langcode]) ? $texts[$text_identifier][$langcode]['format'] : NULL,
          ) + $text_element;
        }
      }
    }
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save changes'),
  );

  return $form;
}

/**
 * Submit handler for the text admin form.
 */
function custom_text_admin_form_submit($form, &$form_state) {
  foreach ($form_state['values'] as $key => $value) {
    $matches = array();
    if (preg_match('/^text--([\w_-]+)--(\w+)$/', $key, $matches)) {
      list(, $identifier, $langcode) = $matches;
      if (is_array($value)) {
        $text = $value['value'];
        $text_format = $value['format'];
      }
      else {
        $text = $value;
        $text_format = NULL;
      }
      custom_text_set($identifier, $text, $text_format, $langcode);
    }
  }

  drupal_set_message('Your changes were saved.');
}
