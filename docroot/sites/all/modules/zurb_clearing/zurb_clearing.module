<?php

/**
 * Implementation of hook_theme().
 */
function zurb_clearing_theme() {
  return array(
    'zurb_clearing' => array(
      'variables' => array(
        'items'   => NULL,
        'images'  => NULL,
        'options' => NULL,
        'entity'  => NULL,
      ),
      'template'  => 'zurb-clearing',
    ),
  );
}

/**
 * Implementation of hook_field_formatter_info().
 * @return array
 */
function zurb_clearing_field_formatter_info() {
  $formatters = array(
    'clearing' => array(
      'label'       => t('Zurb Clearing'),
      'field types' => array('image'),
      'settings'    => array(
        'image_style_thumb' => '',
        'image_style_large' => '',
        'featured'          => FALSE,
        'show_captions'     => FALSE,
        'caption_field'     => '',
      ),
    ),
  );

  return $formatters;
}

/**
 * Implementation of hook_field_formatter_settings_form().
 * @param $field
 * @param $instance
 * @param $view_mode
 * @param $form
 * @param $form_state
 * @return array
 */
function zurb_clearing_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $image_styles = array('zurb_clearing_file_flag' => t('Original File')) + image_style_options(FALSE);

  $element = array(
    '#type' => 'fieldset',
    '#title' => t('Zurb Clearing settings'),
  );

  $element['image_style_thumb'] = array(
    '#title' => t('Image thumbnail style'),
    '#type' => 'select',
    '#default_value' => $settings['image_style_thumb'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles,
  );

  $element['image_style_large'] = array(
    '#title' => t('Image large style'),
    '#type' => 'select',
    '#default_value' => $settings['image_style_large'],
    '#empty_option' => t('None (open thumbnail in lightbox)'),
    '#options' => $image_styles,
  );

  $element['featured'] = array(
    '#title' => t('Feature the first image in the set'),
    '#type' => 'select',
    '#default_value' => $settings['featured'],
    '#options' => array(FALSE => 'No', TRUE => 'Yes'),
  );

  $element['show_captions'] = array(
    '#title' => t('Show captions'),
    '#type' => 'select',
    '#default_value' => $settings['show_captions'],
    '#options' => array(FALSE => 'No', TRUE => 'Yes'),
  );

  $fields = field_info_fields();
  $options = array();

  foreach ($fields as $name => $field) {
    if (in_array('file', array_keys($field['bundles'])) && in_array('image', $field['bundles']['file']) && $field['type'] == 'text') {
      $infos = field_info_instance('file', $name, 'image');
      $options[$name] = t('File Entity field:') . ' ' . $infos['label'];
    }
  }

  $element['caption_field'] = array(
    '#title' => t('Caption field'),
    '#type' => 'select',
    '#default_value' => $settings['caption_field'],
    '#empty_option' => t('None'),
    '#options' => $options,
  );

  return $element;
}

/**
 * Implementation of hook_field_formatter_settings_summary().
 * @param $field
 * @param $instance
 * @param $view_mode
 * @return string
 */
function zurb_clearing_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = array();

  if (isset($settings['image_style_thumb'])) {
    $summary[] = t('Image thumbnail style: @value', array('@value' => $settings['image_style_thumb']));
  } else {
    $summary[] = t('Image thumbnail style: not selected. Please select a thumbnail style.');
  }

  if (isset($settings['image_style_large'])) {
    $summary[] = t('Image large style: @value', array('@value' => $settings['image_style_large']));
  } else {
    $summary[] = t('Image large style: not selected. Please select an expanded large style.');
  }

  $summary[] = t('Feature the first image: @value', array('@value' => $settings['featured'] ? 'Yes' : 'No'));
  $summary[] = t('Show captions: @value', array('@value' => $settings['show_captions'] ? 'Yes' : 'No'));
  $summary[] = t('Caption field: @value', array('@value' => $settings['caption_field'] ? $settings['caption_field'] : 'not set'));

  return implode('<br />', $summary);
}

/**
 * Implementation of hook_field_formatter_view().
 * @param $entity_type
 * @param $entity
 * @param $field
 * @param $instance
 * @param $langcode
 * @param $items
 * @param $display
 * @return array
 */
function zurb_clearing_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];
  $images = array();
  $element = array();

  if (count($items)) {
    foreach ($items as $item) {
      $item['path'] = $item['uri'];
      $image = array();

      if (isset($settings['image_style_thumb']) && drupal_strlen($settings['image_style_thumb'])) {
        $item['style_name'] = $settings['image_style_thumb'];
        if ($settings['show_captions'] && isset($item[$settings['caption_field']])) {
          $item['attributes']['data-caption'] = isset($item[$settings['caption_field']][$langcode][0]['value']) ? $item[$settings['caption_field']][$langcode][0]['value'] : '';
        }
        $image['thumbnail'] = theme('image_style', $item);
      }
      else {
        $image['thumbnail'] = theme('image', $item);
      }

      if (isset($settings['image_style_large']) && drupal_strlen($settings['image_style_large'])) {
        if ($settings['image_style_large'] == 'zurb_clearing_file_flag') {
          $large_image = file_create_url($item['uri']);
        }
        else {
          $large_image = image_style_url($settings['image_style_large'], $item['uri']);
          $style = image_style_load($settings['image_style_large']);
          image_style_create_derivative($style, $item['uri'], image_style_path($style['name'], $item['uri']));
        }
        $image['thumbnail'] = l($image['thumbnail'], $large_image, array('html' => TRUE));
      }

      $images[] = $image;
    }

    if ($settings['featured']) {
      $items[0]['featured'] = TRUE;
    }

    $element[] = array(
      '#theme' => 'zurb_clearing',
      '#items' => $items,
      '#images' => $images,
      '#options' => array(
        'image_style_thumb' => $settings['image_style_thumb'],
        'image_style_large' => $settings['image_style_large'],
        'show_captions'     => $settings['show_captions'],
        'caption_field'     => $settings['caption_field'],
        'featured'          => $settings['featured'],
      ),
      '#entity' => $entity,
    );
  }

  return $element;
}
