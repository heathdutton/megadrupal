<?php
/**
 * @file
 *
 */

function webform_draggable_list_formbuilder_form_builder_types() {
  $fields = array();

  // The #type property of the field is used as the key.
  $fields['draggable_list'] = array(
    'title' => t('Draggable list'),
    // Properties that may be edited on this field type.
    'properties' => array(
      'title',
      'description',
      'required',
      'key',
      'title_display',
      'private',
      //Draggable list specific options
      'draggable_list_rows',
      'hide_toggle',
      'hide_message',
    ),
    // A complete default form element used when a new field of this type
    // is added to a form.
    'default' => _form_builder_webform_default('draggable_list'),
  );
  $fields['draggable_list']['default']['#draggable_list_rows'] = array(t('Item 1'), t('Item 2'), t('Item 3'));
  $fields['draggable_list']['default']['#title'] = t('New draggable list');

  // Return the array of supported fields, with a key for the form type that
  // these fields apply to.
  return array(
    'webform' => $fields,
  );
}

function webform_draggable_list_formbuilder_form_builder_properties($form_type) {
  return array(
    'draggable_list_rows' => array(
      'form' => 'webform_draggable_list_formbuilder_property_draggable_list_rows_form',
      'submit' => array('webform_draggable_list_formbuilder_property_draggable_list_rows_submit')
    ),
    'hide_message' => array(
      'form' => 'webform_draggable_list_formbuilder_property_hide_message_form',
    ),
    'hide_toggle' => array(
      'form' => 'webform_draggable_list_formbuilder_property_hide_toggle_form',
    )
  );
}

function webform_draggable_list_formbuilder_property_draggable_list_rows_form(&$form_state, $form_type, $element) {
  $element['#draggable_list_rows'] = _webform_select_options_to_text($element['#draggable_list_rows']);
  $form = _form_builder_webform_build_edit_form('draggable_list', $element, 'draggable_list_rows', 'rows', array('rows'), array('extra', 'rows'));
  $form['draggable_list_rows']['options']['#key_type_toggled'] = !empty($element['#custom_row_keys']);
  return $form;
}

function webform_draggable_list_formbuilder_property_hide_message_form(&$form_state, $form_type, $element) {
  $form = _form_builder_webform_build_edit_form('draggable_list', $element, 'hide_message', 'display', array('extra', 'hide_message'), array('extra', 'hide_message'));
  return $form;
}

function webform_draggable_list_formbuilder_property_hide_toggle_form(&$form_state, $form_type, $element) {
  $form = _form_builder_webform_build_edit_form('draggable_list', $element, 'hide_toggle', 'display', array('extra', 'hide_toggle'), array('extra', 'hide_toggle'));
  return $form;
}

function webform_draggable_list_formbuilder_property_draggable_list_rows_submit(&$form, &$form_state) {
  if (empty($form_state['values']['draggable_list_rows'])) {
    $form_state['values']['draggable_list_rows'] = _webform_select_options_from_text($form_state['values']['extra']['draggable_list_rows']);
    $form_state['values']['custom_draggable_list_row_keys'] = $form_state['values']['extra']['custom_draggable_list_row_keys'];
  }
}

function _webform_form_builder_save_draggable_list($component, $form_element) {
  $rows = '';
  foreach ($form_element['#draggable_list_rows'] as $key => $row_value) {
    $rows .= $key . '|' . $row_value . "\n";
  }

  $component['extra']['description'] = isset($form_element['#description']) ? $form_element['#description'] : NULL;
  $component['extra']['title_display'] = isset($form_element['#title_display']) ? $form_element['#title_display'] : 'before';
  $component['extra']['rows'] = $rows;
  $component['extra']['custom_row_keys'] = isset($form_element['#custom_row_keys']) ? $form_element['#custom_row_keys'] : FALSE;
  $component['extra']['hide_message'] = isset($form_element['#hide_message']) ? $form_element['#hide_message'] : 0;
  $component['extra']['hide_toggle'] = isset($form_element['#hide_toggle']) ? $form_element['#hide_toggle'] : 0;

  return $component;
}

function webform_draggable_list_formbuilder_form_builder_preview_alter(&$element, $form_type, $form_id) {
  if ($element['#type'] == 'draggable_list') {
    $default_weight = 1;
    foreach ($element['#draggable_list_rows'] as $key => $row) {
      $element[$key]['#value'] = $default_weight;
      $element[$key]['#default_value'] = $default_weight;
      $element[$key]['#weight'] = $default_weight;
      $default_weight++;
    }
    uasort($element, 'element_sort');
  }
}