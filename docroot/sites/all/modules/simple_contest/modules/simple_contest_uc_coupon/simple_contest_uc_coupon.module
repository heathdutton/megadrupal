<?php
// $Id: simple_contest_uc_coupon.module,v 1.1.2.2 2010/07/09 04:36:13 vinoth.3v Exp $
/**
 * @file
 *
 * simple_contest_uc_coupon module
 */

/*
 * Implementation of hook_simple_contest()
 *
 */
function simple_contest_uc_coupon_simple_contest($op, $a2 = NULL, $a3 = NULL){

  if ($op == 'default_settings') {
    return array(
		'uc_coupon_values' => array(),
		'uc_coupon_type' => 'price',
		'uc_coupon_expire_length' => 1,
		'uc_coupon_expire' => 'year',
    );
  }

  if($op == SIMPLE_CONTEST_STATUS_COMPLETED && $a3){
    $winners = $a3;
    $node = $a2; 
    $settings = simple_contest_get_settings($node->type);
    //if ($settings['winner_type'] == 'user'){ //
    foreach($new_winners as $uid => $info){

      $data = array();
      $data['roles'] = array();
      $data['users'][] = $uid; // only for this user
      $data['terms'] = array();
      $data['skus'] = array();
      $data['products'] = array();
      $data['product_types'] = array();
      $data['negate_terms'] = TRUE;
      $data['negate_products'] = TRUE;
      $data['max_uses_per_user'] = 1;
      $data['wholesale'] = 1;      	
      $cname = 'Prize Coupon for the contest ' . check_plain($node->title);
      $code = 'CCP' . '_' . $node->nid. '_' . $uid . '_' .  date('Y') . date('m') . date('d');
      	
      $valid_until = strtotime("+" . $settings['uc_coupon_expire_length'] . " " + $settings['uc_coupon_expire']);
      	
      db_query("INSERT INTO {uc_coupons} (name, code, value, type, status, valid_until, max_uses, minimum_order, data, bulk, bulk_seed) VALUES ('%s', '%s', %f, '%s', %d, %d, %d, %d, '%s', %d, '%s')", $cname, $code, floatval($settings['uc_coupon_values']['value_' . $info->weight]), $settings['uc_coupon_type'], 1, $valid_until, 0, 0, serialize($data), 0, md5(uniqid()));

    }
  }
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function simple_contest_uc_coupon_form_simple_contest_content_type_settings_form_alter(&$form, &$form_state) {

  module_load_include('inc', 'simple_contest_uc_coupon', 'simple_contest_uc_coupont.form');
  _simple_contest_uc_coupon_simple_contest_content_type_settings_form_alter($form, $form_state, $form_id);    

}

function _simple_contest_uc_coupon_content_type_settings_form_validate($form, &$form_state) {
  foreach($form_state['values']['prize_coupons'] as $key => $value){
    if (empty($value) || !is_numeric($value)) {
      form_set_error("simple_contest][prize_coupons][$key", t('Invalid value for ' . $key));
    }
  }
}

function _simple_contest_uc_coupon_content_type_settings_form_submit($form, &$form_state) {

  //$settings = simple_contest_get_settings($form_state['type']);

}


/**
 * Implementation of hook_order().
 *
 * Ensure any cart pane coupon is added to the order if the checkout page is skipped
 * (e.g. Paypal Express Checkout, Google Checkout)
 */
/*function simple_contest_uc_coupon_order($op, &$arg1, $arg2) {
  if ($op == 'save') {
    $res = db_query("SELECT cid, value FROM {uc_coupons_orders} WHERE oid = %d", $arg1->order_id);
    // when to ?

  }
}*/

