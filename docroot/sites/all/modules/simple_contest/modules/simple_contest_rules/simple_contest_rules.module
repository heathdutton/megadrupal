<?php

/**
 * @file simple_contest_rules.module
 * Rules integration for the simple contest module.
 */

/*
 * Implementation of hook_simple_contest()
 *
 */
function simple_contest_rules_simple_contest($op, $a2 = NULL, $a3 = NULL, $a4 = NULL){
  
  if($op == SIMPLE_CONTEST_STATUS_COMPLETED && $a2 && $a3) {
    $contest = $a2;
    $winners = $a3;
    rules_invoke_all('simple_contest_contest_completed', $contest, $winners);
    return;
  }
  
  if($op == 'contest_status_changed') {
    $contest = $a2;
    $old_status = $a3;
    $new_status = $a4;
    rules_invoke_all('simple_contest_contest_status_changed', $contest);
    return;
  }
  
}

/*
 * Implementation of hook_mail()
 *
 */
function simple_contest_rules_mail($key, &$message, $params) {
  switch($key){
	
    case 'rules_action_send_mail_to_winners':
      
      $settings = $params['settings'];
      
      $subject = str_replace(array("\r", "\n"), '', $params['subject']);
      
      $body = $params['message'];
      
      $message['subject'] = token_replace($subject, $params);
      $message['body'][] = token_replace($body, $params);

      break;
  }
}

/**
 * Implements hook_features_pipe_alter() for node component.
 * Add dependencies.
 */
function simple_contest_rules_features_pipe_node_alter(&$pipe, $data, &$export) {
  if (!empty($data)) {
    $rules = array();
    
    foreach ($data as $node_type) {
      if (simple_contest_is_simple_contest($node_type)) {
        
        $rules = rules_config_load_multiple(FALSE, array('active' => 1));
        
        foreach($rules as $rule) {
          if (in_array('simple_contest_rules', $rule->dependencies())) {
            $pipe['rules_config'][] = $rule->name;
          }
        }
      }
    }
  }
}

