<?php

/**
 * Implements hook_schema().
 */
function predictiongame_schema() {
  $schema['predictiongame_team'] = array(
    'description' => 'The teams which participate in leagues or tournaments.',
    'fields' => array(
      'id' => array(
        'description' => 'The unique ID of the team.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the team.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['predictiongame_competition'] = array(
    'description' => 'Tournament, leagues and the like, for which predictions can be made.',
    'fields' => array(
      'id' => array(
        'description' => 'The unique ID of the competition.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the competition.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'shortname' => array(
        'description' => 'The name of the competition.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      // teams, matches_per_page, deadline, points[winner], points[diff], points[result]
      'options' => array(
        'description' => 'Options concerning the competition.',
        'type' => 'blob',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'shortname' => array('shortname'),
    ),
  );
  $schema['predictiongame_match'] = array(
    'description' => 'Contains all individual matches between teams in a competition.',
    'fields' => array(
      'id' => array(
        'description' => 'The unique ID of the match.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'competition' => array(
        'description' => 'The {predictiongame_competition}.id this match belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'home' => array(
        'description' => 'The {predictiongame_team}.id of the home team.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'away' => array(
        'description' => 'The {predictiongame_team}.id of the away team.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'time' => array(
        'description' => 'The time at which the match starts.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'score_home' => array(
        'description' => 'The points scored by the home team.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'score_away' => array(
        'description' => 'The points scored by the away team.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['predictiongame_bet'] = array(
    'description' => "A user's guess of the result of a match.",
    'fields' => array(
      'id' => array(
        'description' => 'The unique ID of the bet.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.id of the user who made this bet.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'mid' => array(
        'description' => 'The {predictiongame_mactch}.id this bet pertains to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'competition' => array(
        'description' => 'The {predictiongame_competition}.id this bet belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'bet_home' => array(
        'description' => 'The predicted score of the home team.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'bet_away' => array(
        'description' => 'The predicted score of the away team.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'points' => array(
        'description' => 'The points the user earned for this bet.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'uid_match' => array('uid', 'mid')
    ),
    'indexes' => array(
      'competition' => array('competition')
    ),
  );

  return $schema;
}

/**
 * Implements hook_update_N().
 *
 * Removes the unsigned flag from bets (so they can be subtracted correctly).
 */
function predictiongame_update_7101() {
  $bet_home = array(
    'description' => 'The predicted score of the home team.',
    'type' => 'int',
    'not null' => TRUE,
  );
  db_change_field('predictiongame_bet', 'bet_home', 'bet_home', $bet_home);
  $bet_away = array(
    'description' => 'The predicted score of the away team.',
    'type' => 'int',
    'not null' => TRUE,
  );
  db_change_field('predictiongame_bet', 'bet_away', 'bet_away', $bet_away);
}
