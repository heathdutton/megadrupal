<?php

/**
 * Implements hook_menu().
 */
function predictiongame_menu() {
  // User stuff
  $items['predictiongame/%predictiongame_competition'] = array(
    'title' => 'Competition',
    'title callback' => 'predictiongame_object_title',
    'title arguments' => array(1),
    'description' => 'View data about the competition.',
    'page callback' => 'predictiongame_competition_overview',
    'page arguments' => array(1),
    'access arguments' => array('view predictiongame'),
    'file' => 'predictiongame.pages.inc',
  );
  $items['predictiongame/%predictiongame_competition/overview'] = array(
    'title' => 'Overview',
    'description' => 'View data about the competition.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['predictiongame/%predictiongame_competition/scores'] = array(
    'title' => 'Scores',
    'description' => 'View the ranking of all usesrs.',
    'page callback' => 'predictiongame_competition_scores',
    'page arguments' => array(1),
    'access arguments' => array('view predictiongame'),
    'file' => 'predictiongame.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -8,
  );
  $items['predictiongame/%predictiongame_competition/list'] = array(
    'title' => 'Matches',
    'description' => 'View the matches of a competition.',
    'page callback' => 'predictiongame_list_matches',
    'page arguments' => array(1),
    'access arguments' => array('view predictiongame'),
    'file' => 'predictiongame.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -6,
  );
  // Admin stuff
  $items['predictiongame/%predictiongame_competition/admin'] = array(
    'title' => 'Administer',
    'description' => 'Administer the competition.',
    'page callback' => 'predictiongame_admin_competition_redirect',
    'page arguments' => array(1, 'admin/content/predictiongame/'),
    'access arguments' => array('manage predictiongame'),
    'file' => 'predictiongame.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/content/predictiongame'] = array(
    'title' => 'Prediction games',
    'description' => 'View administration data about prediction games.',
    'page callback' => 'predictiongame_admin_overview',
    'access arguments' => array('manage predictiongame'),
    'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
    'file' => 'predictiongame.admin.inc',
  );
  $items['admin/content/predictiongame/add'] = array(
    'title' => 'Add competition',
    'description' => 'Add a new competition for which a prediction game will be offered.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('predictiongame_admin_competition_form'),
    'access arguments' => array('manage predictiongame'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'predictiongame.admin.inc',
  );
  $items['admin/content/predictiongame/overview'] = array(
    'title' => 'Overview',
    'description' => 'View administration data about prediction games.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/predictiongame/teams'] = array(
    'title' => 'Teams',
    'description' => 'View and edit the defined teams.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('predictiongame_admin_teams'),
    'access arguments' => array('manage predictiongame'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'predictiongame.admin.inc',
  );
  $items['admin/content/predictiongame/%predictiongame_competition'] = array(
    'title' => 'Administer competition',
    'title callback' => 'predictiongame_object_title',
    'title arguments' => array(3, 'Administer competition !name'),
    'description' => 'View administration data about a competition.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('predictiongame_admin_competition', 3),
    'access arguments' => array('manage predictiongame'),
    'file' => 'predictiongame.admin.inc',
  );
  $items['admin/content/predictiongame/%predictiongame_competition/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/predictiongame/%predictiongame_competition/edit'] = array(
    'title' => 'Edit',
    'description' => 'Edit a competition.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('predictiongame_admin_competition_form', 3),
    'access arguments' => array('manage predictiongame'),
    'type' => MENU_LOCAL_TASK,
    'weight' => -8,
    'file' => 'predictiongame.admin.inc',
  );
  $items['admin/content/predictiongame/%predictiongame_competition/userarea'] = array(
    'title' => 'Frontend',
    'description' => 'View user frontend of the competition.',
    'page callback' => 'predictiongame_admin_competition_redirect',
    'page arguments' => array(3),
    'access arguments' => array('manage predictiongame'),
    'type' => MENU_LOCAL_TASK,
    'weight' => -6,
    'file' => 'predictiongame.admin.inc',
  );
  $items['admin/content/predictiongame/%predictiongame_competition/add'] = array(
    'title' => 'Add matches',
    'description' => 'Add matches to a competition.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('predictiongame_admin_match_add', 3),
    'access arguments' => array('manage predictiongame'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'predictiongame.admin.inc',
  );
  // Uber admin stuff
  $items['admin/content/predictiongame/%predictiongame_competition/delete'] = array(
    'title' => 'Delete',
    'description' => 'Delete a competition.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('predictiongame_admin_competition_delete', 3),
    'access arguments' => array('administer predictiongame'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'predictiongame.admin.inc',
    'weight' => 10,
  );
  $items['admin/content/predictiongame/match/%predictiongame_match'] = array(
    'title' => 'View match',
    'description' => 'View information about a match.',
    'page callback' => 'predictiongame_admin_match_view',
    'page arguments' => array(4),
    'access arguments' => array('administer predictiongame'),
    'file' => 'predictiongame.admin.inc',
  );
  $items['user/%/predictiongame'] = array(
    'title' => 'Prediction game',
    'page callback' => 'predictiongame_admin_list_user_competitions',
    'page arguments' => array(1),
    'access arguments' => array('administer predictiongame'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'predictiongame.admin.inc',
    'weight' => 10,
  );
  $items['user/%user/predictiongame/%predictiongame_competition'] = array(
    'title' => 'Competition',
    'title callback' => 'predictiongame_object_title',
    'title arguments' => array(1, 'Prediction game of !name'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('predictiongame_form_list_matches', 3, 1),
    'access arguments' => array('administer predictiongame'),
    'file' => 'predictiongame.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function predictiongame_permission() {
  $perms['view predictiongame'] = array(
    'title' => t('View prediction game data'),
  );
  $perms['use predictiongame'] = array(
    'title' => t('Use prediction games'),
    'description' => t('Participate in prediction games by making own bets.'),
  );
  $perms['manage predictiongame'] = array(
    'title' => t('Manage prediction games'),
    'description' => t('Create teams, competitions and matches, set and edit scores.'),
  );
  $perms['administer predictiongame'] = array(
    'title' => t('Administer prediction games'),
    'description' => t('Delete game data, view user bets.'),
  );

  return $perms;
}

/**
 * Implements hook_theme().
 */
function predictiongame_theme() {
  $themes['predictiongame_match_table'] = array(
    'render element' => 'element',
    'file' => 'predictiongame.pages.inc',
  );
  $themes['predictiongame_admin_match_view'] = array(
    'variables' => array(
      'title' => NULL,
      'match' => NULL,
      'time' => NULL,
      'done' => FALSE,
      'competition' => NULL,
      'competition_link' => NULL,
      'bets' => array(),
    ),
    'file' => 'predictiongame.admin.inc',
  );

  return $themes;
}

/**
 * Generic title callback for predictiongame objects.
 */
function predictiongame_object_title($obj, $text = NULL) {
  $title = isset($obj->name) ? $obj->name : '';
  return isset($text) ? t($text, array('!name' => $title)) : $title;
}

/**
 * Load function for a team.
 *
 * @param $id
 *   The team's ID.
 *
 * @return
 *   An object containing the team's data if it exists, NULL otherwise.
 */
function predictiongame_team_load($id) {
  return db_query('SELECT * FROM {predictiongame_team} WHERE id = :id', array(':id' => $id))->fetch();
}

/**
 * Load function for a competition.
 *
 * @param $id
 *   The competition's ID or short name.
 *
 * @return
 *   An object containing the competition's data if it exists, NULL otherwise.
 */
function predictiongame_competition_load($id) {
  if (is_numeric($id)) {
    $comp = db_query('SELECT * FROM {predictiongame_competition} WHERE id = :id', array(':id' => $id))->fetch();
  }
  else {
    $comp = db_query('SELECT * FROM {predictiongame_competition} WHERE shortname = :name', array(':name' => $id))->fetch();
  }
  if (!empty($comp->options)) {
    $comp->options = unserialize($comp->options);
  }
  return $comp;
}

/**
 * Saves a competition. Inserts a new one if $comp->id is not set or if
 * $comp->is_new is TRUE.
 *
 * @param $comp
 *   The competition to insert or update.
 */
function predictiongame_competition_save($comp) {
  $insert = !isset($comp->id) || !empty($comp->is_new);
  if (empty($comp->name) || empty($comp->shortname) || !isset($comp->options)) {
    throw Exception(t('A required field was not set.'));
  }

  $fields = array(
    'name' => $comp->name,
    'shortname' => $comp->shortname,
    'options' => serialize($comp->options),
  );
  if ($insert) {
    if (isset($comp->id)) {
      $fields['id'] = $comp->id;
    }
    $query = db_insert('predictiongame_competition');
  }
  else {
    $query = db_update('predictiongame_competition')
      ->condition('id', $comp->id);
  }

  $id = $query
    ->fields($fields)
    ->execute();

  if (!isset($comp->id)) {
    $comp->id = $id;
  }
}

/**
 * Load function for a match.
 *
 * @param $id
 *   The match's ID.
 *
 * @return
 *   An object containing the match's data if it exists, NULL otherwise.
 */
function predictiongame_match_load($id) {
  return db_query('SELECT * FROM {predictiongame_match} WHERE id = :id', array(':id' => $id))->fetch();
}

/**
 * Load function for a bet.
 *
 * @param $id
 *   The bet's ID.
 *
 * @return
 *   An object containing the bet's data if it exists, NULL otherwise.
 */
function predictiongame_bet_load($id) {
  return db_query('SELECT * FROM {predictiongame_bet} WHERE id = :id', array(':id' => $id))->fetch();
}
