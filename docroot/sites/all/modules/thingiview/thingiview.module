<?php
/**
 * @file
 * Main module file for the ThingiView project.
 */

/**
 * Implements hook_field_formatter_info().
 */
function thingiview_field_formatter_info() {
  return array(
    'thingiview_3d_viewer' => array(
      'label' => t('3D View'),
      'field types' => array('file'),
      'settings' => array(
        'object_color' => 'C0D8F0',
        'width' => '300',
        'height' => '300',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function thingiview_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();

  if ($display['type'] == 'thingiview_3d_viewer') {
    $element['object_color'] = array(
      '#title' => t('Object color'),
      '#type' => 'textfield',
      '#default_value' => $settings['object_color'],
      '#element_validate' => array('thingiview_element_validate_object_color'),
      '#field_prefix' => '#',
      '#maxlength' => 6,
      '#required' => TRUE,
      '#size' => 8,
    );
    $element['width'] = array(
      '#title' => t('Width'),
      '#type' => 'textfield',
      '#default_value' => $settings['width'],
      '#element_validate' => array('element_validate_integer_positive'),
      '#field_suffix' => 'px',
      '#maxlength' => 4,
      '#required' => TRUE,
      '#size' => 8,
    );
    $element['height'] = array(
      '#title' => t('Height'),
      '#type' => 'textfield',
      '#default_value' => $settings['height'],
      '#element_validate' => array('element_validate_integer_positive'),
      '#field_suffix' => 'px',
      '#maxlength' => 4,
      '#required' => TRUE,
      '#size' => 8,
    );
  }

  return $element;
}

/**
 * Form element validation handler for color elements.
 */
function thingiview_element_validate_object_color($element, &$form_state) {
  if (!preg_match('/^([a-f0-9]{3}){1,2}$/iD', $element['#value'])) {
    form_error($element, t('%name must be a valid hexadecimal CSS color value.', array('%name' => $element['#title'])));
  }
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function thingiview_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  if ($display['type'] == 'thingiview_3d_viewer') {
    $summary[] = t('Object color: #@color', array('@color' => $settings['object_color']));
    $summary[] = t('Object width: @width pixels', array('@width' => $settings['width']));
    $summary[] = t('Object height: @height pixels', array('@height' => $settings['height']));
  }

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function thingiview_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $elements = array();
  foreach ($items as $delta => $item) {
    $elements[$delta] = array(
      '#theme' => 'thingiview_viewer',
      '#file' => (object) $item,
      '#color' => $display['settings']['object_color'],
      '#width' => $display['settings']['width'],
      '#height' => $display['settings']['height'],
    );
  }
  return $elements;
}

/**
 * Implements hook_libraries_info().
 */
function thingiview_libraries_info() {
  $libraries['thingiview.js'] = array(
    'name' => 'Thingiview 3D Viewer',
    'vendor url' => 'https://github.com/tbuser/thingiview.js',
    'download url' => 'https://github.com/tbuser/thingiview.js',
    'path' => 'javascripts',
    'version' => 'master',
    'files' => array(
      'js' => array(
        'Three.js',
        'plane.js',
        'thingiview.js',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_theme().
 */
function thingiview_theme() {
  return array(
    'thingiview_viewer' => array(
      'variables' => array(
        'file' => NULL,
        'color' => NULL,
        'width' => NULL,
        'height' => NULL,
      ),
    ),
  );
}

/**
 * Theme callback for Thingiview Viewer.
 */
function theme_thingiview_viewer($variables) {
  $library = libraries_load('thingiview.js');
  drupal_add_js(array(
    'thingiview' => array(
      'thingiurlbase' => base_path() . $library['library path'] . '/' . $library['path'],
      'ObjectColor' => '#' . $variables['color'],
      'file' => file_create_url($variables['file']->uri),
    )
  ), 'setting');
  drupal_add_js(drupal_get_path('module', 'thingiview') . '/thingiview.js');
  return '<div id="viewer" style="width:' . $variables['width'] . 'px;height:' . $variables['height'] . 'px"></div>';
}
