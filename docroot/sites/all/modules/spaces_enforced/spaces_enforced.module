<?php

/*
 * Implements hook_permission().
 */
function spaces_enforced_permission() {
  return array(
    'administer spaces_enforced' => array(
      'title' => t('administer Spaces Enforced.'),
      'description' => t('Perform administration tasks for Spaces Enforced.'),
    ),
  );
}

/*
 * Implements hook_menu()
 */
function spaces_enforced_menu() {
  $items['admin/config/system/spaces-enforced'] = array(
    'title' => 'Spaces Enforced Settings',
    'description' => 'Configure Spaces Enforced',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spaces_enforced_configuration_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer spaces_enforced'),
  );
  return $items;
}

/*
 * Spaces Enforced configuration form.
 */
function spaces_enforced_configuration_form() {
  $form = array();
  $form['spaces_enforced_defchar'] = array(
    '#type' => 'textfield',
    '#title' => t('Default character'),
    '#description' => t('Enter the default character for Spaces Enforced'),
    '#size' => 5,
    '#default_value' => variable_get('spaces_enforced_defchar', ' '),
  );
  $form['spaces_enforced_occurence'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of occurences'),
    '#description' => t('How many times should the above character occur?'),
    '#size' => 5,
    '#default_value' => variable_get('spaces_enforced_occurence', 1),
  );
  $form['#validate'] = array('spaces_enforced_configuration_form_validate');
  return system_settings_form($form);
}

/* 
 * Checks if value is number.
 */
function spaces_enforced_configuration_form_validate($form, $form_state) {
  if (!is_numeric(trim($form_state['values']['spaces_enforced_occurence']))) {
    form_set_error('spaces_enforced_occurence', t('You must enter only digits.'));
  }
}

/*
 * Implementes hook_form_FORM_ID_alter().
 */
function spaces_enforced_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  $defchar = variable_get('spaces_enforced_defchar', ' ');
  $occurence = variable_get('spaces_enforced_occurence', 1);
  if ($user->uid == 0) {
    $form['account']['name']['#description'] = (!variable_get('spaces_enforced_defchar')) ? str_replace('Spaces are allowed', 'Spaces must be used', $form['account']['name']['#description']) : t('You must include at least @occurence @defchar in your username.', array('@occurence' => $occurence, '@defchar' => (variable_get('spaces_enforced_defchar')) ? str_replace($defchar, ' ', '<space>') : $defchar));
    $form['account']['name']['#attributes'] = array('alt' => t('Spaces are allowed; punctuation is not allowed except for periods, hyphens, apostrophes, and underscores.'));
    $form['#validate'] = array('spaces_enforced_validate_register_form');
  }
}

/*
 * Registeration validation function.
 */
function spaces_enforced_validate_register_form($form, $form_state) {
  $name = $form_state['values']['name'];
  $defchar = variable_get('spaces_enforced_defchar', ' ');
  $occurence = variable_get('spaces_enforced_occurence', '1');
  if (substr_count($name, $defchar) < $occurence) {
    form_set_error('name', t('You have to use at least @occurence @defchar in your username.', array('@occurence' => $occurence, '@defchar' => (variable_get('spaces_enforced_defchar')) ? str_replace($defchar, ' ', '<space>') : $defchar)));
  }
}
