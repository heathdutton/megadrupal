<?php
/**
 * @file
 * Instllation file for inline devel.
 */

/**
 * Implements hook_install().
 */
function inline_devel_install() {
  variable_set('ctrl_s_enable', TRUE);
  variable_set('esc_enable', TRUE);
  variable_set('spaces_instead_of_tabs', TRUE);
  variable_set('number_of_spaces', 2);
  variable_set('show_colored_code', FALSE);
}

/**
 * Implements hook_uninstall().
 */
function inline_devel_uninstall() {
  variable_del('ctrl_s_enable');
  variable_del('esc_enable');
  variable_del('spaces_instead_of_tabs');
  variable_del('number_of_spaces');
  variable_del('show_colored_code');
}

/**
 * Implements hook_schema().
 */
function inline_devel_schema() {
  $schema = array();

  $schema['inline_devel'] = array(
    'description' => 'Base table of the inline devel hooks.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier of the entry.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'time' => array(
        'description' => 'The timestamp the entry was created',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The user created the entry.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'description' => 'Holds the information for the functions: name, arguments and content.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Creating the schema for the inline devel module.
 */
function inline_devel_update_7200() {
  $schemes = inline_devel_schema();

  foreach ($schemes as $name => $info) {
    db_create_table($name, $info);
  }
}
