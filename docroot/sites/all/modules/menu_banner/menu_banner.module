<?php

/**
 * Implements hook_menu().
 */
function menu_banner_menu() {
  $items = array();
  $items['admin/config/user-interface/menu-banner'] = array(
    'title' => 'Menu banner',
    'description' => 'Menu banner settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('menu_banner_settings'),
    'access arguments' => array('administer menu banner'),
    'file' => 'menu_banner.admin.inc',
    'context' => MENU_CONTEXT_INLINE,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function menu_banner_permission() {
  return array(
    'administer menu banner' => array(
      'title' => t('Administer Menu banner settings'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function menu_banner_block_info() {
  $blocks['main'] = array(
    'info' => t('Menu banner'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function menu_banner_block_view($delta = '') {
  $trail = menu_banner_get_active_trail();
  $banner = menu_banner_load_current($trail);
  $active_link = end($trail);
  if (empty($banner['image']) && empty($banner['text'])) {
    return;
  }
  if (!empty($banner['image'])) {
    $image = file_load($banner['image']);
  }
  else {
    $image = array();
  }
  $data['subject'] = t('Menu banner');
  $data['content'] = array(
    '#theme' => 'menu_banner',
    '#banner' => $banner,
    '#image' => $image,
    '#mlid' => isset($active_link['mlid']) ? $active_link['mlid'] : 0,
  );

  return $data;
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function menu_banner_contextual_links_view_alter(&$element, &$items) {
  if (isset($element['#element']['#block']) && $element['#element']['#block']->module == 'menu_banner') {
    $mlid = $element['#element']['#mlid'];
    if (user_access('administer menu') && $mlid) {
      $element['#links']['menu_link_edit'] = array(
        'title' => t('Edit active menu link'),
        'href' => url('admin/structure/menu/item/' . $mlid . '/edit', array(
          'absolute' => TRUE,
          'query' => drupal_get_destination(),
        )),
      );
    }
    if (user_access('administer menu banner')) {
      $element['#links']['menu_banner_setting'] = array(
        'title' => t('Menu banner settings'),
        'href' => url('admin/config/user-interface/menu-banner', array(
          'absolute' => TRUE,
          'query' => drupal_get_destination(),
        )),
      );
    }
  }
}

/**
 * Implements hook_theme().
 */
function menu_banner_theme() {
  return array(
    'menu_banner' => array(
      'variables' => array(
        'banner' => NULL,
        'image' => NULL,
        'mlid' => NULL,
      ),
    ),
  );
}

/**
 * Themes a menu banner.
 *
 * @param array $variables
 *   Includes the 'shop_number', 'shop_variant' and 'total_cost' variables.
 */
function theme_menu_banner($variables) {
  $image = $variables['image'];
  $banner = $variables['banner'];
  $mlid = $variables['mlid'];

  $output = '<div id="menu-banner-mlid-' . $mlid . '" class="menu-banner">';
  if (!empty($banner['text']['value'])) {
    $output .= check_markup($banner['text']['value'], $banner['text']['format']);
  }
  if ($image) {
    $output .= theme('image', array('path' => $image->uri, 'getsize' => FALSE));
  }
  $output .= '</div>';
  return $output;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function menu_banner_form_menu_edit_item_alter(&$form, &$form_state, $form_id) {
  if (!user_access('administer menu banner')) {
    return;
  }
  $form['menu_banner'] = array(
    '#title' => t('Menu banner'),
    '#type' => 'fieldset',
    '#callapsible' => FALSE,
  );

  // If menu link is edited...
  if (!empty($form['mlid']['#value'])) {
    $mlid = $form['mlid']['#value'];
  }
  else {
    $form['menu_banner']['info'] = array(
      '#markup' => t('Adding banners is possible only while editing (not adding) a menu link.'),
    );
    return;
  }

  $banner_images = variable_get('menu_banner_image', array());
  $banner_image = isset($banner_images[$mlid]) ? $banner_images[$mlid] : '';
  $form['menu_banner']['menu_banner_image'] = array(
    '#title' => t('Banner image'),
    '#type' => 'managed_file',
    '#upload_location' => 'public://menu_banner_images',
    '#default_value' => isset($form['menu_banner']['menu_banner_image']) ? $form['menu_banner']['menu_banner_image']
       : $banner_image,
  );

  $banner_texts = variable_get('menu_banner_text', array());
  $banner_text = isset($banner_texts[$mlid]) ? $banner_texts[$mlid] : array('value' => '', 'format' => filter_default_format());
  $form['menu_banner']['menu_banner_text'] = array(
    '#title' => t('Banner text'),
    '#type' => 'text_format',
    '#default_value' => isset($form['menu_banner']['menu_banner_text']['value'])
       ? $form['menu_banner']['menu_banner_text']['value'] : $banner_text['value'],
    '#rows' => 3,
    '#format' => isset($form['menu_banner']['menu_banner_text']['format']) ? $form['menu_banner']['menu_banner_text']['format']
       : $banner_text['format'],
  );
  $form['#submit'][] = 'menu_banner_form_menu_edit_item_submit';
}

/**
 * Submit handler for menu_banner_form_menu_edit_item_alter().
 */
function menu_banner_form_menu_edit_item_submit(&$form, &$form_state) {
  $banner_text = $form_state['values']['menu_banner_text'];
  $banner_image_fid = $form_state['values']['menu_banner_image'];
  $mlid = $form['mlid']['#value'];

  // Add text.
  $banner_texts = variable_get('menu_banner_text', array());
  if (!empty($banner_text['value'])) {
    $banner_texts[$mlid] = $banner_text;
    variable_set('menu_banner_text', $banner_texts);
  }
  // Delete text.
  else {
    menu_banner_delete_text($mlid);
  }

  // Add image.
  if ($banner_image_fid != 0) {
    $file = file_load($banner_image_fid);
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    file_usage_add($file, 'menu_banner', 'banner_image', 1);

    $banner_images = variable_get('menu_banner_image', array());
    $banner_images[$mlid] = $file->fid;
    variable_set('menu_banner_image', $banner_images);
  }
  // Delete image.
  elseif ($banner_image_fid == 0) {
    menu_banner_delete_image($mlid);
  }
}

/**
 * Loads banner for given menu link ID.
 *
 * @param int $mlid
 *   Menu link ID.
 * @param bool $default
 *   Provide default banneri if there is no banner for requested menu link.
 *
 * @return array
 */
function menu_banner_load($mlid, $default = TRUE) {
  $banner_images = variable_get('menu_banner_image', array());
  $banner_image = isset($banner_images[$mlid]) ? $banner_images[$mlid] : NULL;

  $banner_texts = variable_get('menu_banner_text', array());
  $banner_text = isset($banner_texts[$mlid]) ? $banner_texts[$mlid] : NULL;

  if ($default && !$banner_image && !$banner_text) {
    return menu_banner_load_default();
  }

  return array('image' => $banner_image, 'text' => $banner_text);
}

/**
 * Loads defualt banner.
 */
function menu_banner_load_default() {
  $banner_image = variable_get('menu_banner_default_image', '');
  $banner_text = variable_get('menu_banner_default_text', array());
  if (!$banner_image && !$banner_text) {
    return FALSE;
  }
  return array('image' => $banner_image, 'text' => $banner_text);
}

/**
 * Get current page active trail.
 */
function menu_banner_get_active_trail() {
  if (drupal_is_front_page()) {
    $site_frontpage = variable_get('site_frontpage');
    $mlid = db_query("SELECT mlid FROM {menu_links} WHERE link_path IN(:path, '<front>')", array(':path' => $site_frontpage))->fetchField();
    return array(menu_link_load($mlid));
  }
  else {
    return menu_get_active_trail();
  }
}

/**
 * Load banner for current menu item.
 *
 * @param array $trail
 *
 * @return array
 *   - image
 *   - text
 */
function menu_banner_load_current($trail = array()) {
  global $conf;
  if (empty($trail)) {
    $trail = menu_banner_get_active_trail();
  }
  foreach ($trail as $menu_link) {
    if (isset($menu_link['mlid']) && isset($conf['menu_banner_image'][$menu_link['mlid']])) {
      return menu_banner_load($menu_link['mlid'], FALSE);
    }
  }
  return menu_banner_load_default();
}

/**
 * Delete menu banner.
 *
 * @param int $mlid
 *   Menu link ID related with banner.
 */
function menu_banner_delete($mlid) {
  menu_banner_delete_image($mlid);
  menu_banner_delete_text($mlid);
}

/**
 * Delete image of menu banner.
 *
 * @param int $mlid
 *   Menu link ID related with banner.
 */
function menu_banner_delete_image($mlid) {
  $banner_images = variable_get('menu_banner_image', array());
  if (isset($banner_images[$mlid])) {
    $file = file_load($banner_images[$mlid]);
    if ($file) {
      file_usage_delete($file, 'menu_banner', 'banner_image', 1);
      file_delete($file);
    }
    unset($banner_images[$mlid]);
    variable_set('menu_banner_image', $banner_images);
  }
}

/**
 * Delete text of menu banner.
 *
 * @param int $mlid
 *   Menu link ID related with banner.
 */
function menu_banner_delete_text($mlid) {
  $banner_texts = variable_get('menu_banner_text', array());
  if (isset($banner_texts[$mlid])) {
    unset($banner_texts[$mlid]);
    variable_set('menu_banner_text', $banner_texts);
  }
}
