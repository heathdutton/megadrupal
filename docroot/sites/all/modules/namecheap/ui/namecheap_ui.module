<?php
/**
 * @file
 * Provides primary Drupal hook implementations.
 *
 * @author Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Implements hook_menu().
 */
function namecheap_ui_menu() {
  $items = array();

  $items['admin/config/services/namecheap'] = array(
    'title' => 'Namecheap',
    'description' => 'Configure the Namecheap SDK settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('namecheap_settings_form'),
    'access arguments' => array('access administration pages'),
  );

  return $items;
}

/**
 * Settings form.
 */
function namecheap_settings_form($form, &$form_state) {
  $form['required'] = array(
    '#type' => 'fieldset',
    '#title' => t('Required'),
    '#description' => t('The following fields are required by the SDK, but may be passed directly to the functions instead.'),
  );
  $form['required']['namecheap_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Namecheap username'),
    '#default_value' => variable_get('namecheap_username', ''),
    '#required' => TRUE,
  );
  $form['required']['namecheap_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Namecheap API key'),
    '#default_value' => variable_get('namecheap_password', ''),
    '#required' => TRUE,
  );
  $form['required']['namecheap_testmode'] = array(
    '#type' => 'checkbox',
    '#title' => t('Test mode'),
    '#default_value' => variable_get('namecheap_testmode', FALSE),
    '#description' => t('If checked api.sandbox.namecheap.com will be used instead of production (use while testing).'),
  );

  $form['#submit'][] = 'namecheap_settings_form_submit';
  return system_settings_form($form);
}

/**
 * Clear config cache to new settings take effect.
 */
function namecheap_settings_form_submit($form, &$form_state) {
  // Set namecheap_testmode to bool TRUE.
  if ($form_state['values']['namecheap_testmode']) {
    $form_state['values']['namecheap_testmode'] = TRUE;
  }

  cache_clear_all('namecheap_params', 'cache');
}
