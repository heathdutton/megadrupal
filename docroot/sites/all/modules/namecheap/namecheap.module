<?php
/**
 * @file
 * Provides primary Drupal hook implementations.
 *
 * @author Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Denotes "Namecheap" minimum version number.
 */
define('NAMECHEAP_MINIMUM_VERSION', '1.1.8');

/**
 * Implements hook_libraries_info()
 */
function namecheap_libraries_info() {
  return array(
    'namecheap' => array(
      'title' => 'Namecheap',
      'vendor url' => 'http://code.google.com/p/namecheap',
      'download url' => 'http://namecheap.googlecode.com/files/namecheap-1.1.8.zip',
      'path' => 'registrars/namecheap',
      'version arguments' => array(
        'file' => 'registrars/namecheap/namecheap.php',
        'pattern' => "/\* Version (.*?)\s+\*/",
        'lines' => 50,
      ),
      'files' => array(
        'php' => array(
          'namecheap.php',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_requirements()
 */
function namecheap_requirements($phase) {
  $t = get_t();
  $requirements = array();

  // None of these requirements are relevant outside of runtime.
  if ($phase != 'runtime') {
    return $requirements;
  }

  $info = libraries_load('namecheap');
  if (!$info['library path']) {
    $requirements['namecheap'] = array(
      'severity' => REQUIREMENT_ERROR,
      'title' => $t('Namecheap'),
      'value' => $t('Failed to load the Namecheap SDK'),
      'description' => $t('Please make sure the Namecheap library is installed in the libraries directory. Use the drush make file for easy installation.'),
    );
  }
  else if(!$info['version'] || version_compare($info['version'], NAMECHEAP_MINIMUM_VERSION) < 0) {
    $requirements['namecheap'] = array(
      'severity' => REQUIREMENT_ERROR,
      'title' => $t('Namecheap'),
      'value' => $info['version'],
      'description' => $t('Please make sure the Namecheap library installed is ' . NAMECHEAP_MINIMUM_VERSION . ' or greater.'),
    );
  }
  else {
    global $base_url;
    $requirements['namecheap'] = array(
      'severity' => REQUIREMENT_OK,
      'title' => $t('Namecheap'),
      'value' => $info['version'],
    );
  }

  return $requirements;
}

/**
 * Load the default Namecheap settings and apply variable overrides.
 *
 * @return
 *   An associative array containing Namecheap setting values.
 */
function namecheap_params() {
  if (!($config = &drupal_static(__FUNCTION__))) {
    $config = ($cache = cache_get(__FUNCTION__)) ? $cache->data : array();
  }

  if (!$config) {
    $config = array(
      'TestMode' => FALSE,
      'Username' => '',
      'Password' => '',
    );

    // Look for variables for each key and pull in the values.
    foreach ($config as $key => $value) {
      if (($value = variable_get('namecheap_' . strtolower($key))) !== NULL) {
        $config[$key] = $value;
      }
    }

    if ($config['TestMode']) {
      $config['SandboxUsername'] = $config['Username'];
      $config['SandboxPassword'] = $config['Password'];
    }

    cache_set(__FUNCTION__, $config);
  }

  return $config;
}
