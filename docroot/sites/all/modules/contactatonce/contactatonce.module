<?php 

/**
 * Implements hook_theme().
 * @return array
 */
function contactatonce_theme() {
  $themes = array();
  $themes['contactatonce_block'] = array();

  return $themes;
}

/**
 * Implements hook_menu().
 */
function contactatonce_menu() {
  $items['admin/config/system/contactatonce'] = array(
    'title' => 'Contact-at-Once',
    'description' => 'Define contact-at-once configuration settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contactatonce_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'contactatonce.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_block_info().
 * @return array
 */
function contactatonce_block_info() {
  $blocks = array();
  $blocks['contactatonce_block'] = array(
    'info' => t('Contact-at-Once Block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function contactatonce_block_configure($delta = '') {
  $form = array();
  
  if ($delta = 'contactatonce_block') {
    
    $form['contactatonce_block_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('Block link settings'),
    );
    
    $form['contactatonce_block_settings']['contactatonce_block_link_content'] = array(
      '#type' => 'radios',
      '#title' => t('Choose the type of content for the contact at once link.'),
      '#default_value' => variable_get('contactatonce_block_link_content', 0),
      '#options' => array(0 => t('Image'), 1 => t('Text')),
    );
    
    $form['contactatonce_block_settings']['contactatonce_block_image'] = array(
      '#type' => 'select',
      '#title' => t('Choose image source'),
      '#default_value' => variable_get('contactatonce_block_image', 0),
      '#options' => array(0 => t('Default'), 1 => t('Custom')),
      '#description' => t('Choose the type of image to be used for the block.'),
      '#states' => array(
        'visible' => array(
          ':input[name="contactatonce_block_link_content"]' => array('value' => 0),
        ),
      ),
    );
    
    $form['contactatonce_block_settings']['contactatonce_block_text'] = array(
      '#type' => 'textfield',
      '#title' => t('Enter text.'),
      '#default_value' => variable_get('contactatonce_block_text'),
      '#description' => t('Enter the text to be used for the contact at once link.'),
      '#states' => array(
        'visible' => array(
          ':input[name="contactatonce_block_link_content"]' => array('value' => 1),
        ),
      ),
    );
    
    $form['contactatonce_block_settings']['contactatonce_block_custom_image_fid'] = array(
      '#type' => 'managed_file',
      '#title' => t('Choose custom image'),
      '#default_value' => variable_get('contactatonce_block_custom_image_fid', ''),
      '#description' => t('Upload an the image to be used for the block. Only *.gif, *.png,
                          *.jpg and *.jpeg file extensions are allowed.'),
      '#upload_validators' => array(
        'file_validate_extensions' => array('png gif jpg jpeg'),
      ),
      '#upload_location' => 'public://',
      '#states' => array(
        'visible' => array(
          ':input[name="contactatonce_block_image"]' => array('value' => 1),
          ':input[name="contactatonce_block_link_content"]' => array('value' => 0),
        ),
      ),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function contactatonce_block_save($delta = '', $edit = array()) {
  if ($delta == 'contactatonce_block') {
    variable_set('contactatonce_block_link_content',$edit['contactatonce_block_link_content']);
    variable_set('contactatonce_block_image',$edit['contactatonce_block_image']);
    variable_set('contactatonce_block_text',$edit['contactatonce_block_text']);
    _contactatonce_save_managed_file($delta, $edit);
  }
}

/**
 * Helper function save the managed file image.
 * @param string $delta the custom block Id.
 * @param array $edit The edit contain the form variables set in block config.
 */
function _contactatonce_save_managed_file($delta = '', $edit = array()) {
    
    // Saving the file, setting it to a permanent state, setting the FID variable.
    $file = file_load($edit['contactatonce_block_custom_image_fid']);
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    $block = block_load('contactatonce', $delta);
    file_usage_add($file, 'contactatonce', 'block', $block->bid);
    variable_set('contactatonce_block_custom_image_fid', $file->fid);    
}

/**
 * Implements hook_block_view().
 * @param string $delta
 * @return array
 */
function contactatonce_block_view($delta = '') {
  switch ($delta) {
    default:
      $block['subject'] = '';
      $block['content'] = theme('contactatonce_block');
      break;
  }
  return $block;
}

/**
 * Peprocess function to deal with preparing the contact at once widget variables.
 */
function contactatonce_preprocess_contactatonce_block(&$vars) {
  $vars['merchant_id'] = $merchant_id = variable_get('contactatonce_merchant_id');
  $vars['provider_id'] = $provider_id = variable_get('contactatonce_provider_id');
  
  // Load the variables to determine the contents of the chat link.
  $vars['chat-link'] = l(_generate_chat_link_content(), '', array('external' => TRUE, 'html' => TRUE, 'fragment' => 'livechat', 'attributes' => array('class' => array('contactatonce-livechat'))));
}

/**
 * Helper function to generate the content for the chat link.
 * @return string the markup for the content to go inside the chat link.
 */
function _generate_chat_link_content() {
  $markup = '';
  $cao_link_content = variable_get('contactatonce_block_link_content', 0);
  if ($cao_link_content == 0) {
    $cao_image_source = variable_get('contactatonce_block_image', 0);
    if ($cao_image_source == 0) {
      $image_source = '/' . drupal_get_path('module', 'contactatonce') . '/chat-img.png';
    }
    else {
      $custom_image_fid = variable_get('contactatonce_block_custom_image_fid');
      $file = file_load($custom_image_fid);
      $uri = $file->uri;  // Get the uri of the file.
      $image_source = file_create_url($uri);
    }
    $markup = '<img src=' . $image_source . ' class="live-chat-img" />';
  }
  else {
    $markup = t(check_plain(variable_get('contactatonce_block_text')));
  }
  return $markup;
}

/**
 * Theme function to generate the output for the contact at once block.
 */
function theme_contactatonce_block($vars) {

  $output  = "<!--Live Chat Button-->";
  $output .= $vars['chat-link'];

  return $output;
}

/**
 * Implements hook_init().
 */
function contactatonce_init() {

  // Ensure the widget only appears for front end pages.
  if (!path_is_admin(current_path())) {
    $merchant_id = variable_get('contactatonce_merchant_id');
    $provider_id = variable_get('contactatonce_provider_id');
  
    drupal_add_js('http://dm1.contactatonce.co.uk/scripts/PopIn.js', 'external');
    drupal_add_js('http://dm1.contactatonce.co.uk/PopInGenerator.aspx?MerchantId='. $merchant_id . '&ProviderId=' . $provider_id . '&PlacementId=0', 'external');
  
    $contactatonce = array(
      'merchantId' => $merchant_id,
      'providerId' => $provider_id,
    );
    drupal_add_js(array('contactatonce' => $contactatonce), 'setting');
    drupal_add_js(drupal_get_path('module', 'contactatonce') . '/contactatonce.js', 'file');
  }
}
