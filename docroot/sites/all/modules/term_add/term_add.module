<?php

/**
 * Implements hook_theme().
 */

function term_add_menu() {
  $items = array();
  $vocs = taxonomy_get_vocabularies();
  if (count($vocs)) {
    $items['term/add'] = array(
      'title' => 'Add to vocabulary',
      'page callback' => 'term_add_root_page',
      'access callback' => 'term_add_page_root_check_access',
    );
    foreach ($vocs as $voc_info) {
      $items["term/add/$voc_info->machine_name"] = array(
        'type' => MENU_NORMAL_ITEM,
        'title' => $voc_info->name,
        'page callback' => 'drupal_get_form',
        'page arguments' => array('taxonomy_form_term', array(), taxonomy_vocabulary_machine_name_load($voc_info->machine_name)),
        'file' => 'taxonomy.admin.inc',
        'file path' => drupal_get_path('module', 'taxonomy'),
        'access callback' => 'term_add_form_check_access',
        'access arguments' => array($voc_info->machine_name),
      );
    }
  }
  return $items;
}

function term_add_page_root_check_access() {
  foreach (taxonomy_get_vocabularies() as $voc_info) {
    if (user_access("add terms to $voc_info->machine_name")) {
      return true;
    }
  }
  return false;
}

function term_add_form_check_access($voc_name) {
  return user_access("add terms to $voc_name");
}

/**
 * Implements hook_permission
 */

function term_add_permission() {
  $permissions = array();
  foreach (taxonomy_get_vocabularies() as $voc_info) {
    $permissions["add terms to $voc_info->machine_name"] = array(
      'title' => t('Add terms to %name', array('%name' => $voc_info->name)),
    );
  }
  return $permissions;
}

/**
 * Implements hook_theme().
 */

function term_add_theme() {
  return array(
    'term_add_list' => array(
      'variables' => array('links' => NULL),
    ),
  );
}

/**
 * theme_term_add_list
 */

function theme_term_add_list($vars) {
  $links = $vars['links'];
  $output = '';
  if ($links) {
    $output = '<dl class="term-add-list">';
    foreach ($links as $info) {
      $output.= '<dt>'.l($info['title'], $info['url']).'</dt>';
      $output.= '<dd>'.filter_xss_admin($info['description']).'</dd>';
    }
    $output.= '</dl>';
  }
  return $output;
}

/**
 * term_add_root_page
 */

function term_add_root_page() {
  $links = array();
  foreach (taxonomy_get_vocabularies() as $voc_info) {
    if (user_access("add terms to $voc_info->machine_name")) {
      $links[]= array(
        'url' => "term/add/$voc_info->machine_name",
        'title' => $voc_info->name,
        'description' => $voc_info->description,
      );
    }
  }
  if (count($links) == 1) {
    $first_link = reset($links);
    drupal_goto($first_link['url']);
  } else {
    return theme('term_add_list', array('links' => $links));
  }
}

/**
 * Implements hook_form_taxonomy_form_term_alter
 */

function term_add_form_taxonomy_form_term_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = strpos($form['#action'], '/term/add/') === false ? 'term_add_form_default_submit' : 'term_add_form_my_submit';
}

function term_add_form_default_submit($form, &$form_state) {
  if ($form_state['clicked_button']['#value'] == t('Delete') && !user_access('administer taxonomy')) {
    $form_state['redirect'] = '';
  }
}

function term_add_form_my_submit($form, &$form_state) {
  $form_state['redirect'] = 'taxonomy/term/'.$form_state['tid'];
}

/**
 * Implements hook_taxonomy_vocabulary_insert
 * Implements hook_taxonomy_vocabulary_delete
 */

function term_add_taxonomy_vocabulary_insert($vocabulary) {menu_rebuild();}
function term_add_taxonomy_vocabulary_delete($vocabulary) {menu_rebuild();}



