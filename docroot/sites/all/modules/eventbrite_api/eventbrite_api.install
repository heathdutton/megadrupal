<?php

/**
 * @file
 * Performs database schema, install and uninstall functions for the Eventbrite module.
 */

/**
 * Implements hook_requirements().
 */
function eventbrite_api_requirements($phase) {
  // The array that we will return.
  $requirements = array();
  // We only need the "runtime" phase.
  if ($phase == 'runtime') {
    // Installation version of t().
    $t = get_t();
    // Load the library.
    $library = libraries_detect('eventbrite');
    // If the library is not installed.
    if (empty($library['installed'])) {
      // Build the requirements array.
      $requirements['eventbrite'] = array(
        'title' => $t('Eventbrite'),
        'value' => $t('Not found'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('You need to download !eventbrite_php and place it into a directory named eventbrite in the %path directory on your server.', array(
          '!eventbrite_php' => l($t('eventbrite.php'), $library['download url']),
          '%path' => 'sites/all/libraries'
        )),
      );
    }
    // Let the user know that it's working.
    else {
      // Build the requirements array.
      $requirements['eventbrite'] = array(
        'title' => $t('Eventbrite'),
        'value' => $t('Found'),
        'severity' => REQUIREMENT_OK,
        'description' => $t('The eventbrite.php library is installed.'),
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_schema().
 */
function eventbrite_api_schema() {
  $schema['eventbrite_api_events'] = array(
    'description' => 'The base table for Eventbrite events.',
    'fields' => array(
      'eid' => array(
        'description' => 'The primary identifier for an event.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'oid' => array(
        'description' => 'The id of the event organiser.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The id of the associated venue.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'locale' => array(
        'description' => 'The language for the event.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'timezone' => array(
        'description' => 'The event timezone.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'category' => array(
        'description' => 'The category for the event.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'capacity' => array(
        'description' => 'The id of the event organiser.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'num_attendee_rows' => array(
        'description' => 'The number of attendees that have registered for the event.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The event title.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'start_date' => array(
        'description' => 'The event start date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'The status of the event.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'The event description.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'end_date' => array(
        'description' => 'The event end date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'tags' => array(
        'description' => 'Event tags/keywords.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'timezone_offset' => array(
        'description' => 'The offset of the timezone for the event.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'password' => array(
        'description' => 'The password for a private event.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The date on which the event was created.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'The Eventbrite URL for the event.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'privacy' => array(
        'description' => 'Whether an event is public or private.',
        'type' => 'varchar',
        'length' => 7,
        'not null' => TRUE,
        'default' => '',
      ),
      'modified' => array(
        'description' => 'The date on which the event was last modified.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'repeats' => array(
        'description' => 'Whether an event is repeating or not, and if it is, the repetition format.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'event_modified' => array('modified'),
      'event_created' => array('created'),
    ),
    'foreign keys' => array(
      'oid' => array(
        'table' => 'eventbrite_api_organizers',
        'columns' => array('oid' => 'oid'),
      ),
    ),
    'primary key' => array('eid'),
  );
  $schema['eventbrite_api_organizers'] = array(
    'description' => 'The table for event organizers.',
    'fields' => array(
      'oid' => array(
        'description' => 'The primary identifier for an event organizer.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the event organizer.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'The description of the event organizer.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'long_description' => array(
        'description' => 'The longdescription of the event organizer.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'url' => array(
        'description' => 'The Eventbrite URL for the event.',
        'type' => 'varchar',
        'length' => 2048,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'organizer_name' => array('name'),
    ),
    'primary key' => array('oid'),
  );
  $schema['eventbrite_api_tickets'] = array(
    'description' => 'The table for event tickets.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary identifier for an event ticket.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'eid' => array(
        'description' => 'The id of the associated event.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The ticket name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'Whether a ticket is fixed price or donation.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The ticket description.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'start_date' => array(
        'description' => 'The ticket sale start date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'end_date' => array(
        'description' => 'The ticket sale end date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'min' => array(
        'description' => 'The minimum ticket quantity per order.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'max' => array(
        'description' => 'The maximum ticket quantity per order.',
        'type' => 'int',
        'unsigned' => TRUE,
      ),
      'price' => array(
        'description' => 'The price of the ticket.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'quantity_sold' => array(
        'description' => 'The number of the ticket sold.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'visible' => array(
        'description' => 'Whether the ticket is visible on the event registration page.',
        'type' => 'varchar',
        'length' => 5,
        'not null' => TRUE,
        'default' => '',
      ),
      'currency' => array(
        'description' => 'The ticket currency.',
        'type' => 'varchar',
        'length' => 5,
        'not null' => TRUE,
        'default' => '',
      ),
      'quantity_available' => array(
        'description' => 'The number of the ticket left to purchase.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'display_price' => array(
        'description' => 'The display price of the ticket.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'start_date' => array('start_date'),
      'end_date' => array('end_date'),
    ),
    'foreign keys' => array(
      'eid' => array(
        'table' => 'eventbrite_api_events',
        'columns' => array('eid' => 'eid'),
      ),
    ),
    'primary key' => array('tid'),
  );
  $schema['eventbrite_api_venues'] = array(
    'description' => 'The table for event venues.',
    'fields' => array(
      'vid' => array(
        'description' => 'The primary identifier for an event venue.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'city' => array(
        'description' => 'The venue city.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The venue name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'country' => array(
        'description' => 'The venue country.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'region' => array(
        'description' => 'The venue region.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'address' => array(
        'description' => 'The venue address line 1.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'address_2' => array(
        'description' => 'The venue address line 2.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'postal_code' => array(
        'description' => 'The venue postal code.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'country_code' => array(
        'description' => 'The venue country code.',
        'type' => 'varchar',
        'length' => 2,
        'not null' => TRUE,
        'default' => '',
      ),
      'longitude' => array(
        'description' => 'The venue longitude.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 6,
        'not null' => TRUE,
      ),
      'latitude' => array(
        'description' => 'The venue latitude.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 6,
        'not null' => TRUE,
      ),
      'lat_long' => array(
        'description' => 'The venue latitude and longitude as a string.',
        'type' => 'varchar',
        'length' => 40,
        'not null' => TRUE,
      ),
    ),
    'foreign keys' => array(
      'eid' => array(
        'table' => 'eventbrite_api_events',
        'columns' => array('eid' => 'eid'),
      ),
    ),
    'primary key' => array('vid'),
  );
  $schema['eventbrite_api_attendees'] = array(
    'description' => 'The table for event attendees.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for an event attendee.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'work_postal_code' => array(
        'description' => "The postal code of the attendee's workplace.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'last_name' => array(
        'description' => 'The last name of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_address' => array(
        'description' => 'The first line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'suffix' => array(
        'description' => 'The suffix of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_postal_code' => array(
        'description' => "The postal code of the attendee's home.",
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'tax' => array(
        'description' => 'The tax on the order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'currency' => array(
        'description' => 'The order currency.',
        'type' => 'varchar',
        'length' => 4,
        'not null' => TRUE,
        'default' => '',
      ),
      'prefix' => array(
        'description' => 'The prefix/title of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'first_name' => array(
        'description' => 'The first name of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'order_type' => array(
        'description' => 'The order type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_phone' => array(
        'description' => 'The phone number of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_address_2' => array(
        'description' => 'The second line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_region' => array(
        'description' => 'The region of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_address_2' => array(
        'description' => 'The second line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'blog' => array(
        'description' => 'The blog of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'email' => array(
        'description' => 'The email of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'The id of the associated ticket for this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'work_address' => array(
        'description' => 'The first line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'event_date' => array(
        'description' => 'The event start date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'eventbrite_fee' => array(
        'description' => 'The fee on the order to Eventbrite.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'amount_paid' => array(
        'description' => 'The amount the attendee has paid on this order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'job_title' => array(
        'description' => 'The job title of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'website' => array(
        'description' => 'The website of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_country_code' => array(
        'description' => 'The country code of the home of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_city' => array(
        'description' => 'The city of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_phone' => array(
        'description' => 'The phone number of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'orid' => array(
        'description' => 'The id of this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'company' => array(
        'description' => 'The company of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'barcode' => array(
        'description' => 'The barcode number of the order.',
        // Stored as varchar because bigint is too small.
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_region' => array(
        'description' => 'The region of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_country' => array(
        'description' => 'The country code of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'discount' => array(
        'description' => 'The attendee discount on this order.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_city' => array(
        'description' => 'The city of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_country' => array(
        'description' => 'The country code of the home of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The date the order was created.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'gender' => array(
        'description' => 'The gender of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'notes' => array(
        'description' => 'Notes for this order.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'modified' => array(
        'description' => 'The date the order was last modified.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'cc_fee' => array(
        'description' => 'The credit card fee on this order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'eid' => array(
        'description' => 'The id of this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'work_country_code' => array(
        'description' => 'The country code of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'birth_date' => array(
        'description' => 'The birth date of the attendee.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'cell_phone' => array(
        'description' => 'The cellular/mobile phone number of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'age' => array(
        'description' => 'The age of the attendee.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'quantity' => array(
        'description' => 'The quantity of tickets bought on this order.',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'foreign keys' => array(
      'eid' => array(
        'table' => 'eventbrite_api_events',
        'columns' => array('eid' => 'eid'),
      ),
      'tid' => array(
        'table' => 'eventbrite_api_tickets',
        'columns' => array('tid' => 'tid'),
      ),
    ),
    'primary key' => array('aid'),
  );
  $schema['eventbrite_api_attendees'] = array(
    'description' => 'The table for event attendees.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for an event attendee.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'work_postal_code' => array(
        'description' => "The postal code of the attendee's workplace.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'last_name' => array(
        'description' => 'The last name of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_address' => array(
        'description' => 'The first line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'suffix' => array(
        'description' => 'The suffix of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_postal_code' => array(
        'description' => "The postal code of the attendee's home.",
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'tax' => array(
        'description' => 'The tax on the order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'currency' => array(
        'description' => 'The order currency.',
        'type' => 'varchar',
        'length' => 4,
        'not null' => TRUE,
        'default' => '',
      ),
      'prefix' => array(
        'description' => 'The prefix/title of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'first_name' => array(
        'description' => 'The first name of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'order_type' => array(
        'description' => 'The order type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_phone' => array(
        'description' => 'The phone number of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_address_2' => array(
        'description' => 'The second line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_region' => array(
        'description' => 'The region of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_address_2' => array(
        'description' => 'The second line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'blog' => array(
        'description' => 'The blog of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'email' => array(
        'description' => 'The email of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'The id of the associated ticket for this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'work_address' => array(
        'description' => 'The first line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'event_date' => array(
        'description' => 'The event start date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'eventbrite_fee' => array(
        'description' => 'The fee on the order to Eventbrite.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'amount_paid' => array(
        'description' => 'The amount the attendee has paid on this order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'job_title' => array(
        'description' => 'The job title of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'website' => array(
        'description' => 'The website of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_country_code' => array(
        'description' => 'The country code of the home of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_city' => array(
        'description' => 'The city of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_phone' => array(
        'description' => 'The phone number of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'orid' => array(
        'description' => 'The id of this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'company' => array(
        'description' => 'The company of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'barcode' => array(
        'description' => 'The barcode number of the order.',
        // Stored as varchar because bigint is too small.
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_region' => array(
        'description' => 'The region of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_country' => array(
        'description' => 'The country code of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'discount' => array(
        'description' => 'The attendee discount on this order.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_city' => array(
        'description' => 'The city of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_country' => array(
        'description' => 'The country code of the home of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The date the order was created.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'gender' => array(
        'description' => 'The gender of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'notes' => array(
        'description' => 'Notes for this order.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'modified' => array(
        'description' => 'The date the order was last modified.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'cc_fee' => array(
        'description' => 'The credit card fee on this order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'eid' => array(
        'description' => 'The id of the event related this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'work_country_code' => array(
        'description' => 'The country code of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'birth_date' => array(
        'description' => 'The birth date of the attendee.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'cell_phone' => array(
        'description' => 'The cellular/mobile phone number of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'age' => array(
        'description' => 'The age of the attendee.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'quantity' => array(
        'description' => 'The quantity of tickets bought on this order.',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'foreign keys' => array(
      'eid' => array(
        'table' => 'eventbrite_api_events',
        'columns' => array('eid' => 'eid'),
      ),
      'tid' => array(
        'table' => 'eventbrite_api_tickets',
        'columns' => array('tid' => 'tid'),
      ),
    ),
    'primary key' => array('aid'),
  );
  $schema['eventbrite_api_attendees_answers'] = array(
    'description' => 'The table for event attendees questions and answers.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for an event attendee question.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'qid' => array(
        'description' => 'The qid of this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'answer_text' => array(
        'description' => 'The answer from the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'question' => array(
        'description' => 'The question text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'question_type' => array(
        'description' => 'The type of question.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('aid'),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function eventbrite_api_uninstall() {
  db_query("DELETE FROM {variable} WHERE name LIKE 'eventbrite_api_%'");
}

/**
 * Implements hook_update_N().
 *
 * Adds tables for the support of Eventbrite event attendees.
 *
 */
function eventbrite_api_update_7100() {
  $schema['eventbrite_api_attendees'] = array(
    'description' => 'The table for event attendees.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for an event attendee.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'work_postal_code' => array(
        'description' => "The postal code of the attendee's workplace.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'last_name' => array(
        'description' => 'The last name of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_address' => array(
        'description' => 'The first line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'suffix' => array(
        'description' => 'The suffix of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_postal_code' => array(
        'description' => "The postal code of the attendee's home.",
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'tax' => array(
        'description' => 'The tax on the order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'currency' => array(
        'description' => 'The order currency.',
        'type' => 'varchar',
        'length' => 4,
        'not null' => TRUE,
        'default' => '',
      ),
      'prefix' => array(
        'description' => 'The prefix/title of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'first_name' => array(
        'description' => 'The first name of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'order_type' => array(
        'description' => 'The order type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_phone' => array(
        'description' => 'The phone number of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_address_2' => array(
        'description' => 'The second line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_region' => array(
        'description' => 'The region of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_address_2' => array(
        'description' => 'The second line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'blog' => array(
        'description' => 'The blog of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'email' => array(
        'description' => 'The email of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'The id of the associated ticket for this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'work_address' => array(
        'description' => 'The first line of the home address of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'event_date' => array(
        'description' => 'The event start date.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'eventbrite_fee' => array(
        'description' => 'The fee on the order to Eventbrite.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'amount_paid' => array(
        'description' => 'The amount the attendee has paid on this order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'job_title' => array(
        'description' => 'The job title of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'website' => array(
        'description' => 'The website of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_country_code' => array(
        'description' => 'The country code of the home of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_city' => array(
        'description' => 'The city of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_phone' => array(
        'description' => 'The phone number of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'orid' => array(
        'description' => 'The id of this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'company' => array(
        'description' => 'The company of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'barcode' => array(
        'description' => 'The barcode number of the order.',
        // Stored as varchar because bigint is too small.
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_region' => array(
        'description' => 'The region of the home of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_country' => array(
        'description' => 'The country code of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'discount' => array(
        'description' => 'The attendee discount on this order.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'work_city' => array(
        'description' => 'The city of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'home_country' => array(
        'description' => 'The country code of the home of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The date the order was created.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'gender' => array(
        'description' => 'The gender of the attendee.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => '',
      ),
      'notes' => array(
        'description' => 'Notes for this order.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'modified' => array(
        'description' => 'The date the order was last modified.',
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ),
      'cc_fee' => array(
        'description' => 'The credit card fee on this order.',
        'type' => 'numeric',
        'size' => 'normal',
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'not null' => FALSE,
      ),
      'eid' => array(
        'description' => 'The id of this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'work_country_code' => array(
        'description' => 'The country code of the workplace of the attendee.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '',
      ),
      'birth_date' => array(
        'description' => 'The birth date of the attendee.',
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'default' => '',
      ),
      'cell_phone' => array(
        'description' => 'The cellular/mobile phone number of the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'age' => array(
        'description' => 'The age of the attendee.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'quantity' => array(
        'description' => 'The quantity of tickets bought on this order.',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'foreign keys' => array(
      'eid' => array(
        'table' => 'eventbrite_api_events',
        'columns' => array('eid' => 'eid'),
      ),
      'tid' => array(
        'table' => 'eventbrite_api_tickets',
        'columns' => array('tid' => 'tid'),
      ),
    ),
    'primary key' => array('aid'),
  );
  $schema['eventbrite_api_attendees_answers'] = array(
    'description' => 'The table for event attendees questions and answers.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for an event attendee question.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'qid' => array(
        'description' => 'The qid of this order.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'answer_text' => array(
        'description' => 'The answer from the attendee.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'question' => array(
        'description' => 'The question text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'question_type' => array(
        'description' => 'The type of question.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('aid'),
  );
  db_create_table('eventbrite_api_attendees', $schema['eventbrite_api_attendees']);
  db_create_table('eventbrite_api_attendees_answers', $schema['eventbrite_api_attendees_answers']);
  return $schema;
}

/**
 * Implements hook_update_N().
 *
 * Changes ID fields from unsigned to signed to support negative integers.
 *
 */
function eventbrite_api_update_7101() {
  // Events EID.
  $table = 'eventbrite_api_events';
  $field = $field_new = 'eid';
  $spec = array(
    'description' => 'The primary identifier for an event.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Events OID.
  $table = 'eventbrite_api_events';
  $field = $field_new = 'oid';
  $spec = array(
    'description' => 'The id of the event organiser.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Events VID.
  $table = 'eventbrite_api_events';
  $field = $field_new = 'vid';
  $spec = array(
    'description' => 'The id of the associated venue.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Organizers OID.
  $table = 'eventbrite_api_organizers';
  $field = $field_new = 'oid';
  $spec = array(
    'description' => 'The primary identifier for an event organizer.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Tickets TID.
  $table = 'eventbrite_api_tickets';
  $field = $field_new = 'tid';
  $spec = array(
    'description' => 'The primary identifier for an event ticket.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Tickets EID.
  $table = 'eventbrite_api_tickets';
  $field = $field_new = 'eid';
  $spec = array(
    'description' => 'The id of the associated event.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Venues VID.
  $table = 'eventbrite_api_venues';
  $field = $field_new = 'vid';
  $spec = array(
    'description' => 'The primary identifier for an event venue.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Attendees AID.
  $table = 'eventbrite_api_attendees';
  $field = $field_new = 'aid';
  $spec = array(
    'description' => 'The primary identifier for an event attendee.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Attendees TID.
  $table = 'eventbrite_api_attendees';
  $field = $field_new = 'tid';
  $spec = array(
    'description' => 'The id of the associated ticket for this order.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Attendees ORID.
  $table = 'eventbrite_api_attendees';
  $field = $field_new = 'orid';
  $spec = array(
    'description' => 'The id of this order.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Attendees EID.
  $table = 'eventbrite_api_attendees';
  $field = $field_new = 'eid';
  $spec = array(
    'description' => 'The id of the event related this order.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Attendees Answers AID.
  $table = 'eventbrite_api_attendees_answers';
  $field = $field_new = 'aid';
  $spec = array(
    'description' => 'The primary identifier for an event attendee question.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
  // Attendees Answers QID.
  $table = 'eventbrite_api_attendees_answers';
  $field = $field_new = 'qid';
  $spec = array(
    'description' => 'The qid of this order.',
    'type' => 'int',
    'size' => 'big',
    'unsigned' => FALSE,
    'not null' => TRUE,
  );
  db_change_field($table, $field, $field_new, $spec);
}

/**
 * Implements hook_update_N().
 *
 * Changes the length of the URL column from 100 to 255.
 *
 */
function eventbrite_api_update_7102() {
  // Events EID.
  $table = 'eventbrite_api_events';
  $field = $field_new = 'url';
  $spec = array(
    'description' => 'The Eventbrite URL for the event.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  );
  db_change_field($table, $field, $field_new, $spec);
}

/**
 * Implements hook_update_N().
 *
 * Changes the discount code to varchar.
 *
 */
function eventbrite_api_update_7103() {
  // Attendees discount.
  $table = 'eventbrite_api_attendees';
  $field = $field_new = 'discount';
  $spec = array(
    'description' => 'The attendee discount on this order.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  );
  db_change_field($table, $field, $field_new, $spec);
}

/**
 * Implements hook_update_N().
 *
 * Changes the discount code to varchar (this was missed in 7103).
 *
 */
function eventbrite_api_update_7104() {
  // Attendees discount.
  $table = 'eventbrite_api_attendees';
  $field = $field_new = 'discount';
  $spec = array(
    'description' => 'The attendee discount on this order.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  );
  db_change_field($table, $field, $field_new, $spec);
  // Add the website column.
  $spec = array(
    'description' => 'The website of the workplace of the attendee.',
    'type' => 'varchar',
    'length' => 2048,
    'not null' => FALSE,
    'default' => '',
  );
  db_add_field('eventbrite_api_attendees', 'website', $spec);
  // Organizer URL field.
  $table = 'eventbrite_api_organizers';
  $field = $field_new = 'url';
  $spec = array(
    'description' => 'The Eventbrite URL for the event.',
    'type' => 'varchar',
    'length' => 2048,
    'not null' => TRUE,
    'default' => '',
  );
  db_change_field($table, $field, $field_new, $spec);

}
