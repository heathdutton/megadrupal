<?php
/**
 * @file
 * Creates a menu link that you can place into any menu to create the Ghostery
 * Ad Choices link.
 */

/**
 * Implements hook_menu().
 */
function ghostery_menu() {
  $items = array();
  $menu = variable_get('ghostery_menu');

  if ($menu) {
    $items['ghostery'] = array(
      'title' => 'AdChoices',
      'page callback' => '_ghostery_menu_callback',
      'access callback' => TRUE,
      'menu_name' => $menu,
    );
  }

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function ghostery_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'menu_configure') {
    $options = array('' => '-- None --') + menu_get_menus();
    $states = array(
      'invisible' => array(
        "select[name='ghostery_menu']" => array('value' => ''),
      ),
      'required' => array(
        "select[name='ghostery_menu']" => array('!value' => ''),
      ),
    );

    $form['ghostery'] = array(
      '#type' => 'fieldset',
      '#title' => t('Ghostery'),
      '#collapsible' => TRUE,
    );
    $form['ghostery']['ghostery_menu'] = array(
      '#type' => 'select',
      '#title' => t('Ghostery Menu Item'),
      '#description' => t('Add the Ghostery \'Ad Choices\' menu item to this menu.'),
      '#options' => $options,
      '#default_value' => variable_get('ghostery_menu', ''),
    );
    $form['ghostery']['ghostery_pid'] = array(
      '#type' => 'textfield',
      '#title' => t('PID'),
      '#default_value' => variable_get('ghostery_pid', ''),
      '#states' => $states,
      '#size' => 5,
      '#maxlength' => 10,
    );
    $form['ghostery']['ghostery_ocid'] = array(
      '#type' => 'textfield',
      '#title' => t('OCID'),
      '#default_value' => variable_get('ghostery_ocid', ''),
      '#states' => $states,
      '#size' => 5,
      '#maxlength' => 10,
    );

    $form['#validate'][] = 'ghostery_menu_settings_validate';
    $form['#submit'][] = 'ghostery_menu_settings_submit';
  }
}

/**
 * Implements hook_page_build().
 */
function ghostery_page_build(&$page) {
  // Make sure a menu was selected.
  if (variable_get('ghostery_menu', '')) {
    // Build JS settings
    $setting = array(
      'ghostery' => array(
        'pid' => variable_get('ghostery_pid', ''),
        'ocid' => variable_get('ghostery_ocid', ''),
      )
    );

    // ADD CSS & JS files.
    $page['content']['#attached']['js'][] = array(
      'data' => drupal_get_path('module', 'ghostery') . '/ghostery.js',
      'region' => 'footer',
    );
    $page['content']['#attached']['js'][] = array(
      'data' => $setting,
      'type' => 'setting'
    );
    $page['content']['#attached']['css'][] = drupal_get_path('module', 'ghostery') . '/ghostery.css';
  }
}

/**
 * Implements hook_menu_link_alter().
 */
function ghostery_menu_link_alter(&$item) {
  // This will only run if the menu item has not been customized.
  if (isset($item['page callback']) && $item['page callback'] == '_ghostery_menu_callback') {
    $item['link_title'] = '<img id="_bapw-icon" alt="Ad Choices Icon" /><span>' . strip_tags($item['title']) . '</span>';
    $item['options']['attributes']['id'] = '_bapw-link';
    $item['options']['html'] = TRUE;
  }
}

/**
 * Custom validate handler for the menu settings form.
 */
function ghostery_menu_settings_validate($form, &$form_state) {
  $vals = $form_state['values'];

  // Make sure a pid and ocid are set if a menu was chosen.
  if (!empty($vals['ghostery_menu'])) {
    if (!is_numeric($vals['ghostery_pid'])) {
      form_set_error('ghostery_pid', t('The PID must be set and be an integer.'));
    }
    if (!is_numeric($vals['ghostery_ocid'])) {
      form_set_error('ghostery_ocid', t('The OCID must be set and be an integer.'));
    }
  }
}

/**
 * Custom submit handler for the menu settings form.
 */
function ghostery_menu_settings_submit($form, &$form_state) {
  menu_rebuild();
}

/**
 * Dummy callback for the menu item.
 * @todo: Provide a better fallback if the JS fails and the URL is accessed.
 *
 * @return string
 */
function _ghostery_menu_callback() {
  return '';
}
