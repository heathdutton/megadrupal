<?php

/**
 * Form for daemonize settings
 */
function ultimate_cron_queue_scaler_form_ultimate_cron_function_settings_form_alter(&$form, &$form_state) {
  $function = $form['function']['#value'];
  if (strpos($function, 'ultimate_cron_queue_') !== 0) {
    return;
  }

  // Load settings
  $hooks = ultimate_cron_get_hooks();
  $hook = $hooks[$function];
  $conf = ultimate_cron_get_settings($function);
  $conf += _ultimate_cron_default_settings();

  $form['general']['queue_threads'] = array(
    '#type' => 'textfield',
    '#default_value' => empty($conf['queue_threads']) ? 1 : $conf['queue_threads'],
    '#title' => 'Queue threads',
    '#description' => t('Number of max threads'),
  );
  $form['general']['queue_threshold'] = array(
    '#type' => 'textfield',
    '#default_value' => empty($conf['queue_threshold']) ? '' : $conf['queue_threshold'],
    '#title' => 'Queue threshold',
    '#description' => t('Number of items in queue per thread before activating new thread'),
  );
}

/**
 * Implements hook_cron_alter().
 *
 * Steal cron queue hooks and multiply them.
 */
function ultimate_cron_queue_scaler_cron_alter(&$hooks) {
  // Grab the defined cron queues.
  static $queues = NULL;
  if (!isset($queues)) {
    $queues = module_invoke_all('cron_queue_info');
    drupal_alter('cron_queue_info', $queues);
  }
  foreach ($queues as $queue_name => $info) {
    $function = 'ultimate_cron_queue_' . $queue_name;
    $conf = ultimate_cron_get_settings($function);
    $conf += _ultimate_cron_default_settings();
    $hook = $hooks[$function];
    if (!empty($conf['queue_threads']) && $conf['queue_threads'] > 1) {
      $newhooks[$function] = $hook;
      for ($i = 1; $i < $conf['queue_threads']; $i++) {
        $fn = 'ultimate_cron_queue' . $i . '_' . $queue_name;
        $newhooks[$fn] = $hook;
        $newhooks[$fn]['function'] = $fn;
        $newhooks[$fn]['description'] .= ' (Thread #' . ($i + 1) . ')';
        $newhooks[$fn]['module'] = 'ultimate_cron_queue_scaler';
        $newhooks[$fn]['callback'] = $fn;
        if (function_exists('ultimate_cron_get_function_id')) {
          $newhooks[$fn]['fid'] = ultimate_cron_get_function_id($fn);
        }
      }
      $newhooks[$fn]['callback'] = 'ultimate_cron_queue0_' . $queue_name;
      $newhooks[$function]['module'] = 'ultimate_cron_queue_scaler';
      $newhooks[$function]['description'] .= ' (Master #1)';
      ultimate_cron_queue_scaler_array_ksplice($hooks, $function, 1, $newhooks);
    }
  }
}

/**
 * Implements hook_cron_schedule_alter().
 *
 * Throttle queue processing based on remaining items in queues.
 */
function ultimate_cron_queue_scaler_cron_schedule_alter(&$hooks) {
  // Grab the defined cron queues.
  static $queues = NULL;
  if (!isset($queues)) {
    $queues = module_invoke_all('cron_queue_info');
    drupal_alter('cron_queue_info', $queues);
  }
  foreach ($queues as $queue_name => $info) {
    $function = 'ultimate_cron_queue_' . $queue_name;
    $conf = ultimate_cron_get_settings($function);
    $conf += _ultimate_cron_default_settings();
    $threads = !empty($conf['queue_threads']) && intval($conf['queue_threads']) > 1 ? intval($conf['queue_threads']) : 1;
    $threshold = !empty($conf['queue_threshold']) && intval($conf['queue_threshold']) > 1 ? intval($conf['queue_threshold']) : 1;
    if ($threads > 1 && $queue = DrupalQueue::get($queue_name)) {
      $number_of_threads = ceil($queue->numberOfItems() / $threshold);
      for ($i = 1; $i < $threads; $i++) {
        $fn = 'ultimate_cron_queue' . $i . '_' . $queue_name;
        if ($i > $number_of_threads) {
          unset($hooks[$fn]);
        }
      }
    }
  }
}

/**
 * Implements hook_cronapi().
 */
function ultimate_cron_queue_scaler_cronapi($op, $function = NULL, $hook = NULL) {
  switch ($op) {
    case 'list': return array();
    case 'execute':
      if (preg_match('/^ultimate_cron_queue(\d*)_(.*)$/', $function, $matches)) {
        static $conf = array();
        $thread = $matches[1];
        $queue_name = $matches[2];
        $function = 'ultimate_cron_queue_' . $queue_name;
        if (!isset($conf[$function])) {
          $conf = ultimate_cron_get_settings($function);
          $conf += _ultimate_cron_default_settings();
        }
        $threshold = !empty($conf['queue_threshold']) && intval($conf['queue_threshold']) > 1 ? intval($conf['queue_threshold']) : 1;
        if ($queue = DrupalQueue::get($queue_name)) {
          $number_of_threads = ceil($queue->numberOfItems() / $threshold);
          if ($thread <= $number_of_threads) {
            return ultimate_cron_cronapi($op, $function, $hook);
          }
          drupal_set_message(t('Not enough items. Throttling down to @threads threads', array('@threads' => $number_of_threads)));
        }
      }
  }
}

/**
 * Helper function array_splice() for associative arrays.
 */
function ultimate_cron_queue_scaler_array_ksplice(&$input, $offset, $length = 0, $replacement = NULL) {
  $output = array();
  foreach ($input as $key => &$value) {
    if ($key === $offset) {
      foreach ($replacement as $key2 => $value2) {
        $output[$key2] = $value2;
      }
    }
    else {
      $output[$key] = &$value;
    }
  }
  $input = $output;
}
