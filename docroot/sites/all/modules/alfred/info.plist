<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.drupal.project.alfred</string>
	<key>connections</key>
	<dict>
		<key>16D4830B-ADE1-4103-A916-F7BE79D4F632</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>9F8C6F1C-1D9C-420F-903A-142BAA532B93</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>2CE02ED4-9356-491A-A14C-EFAEEC51B59B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>01320902-A5F9-4D9F-8777-3CAD1EEBE6D9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>68A0CA84-60D7-48A4-979C-B5F99D7A94F7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>AF11F516-41FF-4133-88C0-9FC19B4D1658</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>6AB5A54A-6A0B-4A86-9D70-E32C1E9A2FF2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>292EDC37-340A-4FCF-B6BB-3E15B4EBB299</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>6E6C83DA-AB7E-4E43-AD10-101F5090F153</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>EBF9DB56-39BD-4A03-94F8-50A799256347</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>7171CD02-AEAD-44C4-99A7-E216F44EC768</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E9E42089-570E-4C7E-BF41-753FB56B7991</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>97072812-0175-4D8E-BC67-7DC53576E2E8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E4E011B6-6BBF-46F9-9443-A46B8C2454AE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>9A57C752-B2C3-4D2A-86DF-D84D6C4E0773</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B574B4D4-9EE7-4509-A2E0-1F81F4A8B425</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>A7C6CF6A-E660-4E42-A54C-B82B039132FB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>079C8C3C-D222-4578-AFEB-D544E771631D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>A7F1B5FA-BE6D-4A41-93E3-86D5F90BB2CE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E4E011B6-6BBF-46F9-9443-A46B8C2454AE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>E4824256-7FD9-418C-8F88-2A3301E3ED62</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>65CB3385-0C9A-4A24-8296-EC97BCAA7559</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>F2E5FB8C-8BA2-408F-9C2C-3B9565BA7ADD</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B84E6090-6D26-4FEA-A6AE-69DE589A693A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>the Drupal Community</string>
	<key>description</key>
	<string>by the Drupal Community</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Drupal</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>keyword</key>
				<string>d5</string>
				<key>runningsubtext</key>
				<string>Please wait while I cache the api list</string>
				<key>script</key>
				<string>$apiversion = 5;
$apiurl = 'https://api.drupal.org/api/function_dump/' . $apiversion;
$text = urlencode("{query}");
require_once('workflows.php');
$utils = new Workflows();
$path = $utils-&gt;data();
//$path = getcwd();

if (!is_dir($path)) {
  mkdir($path);
}

function get_api($path, $apiurl) {
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_URL, $apiurl);
  curl_setopt($curl,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13');
  $read = curl_exec($curl);
  curl_close($curl);

  $write = array();

  foreach (preg_split("/((\r?\n)|(\r\n?))/", $read) as $line){
    $row = explode(" ### ", $line);
    $key = $row[0];
    if (!empty($row[1])) {
      $value = $row[1];
    }
    else {
      $value = "";
    }
    $write[$key] = $value;
  }
  file_put_contents($path . '/d' . $GLOBALS['apiversion'] . '.array', serialize($write));
}

if (!file_exists($path . '/d' . $apiversion . '.array')) {
  get_api($path, $apiurl);
}
else {
  clearstatcache();
  date_default_timezone_set('UTC');
  if (filemtime($path . '/d' . $apiversion . '.array') &lt; strtotime("-365 day")) {
    get_api($path, $apiurl);
  }
}

$api = unserialize(file_get_contents($path . '/d' . $apiversion . '.array'));

$matches = array();
foreach ($api as $key =&gt; $value) {
  $shortkey = explode("(", $key);
  if (strpos($shortkey[0], $text) !== false) {
    $matches[] = array('hookname' =&gt; $shortkey[0], 'hook' =&gt; $key, 'value' =&gt; $value, 'pos' =&gt; strpos($shortkey[0], $text));
  }
}

function cmp($a, $b) {
  $retval = strnatcmp((string)$a['pos'], (string)$b['pos']);
  if(!$retval) return strnatcmp($a['hookname'], $b['hookname']);
  return $retval;
}

usort($matches, 'cmp');

$results = array();
foreach( $matches as $hook =&gt; $sugg ) {

  if (!empty($sugg)) {
    $value = $sugg;
  }
  else {
    $value = "";
  }

   $item = array(
    'uid' =&gt; $value['hookname'],
    'arg' =&gt; $value['hook'],
    'title' =&gt; $value['hook'],
    'subtitle' =&gt; $value['value'],
  'icon' =&gt; 'icon.png',
  );
  array_push( $results, $item );
}

if ( count( $results ) &gt; 0 ):
  echo $utils-&gt;toxml( $results );
else:
  echo '&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  &lt;item uid="suggest '. $text . '" arg="none"&gt;
    &lt;title&gt;No match&lt;/title&gt;
    &lt;subtitle&gt;Try changing your search query.&lt;/subtitle&gt;
    &lt;icon&gt;error.png&lt;/icon&gt;
  &lt;/item&gt;
&lt;/items&gt;';
endif;</string>
				<key>subtext</key>
				<string>Copy the function to clipboard and open in browser</string>
				<key>title</key>
				<string>Search Drupal 5 API</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>A7C6CF6A-E660-4E42-A54C-B82B039132FB</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>32</integer>
				<key>script</key>
				<string>query="{query}"
IFS=" "
set -- $query

# kind of a hack here to test if we're testing so we can do string comparisions.
if [ -n "${ROUNDUP_VERSION+1}"] ; then
  command=open
else
  command=echo
fi

gotodo() {
  $command "https://api.drupal.org/api/drupal/5/search/${function}"
}
    echo $query | pbcopy
    function=${1%(*}
    gotodo
;;
exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>079C8C3C-D222-4578-AFEB-D544E771631D</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>keyword</key>
				<string>d6</string>
				<key>runningsubtext</key>
				<string>Please wait while I cache the api list</string>
				<key>script</key>
				<string>$apiversion = 6;
$apiurl = 'https://api.drupal.org/api/function_dump/' . $apiversion;
$text = urlencode("{query}");
require_once('workflows.php');
$utils = new Workflows();
$path = $utils-&gt;data();
//$path = getcwd();

if (!is_dir($path)) {
  mkdir($path);
}

function get_api($path, $apiurl) {
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_URL, $apiurl);
  curl_setopt($curl,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13');
  $read = curl_exec($curl);
  curl_close($curl);

  $write = array();

  foreach (preg_split("/((\r?\n)|(\r\n?))/", $read) as $line){
    $row = explode(" ### ", $line);
    $key = $row[0];
    if (!empty($row[1])) {
      $value = $row[1];
    }
    else {
      $value = "";
    }
    $write[$key] = $value;
  }
  file_put_contents($path . '/d' . $GLOBALS['apiversion'] . '.array', serialize($write));
}

if (!file_exists($path . '/d' . $apiversion . '.array')) {
  get_api($path, $apiurl);
}
else {
  clearstatcache();
  date_default_timezone_set('UTC');
  if (filemtime($path . '/d' . $apiversion . '.array') &lt; strtotime("-365 day")) {
    get_api($path, $apiurl);
  }
}

$api = unserialize(file_get_contents($path . '/d' . $apiversion . '.array'));

$matches = array();
foreach ($api as $key =&gt; $value) {
  $shortkey = explode("(", $key);
  if (strpos($shortkey[0], $text) !== false) {
    $matches[] = array('hookname' =&gt; $shortkey[0], 'hook' =&gt; $key, 'value' =&gt; $value, 'pos' =&gt; strpos($shortkey[0], $text));
  }
}

function cmp($a, $b) {
  $retval = strnatcmp((string)$a['pos'], (string)$b['pos']);
  if(!$retval) return strnatcmp($a['hookname'], $b['hookname']);
  return $retval;
}

usort($matches, 'cmp');

$results = array();
foreach( $matches as $hook =&gt; $sugg ) {

  if (!empty($sugg)) {
    $value = $sugg;
  }
  else {
    $value = "";
  }

   $item = array(
    'uid' =&gt; $value['hookname'],
    'arg' =&gt; $value['hook'],
    'title' =&gt; $value['hook'],
    'subtitle' =&gt; $value['value'],
  'icon' =&gt; 'icon.png',
  );
  array_push( $results, $item );
}

if ( count( $results ) &gt; 0 ):
  echo $utils-&gt;toxml( $results );
else:
  echo '&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  &lt;item uid="suggest '. $text . '" arg="none"&gt;
    &lt;title&gt;No match&lt;/title&gt;
    &lt;subtitle&gt;Try changing your search query.&lt;/subtitle&gt;
    &lt;icon&gt;error.png&lt;/icon&gt;
  &lt;/item&gt;
&lt;/items&gt;';
endif;</string>
				<key>subtext</key>
				<string>Copy the function to clipboard and open in browser</string>
				<key>title</key>
				<string>Search Drupal 6 API</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>F2E5FB8C-8BA2-408F-9C2C-3B9565BA7ADD</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>32</integer>
				<key>script</key>
				<string>query="{query}"
IFS=" "
set -- $query

# kind of a hack here to test if we're testing so we can do string comparisions.
if [ -n "${ROUNDUP_VERSION+1}"] ; then
  command=open
else
  command=echo
fi

gotodo() {
  $command "https://api.drupal.org/api/drupal/6/search/${function}"
}
    echo $query | pbcopy
    function=${1%(*}
    gotodo
;;
exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B84E6090-6D26-4FEA-A6AE-69DE589A693A</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>32</integer>
				<key>script</key>
				<string>query="{query}"
IFS=" "
set -- $query

# kind of a hack here to test if we're testing so we can do string comparisions.
if [ -n "${ROUNDUP_VERSION+1}"] ; then
  command=open
else
  command=echo
fi

gotodo() {
  $command "https://api.drupal.org/api/drupal/7/search/${function}"
}
    echo $query | pbcopy
    function=${1%(*}
    gotodo
;;
exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>292EDC37-340A-4FCF-B6BB-3E15B4EBB299</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>keyword</key>
				<string>d7</string>
				<key>runningsubtext</key>
				<string>Please wait while I cache the api list</string>
				<key>script</key>
				<string>$apiversion = 7;
$apiurl = 'https://api.drupal.org/api/function_dump/' . $apiversion;
$text = urlencode("{query}");
require_once('workflows.php');
$utils = new Workflows();
$path = $utils-&gt;data();
//$path = getcwd();

if (!is_dir($path)) {
  mkdir($path);
}

function get_api($path, $apiurl) {
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_URL, $apiurl);
  curl_setopt($curl,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13');
  $read = curl_exec($curl);
  curl_close($curl);

  $write = array();

  foreach (preg_split("/((\r?\n)|(\r\n?))/", $read) as $line){
    $row = explode(" ### ", $line);
    $key = $row[0];
    if (!empty($row[1])) {
      $value = $row[1];
    }
    else {
      $value = "";
    }
    $write[$key] = $value;
  }
  file_put_contents($path . '/d' . $GLOBALS['apiversion'] . '.array', serialize($write));
}

if (!file_exists($path . '/d' . $apiversion . '.array')) {
  get_api($path, $apiurl);
}
else {
  clearstatcache();
  date_default_timezone_set('UTC');
  if (filemtime($path . '/d' . $apiversion . '.array') &lt; strtotime("-30 day")) {
    get_api($path, $apiurl);
  }
}

$api = unserialize(file_get_contents($path . '/d' . $apiversion . '.array'));

$matches = array();
foreach ($api as $key =&gt; $value) {
  $shortkey = explode("(", $key);
  if (strpos($shortkey[0], $text) !== false) {
    $matches[] = array('hookname' =&gt; $shortkey[0], 'hook' =&gt; $key, 'value' =&gt; $value, 'pos' =&gt; strpos($shortkey[0], $text));
  }
}

function cmp($a, $b) {
  $retval = strnatcmp((string)$a['pos'], (string)$b['pos']);
  if(!$retval) return strnatcmp($a['hookname'], $b['hookname']);
  return $retval;
}

usort($matches, 'cmp');

$results = array();
foreach( $matches as $hook =&gt; $sugg ) {

  if (!empty($sugg)) {
    $value = $sugg;
  }
  else {
    $value = "";
  }

   $item = array(
    'uid' =&gt; $value['hookname'],
    'arg' =&gt; $value['hook'],
    'title' =&gt; $value['hook'],
    'subtitle' =&gt; $value['value'],
  'icon' =&gt; 'icon.png',
  );
  array_push( $results, $item );
}

if ( count( $results ) &gt; 0 ):
  echo $utils-&gt;toxml( $results );
else:
  echo '&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  &lt;item uid="suggest '. $text . '" arg="none"&gt;
    &lt;title&gt;No match&lt;/title&gt;
    &lt;subtitle&gt;Try changing your search query.&lt;/subtitle&gt;
    &lt;icon&gt;error.png&lt;/icon&gt;
  &lt;/item&gt;
&lt;/items&gt;';
endif;</string>
				<key>subtext</key>
				<string>Copy the function to clipboard and open in browser</string>
				<key>title</key>
				<string>Search Drupal 7 API</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>6AB5A54A-6A0B-4A86-9D70-E32C1E9A2FF2</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>keyword</key>
				<string>d8</string>
				<key>runningsubtext</key>
				<string>Please wait while I cache the api list</string>
				<key>script</key>
				<string>$apiversion = 8;
$apiurl = 'https://api.drupal.org/api/function_dump/' . $apiversion;
$text = urlencode("{query}");
require_once('workflows.php');
$utils = new Workflows();
$path = $utils-&gt;data();
//$path = getcwd();

if (!is_dir($path)) {
  mkdir($path);
}

function get_api($path, $apiurl) {
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_URL, $apiurl);
  curl_setopt($curl,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13');
  $read = curl_exec($curl);
  curl_close($curl);

  $write = array();

  foreach (preg_split("/((\r?\n)|(\r\n?))/", $read) as $line){
    $row = explode(" ### ", $line);
    $key = $row[0];
    if (!empty($row[1])) {
      $value = $row[1];
    }
    else {
      $value = "";
    }
    $write[$key] = $value;
  }
  file_put_contents($path . '/d' . $GLOBALS['apiversion'] . '.array', serialize($write));
}

if (!file_exists($path . '/d' . $apiversion . '.array')) {
  get_api($path, $apiurl);
}
else {
  clearstatcache();
  date_default_timezone_set('UTC');
  if (filemtime($path . '/d' . $apiversion . '.array') &lt; strtotime("-2 day")) {
    get_api($path, $apiurl);
  }
}

$api = unserialize(file_get_contents($path . '/d' . $apiversion . '.array'));

$matches = array();
foreach ($api as $key =&gt; $value) {
  $shortkey = explode("(", $key);
  if (strpos($shortkey[0], $text) !== false) {
    $matches[] = array('hookname' =&gt; $shortkey[0], 'hook' =&gt; $key, 'value' =&gt; $value, 'pos' =&gt; strpos($shortkey[0], $text));
  }
}

function cmp($a, $b) {
  $retval = strnatcmp((string)$a['pos'], (string)$b['pos']);
  if(!$retval) return strnatcmp($a['hookname'], $b['hookname']);
  return $retval;
}

usort($matches, 'cmp');

$results = array();
foreach( $matches as $hook =&gt; $sugg ) {

  if (!empty($sugg)) {
    $value = $sugg;
  }
  else {
    $value = "";
  }

   $item = array(
    'uid' =&gt; $value['hookname'],
    'arg' =&gt; $value['hook'],
    'title' =&gt; $value['hook'],
    'subtitle' =&gt; $value['value'],

  'icon' =&gt; 'icon.png',
  );
  array_push( $results, $item );
}

if ( count( $results ) &gt; 0 ):
  echo $utils-&gt;toxml( $results );
else:
  echo '&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  &lt;item uid="suggest '. $text . '" arg="none"&gt;
    &lt;title&gt;No match&lt;/title&gt;
    &lt;subtitle&gt;Try changing your search query.&lt;/subtitle&gt;
    &lt;icon&gt;error.png&lt;/icon&gt;
  &lt;/item&gt;
&lt;/items&gt;';
endif;</string>
				<key>subtext</key>
				<string>Copy the function to clipboard and open in browser</string>
				<key>title</key>
				<string>Search the Drupal 8 API</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>9A57C752-B2C3-4D2A-86DF-D84D6C4E0773</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>32</integer>
				<key>script</key>
				<string>query="{query}"
IFS=" "
set -- $query

# kind of a hack here to test if we're testing so we can do string comparisions.
if [ -n "${ROUNDUP_VERSION+1}"] ; then
  command=open
else
  command=echo
fi

gotodo() {
  $command "https://api.drupal.org/api/drupal/8/search/${function}"
}
    echo $query | pbcopy
    function=${1%(*}
    gotodo
;;
exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B574B4D4-9EE7-4509-A2E0-1F81F4A8B425</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dg</string>
				<key>subtext</key>
				<string>Load nid or group page at g.d.o</string>
				<key>text</key>
				<string>Groups.drupal.org</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>6E6C83DA-AB7E-4E43-AD10-101F5090F153</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>query="{query}"
IFS=" "
set -- $query

# kind of a hack here to test if we're testing so we can do string comparisions.
if [ -n "${ROUNDUP_VERSION+1}"] ; then
  command=open
else
  command=echo
fi

gotodo() {
  $command "https://groups.drupal.org/${proj}${nid}"
}

check() {
  if [[ "$nid" =~ ^[0-9]+$ ]] ; then
    return 0
  else
    return 1
  fi
}

    nid=$1
    site=""
    if [$nid == ''] ; then
     help
     exit
    fi
    if check; then
      proj="node/"
    else
      proj=""
    fi
    gotodo
;;
exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>EBF9DB56-39BD-4A03-94F8-50A799256347</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>plusspaces</key>
				<false/>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>AF11F516-41FF-4133-88C0-9FC19B4D1658</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>keyword</key>
				<string>do</string>
				<key>runningsubtext</key>
				<string>Please wait while I cache the project list (this takes a while)</string>
				<key>script</key>
				<string>$text = urlencode("{query}");
require_once('workflows.php');
$utils = new Workflows();
$path = $utils-&gt;data();
//$path = getcwd();

if (!is_dir($path)) {
  mkdir($path);
}

function get_projects($path) {
  ini_set('max_execution_time', '300');
  ini_set('memory_limit', '265M' );
  ini_set('post_max_size', '30M');
  ini_set('upload_max_filesize', '30M');

  $curl = curl_init();
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_URL, 'https://updates.drupal.org/release-history/project-list/all/projects.xml');
  curl_setopt($curl,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13');
  $read = curl_exec($curl);
  curl_close($curl);

  $array = xmlstr_to_array($read);
  $write = array();
  foreach ($array as $projects) {
    foreach ($projects as $project) {
      if (!is_array($project['title'])) {
        $write[] = array($project['short_name'], $project['title'], $project['link']);
      }
    }
  }
  asort($write);
  file_put_contents($path . '/projects.array', serialize($write));
}

if (!file_exists($path . '/projects.array')) {
  get_projects($path);
}
else {
  clearstatcache();
  date_default_timezone_set('UTC');
  if (filemtime($path . '/projects.array') &lt; strtotime("-10 day")) {
    get_projects($path);
  }
}

$projects = unserialize(file_get_contents($path . '/projects.array'));

$matches = array();
foreach ($projects as $project) {
  if ((strpos(strtolower($project[0]), urldecode($text)) !== false) || (strpos(strtolower($project[1]), urldecode($text)) !== false)) {
    similar_text(strtolower($project[0]), urldecode($text), $snpercent);
    similar_text(strtolower($project[1]), urldecode($text), $lnpercent);
    $hit = max(array($snpercent, $lnpercent));
    $matches[] = array(
      'shortname' =&gt; $project[0],
      'title' =&gt; $project[1],
      'link' =&gt; $project[2],
      'pos' =&gt; $hit,
      );
  }
}

usort($matches, function($a, $b) {
  return $b['pos'] - $a['pos'];
});


$results = array();
foreach( $matches as $sugg ) {
  if (!empty($sugg)) {
    $value = $sugg;
  }
  else {
    $value = "";
  }
   $item = array(
    'uid' =&gt; $value['shortname'],
    'arg' =&gt; $value['link'],
    'title' =&gt; $value['title'],
    'subtitle' =&gt; $value['shortname'],
  'icon' =&gt; 'icon.png',
  );
  array_push( $results, $item );
}

if ( count( $results ) &gt; 0 ):
  echo $utils-&gt;toxml( $results );
else:
  if (is_numeric($text)) {
   $arg = "https://drupal.org/node/" . $text;
   $message = "Open node id at drupal.org.";
  }
  else {
   $arg = "https://drupal.org/project/" . $text;
   $message = "Attempt to open project page at drupal.org.";
  }
  echo '&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  &lt;item uid="suggest '. $text . '" arg="' . $arg . '"&gt;
    &lt;title&gt;' . $text . '&lt;/title&gt;
    &lt;subtitle&gt;' . $message . '&lt;/subtitle&gt;
    &lt;icon&gt;icon.png&lt;/icon&gt;
  &lt;/item&gt;
&lt;/items&gt;';
endif;
/**
  * convert xml string to php array - useful to get a serializable value
  *
  * @param string $xmlstr
  * @return array
  *
  * @author Adrien aka Gaarf &amp; contributors
  * @see http://gaarf.info/2009/08/13/xml-string-to-php-array/
*/

function xmlstr_to_array($xmlstr) {
  $doc = new DOMDocument();
  $doc-&gt;loadXML($xmlstr);
  $root = $doc-&gt;documentElement;
  $output = domnode_to_array($root);
  $output['@root'] = $root-&gt;tagName;
  return $output;
}

function domnode_to_array($node) {
  $output = array();
  switch ($node-&gt;nodeType) {

    case XML_CDATA_SECTION_NODE:
    case XML_TEXT_NODE:
      $output = trim($node-&gt;textContent);
    break;

    case XML_ELEMENT_NODE:
      for ($i=0, $m=$node-&gt;childNodes-&gt;length; $i&lt;$m; $i++) {
        $child = $node-&gt;childNodes-&gt;item($i);
        $v = domnode_to_array($child);
        if(isset($child-&gt;tagName)) {
          $t = $child-&gt;tagName;
          if(!isset($output[$t])) {
            $output[$t] = array();
          }
          $output[$t][] = $v;
        }
        elseif($v || $v === '0') {
          $output = (string) $v;
        }
      }
      if($node-&gt;attributes-&gt;length &amp;&amp; !is_array($output)) { //Has attributes but isn't an array
        $output = array('@content'=&gt;$output); //Change output into an array.
      }
      if(is_array($output)) {
        if($node-&gt;attributes-&gt;length) {
          $a = array();
          foreach($node-&gt;attributes as $attrName =&gt; $attrNode) {
            $a[$attrName] = (string) $attrNode-&gt;value;
          }
          $output['@attributes'] = $a;
        }
        foreach ($output as $t =&gt; $v) {
          if(is_array($v) &amp;&amp; count($v)==1 &amp;&amp; $t!='@attributes') {
            $output[$t] = $v[0];
          }
        }
      }
    break;
  }
  return $output;
}</string>
				<key>subtext</key>
				<string>Search project by name, or load a page by nid or short name at d.o</string>
				<key>title</key>
				<string>Drupal.org</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>68A0CA84-60D7-48A4-979C-B5F99D7A94F7</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>doi</string>
				<key>subtext</key>
				<string>Load a project issue page at d.o</string>
				<key>text</key>
				<string>Drupal.org</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>16D4830B-ADE1-4103-A916-F7BE79D4F632</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>plusspaces</key>
				<false/>
				<key>url</key>
				<string>https://drupal.org/project/issues/{query}?categories=All</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>9F8C6F1C-1D9C-420F-903A-142BAA532B93</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>keyword</key>
				<string>ds</string>
				<key>script</key>
				<string>$text = urlencode("{query}");

echo '
&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  &lt;item uid="suggest '. $text . '" arg="https://drupal.org/search/site/' . $text . '"&gt;
    &lt;title&gt;Search the Drupal network for ' . $text . '&lt;/title&gt;
    &lt;subtitle&gt;&lt;/subtitle&gt;
    &lt;icon&gt;icon.png&lt;/icon&gt;
  &lt;/item&gt;
  &lt;item uid="suggest '. $text . '" arg="https://drupal.org/search/site/' . $text . '?f[0]=ss_meta_type%3Aforum-issues"&gt;
    &lt;title&gt;Search Drupal issues for ' . $text . '&lt;/title&gt;
    &lt;subtitle&gt;&lt;/subtitle&gt;
    &lt;icon&gt;icon.png&lt;/icon&gt;
  &lt;/item&gt;
  &lt;item uid="suggest '. $text . '" arg="https://drupal.org/search/site/' . $text . '?f[0]=ss_meta_type%3Agroup"&gt;
    &lt;title&gt;Search groups.drupal.org for ' . $text . '&lt;/title&gt;
    &lt;subtitle&gt;&lt;/subtitle&gt;
    &lt;icon&gt;icon.png&lt;/icon&gt;
  &lt;/item&gt;
&lt;/items&gt;';</string>
				<key>title</key>
				<string>Search Drupal</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7171CD02-AEAD-44C4-99A7-E216F44EC768</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>plusspaces</key>
				<false/>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>E9E42089-570E-4C7E-BF41-753FB56B7991</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>plusspaces</key>
				<false/>
				<key>url</key>
				<string>http://drupalcode.org/project/{query}.git</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>E4E011B6-6BBF-46F9-9443-A46B8C2454AE</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dc</string>
				<key>text</key>
				<string>Go to drupalcode.org for {project}</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>97072812-0175-4D8E-BC67-7DC53576E2E8</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dor</string>
				<key>subtext</key>
				<string>Goto Drupal project repository page</string>
				<key>text</key>
				<string>Drupal.org</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>A7F1B5FA-BE6D-4A41-93E3-86D5F90BB2CE</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>plusspaces</key>
				<false/>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>01320902-A5F9-4D9F-8777-3CAD1EEBE6D9</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>4</integer>
				<key>keyword</key>
				<string>du</string>
				<key>script</key>
				<string>$text = urlencode("{query}");

echo '
&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  &lt;item uid="do '. $text . '" arg="https://drupal.org/u/' . $text . '"&gt;
    &lt;title&gt;Find user profile by d.o username&lt;/title&gt;
    &lt;subtitle&gt;&lt;/subtitle&gt;
    &lt;icon&gt;icon.png&lt;/icon&gt;
  &lt;/item&gt;
  &lt;item uid="irc '. $text . '" arg="http://dgo.to/irc/' . $text . '"&gt;
    &lt;title&gt;Find user profile by IRC nick&lt;/title&gt;
    &lt;subtitle&gt;&lt;/subtitle&gt;
    &lt;icon&gt;icon.png&lt;/icon&gt;
  &lt;/item&gt;
&lt;/items&gt;';</string>
				<key>title</key>
				<string>Find a Drupaler</string>
				<key>type</key>
				<integer>1</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>2CE02ED4-9356-491A-A14C-EFAEEC51B59B</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dd</string>
				<key>subtext</key>
				<string>Execute Drush commands</string>
				<key>text</key>
				<string>Drush</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>E4824256-7FD9-418C-8F88-2A3301E3ED62</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>4</integer>
				<key>script</key>
				<string>DRUSH_PATH="/usr/local/bin/drush"

#arg handling in alfred sucks, lets split it up
query="{query}"
IFS=" "
set -- $query

proj=''
site=''

case "$1" in
  d)
    shift
    ${DRUSH_PATH} $@
    ;;
  o)
    shift
    uri=`${DRUSH_PATH} $@ status | grep 'Site URI' | tr -d ' ' | tr -d '\r'`
    if [ $uri ] ; then
      open "http://${uri:8}"
    else
      echo "Invalid alias: $1"
    fi
    ;;
esac

exit 0
</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>65CB3385-0C9A-4A24-8296-EC97BCAA7559</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>01320902-A5F9-4D9F-8777-3CAD1EEBE6D9</key>
		<dict>
			<key>ypos</key>
			<real>1060</real>
		</dict>
		<key>079C8C3C-D222-4578-AFEB-D544E771631D</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>16D4830B-ADE1-4103-A916-F7BE79D4F632</key>
		<dict>
			<key>ypos</key>
			<real>620</real>
		</dict>
		<key>292EDC37-340A-4FCF-B6BB-3E15B4EBB299</key>
		<dict>
			<key>ypos</key>
			<real>210</real>
		</dict>
		<key>2CE02ED4-9356-491A-A14C-EFAEEC51B59B</key>
		<dict>
			<key>ypos</key>
			<real>1060</real>
		</dict>
		<key>65CB3385-0C9A-4A24-8296-EC97BCAA7559</key>
		<dict>
			<key>ypos</key>
			<real>1170</real>
		</dict>
		<key>68A0CA84-60D7-48A4-979C-B5F99D7A94F7</key>
		<dict>
			<key>ypos</key>
			<real>520</real>
		</dict>
		<key>6AB5A54A-6A0B-4A86-9D70-E32C1E9A2FF2</key>
		<dict>
			<key>ypos</key>
			<real>210</real>
		</dict>
		<key>6E6C83DA-AB7E-4E43-AD10-101F5090F153</key>
		<dict>
			<key>ypos</key>
			<real>420</real>
		</dict>
		<key>7171CD02-AEAD-44C4-99A7-E216F44EC768</key>
		<dict>
			<key>ypos</key>
			<real>730</real>
		</dict>
		<key>97072812-0175-4D8E-BC67-7DC53576E2E8</key>
		<dict>
			<key>ypos</key>
			<real>840</real>
		</dict>
		<key>9A57C752-B2C3-4D2A-86DF-D84D6C4E0773</key>
		<dict>
			<key>ypos</key>
			<real>310</real>
		</dict>
		<key>9F8C6F1C-1D9C-420F-903A-142BAA532B93</key>
		<dict>
			<key>ypos</key>
			<real>620</real>
		</dict>
		<key>A7C6CF6A-E660-4E42-A54C-B82B039132FB</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>A7F1B5FA-BE6D-4A41-93E3-86D5F90BB2CE</key>
		<dict>
			<key>ypos</key>
			<real>940</real>
		</dict>
		<key>AF11F516-41FF-4133-88C0-9FC19B4D1658</key>
		<dict>
			<key>ypos</key>
			<real>520</real>
		</dict>
		<key>B574B4D4-9EE7-4509-A2E0-1F81F4A8B425</key>
		<dict>
			<key>ypos</key>
			<real>310</real>
		</dict>
		<key>B84E6090-6D26-4FEA-A6AE-69DE589A693A</key>
		<dict>
			<key>ypos</key>
			<real>110</real>
		</dict>
		<key>E4824256-7FD9-418C-8F88-2A3301E3ED62</key>
		<dict>
			<key>ypos</key>
			<real>1170</real>
		</dict>
		<key>E4E011B6-6BBF-46F9-9443-A46B8C2454AE</key>
		<dict>
			<key>ypos</key>
			<real>840</real>
		</dict>
		<key>E9E42089-570E-4C7E-BF41-753FB56B7991</key>
		<dict>
			<key>ypos</key>
			<real>730</real>
		</dict>
		<key>EBF9DB56-39BD-4A03-94F8-50A799256347</key>
		<dict>
			<key>ypos</key>
			<real>420</real>
		</dict>
		<key>F2E5FB8C-8BA2-408F-9C2C-3B9565BA7ADD</key>
		<dict>
			<key>ypos</key>
			<real>110</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>http://drupal.org/project/alfred</string>
</dict>
</plist>
