<?php
/**
 * @file
 * The statuscake_push_monitoring module file.
 */

/**
 * Implements hook_menu().
 */
function statuscake_push_monitoring_menu() {
  $items['admin/config/services/statuscake'] = array(
    'title' => 'Statuscake',
    'description' => 'Settings for statuscake',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statuscake_push_monitoring_settings_form'),
    'access arguments' => array('administer statuscake settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback: settings page.
 */
function statuscake_push_monitoring_settings_form($form_state) {
  $form['statuscake_push_monitoring_url'] = array(
    '#type' => 'textfield',
    '#title' => t('URL to PUSH to statuscake servers'),
    '#default_value' => variable_get('statuscake_push_monitoring_url', 'Insert URL from statuscake'),
    '#size' => 70,
    '#description' => t("The URL from statuscake.com settings page"),
    '#required' => TRUE,

  );

  return system_settings_form($form);
}

/**
 * Implements validation handler.
 *
 * Validating the URL on module settings page.
 */
function statuscake_push_monitoring_settings_form_validate($form, &$form_state) {
  $url = $form_state['values']['statuscake_push_monitoring_url'];
  if (!filter_var($url, FILTER_VALIDATE_URL)) {
    form_set_error('statuscake_push_monitoring_url', t("@url is not a valid URL", array('@url' => $url)));
  }
}

/**
 * Implements function to calculate microtime format.
 *
 * @return float
 *   Converting time in microtime format.
 */
function statuscake_push_monitoring_microtime_float() {
  list($usec, $sec) = explode(" ", microtime());
  return ((float) $usec + (float) $sec);
}

/**
 * Implements hook_init().
 *
 * Starting timer on every page request.
 */
function statuscake_push_monitoring_init() {
  $time_start = &drupal_static('statuscake_push_monitoring_start_time');
  $time_start = statuscake_push_monitoring_microtime_float();
}

/**
 * Implements hook_cron().
 */
function statuscake_push_monitoring_cron() {
  drupal_register_shutdown_function(statuscake_push_monitoring_push_url());
}

/**
 * Implements new function: statuscake_push_monitoring_push_url().
 *
 * @see http://kb.statuscake.com/hc/en-us/articles/203808141-Push-Monitoring
 */
function statuscake_push_monitoring_push_url() {
  $time_start = drupal_static('statuscake_push_monitoring_start_time');
  $time_end = statuscake_push_monitoring_microtime_float();
  $time = ($time_end - $time_start) * 1000;
  // Inserting $time variable in URL.
  $statuscakeurl = variable_get('statuscake_push_monitoring_url');
  $url_info = explode('?', $statuscakeurl);
  $query_values = array();
  parse_str($url_info[1], $query_values);
  $query_values['time'] = $time;
  $statuscakeurl_with_time = url($url_info[0] . '?' . drupal_http_build_query($query_values));
  drupal_http_request($statuscakeurl_with_time);
}

/**
 * Implements hook_permission().
 */
function statuscake_push_monitoring_permission() {
  return array(
    'administer statuscake settings' => array(
      'title' => t('Administer StatusCake settings'),
    ),
  );
}
