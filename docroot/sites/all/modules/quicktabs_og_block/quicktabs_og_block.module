<?php

/**
 * @file
 * Creates a custom markup block tabbed by group.
 */

/**
 * Implements hook_permission().
 */
function quicktabs_og_block_permission() {
  return array(
    'administer quicktabs og block' => array(
      'title' => t('Administer Quicktabs OG block'),
      'description' => t('Administer the Quicktabs OG block'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function quicktabs_og_block_block_info() {
  $blocks['quicktabs_og_block_block'] = array(
    'info' => t('Quicktabs OG block'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function quicktabs_og_block_block_configure($delta = '') {
  $form = array();
  switch ($delta) {
    case 'quicktabs_og_block_block':
      $quicktabs_style_options = array();
      $styles = module_invoke_all('quicktabs_tabstyles');
      foreach ($styles as $style) {
        $quicktabs_style_options[$style] = $style;
      }
      ksort($quicktabs_style_options);
      $form['quicktabs_og_block'] = array(
        '#type' => 'fieldset',
        '#title' => t('Configuration'),
      );
      $form['quicktabs_og_block']['quicktabs_og_block_style'] = array(
        '#type' => 'select',
        '#title' => t('Style'),
        '#options' => array('nostyle' => t('No style')) + $quicktabs_style_options,
        '#default_value' => variable_get('quicktabs_og_block_style', ''),
        '#description' => t('Choose the quicktab style.'),
      );
      $form['quicktabs_og_block']['quicktabs_og_block_default_tab'] = array(
        '#type' => 'select',
        '#title' => t('Default tab'),
        '#options' => _quicktabs_og_block_get_groups(),
        '#default_value' => variable_get('quicktabs_og_block_default_tab', ''),
        '#description' => t('Choose the default group tab when block not in group.'),
      );
      $groups = _quicktabs_og_block_get_groups();
      foreach ($groups as $gid => $group) {
        $form['quicktabs_og_block_' . $gid] = array(
          '#type' => 'fieldset',
          '#title' => t($group),
        );
        $form['quicktabs_og_block_' . $gid]['quicktabs_og_block_name_' . $gid] = array(
          '#type' => 'textfield',
          '#title' => t('Tab name'),
          '#default_value' => variable_get('quicktabs_og_block_name_' . $gid,''),
          '#description' => t('Enter the tab name for this group.'),
        );
        $form['quicktabs_og_block_' . $gid]['quicktabs_og_block_markup_' . $gid] = array(
          '#type' => 'text_format',
          '#title' => t('Markup'),
          '#format' => variable_get('quicktabs_og_block_markup_' . $gid . '_format', NULL),
          '#default_value' => variable_get('quicktabs_og_block_markup_' . $gid . '_value', ''),
          '#description' => t('Enter the tab markup for this group.'),
        );
      }
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function quicktabs_og_block_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'quicktabs_og_block_block' :
      variable_set('quicktabs_og_block_style', $edit['quicktabs_og_block_style']);
      variable_set('quicktabs_og_block_default_tab', $edit['quicktabs_og_block_default_tab']);
      $groups = _quicktabs_og_block_get_groups();
      //$edit['quicktabs_og_block_markup_1']['value']);
      foreach ($groups as $gid => $group) {
        $edit_group = $edit['quicktabs_og_block_markup_' . $gid];
        variable_set('quicktabs_og_block_name_' . $gid, $edit['quicktabs_og_block_name_' . $gid]);
        variable_set('quicktabs_og_block_markup_' . $gid . '_value', $edit_group['value']);
        variable_set('quicktabs_og_block_markup_' . $gid . '_format', $edit_group['format']);
      }
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function quicktabs_og_block_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'quicktabs_og_block_block':
      $groups = _quicktabs_og_block_get_groups();
      $tabs = array();
      foreach ($groups as $gid => $group) {
        if (og_is_member('node', $gid)) {
          $tabs[$gid] = array(
            'title' => check_plain(t(variable_get('quicktabs_og_block_name_' . $gid, $group))),
            'contents' => check_markup(variable_get('quicktabs_og_block_markup_' . $gid . '_value', ''), variable_get('quicktabs_og_block_markup_' . $gid . '_format', variable_get('filter_default_format', NULL))),
          );
        }
      }
      // If in a group, set the group to be the default tab. If not in a
      // group, use configured default.
      // @TODO: quicktabs does not seem to key $tabs based on $gid
      $current_group = og_context();
      if (!empty($current_group)) {
        $default_group = $current_group['gid'];
      }
      else {
        $default_group = variable_get('quicktabs_og_block_default_tab', '');
      }
      $qt_name = 'quicktabs_og_block_quicktabs';
      $overrides = array(
        'style' => variable_get('quicktabs_og_block_style', ''),
        'ajax' => FALSE,
        'default_tab' => $default_group,
        'hide_empty_tabs' => TRUE
      );
      if ($qt = quicktabs_build_quicktabs($qt_name, $overrides, $tabs)) {
        if (isset($qt['content'])) {
          $block = array(
            'subject' => check_plain($qt['#title']),
            'content' => $qt['content'],
          );
        }
      }
      return $block;
  }
}

/**
 * Return information about each group.
 * @TODO: There is probably a more efficient way to do this.
 */
function _quicktabs_og_block_get_groups() {
  $gids = og_get_all_group();
  foreach ($gids as $gid) {
    $node = node_load($gid);
    $groups[$gid] = $node->title;
  }
  if (isset($groups)) {
    ksort($groups);
    return $groups;
  }
  return FALSE;
}
