<?php
// $Id$

/**
 * @file
 * 2 Way Video Chat Integration Module : Installation
 */

/**
 * Implementation of hook_schema()
 *
 * @return array of Schema API table definitions.
 */
function v2wvc_schema() {
  $schema['v2wvc_rooms'] = array(
    'fields' => array(
      'vid' => array('type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "Room ID",
      ),
      'nid' => array('type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "Node ID",
      ),
      'timecreated' => array('type' => 'int', 'not null' => FALSE, 'default' => 0,
        'description' => "Created Timestamp (Unix Timestamp, which is limited to values above Jan 1, 1970)",
      ),
      'timelastaccess' => array('type' => 'int', 'not null' => FALSE, 'default' => 0,
        'description' => "Last Access Timestamp (Unix Timestamp, which is limited to values above Jan 1, 1970)",
      ),
      'timeexpire' => array('type' => 'int', 'not null' => FALSE, 'default' => 0,
        'description' => "Expiration Timestamp (Unix Timestamp, which is limited to values above Jan 1, 1970)",
      ),
      'timeout' => array('type' => 'int', 'not null' => FALSE, 'default' => 0,
        'description' => "Clean if not used",
      ),
      'credits' => array('type' => 'int', 'not null' => FALSE, 'default' => 0,
        'description' => "Available time in minutes",
      ),
      'timeused' => array('type' => 'int', 'size' => 'big', 'not null' => FALSE, 'default' => 0,
        'description' => "How long was this used for",
      ),
      'welcome' => array('type' => 'text', 'not null' => FALSE,
        // NOTE:  On MySQL, text fields cannot have default values.
        'description' => "Room welcome message.",
      ),
      'room' => array('type' => 'varchar', 'length' => '64', 'not null' => FALSE,
        'description' => "Room welcome message.",
      ),
      'camwidth' => array(
        'description' => 'Camera resolution width',
        'type' => 'int',
        'size' => "small",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 320,
      ),
      'camheight' => array(
        'description' => 'Camera resolution height',
        'type' => 'int',
        'size' => "small",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 240,
      ),
      'camfps' => array(
        'description' => 'Camera frames per second',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 15,
      ),
      'micrate' => array(
        'description' => 'Micrate',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 22,
      ),
      'bandwidth' => array(
        'description' => 'Default bandwidth per stream',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 40960,
      ),
      'maxbandwidth' => array(
        'description' => 'Maximum bandwidth per stream',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 81920,
      ),
      'visitors' => array(
        'description' => 'Allow visitors',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'filterregex' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE,
        'description' => "Filter regex.",
        'default' => "(?i)(fuck|cunt)(?-i)",
      ),
      'filterreplace' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE,
        'description' => "Filter replace.",
        'default' => " ** ",
      ),
      'verbose' => array(
        'description' => 'Verbose level',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 4,
      ),
      'emoticons' => array(
        'description' => 'Allow emoticons',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'enablep2p' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'showtimer' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'sendtextchat' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'enableserver' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'showtextchat' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'enabledvideo' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'enabledsound' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'configuresource' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'configureconnection' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'showcamsettings' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'enablesoundfx' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'enablenext' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'enablebuzz' => array(
        'description' => 'Setting parameters',
        'type' => 'int',
        'size' => "tiny",
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
    ),
    'indexes' => array(
      'timelastaccess' => array('timelastaccess'),
      'room' => array('room'),
      'nid' => array('nid'),
    ),
    'primary key' => array('vid', 'nid'),
  );

  return $schema;
}

/**
 * Implementation of hook_requirements().
 */
function v2wvc_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase != 'runtime') {
    return $requirements;
  }

  if ($phase == 'runtime') {

    $path = variable_get('v2wvc_path', "/2wvc/");

    if (!file_exists(".". $path)) {
      $requirements['v2wvc_2wvc'] = array(
        'title' => $t('VideoWhisper 2 Way Video Chat'),
        'value' => $t('Not found'),
        'description' => $t('Please <a target="_blank" href="http://www.videowhisper.com/?p=Drupal+2+Way+Video+Chat+Module">download 2 Way Video Chat application</a> and upload it in: ') . $path,
        'severity' => REQUIREMENT_ERROR,
      );
    }

    if (!user_access('access 2wayvideochat', drupal_anonymous_user())) {
      $requirements['v2wvc_access'] = array(
        'title' => $t('2 Way Video Chat anonymous access'),
        'value' => $t('Access denied'),
        'description' => $t('Invited parties (that could be anonymous users) cannot currently access chat rooms. Please assign the "access 2wayvideochat" permission to the anonymous user role.'),
        'severity' => REQUIREMENT_WARNING,
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function v2wvc_install() {
 
  $t = get_t();

  // Define the node type.
  $v2wvc = array(
    'type' => 'v2wvc',
    'name' => $t('2 Way Video Chat room'),
    'base' => 'node_content',
		'description' => t("A <i>room</i> that can be used for customized 2 way video chat."),
    'custom' => TRUE,
    'modified' => TRUE,
    'locked' => FALSE,
		'has_title' => TRUE,
		'title_label' => t('2 Way Video Chat'),
		'has_body' => TRUE,
		'body_label' => t('Room Description'),
  );

  module_load_include('inc', 'node', 'content_types');
  db_update('system')
    ->condition('name', 'v2wvc')
    ->condition('type', 'module')
    ->fields(array('weight' => -1))
    ->execute();

  $v2wvc_type = node_type_set_defaults($v2wvc);
  node_type_save($v2wvc_type);
  node_add_body_field($v2wvc_type);
	
}
