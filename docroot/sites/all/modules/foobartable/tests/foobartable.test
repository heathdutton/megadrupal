<?php

/**
 * @file
 * Tests for FoobarTable (a bit modified tests for theme_table()).
 */

if (!function_exists('libraries_get_path')) {
  function libraries_get_path($library) {
    return "path";
  }
}

/**
 * Unit tests for theme_foobartable().
 */
class FoobarTableTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Foobar Table',
      'description' => 'Tests FoobarTable functions.',
      'group' => 'Theme',
    );
  }

  /**
   * Overrides DrupalWebTestCase::setUp().
   */
  public function setUp() {
    parent::setUp('foobartable');
  }

  /**
   * Checking basic table rendering.
   */
  function testThemeFoobarTable() {
    $header = array('one', 'two', 'three');
    $rows = array(array(1,2,3), array(4,5,6), array(7,8,9));
    $footer = array('four', 'five', 'six');
    $this->content = theme('table', array('header' => $header, 'footer' => $footer, 'rows' => $rows));
    $this->assertRaw('<tr class="odd"><td>1</td>', 'Table body was printed.');
    $this->assertRaw('<thead><tr><th>one</th>', 'Table header was printed.');
    $this->assertRaw('<tfoot><tr><td>four</td>', 'Table footer was printed.');
  }
  
  /**
   * Tableheader.js provides 'sticky' table headers, and is included by default.
   */
  function testThemeFoobarTableStickyHeaders() {
    $header = array('one', 'two', 'three');
    $rows = array(array(1,2,3), array(4,5,6), array(7,8,9));
    $this->content = theme('table', array('header' => $header, 'rows' => $rows));
    $js = drupal_add_js();
    $this->assertTrue(isset($js['misc/tableheader.js']), 'tableheader.js was included when $sticky = TRUE.');
    $this->assertRaw('sticky-enabled', 'Table has a class of sticky-enabled when $sticky = TRUE.');
    drupal_static_reset('drupal_add_js');
  }

  /**
   * If $sticky is FALSE, no tableheader.js should be included.
   */
  function testThemeFoobarTableNoStickyHeaders() {
    $header = array('one', 'two', 'three');
    $footer = array('four', 'five', 'six');
    $rows = array(array(1,2,3), array(4,5,6), array(7,8,9));
    $attributes = array();
    $caption = NULL;
    $colgroups = array();
    $this->content = theme('table', array('header' => $header, 'footer' => $footer, 'rows' => $rows, 'attributes' => $attributes, 'caption' => $caption, 'colgroups' => $colgroups, 'sticky' => FALSE));
    $js = drupal_add_js();
    $this->assertFalse(isset($js['misc/tableheader.js']), 'tableheader.js was not included because $sticky = FALSE.');
    $this->assertNoRaw('sticky-enabled', 'Table does not have a class of sticky-enabled because $sticky = FALSE.');
    drupal_static_reset('drupal_add_js');
  }

  /**
   * Tests that the table header is printed correctly even if there are no rows,
   * and that the empty text is displayed correctly.
   */
  function testThemeFoobarTableWithEmptyMessage() {
    $header = array(
      t('Header 1'),
      array(
        'data' => t('Header 2'),
        'colspan' => 2,
      ),
    );
    $footer = array(
      t('Footer 1'),
      array(
        'data' => t('Footer 2'),
        'colspan' => 2,
      ),
    );
    $this->content = theme('table', array('header' => $header, 'footer' => $footer, 'rows' => array(), 'empty' => t('No strings available.')));
    $this->assertRaw('<tr class="odd"><td colspan="3" class="empty message">No strings available.</td>', 'Correct colspan was set on empty message.');
    $this->assertRaw('<thead><tr><th>Header 1</th>', 'Table header was printed.');
    $this->assertRaw('<tfoot><tr><td>Footer 1</td>', 'Table footer was printed.');
  }

  /**
   * Tests that the 'no_striping' option works correctly.
   */
  function testThemeFoobarTableWithNoStriping() {
    $rows = array(
      array(
        'data' => array(1),
        'no_striping' => TRUE,
      ),
    );
    $this->content = theme('table', array('rows' => $rows));
    $this->assertNoRaw('class="odd"', 'Odd/even classes were not added because $no_striping = TRUE.');
    $this->assertNoRaw('no_striping', 'No invalid no_striping HTML attribute was printed.');
  }

  /**
   * Foobartable.js provides sorting features to table headers,
   * and is not included by default.
   */
  function testThemeFoobarTableNoJSorted() {
    $header = array('one', 'two', 'three');
    $rows = array(array(1,2,3), array(4,5,6), array(7,8,9));
    $this->content = theme('table', array('header' => $header, 'rows' => $rows));
    $js = drupal_add_js();
    $found = FALSE;
    foreach (array_keys($js) as $file) {
      if (strpos($file, 'foobartable.js') !== FALSE) {
        $found = TRUE;
        break;
      }
    }
    $this->assertFalse($found, 'foobartable.js wasn\'t included when $jsorted = FALSE.');
    $this->assertNoRaw('foobartable-sorting-enabled', 'Table has no class of foobartable-sorting-enabled when $jsorted = TRUE.');
    $this->assertNoRaw('foobartable-id-', 'Table has no class of foobartable-id-smth when $jsorted = TRUE.');
    drupal_static_reset('drupal_add_js');
  }

  /**
   * Foobartable.js provides sorting features to table headers,
   * and is not included by default.
   */
  function testThemeFoobarTableJSorted() {
    $header = array('one', 'two', 'three');
    $rows = array(array(1,2,3), array(4,5,6), array(7,8,9));
    $this->content = theme('table', array('header' => $header, 'rows' => $rows, 'jsorted' => TRUE));
    $js = drupal_add_js();
    $found = FALSE;
    foreach (array_keys($js) as $file) {
      if (strpos($file, 'foobartable.js') !== FALSE) {
        $found = TRUE;
        break;
      }
    }
    $this->assertTrue($found, 'foobartable.js was included when $jsorted = TRUE.');
    $this->assertRaw('foobartable-sorting-enabled', 'Table has a class of foobartable-sorting-enabled when $jsorted = TRUE.');
    $this->assertRaw('foobartable-id-', 'Table has a class of foobartable-id-smth when $jsorted = TRUE.');
    drupal_static_reset('drupal_add_js');
  }

  /**
   * Checking core 'table' and 'foobartable' working at the same time.
   */
  function testThemeFoobarTableUnReplaced() {
    $settings = variable_get('foobartable_settings');
    $settings['replace_core_theme'] = 0;
    variable_set('foobartable_settings', $settings);
    drupal_theme_rebuild();
    
    $header = array('one', 'two', 'three');
    $rows = array(array(1,2,3), array(4,5,6), array(7,8,9));
    $footer = array('four', 'five', 'six');
    $this->content = theme('foobartable', array('header' => $header, 'footer' => $footer, 'rows' => $rows));
    $this->assertRaw('<tr class="odd"><td>1</td>', 'Table body was printed.');
    $this->assertRaw('<thead><tr><th>one</th>', 'Table header was printed.');
    $this->assertRaw('<tfoot><tr><td>four</td>', 'Table footer was printed.');

    $this->content = theme('table', array('header' => $header, 'footer' => $footer, 'rows' => $rows));
    $this->assertRaw('<tr class="odd"><td>1</td>', 'Table body was printed.');
    $this->assertRaw('<thead><tr><th>one</th>', 'Table header was printed.');
    $this->assertNoRaw('<tfoot><tr><td>four</td>', 'Table footer was not printed.');
  }
}
