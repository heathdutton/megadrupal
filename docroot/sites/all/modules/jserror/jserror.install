<?php

/**
 * @file
 * Install, update and uninstall functions for the JSerror module.
 */

/**
 * Implements hook_schema().
 */
function jserror_schema() {
  $schema['jserror'] = array(
    'description' => 'Table that contains logs of all JavaScript errors.',
    'fields' => array(
      'eid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique error event ID.',
      ),
      'mid' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Type of error message."',
      ),
      'message' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Text of log message.',
      ),
      'file'  => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'URL of the origin of the event.',
      ),
      'page' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'URL of referring page.',
      ),
      'line' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Line number at the origin of the event.',
      ),
      'col' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Column number at the origin of the event.',
      ),
      'pageload' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Defines did the error occure',
      ),
      'user_agent' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'URL of the origin of the event.',
      ),
      'browser' => array(
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The browser on which eror occurred.',
      ),
      'browser_version' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'version number of the browser',
      ),
      'platform' => array(
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
        'description' => 'OS platform of client.',
      ),
      'platform_version' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'OsS version',
      ),
      'stack' => array(
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Serialized array of stack trace of the event.',
      ),
      'lang' => array(
        'type' => 'varchar',
        'length' => 8,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Language of the page.',
      ),
      'cookie' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Defines if the cookie was enabled',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp of when event occurred.',
      ),
    ),
    'primary key' => array('eid'),
    'indexes' => array(
      'mid' => array('mid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function jserror_uninstall() {
  variable_del('jserror_debug_mode');
  variable_del('jserror_suppress_warning');
  variable_del('jserror_page_limit');
  variable_del('jserror_client_limit');
  variable_del('jserror_percentage');
  variable_del('jserror_row_limit');
}
