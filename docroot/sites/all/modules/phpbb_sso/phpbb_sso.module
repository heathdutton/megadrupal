<?php

/**
 * Implements hook_menu().
 */
function phpbb_sso_menu() {
    $items['admin/config/system/phpbb_sso'] = array(
        'title' => 'phpBB Single Sign-On',
        'description' => 'Configure phpBB SSO settings.',
        'type' => MENU_NORMAL_ITEM,
        'page callback' => 'drupal_get_form',
        'page arguments' => array('phpbb_sso_admin'),
        'access arguments' => array('administer phpBB SSO'),
        'file' => 'phpbb_sso.admin.inc',
    );

    return $items;
}

/**
 * Implements hook_permission().
 */
function phpbb_sso_permission() {
    return array(
        'administer phpBB SSO' => array(
            'title' => t('Administer phpBB SSO'),
            'description' => t('Perform administration tasks for phpBB SSO.'),
            'restrict access' => TRUE,
        ),
    );
}

function phpbb_sso_get_table($table) {
    $table_prefix = phpbb_sso_get_phpbb_table_prefix();
    if ($database = phpbb_sso_get_phpbb_db())
        return check_plain("{$database}.{$table_prefix}{$table}");
    else
        return check_plain("{$table_prefix}{$table}");
}

function phpbb_sso_get_phpbb_db() {
    return variable_get('phpbb_sso_phpbb_db', '');
}

function phpbb_sso_get_phpbb_table_prefix() {
    $prefix = variable_get('phpbb_sso_phpbb_table_prefix', '');
    return (!empty($prefix)) ? $prefix . '_' : '';
}

/**
 * Implements hook_user_login().
 *
 * A user has just logged into Drupal. Try to log the user into phpBB as well.
 */
function phpbb_sso_user_login(&$edit, $account) {
    module_load_include('inc', 'phpbb_sso', 'phpbb_sso.auth');

    if (!($phpbb_user = _phpbb_sso_get_user($account->name))) {
        phpbb_sso_debug('Could not find your phpBB username.');
        return;
    }

    // Log this user into phpBB
    phpbb_sso_create_phpbb_session($phpbb_user);

    phpbb_sso_debug('You have been logged into phpBB.');
}

/**
 * Implements hook_user_logout().
 *
 * A user has just logged out of Drupal. Try to log the user out of phpBB as well.
 */
function phpbb_sso_user_logout($account) {
    module_load_include('inc', 'phpbb_sso', 'phpbb_sso.auth');

    if (!($phpbb_user = _phpbb_sso_get_user($account->name))) {
        phpbb_sso_debug('Could not find your phpBB username.');
        return;
    }

    // Log this user out of phpBB
    phpbb_sso_destroy_phpbb_session($phpbb_user);
    
    phpbb_sso_debug('You have been logged out of phpBB.');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function phpbb_sso_form_user_login_block_alter(&$form, &$form_state, $form_id) {
    // Make sure the only validator before ours is user_login_name_validate().
    $form['#validate'] = array(
        'user_login_name_validate',
        'phpbb_sso_login_authenticate_validate',
        'user_login_authenticate_validate',
        'user_login_final_validate',
    );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function phpbb_sso_form_user_login_alter(&$form, &$form_state, $form_id) {
    // Make sure the only validator before ours is user_login_name_validate().
    $form['#validate'] = array(
        'user_login_name_validate',
        'phpbb_sso_login_authenticate_validate',
        'user_login_authenticate_validate',
        'user_login_final_validate',
    );
}

/**
 * A user is trying to log into Drupal. If the account does not exist in Drupal,
 * but exists in phpBB, try to log them in using their phpBB credentials.
 */
function phpbb_sso_login_authenticate_validate(&$form, &$form_state) {
    // Leave if user_login_name_validate() set errors because the user is blocked.
    if (form_get_errors())
        return;

    // Skip phpbb login if Drupal account already exists.
    $username = $form_state['values']['name'];
    $password = $form_state['values']['pass'];
    $count = db_query("SELECT COUNT(*) FROM {users} WHERE name = :name", array(':name' => $username))->fetchField();
    if ($count == 1) {
        return;
    }

    module_load_include('inc', 'phpbb_sso', 'phpbb_sso.auth');

    if (!($phpbb_user = _phpbb_sso_get_user($username))) {
        phpbb_sso_debug('Could not find your phpBB username.');
        return;
    }

    if (phpbb_sso_check_user($username, $password)) {
        phpbb_sso_debug('You have sucessfully logged in using your phpBB credientials.');
        // Create the user and login
        user_external_login_register($username, 'phpbb');

        // Load the new user account
        $account = user_external_load($username);
        // Set the password for this Drupal account to the password used on the login form, and
        // get the user's email address from phpBB.
        user_save($account, array('pass' => $password, 'mail' => $phpbb_user->user_email));

        // Redirect the page (which helps to avoid running any more login validators, like user_login_authenticate_validate())
        $redirect = !empty($form_state['redirect']) ? $form_state['redirect'] : 'user/' . $account->uid;
        drupal_goto($redirect);
    }
}

function phpbb_sso_check_user($username, $password) {
    if (empty($username) || empty($password)) {
        return false;
    }

    $path = variable_get('phpbb_sso_phpbb_path', '');
    module_load_include('inc', 'phpbb_sso', 'phpbb_sso.auth');

    return _phpbb_sso_check_user($username, $password);
}

function phpbb_sso_create_phpbb_session($phpbb_user) {
    if (empty($phpbb_user))
        return;

    module_load_include('inc', 'phpbb_sso', 'phpbb_sso.session');

    _phpbb_sso_create_phpbb_session($phpbb_user);
}

function phpbb_sso_destroy_phpbb_session($phpbb_user) {
    if (empty($phpbb_user))
        return;

    module_load_include('inc', 'phpbb_sso', 'phpbb_sso.session');

    _phpbb_sso_destroy_phpbb_session($phpbb_user);
}

function phpbb_sso_get_config($settings) {
    if (!is_array($settings))
        $settings = array($settings);

    if (!($config_table = phpbb_sso_get_table('config')))
        return;

    $config = array();
    foreach ($settings as $setting) {
        $result = db_query("SELECT config_value FROM {$config_table} WHERE config_name = :name", array(':name' => $setting));
        if ($result->rowCount())
            $config[$setting] = $result->fetchField();
    }

    return $config;
}

function phpbb_sso_debug($message) {
    $enabled = variable_get('phpbb_sso_debug_enabled', true);
    if (!$enabled) {
        return;
    }

    if (variable_get('phpbb_sso_debug_screen', false)) {
        if (!is_string($message))
            $message = print_r($message, true);

        drupal_set_message($message);
    }

    if (variable_get('phpbb_sso_debug_devel', true) && module_exists('devel')) {
        dpm($message);
    }

    if (variable_get('phpbb_sso_debug_watchdog', false)) {
        if (!is_string($message))
            $message = print_r($message, true);

        watchdog('phpbb_sso', $message, array(), WATCHDOG_DEBUG);
    }
}
