<?php
/**
 * @file
 * Adds administration page, manage i18nvariable, display form and block
 * for Addemar Subscription module.
 */

/**
 * Set up includes.
 */
require_once 'includes/addemar_subscription.constant.inc';
require_once 'includes/addemar_subscription.functions.inc';

/**
 * Implements hook_help().
 */
function addemar_subscription_help($path, $arg) {
  switch ($path) {
    case 'admin/help#addemar_subscription':
      return t('<p><strong>Description:</strong><br/>
      This module provides a form to register to addemar via REST method.<br/><br/>
      <strong>Installation:</strong><br/>
      1. Place the entire addemar_subscription directory into your Drupal "sites/all/modules/" directory.<br/>
      2. Enable the addemar_subscription module by navigating to: "administer > modules".<br/><br/>
      <strong>Features:</strong><br/>
      <ul>
      <li>a block to place into a region.</li>
      <li>a page located under "newsleter/subscribe".</li>
      <li>a configuration page is located under "admin/config/services/addemar_subscription" where you can define:
      <ul>
      <li><u>REST settings</u>
      <ul>
      <li>- REST Url</li>
      <li>- REST Token</li>
      <li>- REST Profile</li>
      <li>- REST Method</li>
      <li>- REST Message</li>
      </ul>
      </li>
      <li><u>General settings</u>
      <ul>
      <li>- Group ID</li>
      <li>- Source</li>
      <li>- Type of subscription</li>
      </ul>
      </li>
      <li><u>Form settings</u>
      <ul>
      <li>- Addemar fields</li>
      <li>- Page url</li>
      <li>- Submit value</li>
      </ul>
      </li>
      <li><u>Message settings</u>
      <ul>
      <li>- Success</li>
      <li>- Error</li>
      </ul>
      </li>
      </ul>
      </li>
      </ul><br/>
      <strong>Author:</strong><br/>
      Gigot Frédéric<br/>
      http://drupal.org/user/1269974<br/></p>');
  }
}

/**
 * Implements hook_variable_group_info().
 */
function addemar_subscription_variable_group_info() {
  $groups['addemar_subscription'] = array(
    'title'       => t('Addemar Subscription'),
    'description' => t('Addemar settings'),
    'access'      => 'administer site configuration',
  );
  return $groups;
}

 /**
  * Implements hook_variable_info().
  */
function addemar_subscription_variable_info($options) {
  $variable['addemar_subscription_addemar_fields'] = array(
    'type'        => 'text',
    'title'       => t('Addemar Fields', array(), $options),
    'description' => t('List all fields declared in Addemar here.', array(), $options),
    'default'     => '',
    'group'       => 'addemar_subscription',
  );
  $variable['addemar_subscription_language_field'] = array(
    'type'        => 'string',
    'title'       => t('Addemar Language Field', array(), $options),
    'description' => t('The Addemar field that should be used to store the language for a user.', array(), $options),
    'default'     => '',
    'group'       => 'addemar_subscription',
  );
  $variable['addemar_subscription_submit_button'] = array(
    'type'        => 'string',
    'title'       => t('Submit button', array(), $options),
    'description' => t('Change the text value on the submit button.', array(), $options),
    'default'     => ADDEMAR_SUBSCRIPTION_SUBMIT_BUTTON,
    'group'       => 'addemar_subscription',
  );

  $variable['addemar_subscription_message_success'] = array(
    'type'        => 'string',
    'title'       => t('Message success', array(), $options),
    'description' => t('The message that will be displayed if everything went well.', array(), $options),
    'default'     => ADDEMAR_SUBSCRIPTION_MESSAGE_SUCCESS,
    'group'       => 'addemar_subscription',
  );
  $variable['addemar_subscription_message_error'] = array(
    'type'        => 'string',
    'title'       => t('Message error', array(), $options),
    'description' => t('The message that will be displayed if an error is returned by Addemar.', array(), $options),
    'default'     => ADDEMAR_SUBSCRIPTION_MESSAGE_ERROR,
    'group'       => 'addemar_subscription',
  );

  return $variable;
}

/**
 * Implements hook_permission().
 */
function addemar_subscription_permission() {
  return array(
    'access addemar_subscription configuration' => array(
      'title' => t('Configure subscription form'),
    ),
    'access addemar_subscription content' => array(
      'title' => t('Access subscription form'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function addemar_subscription_menu() {
  $items['admin/config/services/addemar_subscription'] = array(
    'title'             => 'Addemar subscription',
    'description'       => 'Configure Addemar subscription.',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('addemar_subscription_admin'),
    'access arguments'  => array('access addemar_subscription configuration'),
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'includes/addemar_subscription.admin.inc',
  );
  $items[variable_get('addemar_subscription_page_url', ADDEMAR_SUBSCRIPTION_PAGE_URL)] = array(
    'title'             => 'Newsletter registration',
    'type'              => MENU_NORMAL_ITEM,
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('addemar_subscription_subscribe_form'),
    'access arguments'  => array('access addemar_subscription content'),
  );

  return $items;
}

/**
 * Implements hook_form().
 */
function addemar_subscription_subscribe_form() {
  $form = array();

  drupal_add_css(drupal_get_path('module', 'addemar_subscription') . '/assets/styles/addemar_subscription.css');

  $soap_wsdl = variable_get('addemar_subscription_soap_wsdl', ADDEMAR_SUBSCRIPTION_SOAP_WSDL);

  if (_addemar_subscription_get_soap_client($soap_wsdl)) {

    $newsletters = variable_get('addemar_subscription_groups', array());
    $options = array();

    foreach ($newsletters as $newsletter) {
      $options[implode($newsletter['group_id'], ',')] = t($newsletter['description']);
    }

    if (!empty($options)) {

      if (count($options) > 1) {
        $form['newsletters'] = array(
          '#type' => 'checkboxes',
          '#title' => t('Please choose the newsletters you want to subscribe to'),
          '#options' => $options,
          '#required' => TRUE,
        );
      }
      else {
        $group_id = array_keys($options);
        $newsletter = array_shift($options);
        $form['newsletters'] = array(
          '#type' => 'hidden',
          '#value' => $group_id,
        );
        $form['newsletter_markup'] = array(
          '#markup' => '<div class="addemar_newsletter_markup">' . t('Subscribe to !newsletter', array('!newsletter' => '<em>' . t($newsletter) . '</em>')) . '</div>',
        );
      }
    }
    $email_exist = FALSE;
    $fields = _addemar_subscription_addemar_fields();

    if (!empty($fields)) {

      foreach ($fields as $field) {
        $field = explode('|', $field);

        switch (count($field)) {
          case 3:
            list($name, $label, $required) = $field;
            break;

          case 2:
            list($name, $label) = $field;
            unset($required);
            break;

        }

        $form['addemar_subscription_' . $name] = array(
          '#type'     => 'textfield',
          '#title'    => t(check_plain($label)),
          '#required' => (isset($required) || $name === 'email') ? TRUE : FALSE,
        );
        $email_exist = ($name === 'email');
      }
    }

    // The email is required whatsoever, so add it if not listed in the admin.
    if (!$email_exist) {
      $form['addemar_subscription_email'] = array(
        '#type'     => 'textfield',
        '#title'    => t('Email'),
        '#required' => TRUE,
      );
    }

    $form['submit'] = array(
      '#type'     => 'submit',
      '#value'    => t(variable_get_value('addemar_subscription_submit_button')),
    );
  }
  else {
    $form['addemar_subscription_error'] = array(
      '#markup' => t('The addemar subscription settings are not properly configured. Please check the SOAP wsdl url.'),
    );
  }

  return $form;
}

/**
 * Implements hook_validate().
 *
 * @see addemar_subscription_subscribe_form_submit().
 */
function addemar_subscription_subscribe_form_validate($form, &$form_state) {
  if (!valid_email_address(trim($form_state['values']['addemar_subscription_email']))) {
    form_set_error('email', t('Please enter a valid email address.'));
  }
}

/**
 * Implements hook_form_submit().
 *
 * @see addemar_subscription_subscribe_form_validate().
 */
function addemar_subscription_subscribe_form_submit($form, &$form_state) {
  $success = FALSE;

  if ($s_client = _addemar_subscription_get_soap_client()) {
    $source = variable_get('addemar_subscription_source_message', ADDEMAR_SUBSCRIPTION_SOURCE_MESSAGE);
    $language_code = variable_get('addemar_subscription_language_code', ADDEMAR_SUBSCRIPTION_LANGUAGE_CODE);

    // Get interface language
    global $language;

    switch ($language->language) {
      case 'fr':
        $lang_code = 'fr_BE';
        break;

      case 'nl':
        $lang_code = 'nl_BE';
        break;

      case 'de':
        $lang_code = 'de_DE';
        break;

      case 'en':
      default:
        $lang_code = 'en_UK';
    }
    $contact_data = $s_client->getContactStructure();

    for ($i = 0; $i < count($contact_data->fields); $i++) {
      if ($contact_data->fields[$i]->name == $language_code) {
        $contact_data->fields[$i]->value = $language->language;
      }
      if (array_key_exists('addemar_subscription_' . $contact_data->fields[$i]->name, $form_state['values'])) {
        $contact_data->fields[$i]->value = $form_state['values']['addemar_subscription_' . $contact_data->fields[$i]->name];
      }
    }
    $success = TRUE;

    if ($contact_data->cid = $s_client->createContact($contact_data)) {
      $groups_ids = array_values(array_filter($form_state['values']['newsletters']));

      foreach ($groups_ids as $group_id) {
        $args = array(
          'contact_data' => $contact_data,
          'log_msg' => $source,
          'language' => $lang_code,
          'mgid' => $group_id,
        );
        $cid = $s_client->__soapCall('formOptin', $args);

        if (!is_numeric($cid)) {
          $success = FALSE;
        }
      }
    }
    else {
      $success = FALSE;
    }

  }
  // Check return.
  if ($success) {
    drupal_set_message(variable_get_value('addemar_subscription_message_success'), 'status');
  }
  else {
    drupal_set_message(variable_get_value('addemar_subscription_message_error'), 'error');
  }
}

/**
 * Implements hook_block_info().
 */
function addemar_subscription_block_info() {
  $blocks = array();
  $blocks['addemar_subscription'] = array(
    'info' => t('Addemar: Newsletter registration'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function addemar_subscription_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'addemar_subscription':
      if (user_access('access addemar_subscription content')) {
        $block['subject'] = t('Newsletter registration');
        $block['content'] = drupal_get_form('addemar_subscription_subscribe_form');
      }
      break;

  }
  return $block;
}
