<?php
/**
 * @file
 * Main module file for webform_sameas
 */

/**
 * Implements hook_webform_component_info().
 */
function webform_sameas_webform_component_info() {
  $components = array();
  $components['sameas'] = array(
    'file' => 'components/sameas.inc',
    'label' => t('Same-As'),
    'description' => t('Copies source fields to target.'),
    'features' => array(
      'csv' => TRUE,
      'email' => TRUE,
      'email_address' => FALSE,
      'email_name' => FALSE,
      'required' => FALSE,
      'conditional' => FALSE,
      'title_display' => TRUE,
      'title_inline' => TRUE,
      'private' => TRUE,
      'group' => FALSE,
      'spam_analysis' => FALSE,
      'attachment' => FALSE,
    ),
  );
  return $components;
}

/**
 * Implements hook_form_alter().
 *
 * Adds wrappers and state controls to handle modifying the display
 * of the target fields based on the sameas field values.
 */
function webform_sameas_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'webform_client_form_') === FALSE) {
    return;
  }

  $components = $form['#node']->webform['components'];

  // Find the sameas components on the form.
  $sameas_components = webform_sameas_get_sameas_components($components);

  // Add an additional submission handler to copy values from source to target.
  if (!empty($sameas_components)) {
    $form['#process'][] = 'webform_sameas_form_process';
  }

  foreach ($sameas_components as $sameas_component) {
    $target_cid = $sameas_component['extra']['target_field'];
    $target_field = &$components[$target_cid];
    $target_field_key = $target_field['form_key'];
    $target_parents = array();
    webform_sameas_get_parents($components, $target_cid, $target_parents);
    $container = &drupal_array_get_nested_value($form['submitted'], array_keys($target_parents));

    // Add handles to control the field display.
    webform_sameas_set_display_mode_state($container[$target_field_key], $sameas_component);

    // Add additional css classes to form elements.
    webform_sameas_add_css($sameas_components, $form['submitted']);
  }
}

/**
 * Callback function for pre-processing the form submission.
 *
 * Copies data from source to target fields in the form_state when the
 * sameas checkbox is checked.  We do this work in a #process hook so
 * that the correct values are available before the the Drupal core
 * validation hooks fire.
 *
 * @param array $element
 *   The element being processed.
 *
 * @param array $form_state
 *   The form_state for the form.
 *
 * @return array
 *   The element being processed.
 */
function webform_sameas_form_process($element, &$form_state) {
  if ($form_state['process_input']) {
    $components = $element['#node']->webform['components'];
    $sameas_components = webform_sameas_get_sameas_components($components);
    foreach ($sameas_components as $sameas_cid => $sameas_component) {
      // See if the sameas checkbox is checked.
      $sameas_component_parents = array();
      webform_sameas_get_parents($components, $sameas_cid, $sameas_component_parents, TRUE);
      $sameas_checked = drupal_array_get_nested_value($form_state['input']['submitted'], array_keys($sameas_component_parents));

      if ($sameas_checked) {
        // Get the value of the source field.
        $source_cid = $sameas_component['extra']['src_field'];
        $source_parents = array();
        webform_sameas_get_parents($components, $source_cid, $source_parents, TRUE);
        $source_value = drupal_array_get_nested_value($form_state['input']['submitted'], array_keys($source_parents));

        // Get the parents of the target field.
        $target_cid = $sameas_component['extra']['target_field'];
        $target_parents = array();
        webform_sameas_get_parents($components, $target_cid, $target_parents, TRUE);

        // Set the target field to match the source field.
        drupal_array_set_nested_value($form_state['input']['submitted'], $target_parents, $source_value);
      }
    }
  }

  return $element;
}

/**
 * Implements hook_webform_submission_presave().
 */
function webform_sameas_webform_submission_presave($node, &$submission) {
  $webform = $node->webform;
  $sameas_components = webform_sameas_get_sameas_components($webform['components']);
  foreach ($sameas_components as $component) {
    $source_cid = $component['extra']['src_field'];
    $target_cid = $component['extra']['target_field'];

    if (!empty($source_cid) && !empty($target_cid)) {
      if (isset($submission->data[$source_cid]) && isset($submission->data[$target_cid])) {
        $submission->data[$target_cid] = $submission->data[$source_cid];
        break;
      }
    }
  }
}

/**
 * Returns an array of components for selecting field mappings.
 *
 * @param int $nid
 *   The node id of the form.
 *
 * @param string $form_key_to_exclude
 *   The form key to exclude (the sameas).
 *
 * @return array
 *   Component form_keys of the same node.
 */
function _webform_sameas_get_other_components($nid, $form_key_to_exclude) {
  $component_list = &drupal_static(__FUNCTION__, array());

  if (!isset($component_list[$nid])) {
    $node = node_load($nid);
    $webform = $node->webform;
    foreach ($webform['components'] as $cid => $component) {
      if ($component['form_key'] != $form_key_to_exclude) {
        $component_list[$nid][$cid] = $component['name'];
      }

    }
  }

  return $component_list[$nid];
}

/**
 * Retrieves a list of "sameas" components defined in the passed webform.
 *
 * @param array $components
 *   An array of the components defined on the webform.
 *
 * @return array
 *   An array of all sameas components on the form keyed by component_id.
 */
function webform_sameas_get_sameas_components($components) {
  $sameas_components = &drupal_static(__FUNCTION__);

  if (!isset($sameas_components)) {
    $sameas_components = array();
    foreach ($components as $cid => $component) {
      if ($component['type'] == 'sameas') {
        $sameas_components[$cid] = $component;
      }
    }
  }

  return $sameas_components;
}

/**
 * Generates a jQuery selector for the sameas component.
 *
 * @param array $sameas_component
 *   The sameas component.
 *
 * @return string
 *   A selector that can be used by jQuery.
 */
function webform_sameas_get_selector($sameas_component) {
  $selector = 'input.webform-sameas--' . $sameas_component['form_key'];
  return array($selector => array('checked' => TRUE));
}

/**
 * Retrieves an array of all parent container components for a given cid.
 *
 * @param array $components
 *   An array of all components on the webform.
 *
 * @param int $cid
 *   The ID of the component to get the parents for.
 *
 * @param array $parents
 *   An array to store the parents in.
 *
 * @param bool $include_cid
 *   Set to TRUE to include the component for the specified cid in the tree.
 *   Should always be TRUE at $depth > 0.
 *
 * @param int $depth
 *   Internal tracking parameter to determine when to exit.
 */
function webform_sameas_get_parents($components, $cid, &$parents, $include_cid = FALSE, $depth = 0) {
  if (!isset($parents)) {
    $parents = array();
  }

  $component = $components[$cid];
  if ($include_cid) {
    $parents[$component['form_key']] = $component['form_key'];
  }

  if (!empty($component['pid']) && $component['pid'] != 0) {
    webform_sameas_get_parents($components, $component['pid'], $parents, TRUE, ++$depth);
  }

  if ($depth == 1) {
    $parents = array_reverse($parents, TRUE);
  }
}

/**
 * Add state attributes to the field to control the display.
 *
 * @param array $target_component
 *   The webform component to adjust the display on.
 *
 * @param array $sameas_component
 *   The array for the sameas component controlling this container.
 */
function webform_sameas_set_display_mode_state(&$target_component, $sameas_component) {
  $display_mode = $sameas_component['extra']['display_mode'];
  if ($display_mode != 'none') {
    $selector = webform_sameas_get_selector($sameas_component);
    $target_component['#states'][$display_mode] = $selector;
  }

  // Add states to any child elements.
  foreach (element_children($target_component) as $child_key) {
    webform_sameas_set_display_mode_state($target_component[$child_key], $sameas_component);
  }
}

/**
 * Adds additional CSS classes to all form elements.
 *
 * @param array $form
 *   The form array.
 */
function webform_sameas_add_css($sameas_components, &$form) {
  $children = element_children($form);
  if (!empty($children)) {
    foreach ($children as $child) {
      if (!empty($form[$child])) {
        if (isset($form[$child]['#webform_component'])) {
          // Get info about the component.
          $component = $form[$child]['#webform_component'];
          list($is_referenced, $is_source, $is_target, $sameas_component) = webform_sameas_is_referenced($sameas_components, $component);

          if ($is_referenced) {
            $form_key = $component['form_key'];
            $cid = $component['cid'];
            $type = $component['type'];
            $source_target = $is_source ? 'source' : 'target';
            $target_cid = $sameas_component['extra']['target_field'];
            $sameas_component_cid = $sameas_component['cid'];
            $sameas_component_form_id = $sameas_component['form_key'];

            // Add additional CSS classes so that we can work with the component.
            $form[$child]['#attributes']['class'][] = "webform-sameas-key--$form_key";
            $form[$child]['#attributes']['class'][] = "webform-sameas-cid--$cid";
            $form[$child]['#attributes']['class'][] = "webform-sameas-type--$type";
            $form[$child]['#attributes']['class'][] = "webform-sameas-controller-cid--$sameas_component_cid";
            $form[$child]['#attributes']['class'][] = "webform-sameas-controller-form-key--$sameas_component_form_id";
            $form[$child]['#attributes']['class'][] = "webform-sameas-$source_target";
            if (!$is_target) {
              $form[$child]['#attributes']['class'][] = "webform-sameas-target-cid--$target_cid";
            }

            if ($type == 'addressfield') {
              // Apply classes to all child elements of the address field.
              $classes = $form[$child]['#attributes']['class'];
              webform_sameas_process_addressfield($classes, $form[$child]);
            }
          }

        }

        if (is_array($form[$child])) {
          webform_sameas_add_css($sameas_components, $form[$child]);
        }
      }
    }
  }
}

/**
 * Determines if a given component is referenced by a sameas component.
 *
 * @param array $sameas_components
 *   A list of all sameas components.
 *
 * @param array $component
 *   The webform component being checked.
 *
 * @return array
 *   An array with the following fields:
 *   $is_referenced, $is_source, $is_target, $sameas_component
 */
function webform_sameas_is_referenced($sameas_components, $component) {
  $is_referenced = FALSE;
  $is_source = FALSE;
  $is_target = FALSE;
  $sameas_component = NULL;

  foreach ($sameas_components as $cid => $sameas_component) {
    $source_cid = $sameas_component['extra']['src_field'];
    $target_cid = $sameas_component['extra']['target_field'];
    $is_source = ($component['cid'] == $source_cid);
    $is_target = ($component['cid'] == $target_cid);
    $is_referenced = ($is_source || $is_target);
    if (!$is_referenced) {
      break;
    }
  }

  if (!$is_referenced) {
    $sameas_component = NULL;
  }

  return array($is_referenced, $is_source, $is_target, $sameas_component);
}

/**
 * Adds additional classes to addressfield components.
 *
 * @param array $classes
 *   An array of classes to add to each element of an addressfield.
 *
 * @param array $field
 *   The form api array of the addressfield.
 */
function webform_sameas_process_addressfield($classes, &$field) {
  $children = element_children($field);
  if (!empty($children)) {
    foreach ($children as $child) {
      $field[$child]['#attributes']['class'] += $classes;
      webform_sameas_process_addressfield($classes, $field[$child]);
    }
  }
}

/**
 * Converts the TRUE/FALSE value of the field to human readable text.
 *
 * @param bool $value
 *   Indicates if the field is checked.
 *
 * @return string
 *   The string "Yes" or "No".
 */
function webform_sameas_get_field_value_as_text($value) {
  $value_text = isset($value[0]) && $value[0] ? t('Yes') : t('No');
  return $value_text;
}
