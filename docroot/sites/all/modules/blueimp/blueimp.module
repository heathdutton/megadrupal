<?php
/**
* @file
* Generates a Twitter Bootstrap Carousel with images carousel.
*
*/

/**
 * Implements hook_init().
 */

function blueimp_init() {
  $settings = variable_get('blueimp_settings');
  if (blueimp_check_path($settings['visibility']['visibility'], $settings['visibility']['pages'])) {
    $module_path = drupal_get_path('module', 'blueimp');
    drupal_add_js(array(
      'blueimp' => array(
        'module_path' => $module_path,
        'trigger' => $settings['trigger'],
        'startControls' => $settings['navigation']['startControls'],
        'hidePageScrollbars' => $settings['navigation']['hidePageScrollbars'],
        'carousel' => $settings['navigation']['carousel'],
        'startSlideshow' => $settings['navigation']['startSlideshow'],
        'continuous' => $settings['navigation']['continuous'],
        'slideshowInterval' => $settings['navigation']['slideshowInterval'],
        'transitionSpeed' => $settings['navigation']['transitionSpeed'],
      ),
    ),
    'setting');
    libraries_load('blueimp');
    drupal_add_js($module_path . '/blueimp.js');
    drupal_add_js($module_path . '/jquery.blueimp-gallery.js');
    drupal_add_css($module_path . '/blueimp.css');
  }
}

/**
* Implementation of hook_menu().
*/
function blueimp_menu() {
  // Admin settings.
  $items['admin/config/user-interface/blueimp'] = array(
    'title' => 'Blueimp Gallery',
    'description' => 'Shows a carousel of images on a Blueimp Gallery',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('blueimp_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function blueimp_check_path($visibility, $pages) {
  $pages = drupal_strtolower($pages);
  // Convert the Drupal path to lowercase
  $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
  // Compare the lowercase internal and lowercase path alias (if any).
  $page_match = drupal_match_path($path, $pages);
  if ($path != $_GET['q']) {
    $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
  }
  // When $block->visibility has a value of 0 (BLOCK_VISIBILITY_NOTLISTED),
  // the block is displayed on all pages except those listed in $block->pages.
  // When set to 1 (BLOCK_VISIBILITY_LISTED), it is displayed only on those
  // pages listed in $block->pages.
  $page_match = !($visibility xor $page_match);
  return $page_match;
}

/**
 * Module settings form.
 */
function blueimp_settings($form, &$form_state) {
  $settings = variable_get('blueimp_settings');

  $options['trigger'] = array(
    '#type' => 'textarea',
    '#title' => t('Valid jQuery Classes/IDs to trigger Blueimp Gallery (One per line)'),
    '#default_value' => $settings['trigger'],
    '#description' => t('Specify the class/ID of a container of links to load destination images in a Blueimp Gallery, one per line. For example by providing ".field-name-field-image" will open any image link inside class="field-name-field-image" container in a gallery'),
  );

  // Navigation
  $options['navigation'] = array(
    '#type' => 'fieldset',
    '#title' => t('Navigation'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $options['navigation']['startControls'] = array(
    '#type' => 'checkbox',
    '#title' => t('Start with visibe controls'),
    '#default_value' => $settings['navigation']['startControls'],
    '#description' => t('When enable, controls will be visible on load.'),
  );
  $options['navigation']['hidePageScrollbars'] = array(
    '#type' => 'checkbox',
    '#title' => t('Hide the page scrollbars'),
    '#default_value' => $settings['navigation']['hidePageScrollbars'],
    '#description' => t('When enable, click outside image will close galley.'),
  );
  $options['navigation']['carousel'] = array(
    '#type' => 'checkbox',
    '#title' => t('Carousel'),
    '#default_value' => $settings['navigation']['carousel'],
    '#description' => t('Shortcut to carousel options.'),
  );
  $options['navigation']['startSlideshow'] = array(
    '#type' => 'checkbox',
    '#title' => t('Slideshow'),
    '#default_value' => $settings['navigation']['startSlideshow'],
    '#description' => t('Starts automatically a Slideshow.'),
  );
  $options['navigation']['continuous'] = array(
    '#type' => 'checkbox',
    '#title' => t('Cycle continuously.'),
    '#description' => t('If this option in checked, the corousel will continue on first carousel after reaching last and viceversa.'),
    '#default_value' => $settings['navigation']['continuous'],
  );
  $options['navigation']['slideshowInterval'] = array(
    '#type' => 'textfield',
    '#title' => t('Slideshow interval'),
    '#maxlength' => 6,
    '#size' => 6,
    '#default_value' => $settings['navigation']['slideshowInterval'],
    '#description' => t('Enter a time in milliseconds. The pause time determines how long each carousel is displayed before transitioning to the next carousel.'),
    '#field_suffix' => t('ms'),
  );
  $options['navigation']['transitionSpeed'] = array(
    '#type' => 'textfield',
    '#title' => t('Transition Speed'),
    '#maxlength' => 6,
    '#size' => 6,
    '#default_value' => $settings['navigation']['transitionSpeed'],
    '#description' => t('Enter a time in milliseconds. The transition speed determines how long each carousel takes to transtion.'),
    '#field_suffix' => t('ms'),
  );
  // Per-path visibility.
  $options['visibility'] = array(
    '#type' => 'fieldset',
    '#title' => t('Pages'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $options['visibility']['visibility'] = array(
    '#type' => 'radios',
    '#title' => t('Activate on specific pages'),
    '#options' => array(
      0 => t('All pages except those listed'),
      1 => t('Only the listed pages'),
    ),
    '#default_value' => $settings['visibility']['visibility'],
  );
  $options['visibility']['pages'] = array(
    '#type' => 'textarea',
    '#title' => 'List of pages to avtivate',
    '#default_value' => $settings['visibility']['pages'],
    '#description' => t("Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>')),
  );

  $options['#tree'] = TRUE;
  $form['blueimp_settings'] = $options;

  // Disable automatic defaults, which don't work with nested values.
  return system_settings_form($form, FALSE);
}

/**
 * Libraries implementation.
 */

/**
 * Implements hook_libraries_info().
 */
function blueimp_libraries_info() {
  $libraries['blueimp'] = array(
    'name' => 'Blueimp',
    'vendor url' => 'https://blueimp.github.io/Gallery/',
    'download url' => 'https://github.com/blueimp/Gallery/archive/master.zip',
    'version'=> "2.15.2",
    'files' => array(
      'js' => array(
        'js/blueimp-gallery.min.js',
        'js/blueimp-gallery-fullscreen.js',
      ),
      'css' => array(
        'css/blueimp-gallery.css',
        'css/blueimp-gallery.min.css',
        'css/blueimp-gallery-indicator.css',
        'css/blueimp-gallery-video.css',
      ),
    ),
  );
  return $libraries;
}

/**
 * Check if the Sroll Reveal library is installed.
 *
 * @return
 *   A boolean indicating the installed status.
 */
function blueimp_installed() {
  if (($library = libraries_detect('blueimp')) && !empty($library['installed'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Check if the Scroll Reveal library has been loaded.
 *
 * @return
 *   A boolean indicating the loaded status.
 */
function blueimp_library_loaded() {
  if (($library = libraries_load('blueimp')) && !empty($library['loaded'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

