<?php

/**
 * Enables jQuery Placeholder plugin for the element(s) with the given $id(s).
 *
 * @param $ids
 *   A single HTML ID, or an array of more than one.
 * @param $render_array
 *   (Optional) Pass a render array here and the necessary library/javascript
 *   will be entered in the #attached, rather than added directly. This is much
 *   better since the javascript will only be added if the render array is
 *   actually rendered. It will also work with output which may be cached.
 *
 * @return TRUE.
 */
function jquery_placeholder($ids, &$render_array = NULL) {

  if (!is_array($ids)) {
    $ids = array($ids);
  }

  $library_args = array('jquery_placeholder', 'drupal.placeholder');
  $settings = array();
  foreach ($ids as $id) {
    $settings['jquery_placeholder'][$id]['selector'] = "#$id";
  }

  // Render array style
  if (isset($render_array)) {
    $render_array['#attached']['library'][] = $library_args;
    if (!empty($settings))  {
      $render_array['#attached']['js'][] = array('data' => $settings, 'type' => 'setting');
    }
  }

  // Direct style.
  else {
    call_user_func_array('drupal_add_library', $library_args);
    if (!empty($settings)) {
      drupal_add_js($settings, 'setting');
    }
  }

  return TRUE;
}

/**
 * Enables this module's functionality on all textfield/textarea elements on
 * the page.
 *
 * @param $render_array
 *   (Optional) Pass a render array here and the necessary library/javascript
 *   will be entered in the #attached, rather than added directly. This is much
 *   better since the javascript will only be added if the render array is
 *   actually rendered. It will also work with output which may be cached.
 *
 * @return TRUE;
 */
function jquery_placeholder_global(&$render_array = NULL) {

  $library_args = array('jquery_placeholder', 'jquery.placeholder');
  $js_path = drupal_get_path('module', 'jquery_placeholder') . '/jquery_placeholder_global.js';

  // Render array style
  if (isset($render_array)) {
    $render_array['#attached']['library'][] = $library_args;
    $render_array['#attached']['js'][] = $js_path;
  }

  // Direct style.
  else {
    call_user_func_array('drupal_add_library', $library_args);
    drupal_add_js($js_path);
  }

  return TRUE;
}

/**
 * Implements hook_library().
 */
function jquery_placeholder_library() {

  $libraries = array();

  $libraries['jquery.placeholder'] = array(
    'title' => 'jQuery Placeholder',
    'website' => 'https://github.com/mathiasbynens/jquery-placeholder',
    'version' => '2.0',
    'js' => array(
      libraries_get_path('jquery.placeholder') . '/jquery.placeholder.min.js' => array(),
    ),
  );

  $libraries['drupal.placeholder'] = array(
    'title' => 'jQuery Placeholder Drupal integration',
    'website' => 'http://drupal.org/project/jquery_placeholder',
    'version' => '2.0',
    'js' => array(
      drupal_get_path('module', 'jquery_placeholder') . '/jquery_placeholder.js' => array(),
    ),
    'dependencies' => array(
      array('jquery_placeholder', 'jquery.placeholder'),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_element_info_alter().
 */
function jquery_placeholder_element_info_alter(&$types) {
  // Support elements module's #placeholder attribute.
  foreach ($types as $type => &$info) {
    if (!empty($info['#input'])) {
      $info['#pre_render'][] = 'jquery_placeholder_pre_render_element_enable';
    }
  }
}

/**
 * Custom #pre_render callback which adds javascript which turns on jquery
 * placeholder just for this element.
 */
function jquery_placeholder_pre_render_element_enable($elements) {

  // Look in a couple of places for the placeholder attribute.
  $placeholder = NULL;
  if (!empty($elements['#placeholder'])) {
    $placeholder = $elements['#placeholder'];
  }
  if (!empty($elements['#attributes']['placeholder'])) {
    $placeholder = $elements['#attributes']['placeholder'];
  }

  // If this element has a placeholder on it, add our javascript.
  if (!empty($placeholder)) {

    // We only want to attach the the ID of this element.
    $id = NULL;
    if (!empty($elements['#id'])) {
      $id = $elements['#id'];
    }
    if (!empty($elements['#attributes']['id'])) {
      $id = $elements['#attributes']['id'];
    }

    if (!empty($id)) {
      jquery_placeholder($id, $elements);
    }
  }
  return $elements;
}
