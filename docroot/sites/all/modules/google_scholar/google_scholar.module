<?php
/**
 * @file
 * A module that integrates a content type with Google Scholar.
 */

/**
 * Implements hook_permission().
 */
function google_scholar_permission() {
    return array(
        'administer google scholar' => array(
            'title' => t('Administer Google Scholar'),
            'description' => t('Configure Google Scholar settings.'),
            'restrict access' => TRUE,
        )
    );
}

/**
 * Implements hook_menu().
 */
function google_scholar_menu() {

    $items['admin/config/search/google_scholar'] = array(
        'title' => 'Administer Google Scholar',
        'description' => 'Configure Google Scholar settings',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('google_scholar_admin_settings'),
        'access arguments' => array('administer google scholar'),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'google_scholar.admin.inc',
    );

    $items['admin/config/search/google_scholar/%node_type'] = array(
        'title' => 'Administer Google Scholar for content type',
        'description' => 'Configure Google Scholar settings',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('google_scholar_field_mappings', 4),
        'access arguments' => array('administer google scholar'),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'google_scholar.admin.inc',
    );

    return $items;
}

/**
 * Implements hook_preprocess_node().
 */
function google_scholar_preprocess_node(&$variables) {

    if ($variables['type'] == variable_get('google_scholar_node_type')) {

        // citation field mappings
        $title = variable_get('google_scholar_citation_title', '');
        $author = variable_get('google_scholar_citation_author', '');
        $publication_date = variable_get('google_scholar_citation_publication_date', '');
        $journal_title = variable_get('google_scholar_citation_journal_title', '');
        $volume = variable_get('google_scholar_citation_volume', '');
        $issue = variable_get('google_scholar_citation_issue', '');
        $first_page = variable_get('google_scholar_citation_first_page', '');
        $last_page = variable_get('google_scholar_citation_last_page', '');
        $pdf_url = variable_get('google_scholar_citation_pdf_url', '');
        $node = $variables['node'];

        if (!empty($title)) {
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_title',
                    'content' => $variables[$title]
                )
            ), 'citation_title');
        }

        if (!empty($author)) {
            $field = field_get_items('node', $node, $author);
            foreach ($field as $key => $value) {
                $output = field_view_value('node', $node, $author, $field[$key]);
                drupal_add_html_head(array(
                    '#tag' => 'meta',
                    '#attributes' => array(
                        'name' => 'citation_author',
                        'content' => render($output)
                    )
                ), 'citation_author');
            }
        }

        if (!empty($publication_date)) {
            $field = field_get_items('node', $node, $publication_date);
            $output = field_view_value('node', $node, $publication_date, $field[0]);
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_publication_date',
                    'content' => render($output)
                )
            ), 'citation_publication_date');
        }
        else {
            $pub_date = format_date($variables['created'], 'custom', 'Y/m/d');
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_publication_date',
                    'content' => $pub_date

                )
            ), 'citation_publication_date');

        }


        if (!empty($journal_title)) {
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_journal_title',
                    'content' => $variables[$journal_title]
                )
            ), 'citation_journal_title');
        }

        if (!empty($volume)) {
            $field = field_get_items('node', $node, $volume);
            $output = field_view_value('node', $node, $volume, $field[0]);
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_volume',
                    'content' => render($output)
                )
            ), 'citation_volume');
        }


        if (!empty($issue)) {
            $field = field_get_items('node', $node, $issue);
            $output = field_view_value('node', $node, $issue, $field[0]);
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_issue',
                    'content' => render($output)
                )
            ), 'citation_issue');
        }

        if (!empty($first_page)) {
            $field = field_get_items('node', $node, $first_page);
            $output = field_view_value('node', $node, $first_page, $field[0]);
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_firstpage',
                    'content' => render($output)
                )
            ), 'citation_firstpage');
        }

        if (!empty($last_page)) {
            $field = field_get_items('node', $node, $last_page);
            $output = field_view_value('node', $node, $last_page, $field[0]);
            drupal_add_html_head(array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'citation_lastpage',
                    'content' => render($output)
                )
            ), 'citation_lastpage');
        }

        if (!empty($pdf_url)) {
            foreach ($variables[$pdf_url] as $file) {
                if ($file['filemime'] == 'application/pdf') {
                    drupal_add_html_head(array(
                        '#tag' => 'meta',
                        '#attributes' => array(
                            'name' => 'citation_pdf_url',
                            'content' => url(file_create_url($file['uri']), array('absolute' => TRUE))
                        )
                    ), 'citation_pdf_url');
                }
            }
        }
    }
}
