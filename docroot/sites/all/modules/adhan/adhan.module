<?php
/**
 * @file
 * Provides a block displaying prayer times for the visitor's location
 */

/**
 * Implements hook_help().
 */
function adhan_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/help#adhan':
      $output = '<p>';
      $output .= t("Displays Islamic prayer times in a block");
      $output .= '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_block_info().
 */
function adhan_block_info() {
  $blocks = array();
  $blocks['adhan']['info'] = t("Adhan");
  $blocks['adhan']['cache'] = DRUPAL_NO_CACHE;
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function adhan_block_view($delta) {
  switch ($delta) {
    case 'adhan':
      $block = array(
        'subject' => t("Adhan"),
        'content' => adhan_block_content(),
      );
      break;
  }
  return $block;
}

/**
 * Implements hook_block_configure().
 */
function adhan_block_configure($delta = '') {
  $form = array();
  $date_formats = array(
    'Y-m-d',
    'm/d/Y',
    'd/m/Y',
    'Y/m/d',
    'd.m.Y',
  );
  $time_formats = array(
    'H:i:s',
    'H:i',
    'h:ia',
  );

  foreach ($date_formats as $f) {
    $date_options[$f] = format_date(REQUEST_TIME, 'custom', $f);
  }
  foreach ($time_formats as $f) {
    $time_options[$f] = format_date(REQUEST_TIME, 'custom', $f);
  }

  $form['adhan_interface'] = array(
    '#type' => 'fieldset',
    '#title' => t("Interface options"),
  );
  $form['adhan_interface']['adhan_gif'] = array(
    '#type' => 'checkbox',
    '#title' => t("Optimize compass for bandwidth"),
    '#description' => t("Generates the compass in gif format instead of png"),
    '#default_value' => variable_get('adhan_gif', 0),
  );
  $form['adhan_interface']['adhan_notify'] = array(
    '#type' => 'radios',
    '#title' => t("Adhan notification"),
    '#description' => t('Choose the way visitors will be notified.'),
    '#default_value' => variable_get('adhan_notify', 0),
    '#options' => array(
      t("No notification"),
      t("Popup"),
      t("Popup and play adhan"),
    ),
  );

  $form['adhan_location'] = array(
    '#type' => 'fieldset',
    '#title' => t("Location"),
  );
  $form['adhan_location']['adhan_geolocate'] = array(
    '#type' => 'checkbox',
    '#title' => t("Use geolocation"),
    '#description' => t('Try to determine the location of visitors. Requires <a href="@url">Smart IP</a>.', array('@url' => 'http://drupal.org/project/smart_ip')),
    '#default_value' => variable_get('adhan_geolocate', 0),
  );
  $form['adhan_location']['adhan_loc'] = array(
    '#type' => 'textfield',
    '#title' => t("Location name"),
    '#description' => t("The name of the location, like a city or a town."),
    '#default_value' => variable_get('adhan_loc', t("The Hague")),
  );
  $form['adhan_location']['adhan_lat'] = array(
    '#type' => 'textfield',
    '#title' => t("Latitude"),
    '#default_value' => variable_get('adhan_lat', 52.07),
  );
  $form['adhan_location']['adhan_lng'] = array(
    '#type' => 'textfield',
    '#title' => t("Longitude"),
    '#default_value' => variable_get('adhan_lng', 4.29),
  );

  $form['adhan_date'] = array(
    '#type' => 'fieldset',
    '#title' => t("Date/time settings"),
  );
  $form['adhan_date']['adhan_date'] = array(
    '#type' => 'select',
    '#title' => t("Date format"),
    '#description' => t("Select the date format to use for Adhan"),
    '#default_value' => variable_get('adhan_date', 'd/m/Y'),
    '#options' => $date_options,
  );
  $form['adhan_date']['adhan_time'] = array(
    '#type' => 'select',
    '#title' => t("Time format"),
    '#description' => t("Select the time format to use for Adhan"),
    '#default_value' => variable_get('adhan_time', 'H:i:s'),
    '#options' => $time_options,
  );

  $form['adhan_calculation'] = array(
    '#type' => 'fieldset',
    '#title' => t("Calculation settings"),
  );
  $form['adhan_calculation']['adhan_method'] = array(
    '#type' => 'radios',
    '#title' => t("Calculation method"),
    '#description' => t("The default calculation method to use"),
    '#default_value' => variable_get('adhan_method', 0),
    '#options' => array(
      t("Karachi"),
      t("ISNA"),
      t("Muslim World League"),
      t("Makkah"),
      t("Egypt"),
    ),
  );
  $form['adhan_calculation']['adhan_asr_method'] = array(
    '#type' => 'radios',
    '#title' => t("Asr calculation method"),
    '#description' => t("The default calculation method for the Asr prayer"),
    '#default_value' => variable_get('adhan_asr_method', 0),
    '#options' => array(t("Shafii"), t("Hanafi")),
  );

  return $form;
}

/**
 * Implements hook_block_save().
 */
function adhan_block_save($delta = '', $edit = array()) {
  // Flatten $edit array
  $list = adhan_flatten($edit);

  foreach ($list as $key => $value) {
    if (substr($key, 0, 6) == 'adhan_') {
      variable_set($key, $value);
    }
  }
}

/**
 * Generates the actual content of the Adhan block.
 */
function adhan_block_content() {
  // Try to load dukhoolwaqt. Upon failure, display an error message.
  if (!adhan_load_dukhoolwaqt()) {
    drupal_set_message(t('Please install <a href="@url">DukhoolWaqt</a> in
Adhan module\'s folder', array('@url' => url('http://www.dukhoolwaqt.org'))),
'warning', FALSE);

    return t("DukhoolWaqt wasn't installed properly!");
  }

  $error = NULL;
  if (variable_get('adhan_geolocate', 0)) {
    if (module_exists('smart_ip')) {
      $latitude = $_SESSION['smart_ip']['location']['latitude'];
      $longitude = $_SESSION['smart_ip']['location']['longitude'];
      $zone = $_SESSION['smart_ip']['location']['timezone'];
    }
    else {
      $error = t('Please install <a href="@url">Smart IP</a> to enable geolocation.', array('@url' => 'http://drupal.org/project/smart_ip'));
    }
  }

  if (!isset($latitude) || !isset($longitude)) { // Use admin set defaults
    $latitude = variable_get('adhan_lat', 52.07);
    $longitude = variable_get('adhan_lon', 4.29);
    $location = variable_get('adhan_loc', t("The Hague"));
    if (module_exists('smart_ip') && variable_get('adhan_geolocate', 0)) {
      $error = t("Your location couldn't be determined. Please try again.");
    }
  }
  else {
    $city = $_SESSION['smart_ip']['location']['city'];
    $city = $city ? $city : $_SESSION['smart_ip']['location']['administrative_area_level_2'];
    if (empty($city)) {
      $location = '(' . round($latitude, 2) . ', ';
      $location .= round($longitude, 2) . ')';
    }
    else {
      $location = $city;
    }
  }

  if (!isset($zone)) {
    global $user;
    if (variable_get('configurable_timezones', 1) && $user->uid &&
strlen($user->timezone)) {
      $zone = $user->timezone;
    }
    else {
      $zone = date_default_timezone_get();
    }
  }

  $time = REQUEST_TIME;
  $adhan = new DukhoolWaqt();
  $adhan->setMethod((int) variable_get('adhan_method', 0));
  $adhan->setAsrMethod((int) variable_get('adhan_asr_method', 0));
  $adhan->setLocation($latitude, $longitude);
  $adhan->setTimeZone(timezone_offset_get(timezone_open($zone), date_create('@' . $time, timezone_open($zone))) / 3600);
  $times = $adhan->getTimes();
  $qibla = $adhan->getQibla();
  $sun = $adhan->getSunAzimuth();
  $moon = $adhan->getMoonAzimuth();

  drupal_add_css(drupal_get_path('module', 'adhan') . '/adhan-block.css');
  drupal_add_js(drupal_get_path('module', 'adhan') . '/js/adhan.js');

  for ($i = 1; $i < 7; $i++) {
    if ($time < $times[$i]) {
      break;
    }
  }

  // Work around a Drupal bug, see http://drupal.org/node/481560
  $callback = 'callback/adhan';
  $basePath = url($callback);
  $basePath = substr($basePath, 0, -strlen($callback));
  if (substr($basePath, -1) != '/' && substr($basePath, -3) != '?q=') {
    $basePath .= '/';
  }
  $basePath .= $callback . '/';

  $js = array(
    'queueCompass' => FALSE,
    'refreshCompass' => 180,
    'current' => $i,
    'times' => $times,
    'basePath' => $basePath,
    'notify' => variable_get('adhan_notify', 0),
  );
  drupal_add_js(array('adhan' => $js), array('type' => 'setting', 'scope' => JS_DEFAULT));

  drupal_add_library('system', 'ui.dialog');
  drupal_add_library('system', 'ui.draggable');
  drupal_add_library('system', 'ui.resizable');

  return theme('adhan_block', array(
    'location' => $location,
    'times' => $times,
    'zone' => $zone,
    'qibla' => $qibla,
    'sun' => $sun,
    'moon' => $moon,
    'error' => $error,
  ));
}

/**
 * Implements hook_menu().
 */
function adhan_menu() {
  $items = array(
    'callback/adhan' => array(
      'page callback' => 'adhan_callback',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function adhan_theme($existing, $type, $theme, $path) {
  return array(
    'adhan_block' => array(
      'path' => drupal_get_path('module', 'adhan'),
      'template' => 'adhan-block',
      'variables' => array(
        'location' => NULL,
        'times' => array(),
        'zone' => NULL,
        'qibla' => NULL,
        'sun' => NULL,
        'moon' => NULL,
        'error' => NULL,
      ),
    ),
    'adhan_notification' => array(
      'path' => drupal_get_path('module', 'adhan'),
      'template' => 'adhan-notification',
      'variables' => array(
        'prayer' => NULL,
      ),
    ),
  );
}

/**
 * Handles all of Adhan's javascript callbacks.
 */
function adhan_callback($request = NULL) {
  $request = explode('-', $request);

  if ($request[0] == 'calc') {
    if (!adhan_load_dukhoolwaqt()) {
      // DukhoolWaqt is not installed properly
      drupal_json_output(FALSE);
      return;
    }

    if (variable_get('adhan_geolocate', 0) && module_exists('smart_ip')) {
      $latitude = $_SESSION['smart_ip']['location']['latitude'];
      $longitude = $_SESSION['smart_ip']['location']['longitude'];
      $zone = $_SESSION['smart_ip']['location']['timezone'];
    }

    if (!isset($latitude) || !isset($longitude)) { // Use admin set defaults
      $latitude = variable_get('adhan_lat', 52.07);
      $longitude = variable_get('adhan_lon', 4.29);
    }

    if (!isset($zone)) {
      global $user;
      if (variable_get('configurable_timezones', 1) && $user->uid &&
strlen($user->timezone)) {
        $zone = $user->timezone;
      }
      else {
        $zone = date_default_timezone_get();
      }
    }

    $adhan = new DukhoolWaqt();
    $adhan->setMethod((int) variable_get('adhan_method', 0));
    $adhan->setAsrMethod((int) variable_get('adhan_asr_method', 0));
    $adhan->setLocation($latitude, $longitude);
    $adhan->setTimeZone(timezone_offset_get(timezone_open($zone), date_create('@' . $time, timezone_open($zone))) / 3600);

    if ($request[1] == 'compass') {
      $url = base_path();
      $url .= drupal_get_path('module', 'adhan') . '/compass/compass.php?';
      $query = array(
        'qibla' => $adhan->getQibla(),
        'sun' => $adhan->getSunAzimuth(),
        'moon' => $adhan->getMoonAzimuth(),
        'fmt' => variable_get('adhan_gif', FALSE) ? 'gif' : 'png',
      );
      $url .= drupal_http_build_query($query);

      drupal_json_output(array('url' => $url));
    }
    elseif ($request[1] == 'times') {
      $times = $adhan->getTimes();
      $table = array();
      $date_fmt = variable_get('adhan_date', 'd/m/Y');
      $time_fmt = variable_get('adhan_time', 'H:i:s');

      $table[0] = format_date($times[0], 'custom', $date_fmt, $zone);
      for ($i = 1; $i < 8; $i++) {
        $table[$i] = format_date($times[$i], 'custom', $time_fmt, $zone);
      }

      drupal_json_output(array('table' => $table, 'times' => $times));
    }
    else {
      // Invalid request
      drupal_json_output(FALSE);
    }
  }
  elseif ($request[0] == 'time') {
    drupal_json_output(array('time' => REQUEST_TIME));
  }
  elseif ($request[0] == 'notification') {
    $labels = adhan_labels();
    $prayer = (int) $request[1];
    $label = $labels[$prayer];

    if ($current >= 0 && $current < 6) {
      $title = t("It's time for @prayer!", array('@prayer' => $label));
      $content = theme('adhan_notification', array('prayer' => $prayer));

      drupal_json_output(array('title' => $title, 'content' => $content));
    }
    else {
      // Invalid request
      drupal_json_output(FALSE);
    }
  }
  else {
    // Invalid request
    drupal_json_output(FALSE);
  }
}

/**
 * Preprocess function for the adhan-block template.
 */
function template_preprocess_adhan_block(&$variables) {
  $labels = adhan_labels();
  $times = &$variables['times'];
  $date_fmt = variable_get('adhan_date', 'd/m/Y');
  $time_fmt = variable_get('adhan_time', 'H:i:s');

  $variables['info_table'] = theme('table', array(
    'rows' => array(
      array(
        t("Date"),
        array(
          'data' => format_date($times[0], 'custom', $date_fmt, $variables['zone']),
          'class' => array('justify', 'time'),
        ),
      ),
      array(
        t("Location"),
        array(
          'data' => check_plain($variables['location']),
          'class' => array('justify'),
        ),
      ),
    ),
  ));

  $time = REQUEST_TIME;
  $class = array();
  foreach ($labels as $i => $label) {
    $class[$i] = array('prayer');
    if ($time >= $times[$i + 1] && ($time < $times[$i + 2] || $i == 5)) {
      $class[$i][] = ($i != 1) ? 'current' : NULL;
    }
    elseif (($time >= $times[$i] || $i == 0) && $time < $times[$i + 1]) {
      $class[$i][] = 'next';
    }
  }
  $rows = array();
  foreach ($labels as $i => $label) {
    $rows[$i] = array(
      'class' => $class[$i],
      'data' => array(
        array(
          'data' => $label,
          'class' => array('label'),
        ),
        array(
          'data' => format_date($times[$i + 1], 'custom', $time_fmt, $variables['zone']),
          'class' => array('justify', 'time'),
        ),
      ),
    );
  }
  $variables['time_table'] = theme('table', array('rows' => $rows));

  $query = array(
    'qibla' => $variables['qibla'],
    'sun' => $variables['sun'],
    'moon' => $variables['moon'],
    'fmt' => variable_get('adhan_gif', FALSE) ? 'gif' : 'png',
  );
  $url = drupal_get_path('module', 'adhan') . '/compass/compass.php?' .
drupal_http_build_query($query);

  $variables['compass'] = theme('image', array(
    'path' => $GLOBALS['base_url'] . '/' . $url, // Workaround issue #1171486
    'alt' => t("Qibla compass"),
    'attributes' => array('id' => 'block-adhan-adhan-compass'),
  ));
}

/**
 * Preprocess function for the adhan-notification template.
 */
function template_preprocess_adhan_notification(&$variables) {
  $labels = adhan_labels();
  $variables['label'] = $labels[$variables['prayer']];

  $src = ($variables['prayer'] == 0) ? 'adhan-fajr.ogg' : 'adhan.ogg';
  $variables['adhan'] = '<audio src="/' . drupal_get_path('module', 'adhan') .
'/audio/' . $src . '" controls="controls" autoplay="autoplay">' .
t("Your browser doesn't appear to support html5") . '</audio>';
}

/**
 * Constructs an array of translatable prayer names and optionally midnight.
 */
function adhan_labels($midnight = FALSE) {
  $labels = array(
    t("Fajr"),
    t("Shurooq"),
    t("Dhohr"),
    t("Asr"),
    t("Maghrib"),
    t("Isha"),
  );
  if ($midnight) {
    $labels[] = t("Midnight");
  }
  return $labels;
}

/**
 * Try to include DukhoolWaqt and return TRUE on success, FALSE on fail.
 */
function adhan_load_dukhoolwaqt() {
  $file = dirname(__FILE__) . '/dukhoolwaqt.php';
  $success = file_exists($file);
  if ($success) {
    $success = ((include_once $file) == 1);
  }
  return $success;
}

/**
 * Flattens an array.
 */
function adhan_flatten($array) {
  $result = array();
  foreach ($array as $key => $value) {
    if (is_array($value)) {
      $result = array_merge($result, adhan_flatten($value));
    }
    else {
      $result[$key] = $value;
    }
  }
  return $result;
}