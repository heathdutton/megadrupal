<?php
/**
 * @file
 *  wildfire_messages.install
 *
 * Installation functions for Wildfire messages
 *
 * @author Craig Jones <craig@tiger-fish.com>
 * @author Chris Cohen <chris.cohen@tiger-fish.com>
 */

/**
 * Implements hook_install().
 */
function wildfire_messages_install() {

}

/**
 * Implements hook_uninstall().
 */
function wildfire_messages_uninstall() {

}

/**
 * Implements hook_schema().
 */
function wildfire_messages_schema() {
  /**
   * This should be representative of the NOW schema, not the START schema
   * See: http://drupal.org/node/146862
   *
   * It is expected that the hook_update_X() functions will update existing
   * installations to match this schema, they aren't incremental updates
   * from this schema
   */
  $schema = array();
  $t = get_t();

  $schema['wildfire_templates'] = array(
    'description' => $t('The templates registry.'),
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('The machine name of the template. Must be unique. This is expected to be the filename of the template\'s files, like foo.tinfo or foo.itpl.php.'),
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('The human-readable name of the template. This is the title=xxx parameter in the template\'s .tinfo file'),
      ),
      'description' => array(
        'type' => 'text',
        'not null' => TRUE,
        //'default' => '', // 'text' fields cannot have a default value
        'description' => $t('The description of this template.'),
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('The Drupal path to this template.'),
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('Whether or not the template is enabled. Only enabled templates appear for end users. Admins can see all templates.'),
      ),
    ),
    'primary key' => array('name'),
  );
  $schema['wildfire_repeaters'] = array(
    'description' => $t('Available repeaters for this system.'),
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
        'default' => '',
        'description' => $t('The machine name of this repeater.'),
      ),
      'title' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 128,
        'default' => '',
        'description' => $t('The human-readable name of this repeater.'),
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('0 for disabled and 1 for enabled.'),
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'title' => array('title'),
    ),
  );
  $schema['wildfire_snippets'] = array(
    'description' => $t('Available snippets for this system.'),
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
        'default' => '',
        'description' => $t('The machine name of this snippet.'),
      ),
      'title' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 128,
        'default' => '',
        'description' => $t('The human-readable name of this snippet.'),
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('0 for disabled and 1 for enabled.'),
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'title' => array('title'),
    ),
  );
  $schema['wildfire_repeaters_nodes'] = array(
    'description' => $t('Map of which nodes are on which repeater in which message.'),
    'fields' => array(
      'mid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => $t('The message ID of the message to which the node is attached.'),
      ),
      'type' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 16,
        'default' => '',
        'description' => $t('The type of message, such as alert or broadcast.'),
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The node ID.'),
      ),
      'repeater' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
        'default' => '',
        'description' => $t('The machine name of the repeater to which the node is attached.'),
      ),
      'delta' => array(
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The position of the node within the given repeater.'),
      ),
    ),
    'primary key' => array('nid', 'mid', 'type', 'repeater'),
    'indexes' => array(
      'delta' => array('delta'),
    ),
  );
  $schema['wildfire_snippets_content'] = array(
    'description' => $t('Instances of particular snippets on messages.'),
    'fields' => array(
      'mid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => $t('The message ID of the message to which the node is attached.'),
      ),
      'type' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 16,
        'default' => '',
        'description' => $t('The type of message, such as alert or broadcast.'),
      ),
      'snippet' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
        'default' => '',
        'description' => $t('The machine name of the snippet.'),
      ),
      'content' => array(
        'type' => 'text',
        'not null' => TRUE,
        //'default' => '', // 'text' fields cannot have a default value
        'description' => $t('The content of the snippet. Designed to accommodate HTML code.'),
      ),
    ),
    'primary key' => array('mid', 'type', 'snippet'),
  );
  $schema['wildfire_templates_regions'] = array(
    'description' => $t('Which regions, such as repeaters and snippets, are available on which template.'),
    'fields' => array(
      'template' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 128,
        'default' => '',
        'description' => $t('The machine name of the template.'),
      ),
      'type' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 16,
        'default' => '',
        'description' => $t('The type of region, such as snippet or repeater.'),
      ),
      'name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
        'default' => '',
        'description' => $t('The machine name of the region.'),
      ),
    ),
    'primary key' => array('template', 'type', 'name'),
  );
  $schema['wildfire_templates_settings'] = array(
    'description' => $t('Settings for a given mailtemplate'),
    'fields' => array(
      'template' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 128,
        'default' => '',
        'description' => $t('The machine name of the template.'),
      ),
      'delta' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => $t('Delta for the settings, in case there is more than one variant'),
      ),
      'data' => array(
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
        'description' => $t('Serialized data containing settings'),
      ),
    ),
    'primary key' => array('template', 'delta'),
  );

  return $schema;

}

/**
 * Create table to store template settings into
 */
function wildfire_messages_update_7201() {

  $t = get_t();

  db_create_table(
    'wildfire_templates_settings',
    array(
      'description' => $t('Settings for a given mailtemplate'),
      'fields' => array(
        'template' => array(
          'type' => 'varchar',
          'not null' => TRUE,
          'length' => 128,
          'default' => '',
          'description' => $t('The machine name of the template.'),
        ),
        'delta' => array(
          'type' => 'int',
          'not null' => TRUE,
          'unsigned' => TRUE,
          'default' => 0,
          'description' => $t('Delta for the settings, in case there is more than one variant'),
        ),
        'data' => array(
          'type' => 'text',
          'size' => 'medium',
          'serialize' => TRUE,
          'description' => $t('Serialized data containing settings'),
        ),
      ),
      'primary key' => array('template', 'delta'),
    )
  );
}
