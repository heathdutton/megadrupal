<?php
/**
 * @file
 *  wildfire_lists.install
 *
 * Installation functions for Wildfire lists
 *
 * @author Craig Jones <craig@tiger-fish.com>
 * @author Chris Cohen <chris.cohen@tiger-fish.com>
 */

/**
 * Implements hook_install().
 */
function wildfire_lists_install() {

}

/**
 * Implements hook_uninstall().
 */
function wildfire_lists_uninstall() {

}

/**
 * Implements hook_schema().
 */
function wildfire_lists_schema() {
  /**
   * This should be representative of the NOW schema, not the START schema
   * See: http://drupal.org/node/146862
   *
   * It is expected that the hook_update_X() functions will update existing
   * installations to match this schema, they aren't incremental updates
   * from this schema
   */
  $schema = array();
  $t = get_t();

  $schema['wildfire_lists'] = array(
    'description' => $t('Lists of users or email addresses to which emails can be sent.'),
    'fields' => array(
      'lid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => $t('The auto-incrementing list id.'),
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('The list\'s name.'),
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('UNIX timestamp for when the list was created.'),
      ),
      'last_sent_to' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('UNIX timestamp for the last time the list was used.'),
      ),
      'users_hash' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('A hash of the users in the list'),
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
        'description' => $t('0 = disabled, 1 = live, 2 = test'),
      ),
      'locked' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('0 = unlocked, 1 = locked'),
      ),
    ),
    'primary key' => array('lid'),
  );
  $schema['wildfire_lists_users'] = array(
    'description' => $t('Lists of users or email addresses to which emails can be sent.'),
    'fields' => array(
      'lid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The list id.'),
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The user id.'),
      ),
      'mail' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('Users email address. Used by test lists only'),
      ),
      'locked' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('0 = unlocked, 1 = locked, 2 = pending removal'),
      ),
    ),
    'primary key' => array('lid', 'uid', 'mail'),
  );
  $schema['wildfire_optouts'] = array(
    'description' => $t('Optout map between user ids and mail types. If an entry is present, the user has opted out of receiving this mail. If the type is \'all\', the user has opted out of receiving ALL mailings.'),
    'fields' => array(
      'lid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The list id. 0 here means an unsubscribe from ALL lists.'),
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The user id.'),
      ),
      'timestamp' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The UNIX timestamp at which this optout was added.'),
      ),
      'method' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The method used to opt out. 0 for unknown. 1 for the edit user page. 2 for the 1-click unsubscribe link.'),
      ),
      'unsubscriber' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The user ID of the user doing the unsubscribing.'),
      ),
    ),
    'primary key' => array('lid', 'uid'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );

  return $schema;

}

/**
 * Adds locked fields to lists and lists users.
 */
function wildfire_lists_update_7201() {

  $t = get_t();

  db_add_field(
    'wildfire_lists',
    'locked',
    array(
      'type' => 'int',
      'size' => 'tiny',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
      'description' => $t('0 = unlocked, 1 = locked'),
    )
  );

  db_add_field(
    'wildfire_lists_users',
    'locked',
    array(
      'type' => 'int',
      'size' => 'tiny',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
      'description' => $t('0 = unlocked, 1 = locked, 2 = pending removal'),
    )
  );

}

/**
 * Adds an extra index on the list users for UIDs.
 */
function wildfire_lists_update_7202() {

  // This makes it quicker to determine clicks for specific UIDs.
  db_add_index('wildfire_lists_users', 'uid', array('uid'));

}
