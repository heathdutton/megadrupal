<?php
/**
 * @file
 *  wildfire_tracking.install
 *
 * Installations functions for Wildfire messages
 *
 * @author Craig Jones <craig@tiger-fish.com>
 * @author Chris Cohen <chris.cohen@tiger-fish.com>
 */

/**
 * Implements hook_install().
 */
function wildfire_tracking_install() {

}

/**
 * Implements hook_uninstall().
 */
function wildfire_tracking_uninstall() {

}

/**
 * Implements hook_schema().
 */
function wildfire_tracking_schema() {
  /**
   * This should be representative of the NOW schema, not the START schema
   * See: http://drupal.org/node/146862
   *
   * It is expected that the hook_update_X() functions will update existing
   * installations to match this schema, they aren't incremental updates
   * from this schema
   */
  $schema = array();
  $t = get_t();

  $schema['wildfire_links'] = array(
    'description' => $t(
      'Links that have been pulled from the template and converted to '
    . 'link-tracking.'
    ),
    'fields' => array(
      'linkid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'unique' => TRUE,
        'description' => $t('The links ID.'),
      ),
      'jid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The job ID for the link.'),
      ),
      'url' => array(
        'type' => 'varchar',
        'length' => 330,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('The URL of the link in question.'),
      ),
    ),
    'primary key' => array('linkid'),
    'indexes' => array(
      'joburl' => array('jid', 'url'),
    ),
  );
  $schema['wildfire_link_clicks'] = array(
    'description' => $t('Individual emails queued and waiting to be sent.'),
    'fields' => array(
      'linkid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('Link ID from wildfire_links table.'),
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => $t('The user ID of the click-through.'),
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'length' => 12,
        'description' => $t('The timestamp of the click-through.'),
      ),
    ),
    'primary key' => array('linkid', 'uid', 'timestamp'),
  );

  $schema['wildfire_tracking'] = array(
    'description' => $t('Track which users have opened which emails.'),
    'fields' => array(
      'type' => array(
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
        'description' => $t('The type of mailing such as alert or broadcast.'),
      ),
      'mid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The message id.'),
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The user id of the user being tracked.'),
      ),
      'jid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The job id during which the message was sent.'),
      ),
      'timestamp' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => $t('The time when this tracking entry was made.'),
      ),
    ),
    'primary key' => array('type', 'mid', 'uid', 'jid'),
  );

  return $schema;

}

/**
 * Adds an extra index on the link clicks and tracking tables for UIDs.
 */
function wildfire_tracking_update_7201() {

  // This makes it quicker to determine clicks for specific UIDs.
  db_add_index('wildfire_link_clicks', 'uid', array('uid'));

  db_add_index('wildfire_tracking', 'uid', array('uid'));

}
