<?php // $Id $

function cssflip_permission() {
  return array(
    'administer cssflip' => array(
      'title' => t('Administer CSS Flip'), 
      'description' => t('Administer and control CSS Flip behavior.'),
    ),
  );	
}

function cssflip_menu() {
  $items['admin/config/development/cssflip'] = array(
    'title' => 'CSS Flip',
    'description' => 'Helps in handling RTL styles. Stylesheets that have no corresponding -rtl file will be parse, flipped and dynamically injected.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cssflip_settings'),
    'access arguments' => array('administer cssflip'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['admin/config/development/cssflip/settings'] = array(
    'title' => 'CSS Flip settings',
    'description' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cssflip_settings'),
    'access arguments' => array('administer cssflip'),
    'type' =>  MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/config/development/cssflip/input'] = array(
    'title' => 'Direct Input',
    'description' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cssflip_input'),
    'access arguments' => array('administer cssflip'),
    'type' => MENU_LOCAL_TASK,
  );    
    
  return $items;  
}

function cssflip_options() {
	$form = array();
	
  $form['cssflip_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );
  
  $form['cssflip_options']['cssflip_override'] = array(
    '#type' => 'checkbox',
    '#title' => t('Override old attributes'),
    '#description' => t('Override old attribute values. Example: h1{ margin-left:10px } would become h1{ margin-right:10px; <b>margin-left:auto !important;</b> }'),
    '#default_value' => variable_get('cssflip_override', TRUE),
  );  
  
  $form['cssflip_options']['cssflip_suppress'] = array(
    '#type' => 'checkbox',
    '#title' => t('Suppress duplicates'),
    '#description' => t('Remove duplicate CSS attributes generated in the flipped CSS results.'),
    '#default_value' => variable_get('cssflip_suppress', TRUE),
  );  
  
  $form['cssflip_options']['cssflip_rename_images'] = array(
    '#type' => 'checkbox',
    '#title' => t('Rename background images'),
    '#description' => t('Alter images name to <b>-rtl</b>. For instance logo.png becomes logo<b>-rtl</b>.png'),
    '#default_value' => variable_get('cssflip_rename_images', FALSE),
  ); 
  
  $form['cssflip_options']['cssflip_rotate_images'] = array(
    '#type' => 'checkbox',
    '#title' => t('Rotate background images'),
    '#description' => t('Rotate background images horizontally and save them in files directory.'),
    '#default_value' => variable_get('cssflip_rotate_images', FALSE),
  );

  return $form;
}

function cssflip_settings() {
  
  $form['cssflip_active'] = array(
    '#type' => 'checkbox',
    '#title' => t('Activate CSS Flip'),
    '#description' => t('By activating CSS Flip you won\'t need to create RTL stylesheets anymore.'),
    '#default_value' => variable_get('cssflip_active', FALSE),
  );

  $form['cssflip_fixes'] = array(
    '#type' => 'textarea',
    '#title' => t('Custom CSS'),
    '#description' => t('You can add custom CSS style fixes to CSS Flip.'),
    '#default_value' => variable_get('cssflip_fixes', ''),
  ); 

  $form += cssflip_options();
  
  return system_settings_form($form);
}

function cssflip_preprocess_html(&$vars) {
  global $language;

  $css = drupal_add_css();
  
  if(variable_get('cssflip_active', FALSE) && $language->dir == 'rtl') {
    module_load_include('inc', 'cssflip', 'cssflip');
    
    foreach($css as $path => $style) {
        if($style['media'] != 'print' && $style['type'] == 'file') {
            
              $rtl_path = str_replace('.css', '-rtl.css', $path);

              if(preg_match('/-rtl/', $path) || file_exists($rtl_path)) {
                 continue;
              } else {                
                $cssflip = new cssflip();
                $cssflip->parse($path);
                $cssflip->override = variable_get('cssflip_suppression', TRUE);
                $cssflip->convention = variable_get('cssflip_convention', TRUE);
                $cssflip->path_correction = TRUE;
                $flipped_css = $cssflip->flip();
                $flipped_css .= variable_get('cssflip_fixes', '');
                
                drupal_add_css($flipped_css, array('type' => 'inline', 'group' => CSS_THEME));              
              }     
        }
    }
  }
}

function cssflip_input() {
  
	$form = cssflip_options();
	unset($form['cssflip_options']['cssflip_rotate_images']);
	
  $form['cssflip_input'] = array(
    '#type' => 'textarea',
    '#title' => t('CSS string'),
    '#description' => t('Flip css using direct input.<br />Example: p { margin-left:15px; padding:2px 4px 2px 6px; }'),
    '#default_value' => $_SESSION['cssflip_input']
  );

  $form['cssflip_result'] = array(
    '#type' => 'textarea',
    '#title' => t('CSS flip result'),
    '#description' => t('The result of the flipped CSS. This will appears after you submit the form.'),
    '#default_value' => $_SESSION['cssflip_result']
  );  

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('   CSS Flip!   '),       
  );
  
  return $form; 
}

function cssflip_input_submit($form, &$form_state) {
  module_load_include('inc', 'cssflip', 'cssflip');
  $_SESSION['cssflip_suppression'] = $form_state['values']['cssflip_suppression'];
  $_SESSION['cssflip_convention'] = $form_state['values']['cssflip_convention'];
  $path_correction = FALSE;
  
  $string = $form_state['values']['cssflip_input'];
  
  if($string) {
    $_SESSION['cssflip_input'] = $string;
    $cssflip = new cssflip();
    $cssflip->parseStr($string);
    $cssflip->suppression = $_SESSION['cssflip_suppression'];
    $cssflip->convention = $_SESSION['cssflip_convention']; 
    $cssflip->path_correction = $path_correction;   
    $_SESSION['cssflip_result'] = $cssflip->flip();
    
  } else {
    unset($_SESSION['cssflip_input']);
    unset($_SESSION['cssflip_result']);
  }
}