<?php
/**
 * @file paypal_ipn.module
 * TODO: Enter file description here.
 */

define('PAYPAL_IPN_USE_CURL', 1);
define('PAYPAL_IPN_FORCE_SSL_V3', 1);
define('PAYPAL_IPN_FOLLOW_LOCATION', 1);
define('PAYPAL_IPN_USE_SSL', 1);
define('PAYPAL_IPN_USE_SANDBOX', 1);
/**
 * Implements hook_menu().
 */
function paypal_ipn_menu() {

  // more complex menu item
  $items['paypal-ipn-listen'] = array(

    'page callback' => 'paypal_ipn_listen',
    //'page arguments' => array(), // An array of arguments to pass to the page callback function. Integer values pass the corresponding URL component.
    'access callback' => TRUE,
    'weight' => 0,
    'type' => MENU_CALLBACK, // One of MENU_NORMAL_ITEM / MENU_CALLBACK / MENU_SUGGESTED_ITEM / MENU_LOCAL_TASK / MENU_DEFAULT_LOCAL_TASK
    'file' => 'includes/paypal_ipn_listen.inc'
  );
  // more complex menu item
  $items['paypal-ipn-listen/entity/%/%'] = array(

    'page callback' => 'paypal_ipn_listen_entity',
    'page arguments' => array(2, 3),
    'access callback' => '_paypal_ipn_listen_entity_access',
    'access arguments' => array(2, 3),
    'weight' => 0,
    'type' => MENU_CALLBACK, // One of MENU_NORMAL_ITEM / MENU_CALLBACK / MENU_SUGGESTED_ITEM / MENU_LOCAL_TASK / MENU_DEFAULT_LOCAL_TASK
    'file' => 'includes/paypal_ipn_listen.inc'
  );
  // more complex menu item
  $items['admin/config/services/paypal-ipn'] = array(
    'title' => 'Paypal IPN',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('paypal_ipn_settings'), // An array of arguments to pass to the page callback function. Integer values pass the corresponding URL component.
    'access arguments' => array('administer site configuration'),
    'weight' => 0,
    'type' => MENU_NORMAL_ITEM, // One of MENU_NORMAL_ITEM / MENU_CALLBACK / MENU_SUGGESTED_ITEM / MENU_LOCAL_TASK / MENU_DEFAULT_LOCAL_TASK
    'file' => 'paypal_ipn.admin.inc'
  );

  // OPTIONAL: Fill in additional static menu items

  return $items;
}
function _paypal_ipn_listen_entity_access($entity_type, $entity_id) {
  if ($entity_info = entity_get_info($entity_type)) {
    if ($entity = entity_load($entity_type, array($entity_id))) {
      return TRUE;
    }

  }
  return FALSE;

}
/**
 * Implements hook_libraries_info().
 */
function paypal_ipn_libraries_info() {
  $libraries['php_paypal_ipn'] = array(
    'name' => 'Paypal IPN',
    'vendor url' => 'https://github.com/Quixotix/PHP-PayPal-IPN',
    'download url' => 'https://github.com/Quixotix/PHP-PayPal-IPN',
    'files' => array('php' => array('ipnlistener.php')),
    'version arguments' => array(
      'file' => 'ipnlistener.php',
      'pattern' => '@version\s+([0-9a-zA-Z\.-]+)@',
    ),
  );
  return $libraries;
}

/**
 * @return array.
 */
function _paypal_ipn_get_confirm_vars() {
  // Set default values that user must set.
  // These should never validate so the admin must update these first.
  $default_vars = array(
    'receiver_email' => 'SET_EMAIL',
    'receiver_id' => 'SET_ID',
    'payment_status' => 'Completed',
  );
  return variable_get('paypal_ipn_validate_vars', $default_vars);
}

