<?php
/**
 * @file
 * Simple gateway module for Drupal SMS Framework. Outbound + Inbound
 *
 * @package sms
 * @subpackage sms_simplegateway
 */

/**
 * Implements hook_gateway_info().
 */
function sms_simplegateway_gateway_info() {
  return array(
    'simplegateway' => array(
      'name' => 'Simple gateway',
      'send' => 'sms_simplegateway_send',
      'configure form' => 'sms_simplegateway_admin_form',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function sms_simplegateway_menu() {
  $items = array();
  $items['sms/simplegateway/receiver'] = array(
    'title' => 'Simple gateway SMS message receiver',
    'page callback' => 'sms_simplegateway_receive_message',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Configuration form for gateway module
 *
 * @param $configuration
 *
 * @return
 *   Drupal form array
 */
function sms_simplegateway_admin_form($configuration) {
  $form['sms_simplegateway_send'] = array(
    '#type' => 'fieldset',
    '#title' => 'Sender (outgoing messages)',
    '#collapsible' => TRUE,
  );
  $form['sms_simplegateway_send']['sms_simplegateway_base_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Base URL for sending messages'),
    '#description' => t('Eg: http://simplegateway.example.com:13031/sendsms'),
    '#size' => 60,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_base_url'],
  );
  $form['sms_simplegateway_send']['sms_simplegateway_method'] = array(
    '#type' => 'radios',
    '#title' => t('HTTP method'),
    '#default_value' => $configuration['sms_simplegateway_method'],
    '#options' => array(
      'GET' => 'GET',
      'POST' => 'POST',
    ),
  );
  $form['sms_simplegateway_send']['sms_simplegateway_user_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Username field name'),
    '#description' => t('Optional. The argument/field name for the field that holds the username. Eg: user, username, authid.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_user_field'],
  );
  $form['sms_simplegateway_send']['sms_simplegateway_user_value'] = array(
    '#type' => 'textfield',
    '#title' => t('Username field value'),
    '#description' => t('Optional. Your username for this gateway account.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_user_value'],
  );
  $form['sms_simplegateway_send']['sms_simplegateway_pass_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Password field name'),
    '#description' => t('Optional. The argument/field name for the field that holds the password. Eg: pass, password, passwd.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_pass_field'],
  );
  $form['sms_simplegateway_send']['sms_simplegateway_pass_value'] = array(
    '#type' => 'textfield',
    '#title' => t('Password field value'),
    '#description' => t('Optional. Your password for this gateway account.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_pass_value'],
  );
  $form['sms_simplegateway_send']['sms_simplegateway_sender_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Sender (from) field name'),
    '#description' => t('The argument/field name for the field that holds the sender number data. Eg: from, sender'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_sender_field'],
  );
  $form['sms_simplegateway_send']['sms_simplegateway_number_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Number (to) field name'),
    '#description' => t('The argument/field name for the field that holds the number data. Eg: number, to, no'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_number_field'],
  );
  $form['sms_simplegateway_send']['sms_simplegateway_message_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Message field name'),
    '#description' => t('The argument/field name for the field that holds the message text. Eg: message, text, content'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_message_field'],
  );

  $form['sms_simplegateway_receive'] = array(
    '#type' => 'fieldset',
    '#title' => 'Receiver (incoming messages)',
    '#collapsible' => TRUE,
  );
  $form['sms_simplegateway_receive']['sms_simplegateway_recv_url'] = array(
    '#type' => 'item',
    '#title' => 'Target URL for the message receiver',
    '#value' => url('sms/simplegateway/receiver', array('absolute' => TRUE)),
  );
  $form['sms_simplegateway_receive']['sms_simplegateway_recv_number_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Sender (from) field name'),
    '#description' => t('The argument/field name for the field that holds the sender number. Eg: sender, from.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_recv_number_field'],
  );
  $form['sms_simplegateway_receive']['sms_simplegateway_recv_gwnumber_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Receiver (to) field name'),
    '#description' => t('Optional. The argument/field name for the field that holds the gateway receiver number. Eg: to, inNumber, receiver.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_recv_gwnumber_field'],
  );
  $form['sms_simplegateway_receive']['sms_simplegateway_recv_message_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Message field name'),
    '#description' => t('The argument/field name for the field that holds the message. Eg: message, text, content.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => $configuration['sms_simplegateway_recv_message_field'],
  );

  return $form;
}

/**
 * Send a message
 *
 * @param $number
 *   MSISDN of message recipient. Expected to include the country code prefix.
 * @param $message
 *   Message body text.
 * @param $options
 *   Options array from SMS Framework.
 * @return \stdClass Response array.
 * Response array.
 */
function sms_simplegateway_send($number, $message, $options) {
  $gateway = sms_gateways('gateway', 'simplegateway');
  $config = $gateway['configuration'];

  // Lets specify a gw number
  $sender = '';
  if (array_key_exists('sender', $options)) {
    $sender = $options['sender'];
  }

  $query_string = http_build_query(array(
    $config['sms_simplegateway_user_field'] => $config['sms_simplegateway_user_value'],
    $config['sms_simplegateway_pass_field'] => $config['sms_simplegateway_pass_value'],
    $config['sms_simplegateway_sender_field'] => $sender,
    $config['sms_simplegateway_number_field'] => $number,
    $config['sms_simplegateway_message_field'] => $message,
  ));

  switch ($config['sms_simplegateway_method']) {
    case 'GET':
      $http_result = drupal_http_request($config['sms_simplegateway_base_url'] . '?' . $query_string);
      break;
    case 'POST':
      $http_result = drupal_http_request($config['sms_simplegateway_base_url'], array(
        'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
        'method' => 'POST',
        'data' => $query_string
      ));
      break;
  }

  // Check for HTTP errors
  if ($http_result->error) {
    return array(
      'status' => FALSE,
      'message' => t('An error occurred during the HTTP request: @error',
        array('@error' => $http_result->error)),
    );
  }

  if ($http_result->data) {
    // Test the HTTP return code
    if ($http_result->code >= 200 && $http_result->code <= 299) {
      // Prepare a good response array
      return array(
        'status' => TRUE,
        'status_code' => SMS_GW_OK,
        'gateway_status_code' => $http_result->code,
        'gateway_status_text' => $http_result->data,
      );
    }
    else {
      // We got a (possibly) bad response code
      return array(
        'status' => FALSE,
        'status_code' => SMS_GW_ERR_OTHER,
        'gateway_status_code' => $http_result->code,
        'gateway_status_text' => $http_result->data,
      );
    }
  }
}

/**
 * Receive an SMS message and pass it into the SMS Framework
 */
function sms_simplegateway_receive_message() {
  $gateway = sms_gateways('gateway', 'simplegateway');
  $config = $gateway['configuration'];

  sms_incoming(
    $_REQUEST[$config['sms_simplegateway_recv_number_field']],
    $_REQUEST[$config['sms_simplegateway_recv_message_field']],
    array(
      'gateway_params' => array(),
      'receiver' => $_REQUEST[$config['sms_simplegateway_recv_gwnumber_field']],
    )
  );
}
