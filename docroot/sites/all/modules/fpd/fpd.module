<?php

/**
 * Implements hook_menu().
 */
function fpd_menu() {
  return array(
    'fpd/auth/%fpd_token/%file' => array(
      'page callback' => 'fpd_auth',
      'page arguments' => array(2, 3),
      'type' => MENU_CALLBACK,
      'access callback' => TRUE,
    ),
  );
}

/**
 * Load a token.
 */
function fpd_token_load($fpd_token) {
  return db_query('SELECT * FROM {fpd_token} WHERE fpd_token = :fpd_token', array(':fpd_token' => $fpd_token))->fetchObject();
}

/**
 * Load a token by uid.
 */
function fpd_token_load_by_uid($uid) {
  return db_query('SELECT * FROM {fpd_token} WHERE uid = :uid', array(':uid' => $uid))->fetchObject();
}

/**
 * Get the fpd server url for a given $fid and $uid.
 */
function fpd_get_file_url($fid, $uid) {
  $host = variable_get('fpd_server_host', 'example.com');
  $scheme = variable_get('fpd_server_scheme', 'http');
  $port = variable_get('fpd_server_port', 80);
  $token = fpd_token_load_by_uid($uid);
  $url = $scheme . '://' . $host . ':' . $port . '/fpd/server/';
  $url .= $token->fpd_token . '/' . $fid;
  return $url;
}

/**
 * Implements hook_user_login().
 */
function fpd_user_login(&$edit, $account) {
  if (variable_get('fpd_enabled', FALSE)) {
    fpd_token_generate($account);
  }
}

/**
 * Implements hook_user_logout().
 */
function fpd_user_logout($account) {
  if (variable_get('fpd_enabled', FALSE)) {
    db_query('DELETE FROM {fpd_token} WHERE uid = :uid', array(':uid' => $account->uid));
  }
}

/**
 * Generate a token for the given account.
 */
function fpd_token_generate($account) {
  $fpd_token = drupal_get_token('fpd_token_' . $account->uid);
  $sql = 'INSERT INTO {fpd_token} (uid, fpd_token) VALUES (:uid, :fpd_token)';
  db_query($sql, array(':uid' => $account->uid, ':fpd_token' => $fpd_token));
  return $fpd_token;
}

/**
 * Check if the user asscociated with $fpd_token can download $file.
 */
function fpd_auth($fpd_token, $file) {
  global $user;

  // Do some stupid shit, because hook_file_download() will check global $user
  // so we have no way of passing the user in. So, overwrite global $user with
  // the account associated with the token.
  $original_user = clone $user;
  $user = user_load($fpd_token->uid);

  // Stolen from file_download().
  $headers = array();
  foreach (module_implements('file_download') as $module) {
    $function = $module . '_file_download';
    $result = $function($file->uri);
    if ($result == -1) {
      $headers = array();
      break;
    }
    if (isset($result) && is_array($result)) {
      $headers = array_merge($headers, $result);
    }
  }

  $output = array(
    'access' => count($headers) || $user->uid == 1 ? TRUE : FALSE,
    'headers' => $headers,
    'realpath' => drupal_realpath($file->uri),
    'filename' => $file->filename,
  );
  drupal_json_output($output);

  $user = $original_user;
  drupal_exit();
}

