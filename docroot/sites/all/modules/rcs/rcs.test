<?php

/**
 * @file
 *
 *
 *
 * @author Attila Fekete - http://drupal.org/user/762986
 */
class rcsWebTestCase extends DrupalWebTestCase {

  protected $web_user;
  protected $type;

  public static function getInfo() {
    return array(
      'name' => 'Required comment subject functionality',
      'description' => 'Required comment subject field',
      'group' => 'Comment',
    );
  }

  function setUp() {
    parent::setUp('rcs', 'comment', 'text', 'field', 'field_sql_storage');

    $this->web_user = $this->drupalCreateUser(array(
      'administer content types',
      'administer nodes',
      'administer comments',
        ));

    $this->drupalLogin($this->web_user);
  }

  /**
   * Tests functionality.
   */
  function testRcsFunctionality() {
    // Login the user.
    $this->drupalLogin($this->web_user);

    // Create custom content type.
    $content_type = $this->drupalCreateContentType();
    $type = $content_type->type;

    $this->drupalGet('admin/structure/types/manage/' . $type);

    // Check if 'Allow comment title' checkbox appears.
    $this->assertField('comment_subject_field', t('Allow comment title checkbox is available'));

    // Enable it regardless status, save content type, then return.
    $content_settings = array(
      'comment_subject_field' => 1,
    );

    $this->drupalPost('admin/structure/types/manage/' . $type, $content_settings, t('Save content type'));
    $this->assertRaw(' has been updated.', t('Settings modified successfully for content type: (Allow comment title checkbox checked)'));

    // The subject field is required.
    $this->drupalGet('admin/structure/types/manage/' . $type);

    // check if 'Comment subject field is required' checkbox appears.
    $this->assertField('comment_subject_required', t('Comment subject field is required checkbox is available'));

    // Check if is not checked?
    $this->assertNoFieldChecked('edit-comment-subject-required', t('Comment subject field is required is not checked'));

    // enable = 1, disable = 0
    $content_settings = array(
      'comment_subject_required' => 1,
    );

    $this->drupalPost('admin/structure/types/manage/' . $type, $content_settings, t('Save content type'));
    $this->assertRaw(' has been updated.', t('Settings modified successfully for content type: (Comment subject field is required checkbox checked)'));

    // @todo: is this state saved?
    // Create test node.
    $node = array();
    $node = array(
      'title' => $this->randomString(),
      'type' => $type,
    );

    $node = $this->drupalCreateNode($node);
    $this->verbose('Node created: ' . var_export($node, TRUE));
    $this->drupalGet('node/' . $node->nid);

    // Create random comment for the node with subject.
    $comment = array();
    $comment['subject'] = $this->randomString();
    $comment['comment_body[und][0][value]'] = $this->randomString();
    $this->drupalPost(NULL, $comment, t('Save'));
    $this->assertText(t(' has been posted'), t('Comment has been succesfully posted'));

    // Create random comment for the node without subject.
    $comment = array();
    $comment['comment_body[und][0][value]'] = $this->randomString();
    $this->drupalPost(NULL, $comment, t('Save'));
    $this->assertText(t(' is required'), t('Comment subject is empty and detected'));

    // The subject not required.
    $this->drupalGet('admin/structure/types/manage/' . $type);

    // Check if 'Comment subject field is required' checkbox appears.
    $this->assertField('comment_subject_required', t('Comment subject field is required checkbox is available'));

    // Check if checked?
    $this->assertFieldChecked('edit-comment-subject-required', t('Comment subject field is required is checked'));

    $content_settings = array(
      'comment_subject_required' => FALSE,
    );

    $this->drupalPost('admin/structure/types/manage/' . $type, $content_settings, t('Save content type'));
    $this->assertRaw(' has been updated.', t('Settings modified successfully for content type.'));

    $this->drupalGet('admin/structure/types/manage/' . $type);
    $this->assertNoFieldChecked('edit-comment-subject-required', t('Comment subject field is required is not checked'));

    // Create test node.
    $node = array();
    $node = array(
      'title' => $this->randomString(),
      'type' => $type,
    );

    $node = $this->drupalCreateNode($node);
    $this->verbose('Node created: ' . var_export($node, TRUE));
    $this->drupalGet('node/' . $node->nid);

    // Create random comment for the node with subject.
    $comment = array();
    $comment['subject'] = $this->randomString();
    $comment['comment_body[und][0][value]'] = $this->randomString();
    $this->drupalPost(NULL, $comment, t('Save'));
    $this->assertText(t(' has been posted'), t('Comment has been succesfully posted'));

    // Create random comment for the node without subject.
    $comment = array();
    $comment['comment_body[und][0][value]'] = $this->randomString();
    $this->drupalPost(NULL, $comment, t('Save'));
    $this->assertText(t(' has been posted'), t('Comment has been succesfully posted'));
  }
}
