<?php

/**
 * Tests the functionality of Ming.
 */
class MingWebTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Ming',
      'description' => 'Tests for the Ming Mongo API.',
      'group' => 'Ming',
    );
  }

  public function setUp() {
    // Enable any modules required for the test
    parent::setUp('ming');
  }

  /**
   *  Test the default connection
   */
  function testDefaultConnection() {
    $db = ming_db();

    $connection = get_class($db->connection);
    $db = get_class($db->mongoDB);

    $this->assertEqual($connection, 'Mongo', 'Create a Mongo connection via a Mongo object');
    $this->assertEqual($db, 'MongoDB', 'Access a database using a MongoDB object');

    // We should test the Collection here, however the test case seems to mix
    // up its own class name with the Collection class name.
  }

  /**
   * Test Collection functions
   *
   * @internal \Ming\Core\Database $db
   */
  function testMongoCollection() {
    $db = ming_db();

    $db->collection('ming_test');

    // -------------------------
    // Test insert
    $data = array(
      'foo' => 'bar',
    );

    // Use safe mode (TRUE) so we get a result back to test
    $result = $db->insert($data, TRUE);
    $this->assertNull($result['err'], 'Insert a value into the database');

    $id = $result['id'];

    // -------------------------
    // Test find
    $filter = array(
      'foo' => 'bar',
    );


    $many = FALSE;
    $find = $db->find($filter);
    $results = iterator_to_array($find);
    $total = count($results);
    if ($total >= 1) {
      $many = TRUE;
    }
    $this->assertTrue($many, 'Find results in database');

    // -------------------------
    // Test find by ID
    $findbyid = $db->findByID($id);
    $results = iterator_to_array($findbyid);
    $returned_id = $db->extractID($results[0]);
    $this->assertEqual($id, $returned_id, 'Find results in database by ID');
  }
}

