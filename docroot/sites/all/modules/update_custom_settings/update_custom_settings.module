<?php
/**
 * @file
 * Update Custom Settings module.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function update_custom_settings_form_update_settings_alter(&$form, &$form_state, $form_id) {
  global $language;
  $default_message = t('New release(s) available for !site_name', array('!site_name' => variable_get('site_name', 'Drupal')), array('langcode' => $language->language));

  $form['update_check_frequency']['#options']['15'] = t('Bi-weekly');
  $form['update_check_frequency']['#options']['30'] = t('Monthly');

  $form['custom_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Custom settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['custom_settings']['update_notify_sender'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail address to send the notifications from'),
    '#default_value' => variable_get('update_notify_sender', ''),
    '#description' => t('The %from address in updates notifications.', array('%from' => t('From'))),
    '#size' => 40,
  );

  $form['custom_settings']['update_notify_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail subject of the notification'),
    '#default_value' => variable_get('update_notify_subject', ''),
    '#description' => t('The subject in updates notifications. The default subject is: %msg', array('%msg' => $default_message)),
    '#size' => 60,
  );

  if (module_exists('token')) {
    $form['custom_settings']['token_help'] = array(
      '#type' => 'fieldset',
      '#title' => t('Replacement patterns'),
      '#description' => t('Prefer raw-text replacements for text to avoid problems with HTML entities.'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

    $form['custom_settings']['token_help']['help'] = array(
      '#theme' => 'token_tree',
      '#token_types' => array('global'),
      '#global_types' => TRUE,
      '#click_insert' => TRUE,
    );
  }

  $form['custom_settings']['update_notify_disable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Disable e-mail notifications'),
    '#description' => t('Not recommended in production environments.'),
    '#default_value' => variable_get('update_notify_disable', FALSE),
  );

  $form['#validate'][] = 'update_custom_settings_validate';
  array_unshift($form['#submit'], 'update_custom_settings_submit');
}

function update_custom_settings_validate($form, &$form_state) {
  $email = trim($form_state['values']['update_notify_sender']);

  if (!empty($email) && !valid_email_address($email)) {
    form_set_error('update_notify_sender', t('%email is not a valid e-mail address.', array('%email' => $email)));
  }
}

function update_custom_settings_submit($form, $form_state) {
  // Do some stuff?
}

/**
 * Implements hook_mail_alter().
 */
function update_custom_settings_mail_alter(&$message) {
  if ($message['id'] == 'update_status_notify') {
    if (variable_get('update_notify_disable', '')) {
      $message['to'] = '';
    }
    if (variable_get('update_notify_sender', '')) {
      $from = variable_get('update_notify_sender', '');
      $headers = &$message['headers'];
      $headers['From'] = $headers['Sender'] = $headers['Return-Path'] = $message['from'] = $from;
    }
    if (variable_get('update_notify_subject', '')) {
      if (module_exists('token')) {
        $message['subject'] = token_replace(variable_get('update_notify_subject', ''));
      }
      else {
        $message['subject'] = variable_get('update_notify_subject', '');
      }
    }
  }
}
