<?php

/**
 * @file
 * Tests for the Persistent Update API module.
 */

/**
 * Tests persistent updates are persistent.
 */
class PersistentUpdateAPITestCase extends DrupalWebTestCase {
  var $profile = 'testing';

  public static function getInfo() {
    return array(
      'name'        => 'Persistent Update API',
      'description' => 'Persistent Update API core functionality.',
      'group'       => 'Persistent Update API',
    );
  }

  function setUp() {
    parent::setUp(array('persistent_update'));

    // Set all installed modules, excluding Persistent Update API, to their
    // latest schema versions, as they have just been installed and should
    // already have this set to prevent unnecessary updates from attempting to
    // run. Persistent Update API modifies it's schema version on
    // hook_install().
    $modules = module_list();
    unset($modules['persistent_update']);
    foreach ($modules as $module) {
      $schema_versions = drupal_get_schema_versions($module);
      if (is_array($schema_versions)) {
        drupal_set_installed_schema_version($module, end($schema_versions));
      }
    }

    // Create user with 'administer software updates' and login.
    $user = $this->drupalCreateUser(array('administer software updates'));
    $this->drupalLogin($user);
  }

  /**
   * Test persistent updates are run and persist.
   */
  function testPersistentUpdate() {
    // Ensure Persistent Update API schema is set to 6999 after install.
    $schema_version = drupal_get_installed_schema_version('persistent_update');
    $this->assertEqual($schema_version, 6999, 'Persistent Update API schema is set at 6999 after install.');

    // Ensure Persistent Update API update is available to be run.
    $this->drupalPost('update.php', array(), t('Continue'));
    $this->assertText('persistent_update module', 'Persistent Update API module update available.');

    // Ensure Persistent Update API update run successfully.
    $this->drupalPost($this->url, array(), t('Apply pending updates'));
    $this->assertText('Updates were attempted.', 'Persistent Update API module updates run.');

    // Ensure Persistent Update API schema is set to 6999 after updates.
    $schema_version = drupal_get_installed_schema_version('persistent_update');
    $this->assertEqual($schema_version, 6999, 'Persistent Update API schema is set at 6999 after updates.');

    // Ensure Persistent Update API update is still available to be run.
    $this->drupalPost('update.php', array(), t('Continue'));
    $this->assertText('persistent_update module', 'Persistent Update API module update still available.');
  }
}
