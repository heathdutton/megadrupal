<?php

/**
 * @file
 * Allows Drupal to share user sessions with Primo.
 */

/**
 * Implements hook_menu().
 */
function primo_sso_menu() {
  $items = array();

  $items['primologin'] = array(
    'title' => 'Primo SSO Login',
    'page callback' => 'primo_sso_login',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/primo_sso'] = array(
    'title' => 'Primo SSO',
    'description' => 'Configure Primo integration.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer primo sso'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/primo_sso/settings'] = array(
    'title' => 'Primo SSO Settings',
    'description' => 'Settings for Primo',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('primo_sso_settings'),
    'access arguments' => array('administer primo sso'),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function primo_sso_permission() {
  return array(
    'access primo discovery' => array(
      'title' => t('Access Primo Discovery'),
      'description' => t('Access Primo Discovery'),
    ),
    'administer primo' => array(
      'title' => t('Administer Primo'),
      'description' => t('Configure the Primo SSO module'),
    ),
  );
}

/**
 * Performs the authentication.
 */
function primo_sso_login() {
  global $user;
  global $_primo_sso_url;
  $_primo_sso_url = isset($_REQUEST['url']) ? $_REQUEST['url'] : '';

  // User is logged in has permission to access primo discovery.
  if ($user->uid && user_access('access primo discovery')) {
    $url = primo_sso_create_ticket($_primo_sso_url);
    header("Location:$url\n\n");
  }
  // User is logged in but does NOT have permission to access primo discovery.
  elseif ($user->uid && !user_access('access primo discovery')) {
    drupal_set_message(t('You do not have permission to access Primo Discovery'), 'error');
    return '';
  }
  else {
    return drupal_get_form('user_login', array('#action' => 'abc'));
  }
}


/**
 * Implements hook form_alter().
 *
 * Adds a url field to the form, which is then used by primo_user_login().
 */
function primo_sso_form_alter(&$form, $form_state, $form_id) {
  global $_primo_sso_url;
  if ($form_id == 'user_login' || $form_id == 'user_login_block') {
    $form['primo_sso_url'] = array(
      '#type' => 'hidden',
      '#value' => $_primo_sso_url,
    );
    if (isset($form['#action']) && preg_match('@^([^?]*)/(primologin)\\?(?!destination=)(.+)$@i', $form['#action'], $parts)) {
      $form['#action'] = sprintf('%s/%s?destination=%s', $parts[1], $parts[2], urlencode($parts[2] . '?' . $parts[3]));
    }
  }
}

/**
 * Implements hook_user_login().
 */
function primo_sso_user_login(&$edit, $account) {
  if (!empty($edit['primo_sso_url'])) {
    $_primo_sso_url = $edit['primo_sso_url'];

    // User is logged in has permission to access primo discovery.
    if ($account->uid && user_access('access primo discovery')) {
      $url = primo_sso_create_ticket($_primo_sso_url);
      header("Location:$url\n\n");
    }
    else {
      drupal_set_message(t("You do not have permission to access Primo Discovery"));
      drupal_access_denied();
      exit();
    }
  }
}

/**
 * Settings for Primo.
 */
function primo_sso_settings() {
  $form = array();
  $form['primo_sso_base_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Primo Base URL'),
    '#default_value' => variable_get('primo_sso_base_url', 'https://example-primo.hosted.exlibrisgroup.com'),
    '#description' => t('The Base URL of your Primo server'),
  );
  $form['primo_sso_institute'] = array(
    '#type' => 'textfield',
    '#title' => t('Institute'),
    '#default_value' => variable_get('primo_sso_institute', 'your_institute'),
    '#description' => t('The institute to which your users belong'),
  );
  $form['primo_sso_ticket_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Primo secret'),
    '#default_value' => variable_get('primo_sso_ticket_secret', 'somesecret'),
    '#description' => t('Secret to share between Drupal and Primo'),
  );
  return system_settings_form($form);
}

/**
 * Generates the URL to use with Primo tickets.
 */
function primo_sso_create_ticket($target_url) {
  global $user;

  if ($user->uid == 0) {
    return FALSE;
  }
  $id = $user->name;
  $primo_sso_base_url = variable_get('primo_sso_base_url', 'http://primo.example.com');
  $primo_sso_institute = variable_get('primo_sso_institute', 'your_institute');
  $primo_sso_ticket_secret = variable_get('primo_sso_ticket_secret', '');

  if (strcmp($primo_sso_ticket_secret, "") == 0) {
    watchdog('configuration error', 'Primo secret cannot be blank');
    exit(1);
  }

  $time = time();
  $hextime = sprintf("%x", $time);
  $hash_input = $time . $id . "$primo_sso_ticket_secret";
  $hash = md5($hash_input);
  $pds_handle = "$hextime" . "$hash";
  $remote_login_url = $primo_sso_base_url . '/pds?func=remote-login&institute=' . $primo_sso_institute . '&calling_system=primo&pds_handle=' . $pds_handle . '&id=' . urlencode($id) . '&url=' . "$target_url";

  return $remote_login_url;
}
