<?php

/**
 * @file
 * Install, update and uninstall functions for the userpoints_node_action module.
 */

include_once('userpoints_node_action.inc');

/**
 * Implementation of hook_schema().
 */
function userpoints_node_action_schema() {
  $schema = array();
  $schema['userpoints_node_action'] = array(
    'description' => 'Holds rules for node publishing options with userpoints',
    'fields' => array(
      'id' => array(
        'description' => 'Auto-incrementing ID',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'disp-width' => '10',
      ),
      'role_id' => array(
        'description' => 'ID of the role for the rule',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'pubtype' => array(
        'description' => 'Node type of the rule',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'action' => array(
        'description' => 'Publishing action of the rule',
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
        'default' => "",
      ),
      'category' => array(
        'description' => 'Category of points for the rule',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'disp-width' => '10',
        'default' => 0,
      ),
      'points' => array(
        'description' => 'Amount of points for the rule',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'disp-width' => '10',
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
  );
  
  return $schema;
}

/**
 * Implementation of hook_update_N().
 * Update the roles and pubtype columns to support multiple values
 */
function userpoints_node_action_update_7101() {
  // Change role_id and pubtype to text strings
  db_change_field('userpoints_node_action', 'role_id', 'role_id', array('type' => 'text', 'not null' => TRUE));
  db_change_field('userpoints_node_action', 'pubtype', 'pubtype', array('type' => 'text', 'not null' => TRUE));
  
  // Manually correct the delimiter issues
  $rules = userpoints_node_action_get_all();
  if (!empty($rules)) {
    foreach ($rules as $rule) {
      if (strpos($rule['role_id'], USERPOINTS_NODE_ACTION_DELIMITER) === false && strpos($rule['pubtype'], USERPOINTS_NODE_ACTION_DELIMITER) === false) {
        db_query("UPDATE {userpoints_node_action} SET role_id = :new_role, pubtype = :new_pub WHERE id = :id", array(
          ':new_role' => USERPOINTS_NODE_ACTION_DELIMITER . $rule['role_id'] . USERPOINTS_NODE_ACTION_DELIMITER,
          ':new_pub' => USERPOINTS_NODE_ACTION_DELIMITER . $rule['pubtype'] . USERPOINTS_NODE_ACTION_DELIMITER,
          ':id' => $rule['id']
        ));
      }
    }
  }
  $ret = t("Updated existing values with new data storage delimiters");
  return $ret;
}
