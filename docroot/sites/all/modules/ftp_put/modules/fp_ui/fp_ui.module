<?php

/**
* Implements hook_menu().
*/
function fp_ui_menu() {
  $items = array();
  $items['ftp_put'] = array(
    'title' => 'Process FTP.',
    'description' => 'Initiate an FTP transfer.',
    'page callback' => '_ftp_put',
    'access callback'  => 'user_access',
    'access arguments' => array('process FTP requests over a URL'),	
    'type' => MENU_CALLBACK
  );
  $items['admin/config/services/ftp_put'] = array(
    'title' => 'FTP Put module settings',
    'description' => 'Description of the FTP Put settings page',
    'page callback' => 'drupal_get_form',
    'access callback'  => 'user_access',
    'page arguments' => array('fp_ui_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

 /**
* Implements hook_permission().
*/
function fp_ui_permission() {
  return array(
    'process FTP requests over a URL' =>  array(
      'title' => t('FTP Put requests'),
      'description' => t('process FTP requests over a URL, /ftp_put.'),
    ),
	);
}

/**
* Form generator for module settings.
*/
function fp_ui_form($form, &$form_state) {
  $form['fp_ui_local_dir'] = array(
    '#type' => 'textfield',
    '#title' => t('Local dir'),
    '#default_value' => variable_get('fp_ui_local_dir', ''),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("Local directory with files. WARNING: All files in this directory will be FTP-ed. If the 'delete' option is checked all files will be DELETED. If left blank, no files will be FTP-ed or deleted."),
    '#required' => FALSE,
  );
// content types
  $content_types = node_type_get_types();
// use this array to list content types
  foreach ($content_types as $key) {
    $content_types[$key->type] = $key->type;
  }
  $stored_content_types = variable_get('fp_ui_content_types', $content_types);
  $form['fp_ui_content_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Content Types to serve over FTP'),
    '#options' => $content_types,
    '#default_value' => $stored_content_types,
    '#description' => t("Select content types to be serverd by FTP. All fields and attached files associated with these content types will be FTP-ed."),
    '#required' => FALSE,
  );
  
  $form['fp_ui_server'] = array(
    '#type' => 'textfield',
    '#title' => t('FTP server'),
    '#default_value' => variable_get('fp_ui_server', ''),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("Address of the FTP server."),
    '#required' => TRUE,
  );
  $form['fp_ui_dir'] = array(
    '#type' => 'textfield',
    '#title' => t('FTP dir'),
    '#default_value' => variable_get('fp_ui_dir', ''),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("Remote directory on the FTP server."),
    '#required' => FALSE,
  );
   $form['fp_ui_login'] = array(
    '#type' => 'textfield',
    '#title' => t('login'),
    '#default_value' => variable_get('fp_ui_login', 'anonymous'),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("FTP server login name."),
    '#required' => TRUE,
  );
  $form['fp_ui_password'] = array(
    '#type' => 'textfield',
    '#title' => t('password'),
    '#default_value' => variable_get('fp_ui_password', 'anonymous'),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("FTP server password."),
    '#required' => TRUE,
  );
  $form['fp_ui_tempdir'] = array(
    '#type' => 'textfield',
    '#title' => t('temp dir'),
    '#default_value' => variable_get('fp_ui_tempdir', 'sites/default/files'),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("Directory to store temp files."),
    '#required' => TRUE,
  );
  $form['fp_ui_del'] = array(
    '#type' => 'checkbox',
    '#title' => t('Delete files/content'),
    '#default_value' => variable_get('fp_ui_del', 0),
    '#description' => t("WARNING: THIS WILL DELETE LOCAL FILES AND CONTENT, after they have been FTP-ed. USE WITH EXTREME CAUTION AND CHECK WHICH LOCAL DIR AND CONTENT TYPES YOU HAVE SET ABOVE."),
    '#required' => FALSE,
  );
  $form['fp_ui_ssl'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use SSL to connect'),
    '#default_value' => variable_get('fp_ui_ssl', 0),
    '#description' => t("Use a more secure but slower connection over SSL"),
    '#required' => FALSE,
  );
  $form['fp_ui_log'] = array(
    '#type' => 'checkbox',
    '#title' => t('Keep log'),
    '#default_value' => variable_get('fp_ui_log', 0),
    '#description' => t("Keep a log of all FTP transaction"),
    '#required' => FALSE,
  );
  $form['fp_ui_compr'] = array(
    '#type' => 'checkbox',
    '#title' => t('Compression'),
    '#default_value' => variable_get('fp_ui_compr', 1),
    '#description' => t("Compress files before FTP-ing."),
    '#required' => FALSE,
  );
  $form['fp_ui_cron'] = array(
    '#type' => 'checkbox',
    '#title' => t('Cron run'),
    '#default_value' => variable_get('fp_ui_cron', 0),
    '#description' => t("Run FTP on cron"),
    '#required' => FALSE,
  );
  $form = system_settings_form($form);
  return $form;
}



/**
* Implements hook_views_api().
 */
function fp_ui_views_api() {
 return array(
   'api' => 3,
   'path' => drupal_get_path('module', 'fp_ui'),
 );
}
// ***************************  Hooks end  ***************************
//                  **********************************