<?php
/**
 * @file
 * Main module file for the context_flag module.
 */

// Load the global ContextFlagBase class (helps avoid issues with migrating
// from older versions of the module, specifically 1.2-1.3).
module_load_include('inc', 'context_flag', 'conditions/context_flag_condition.base');

/**
 * Implements hook_context_plugins().
 */
function context_flag_context_plugins() {
  $plugins = array();
  $path = drupal_get_path('module', 'context_flag') . '/conditions/';
  // Plugins: Node Flags.
  $plugins['flag_node_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.node.inc',
      'class' => 'ContextFlagNodeActive',
      'parent' => 'ContextFlagBase',
    ),
  );
  // Plugins: User Page Flags.
  $plugins['flag_user_page_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.user_page.inc',
      'class' => 'ContextFlagUserPageActive',
      'parent' => 'ContextFlagBase',
    ),
  );
  // Plugins: User Account Flags.
  $plugins['flag_user_account_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.user.inc',
      'class' => 'ContextFlagUserAccountActive',
      'parent' => 'ContextFlagBase',
    ),
  );
  // Plugins: Taxonomy Term Page.
  $plugins['flag_taxonomy_page_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.taxonomy_page.inc',
      'class' => 'ContextFlagTaxonomyPageActive',
      'parent' => 'ContextFlagBase',
    ),
  );
  return $plugins;
}

/**
 * Implements hook_context_registry().
 */
function context_flag_context_registry() {
  $registry = array(
    'conditions' => array(
      // Node conditions.
      'flag_node_active' => array(
        'title' => t('Flag - node'),
        'description' => t('Enable this context when these Flags are active.'),
        'plugin' => 'flag_node_active',
      ),
      // User page conditions.
      'flag_user_page_active' => array(
        'title' => t('Flag - user page'),
        'description' => t('Enable this context when viewing a user profile and this Flag is active.'),
        'plugin' => 'flag_user_page_active',
      ),
      // User account conditions.
      'flag_user_account_active' => array(
        'title' => t('Flag - current user'),
        'description' => t('Enable this context when this Flag is active for the currently logged-in user.'),
        'plugin' => 'flag_user_account_active',
      ),
      // Taxonomy page conditions.
      'flag_taxonomy_page_active' => array(
        'title' => t('Flag - taxonomy term page'),
        'description' => t('Enable this context when viewing a taxonomy term page and this Flag is active.'),
        'plugin' => 'flag_taxonomy_page_active',
      ),
    ),
  );
  return $registry;
}

/**
 * Implements hook_context_page_condition().
 */
function context_flag_context_page_condition() {
  // Use the conditions stored in the registry to trigger contexts.
  $contexts = context_flag_context_registry();
  foreach ($contexts['conditions'] as $context) {
    if ($plugin = context_get_plugin('condition', $context['plugin'])) {
      $plugin->execute();
    }
  }
}

/**
 * Implements hook_help().
 */
function context_flag_help($path, $arg) {
  switch ($path) {
    case 'admin/help#context_flag':
      $registry = context_flag_context_registry();
      $markup = array();
      $markup[] = '<h3>' . t('About Context Flag') . '</h3>';
      $markup[] = '<p>' . t('The Context Flag module adds three new options for conditions to the Context management interface.') . '</p>';
      $markup[] = '<ul>';
      // Build the list of condition help information from the context registry.
      foreach ($registry['conditions'] as $condition) {
        $markup[] = '<li>';
        $markup[] = '<strong>' . t($condition['title']) . ':</strong> ';
        $markup[] = t($condition['description']);
        $markup[] = '</li>';
      }
      $markup[] = '</ul>';
      $markup[] = '<h4>' . t('How do I apply this to the anonymous user?') . '</h4>';
      $markup[] = '<p>' . t('Since the Anonymous user has its own role you can do this by using the default &quot;User role&quot; Context condition (included as part of the main context module).') . '</p>';
      return implode('', $markup);
  }
}
