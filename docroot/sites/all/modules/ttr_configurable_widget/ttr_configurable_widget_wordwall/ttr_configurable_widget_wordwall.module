<?php
/**
 * @file
 * Word Wall module
 *
 * This file contains implementations of the hooks required to generate 
 * a `display option` for the TTR Configurable Widget module.
 */

/**
 * Implements hook_ttrcw_view_info().
 */
function ttr_configurable_widget_wordwall_ttrcw_view_info() {
  return array(
    'wordwall' => array(
      'title' => t('Wordwall'),
      'description' => '',
    ),
  );
}

/**
 * Implements hook_ttrcw_VIEW_ID_view_form().
 */
function ttr_configurable_widget_wordwall_ttrcw_wordwall_view_form($options, $field, $instance, $selected_items) {
  $form_element = array();

  // JS & CSS.
  drupal_add_js(drupal_get_path('module', 'ttr_configurable_widget_wordwall') . '/js/ttr_configurable_widget_wordwall.js', 'file');
  drupal_add_css(drupal_get_path('module', 'ttr_configurable_widget_wordwall') . '/css/ttr_configurable_widget_wordwall.css', 'file');

  // Send settings to JS.
  if ($field['cardinality'] > 0) {
    drupal_add_js(array('ttr_configurable_widget_wordwall' => array('cardinality' => $field['cardinality'])), 'setting');
  }

  $form_element = array(
    '#type' => 'checkboxes',
    '#title' => check_plain($instance['label']),
    '#options' => $options,
    '#prefix' => '<div id="word-checkbox-list-container-' . $instance['id'] . '" class="word-checkbox-list">',
    '#suffix' => '</div>',
    '#attributes' => array(
      'autocomplete' => 'off',
    ),
    '#default_value' => $selected_items,
  );

  return $form_element;
}
