<?php

class SkinTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => t('Skin tests'),
      'description' => t('Ensure that Skin works.'),
      'group' => t('Skin'),
    );
  }

  /**
   * Setup our environment. We have a page at "skin/test" which we'll test.
   * We also want to optimize CSS and Javascript files.
   */
  public function setUp() {
    parent::setUp('skin', 'skin_test');
    variable_set('skin_paths', 'skin/test');
    variable_set('preprocess_css', 1);
    variable_set('preprocess_js', 1);
    $this->skin_public_files = variable_get('file_public_path', conf_path() . '/files');
    $this->skin_directory = variable_get('skin_directory', $this->skin_public_files . '/skin');
  }

  /**
   * Tests conversion of URLs to absolute URLs.
   */
  public function testAbsoluteURLs() {
    $this->drupalGet('skin/test');

    $this->assertRaw(l(t('Homepage link'), '<front>', array('absolute' => TRUE)), t('Homepage link is absolute.'));
    $this->assertLinkByHref(url('skin/relative', array('absolute' => TRUE)), 0, t('Relative link is absolute.'));
    $this->assertLinkByHref('mailto:test@example.com', 0, t('Mailto link was not rewritten.'));
    $this->assertNoPattern('|href="' . url('<front>') . '|', t('No relative links or CSS references exist.'));
    $this->assertNoPattern('|@import url\("' . url('<front>') . '|', t('No relative CSS import references exist.'));
    $this->assertPattern('|src="' . file_create_url('misc/druplicon.png') . '"|', t('Image reference is absolute.'));
    $this->assertNoPattern('|src="' . url('<front>') . '|', t('No relative images or Javascript references exist.'));
    $this->assertPattern('|longdesc="' . url('skin/test', array('absolute' => TRUE)) . '"|', t('Image long description is absolute.'));
    $this->assertPattern('|action="' . url('skin/test', array('absolute' => TRUE)) . '"|', t('Form action is absolute.'));
  }

  /**
   * Tests saving of optimized CSS and Javascript files.
   */
  public function testSavingOptimizedFiles() {
    variable_set('skin_cache', 1);

    $this->drupalGet('skin/test');

    $this->assertTrue(file_exists($this->skin_directory . '/' . $this->skin_public_files . '/css'), t('Optimized CSS files are cached.'));
    $this->assertTrue(file_exists($this->skin_directory . '/' . $this->skin_public_files . '/js'), t('Optimized Javascript files are cached.'));

    $this->assertFalse(file_exists($this->skin_directory . '/modules/system/system.base.css'), t('Unoptimized CSS files are not cached.'));
    $this->assertFalse(file_exists($this->skin_directory . '/misc/drupal.js'), t('Unoptimized Javascript files are not cached.'));

    drupal_flush_all_caches();

    $this->assertTrue(file_exists($this->skin_directory . '/' . $this->skin_public_files . '/css'), t('Optimized CSS files are cached.'));
    $this->assertTrue(file_exists($this->skin_directory . '/' . $this->skin_public_files . '/js'), t('Optimized Javascript files are cached.'));

    skin_clear_cache();

    $this->assertFalse(file_exists($this->skin_directory), t('Optimized CSS and Javascript files are not cached.'));
  }

  /**
   * Tests saving of all CSS and Javascript files.
   */
  public function testSavingAllFiles() {
    variable_set('skin_cache', 2);

    $this->drupalGet('skin/test');

    $this->assertTrue(file_exists($this->skin_directory . '/modules/system/system.base.css'), t('CSS files are cached.'));
    $this->assertTrue(file_exists($this->skin_directory . '/misc/drupal.js'), t('Javascript files are cached.'));

    $css_contents = file_get_contents($this->skin_directory . '/modules/system/system.base.css');
    $this->assertTrue(strpos($css_contents, url('misc/throbber.gif', array('absolute' => TRUE))) !== FALSE, 'CSS image references are absolute.');

    drupal_flush_all_caches();

    $this->assertTrue(file_exists($this->skin_directory . '/modules/system/system.base.css'), t('CSS files are cached.'));
    $this->assertTrue(file_exists($this->skin_directory . '/misc/drupal.js'), t('Javascript files are cached.'));

    skin_clear_cache();

    $this->assertFalse(file_exists($this->skin_directory), t('CSS and Javascript files are not cached.'));
  }

}
