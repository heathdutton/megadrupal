<?php

/**
 * Implements hook_menu().
 */
function migrate_cakephp_menu() {
  $items = array();
  
  $items['admin/content/migrate/cakephp'] = array(
    'title' => 'CakePHP migration',
    'description' => 'Set the Salt used for CakePHP password migrations compatibility.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('migrate_cakephp_admin_settings'),
    'access arguments' => array('configure migrate_cakephp'),
  );
  
  return $items;
}

/**
 * Implementation of hook_permissions().
 */
function migrate_cakephp_permissions() {
  return array(
    'configure migrate_cakephp' => array(
      'title' => t('Configure CakePHP migration'),
    ),
  );
}


/**
 * Admin settings
 */
function migrate_cakephp_admin_settings() {
  $form = array();
  
  $form['migrate_cakephp_salt'] = array(
    '#type' => 'textfield',
    '#title' => t('CakePHP Salt'),
    '#description' => t('This is available in your CakePHP config.php'),
    '#default_value' => variable_get('migrate_cakephp_salt', ''),
  );
  
  $form['migrate_cakephp_hashtype'] = array(
    '#type' => 'select',
    '#title' => t('CakePHP Hashing Type'),
    '#options' => array('sha1' => 'SHA1', 'sha256' => 'SHA256'),
    '#description' => t('This can be set in your AppController, the default is usually sufficient.'),
    '#default_value' => variable_get('migrate_cakephp_hashtype', 'sha1'),
  );
  
  drupal_set_message(t('There are @count CakePHP hashes remaining in the database.',
    array('@count' => _migrate_cakephp_get_count())));

  return system_settings_form($form);
}


/**
 * Find out how many users haven't logged in yet since we migrated.
 */
function _migrate_cakephp_get_count() {
  $query = db_select('users')->condition('pass', '$C$%', 'LIKE');
  $query->addExpression('COUNT(uid)', 'cnt');
  $res = $query->execute();
  return $res->fetchField();
}

