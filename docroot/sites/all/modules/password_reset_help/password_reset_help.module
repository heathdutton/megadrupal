<?php

/**
 * @file
 * Show a configurable message to a visitor trying to submit the
 * Request new password form more than a specific number of times.
 */

define('PASS_RESET_HELP_MSG',
  'Looks like you can\'t remember your registration details. If you need help please contact Customer support.');

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add options to the Configuration -> People -> Account settings screen.
 */
function password_reset_help_form_user_admin_settings_alter(&$form, &$form_state) {
  $form['registration_cancellation']['password_reset_help'] = array(
    '#type' => 'fieldset',
    '#title' => t('Password reset help'),
  );
  $form['registration_cancellation']['password_reset_help']['password_reset_help_user_pass_max_calls'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of Reset password attempts'),
    '#default_value' => variable_get('password_reset_help_user_pass_max_calls', 3),
    '#description' => t('When a visitor attempts to reset their password more than this number of times, they\'ll see a help message.'),
  );
  $msg = variable_get('password_reset_help_user_pass_max_calls_msg', t(PASS_RESET_HELP_MSG));
  $form['registration_cancellation']['password_reset_help']['password_reset_help_user_pass_max_calls_msg'] = array(
    '#type' => 'textarea',
    '#title' => t('Reset password help message'),
    '#default_value' => $msg,
    '#description' => t('This message is shown to visitors having trouble resetting their password.'),
    '#rows' => 3,
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function password_reset_help_form_user_pass_alter(&$form, &$form_state) {
  $form['#validate'][] = 'password_reset_help_user_pass_validate';
}

/**
 * Additional validation callback for the Request new password form.
 */
function password_reset_help_user_pass_validate($form, &$form_state) {
  $calls_count = 1;
  if (isset($_COOKIE['user_pass_validate_call_count'])) {
    $calls_count = (int) $_COOKIE['user_pass_validate_call_count'];
  }

  if ($calls_count >= variable_get('password_reset_help_user_pass_max_calls', 3)) {
    $msg = variable_get('password_reset_help_user_pass_max_calls_msg', t(PASS_RESET_HELP_MSG));
    $msg_type = variable_get('password_reset_help_user_pass_max_calls_msg_type', 'warning');
    if (in_array($msg_type, array('status', 'warning', 'error'))) {
      drupal_set_message($msg, $msg_type);
    }
    else {
      form_set_error('', $msg);
    }
  }

  setrawcookie('user_pass_validate_call_count', ++$calls_count, 0);
}
