<?php

/**
 * @file
 * Webhooks for GitLab
 *
 * @author Mathew Winstone <mwinstone@coldfrontlabs.ca>
 */

/**
 * Implements hook_services_resources().
 */
function gitlab_webhooks_services_resources() {
  // Add a resource to accept the webhook call from GitLab
  $resources['gitlab']['actions']['push_notice'] = array(
    'help' => 'Receive notification that a repository push has been made.',
    'file' => array(
      'type' => 'inc',
      'module' => 'gitlab_webhooks',
      'name' => 'gitlab_webhooks.resources',
    ),
    'callback' => '_gitlab_webhooks_push_notice',
    'access callback' => '_gitlab_webhooks_push_notice_access',
    'access arguments' => array('update'),
    'access arguments append' => TRUE,
    'args' => array(
      array(
        'name' => 'before',
        'type' => 'string',
        'description' => 'Prior commit reference',
        'optional' => FALSE,
        'source' => array('data' => 'before'),
      ),
      array(
        'name' => 'after',
        'type' => 'string',
        'description' => 'After commit reference',
        'optional' => FALSE,
        'source' => array('data' => 'after'),
      ),
      array(
        'name' => 'ref',
        'type' => 'string',
        'description' => 'Branch reference',
        'optional' => FALSE,
        'source' => array('data' => 'ref'),
      ),
      array(
        'name' => 'user_id',
        'type' => 'int',
        'description' => 'User ID',
        'optional' => FALSE,
        'source' => array('data' => 'user_id'),
      ),
      array(
        'name' => 'user_name',
        'type' => 'string',
        'description' => 'User Name',
        'optional' => FALSE,
        'source' => array('data' => 'user_name'),
      ),
      array(
        'name' => 'project_id',
        'type' => 'string',
        'description' => 'Project ID',
        'source' => array('data' => 'project_id'),
        'optional' => FALSE,
      ),
      array(
        'name' => 'repository',
        'type' => 'array',
        'description' => 'Repository information',
        'source' => array('data' => 'repository'),
        'optional' => FALSE,
      ),
      array(
        'name' => 'commits',
        'type' => 'array',
        'description' => 'The commit information',
        'source' => array('data' => 'commits'),
        'optional' => FALSE,
      ),
      array(
        'name' => 'total_commits_count',
        'type' => 'int',
        'description' => 'Total number of commits',
        'optional' => FALSE,
        'source' => array('data' => 'total_commits_count'),
      ),
      array(
        'name' => 'param',
        'type' => 'struct',
        'description' => t('Push notice param'),
        'source' => 'param',
        'optional' => TRUE,
      ),
    ),
  );
  
  // Add a resource to accept the webhook call from GitLab
  $resources['gitlab']['actions']['tag_push_notice'] = array(
    'help' => 'Receive notification that a tag push has been made.',
    'file' => array(
      'type' => 'inc',
      'module' => 'gitlab_webhooks',
      'name' => 'gitlab_webhooks.resources',
    ),
    'callback' => '_gitlab_webhooks_tag_push_notice',
    'access callback' => '_gitlab_webhooks_push_notice_access',
    'access arguments' => array('update'),
    'access arguments append' => TRUE,
    'args' => array(
      array(
        'name' => 'data',
        'type' => 'struct',
        'description' => t('Tag push notice data'),
        'optional' => FALSE,
        'source' => 'data',
      ),
      array(
        'name' => 'param',
        'type' => 'struct',
        'description' => t('Tag push notice param'),
        'source' => 'param',
        'optional' => TRUE,
      ),
    ),
  );

  // Add a resource to accept the webhook call from GitLab
  $resources['gitlab']['actions']['issues_notice'] = array(
    'help' => 'Receive notification that an issue event has occurred.',
    'file' => array(
      'type' => 'inc',
      'module' => 'gitlab_webhooks',
      'name' => 'gitlab_webhooks.resources',
    ),
    'callback' => '_gitlab_webhooks_issues_notice',
    'access callback' => '_gitlab_webhooks_issues_notice_access',
    'access arguments' => array('update'),
    'access arguments append' => TRUE,
    'args' => array(
      array(
        'name' => 'data',
        'type' => 'struct',
        'description' => t('Issue notice data'),
        'source' => 'data',
        'optional' => FALSE,
      ),
      array(
        'name' => 'param',
        'type' => 'struct',
        'description' => t('Issue notice param'),
        'source' => 'param',
        'optional' => TRUE,
      ),
    ),
  );

  return $resources;
}
