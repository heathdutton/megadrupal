<?php
/**
 * @file
 * Tests for FairCoin Address Field module.
 */

/**
 * Functional tests for the FairCoin Address Field module.
 */
class FaircoinAddressFieldTest extends DrupalWebTestCase {

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'FairCoin Address Field',
      'description' => 'Create a content type with faircoin_address field, create a node, check for correct values.',
      'group' => 'FairCoin Address Field',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp(array('field_ui', 'faircoin_address_field'));
  }

  /**
   * Test basic functionality of the faircoin address field.
   */
  public function testFaicoinAddressFieldBasic() {
    $content_type_machine = drupal_strtolower($this->randomName(10));
    $title = $this->randomName(20);

    // Create and login user.
    $account = $this->drupalCreateUser(array('administer content types'));
    $this->drupalLogin($account);

    $this->drupalGet('admin/structure/types');

    // Create the content type.
    $this->clickLink(t('Add content type'));

    $edit = array(
      'name' => $content_type_machine,
      'type' => $content_type_machine,
    );
    $this->drupalPost(NULL, $edit, t('Save and add fields'));
    $this->assertText(t('The content type @name has been added.', array('@name' => $content_type_machine)));

    // Create the fields attached to the content type.
    $simple_text_field = drupal_strtolower($this->randomName(10));
    $multiple_simple_text_field = drupal_strtolower($this->randomName(10));

    $fields[$simple_text_field] = array(
      'widget' => 'faircoin_address_field_simple_text',
      'cardinality' => '1',
    );
    $fields[$multiple_simple_text_field] = array(
      'widget' => 'faircoin_address_field_simple_text',
      'cardinality' => -1,
    );

    foreach ($fields as $fieldname => $details) {
      $edit = array(
        'fields[_add_new_field][label]' => $fieldname,
        'fields[_add_new_field][field_name]' => $fieldname,
        'fields[_add_new_field][type]' => 'faircoin_field',
        'fields[_add_new_field][widget_type]' => $details['widget'],
      );
      $this->drupalPost(NULL, $edit, t('Save'));

      // There are no settings for this, so just press the button.
      $this->drupalPost(NULL, array(), t('Save field settings'));

      $edit = array('field[cardinality]' => (string) $details['cardinality']);
      // Using all the default settings, so press the button.
      $this->drupalPost(NULL, $edit, t('Save settings'));

      debug(
        t('Saved settings for field %field_name with widget %widget_type and cardinality %cardinality',
          array(
            '%field_name' => $fieldname,
            '%widget_type' => $details['widget'],
            '%cardinality' => $details['cardinality'],
          )
        )
      );
      $this->assertText(t('Saved @name configuration.', array('@name' => $fieldname)));
    }

    // Somehow clicking "save" isn't enough, and we have to do a
    // node_types_rebuild().
    node_types_rebuild();
    menu_rebuild();
    $type_exists = db_query('SELECT 1 FROM {node_type} WHERE type = :type', array(':type' => $content_type_machine))->fetchField();
    $this->assertTrue($type_exists, 'The new content type has been created in the database.');

    // Reset the permissions cache.
    $permission = 'create ' . $content_type_machine . ' content';
    $this->checkPermissions(array($permission), TRUE);

    // Now that we have a new content type, create a user that has privileges
    // on the content type.
    $account = $this->drupalCreateUser(array($permission));
    $this->drupalLogin($account);
    $this->drupalGet('node/add/' . $content_type_machine);

    // Add a node.
    $edit = array(
      'title' => $title,
      'field_' . $simple_text_field . '[und][0][faircoin]' => 'fairFRJYXxbyWBH2bEjR9sqYDixPPpJ5AX',
      'field_' . $multiple_simple_text_field . '[und][0][faircoin]' => 'fHtMJgVqCWRcVGF9vqKeZscCa8niPzcneo',
    );

    // We want to add a 2nd item to the multivalue field, so hit "add another".
    $this->drupalPost(NULL, $edit, t('Add another item'));

    $edit = array(
      'field_' . $multiple_simple_text_field . '[und][1][faircoin]' => 'fEtAzqZkqaBXdYDeG9mjnJ6KUuaz1FHzM6',
    );

    // Now we can fill in the second item in the multivalue field and save.
    $this->drupalPost(NULL, $edit, t('Save'));
    $this->assertText(t('@content_type_machine @title has been created', array('@content_type_machine' => $content_type_machine, '@title' => $title)));

    $output_strings = $this->xpath("//code[contains(@class,'faircoin-address-qrcode-text')]/text()");

    $this->assertEqual((string) $output_strings[0], "fairFRJYXxbyWBH2bEjR9sqYDixPPpJ5AX");
    $this->assertEqual((string) $output_strings[1], "fHtMJgVqCWRcVGF9vqKeZscCa8niPzcneo");
    $this->assertEqual((string) $output_strings[2], "fEtAzqZkqaBXdYDeG9mjnJ6KUuaz1FHzM6");

  }

}
