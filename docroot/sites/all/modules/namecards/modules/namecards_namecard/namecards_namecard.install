<?php
/**
* @file
* Install file for Namecards_namecard module.
*/

/**
* Implements hook_install().
*/
function namecards_namecard_install() {
  node_types_rebuild();
  $types = node_type_get_types();
  
//   // Add body field.
//   node_add_body_field($types['namecards_namecard'], 'Notes');
//   // Load the instance definition for our content type's body
//   $body_instance = field_info_instance('node', 'body', 'namecards_namecard');
//   // Configure the body field
//   $body_instance['type'] = 'text_summary_or_trimmed';
  // Create all the fields we are adding to our content type.
  foreach (_namecards_namecard_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  foreach (_namecards_namecard_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'namecards_namecard';
    field_create_instance($instance);
  }
}

/**
* Return a structured array defining the fields created by this content type.
*/
function _namecards_namecard_installed_fields() {
  $t = get_t();
  return array(
    'namecards_namecard_public' => array(
      'field_name' => 'namecards_namecard_public',
      'label' => $t('Public'),
      'type' => 'list_boolean',
      'settings' => array(
        'allowed_values' => array(
          '1' => $t('Public'),
          '0' => $t('Private'),
        ),
        'allowed_values_function' => '',
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_public' => array(
                'value' => 'namecards_namecard_public_value',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_public' => array(
                'value' => 'namecards_namecard_public_value',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(
        'value' => array(
          '0' => 'value',
        ),
      ),
    ),
    'namecards_namecard_given_name' => array(
      'field_name' => 'namecards_namecard_given_name',
      'label' => $t('Given name'),
      'type' => 'text',
    ),
    'namecards_namecard_nickname' => array(
      'field_name' => 'namecards_namecard_nickname',
      'label' => $t('Nickname'),
      'type' => 'text',
    ),
    'namecards_namecard_organization' => array(
      'field_name' => 'namecards_namecard_organization',
      'label' => $t('Organization'),
      'type' => 'node_reference',
      'settings' => array(
        'referenceable_types' => array(
          'namecards_organization' => 'namecards_organization',
          'article' => 0,
          'page' => 0,
          'namecards_namecard' => 0,
        ),
        'view' => array(
           'view_name' => '',
           'display_name' => '',
           'args' => array(),
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_organization' => array(
                'nid' => 'namecards_namecard_organization_nid',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_data_namecards_namecard_organization' => array(
                'nid' => 'fnamecards_namecard_organization_nid',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(
        'nid' => array(
          0 => 'nid',
        ),
      ),
    ),
    'namecards_namecard_position' => array(
      'field_name' => 'namecards_namecard_position',
      'label' => $t('Position'),
      'type' => 'node_reference',
      'settings' => array(
        'referenceable_types' => array(
          'namecards_position' => 'namecards_position',
          'article' => 0,
          'page' => 0,
          'namecards_namecard' => 0,
        ),
        'view' => array(
           'view_name' => '',
           'display_name' => '',
           'args' => array(),
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_position' => array(
                'nid' => 'namecards_namecard_position_nid',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_data_namecards_namecard_position' => array(
                'nid' => 'fnamecards_namecard_position_nid',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array (
        'nid' => array(
          0 => 'nid',
        ),
      ),
      'cardinality' => -1,
    ),
    'namecards_namecard_department' => array(
      'field_name' => 'namecards_namecard_department',
      'label' => $t('Department'),
      'type' => 'node_reference',
      'settings' => array(
        'referenceable_types' => array(
          'namecards_department' => 'namecards_department',
          'article' => 0,
          'page' => 0,
          'namecards_namecard' => 0,
        ),
        'view' => array(
           'view_name' => '',
           'display_name' => '',
           'args' => array(),
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_department' => array(
                'nid' => 'namecards_namecard_department_nid',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_data_namecards_namecard_department' => array(
                'nid' => 'fnamecards_namecard_department_nid',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array (
        'nid' => array(
          0 => 'nid',
        ),
      ),
      'cardinality' => 1,
    ),
    'namecards_namecard_phone' => array(
      'field_name' => 'namecards_namecard_phone',
      'label' => $t('Phone'),
      'type' => 'namecards_phone_field_phone',
      'cardinality' => -1,
      'settings' => array(),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_phone' => array(
                'phone_number' => 'namecards_namecard_phone_number',
                'phone_type' => 'namecards_namecard_phone_type',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_phone' => array(
                'phone_number' => 'namecards_namecard_phone_number',
                'phone_type' => 'namecards_namecard_phone_type',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    /* namecards_namecard_fax */
    'namecards_namecard_fax' => array(
      'field_name' => 'namecards_namecard_fax',
      'label' => $t('Fax'),
      'type' => 'namecards_fax_field_fax',
      'cardinality' => -1,
      'settings' => array(),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_fax' => array(
                'fax_number' => 'namecards_namecard_fax_number',
                'fax_type' => 'namecards_namecard_fax_type',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_fax' => array(
                'fax_number' => 'namecards_namecard_fax_number',
                'fax_type' => 'namecards_namecard_fax_type',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    'namecards_namecard_mobile' => array(
      'field_name' => 'namecards_namecard_mobile',
      'label' => $t('Mobile'),
      'type' => 'text',
      'cardinality' => -1,
    ),
    'namecards_namecard_email' => array(
      'field_name' => 'namecards_namecard_email',
      'label' => $t('Email'),
      'type' => 'text',
      'cardinality' => -1,
    ),
    'namecards_namecard_event' => array(
      'field_name' => 'namecards_namecard_event',
      'label' => $t('Event'),
      'type' => 'node_reference',
      'settings' => array(
        'referenceable_types' => array(
          'namecards_event' => 'namecards_event',
          'article' => 0,
          'page' => 0,
          'namecards_namecard' => 0,
        ),
        'view' => array(
           'view_name' => '',
           'display_name' => '',
           'args' => array(),
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_event' => array(
                'nid' => 'namecards_namecard_event_nid',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_data_namecards_namecard_event' => array(
                'nid' => 'fnamecards_namecard_event_nid',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array (
        'nid' => array(
          0 => 'nid',
        ),
      ),
    ),
    'namecards_namecard_address' => array(
      'field_name' => 'namecards_namecard_address',
      'label' => $t('Address'),
      'type' => 'namecards_address_field_address',
      'cardinality' => -1,
      'settings' => array(),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_address' => array(
                'street' => 'namecards_namecard_address_street',
                'district' => 'namecards_namecard_address_district',
                'city' => 'namecards_namecard_address_city',
                'state' => 'namecards_namecard_address_state',
                'postcode' => 'namecards_namecard_address_postcode',
                'country' => 'namecards_namecard_address_country',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_address' => array(
                'street' => 'namecards_namecard_address_street',
                'district' => 'namecards_namecard_address_district',
                'city' => 'namecards_namecard_address_city',
                'state' => 'namecards_namecard_address_state',
                'postcode' => 'namecards_namecard_address_postcode',
                'country' => 'namecards_namecard_address_country',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    'namecards_namecard_full_content' => array(
      'field_name' => 'namecards_namecard_full_content',
//      'label' => $t('Full content'),
      'type' => 'computed',
      'settings' => array(
        'code' => '$entity_field[0][\'value\'] = \'\';',
        'display_format' => '$display_output = $entity_field_item[\'value\'];',
        'store' => 1,
        'database' => array(
          'data_type' => 'longtext',
          'data_length' => '32',
          'data_size' => 'normal',
          'data_precision' => '10',
          'data_scale' => '2',
          'data_default' => '',
          'data_not_NULL' => 0,
          'data_index' => 0,
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_full_content' => array(
                'value' => 'namecards_namecard_full_content_value',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_full_content' => array(
                'value' => 'namecards_namecard_full_content_value',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    'namecards_namecard_comp_email' => array(
      'field_name' => 'namecards_namecard_comp_email',
//      'label' => $t('Full content'),
      'type' => 'computed',
      'settings' => array(
        'code' => '$entity_field[0][\'value\'] = \'\';',
        'display_format' => '$display_output = $entity_field_item[\'value\'];',
        'store' => 1,
        'database' => array(
          'data_type' => 'longtext',
          'data_length' => '32',
          'data_size' => 'normal',
          'data_precision' => '10',
          'data_scale' => '2',
          'data_default' => '',
          'data_not_NULL' => 0,
          'data_index' => 0,
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
        'module' => 'field_sql_storage',
        'active' => '1',
        'details' => array(
          'sql' => array(
            'FIELD_LOAD_CURRENT' => array(
              'field_data_namecards_namecard_comp_email' => array(
                'value' => 'namecards_namecard_comp_email_value',
              ),
            ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_comp_email' => array(
                'value' => 'namecards_namecard_comp_email_value',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    /* namecards_namecard_comp_organization */
    'namecards_namecard_comp_organization' => array(
      'field_name' => 'namecards_namecard_comp_org',
      'type' => 'computed',
      'settings' => array(
        'code' => '$entity_field[0][\'value\'] = \'\';',
        'display_format' => '$display_output = $entity_field_item[\'value\'];',
        'store' => 1,
        'database' => array(
          'data_type' => 'longtext',
          'data_length' => '32',
          'data_size' => 'normal',
          'data_precision' => '10',
          'data_scale' => '2',
          'data_default' => '',
          'data_not_NULL' => 0,
          'data_index' => 0,
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
          'module' => 'field_sql_storage',
          'active' => '1',
          'details' => array(
            'sql' => array(
              'FIELD_LOAD_CURRENT' => array(
                'field_data_namecards_namecard_comp_organization' => array(
                  'value' => 'namecards_namecard_comp_organization_value',
                ),
              ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_comp_organization' => array(
                'value' => 'namecards_namecard_comp_organization_value',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    /* namecards_namecard_comp_event */
    'namecards_namecard_comp_event' => array(
      'field_name' => 'namecards_namecard_comp_event',
      'type' => 'computed',
      'settings' => array(
        'code' => '$entity_field[0][\'value\'] = \'\';',
        'display_format' => '$display_output = $entity_field_item[\'value\'];',
        'store' => 1,
        'database' => array(
          'data_type' => 'longtext',
          'data_length' => '32',
          'data_size' => 'normal',
          'data_precision' => '10',
          'data_scale' => '2',
          'data_default' => '',
          'data_not_NULL' => 0,
          'data_index' => 0,
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
          'module' => 'field_sql_storage',
          'active' => '1',
          'details' => array(
            'sql' => array(
              'FIELD_LOAD_CURRENT' => array(
                'field_data_namecards_namecard_comp_event' => array(
                  'value' => 'namecards_namecard_comp_event_value',
                ),
              ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_comp_event' => array(
                'value' => 'namecards_namecard_comp_event_value',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    /* namecards_namecard_comp_position */
    'namecards_namecard_comp_position' => array(
      'field_name' => 'namecards_namecard_comp_pos',
      'type' => 'computed',
      'settings' => array(
        'code' => '$entity_field[0][\'value\'] = \'\';',
        'display_format' => '$display_output = $entity_field_item[\'value\'];',
        'store' => 1,
        'database' => array(
          'data_type' => 'longtext',
          'data_length' => '32',
          'data_size' => 'normal',
          'data_precision' => '10',
          'data_scale' => '2',
          'data_default' => '',
          'data_not_NULL' => 0,
          'data_index' => 0,
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
          'module' => 'field_sql_storage',
          'active' => '1',
          'details' => array(
            'sql' => array(
              'FIELD_LOAD_CURRENT' => array(
                'field_data_namecards_namecard_comp_position' => array(
                  'value' => 'namecards_namecard_comp_position_value',
                ),
              ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_comp_position' => array(
                'value' => 'namecards_namecard_comp_position_value',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    /* namecards_namecard_comp_department */
    'namecards_namecard_comp_department' => array(
      'field_name' => 'namecards_namecard_comp_dept',
      'type' => 'computed',
      'settings' => array(
        'code' => '$entity_field[0][\'value\'] = \'\';',
        'display_format' => '$display_output = $entity_field_item[\'value\'];',
        'store' => 1,
        'database' => array(
          'data_type' => 'longtext',
          'data_length' => '32',
          'data_size' => 'normal',
          'data_precision' => '10',
          'data_scale' => '2',
          'data_default' => '',
          'data_not_NULL' => 0,
          'data_index' => 0,
        ),
      ),
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array(),
          'module' => 'field_sql_storage',
          'active' => '1',
          'details' => array(
            'sql' => array(
              'FIELD_LOAD_CURRENT' => array(
                'field_data_namecards_namecard_comp_department' => array(
                  'value' => 'namecards_namecard_comp_department_value',
                ),
              ),
            'FIELD_LOAD_REVISION' => array(
              'field_revision_namecards_namecard_comp_department' => array(
                'value' => 'namecards_namecard_comp_department_value',
              ),
            ),
          ),
        ),
      ),
      'indexes' => array(),
    ),
    'namecards_namecard_notes' => array(
      'field_name' => 'namecards_namecard_notes',
      'label' => $t('Notes'),
      'type' => 'text_long',
    ),
  );
}

/**
* Return a structured array defining the field instances associated with this content type.
*/
function _namecards_namecard_installed_instances() {
  $t = get_t();
  return array(
    /* namecards_namecard_public */
    'namecards_namecard_public' => array(
      'field_name' => 'namecards_namecard_public',
      'type' => 'list_boolean',
      'label' => $t('Public'),
      'widget' => array(
        'weight' => '0',
        'type' => 'options_buttons',
        'module' => 'options',
        'active' => 1,
        'settings' => array(),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'list_default',
          'settings' => array(),
          'module' => 'list',
//          'weight' => 12,
        ),
      ),
      'required' => 1,
      'description' => '',
      'default_value' => array(
        '0' => array(
          'value' => '1',
        ),
      ),
    ),
    /* namecards_namecard_given_name */
    'namecards_namecard_given_name' => array(
      'field_name' => 'namecards_namecard_given_name',
      'type' => 'text',
      'label' => $t('Given name'),
      'settings' => array(),
      'widget' => array(
        'type' => 'text_textfield',
        'weight' => '3',
      ),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Given name'),
          'type' => 'text',
        ),
      ),
    ),
    /* namecards_namecard_nickname */
    'namecards_namecard_nickname' => array(
      'field_name' => 'namecards_namecard_nickname',
      'type' => 'text',
      'label' => $t('Nickname'),
        'widget' => array(
          'type' => 'text_textfield',
          'weight' => '4',
        ),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Nickname'),
          'type' => 'text',
        ),
      ),
    ),
    /* namecards_namecard_organization */
    'namecards_namecard_organization' => array(
      'field_name' => 'namecards_namecard_organization',
      'type' => 'node_reference',
      'label' => $t('Organization'),
      'widget' => array(
        'type' => 'noderefcreate_autocomplete',
        'weight' => '5',
        'module' => 'noderefcreate',
        'active' => 1,
        'settings' => array(
          'autocomplete_match' => 'contains',
          'size' => '60',
          'autocomplete_path' => 'node_reference/autocomplete',
        ),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'node_reference_default',
          'settings' => array(),
          'module' => 'node_reference',
//          'weight' => 11,
        ),
      ),
    ),
    /* namecards_namecard_position */
    'namecards_namecard_position' => array(
      'field_name' => 'namecards_namecard_position',
      'type' => 'node_reference',
      'label' => $t('Position'),
      'widget' => array(
        'type' => 'noderefcreate_autocomplete',
        'module' => 'noderefcreate',
        'weight' => '6',
        'active' => 1,
        'settings' => array(
          'autocomplete_match' => 'contains',
          'size' => '60',
          'autocomplete_path' => 'node_reference/autocomplete',
        ),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'node_reference_default',
          'settings' => array(),
          'module' => 'node_reference',
//          'weight' => 11,
        ),
      ),
    ),
    /* namecards_namecard_department */
    'namecards_namecard_department' => array(
      'field_name' => 'namecards_namecard_department',
      'type' => 'node_reference',
      'label' => $t('Department'),
      'widget' => array(
        'type' => 'noderefcreate_autocomplete',
        'module' => 'noderefcreate',
        'weight' => '7',
        'active' => 1,
        'settings' => array(
          'autocomplete_match' => 'contains',
          'size' => '60',
          'autocomplete_path' => 'node_reference/autocomplete',
        ),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'node_reference_default',
          'settings' => array(),
          'module' => 'node_reference',
//          'weight' => 11,
        ),
      ),
    ),
    /* namecards_namecard_phone */
    'namecards_namecard_phone' => array(
      'field_name' => 'namecards_namecard_phone',
      'type' => 'namecards_address_field_phone',
      'label' => $t('Phone'),
      'widget' => array(
        'type' => 'namecards_phone_field_phone_widget',
        'module' => 'namecards_phone_field',
        'weight' => '8',
        'active' => 0,
        'settings' => array(),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => $t('above'),
          'type' => 'namecards_phone_field_phone_formatter',
          'settings' => array(),
          'module' => 'namecards_phone_field',
//          'weight' => 11,
        ),
      ),
      'description' => $t('Phone number format must include country and area codes. The correct format is: <b>+86 (1) 64460982</b>. Extensions should be separated from the main phone number with a hyphen (e.g. <b>+86 (1) 64460982-123</b>.)'),
      'required' => FALSE,
    ),
    /* namecards_namecard_fax */
    'namecards_namecard_fax' => array(
      'field_name' => 'namecards_namecard_fax',
      'type' => 'namecards_address_field_fax',
      'label' => $t('Fax'),
      'widget' => array(
        'type' => 'namecards_fax_field_fax_widget',
        'module' => 'namecards_fax_field',
        'weight' => '9',
        'active' => 0,
        'settings' => array(),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => $t('above'),
          'type' => 'namecards_fax_field_fax_formatter',
          'settings' => array(),
          'module' => 'namecards_fax_field',
//          'weight' => 11,
        ),
      ),
      'description' => $t('Fax number format must include country and area codes. The correct format is: <b>+86 (1) 93459770</b>. Extensions should be separated from the main phone number with a hyphen (e.g. <b>+86 (1) 93459770-123</b>.)'),
      'required' => FALSE,
    ),
    /* namecards_namecard_mobile */
    'namecards_namecard_mobile' => array(
      'field_name' => 'namecards_namecard_mobile',
      'type' => 'text',
      'label' => $t('Mobile'),
        'widget' => array(
          'type' => 'text_textfield',
          'weight' => '10',
        ),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Mobile'),
          'type' => 'text',
        ),
      ),
      'description' => $t('Mobile number format must include the country code separated from the main number by a space as per the following format: <b>+86 1234121245</b>.'),
    ),
    /* namecards_namecard_email */
    'namecards_namecard_email' => array(
      'field_name' => 'namecards_namecard_email',
      'type' => 'text',
      'label' => $t('Email'),
      'widget' => array(
        'type' => 'text_textfield',
        'weight' => '11',
      ),
      'display' => array(
        'example_node_list' => array(
          'label' => $t('Email'),
          'type' => 'text',
        ),
      ),
      'description' => $t('Please enter a valid email address.'),
    ),
    /* namecards_namecard_event */
    'namecards_namecard_event' => array(
      'field_name' => 'namecards_namecard_event',
      'type' => 'node_reference',
      'label' => $t('Event'),
      'widget' => array(
        'type' => 'noderefcreate_autocomplete',
        'module' => 'noderefcreate',
        'weight' => '12',
        'active' => 1,
        'settings' => array(
          'autocomplete_match' => 'contains',
          'size' => '60',
          'autocomplete_path' => 'node_reference/autocomplete',
        ),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'node_reference_default',
          'settings' => array(),
          'module' => 'node_reference',
//          'weight' => 11,
        ),
      ),
      'description' => $t('The event where you first met this person. Enter the name of the event followed by the date in square brackets.  Date should be in the format of "<b>YYYY-MM-DD</b>" (e.g. <b>Boston Conference [2010-09-29]</b>).'),
    ),
    /* namecards_namecard_address */
    'namecards_namecard_address' => array(
      'field_name' => 'namecards_namecard_address',
      'type' => 'namecards_address_field_address',
      'label' => $t('Address'),
      'widget' => array(
        'type' => 'namecards_address_field_address_widget',
        'module' => 'namecards_address_field',
        'weight' => '13',
        'active' => 0,
        'settings' => array(),
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => $t('above'),
          'type' => 'namecards_address_field_address_formatter',
          'settings' => array(),
          'module' => 'namecards_address_field',
//          'weight' => 11,
        ),
      ),
      'description' => $t(''),
      'required' => FALSE,
    ),
    /* namecards_namecard_notes */
    'namecards_namecard_notes' => array(
      'field_name' => 'namecards_namecard_notes',
      'type' => 'text_long',
      'label' => $t('Notes'),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'rows' => '5',
        ),
        'type' => 'text_textarea',
        'weight' => '14',
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 1,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'description' => $t('Add additional information about the contact.'),
    ),
    /* namecards_namecard_full_content */
    'namecards_namecard_full_content' => array(
      'field_name' => 'namecards_namecard_full_content',
//      'type' => 'computed',
      'label' => $t('Comp full content'),
      'widget' => array(
        'type' => 'computed',
        'weight' => '44',
        'settings' => array(),
        'module' => 'computed_field',
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ) ,
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'computed_field_default',
          'settings' => array() ,
          'module' => 'computed_field',
          'weight' => 10,
        ),
      ),
      'required' => 0,
      'description' => '',
    ),
    /* namecards_namecard_comp_email */
    'namecards_namecard_comp_email' => array(
      'field_name' => 'namecards_namecard_comp_email',
//      'type' => 'computed',
      'label' => $t('Comp email'),
      'widget' => array(
        'type' => 'computed',
        'weight' => '45',
        'settings' => array(),
        'module' => 'computed_field',
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ) ,
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'computed_field_default',
          'settings' => array() ,
          'module' => 'computed_field',
          'weight' => 10,
        ),
      ),
      'required' => 0,
      'description' => '',
    ),
    /* namecards_namecard_comp_organization */
    'namecards_namecard_comp_organization' => array(
      'field_name' => 'namecards_namecard_comp_org',
      'label' => $t('Computed organization'),
      'widget' => array(
        'type' => 'computed',
        'weight' => '45',
        'settings' => array(),
        'module' => 'computed_field',
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ) ,
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'computed_field_default',
          'settings' => array() ,
          'module' => 'computed_field',
          'weight' => 10,
        ),
      ),
      'required' => 0,
      'description' => '',
    ),
    /* namecards_namecard_comp_event */
    'namecards_namecard_comp_event' => array(
      'field_name' => 'namecards_namecard_comp_event',
      'label' => $t('Computed event'),
      'widget' => array(
        'type' => 'computed',
        'weight' => '45',
        'settings' => array(),
        'module' => 'computed_field',
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ) ,
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'computed_field_default',
          'settings' => array() ,
          'module' => 'computed_field',
          'weight' => 10,
        ),
      ),
      'required' => 0,
      'description' => '',
    ),
    /* namecards_namecard_comp_position */
    'namecards_namecard_comp_position' => array(
      'field_name' => 'namecards_namecard_comp_pos',
      'label' => $t('Computed position'),
      'widget' => array(
        'type' => 'computed',
        'weight' => '45',
        'settings' => array(),
        'module' => 'computed_field',
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ) ,
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'computed_field_default',
          'settings' => array() ,
          'module' => 'computed_field',
          'weight' => 10,
        ),
      ),
      'required' => 0,
      'description' => '',
    ),
    /* namecards_namecard_comp_department */
    'namecards_namecard_comp_department' => array(
      'field_name' => 'namecards_namecard_comp_dept',
      'label' => $t('Computed department'),
      'widget' => array(
        'type' => 'computed',
        'weight' => '45',
        'settings' => array(),
        'module' => 'computed_field',
      ),
      'settings' => array(
        'user_register_form' => FALSE,
      ) ,
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'computed_field_default',
          'settings' => array() ,
          'module' => 'computed_field',
          'weight' => 10,
        ),
      ),
      'required' => 0,
      'description' => '',
    ),
  );
}

/**
* Implements hook_uninstall().
*/
function namecards_namecard_uninstall() {
  // Gather all the example content that might have been created while this
  // module was enabled.
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'namecards_namecard'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  // Delete all the nodes at once
  node_delete_multiple($nids);
  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  foreach (array_keys(_namecards_namecard_installed_fields()) as $field) {
    field_delete_field($field);
  }
  // Loop over any remaining field instances attached to the namecards_namecard
  // content type (such as the body field) and delete them individually.
  $instances = field_info_instances('node', 'namecards_namecard');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }
  // Delete our content type
  node_type_delete('namecards_namecard');
  // Purge all field infromation
  field_purge_batch(1000);
}