<?php

/**
 * @file
 * Field formatter to expand and collapse text of a field.
 */

/**
 * Implement hook_field_formatter_info().
 */
function jquery_expander_field_formatter_info() {
  return array(
    'jquery_expander' => array(
      'label' => t('Expander'),
      'field types' => array('text', 'text_long', 'text_with_summary'),
      'settings' => array(
        // Add default settings with text, so we can wrap them in t().
        'expandText' => t('Expand') . ' Â»',
        'expandPrefix' => '...',
        'collapseTimer' => FALSE,
        'slicePoint' => 50,
        'userCollapseText' => t('Collapse'),
        'userCollapsePrefix' => '',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function jquery_expander_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();

  $element['expandText'] = array(
    '#type' => 'textfield',
    '#title' => t('Expand text'),
    '#description' => t('Text displayed in a link instead of the hidden part of the element. Clicking this will expand/show the hidden/collapsed text.'),
    '#default_value' => $settings['expandText'],
  );

  $element['expandPrefix'] = array(
    '#type' => 'textfield',
    '#title' => t('Expand prefix'),
    '#description' => t('Text to come before the expand link.'),
    '#default_value' => $settings['expandPrefix'],
  );

  $element['slicePoint'] = array(
    '#type' => 'textfield',
    '#title' => t('Slice point'),
    '#description' => t('Text size in charachters before the expand link.'),
    '#default_value' => $settings['slicePoint'],
    '#element_validate' => array('_element_validate_integer_positive'),
  );

  $element['collapseTimer'] = array(
    '#type' => 'textfield',
    '#title' => t('Collapse timer'),
    '#description' => t('Number of milliseconds after text has been expanded at which to collapse the text again.'),
    '#default_value' => $settings['collapseTimer'],
    '#element_validate' => array('_element_validate_integer_positive'),
  );

  $element['userCollapseText'] = array(
    '#type' => 'textfield',
    '#title' => t('Collapse text'),
    '#description' => t('Text to use for the link to re-collapse the text.'),
    '#default_value' => $settings['userCollapseText'],
  );

  $element['userCollapsePrefix'] = array(
    '#type' => 'textfield',
    '#title' => t('Collapse prefix'),
    '#description' => t('Text to come before the re-collapse link.'),
    '#default_value' => $settings['userCollapsePrefix'],
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function jquery_expander_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = t('Expander set');

  return $summary;
}


/**
 * Implements hook_field_formatter_view().
 */
function jquery_expander_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  static $delta = array();
  $settings = $display['settings'];

  foreach ($items as $delta => $item) {
    $output = _text_sanitize($instance, $langcode, $item, 'value');
    $element[$delta] = array(
      '#markup' => $output,
      '#prefix' => '<div class="field-expander field-expander-' . $delta . '">',
      '#suffix' => '</div>'
    );
    $element[$delta]['#attached']['js'] = array(
      drupal_get_path('module', 'jquery_expander') . '/js/jquery_expander.js' => array('type' => 'file'),
      libraries_get_path('jquery.expander') . '/jquery.expander.js' => array('type' => 'file'),
      array('data' => array('jqueryExpander' => array($delta => $settings)), 'type' => 'setting'),
    );
    ++$delta;
  }

  return $element;
}
