<?php

/**
 * Implements hook_form_alter.
 */
function auto_tagging_suggestions_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, '_node_form') !== FALSE) {
    $form['auto_tagging_suggestions'] = array(
      '#type' => 'fieldset',
      '#title' => t('Auto Tagging Suggestions'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#group' => 'additional_settings',
      '#weight' => -10,
    );

    $from_fields[] = $to_fields[] = "Select";
    $fields = field_info_instances("node", $form['type']['#value']);

    foreach (array_keys($fields) as $field) {
      $_field = field_info_field($field);
      if ($_field['type'] == "text_with_summary") {
        $from_fields[$field] = $field;
      }
      elseif ($_field['type'] == "taxonomy_term_reference") {
        $to_fields[$field] = $field;
      }
    }
    $form['auto_tagging_suggestions']['from'] = array(
      '#type' => 'select',
      '#title' => t('From'),
      '#options' => $from_fields,
    );
    $form['auto_tagging_suggestions']['to'] = array(
      '#type' => 'select',
      '#title' => t('To'),
      '#options' => $to_fields,
      '#ajax' => array(
        'callback' => 'make_button_visible',
        'wrapper' => 'final-button',
        'method' => 'replace',
        'effect' => 'fade',
      ),
    );
    $form['auto_tagging_suggestions']['finalbutton'] = array(
      '#type' => 'button',
      '#value' => "Tag It",
      '#executes_submit_callback' => FALSE,
      '#prefix' => "<div id='final-button'>",
      '#siffix' => "</div>",
    );

    $form['auto_tagging_suggestions']['finalreset'] = array(
      '#type' => 'button',
      '#value' => "Reset",
      '#executes_submit_callback' => FALSE,
      '#prefix' => "<div id='final-reset'>",
      '#siffix' => "</div>",
    );


    foreach ($to_fields as $key => $val) {
      $id = 'wrap_' . $key;
      $form[$key]['#prefix'] = "<div id=$id>";
      $form[$key]['#suffix'] = '</div>';

      $form['auto_tagging_suggestions'][$key]['submit'] = array(
        '#type' => 'button',
        '#value' => t('Tag it'),
        '#executes_submit_callback' => FALSE,
        '#submit' => array('my_submit_handler'),
        '#ajax' => array(
          'callback' => 'auto_tagging_suggestions_callback',
          'wrapper' => $id,
          'method' => 'replace',
          'effect' => 'fade',
        ),
        '#prefix' => "<div id='wrap-button' class='element-invisible'>",

      );


      $form['auto_tagging_suggestions'][$key]['reset'] = array(
        '#type' => 'submit',
        '#value' => t('Reset' . $key),
        '#executes_submit_callback' => FALSE,
        '#submit' => array('my_submit_handler'),
        '#ajax' => array(
          'callback' => 'auto_tagging_suggestions_reset_callback',
          'wrapper' => $id,
          'method' => 'replace',
          'effect' => 'fade',
        ),
        '#siffix' => "</div>",
      );


    }

  }
}

/**
 * Ajax callback function for showing selected tags.
 */
function make_button_visible($form, $form_state) {
  $machine_name_field_to = $form_state['values']['to'];
  $form['auto_tagging_suggestions'][$machine_name_field_to]['submit']['#prefix'] = "<div id='final-button'>";
  $form['auto_tagging_suggestions'][$machine_name_field_to]['reset']['#siffix'] = "<div>";
  return $form['auto_tagging_suggestions'][$machine_name_field_to];
}

function auto_tagging_suggestions_reset_callback($form, $form_state) {

  $machine_name_field_to = $form_state['values']['to'];

  $nid = $form['nid']['#value'];

  $node = node_load($nid);

  $machine_name_field_to_taxonomy = $node->$machine_name_field_to;

  foreach ($machine_name_field_to_taxonomy[LANGUAGE_NONE] as $tid) {
    $term_value[] = $tid['tid'];
  }
  $terms = taxonomy_term_load_multiple($term_value);
  foreach ($terms as $term) {
    $name = $term->name;
    $term_name[] = $name;
  }
  $term_names = implode(",", $term_name);
  $form[$machine_name_field_to][LANGUAGE_NONE]['#value'] = $term_names;
  return $form[$machine_name_field_to];


}


/**
 * Ajax callback function for showing selected tags.
 */
function auto_tagging_suggestions_callback($form, $form_state) {
  $machine_name_field_from = $form_state['values']['from'];
  $from_value = $form_state['values'][$machine_name_field_from]['und'][0]['value'];
  $machine_name_field_to = $form_state['values']['to'];
  $to_field_info = field_info_field($form_state['values']['to']);
  $taxonomy_machine_name_value = taxonomy_vocabulary_machine_name_load($to_field_info['settings']['allowed_values'][0]['vocabulary']);
  //dsm($to_field_info['settings']['allowed_values'][0]['vocabulary']);
  $terms_id = taxonomy_get_tree($taxonomy_machine_name_value->vid);
  foreach ($terms_id as $term) {
    $taxonomy_term[$term->tid] = $term->name;
  }
  $from_value_str = explode(' ', $from_value);
  $result = NULL;
  foreach ($from_value_str as $taxonomy_term_name) {
    if (in_array($taxonomy_term_name, $taxonomy_term)) {
      $tids[] = array_keys($taxonomy_term, $taxonomy_term_name, TRUE);
    }
  }
  $node = node_load($form_state['values']['nid']);

  foreach ($node->$machine_name_field_to as $field_to_tid) {
    foreach ($field_to_tid as $value) {
      $val[] = $value['tid'];
    }
  }

  foreach ($tids as $tid) {
    foreach ($tid as $tid_value) {
      $value1[] = $tid_value;
    }
  }
  if ($val == NULL) {
    $unique_value = $value1;
  }
  else {
    $unique_value = array_unique(array_merge($value1, $val));
  }

  $terms = taxonomy_term_load_multiple($unique_value);;
  foreach ($terms as $term) {
    $name[] = $term->name;
  }
  $result = implode(",", $name);

  $form[$machine_name_field_to][LANGUAGE_NONE]['#value'] = $result;
  return $form[$machine_name_field_to];
}

/**
 * Submit handler.
 */
function my_submit_handler($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
}