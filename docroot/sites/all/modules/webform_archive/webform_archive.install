<?php
/**
 * @file
 * Schema for the webform_archive module.
 *
 * Defines three tables :
 *  1. archive_webforms.
 *  2. archive_webform_submissions (Clone of webform_submission table).
 *  3. archive_webform_submitted_data (Clone of webform_submitted_data table).
 */

/**
 * Implements hook_schema().
 */
function webform_archive_schema() {
  // Create a directory for archived reports.
  $path = 'public://webform_archive_reports';
  if (!file_prepare_directory($path, FILE_CREATE_DIRECTORY)) {
    $message = st('Unable to create webform archive directory, %path.Check the
      permissions on your files directory.', array('%path' => file_uri_target($path)));
    drupal_set_message($message, 'error');
  }

  $schema = array();

  // Archive webform table to store the last archive timestamp.
  $schema['archive_webform'] = array(
    'description' => 'Holds general information about archive webform',
    'fields' => array(
      'nid' => array(
        'description' => 'The node identifier of an archive webform.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'archived' => array(
        'description' => 'Timestamp of when the form was last archived.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
  );

  // Archive webform submissions table. [Clone of webform_submission table]
  $schema['archive_webform_submissions'] = array(
    'description' => 'Holds general information about archive submissions outside of field values.',
    'fields' => array(
      'sid' => array(
        'description' => 'The unique identifier for this archive submission.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'The node identifier of an archive webform.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The id of the user that completed this archive submission.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'is_draft' => array(
        'description' => 'Is this a draft of the archive submission?',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'submitted' => array(
        'description' => 'Timestamp of when the form was submitted.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'remote_addr' => array(
        'description' => 'The IP address of the user that submitted the form.',
        'type' => 'varchar',
        'length' => 128,
      ),
    ),
    'primary key' => array('sid'),
    'unique keys' => array(
      'sid_nid' => array('sid', 'nid'),
    ),
    'indexes' => array(
      'nid_uid_sid' => array('nid', 'uid', 'sid'),
      'nid_sid' => array('nid', 'sid'),
    ),
  );

  // Archive webform submitted data. [Clone of webform_submitted_data table].
  $schema['archive_webform_submitted_data'] = array(
    'description' => 'All submitted field data for archive webform submissions.',
    'fields' => array(
      'nid' => array(
        'description' => 'The node identifier of a webform.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'sid' => array(
        'description' => 'The unique identifier for this archive submission.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'cid' => array(
        'description' => 'The identifier for this component within this node, starts at 0 for each node.',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'no' => array(
        'description' => 'Usually this value is 0, but if a field has multiple values (such as a time or date), it may require multiple rows in the database.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '0',
      ),
      'data' => array(
        'description' => 'The submitted value of this field, may be serialized for some components.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid', 'sid', 'cid', 'no'),
    'indexes' => array(
      'nid' => array('nid'),
      'sid_nid' => array('sid', 'nid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function webform_archive_uninstall() {
  // Drop archive_webform table.
  if (db_table_exists('archive_webform')) {
    db_drop_table('archive_webform');
  }
  // Drop archive_webform_submissions table.
  if (db_table_exists('archive_webform_submissions')) {
    db_drop_table('archive_webform_submissions');
  }
  // Drop archive_webform_submitted_data table.
  if (db_table_exists('archive_webform_submitted_data')) {
    db_drop_table('archive_webform_submitted_data');
  }
  file_unmanaged_delete_recursive('public://webform_archive_reports');
}
