<?php

/**
 * @file
 * Sampler API install and schema code.
 */

/**
 * Implements hook_schema().
 */
function sampler_schema() {
  $schema = array();

  $schema['sampler_metric_state'] = array(
    'description' => 'Stores the currently known schema state for all metrics tables.',
    'fields' => array(
      'module' => array(
        'description' => 'The module advertising the metric.',
        'type' => 'varchar',
        // This is obscenely long, but it matches the length allowed for module
        // names in the {system} table.
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'metric' => array(
        'description' => 'The metric being tracked.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
        'default' => '',
      ),
      'data_type' => array(
        'description' => 'The Schema API data type used to store the metric.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'storage_plugin' => array(
        'description' => 'The storage plugin used to store the metric.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'method_plugin' => array(
        'description' => 'The method plugin used to store the metric.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'adjustment_plugin' => array(
        'description' => 'The adjustment plugin used to store the metric.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('module', 'metric'),
  );

  // We track the schema of all tables that the API creates, and here they
  // are reported to the Schema API if necessary.

  // Don't try to build the schema for metrics tables until this module is
  // installed, and don't try to report the schema during uninstall.
  if (db_table_exists('sampler_metric_state') && module_exists('sampler')) {
    sampler_load_sampler();
    $metrics_schemas = sampler_build_drupal_metric_schema();
    foreach ($metrics_schemas as $module => $metrics) {
      foreach ($metrics as $metric => $schema_data) {
        $schema[$schema_data['table_name']] = $schema_data['schema'];
      }
    }
  }

  return $schema;
}
