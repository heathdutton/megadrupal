<?php

function round_robin_schema() {
  $schema['tournament_rr_participants'] = array(
    'description' => 'Stores details on tournament participants for the round robin module.',
    'fields' => array(
      'nid' => array(
        'description' => 'Primary Key: Unique tournament node ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'id' => array(
        'description' => 'Unique participant entity ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'gid' => array(
        'description' => 'The group that this participant belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'small',
        'default' => 0,
      ),
      'points' => array(
        'description' => 'The participants total points in their group.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'win' => array(
        'description' => 'The number of times participant has won.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'draw' => array(
        'description' => 'The number of times participant has drawn.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'loss' => array(
        'description' => 'The number of times participant has lost.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'rf' => array(
        'description' => 'Rounds For. The total rounds the participant has scored. e.g. Goals For in soccer.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'ra' => array(
        'description' => 'Rounds Against. The total rounds the participant has scored. e.g. Goals Against in soccer.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'streak' => array(
        'description' => 'The count of matches won in a row without loosing.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid', 'id'),
  );

  $schema['tournament_rr'] = array(
    'description' => 'Stores details on round robin type tournaments.',
    'fields' => array(
      'nid' => array(
        'description' => 'Primary Key: Unique tournament node ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'win_points' => array(
        'description' => 'Points awarded for a match win.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'draw_points' => array(
        'description' => 'Points awarded for a match draw.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'loss_points' => array(
        'description' => 'Points awarded for a match loss.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'multiplier' => array(
        'description' => 'Multiply the match score by this value to determine points awarded.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 */
function round_robin_enable() {
  // Ensure the tournament node type is available.
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['round_robin']);
}
