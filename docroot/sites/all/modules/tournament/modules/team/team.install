<?php
/**
 * @file team.install
 * Install functions for the Team module.
 */

/**
 * Implementation of hook_schema().
 */
function team_schema() {
  $schema['teams'] = array(
    'description' => 'Stores tournament team data.',
    'fields' => array(
      'tid' => array(
        'description' => 'Primary key: Unique Team ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Team name.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'joining' => array(
        'description' => 'Join privacy settings.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'join_pass' => array(
        'description' => 'Password required to join this team. (hashed)',
        'type' => 'varchar',
        'length' => 128,
      ),
      'join_info' => array(
        'description' => 'Join message.',
        'type' => 'text',
        'size' => 'big',
      ),
      'challenge_info' => array(
        'description' => 'Challenge message.',
        'type' => 'text',
        'size' => 'big',
      ),
      'uid' => array(
        'description' => 'The Unique user ID who created the team.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 1,
        'size' => 'tiny',
        'description' => 'Whether the team is active(1) or cancelled(0).',
      ),
      'created' => array(
        'description' => 'Unix timestamp of when the team was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'Unix timestamp of when the team was last updated.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tid'),
    'indexes' => array(
      'name' => array('name'),
      'joining' => array('joining'),
      'status' => array('status'),
    ),
  );

  $schema['teams_members'] = array(
    'description' => 'Stores team member registration data.',
    'fields' => array(
      'tid' => array(
        'description' => 'Unique Team ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'Unique User ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'role' => array(
        'description' => 'Team member role.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'timestamp' => array(
        'description' => 'Unix timestamp of when the member joined the team.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tid', 'uid'),
    'foreign keys' => array(
      'team' => array(
        'table' => 'teams',
        'columns' => array('tid' => 'tid'),
      ),
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'indexes' => array(
      'role' => array('role'),
      'uid' => array('uid'),
    ),
  );

  $schema['teams_tournaments'] = array(
    'description' => 'Stores settings for team tournaments.',
    'fields' => array(
      'nid' => array(
        'description' => 'Primary Key: Unique node ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'min_team_size' => array(
        'description' => 'The minimum amount of required members for team signups.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'multiple_signup' => array(
        'description' => 'Determines if a user can participate in a tournament through multiple teams.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'member_select' => array(
        'description' => 'Determines if selection of team members is required on sign up.',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['teams_tournaments_members'] = array(
    'description' => 'Stores members allowed to participate in tournaments.',
    'fields' => array(
      'nid' => array(
        'description' => 'Primary Key: Unique node ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'tid' => array(
        'description' => 'Primary Key: Unique team ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'Primary Key: Unique user ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Member status (0=Not confirmed, 1=Confirmed).',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'Unix timestamp of when the tournament member was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid', 'tid', 'uid'),
    'indexes' => array(
      'status' => array('status'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function team_uninstall() {
  variable_del('team_list_limit');
  variable_del('team_name_max');
  variable_del('team_joining');
  variable_del('team_alias');

  // Remove team fields data.
  field_attach_delete_bundle('team', 'team');
}
