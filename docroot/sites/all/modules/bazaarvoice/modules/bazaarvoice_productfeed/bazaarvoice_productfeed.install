<?php
/**
 * @file
 * Contains install and update functions for Bazaarvoice Productfeed.
 */

/**
 * Implements hook_schema().
 */
function bazaarvoice_productfeed_schema() {
  $schema['bazaarvoice_productfeed_entity_mappings'] = array(
    'description' => 'Mappings between bazaarvoice fields and ProductFeed attributes',
    'fields' => array(
      'attribute' => array(
        'description' => 'The name of the product feed attribute',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_type' => array(
        'description' => 'The entity type name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_bundle' => array(
        'description' => 'The entity bundle name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'field_name' => array(
        'description' => 'The name of the field attribute is mapped to.',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ),
      'sub_field_name' => array(
        'description' => 'The name of the sub field attribute is mapped to.',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ),
    ),
    'unique keys' => array(
      'attribute_type_bundle' => array(
        'attribute',
        'entity_type',
        'entity_bundle',
      ),
    ),
  );

  $schema['bazaarvoice_productfeed_custom_attributes'] = array(
    'description' => 'Productfeed attributes',
    'fields' => array(
      'attribute' => array(
        'description' => 'The name of the product feed attribute',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'Human readable label for attribute',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'field_types' => array(
        'description' => 'Array of fields supported for this attribute',
        'type' => 'blob',
      ),
    ),
    'primary key' => array('attribute'),
  );

  return $schema;
}
