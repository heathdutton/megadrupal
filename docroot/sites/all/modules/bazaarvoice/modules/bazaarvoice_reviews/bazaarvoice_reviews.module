<?php
/**
 * @file
 * Functionality for writing Bazaarvoice reviews.
 */

/**
 * Implements hook_permission().
 */
function bazaarvoice_reviews_permission() {
  $permissions = array();

  $permissions['administer bazaarvoice reviews'] = array(
    'title' => t('Administer Bazaarvoice Reviews'),
  );

  $permissions['view bazaarvoice reviews'] = array(
    'title' => t('View Bazaarvoice Reviews'),
  );

  $permissions['submit bazaarvoice reviews'] = array(
    'title' => t('Submit Bazaarvoice Reviews'),
  );

  return $permissions;
}

/**
 * Implements hook_menu().
 */
function bazaarvoice_reviews_menu() {
  $items = array();

  // Only display admin menu item if UI module is enabled.
  if (module_exists('bazaarvoice_ui')) {
    // Configure Bazaarvoice product mappings.
    $items['admin/config/services/bazaarvoice/reviews'] = array(
      'title' => 'Review Settings',
      'description' => 'Configure settings for Reviews.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('bazaarvoice_reviews_settings_form'),
      'access callback' => 'user_access',
      'access arguments' => array('administer bazaarvoice reviews'),
      'file' => 'includes/admin.inc',
      'type' => MENU_LOCAL_TASK,
    );

    // @TODO: if using conversations endpoint to configure form fields?
  }

  // Build path for al product types.
  module_load_include('module', 'bazaarvoice_products');
  // Get the product types.
  if ($product_types = bazaarvoice_products_get_product_entity_types()) {
    // Do not care about bundles.
    $product_types = array_keys($product_types);
    // Get endpoints.
    $write_review_uri = bazaarvoice_reviews_get_write_a_review_uri();
    $view_reviews_uri = bazaarvoice_reviews_get_reviews_uri();
    // Loop through all product types.
    foreach ($product_types as $type) {
      // Assuming entity path structure here is type followed by eid.
      $items[$type . '/%entity_object/' . $write_review_uri] = array(
        'load arguments' => array($type),
        'title' => 'Write a Review',
        'page callback' => 'bazaarvoice_reviews_new_review',
        'page arguments' => array(0, 1),
        'access arguments' => array('submit bazaarvoice reviews'),
        'file' => 'includes/new_reviews.inc',
      );
      // Path to view reviews for a particular product.
      $items[$type . '/%entity_object/' . $view_reviews_uri] = array(
        'load arguments' => array($type),
        'title' => 'Reviews',
        'page callback' => 'bazaarvoice_reviews_view_reviews',
        'page arguments' => array(0, 1),
        'access arguments' => array('view bazaarvoice reviews'),
        'file' => 'includes/reviews.inc',
      );
    }
  }

  return $items;
}

/**
 * Implements hook_theme().
 */
function bazaarvoice_reviews_theme() {
  $templates['bazaarvoice_reviews_new_hosted_review'] = array(
    'template' => 'bazaarvoice-reviews-new-hosted-review',
    'variables' => array(
      'form_container' => NULL,
    ),
  );
  $templates['bazaarvoice_reviews_new_conversations_review'] = array(
    'template' => 'bazaarvoice-reviews-new-conversations-review',
    'variables' => array(
      'form' => NULL,
      'product_info' => NULL,
    ),
  );
  $templates['bazaarvoice_reviews_review'] = array(
    'template' => 'bazaarvoice-reviews-review',
    'variables' => array(
      'review' => NULL,
    ),
  );
  $templates['bazaarvoice_reviews_reviews'] = array(
    'template' => 'bazaarvoice-reviews-reviews',
    'variables' => array(
      'reviews' => NULL,
      'product_info' => NULL,
      'review_link' => NULL,
      'pager' => NULL,
    ),
  );
  return $templates;
}

/**
 * Implements hook_block_info().
 */
function bazaarvoice_reviews_block_info() {
  $blocks = array();

  $blocks['bazaarvoice_reviews'] = array(
    'info' => t('Bazaarvoice: Product Reviews'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function bazaarvoice_reviews_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'bazaarvoice_reviews':
      // User can view reviews && page has an entity?
      if (user_access('view bazaarvoice reviews') && ($entity = menu_get_object())) {
        module_load_include('module', 'bazaarvoice_products');
        // Attempt to get known entity type.
        if ($entity_type = bazaarvoice_products_get_entity_bundle_entity_type($entity->type)) {
          module_load_include('inc', 'bazaarvoice_reviews', 'includes/reviews');
          // Get reviews.
          // @TODO: different function for different template.
          if ($reviews = bazaarvoice_reviews_view_reviews($entity_type, $entity)) {
            $block['subject'] = t('Product Reviews');
            $block['content']['#markup'] = $reviews;
          }
        }
      }
      break;
  }

  return $block;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bazaarvoice_reviews_preprocess_bazaarvoice_product_statistics(&$variables) {
  $reviews_count = $variables['review_count'];
  // Check if use has access to view reviews.
  if (($reviews_count > 0) && user_access('view bazaarvoice reviews')) {
    // Change review count into a link.
    $variables['review_count'] = bazaarvoice_reviews_product_reviews_link($variables['product_info']['type'], $variables['product_info']['eid'], $reviews_count);
  }

  // Check if user has access to write reviews.
  if (user_access('submit bazaarvoice reviews')) {
    $write_reviews_link = bazaarvoice_reviews_product_write_a_review_link($variables['product_info']['type'], $variables['product_info']['eid']);
    // Add link to end of review count.
    $variables['review_count'] .= ' (' . $write_reviews_link . ')';
  }
}

/**
 * Helper to return valid URI for write-a-review endpoint.
 *
 * @return mixed
 *   Sanitized version of stored uri.
 */
function bazaarvoice_reviews_get_write_a_review_uri() {
  $uri = variable_get('bazaarvoice_reviews_write_uri', 'write-a-review');
  // Sanitize, since a variable can be set outside of the system.
  return filter_var($uri, FILTER_SANITIZE_URL);
}

/**
 * Helper to return valid URI for reviews endpoint.
 *
 * @return mixed
 *   Sanitized version of stored uri.
 */
function bazaarvoice_reviews_get_reviews_uri() {
  $uri = variable_get('bazaarvoice_reviews_reviews_uri', 'reviews');
  // Sanitize, since a variable can be set outside of the system.
  return filter_var($uri, FILTER_SANITIZE_URL);
}

/**
 * Generate a link to the reviews page for a product.
 *
 * @param string $type
 *   The product entity type.
 * @param int $eid
 *   The product entity id.
 * @param string|null $text
 *   Link text, if not provided will use default 'Reviews'.
 *
 * @return string
 *   Return an HTML link.
 */
function bazaarvoice_reviews_product_reviews_link($type, $eid, $text = NULL) {
  // No link text provided? use default.
  if (!$text) {
    $text = t('Reviews');
  }
  // Build URL.
  $url = $type . '/' . $eid . '/' . bazaarvoice_reviews_get_reviews_uri();
  // Return link.
  return l($text, $url, array(
    'absolute' => TRUE,
  ));
}

/**
 * Generate a link to the write a review page for a product.
 *
 * @param string $type
 *   The product entity type.
 * @param int $eid
 *   The product entity id.
 * @param string|null $text
 *   Link text, if not provided will use default 'Reviews'.
 *
 * @return string
 *   Return an HTML link.
 */
function bazaarvoice_reviews_product_write_a_review_link($type, $eid, $text = NULL) {
  // No link text provided? use default.
  if (!$text) {
    $text = t('Write a review');
  }

  // Build URL.
  $url = $type . '/' . $eid . '/' . bazaarvoice_reviews_get_write_a_review_uri();
  // Return link.
  return l($text, $url, array(
    'absolute' => TRUE,
  ));
}
