<?php
/**
 * @file
 * Module file for the readytalk module.
 */

module_load_include('php', 'readytalk', 'lib/Readytalk');

/**
 * Implements hook_help().
 */
function readytalk_help($path, $arg) {
  switch ($path) {
    case 'admin/help#readytalk':
      global $user;

      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Readytalk module adds webform integration to Readytalk. It allows you to add recipients a meeting based on the meeting id associtated to a form.') . '</p>';
      $output .= '<h3>' . t('Instructions') . '</h3>';
      $output .= '<p>' . t('First you will need to add the Readytalk credentials (telephone number, access code, and passcode) to a user or users that are creating meeting in Readytalk. You can add Readytalk credentials to your user by going <a href="@user_readytalk_setting">here</a>.', array('@user_readytalk_setting' => "/user/{$user->uid}/readytalk")) . '</p>';
      $output .= '<p>' . t('Log into <a href="@ready_talk_url">Readytalk</a> and create a meeting. Add all the fields you would like to use.', array('@ready_talk_url' => 'http://www.readytalk.com/')) . '</p>';
      $output .= '<p>' . t('Go back to your user <a href="@user_readytalk_setting">page</a> or the user\'s page that is associated to the meeting you created in Readytalk.  Copy the meeting id from the meeting you will associate to a webform.', array('@user_readytalk_setting' => "/user/{$user->uid}/readytalk")) . '</p>';
      $output .= '<p>' . t('Navigate to the webform settings of the node you will need Readytalk Integration. Click on the "Readytalk" button.  Set the meeting id, set the user associated to the meeting, check if you want to send a confirmation email, and map all the fields that you would like send to Readytalk.') . '</p>';

      return $output;

  }
}

/**
 * Implements hook_permission().
 */
function readytalk_permission() {
  return array(
    'administer readytalk settings' => array(
      'title' => t('Administer Readytalk settings'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function readytalk_menu() {
  $items['admin/config/services/readytalk/webform'] = array(
    'title' => 'ReadyTalk enabled WebForms',
    'description' => 'Webforms which have been enabled for ReadyTalk.',
    'page callback' => 'readytalk_enabled_readytalk_webform_load',
    'access arguments' => array('administer readytalk settings'),
    'file' => 'readytalk.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );
  $items['node/%webform_menu/webform/readytalk'] = array(
    'title' => 'Readytalk',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('readytalk_components_form', 1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'file' => 'readytalk.admin.inc',
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
  );
  $items['user/%user/readytalk'] = array(
    'title' => 'Readytalk',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('readytalk_user_form', 1),
    'access arguments' => array('administer readytalk settings'),
    'file' => 'readytalk.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_admin_paths().
 */
function readytalk_admin_paths() {
  $paths = array(
    'user/*/readytalk' => TRUE,
  );
  return $paths;
}

/**
 * Implements hook_form_alter().
 */
function readytalk_form_alter(&$form, $form_state, $form_id) {
  // If it doesn't use a webform don't go any further.
  if (strpos($form_id, 'webform_client_form') !== 0) {
    return;
  }

  // If there isn't a node associated to the form then skip.
  $nid = $form['details']['nid']['#value'];
  if (empty($nid)) {
    return;
  }
  // Load Readytalk settings to a node (if any).
  $form_settings = readytalk_load($nid);
  if (empty($form_settings) || (!$form_settings->is_active)) {
    return;
  }
  // If it is past the start time of the meeting then skip.
  if (time() > $form_settings->start_date) {
    return;
  }

  $form['#submit'] = is_array($form['#submit']) ? $form['#submit'] : array('webform_client_form_submit ');
  $form['#submit'][] = 'readytalk_submit';
}

/**
 * Submit handler added to webforms to store submissions for readytalk webforms.
 *
 * @param array $form
 *   The actual form structure of the form.
 * @param array $form_state
 *   Object containing form states values.
 */
function readytalk_submit($form = array(), &$form_state = array()) {

  // Collapse form values so they make more sense to readytalk.
  $values = readytalk_form_collapse($form, $form_state);

  // Load form and user settings.
  $record = readytalk_load($form['#node']->nid);

  $user = readytalk_userload($record->uid);
  $ready_talk = new ReadyTalk($user->telephone_number, $user->access_code, $user->pass_code);
  $meeting_user = array();

  // Build recipient record.
  foreach ($record->data as $field_name => $mapping) {
    if (array_key_exists($field_name, $values)) {
      if ($mapping['key']) {
        $meeting_user[$mapping['key']] = $values[$field_name];
      }
    }
  }

  // Later versions of webform key by cid.
  $node = node_load($form_state['values']['details']['nid']);
  foreach ($values as $cid => $value) {
    if (is_numeric($cid) && isset($node->webform['components'][$cid])) {
      $component = $node->webform['components'][$cid];
      if (array_key_exists($component['form_key'], $record->data)) {
        $mapping = $record->data[$component['form_key']];
        $meeting_user[$mapping['key']] = $value;
      }
    }
  }

  // Use values from webform to add a Readytalk recipient.
  if ($meeting_user) {
    $meeting_user['sendConfirmationEmail'] = $record->send_confirmation_email;
    $meeting_user['meetingId'] = $record->meeting_id;
    $ready_talk->add_meeting_user($meeting_user);
  }
}

/**
 * Load Readytalk form setting object.
 *
 * @param int $nid
 *   Associated webform nid.
 *
 * @return object $record
 *   Settings object or false on failure.
 */
function readytalk_load($nid) {
  $record = db_query("SELECT * FROM {readytalk_webform} WHERE nid = :nid", array(':nid' => $nid))->fetchObject();
  if ($record) {
    $record->data = unserialize($record->data);
  }

  return $record;
}

/**
 * Load Readytalk user form setting object.
 *
 * @param int $uid
 *   User id.
 *
 * @return object $user
 *   The user object or false on failure.
 */
function readytalk_userload($uid) {
  $user = db_query("SELECT * FROM {readytalk_user} WHERE uid = :uid", array(':uid' => $uid))->fetchObject();
  return $user;
}

/**
 * Get all Readytalk users.
 *
 * @return object $users
 *   The users object or false on failure.
 */
function readytalk_get_all_users() {
  $users = db_query("SELECT * FROM {readytalk_user} r LEFT JOIN users u ON u.uid = r.uid")->fetchAll(PDO::FETCH_ASSOC);
  return $users;
}

/**
 * Get a list of readytalk users to be used in a form.
 *
 * @return array $options
 *   Array of uid => usernames.
 */
function readytalk_get_all_users_options() {
  $users = readytalk_get_all_users();
  // Adding null for empty users.
  $options[''] = '';

  foreach ($users as $user) {
    $options[$user['uid']] = $user['name'];
  }

  return $options;
}

/**
 * Collapses a submitted form into a flat array for readytalk.
 *
 * @param array $form
 *   The form object.
 * @param array $form_state
 *   Object containing form states values.
 *
 * @return array $result
 *   An array of readytalk values.
 */
function readytalk_form_collapse($form = array(), $form_state = array()) {
  $result = array();

  $form_tree = !empty($form_state['values']['submitted_tree']) ? $form_state['values']['submitted_tree'] : $form_state['values']['submitted'];

  _readytalk_collapse_form($form_tree, $form_state['values']['submitted'], $form['submitted'], $result);

  return $result;
}

/**
 * Helper function to recurse through posted webform.
 *
 * @param array $tree
 *   The post tree name => value pairs.
 * @param array $posted_values
 *   The post tree, could be name => value pairs or index => value pairs.
 * @param array $form
 *   The actual form structure of the form.
 * @param array $result
 *   Return by reference re-structured tree that readytalk_form will leverage.
 *
 * @see readytalk_form_collapse()
 */
function _readytalk_collapse_form($tree = array(), $posted_values = array(), $form = array(), &$result = array()) {
  foreach ($tree as $name => $value) {
    // Expand things in fieldsets.
    if (is_array($value) && !in_array($value, $posted_values)) {
      _readytalk_collapse_form($value, $posted_values, $form[$name], $result);
    }
    // We need to convert multi-value fields into strings.
    elseif (is_array($value)) {
      $result[$name] = implode(',', $value);
    }
    // Everything else is just passed along.
    elseif (isset($form[$name]['#type']) && ($form[$name]['#type'] == 'select')) {
      // Map select values to text versions. The numeric values won't mean
      // much to readytalk_webform, CRM or any other integration.
      $result[$name] = $form[$name]['#options'][$value];
    }
    else {
      $result[$name] = $value;
    }
  }
}

/**
 * Implements hook_theme().
 */
function readytalk_theme($existing, $type, $theme, $path) {
  return array(
    'readytalk_components_form' => array(
      'render element' => 'form',
      'file' => 'readytalk.admin.inc',
    ),
    'readytalk_user_form' => array(
      'render element' => 'form',
      'file' => 'readytalk.admin.inc',
    ),
  );
}
