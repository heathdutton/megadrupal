<?php

/**
 * Implementation of hook_perm
 * Administer -> User management -> Permissions
 */
function indic_script_permission() {
  return array(
    'administer_indic_script' => array(
      'title' => t('administer indic_script'),
    ),
    'access_indic_script' => array(
      'title' => t('access indic_script'),
    ),
  );
}


/**
 * Implementation of hook_menu
 */
function indic_script_menu() {

  $items = array();

  $items['admin/config/content/indic_script'] = array(
    'title' => 'Indic Script',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('indic_script_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'description' => 'Configure the indic_script module.',
    'file' => 'indic_script.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  // simple demo page
  if (variable_get('indic_script_enable_demo', 1)) {
    $items['tamil_type'] = array(
      'title' => 'Tamil Typing',
      'access arguments' => array('access content'),
      'page callback' => 'indic_script_tamil_type_page_demo',
      'file' => 'indic_script.tamil.demo.inc',
    );
  }
  return $items;
}

/**
 * Implementation of hook_element_info_alter().
 *
 * Add the attributes to textfield, textareas and body fields.
 */
function indic_script_element_info_alter(&$types) {
  
  $types['textfield']['#pre_render'][] = 'indic_script_process_text_format';
  $types['text_format']['#pre_render'][] = 'indic_script_process_text_format';
  $types['textarea']['#pre_render'][] = 'indic_script_process_text_format';
  
}


/**
 * Helper function.
 *
 * @param $element
 *   A fully populated form elment to add the editor to
 * @return
 *   The same $element with extra indic_script markup and initialization
 */
function indic_script_process_text_format($element) {
  global $user, $indic_script_simple_toolbar_ids;

  // skip disabled text fields
  if (isset($element['#attributes']['disabled']) && $element['#attributes']['disabled'] == 'disabled') {
    return $element;
  }
  
  // disable for these elements
  // TODO: move this to admin configure form?
  switch ($element['#id']) {
    case 'edit-excl-list':
    case 'edit-simple-incl-list':
    case 'edit-simple-incl-paths':
    case 'edit-simple-incl-fields':
    case 'edit-excl-fields':
    case 'edit-excl-paths':
    case 'edit-js-conf':
    case 'indic_script_excl_fields':
    case 'edit-pass':
    case 'edit-openid-identifier':
    case 'edit-mail':
    case 'edit-captcha':
      return $element;
      break;
  }

  if(!_indic_script_element_check($element['#id'])) {
    return $element;
  }
  
  // add the kanni-enabled class so kanni will bind the key events
  $element['#attributes']['class'][]  = 'kanni-enabled';

  return $element;
}


/**
 * Implementation of hook_init
 */
function indic_script_init() {

  if ((!_indic_script_path_check()) || (!user_access('access_indic_script'))) {
    return;
  }

  $path = drupal_get_path('module', 'indic_script');
  drupal_add_js( $path .'/kanni/kanni.js');

  // adds only the enabled language js files.

  $langs = _indic_script_languages();
  $enabled_langs = variable_get('indic_script_langs', array());

  foreach ($langs as $lang) {
    if (isset($enabled_langs[$lang['key']]) && $enabled_langs[$lang['key']]) {
      drupal_add_js($lang['js']);
    }
  }

}


/**
 * indic_script_select_form
 *
 * @return
 *   elect_form
 */
function indic_script_type_method_form() {
  static $options;
  global $user;
  if (!$options) {
    $langs = _indic_script_languages();
    $enabled_langs = variable_get('indic_script_langs', array());
    $options['en'] = t('English');
    foreach ($langs as $lang) {
      if (isset($enabled_langs[$lang['key']]) && $enabled_langs[$lang['key']]) {
	$options[$lang['key']] = $lang['title'];
      }
    }
  }

  $cook_lang = 'en';
  
  if(isset($_COOKIE['kanni_user_lang']) && $_COOKIE['kanni_user_lang'] && isset($options[$cook_lang])) {
    $cook_lang = $_COOKIE['kanni_user_lang'];
  }
  
  $form['indic_script_typein'] = array(
    '#type' => 'select',
    '#title' => t('Type in (F9)'),
    '#options' => $options,
    '#default_value' => $cook_lang,
    '#weight' => 0,
    '#attributes' => array(
      'onchange' => 'Kanni.change_lang(this);'
    ),
  );
  
  $form['indic_script_show_tips'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show Tips?'),
    '#default_value' => TRUE,
  );
  
  return $form;
  
}


/**
 * This function helper function.
 *
 */
function _indic_script_path_check() {

  static $visible;

  if (isset($visible)) {
    return $visible;
  }

  $excl_mode = variable_get('indic_script_page_excl_mode', 0);

  $excl_paths = variable_get('indic_script_excl_paths', '');

  if ($excl_mode < 2) {

    $path = drupal_get_path_alias($_GET['q']);
    //Compare with the internal and path alias (if any).
    $page_match = drupal_match_path($path, $excl_paths);
    if ($path != $_GET['q'] && !$page_match) {
      $page_match = drupal_match_path($_GET['q'], $excl_paths);
    }
    if ($excl_mode == 1 && $page_match) {
      $visible = TRUE;
    }
    else if ($excl_mode == 0 && !$page_match) {
      $visible = TRUE;
    }else{
      $visible = FALSE;
    }
  }else {

    $visible = drupal_eval($excl_paths);

  }

  return $visible;

}

/**
 * This function helper function.
 *
 */
function _indic_script_element_check($element_id) {

  $path_found = _indic_script_path_check();

  // path is the first priority
  if (!$path_found) {
    return $path_found;
  }

  static $excl_mode, $excl_fields, $excl_paths;

  if(!isset($excl_mode)) {
    $excl_mode = variable_get('indic_script_excl_mode', 0);
  }
  if(!isset($excl_fields)) {
    $excl_fields = variable_get('indic_script_excl_fields', '');
  }
  if(!isset($excl_paths)) {
    $excl_paths = variable_get('indic_script_excl_paths', '');
  }

  $arr_excl_fields = preg_split("/[\s,]+/", strip_tags($excl_fields));
  $field_found = _indic_script_element_id_check($element_id, $arr_excl_fields);

  $result =  ($excl_mode == 1) ? $field_found : !$field_found;

  return $result;

}

/**
 * This function helper function
 *
 */
function _indic_script_element_id_check($search, $array) {
  foreach ($array as $key => $value) {
    if (!empty($value) && preg_match('/^'. str_replace('*', '.*', addslashes($value)) .'$/i', $search)) {
      return true;
    }
  }
  return false;
}


function _indic_script_languages() {
  static $langs;
  if (!isset($langs)) {
    $langs = module_invoke_all('indic_script_api', 'lang');
  }
  return $langs;
}

/**
 * Implementation of indic_script_api.
 *
 */
function indic_script_indic_script_api($op) {

  $path = drupal_get_path('module', 'indic_script');

  switch($op) {
    case 'lang':
      $lang[] = array(
	'lang' 	=> 'ta',
	'key' 	=> 'ta_en',
	'title' => t('Tamil Thanglish'),
	'js' => $path . '/kanni/lang/' . 'tamil.js',
      );
      $lang[] = array(
	'lang' 	=> 'ta',
	'key' 	=> 'ta_99',
	'title' => t('Tamil 99'),
	'js' => $path . '/kanni/lang/' . 'tamil.js',
      );
      $lang[] = array(
	'lang' 	=> 'ta',
	'key' 	=> 'ta_tw',
	'title' => t('Tamil TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'tamil.js',
      );
      $lang[] = array(
	'lang' 	=> 'ma',
	'key' 	=> 'ma_en',
	'title' => t('Malayalam Phonetic'),
	'js' => $path . '/kanni/lang/' . 'malayalam.js',
      );
      $lang[] = array(
	'lang' 	=> 'ma',
	'key' 	=> 'ma_tw',
	'title' => t('Malayalam TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'malayalam.js',
      );
      $lang[] = array(
	'lang' 	=> 'hi',
	'key' 	=> 'hi_en',
	'title' => t('Hindi Phonetic'),
	'js' => $path . '/kanni/lang/' . 'hindi.js',
      );
      $lang[] = array(
	'lang' 	=> 'hi',
	'key' 	=> 'hi_tw',
	'title' => t('Hindi TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'hindi.js',
      );
      $lang[] = array(
	'lang' 	=> 'hi',
	'key' 	=> 'hi_tw_re',
	'title' => t('Hindi Remington TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'hindi.js',
      );
      $lang[] = array(
	'lang' 	=> 'be',
	'key' 	=> 'be_en',
	'title' => t('Bengali Phonetic'),
	'js' => $path . '/kanni/lang/' . 'bengali.js',
      );
      $lang[] = array(
	'lang' 	=> 'be',
	'key' 	=> 'be_unijoy',
	'title' => t('Bengali unijoy'),
	'js' => $path . '/kanni/lang/' . 'bengali.js',
      );
      $lang[] = array(
	'lang' 	=> 'be',
	'key' 	=> 'be_tw',
	'title' => t('Bengali TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'bengali.js',
      );
      $lang[] = array(
	'lang' 	=> 'gu',
	'key' 	=> 'gu_en',
	'title' => t('Gujarati Phonetic'),
	'js' => $path . '/kanni/lang/' . 'gujarati.js',
      );
      $lang[] = array(
	'lang' 	=> 'gu',
	'key' 	=> 'gu_tw',
	'title' => t('Gujarati TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'gujarati.js',
      );
      $lang[] = array(
	'lang' 	=> 'ka',
	'key' 	=> 'ka_en',
	'title' => t('Kannada Phonetic'),
	'js' => $path . '/kanni/lang/' . 'kannada.js',
      );
      $lang[] = array(
	'lang' 	=> 'ka',
	'key' 	=> 'ka_tw',
	'title' => t('Kannada TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'kannada.js',
      );
      $lang[] = array(
	'lang' 	=> 'or',
	'key' 	=> 'or_en',
	'title' => t('Oriya Phonetic'),
	'js' => $path . '/kanni/lang/' . 'oriya.js',
      );
      $lang[] = array(
	'lang' 	=> 'or',
	'key' 	=> 'or_tw',
	'title' => t('Oriya TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'oriya.js',
      );
      $lang[] = array(
	'lang' 	=> 'pu',
	'key' 	=> 'pu_en',
	'title' => t('Punjabi Phonetic'),
	'js' => $path . '/kanni/lang/' . 'punjabi.js',
      );
      $lang[] = array(
	'lang' 	=> 'pu',
	'key' 	=> 'pu_tw',
	'title' => t('Punjabi TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'punjabi.js',
      );
      $lang[] = array(
	'lang' 	=> 'te',
	'key' 	=> 'te_en',
	'title' => t('Telugu Phonetic'),
	'js' => $path . '/kanni/lang/' . 'telugu.js',
      );
      $lang[] = array(
	'lang' 	=> 'te',
	'key' 	=> 'te_tw',
	'title' => t('Telugu TypeWriter'),
	'js' => $path . '/kanni/lang/' . 'telugu.js',
      );

      return $lang;
  }
}

/*
 * Implementation of hook_ckeditor_plugin()
 * 
 * this will integrate kanni to ckeditor plugin system.
 */ 
function indic_script_ckeditor_plugin() {
  return array(
    'kanni' => array(
      'name' => 'kanni',
      'desc' => t('Enable Indic Script IME to CKEditor.'),
      'path' => drupal_get_path('module', 'indic_script') . '/kanni/plugins/ckeditor/kanni/',
    )
  );
}

// _theme

