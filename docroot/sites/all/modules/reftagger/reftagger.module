<?php

/**
 * @file
 * Drupal module for RefTagger (http://reftagger.com/).
 */

/**
 * Implementation of hook_help()
 */
function reftagger_help($path, $arg) {
  switch ($path) {
    case 'admin/settings/reftagger':
      return t('<a href="@rt_url">RefTagger</a> is an amazing, free new web tool that instantly makes all the Bible references on your site come alive! Bare links turn into hyperlinks to the full text of the passage at Bible.Logos.com, making it easy for your readers to access the text of Scripture with just a click. Even better, RefTagger brings the text right to your readers by generating a tooltip window that pops up instantly when they hover over the reference. You can also have RefTagger add an  icon that is hyperlinked to the passage in Libronix.', array('@rt_url' => 'http://www.logos.com/reftagger'));
  }
}

/**
 * Implementation of hook_permission()
 */
function reftagger_permission() {
  return array(
    'administer reftagger' => array(
      'title' => t('Administer Reftagger'),
    ),
  );
}

/**
 * Implementation of hook_menu()
 */
function reftagger_menu() {
  $items['admin/config/services/reftagger'] = array(
    'title' => 'RefTagger',
    'description' => t('Configure the settings for RefTagger on your site.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reftagger_admin_settings_form'),
    'access arguments' => array('administer reftagger'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implementation of hook_admin_settings() for configuring the module
 */
function reftagger_admin_settings_form() {
  $version_options = reftagger_bible_versions();
  $form['reftagger_bible_version'] = array(
    '#type' => 'select',
    '#title' => t('Bible Version'),
    '#options' => $version_options,
    '#default_value' => variable_get('reftagger_bible_version', 'KJV'),
    '#description' => t('Select a Bible version to use. RefTagger may not support some Bible versions in the ToolTip feature.'),
  );
  $form['reftagger_bible_reader'] = array(
    '#type' => 'select',
    '#title' => t('Online Bible reader'),
    '#options' => array(
      'biblia' => t('Biblia'),
      'bible.faithlife' => t('Faithlife Study Bible'),
    ),
    '#default_value' => variable_get('reftagger_bible_reader', 'biblia'),
  );
  $form['reftagger_case_insensitive'] = array(
    '#type' => 'checkbox',
    '#title' => t('Case Insensitive?'),
    '#default_value' => variable_get('reftagger_case_insensitive', 0) ? 1 : 0,
    '#description' => t('By default Reftagger only tags references using proper name capitalization (2 Corinthians 5:20). Check this to make Reftagger case insensitive (2 corinthians 5:20, 2 CORINTHIANS 5:20).'),
  );
  $form['reftagger_social_sharing'] = array(
    '#type' => 'select',
    '#multiple' => TRUE,
    '#title' => t('Social sharing'),
    '#options' => _reftagger_get_social_sharing_options(),
    '#default_value' => variable_get('reftagger_social_sharing', drupal_map_assoc(_reftagger_get_social_sharing_options(TRUE))),
    '#description' => t('Select which social icons to appear in tool-tip.'),
  );
  $form['reftagger_chapter_tagging'] = array(
    '#type' => 'checkbox',
    '#title' => t('Chapter-level tagging'),
    '#description' => t('Enables tagging of chapters without verses (e.g. Genesis 12).'),
    '#default_value' => variable_get('reftagger_chapter_tagging', 0),
  );
  $form['reftagger_link_target'] = array(
    '#type' => 'radios',
    '#title' => t('Links open in'),
    '#options' => array(
      t('Existing window'),
      t('New window'),
    ),
    '#default_value' => variable_get('reftagger_link_target', 1),
  );
  $form['reftagger_tooltip_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show ToolTips'),
    '#default_value' => variable_get('reftagger_tooltip_enable', 1),
    '#description' => t('Show a tooltip containing verse text when the mouse hovers over a reference.'),
  );

  $form['logos'] = array(
    '#type' => 'fieldset',
    '#title' => t('Logos integration'),
    '#collapsible' => FALSE,
  );
  $form['logos']['reftagger_logos_icon_link'] = array(
    '#type' => 'checkbox',
    '#title' => t('Add Logos buttons to tooltip'),
    '#default_value' => variable_get('reftagger_logos_icon_link', 0),
    '#description' => t('Insert an icon linking to the verse in Logos Bible Software (if available).'),
  );
  $dark_icon = '<img src="http://www.logos.com/images/Corporate/LibronixLink_dark.png" />';
  $light_icon = '<img src="http://www.logos.com/images/Corporate/LibronixLink_light.png" />';
  $form['logos']['reftagger_logos_icon_type'] = array(
    '#type' => 'radios',
    '#title' => t('Logos link icons'),
    '#options' => array(
      'light' => $light_icon . t(' Light (for sites with dark backgrounds)'),
      'dark' => $dark_icon . t(' Dark (for sites with light backgrounds)'),
    ),
    '#default_value' => variable_get('reftagger_logos_icon_type', 'light'),
    '#states' => array(
      'visible' => array(
        ':input[name="reftagger_logos_icon_link"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['logos']['reftagger_logos_icon_add'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Reftagger on existing Biblia links'),
    '#default_value' => variable_get('reftagger_logos_icon_add', 0),
  );

  $form['exclusions'] = array(
    '#type' => 'fieldset',
    '#title' => t('Exclusions'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['exclusions']['reftagger_exclude_tags'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Exclude tags'),
    '#default_value' => variable_get('reftagger_exclude_tags', array('h1', 'h2', 'h3')),
    '#options' => reftagger_tags(),
    '#description' => t('Do not search these HTML tags.'),
  );
  $form['exclusions']['reftagger_exclude_classes'] = array(
    '#type' => 'textfield',
    '#title' => t('Exclude classes'),
    '#default_value' => variable_get('reftagger_exclude_classes', ''),
    '#description' => t('A comma-separated list of HTML tag classes that should exclude RefTagger functionality'),
  );

  $form['styles'] = array(
    '#type' => 'fieldset',
    '#title' => t('General styling'),
    '#collapsible' => FALSE,
  );
  $form['styles']['reftagger_drop_shadow'] = array(
    '#type' => 'checkbox',
    '#title' => t('Drop shadow'),
    '#default_value' => variable_get('reftagger_drop_shadow', 1),
  );
  $form['styles']['reftagger_rounded_corners'] = array(
    '#type' => 'checkbox',
    '#title' => t('Rounded corners'),
    '#default_value' => variable_get('reftagger_rounded_corners', 0),
  );
  $form['styles']['reftagger_background_color'] = array(
    '#type' => 'radios',
    '#title' => t('Body background theme'),
    '#options' => array(
      'light' => t('Light'),
      'dark' => t('Dark'),
    ),
    '#default_value' => variable_get('reftagger_background_color', 'light'),
  );

  $styles = variable_get('reftagger_custom_styles', array());
  $form['reftagger_custom_styles'] = array(
    '#type' => 'fieldset',
    '#title' => t('Custom styles'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#tree' => TRUE,
  );
  $form['reftagger_custom_styles']['heading'] = array(
    '#type' => 'fieldset',
    '#title' => t('Heading'),
    '#collapsible' => FALSE,
  );
  $form['reftagger_custom_styles']['heading']['color'] = array(
    '#type' => 'textfield',
    '#size' => 10,
    '#title' => t('Color'),
    '#default_value' => isset($styles['heading']['color']) ? $styles['heading']['color'] : '#333',
    '#description' => t('Use CSS HEX value (e.g. #ff0000 for red)'),
    '#element_validate' => array('reftagger_validate_color_hex'),
  );
  $default_font_family = "Arial, 'Helvetica Neue', Helvetica, sans-seri";
  $form['reftagger_custom_styles']['heading']['fontFamily'] = array(
    '#type' => 'select',
    '#title' => t('Font'),
    '#default_value' => isset($styles['heading']['fontFamily'])
        ? $styles['heading']['fontFamily']
        : $default_font_family,
    '#options' => array(
      "Arial, 'Helvetica Neue', Helvetica, sans-serif" => 'Arial',
      "'Courier New', Courier, 'Lucida Sans Typewriter', 'Lucida Typewriter', monospace" => 'Courier New',
      "Georgia, Times, 'Times New Roman', serif" => 'Georgia',
      "Palatino, 'Palatino Linotype', 'Palatino LT STD', 'Book Antiqua', Georgia, serif" => 'Palantino',
      "Tahoma, Verdana, Segoe, sans-serif" => 'Tahoma',
      "TimesNewRoman, 'Times New Roman', Times, Baskerville, Georgia, serif" => 'Times New Roman',
      "Verdana, Geneva, sans-serif" => 'Verdana',
    ),
  );
  $form['reftagger_custom_styles']['heading']['fontSize'] = array(
    '#type' => 'select',
    '#title' => t('Font size'),
    '#default_value' => isset($styles['heading']['fontSize'])
        ? $styles['heading']['fontSize']
        : '14px',
    '#options' => drupal_map_assoc(array('12px', '14px', '16px', '18px')),
  );
  $form['reftagger_custom_styles']['heading']['backgroundColor'] = array(
    '#type' => 'textfield',
    '#size' => 10,
    '#title' => t('Background color'),
    '#default_value' => isset($styles['heading']['backgroundColor']) ? $styles['heading']['backgroundColor'] : '#e7e7e7',
    '#description' => t('Background color for heading. Use CSS HEX value (e.g. #ff0000 for red)'),
    '#element_validate' => array('reftagger_validate_color_hex'),
  );
  $form['reftagger_custom_styles']['body'] = array(
    '#type' => 'fieldset',
    '#title' => t('Body'),
    '#collapsible' => FALSE,
  );
  // The body color field re-uses everything except default value from the
  // heading color field.
  $form['reftagger_custom_styles']['body']['color'] = $form['reftagger_custom_styles']['heading']['color'];
  $form['reftagger_custom_styles']['body']['color']['#default_value'] = isset($styles['body']['color'])
      ? $styles['body']['color']
      : '#666';

  // The body font family field re-uses everything except default value from the
  // heading font family field.
  $form['reftagger_custom_styles']['body']['fontFamily'] = $form['reftagger_custom_styles']['heading']['fontFamily'];
  $form['reftagger_custom_styles']['body']['fontFamily']['#default_value'] = isset($styles['body']['fontFamily'])
      ? $styles['body']['fontFamily']
      : $default_font_family;

  // The body font size field re-uses everything except default value from the
  // heading font size field.
  $form['reftagger_custom_styles']['body']['fontSize'] = $form['reftagger_custom_styles']['heading']['fontSize'];
  $form['reftagger_custom_styles']['body']['fontSize']['#default_value'] = isset($styles['body']['fontSize'])
      ? $styles['body']['fontSize']
      : '14px';

  // The link color field re-uses everything from heading color field, except
  // the default value and title.
  $form['reftagger_custom_styles']['body']['moreLink']['color'] = $form['reftagger_custom_styles']['heading']['color'];
  $form['reftagger_custom_styles']['body']['moreLink']['color']['#title'] = t('Link color');
  $form['reftagger_custom_styles']['body']['moreLink']['color']['#default_value'] = isset($styles['body']['moreLink']['color'])
      ? $styles['body']['moreLink']['color']
      : '#0080FF';

  return system_settings_form($form);
}

/**
 * #element_validate callback: Verifies HEX color value.
 *
 * The regex pattern shamelessly stolen from color.module's
 * color_valid_hexadecimal_string().
 *
 * @see color_valid_hexadecimal_string()
 */
function reftagger_validate_color_hex($element, &$form_state) {
  if (!preg_match('/^#([a-f0-9]{3}){1,2}$/iD', $element['#value'])) {
    form_error($element, t('This is not a valid HEX value. It must be in format <em>#ccc000</em> or <em>#ccc</em>.'));
  }
}

/**
 * Returns list of social networks options.
 *
 * @param bool $keys_only
 *   If true, only the keys of the list are returned.
 *
 * @return array
 *   Associative array, where keys are machine names and values are labels of
 *   social networks.
 */
function _reftagger_get_social_sharing_options($keys_only = FALSE) {
  $options = array(
    'twitter' => t('Twitter'),
    'facebook' => t('Facebook'),
    'google' => t('Google+'),
    'faithlife' => t('Faithlife'),
  );

  return $keys_only ? array_keys($options) : $options;
}

/**
 * Return an array of options for HTML tags to exclude
 */
function reftagger_tags() {
  return array(
    'b' => 'Bold/Strong',
    'i' => 'Italic/Emphasis',
    'u' => 'Underline',
    'ol' => 'Ordered List',
    'ul' => 'Unordered List',
    'span' => 'Span',
    'h1' => 'Header 1',
    'h2' => 'Header 2',
    'h3' => 'Header 3',
    'h4' => 'Header 4',
    'h5' => 'Header 5',
    'h6' => 'Header 6'
  );
}

function reftagger_page_build(&$page) {
  if (path_is_admin(current_path())) {
    return;
  }

  $settings = array(
    'bibleVersion' => variable_get('reftagger_bible_version', 'KJV'),
    'linksOpenNewWindow' => (bool) variable_get('reftagger_link_target', 1),
    'useTooltip' => (bool) variable_get('reftagger_tooltip_enable', 1),
    'caseInsensitive' => (bool) variable_get('reftagger_case_insensitive', 0),
    'dropShadow' => (bool) variable_get('reftagger_drop_shadow', 1),
    'roundCorners' => (bool) variable_get('reftagger_rounded_corners', 0),
    'socialSharing' => array_values(variable_get('reftagger_social_sharing', _reftagger_get_social_sharing_options(TRUE))),
    'addLogosLink' => (bool) variable_get('reftagger_logos_icon_link', 0),
    'logosLinkIcon' => variable_get('reftagger_logos_icon_type', 'light'),
    'convertHyperlinks' => (bool) variable_get('reftagger_logos_icon_add', 0),
    'tagChapters' => (bool) variable_get('reftagger_chapter_tagging', 0),
    'tooltipStyle' => variable_get('reftagger_background_color', 'light'),
  );

  $exclude_tags = reftagger_exclude_tags();
  if (count($exclude_tags)) {
    $settings['noSearchTagNames'] = $exclude_tags;
  }

  $class_list = str_replace(' ', '', variable_get('reftagger_exclude_classes', ''));
  if (!empty($class_list)) {
    $settings['noSearchClassNames'] = explode(',', $class_list);
  }

  $bible_reader = variable_get('reftagger_bible_reader', 'biblia');
  if ($bible_reader !== 'biblia') {
    $settings['bibleReader'] = $bible_reader;
  }

  $styles = variable_get('reftagger_custom_styles');
  if ($styles) {
    $settings['customStyle'] = $styles;
  }

  $page['page_bottom']['#attached']['js'][] = drupal_get_path('module', 'reftagger') . '/reftagger.js';
  $page['page_bottom']['#attached']['js'][] = array(
    'type' => 'setting',
    'data' => array('refTagger' => $settings)
  );
}

/**
 * Grab the exclude tags and add synonym tags
 */
function reftagger_exclude_tags() {
  $exclude_tags = variable_get('reftagger_exclude_tags', array('h1', 'h2', 'h3'));
  foreach ($exclude_tags as $tag) {
    if ($tag) {
      $tags[] = $tag;
      if ($tag == 'b') {
        $tags[] = 'strong';
      }
      if ($tag == 'i') {
        $tags[] = 'em';
      }
    }
  }
  return $tags;
}

/**
 * Return an array list of Bible version options for tooltips
 */
function reftagger_bible_versions($abbr = FALSE) {
  return array(
    'English' => array(
      'AB' => $abbr ? 'AMP' : 'Amplified',
      'ASV' => $abbr ? 'ASV' : 'American Standard Version',
      'DAR' => $abbr ? 'DARBY' : '1890 Darby Bible',
      'ESV' => $abbr ? 'ESV' : 'English Standard Version',
      'GW' => $abbr ? 'GW' : 'God\'s Word Translation',
      'HCSB' => $abbr ? 'HCSB' : 'Holman Christian Standard Bible',
      'KJV' => $abbr ? 'KJV' : 'King James Version',
      'LEB' => $abbr ? 'LEB' : 'Lexham English Bible',
      'MESSAGE' => $abbr ? 'MESSAGE' : 'The Message',
      'NASB' => $abbr ? 'NASB' : 'New American Standard',
      'NCV' => $abbr ? 'NCV' : 'New Century Version',
      'GS-NETBIBLE' => $abbr ? 'NET' : 'The NET Bible',
      'NIV' => $abbr ? 'NIV' : 'New International Version',
      'NIRV' => $abbr ? 'NIRV' : 'New International Reader\'s Version',
      'NKJV' => $abbr ? 'NKJV' : 'New King James Version',
      'NLT' => $abbr ? 'NLT' : 'New Living Translation',
      'NRSV' => $abbr ? 'NRSV' : 'New Revised Standard Version',
      'RSV' => $abbr ? 'RSV' : 'Revised Standard Version',
      'TNIV' => $abbr ? 'TNIV' : 'Today\'s New International Version',
      'YLT' => $abbr ? 'YLT' : 'Young\'s Literal Translation',
    ),
    'Arabic' => array(
      'AR-VANDYKE' => $abbr ? 'Arabic' : 'Arabic Bible (Smith & Van Dyke)',
    ),
    'Czech' => array(
      'CS-KR1579' => $abbr ? 'KR1579' : 'Podle Puvodního Vydání Kralického',
    ),
    'French' => array(
      'LSG' => $abbr ? 'LSG' : 'Louis Segond',
    ),
    'German' => array(
      'LUO1545' => $abbr ? 'LUO1545' : 'Luther Bibel (1545)',
      'LU1912' => $abbr ? 'LU1912' : 'Luther Bibel (1912)',
    ),
    'Greek' => array(
      'TISCH' => $abbr ? 'TISCH' : 'Novum Testamentum Graece',
      'TISCHNT' => $abbr ? 'TISCHNT' : 'Novum Testamentum Graece (Tischendorf)',
    ),
    'Hungarian' => array(
      'HU-BIBLE' => $abbr ? 'SZENT' : 'Szent Biblia',
    ),
    'Italian' => array(
      'IT-DIODATI1649' => $abbr ? 'DIODATI' : 'Giovanni Diodati Bibbia',
    ),
    'Russian' => array(
      'RST' => $abbr ? 'RST' : 'Русский Синодальный Перевод (1876/1956)',
    ),
    'Spanish' => array(
      'RVA' => $abbr ? 'RVA' : 'Reina-Valera Actualizada',
      'NBLH' => $abbr ? 'NBLH' : 'Nueva Biblia de los Hispanos',
      'LBLA95' => $abbr ? 'LBLA' : 'La Biblia de las Américas',
      'BB-UBS-BLS' => $abbr ? 'TLA' : 'Traducción en lenguaje actual',
    ),
  );
}
