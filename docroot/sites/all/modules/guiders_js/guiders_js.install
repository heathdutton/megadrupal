<?php

/**
 * @file
 * Install, update and uninstall functions for the Guiders-JS module.
 */

/**
 * Implements hook_install().
 */
function guiders_js_install() {
  // Setting our Guiders' Pack in the DB
  _guiders_js_set('guiders_packs', array('name' => 'default'), array(
    'gpid' => 1,
    'name' => 'default',
    'title' => 'default',
    'path' => 'admin/content/guiders/packs',
    'data' => 'a:13:{s:5:"title";s:7:"default";s:12:"machine_name";s:7:"default";s:4:"path";s:27:"admin/content/guiders/packs";s:6:"active";i:1;s:5:"start";s:1:"0";s:10:"delay_time";s:4:"2000";s:10:"event_name";s:7:"onclick";s:13:"event_element";s:11:"#content h2";s:6:"submit";s:9:"Save Pack";s:13:"form_build_id";s:48:"form-R-4PiSyF1R9FL68dt7Am46DRWMtJii_vbuXseIw_xsg";s:10:"form_token";s:43:"XRR03MHmQbmPWFJMH2iUk34ITtJpwweIAwymc62SfiQ";s:7:"form_id";s:25:"guiders_js_packs_add_form";s:2:"op";s:9:"Save Pack";}',
  ));

  $guiders = array(
    array(
      'gid' => '1',
      'gpid' => '1',
      'name' => 'welcome-to-the-guiders-pack-pa',
      'title' => 'Welcome to the Guiders Pack page',
      'weight' => '1',
      'data' => 'a:16:{s:5:"title";s:32:"Welcome to the Guiders Pack page";s:12:"machine_name";s:30:"welcome-to-the-guiders-pack-pa";s:4:"desc";a:2:{s:5:"value";s:325:"Here you can create Guiders Packs.
A Guiders Pack is basically a virtual set of guiders which is activated on a single path on your site.
BTW you are seeing this because this is your first time and we have created a default Guiders Pack for you to play around with.
You can always delete it to stop seeing this awesome guide.";s:6:"format";s:13:"filtered_html";}s:6:"attach";s:0:"";s:8:"position";s:0:"";s:5:"width";s:0:"";s:7:"overlay";i:1;s:9:"autoFocus";s:0:"";s:5:"close";i:1;s:10:"buttons_fs";a:1:{i:0;a:1:{s:4:"name";s:4:"Next";}}s:6:"weight";s:1:"1";s:6:"submit";s:11:"Save Guider";s:13:"form_build_id";s:48:"form-bczcieebEMYozXCz2nHBoWEwGD1M1tpW2W2czJk4Mxk";s:10:"form_token";s:43:"j9vG-gvZFGKVp7NjZvY0A5nYb6MqHp_rjOtJJikDOlQ";s:7:"form_id";s:19:"guiders_js_add_form";s:2:"op";s:11:"Save Guider";}',
    ),
    array(
      'gid' => '2',
      'gpid' => '1',
      'name' => 'the-path',
      'title' => 'The path',
      'weight' => '2',
      'data' => 'a:16:{s:5:"title";s:8:"The Path";s:12:"machine_name";s:8:"the-path";s:4:"desc";a:2:{s:5:"value";s:74:"This is our default Guiders Pack path.
It will be active only on this url.";s:6:"format";s:13:"filtered_html";}s:6:"attach";s:32:"#content #table-row-path-default";s:8:"position";s:1:"6";s:5:"width";s:0:"";s:7:"overlay";i:0;s:9:"autoFocus";s:0:"";s:5:"close";i:1;s:10:"buttons_fs";a:1:{i:0;a:1:{s:4:"name";s:4:"Next";}}s:6:"weight";s:1:"2";s:6:"submit";s:11:"Save Guider";s:13:"form_build_id";s:48:"form-kYFEYA2pOXW3YqOKO-6eoxugeOZ6p6EfO1z62GlLMJM";s:10:"form_token";s:43:"j9vG-gvZFGKVp7NjZvY0A5nYb6MqHp_rjOtJJikDOlQ";s:7:"form_id";s:19:"guiders_js_add_form";s:2:"op";s:11:"Save Guider";}',
    ),
    array(
      'gid' => '4',
      'gpid' => '1',
      'name' => 'edit',
      'title' => 'Edit',
      'weight' => '4',
      'data' => 'a:15:{s:5:"title";s:4:"Edit";s:12:"machine_name";s:4:"edit";s:4:"desc";a:2:{s:5:"value";s:68:"You can Edit this Pack properties by setting the title and the path ";s:6:"format";s:13:"filtered_html";}s:6:"attach";s:37:"#content #table-row-path-default-edit";s:8:"position";s:1:"9";s:5:"width";s:3:"150";s:7:"overlay";i:0;s:9:"autoFocus";s:0:"";s:5:"close";i:1;s:10:"buttons_fs";a:1:{i:0;a:1:{s:4:"name";s:4:"Next";}}s:6:"submit";s:11:"Save Guider";s:13:"form_build_id";s:48:"form-Sd-P3rMG_CBwDj699Lpta4ejDIeH9tgUFenNF2tn_DM";s:10:"form_token";s:43:"j9vG-gvZFGKVp7NjZvY0A5nYb6MqHp_rjOtJJikDOlQ";s:7:"form_id";s:19:"guiders_js_add_form";s:2:"op";s:11:"Save Guider";}',
    ),
    array(
      'gid' => '5',
      'gpid' => '1',
      'name' => 'list',
      'title' => 'List',
      'weight' => '5',
      'data' => 'a:15:{s:5:"title";s:4:"List";s:12:"machine_name";s:4:"list";s:4:"desc";a:2:{s:5:"value";s:56:"You can watch, add or edit your Pack\'s Guiders from here";s:6:"format";s:13:"filtered_html";}s:6:"attach";s:37:"#content #table-row-path-default-list";s:8:"position";s:1:"6";s:5:"width";s:3:"150";s:7:"overlay";i:0;s:9:"autoFocus";s:0:"";s:5:"close";i:1;s:10:"buttons_fs";a:1:{i:0;a:1:{s:4:"name";s:4:"Next";}}s:6:"submit";s:11:"Save Guider";s:13:"form_build_id";s:48:"form-dy5jhh3dEfCANhgdt-D5OWB7xBH_X0UmXrgQ0q2oquw";s:10:"form_token";s:43:"j9vG-gvZFGKVp7NjZvY0A5nYb6MqHp_rjOtJJikDOlQ";s:7:"form_id";s:19:"guiders_js_add_form";s:2:"op";s:11:"Save Guider";}',
    ),
    array(
      'gid' => '6',
      'gpid' => '1',
      'name' => 'delete',
      'title' => 'Delete',
      'weight' => '6',
      'data' => 'a:15:{s:5:"title";s:6:"Delete";s:12:"machine_name";s:6:"delete";s:4:"desc";a:2:{s:5:"value";s:64:"Or you can decide you don\'t need this Pack anymore and delete it";s:6:"format";s:13:"filtered_html";}s:6:"attach";s:39:"#content #table-row-path-default-delete";s:8:"position";s:1:"3";s:5:"width";s:3:"150";s:7:"overlay";i:0;s:9:"autoFocus";s:0:"";s:5:"close";i:1;s:10:"buttons_fs";a:1:{i:0;a:1:{s:4:"name";s:4:"Next";}}s:6:"submit";s:11:"Save Guider";s:13:"form_build_id";s:48:"form-8Ge7WDxb_OoIcZ3yetWUK--XZs4T3_YHvqGhLdQqw70";s:10:"form_token";s:43:"j9vG-gvZFGKVp7NjZvY0A5nYb6MqHp_rjOtJJikDOlQ";s:7:"form_id";s:19:"guiders_js_add_form";s:2:"op";s:11:"Save Guider";}',
    ),
    array(
      'gid' => '7',
      'gpid' => '1',
      'name' => 'start-now',
      'title' => 'Start now',
      'weight' => '7',
      'data' => 'a:15:{s:5:"title";s:9:"Start Now";s:12:"machine_name";s:9:"start-now";s:4:"desc";a:2:{s:5:"value";s:46:"Start now by creating your first Guiders\' Pack";s:6:"format";s:13:"filtered_html";}s:6:"attach";s:0:"";s:8:"position";s:0:"";s:5:"width";s:3:"400";s:7:"overlay";i:1;s:9:"autoFocus";s:0:"";s:5:"close";i:1;s:10:"buttons_fs";a:1:{i:0;a:1:{s:4:"name";s:5:"Close";}}s:6:"submit";s:11:"Save Guider";s:13:"form_build_id";s:48:"form-mODWnW169Hvfx5P5n6NEqZh5r1oMFnnbADyXI8j4JsY";s:10:"form_token";s:43:"j9vG-gvZFGKVp7NjZvY0A5nYb6MqHp_rjOtJJikDOlQ";s:7:"form_id";s:19:"guiders_js_add_form";s:2:"op";s:11:"Save Guider";}',
    ),
  );

  // Setting the guiders in the DB
  foreach ($guiders as $guider) {
    _guiders_js_set('guiders', array('name' => $guider['name']), $guider);
  }
}

/**
 * Implements hook_enable().
 */
function guiders_js_enable() {
  $lib_installed = TRUE;
  $lib_path = libraries_get_path('guiders-js');
  if (file_exists($lib_path)) {
    $files = array('guiders.js', 'guiders.css', 'x_close_button.jpg');
    foreach ($files as $file_name) {
      if (!file_exists($lib_path . '/' . $file_name)) {
        $lib_installed = FALSE;
        break;
      }
    }
  }
  else {
    $lib_installed = FALSE;
  }

  if (!$lib_installed) {
    drupal_set_message(t("It seems that the Guiders-JS library or part of it does not exist in the libraries folder.<br />Please read the README.txt file for instructions on how to install the module.<br />The module has been disabled."), 'error');

    module_disable(array('guiders_js'));
  }
}

/**
 * Implements hook_schema().
 */
function guiders_js_schema() {
    $schema['guiders_packs'] = array(
    'description' => 'Contains packs of guiders data.',
    'fields' => array(
      'gpid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this guider-set. Used to identify it programmatically.',
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Visual title for this guider-set.',
        'not null' => TRUE,
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Relative path which the guider-set will be active at',
        'not null' => TRUE,
      ),
      'data' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A full guider\'s pack data',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('gpid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
    'indexes' => array('path' => array('path')),
  );

  $schema['guiders'] = array(
    'description' => 'Contains guiders data.',
    'fields' => array(
      'gid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'no export' => TRUE,
      ),
      'gpid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The guider\'s pack id',
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this guider-set. Used to identify it programmatically.',
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Visual title for this guider-set.',
        'not null' => TRUE,
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The guider\'s weight',
      ),
      'data' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A full guider-set data',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('gid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
    'indexes' => array(
      'id' => array('gid', 'gpid'),
    ),
    'foreign keys' => array(
      'guiders_packs' => array(
        'table' => 'guiders_packs',
        'columns' => array('gpid' => 'gpid'),
      ),
    ),
  );

  $schema['cache_guiders'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_guiders']['description'] = t('Cache table for the Guiders-JS module to store already processed and cached js code.');

  return $schema;
}

// Add a weight field to guiders
function guiders_js_update_7001() {
  if (!db_field_exists('guiders', 'weight')) {
    db_add_field('guiders', 'weight', array('type' => 'int', 'size' => 'tiny', 'unsigned' => FALSE, 'default' => 0, 'not null' => TRUE));
  }

  // Update all the guider's with the new weight value.
  $result = db_select('guiders', 'g')
    ->fields('g', array('weight'))
    ->orderBy('gpid', 'ASC')
    ->orderBy('gid', 'ASC')
    ->execute()
    ->fetchAssoc();

  $gpid = 0;
  while ($record = $result->fetchAssoc()) {
    if ($result['gpid'] !== $gpid) {
      $gpid = $result['gpid'];
      $weight = -50;
    }

    db_update('guiders')
      ->fields(array('weight' => $weight))
      ->condition('gid', $record['gid'])
      ->execute();
  }
}
