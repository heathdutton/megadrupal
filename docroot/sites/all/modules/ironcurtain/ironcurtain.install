<?php
/**
 * @file
 * ironcurtain.module
 */

/**
 * Implements hook_uninstall().
 */
function ironcurtain_uninstall() {
  $vars = array(
    'ironcurtain_unrestricted_paths',
    'ironcurtain_permission_override',
    'ironcurtain_logging',
    'ironcurtain_fast_denied_page',
    'ironcurtain_ip_blacklist',
    'ironcurtain_blocked_paths',
    'ironcurtain_ip_whitelist',
    'ironcurtain_restricted_paths',
  );
  array_map('variable_del', $vars);
}

/**
 * Implements hook_requirements().
 */
function ironcurtain_requirements($phase) {
  $requirements = array();

  $t = get_t();
  if (version_compare(phpversion(), '5.4', '>=')) {
    $requirements['ironcurtain_phpversion'] = array(
      'title' => $t('Iron Curtain PHP Version'),
      'value' => phpversion(),
      'description' => $t('The server is using PHP version !phpversion.', array('!phpversion' => phpversion())),
      'severity' => REQUIREMENT_OK,
    );
  }
  else {
    $requirements['ironcurtain_phpversion'] = array(
      'title' => $t('Iron Curtain PHP Version'),
      'value' => phpversion(),
      'description' => $t('The server is using PHP version !phpversion, but 5.4 is the minimum required to make Iron Curtain work properly.', array('!phpversion' => phpversion())),
      'severity' => REQUIREMENT_ERROR,
    );
  }
  if ($phase == 'runtime') {
    if (class_exists('M6Web\Component\Firewall\Firewall')) {
      $requirements['ironcurtain_firewall'] = array(
        'title' => $t('Iron Curtain Firewall libray'),
        'value' => $t('OK'),
        'description' => $t('M6WEB Firewall is found.'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['ironcurtain_firewall'] = array(
        'title' => $t('Iron Curtain Firewall libray'),
        'value' => $t('Not Found'),
        'description' => $t('M6WEB Firewall is not found. Check that !cmlink works, and re-enable Iron Curtain afterwards.', array('!cmlink' => l($t('Composer Manager'), 'admin/config/system/composer-manager'))),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}
