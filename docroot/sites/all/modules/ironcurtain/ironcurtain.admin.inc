<?php
/**
 * @file
 * Include file for admin stuff.
 */

/**
 * Form callback for settings form.
 */
function ironcurtain_settings_form($form, &$form_state) {

  $form['general'] = array(
    '#type' => 'fieldset',
    '#title' => t('General settings'),
    '#weight' => -60,
  );

  $form['general']['ironcurtain_unrestricted_paths'] = array(
    '#type' => 'textarea',
    '#default_value' => variable_get('ironcurtain_unrestricted_paths', ''),
    '#title' => t('Unrestricted paths'),
    '#description' => t('A list of paths which are not restricted, not even from the blacklist IPs.'),
    '#weight' => -50,
  );

  $form['general']['ironcurtain_permission_override'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('ironcurtain_permission_override', TRUE),
    '#title' => t('Allow permission override'),
    '#description' => t('When enabled, users with the "bypass iron curtain restrictions" permission will be able to bypass any restrictions.'),
    '#weight' => -45,
  );

  $form['general']['ironcurtain_logging'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('ironcurtain_logging', FALSE),
    '#title' => t('Log failed access attempts'),
    '#description' => t('When enabled, every "access denied" message will be logged with the path and IP address. On sites with huge amounts of denied attemtps, this may reduce the overall site performance. Should only be enabled when Fast "acccess denied" pages are enabled, since Drupal normally logs denied attempts itself.'),
    '#weight' => -30,
  );

  $form['general']['ironcurtain_fast_denied_page'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('ironcurtain_fast_denied_page', FALSE),
    '#title' => t('Fast "access denied" pages.'),
    '#description' => t('When enabled, the "access denied" page will not be generated by Drupal, but by this module. This should improve performance if the site experiences huge amounts of login attempts.'),
    '#weight' => -35,
  );

  $form['blacklist'] = array(
    '#type' => 'fieldset',
    '#title' => t('Black list'),
    '#weight' => -20,
  );

  $form['blacklist']['ironcurtain_ip_blacklist'] = array(
    '#type' => 'textarea',
    '#default_value' => implode("\n", variable_get('ironcurtain_ip_blacklist', array())),
    '#title' => t('IP black list'),
    '#description' => t('Blacklist of IP addresses, one per line. These IP addresses will not be able to access the restricted paths below.'),
  );

  $form['blacklist']['ironcurtain_blocked_paths'] = array(
    '#type' => 'textarea',
    '#default_value' => variable_get('ironcurtain_blocked_paths', ''),
    '#title' => t('Blocked paths'),
    '#description' => t('A list of paths to be blocked from users on the black list.'),
  );

  $form['whitelist'] = array(
    '#type' => 'fieldset',
    '#title' => t('White list'),
    '#weight' => -10,
  );

  $form['whitelist']['ironcurtain_ip_whitelist'] = array(
    '#type' => 'textarea',
    '#default_value' => implode("\n", variable_get('ironcurtain_ip_whitelist', array())),
    '#title' => t('IP white list'),
    '#description' => t('Whitelist of IP addresses, one per line. These IP addresses will bypass any restrictions.'),
  );

  $form['whitelist']['ironcurtain_restricted_paths'] = array(
    '#type' => 'textarea',
    '#default_value' => variable_get('ironcurtain_restricted_paths', ''),
    '#title' => t('Restricted paths'),
    '#description' => t('A list of paths which are restricted to users from whitelisted IPs only.'),
  );

  $form['#validate'][] = 'ironcurtain_settings_form_validate';

  $form['help'] = array(
    '#type' => 'fieldset',
    '#title' => t('Help'),
    '#weight' => 10,
    '#collapsed' => TRUE,
    '#collapsible' => TRUE,
  );

  $form['help']['ip_addresses'] = array(
    '#type' => 'item',
    '#title' => t('IP address formats'),
    '#markup' => '<table><thead><tr><th>Type</th><th>Syntax</th><th>Details</th></tr></thead><tbody><tr><td>IPV6</td><td><code>::1</code></td><td>Short notation</td></tr><tr><td>IPV4</td><td><code>192.168.0.1</code></td><td></td></tr><tr><td>Range</td><td><code>192.168.0.0-192.168.1.60</code></td><td>Includes all IPs from <em>192.168.0.0</em> to <em>192.168.0.255</em><br />and from <em>192.168.1.0</em> to <em>198.168.1.60</em></td></tr><tr><td>Wild card</td><td><code>192.168.0.*</code></td><td>IPs starting with <em>192.168.0</em><br />Same as IP Range <code>192.168.0.0-192.168.0.255</code></td></tr><tr><td>Subnet mask</td><td><code>192.168.0.0/255.255.255.0</code></td><td>IPs starting with <em>192.168.0</em><br />Same as <code>192.168.0.0-192.168.0.255</code> and <code>192.168.0.*</code></td></tr><tr><td>CIDR Mask</td><td><code>192.168.0.0/24</code></td><td>IPs starting with <em>192.168.0</em><br />Same as <code>192.168.0.0-192.168.0.255</code> and <code>192.168.0.*</code><br />and <code>192.168.0.0/255.255.255.0</code></td></tr></tbody></table>',
  );

  $form['help']['paths'] = array(
    '#type' => 'item',
    '#title' => t('Path formats'),
    '#markup' => t('The path formats could be like "admin/config/system/cron", "admin/config/*" or "node/*/edit".'),
  );

  return system_settings_form($form);
}

/**
 * Validate callback.
 */
function ironcurtain_settings_form_validate($form, &$form_state) {
  // Converts each field from string to array.
  $fields = array('ironcurtain_ip_blacklist', 'ironcurtain_ip_whitelist');
  foreach ($fields as $field) {
    $string = $form_state['input'][$field];
    $array = preg_split("/\r\n|\n|\r/", $string);
    $form_state['values'][$field] = array_map('trim', $array);
  }
}
