<?php

/**
 * @file
 * Install, update and uninstall functions for the CRM Core Profile module.
 */

/**
 * Implements hook_schema().
 */
function crm_core_profile_schema() {
  $schema['crm_core_profile'] = array(
    'description' => 'Stores CRM Core Profile form information.',
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'identifier' => 'crm_core_profile',
      'default hook' => 'default_crm_core_profile',
      'admin_title' => 'name',
      'save callback' => 'crm_core_profile_save',
      'delete callback' => 'crm_core_profile_delete',
      'status callback' => 'crm_core_profile_status_toggle',
      'api' => array(
        'owner' => 'crm_core_profile',
        'api' => 'crm_core_profile',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'name' => array(
        'description' => 'The machine name of the profile form.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'Human readable label of the profile form.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'entities' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of the entities configuration.',
      ),
      'fields' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of the fields configuration.',
      ),
      'block' => array(
        'description' => 'If a block should be generated from this profile form.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'block_title' => array(
        'description' => 'Title that would be used for this profile form when shown in block.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'page' => array(
        'description' => 'If a page should be generated from this profile form.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'page_title' => array(
        'description' => 'Title that would be used for this profile form.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'page_path' => array(
        'description' => 'The drupal path that should be created for this form.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      'page_redirect' => array(
        'description' => 'The redirect path when the form is submitted.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      'message' => array(
        'description' => 'The message displayed when the form is submitted.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'The status of the profile form.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'uid' => array(
        'description' => 'The profile form creator uid.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'Timestamp of when the profile form is created.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'contact_match' => array(
        'description' => 'Type of contact matching for this profile form.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'contact_match_engines' => array(
        'type' => 'blob',
        'serialize' => TRUE,
        'description' => 'A serialized array of the machine readable match engine names.',
      ),
      'access_control' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => 'default',
        'description' => 'Access control setting for profile forms.',
      ),
      'access_control_perm' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => 'none',
        'description' => 'Permissions for access controls with profile forms.',
      ),
      'roles' => array(
        'type' => 'blob',
        'serialize' => TRUE,
        'description' => 'A serialized array of the role names which should have access to submit profile forms.',
      ),
    ),
    'primary key' => array('name'),
  );

  $schema['crm_core_profile_nodes'] = array(
    'description' => 'Stores information about CRM Core Profile <=> nodes relations.',
    'fields' => array(
      'nid' => array(
        'description' => 'NID of a node associated with profile.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'use_profile' => array(
        'description' => 'If a profile should be used for this node?',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 1,
        'size' => 'tiny',
      ),
      'profile_name' => array(
        'description' => 'The machine name of the profile form.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'display_profile' => array(
        'description' => 'Should a profile display as part of the content or not?',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 1,
        'size' => 'tiny',
      ),
      'inline_title' => array(
        'description' => 'Title for this form when it appears inline with other content.',
        'type' => 'varchar',
        'length' => 255,
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}

/**
 * Add load contact sequence field.
 */
function crm_core_profile_update_7001() {
  db_add_field('crm_core_profile', 'create_contact_actions', array(
    'description' => 'Load contact sequence',
    'type' => 'varchar',
    'length' => 255,
    'not null' => FALSE,
    'default' => '',
  ));

  db_add_field('crm_core_profile', 'user_sync', array(
    'description' => 'User synchronization settings',
    'type' => 'varchar',
    'length' => 255,
    'not null' => FALSE,
    'default' => '',
  ));
}

/**
 * Added "create_contact_actions" field to schema.
 */
function crm_core_profile_update_7002() {
  // Alter the DB field to blob.
  db_change_field('crm_core_profile', 'create_contact_actions', 'create_contact_actions',
    array(
      'type' => 'blob',
      'size' => 'big',
      'serialize' => TRUE,
      'not null' => TRUE,
    )
  );
}

/**
 * Schema changes.
 *
 * Drop "create_contact_actions" field.
 * Drop "user_sync" field.
 * Add "page" field.
 * Add "page_title" field.
 * Rename "path" => "page_path".
 * Rename "redirect" => "page_redirect".
 * Add "block_title" field.
 * Add "contact_match" field.
 * Add "contact_match_engines" field.
 * Add table "crm_core_profile_nodes".
 */
function crm_core_profile_update_7003() {
  db_drop_field('crm_core_profile', 'bundle_type');
  db_add_field('crm_core_profile', 'entities',
    array(
      'type' => 'blob',
      'not null' => FALSE,
      'size' => 'big',
      'serialize' => TRUE,
      'description' => 'A serialized array of the activity fields configuration.',
    )
  );
  db_drop_field('crm_core_profile', 'create_contact_actions');
  db_drop_field('crm_core_profile', 'user_sync');
  db_add_field('crm_core_profile', 'page',
    array(
      'description' => 'If a page should be generated from this profile form.',
      'type' => 'int',
      'not null' => FALSE,
      'default' => 0,
      'size' => 'tiny',
    )
  );
  db_add_field('crm_core_profile', 'page_title',
    array(
      'description' => 'Title that would be used for this profile form.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
    )
  );
  db_change_field('crm_core_profile', 'path', 'page_path',
    array(
      'description' => 'The drupal path that should be created for this form.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
      'default' => '',
    )
  );
  db_change_field('crm_core_profile', 'redirect', 'page_redirect',
    array(
      'description' => 'The redirect path when the form is submitted.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
      'default' => '',
    )
  );
  db_add_field('crm_core_profile', 'block_title',
    array(
      'description' => 'Title that would be used for this profile form when shown in block.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
    )
  );
  db_add_field('crm_core_profile', 'contact_match',
    array(
      'description' => 'Type of contact matching for this profile form.',
      'type' => 'varchar',
      'length' => 128,
      'not null' => TRUE,
      'default' => '',
    )
  );
  db_add_field('crm_core_profile', 'contact_match_engines',
    array(
      'type' => 'blob',
      'serialize' => TRUE,
      'description' => 'A serialized array of the machine readable match engine names.',
    )
  );
  db_add_field('crm_core_profile', 'roles',
    array(
      'type' => 'blob',
      'serialize' => TRUE,
      'description' => 'A serialized array of the role names which should have access to submit profile forms.',
    )
  );
  $crm_core_profile_nodes = array(
    'description' => 'Stores information about CRM Core Profile <=> nodes relations.',
    'fields' => array(
      'nid' => array(
        'description' => 'NID of a node associated with profile.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'use_profile' => array(
        'description' => 'If a profile should be used for this node?',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 1,
        'size' => 'tiny',
      ),
      'profile_name' => array(
        'description' => 'The machine name of the profile form.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
  );
  db_create_table('crm_core_profile_nodes', $crm_core_profile_nodes);
}

/**
 * Adds a new field "display_profile".
 */
function crm_core_profile_update_7004() {
  db_add_field('crm_core_profile_nodes', 'display_profile',
    array(
      'description' => 'Should a profile display as part of the content or not?',
      'type' => 'int',
      'not null' => FALSE,
      'default' => 1,
      'size' => 'tiny',
    )
  );
}

/**
 * Adds a new field "inline_title".
 */
function crm_core_profile_update_7005() {
  db_add_field('crm_core_profile_nodes', 'inline_title',
    array(
      'description' => 'Title for this form when it appears inline with other content.',
      'type' => 'varchar',
      'length' => 255,
    )
  );
}

/**
 * Adds new fields for "access control" and "access control perm".
 */
function crm_core_profile_update_7006() {
  db_add_field('crm_core_profile', 'access_control',
    array(
      'description' => 'Access control setting for profile forms.',
      'type' => 'varchar',
      'length' => 255,
    )
  );
  db_add_field('crm_core_profile', 'access_control_perm',
    array(
      'description' => 'Permissions for access controls with profile forms.',
      'type' => 'varchar',
      'length' => 255,
    )
  );
}
