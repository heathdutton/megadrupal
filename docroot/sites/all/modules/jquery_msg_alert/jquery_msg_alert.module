<?php
/**
 * @file
 * Drupal version of jQuery Msg Alert plugin
 * http://carvalhar.com/componente/jQueryMsgAlert/index.html
 */

//define default values
define('JQUERY_MSG_ALERT_WIDTH', 260); 
define('JQUERY_MSG_ALERT_HEIGHT', 140); 
define('JQUERY_MSG_ALERT_AUTO_CLOSE', 1); 
define('JQUERY_MSG_ALERT_WAIT', 1); 
define('JQUERY_MSG_ALERT_CLOSE_TIME', 5000); 
define('JQUERY_MSG_ALERT_INTERVAL_TIME', 750); 
define('JQUERY_MSG_ALERT_CSS_POSITION', 'fixed'); 
define('JQUERY_MSG_ALERT_CSS_RIGHT', 10); 
define('JQUERY_MSG_ALERT_TITLE', variable_get('site_name', 'jQuery Msg Alert')); 
define('JQUERY_MSG_ALERT_CONTENT', variable_get('site_slogan', 'jQuery Msg Alert default text')); 
define('JQUERY_MSG_ALERT_CLASS', 'jquery-msg-alert');
define('JQUERY_MSG_ALERT_THEME', 'base'); 
define('JQUERY_MSG_ALERT_INTER_SPACE_HEIGHT', 40); 
define('JQUERY_MSG_ALERT_INITIAL_SPACE_HEIGHT', 10); 
define('JQUERY_MSG_ALERT_PATH', 'drupal7/misc/ui/jquery.ui.core.css'); 

function jquery_msg_alert_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#jquery_msg_alert":
      $output = '<p>' . t("jQuery Msg Alert will show messages using jQuery UI Dialog.") . '</p>';
      break;
  }
  return $output;
}

function jquery_msg_alert_permission() {
  $perms = array(
    'administer settings' => array(
      'title' => t('Administer jQuery Msg Alert settings'),
      'description' => t('Enable a role to modify all settings for this module.'),
    ),
    'view alerts' => array(
      'title' => t('Enable a role to see the alerts made by this module.'),
      'description' => t('Warning: Give to trusted roles only; this permission has security implications.'),
    ),
  );
  return $perms;
}

function jquery_msg_alert_list_wd_types() {
  $options = array();
  //get all types from DB
  $sql = "SELECT DISTINCT type FROM {watchdog}"; 
  $result = db_query($sql);
  $options = array();
  foreach ($result as $record) {
    $options[$record->type] = $record->type;
  }
  return $options;
}

function jquery_msg_alert_list_wd_levels() {
  return watchdog_severity_levels();
}

function jquery_msg_alert_menu() {
  $items = array();
  $items['admin/config/user-interface/jquery_msg_alert'] = array(
    'title' => 'jQuery Msg Alert',
    'description' => 'Settings for jQuery Msg Alert module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jquery_msg_alert_admin_settings'),
    'access arguments' => array('administer settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function jquery_msg_alert_admin_settings() {
  $form['jquery_msg_alert'] = array(
    '#type' => 'fieldset',
    '#title' => t('Define the Drupal messages that will be convert to jQuery Msg Alerts'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE
  );
  $form['jquery_msg_alert']['jquery_msg_alert_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Select the types of Drupal messages to convert'),
    '#default_value' => variable_get('jquery_msg_alert_types', array('status', 'error', 'warning')),
    '#options' => array('status' => t('Status message'), 'error' => t('Error message'), 'warning' => t('Warning message')),
 );
  $form['jquery_msg_alert_watchdog'] = array(
    '#type' => 'fieldset',
    '#title' => t('Watchdog alerts'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE
  );
  $form['jquery_msg_alert_watchdog']['jquery_msg_alert_watchdog_yes'] = array(
    '#type' => 'radios',
    '#title' => t('Do you want to receive recent watchdogs messages as alerts?'),
    '#default_value' => variable_get('jquery_msg_alert_watchdog_yes', t('No')),
    '#options' => drupal_map_assoc(array(t('Yes'), t('No'))),
 );
   $options = jquery_msg_alert_list_wd_types();
  $form['jquery_msg_alert_watchdog']['jquery_msg_alert_watchdog_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Select the types of Watchdog messages you want to be notificated'),
    '#default_value' => variable_get('jquery_msg_alert_watchdog_types', $options),
    '#options' => $options,
    '#states' => array(
      'visible' => array(
        ':input[name="jquery_msg_alert_watchdog_yes"]' => array('value' => t('Yes')),
      ),
    ),
 ); 
  $options = jquery_msg_alert_list_wd_levels();
  $form['jquery_msg_alert_watchdog']['jquery_msg_alert_watchdog_levels'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Select the severity levels of Watchdog messages you want to be notificated'),
    '#default_value' => variable_get('jquery_msg_alert_watchdog_levels', array_keys($options)),    
    '#options' => $options,
    '#states' => array(
      'visible' => array(
        ':input[name="jquery_msg_alert_watchdog_yes"]' => array('value' => t('Yes')),
      ),
    ),
 );  
  $form['jquery_msg_alert_path'] = array(
    '#type' => 'textfield',
    '#title' => t('jQuery UI CSS FILE'),
    '#default_value' => variable_get('jquery_msg_alert_path', JQUERY_MSG_ALERT_PATH),
    '#description' => t("Drupal 7 ships with a default jQuery UI theme, but if you want to change it, !download a new one, save it to your theme's folder and add the path above to the css file.", array ('!download' => l(t('download'), 'http://jqueryui.com/themeroller'))),
  );
  $form['jquery_msg_alert_advanced'] = array(
    '#type' => 'fieldset',
    '#title' => t('Configure the properties for jQuery Msg Alert plugin'),
    '#description' => t('These preferences will override jQuery Msg Alert default values.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE
  ); 
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_width'] = array(
    '#type' => 'textfield',
    '#title' => t("Alert's width"),
    '#default_value' => variable_get('jquery_msg_alert_width', JQUERY_MSG_ALERT_WIDTH)
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_height'] = array(
    '#type' => 'textfield',
    '#title' => t("Alert's height"),
    '#default_value' => variable_get('jquery_msg_alert_height', JQUERY_MSG_ALERT_HEIGHT)
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_auto_close'] = array(
    '#type' => 'checkbox',
    '#title' => t('Close the alert after time expires'),
    '#default_value' => variable_get('jquery_msg_alert_auto_close', JQUERY_MSG_ALERT_AUTO_CLOSE),
    '#description' => t('With this option the alert will be closed as soon the close time finishs.'),
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_wait'] = array(
    '#type' => 'checkbox',
    '#title' => t('Wait an interval before pop-up another alert'),
    '#default_value' => variable_get('jquery_msg_alert_wait', JQUERY_MSG_ALERT_WAIT),
    '#description' => t("If you check this option, an alert will pop-up after some seconds (interval time)."),
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_close_time'] = array(
    '#type' => 'textfield',
    '#title' => t("Close time (miliseconds)"),
    '#default_value' => variable_get('jquery_msg_alert_close_time', JQUERY_MSG_ALERT_CLOSE_TIME),
    '#description' => t('Time to wait untill the alert closes by its own.')
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_interval_time'] = array(
    '#type' => 'textfield',
    '#title' => t("Interval time (miliseconds)"),
    '#default_value' => variable_get('jquery_msg_alert_interval_time', JQUERY_MSG_ALERT_INTERVAL_TIME),
    '#description' => t('Time between the creation of one alert and another one.')
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_css_position'] = array(
    '#type' => 'select',
    '#title' => t('CSS Position'),
    '#default_value' => variable_get('jquery_msg_alert_css_position', JQUERY_MSG_ALERT_CSS_POSITION),
    '#options' => array('fixed' => 'Fixed', 'absolute' => 'Absolute', 'static' => 'Static', 'relative' => 'Relative', 'inherit' => 'Inherit'),
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_right'] = array(
    '#type' => 'textfield',
    '#title' => t("CSS Right (pixels)"),
    '#default_value' => variable_get('jquery_msg_alert_right', JQUERY_MSG_ALERT_CSS_RIGHT),
    '#description' => t('Distance from right in pixels.')
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_title'] = array(
    '#type' => 'textfield',
    '#title' => t("Default title"),
    '#default_value' => variable_get('jquery_msg_alert_title', JQUERY_MSG_ALERT_TITLE),
    '#description' => t('A fallback title for the alert.'),
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_content'] = array(
    '#type' => 'textfield',
    '#title' => t("Default content"),
    '#default_value' => variable_get('jquery_msg_alert_content', JQUERY_MSG_ALERT_CONTENT),
    '#description' => t('A fallback content for the alert.'),
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_class'] = array(
    '#type' => 'textfield',
    '#title' => t("Class name"),
    '#default_value' => variable_get('jquery_msg_alert_class', JQUERY_MSG_ALERT_CLASS),
    '#description' => t('The class name for the jquery ui dialog.')
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_inter_space_height'] = array(
    '#type' => 'textfield',
    '#title' => t("Inter space height (pixels)"),
    '#default_value' => variable_get('jquery_msg_alert_inter_space_height', JQUERY_MSG_ALERT_INTER_SPACE_HEIGHT),
    '#description' => t('Space between one alert and the other.')
  );
  $form['jquery_msg_alert_advanced']['jquery_msg_alert_initial_space_height'] = array(
    '#type' => 'textfield',
    '#title' => t("Space height (pixels)"),
    '#default_value' => variable_get('jquery_msg_alert_initial_space_height', JQUERY_MSG_ALERT_INITIAL_SPACE_HEIGHT),
    '#description' => t('The space from the bottom of the page.')
  );
  
  drupal_set_message(t('Error alert example.'), 'error', FALSE);
  drupal_set_message(t('Warning alert example.'), 'warning', FALSE);
  drupal_set_message(t('Status alert example.'), 'status', FALSE);
  watchdog('jquery_msg_alert', 'jQuery Msg Alert Watchdog');

  return system_settings_form($form);
}

function jquery_msg_alert_init() {
if (user_access('view alerts')) {
    drupal_add_css(variable_get('jquery_msg_alert_path', JQUERY_MSG_ALERT_PATH));
    drupal_add_library('system', 'ui.dialog');
    drupal_add_js(drupal_get_path('module', 'jquery_msg_alert') . '/js/jquery.timers-1.2.min.js');
    drupal_add_js(drupal_get_path('module', 'jquery_msg_alert') . '/js/msgalert.jquery.js');
    drupal_add_js(array('jquery_msg_alert' => array(
      'types' => variable_get('jquery_msg_alert_types', array('status', 'error', 'warning')),
      'alertWidth' => (int)variable_get('jquery_msg_alert_width', JQUERY_MSG_ALERT_WIDTH),
      'alertHeight' => (int)variable_get('jquery_msg_alert_height', JQUERY_MSG_ALERT_HEIGHT),
      'autoClose' => (int)variable_get('jquery_msg_alert_auto_close', JQUERY_MSG_ALERT_AUTO_CLOSE),
      'wait' => (int)variable_get('jquery_msg_alert_wait', JQUERY_MSG_ALERT_WAIT),
      'closeTime' => (int)variable_get('jquery_msg_alert_close_time', JQUERY_MSG_ALERT_CLOSE_TIME),
      'intervalTime' => (int)variable_get('jquery_msg_alert_interval_time', JQUERY_MSG_ALERT_INTERVAL_TIME),
      'cssPosition' => variable_get('jquery_msg_alert_css_position', JQUERY_MSG_ALERT_CSS_POSITION),
      'cssRight' => (int)variable_get('jquery_msg_alert_right', JQUERY_MSG_ALERT_CSS_RIGHT),
      'alertTitleDefault' => variable_get('jquery_msg_alert_title', JQUERY_MSG_ALERT_TITLE),
      'alertContentDefault' => variable_get('jquery_msg_alert_content', JQUERY_MSG_ALERT_CONTENT),
      'className' => variable_get('jquery_msg_alert_class', JQUERY_MSG_ALERT_CLASS),
      'interSpaceHeight' => (int)variable_get('jquery_msg_alert_inter_space_height', JQUERY_MSG_ALERT_INTER_SPACE_HEIGHT), 
      'initialSpaceHeight' => (int)variable_get('jquery_msg_alert_initial_space_height', JQUERY_MSG_ALERT_INITIAL_SPACE_HEIGHT), 
    )), 'setting');
    drupal_add_js(drupal_get_path('module', 'jquery_msg_alert') . '/jquery_msg_alert.js');
  }
}

function jquery_msg_alert_listdirs() {
  $dirs = glob(variable_get('jquery_msg_alert_path', JQUERY_MSG_ALERT_PATH) . '/themes/*', GLOB_ONLYDIR);
    foreach ($dirs as $dir) {
      $alldirs[basename($dir)] = basename($dir);
    }
  return $alldirs;
}

function jquery_msg_alert_remove_empty_array($value) {
    return (!empty($value));
}

function jquery_msg_alert_watchdog(array $log_entry) {
  $message = "";
  $wd_types_selected =array();
  $wd_yes = variable_get('jquery_msg_alert_watchdog_yes', t('No'));
  $wd_types = variable_get('jquery_msg_alert_watchdog_types', jquery_msg_alert_list_wd_types());  
  $wd_security = variable_get('jquery_msg_alert_watchdog_levels', jquery_msg_alert_list_wd_levels());
  //the system variable cames with array items as 0 for unselected
  $wd_types = array_filter($wd_types, "jquery_msg_alert_remove_empty_array");
  $wd_security = array_filter($wd_security, "jquery_msg_alert_remove_empty_array");
  if ($wd_yes == t('Yes') && in_array($log_entry['type'], $wd_types) && in_array($log_entry['severity'], $wd_security)) {
    $message .= $log_entry['type'] . ": " . $log_entry['message'];
    drupal_set_message(check_plain($message), 'status', FALSE);
  }
}