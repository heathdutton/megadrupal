<?php
/**
 * @file entity_bundle_admin.module
 * Contains main module code.
 */

/**
 * Implements hook_menu().
 */
function entity_bundle_admin_menu() {
  $items = array();
  // Get menu items from each entity type that declares it needs us.
  foreach (entity_get_info() as $entity_type => $info) {
    // Only act for entities that use our API, but also only if there is a base
    // path defined. This allows entity types that do not require a UI to expose
    // operations as Services, for instance.
    if (isset($info['bundle admin ui'])) {
      // Instantiate the bundle admin UI controller.
      $class = isset($info['bundle admin ui']['controller class']) ? $info['bundle admin ui']['controller class'] : 'EntityBundleAdminDefaultUIController';
      $controller = new $class($entity_type, $info);
      // Get menu items from the controller.
      $items += $controller->hook_menu();
    }
  }
  //dsm($items);

  return $items;
}

/**
 * Implements hook_entity_info_alter().
 *
 * Fill in the entity info 'bundles' array with Field UI properties and the
 * bundles collected from the bundle hook.
 */
function entity_bundle_admin_entity_info_alter(&$entity_info) {
  foreach ($entity_info as $entity_type => $info) {
    if (isset($info['bundle admin ui'])) {
      // Gather up any bundles defined in hook_entity_info().
      // As a convenience, we'll fill in their 'admin' properties.
      if (!empty($entity_info[$entity_type]['bundles'])) {
        $bundles = $entity_info[$entity_type]['bundles'];
      }
      else {
        $bundles = array();
      }

      // Add in bundles defined in hook_entity_bundle_ENTITY_TYPE_bundle_info().
      $bundles += entity_bundle_admin_get_entity_bundles($entity_type);

      foreach ($bundles as $bundle_name => $bundle_info) {
        // Add the admin ui stuff.
        $bundle_info += array(
          'admin' => array(
            'path' => $entity_info[$entity_type]['bundle admin ui']['path'] . '/manage/' . $bundle_name,
            'access arguments' => array($entity_info[$entity_type]['bundle admin ui']['permission']),
          ),
        );
        $entity_info[$entity_type]['bundles'][$bundle_name] = $bundle_info;
      }
    }
  }
}

/**
 * Generalized helper to get bundles declared by an entity type's info hook.
 *
 * @param $entity_type
 *  The entity type.
 *
 * @return
 *  An array of bundle info, in the same form as the 'bundles' property of
 *  hook_entity_info().
 */
function entity_bundle_admin_get_entity_bundles($entity_type) {
  $entity_info = entity_get_info($entity_type);

  // Invoke hook_entity_bundle_ENTITY_TYPE_bundle_info() for the entity type.
  $hook = isset($entity_info['bundle admin ui']['bundle hook'])
    ? $entity_info['bundle admin ui']['bundle hook']
    : 'entity_bundle_' . $entity_type . '_bundle_info';

  $bundle_info = module_invoke_all($hook);
  drupal_alter($hook, $bundle_info);

  return $bundle_info;
}
