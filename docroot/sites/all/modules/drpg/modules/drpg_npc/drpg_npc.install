<?php

/**
 * @file
 * Defines the schema for the NPC entity.
 */

/**
 * Implements hook_schema().
 */
function drpg_npc_schema() {
  $schema = array();

  $schema['drpg_npc'] = array(
    'description' => 'The base table for NPC entities.',
    'fields' => array(
      'npc_id' => array(
        'description' => 'The primary identifier for an NPC.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of this NPC.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'The label of this NPC.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when this NPC was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when this NPC was last saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'drpg_npc_updated' => array('updated'),
      'drpg_npc_created' => array('created'),
      'drpg_npc_label' => array('label'),
    ),
    'primary key' => array('npc_id'),
  );

  $schema['drpg_npc_instance'] = array(
    'description' => 'The base table for NPC instance entities.',
    'fields' => array(
      'npc_instance_id' => array(
        'description' => 'The primary identifier for an NPC instance.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of this NPC instance.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'The entity ID this NPC instance was created for.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'npc_id' => array(
        'description' => 'The NPC ID this NPC instance represents.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when this NPC instance was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when this NPC instance was last saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'drpg_npc_instance' => array('type', 'entity_id', 'npc_id'),
    ),
    'primary key' => array('npc_instance_id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function drpg_npc_install() {
  // Create entity reference field for multiple NPC entities.
  $field = array(
    'field_name' => 'drpg_multi_npc_ref',
    'type' => 'entityreference',
    'settings' => array(
      'target_type' => 'drpg_npc',
      'handler_settings' => array('target_bundles' => NULL),
    ),
    'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    'translatable' => FALSE,
  );

  field_create_field($field);
}

/**
 * Implements hook_uninstall().
 */
function drpg_npc_uninstall() {
  field_delete_field('drpg_multi_npc_ref');
}
