CONTENTS OF THIS FILE
---------------------

 * Introduction
 * Requirements
 * Installation
 * Configuration
 * Game clients
 * Using the event system

INTRODUCTION
------------

This module provides the functionality to operate an online role-playing
game (RPG) server within Drupal.

 * For a full description of the module, visit the project page:
   https://www.drupal.org/sandbox/ruscoe/2331835

 * To submit bug reports and feature suggestions, or to track changes:
   https://www.drupal.org/project/issues/2331835

REQUIREMENTS
------------

This module requires the following modules:

 * Entity API (https://www.drupal.org/project/entity)
 * Entity Reference (https://www.drupal.org/project/entityreference)
 * Libraries API (https://www.drupal.org/project/libraries)
 * REST Server (https://www.drupal.org/project/rest_server)
 * Services (https://www.drupal.org/project/services)

INSTALLATION
------------

 * Install as you would normally install a contributed Drupal module. See:
   https://drupal.org/documentation/install/modules-themes/modules-7
   for further information.

 * Enable all sub-modules to create a fully-functioning game server.
   - drpg_attribute
   - drpg_avatar
   - drpg_event
   - drpg_inventory_item
   - drpg_item
   - drpg_npc
   - drpg_room

 * Optionally install the DRPG Demo module to automatically populate
   the DRPG database tabls with example data.

CONFIGURATION
-------------

 * Configure user permissions in Administration » People » Permissions:

   - Administer DRPG

     The DRPG administration menu items will be accessible to users with
     this permission.

   - Process DRPG event (DRPG Event module)
     Users with this permission may process game events. This permission
     is required to play games built using DRPG.

GAME CLIENTS
------------

 * DRPG Unity Client: https://github.com/ruscoe/DRPG-Unity-Client

USING THE EVENT SYSTEM
----------------------

DRPG can process events generated by a game client using the DRPG Event
module.

 * Define an event method in your module using the following naming convention

function [YOUR MODULE NAME]_[EVENT NAME]_event($argument_1, $argument_2)

See example drpg_avatar_set_name_event in
modules/drpg_avatar/drpg_avatar.module

 * Implement hook_drpg_event_method_info to allow your new event method to
   be called by the event processor.

See example in modules/drpg_event/drpg_event.api.php

 * In your game client, POST events as a JSON-encoded array of event objects
   to the event processor URL.

Event processor URL: http://[YOUR SERVER]/drpg/process/events/

Post data:

events:[{"method":"method_name", "arguments":["argument_1", "argument_2"]}]

Example:

events:[{"method":"drpg_avatar_set_name_event", "arguments":["Avatar Name"]}]

 * Process the event as required in the event method.
   * Event methods should return a boolean indicating success or failure.
