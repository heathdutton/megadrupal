<?php

/**
 * @file
 * Module file for user_forms_help.
 */

/**
 * Implements hook_FORM_ID_alter().
 */
function user_forms_help_form_user_pass_reset_alter(&$form, &$form_state, $form_id) {

  // Set the value for the account that will be passed to the token.
  $user = $form_state['build_info']['args'][0];
  $user_load = user_load($user);

  // Grab the completed, sanitized message to display on the page.
  $form_text = filter_xss_admin(
    nl2br(
      token_replace(
        variable_get('user_forms_help_message'),
        array('user' => $user_load)
      )
    )
  );
  $form['message'] = array(
    '#markup' => t('!form_text', array(
      '!form_text' => $form_text)));
}


/**
 * Implements hook_token_info().
 *
 * Tokens to be used for setting acct name, admin picture and time values.
 */
function user_forms_help_token_info() {
  $types['user_forms_help_custom'] = array(
    'name' => t('User Forms Help Module Custom tokens'),
    'description' => t('Contains info for User Forms Help Module tokens'),
  );

  $custom['new_user_name'] = array(
    'name' => t('New User Name'),
    'description' => t('Returns new user name.'),
  );

  $custom['time_until_expiration'] = array(
    'name' => t('Time until link expires'),
    'description' => t('Give user notice that link expires in 1 day.'),
  );

  $custom['admin_profile_picture'] = array(
    'name' => t('Shows Admin photo'),
    'description' => t('Personalizes the Page by showing your site admin picture.'),
  );

  return array(
    'types' => $types,
    'tokens' => array(
      'user_forms_help_custom' => $custom,
    ),
  );
}


/**
 * Implements hook_tokens().
 *
 * Used to pass new acct info to one time login form.
 */
function user_forms_help_tokens($type, $tokens, array $data = array(), array $options = array()) {

  $replacements = array();

  if ($type == 'user_forms_help_custom') {

    // Grab our user acct info for the name token.
    $user_load = $data['user'];
    $user_name = $user_load->name;

    $timestamp = REQUEST_TIME;

    // One day is customary.
    $timeout = variable_get('user_password_reset_timeout', 86400);

    // If admin picture exists, build token image.
    $user_load = user_load_by_name(variable_get('user_forms_help_user'));
    $admin_image_path = field_get_items('user', $user_load, 'field_user_picture');
    if (!empty($admin_image_path)) {
      $admin_pic_raw = field_view_value('user', $user_load, 'field_user_picture',
                       $admin_image_path[0], array(
                         'settings' => array(
                           'image_style' => 'thumbnail')));
    }
    else {
      $admin_pic_raw = '';
    }

    $admin_pic_thumb = drupal_render($admin_pic_raw);

    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'new_user_name':
          $replacements[$original] = $user_name;
          break;

        case 'time_until_expiration':
          $replacements[$original] = format_date($timestamp + $timeout);
          break;

        case 'admin_profile_picture':
          $replacements[$original] = !empty($admin_pic_thumb) ? $admin_pic_thumb : '';
          break;
      }
    }
  }
  return $replacements;
}


/**
 * Implements hook_menu().
 */
function user_forms_help_menu() {
  $items = array();

  $items['admin/config/people/user-forms-help'] = array(
    'title' => 'User Forms Help Settings',
    'description' => 'Configure settings for the User Forms Help Module form.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_forms_help_form'),
    'file' => 'user_forms_help.inc',
    'access arguments' => array('administer user forms help module'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['users/autocomplete'] = array(
    'page callback' => 'user_forms_help_autocomplete',
    'access arguments' => array('administer user forms help module'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Implements hook_permission().
 */
function user_forms_help_permission() {
  return array(
    'administer user forms help module' => array(
      'title' => t('Administer User Forms Help Module'),
      'description' => t('Perform Administration tasks for User Forms Help Module.'),
    ),
  );
}


/**
 * Build our user list for autocomplete.
 */
function user_forms_help_autocomplete($string) {
  $string = array(':s' => $string . '%');
  $result = db_query('SELECT * FROM users WHERE name LIKE :s', $string);

  $items = array();
  foreach ($result as $user) {
    $items[$user->name] = $user->name;
  }
  print drupal_json_encode($items);
}
