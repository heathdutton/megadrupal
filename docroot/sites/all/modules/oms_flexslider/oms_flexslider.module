<?php
/**
 * @file
 * Orbit Media Flexslider Block module.
 */

/**
 * Implements hook_permission().
 */
function oms_flexslider_permission() {
  return array(
    'administer oms flexslider' => array(
      'title' => t('Administer Orbit Media Cycle Blocks'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function oms_flexslider_menu() {
  // Admin  menu item.
  $items['admin/structure/oms_flexslider'] = array(
    'title' => 'Orbit Media Flexslider Blocks',
    'description' => 'Create Flexslider  Blocks.',
    'page callback' => 'oms_flexslider_admin_page',
    'file' => 'includes/oms_flexslider.admin.inc',
    'access arguments' => array(
      'administer oms flexslider',
    ),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 10,
  );
  return $items;
}
 

/**
 * Implements hook_libraries_info().
 */
function oms_flexslider_libraries_info() {
  $libraries['flexslider'] = array(
    'name' => 'Flexslider', 
    'vendor url' => 'http://www.woothemes.com/flexslider/', 
    'download url' => 'https://github.com/woothemes/FlexSlider/archive/version/2.2.zip', 
    'version arguments' => array(
      'file' => 'README.mdown',
      // Best practice: Document the actual version strings for later reference.
      // 1.x: Version 1.0 
      'pattern' => '/Version (\d+)/', 
      'lines' => 6,
    ), 
    'files' => array(
      'js' => array('jquery.flexslider.js'),
      'css' => array('flexslider.css'),
    ),
  );
  return $libraries;
}

/**
 * Query blocks lists.
 *
 * @param int $id
 *   optional user id
 *
 * @return array
 *   An array of user ids and their lists.
 */
function oms_flexslider_block_query($id = FALSE) {
  $result = db_select('oms_flexslider', 'of')->fields('of');
  if ($id) {
    $result->condition('fsid', $id, '=');
  }
  $results = $result->execute();
  return $results;
}

/**
 * Oms_flexslider_block_choices.
 *
 * @access public
 * @return array
 *   array of oms blocks
 */
function oms_flexslider_block_choices() {
  $results = array();
  $oms_blocks = oms_flexslider_block_query();
  foreach ($oms_blocks as $oms_block) {
    $results[$oms_block->fsid] = $oms_block->name;
  }
  if(count($results) == 0){
      drupal_set_message(t('You need to <a href="@url">create a flexslider block</a> before you
          can create content to attach to it.',
          array('@url' => url('/admin/structure/oms_flexslider'))),
      'error',
      FALSE
    );
  }
  return $results;
}


/**
 * Implements hook_block_info().
 */
function oms_flexslider_block_info() {
  $blocks = array();
  $oms_blocks = oms_flexslider_block_query();
  foreach ($oms_blocks as $oms_block) {
    $blocks[($oms_block->fsid)] = array(
      'info' => t('OMS Flexslider Block:@name', array('@name' => $oms_block->name)),
      'cache' => DRUPAL_NO_CACHE,
      'status' => 1,
      'region' => -1,
    );
  }
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function oms_flexslider_block_configure($delta = '') {
  include 'includes/oms_flexslider.block_form.inc';
  $form = oms_flexslider_block_configure_form($delta);
  return $form;
}

/**
 * Implements hook_block_save().
 */
function oms_flexslider_block_save($delta = '', $edit = array()) {
  $options = array();
  $bools = array(
    'reverse',
    'animationLoop',
    'smoothHeight',
    'slideshow',
    'pauseOnAction',
    'pauseOnHover',
    'useCSS',
    'touch',
    'video',
    'controlNav',
    'directionNav',
    'keyboard',
    'pausePlay',
  );
  $nums = array(
    'animationSpeed',
    'slideshowSpeed',
    'startAt',
  );
  foreach ($edit as $key => $value) {
    $test = strpos($key, 'flex_');
    if ($test !== FALSE) {
      $flexkey = str_replace('flex_', '', $key);
      if (in_array($flexkey, $bools)) {
        $value = ($value) ? TRUE : FALSE;
      }
      if (in_array($flexkey, $nums)) {
        $value = (int) $value;
      }
      $options[$flexkey] = $value;
    }
  }
  $json_options = drupal_json_encode($options);
  db_update('oms_flexslider')->fields(array(
    'slider_options' => $json_options,
  ))->condition('fsid', $delta)->execute();
}


/**
 * Implements hook_block_view().
 */
function oms_flexslider_block_view($delta = '') {
  $lib = libraries_load('flexslider');
  if(!$lib['installed']) {
    if (user_access('administer oms flexslider') || user_access('administrator')) {
      drupal_set_message(t('Flexslider has not been installed in the libraries folder.
            Please extract the flexslider code under your libraries folder.
            Name the felxslider folder flexslider.'),
        'warning',
        FALSE
      );
    }
    return;
  }
  $query = new EntityFieldQuery();
  $id = str_replace('oms_flexslider_block', '', $delta);
  $result = $query->entityCondition('entity_type', 'node')->propertyCondition('status', 1)
    ->fieldCondition('field_oms_slider_block', 'value', $id, '=')->execute();
  $nodes = array();
  $oms_blocks = oms_flexslider_block_query($id);
  foreach ($oms_blocks as $oms_block) {
    $passtoflex = $oms_block->slider_options;
    $block['subject'] = $oms_block->name;
  }
  if (count($result) > 0) {
    foreach ($result['node'] as $record) {
      $nodes[] = $record->nid;
    }
    $allslides = entity_load('node', $nodes);
    $block = array();
    $block['subject'] = t('test');
    $content = '';
    $passtoflex = json_decode($passtoflex);
    $content .= '<div class="flexslider" id="oms_flexslider-' . $id . '"><ul class="slides">';
    foreach ($allslides as $slide) {
      $content .= theme(array('oms_flexslider'), array('slide' => $slide));
    }
    $content .= '</ul></div>';
    $block['content']['#markup'] = $content;
    $id = 'oms_flexslider-' . $id;
    $block['content']['#attached']['library'][] = array('oms_flexslider', 'flexslider');
    $block['content']['#attached']['js'] = array(
        drupal_get_path('module', 'oms_flexslider') . '/js/addslider.js',
    );
    drupal_add_js(
      array(
        'oms_flexslider' => array(
          'flexvalues' => $passtoflex,
          'sliderid' => $id,
        ),
      ),
      'setting'
    );
    return $block;
  }
  elseif (user_access('administer oms flexslider') || user_access('administrator')) {
    drupal_set_message(t('You have not added any content to the @block flexslider block.', array('@block' => $block['subject'])),
      'warning',
      FALSE
    );
  }
  return;
}

/**
 * Implements hook_node_info().
 */
function oms_flexslider_node_info() {
  $items = array(
    'oms_slider_content_type' => array(
      'name' => t('OMS Slider Content Type'),
      'base' => 'node_content',
      'description' => 'Content Type to attach to OMS Flexslider blocks.',
      'has_title' => '1',
      'title_label' => t('Title'),
      'help' => '',
    ),
  );
  return $items;
}


/**
 * Implements hook_node_type_insert().
 */
function oms_flexslider_node_type_insert($content_type) {
  if ($content_type->type == 'oms_slider_content_type') {
    foreach (_oms_flexslider_installed_fields() as $field) {
      field_create_field($field);
    }

    // Create all the instances for our fields.
    foreach (_oms_flexslider_installed_instances() as $instance) {
      $instance['entity_type'] = 'node';
      field_create_instance($instance);
    }
  }
}


/**
 * Oms_flexslider_installed_fields.
 *
 * @access protected
 * @return void
 *   return field array
 */
function _oms_flexslider_installed_fields() {
  return array(
    'field_oms_slider_block' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_oms_slider_block',
      'foreign keys' => array(),
      'indexes' => array(
        'value' => array(
          0 => 'value',
        ),
      ),
      'locked' => '0',
      'module' => 'list',
      'settings' => array(
        'allowed_values_function' => 'oms_flexslider_block_choices',
      ),
      'translatable' => '0',
      'type' => 'list_text',
    ),
    'field_oms_slider_image' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_oms_slider_image',
      'foreign keys' => array(
        'fid' => array(
          'columns' => array(
            'fid' => 'fid',
          ),
          'table' => 'file_managed',
        ),
      ),
      'indexes' => array(
        'fid' => array(
          0 => 'fid',
        ),
      ),
      'locked' => '0',
      'module' => 'image',
      'settings' => array(
        'default_image' => 0,
        'uri_scheme' => 'public',
      ),
      'translatable' => '0',
      'type' => 'image',
    ),
    'field_oms_slider_text' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_oms_slider_text',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => '0',
      'module' => 'text',
      'settings' => array(),
      'translatable' => '0',
      'type' => 'text_long',
    ),
  );
}


/**
 * Oms_flexslider_installed_instances.
 *
 * @access protected
 * @return array
 *   field array
 */
function _oms_flexslider_installed_instances() {
  return array(
    'field_oms_slider_block' => array(
      'bundle' => 'oms_slider_content_type',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(),
          'type' => 'list_default',
          'weight' => 3,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_oms_slider_block',
      'label' => 'OMS Slider Block',
      'required' => 1,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_select',
        'weight' => '-1',
      ),
    ),
    'field_oms_slider_image' => array(
      'bundle' => 'oms_slider_content_type',
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'image',
          'settings' => array(
            'image_link' => '',
            'image_style' => '',
          ),
          'type' => 'image',
          'weight' => 1,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_oms_slider_image',
      'label' => 'OMS Slider Image',
      'required' => 1,
      'settings' => array(
        'alt_field' => 0,
        'default_image' => 0,
        'file_directory' => '',
        'file_extensions' => 'png gif jpg jpeg',
        'max_filesize' => '',
        'max_resolution' => '',
        'min_resolution' => '',
        'title_field' => 0,
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'image',
        'settings' => array(
          'preview_image_style' => 'thumbnail',
          'progress_indicator' => 'throbber',
        ),
        'type' => 'image_image',
        'weight' => '-3',
      ),
    ),
    'field_oms_slider_text' => array(
      'bundle' => 'oms_slider_content_type',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 2,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_oms_slider_text',
      'label' => 'OMS Slider Text',
      'required' => 0,
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'rows' => '5',
        ),
        'type' => 'text_textarea',
        'weight' => '-2',
      ),
    ),
  );
}


/**
 * Implements hook_theme().
 */
function oms_flexslider_theme($existing, $type, $theme, $path) {
  return array(
    'oms_flexslider' => array(
      'variables' => array(
        'slide' => NULL,
      ),
      'template' => 'oms_flexslider',
    ),
  );
}
