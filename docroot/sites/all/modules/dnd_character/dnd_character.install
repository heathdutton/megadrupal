<?php
/**
 * @file
 * TODO: Enter file description here.
 */

/**
 * Implements hook_schema().
 */
function dnd_character_schema() {
  $schema['dnd_character_race'] = array(
    // example (partial) specification for table "node"
    'description' => 'Race data table for D&D characters.',
    'fields' => array(
      'machine_name' => array(
        'description' => 'The machine name of the race.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'The race name.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'plural' => array(
        'description' => 'The plural form of the race name.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'ability_mods' => array(
        'description' => 'The ability mods of the race, serialized.',
        'type' => 'varchar',
        'length' => 64,
        'serialize' => TRUE,
        'not null' => TRUE,
        'default' => '',
      ),
      'speed' => array(
        'description' => 'The racial base speed.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 30,
      ),
      'size' => array(
        'description' => 'The intelligence attribute.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => 'M',
      ),
      'racial_traits' => array(
        'description' => 'Racial traits as a serialized array.',
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),

    ),
    'unique key' => array('machine_name'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function dnd_character_install() {
  variable_get('dnd_character_version', '3x');

  // Make sure a dnd_character content type doesn't already exist
  if (!in_array('dnd_character', node_type_get_names())) {
    $type = array(
      'type' => 'dnd_character',
      'name' => st('D&D character'),
      'base' => 'node_content',
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
      'title_label' => 'Character Name',
    );

    $type = node_type_set_defaults($type);
    node_type_save($type);
    dnd_character_add_fields($type);
  }
}

/**
 * Implements hook_uninstall().
 */
function dnd_character_uninstall() {
  node_type_delete('dnd_character');
  variable_del('dnd_character_version');
  field_purge_batch(200);
  drupal_flush_all_caches();
}

/**
 * Helper function to add the fields to the new content type.
 */
function dnd_character_add_fields($content_type) {
  module_load_include('inc', 'dnd_character', 'dnd_character.features.field');
  $fields = dnd_character_field_default_fields();

  foreach ($fields as $field_values) {
    $field_type = $field_values['field_config']['type'];
    $field = field_info_field($field_type);
    $instance = field_info_instance('node', $field_type, $content_type->type);

    if (empty($field)) {
      $field = field_create_field($field_values['field_config']);
    }

    if (empty($instance)) {
      $instance = field_create_instance($field_values['field_instance']);
    }
  }
}

