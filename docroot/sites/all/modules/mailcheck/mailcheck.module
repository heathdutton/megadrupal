<?php

/**
 * @file
 * Mailcheck enhances Drupals email forms, with a typo checker.
 */

/**
 * Implements hook_menu().
 */
function mailcheck_menu() {
  $items = array();
  $items['admin/config/user-interface/mailcheck'] = array(
    'title' =>  'Mailcheck configuration',
    'description' => 'Configure behavior of Mailcheck',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mailcheck_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'mailcheck.admin.inc',
    'weight' => 100,
  );
  return $items;
}

/**
 * Loads mailcheck files.
 *
 * @param boolean $show_in_des
 *   Boolean determine if the notice message should be shown in form description
 * @param boolean $lock
 *   Boolean determine if the form submit should be locked on typo
 */
function mailcheck_load($show_in_des = FALSE, $lock = FALSE) {
  $library = libraries_load('mailcheck');

  if (empty($library['loaded'])) {
    return FALSE;
  }

  $conf = mailcheck_get_config();
  $settings = array(
    'mailcheck' => array(
      'domains' => $conf['mailcheck_domains'],
      'tlds' => $conf['mailcheck_tlds'],
      'message' => $conf['mailcheck_message'],
      'shake' => $conf['mailcheck_shake'],
      'showInDescription' => $show_in_des,
      'lock' => $lock,
    ),
  );

  drupal_add_js($settings, 'setting');
}

function mailcheck_get_config() {
  $vars = &drupal_static(__FUNCTION__);

  if (isset($vars)) {
    return $vars;
  }

  $variable_vars = variable_get_info();
  foreach ($variable_vars as $var) {
    if ($var['module'] == 'mailcheck') {
      $vars[$var['name']] = variable_get_value($var);
    }
  }

  $split_keys = array(
    'mailcheck_domains',
    'mailcheck_tlds',
  );

  foreach ($split_keys as $key) {
    $vars[$key] = _mailcheck_split($vars[$key]);
  }

  return $vars;
}

/**
 * Implements hook_form_alter().
 */
function mailcheck_form_alter(&$form, &$form_state, $form_id) {

  $conf = mailcheck_get_config();

  // If disabled, don't do anything.
  if (!$conf['mailcheck_enabled']) {
    return;
  }

  // Check if we are on a webform email field.
  $form_in_arr = explode("_", $form_id);

  if ($form_in_arr[0] == 'webform' && $form_in_arr[1] == 'client' && $conf['mailcheck_webform']) {

    foreach ($form['submitted'] as &$newform) {

      if ($newform['#type'] != "webform_email") {
        continue;
      }

      $newform['#attributes'] = array('class' => array('mailcheck'));
      $show_type = $conf['mailcheck_show_type'];
      if ($show_type == 0) {
        $newform['#prefix'] = '<div class="mc-prefix mailcheck-action"></div>';
      }
      elseif ($show_type == 1) {
        $in_des = TRUE;
      }
      else {
        $newform['#suffix'] = '<div class="mc-suffix mailcheck-action"></div>';
      }

      mailcheck_load(isset($in_des), $conf['mailcheck_lock']);
    }
  }

  // Check if we are on the right form, also check for settings.
  if ($form_id == 'user_register_form' && $conf['mailcheck_register_show']) {
    $form['account']['mail']['#attributes'] = array('class' => array('mailcheck'));
    $show_type = $conf['mailcheck_show_type'];
    if ($show_type == 0) {
      $form['account']['mail']['#prefix'] = '<div class="mc-prefix mailcheck-action"></div>';
    }
    elseif ($show_type == 1) {
      $in_des = TRUE;
    }
    else {
      $form['account']['mail']['#suffix'] = '<div class="mc-suffix mailcheck-action"></div>';
    }

    mailcheck_load(isset($in_des), $conf['mailcheck_register_lock']);
  }
}

/**
 * Implements hook_libraries_info().
 */
function mailcheck_libraries_info() {
  $libraries['mailcheck'] = array(
    'name' => 'mailcheck',
    'vendor url' => 'https://github.com/mailcheck/mailcheck',
    'download url' => 'https://github.com/mailcheck/mailcheck/tarball/master',
    'version arguments' => array(
      'file' => 'mailcheck.js',
      'pattern' => '/v\s?([\d.]+(-\w+)?)/',
    ),
    'files' => array(
      'js' => array(
        'mailcheck.js' => array(
          'type' => 'file',
          'group' => JS_DEFAULT,
          'weight' => 60,
        ),
      ),
    ),
    'integration files' => array(
      'mailcheck' => array(
        'js' => array(
          'js/mailcheck-integration.js' => array(
            'group' => JS_DEFAULT,
            'weight' => 61,
          ),
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Get an array from a whitespace/comma delimited string.
 *
 * @param string $variable_name
 *
 * @return array
 */
function _mailcheck_split($value) {
  return preg_split('/[\s,]+/', $value);
}
