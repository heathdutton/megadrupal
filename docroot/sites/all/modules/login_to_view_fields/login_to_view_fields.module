<?php

/**
 * @file
 * login_to_view_fields module:
 * A simple module that adds a message "Login or register to view ABC" to each node where ABC is a field that is not visible to unauthenticated users.
 * If there is "login or register to post comments" message from comment.module, manage it too.
 */

define('LTVF_IN_LINKS', variable_get('login_to_view_fields_in_links', 0));
// 0 to place "login or register to (post comments and) view fields" above links area in a separate div and remove "login or register to post comments"
// 1 to replace "login or register to post comments" with "login or register to post comments and view fields" in links area
// No admin interface (yet).

/**
 * Implements hook_init().
 */
function login_to_view_fields_init() {
  drupal_add_css(drupal_get_path('module', 'login_to_view_fields') . '/login_to_view_fields.css');
}

/**
 * Implements hook_theme().
 */
function login_to_view_fields_theme() {
  return array(
    'view_fields_forbidden' => array(
//?      'render element' => 'form',
      'variables' => array('build' => NULL, 'forbidden_fields' => NULL, 'have_comment_link' => NULL),
    ),
  );
}

/**
 * Implements hook_node_view_alter().
 */
function login_to_view_fields_node_view_alter(&$build) {
  if (!empty($build['forbidden_fields'])) {
    $have_comment_link = !empty($build['links']['comment']['#links']['comment_forbidden']);
    $element = array(
      '#markup' => theme('view_fields_forbidden', array('build' => $build, 'forbidden_fields' => $build['forbidden_fields'], 'have_comment_link' => $have_comment_link)),
      '#weight' => 49,
    );

    if (LTVF_IN_LINKS && $have_comment_link) {
      $build['links']['comment']['#links']['comment_forbidden'] = $element;
    }
    elseif (LTVF_IN_LINKS) {
      $build['links']['login_to_view_fields'] = $element;
    }
    else {
      unset($build['links']['comment']['#links']['comment_forbidden']);
      $build['login_to_view_fields'] = $element;
    }
  }
}

/**
 * Implements hook_node_view().
 */
function login_to_view_fields_node_view($node, $view_mode = 'full') {
  if ($view_mode == 'full') {
//?    if ($view_mode != 'search_index' && $view_mode != 'search_result') {

    $forbidden_fields = array();
    foreach ($node->content as $key => $value) {
      if (is_array($value) && (0 === strpos($key, 'field_')) && empty($value['#access'])) {
        $value['#access_authenticated'] = array_key_exists(DRUPAL_AUTHENTICATED_RID, user_roles(TRUE, 'view ' . $value['#field_name']));
        $forbidden_fields[] = $value;
      }
    }
    $node->content['forbidden_fields'] = $forbidden_fields;
  }
}

/**
 * Implements theme_view_fields_forbidden().
 * Theme the fields output when user is not allowed to view them.
 * @param $node
 *  Node on which the fields would be displayed.
 * @param $forbidden_fields
 *  Array of fields that are forbidden (with '#access_authenticated' set for those that have access permission for authenticated user role).
 */
function theme_view_fields_forbidden($variables) {
  global $user;

  if (!$user->uid) {
    //$build = $variables['build'];
    $forbidden_fields = $variables['forbidden_fields'];
    $have_comment_link = $variables['have_comment_link'];
    $fields = array();
    foreach ($forbidden_fields as $field) {
      if (!empty($field['#access_authenticated'])) {
        $fields[] = $field['#title']; // should be already translated with t()
      }
    }
    if (!empty($fields)) {
      $destination = drupal_get_destination();

      if (variable_get('user_register', 1)) {
        // Users can register themselves.
        $html = t('<a href="@login">Login</a> or <a href="@register">register</a> to!comment view %fields',
          array(
            '@login' => url('user/login', array('query' => $destination)),
            '@register' => url('user/register', array('query' => $destination)),
            '%fields' => implode(', ', $fields),
            '!comment' => $have_comment_link ? t(' post comments and') : '',
          ));
      }
      else {
        // Only admins can add new users, no public registration.
        $html = t('<a href="@login">Login</a> to!comment view %fields',
          array(
            '@login' => url('user/login', array('query' => $destination)),
            '%fields' => implode(', ', $fields),
            '!comment' => $have_comment_link ? t(' post comments and') : '',
          ));
      }

      // Add div wrapper if we are not in links area
      if (!LTVF_IN_LINKS) {
        $div_class  = 'ltvf-fields-forbidden';
        $html = '<div class="' . $div_class . '">' . $html . '</div>';
      }
      return $html;
    }
  }
}

//END