\<?php
/**
 * @file
 * Install, update, and uninstall functions for the Yoast SEO for Drupal module.
 */

/**
 * Implements hook_requirements().
 */
function yoast_seo_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break during installation.
  $t = get_t();

  // We want to make sure the correct JavaScript files have been placed in the
  // libraries.
  if ($phase == 'runtime') {
    $requirements['yoast_seo'] = array(
      'title' => $t('Yoast SEO for Drupal'),
    );

    // Is installed correctly?
    $dependencies = _yoast_seo_requirements_getinstalledversion();
    if (!in_array(NULL, $dependencies)) {
      $requirements['yoast_seo'] += array(
        'value' => 'Installed',
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $description = '';
      foreach ($dependencies as $dependency => $version) {
        if ($dependency == 'js-text-analysis' && is_null($version)) {
          $description .= $t('Without the text analysis tool the Yoast SEO won\'t function properly. Please download it at <a href="@link">@link</a> and place it in the libraries folder.', array('@link' => 'https://github.com/Yoast/js-text-analysis'));
        }
        $description .= ' ';
      }

      $requirements['yoast_seo'] += array(
        'value' => $t('Not found'),
        'description' => $description,
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}

/**
 * Determines the version of the JS text analysis tool.
 */
function _yoast_seo_requirements_getinstalledversion() {
  module_load_include('module', 'yoast_seo');
  $dependencies = array(
    'js-text-analysis' => NULL,
  );

  foreach ($dependencies as $dependency => $version) {
    $file = '';
    if ($dependency == 'js-text-analysis') {
      $file = yoast_seo_library_path($dependency, 'local') . '/js/dist/yoast-seo-content-analysis.min.js';
    }

    $file_content = @file_get_contents($file);
    if ($file_content) {
      $dependencies[$dependency] = 'TBD';
    }
  }

  return $dependencies;
}

/**
 * Implements hook_schema().
 */
function yoast_seo_schema() {
  $schema['yoast_seo'] = array(
    'fields' => array(
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The entity type this data is attached to.',
      ),
      'entity_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The entity id this data is attached to.',
      ),
      'revision_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The revision_id for the entity object this data is attached to.',
      ),
      'language' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The language of the entity.',
      ),
      'focus_keyword' => array(
        'description' => 'The focus keyword for this entity.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => FALSE,
      ),
      'seo_status' => array(
        'description' => 'The SEO status in points.',
        'type' => 'int',
        'unsigned' => FALSE,
      ),
    ),
    'indexes' => array(
      'type_revision' => array('entity_type','revision_id'),
    ),
    'primary key' => array(
      'entity_type',
      'entity_id',
      'revision_id',
      'language',
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 *
 * @see metatag_install()
 */
function yoast_seo_install() {
  $entity_type = 'node';

  // Always enable the node entity.
  variable_set('yoast_seo_enable_' . $entity_type, TRUE);

  // Update each entity bundle too.
  $entity_info = entity_get_info($entity_type);
  if (!empty($entity_info['bundles'])) {
    foreach ($entity_info['bundles'] as $bundle_name => $bundle_info) {
      $fields = field_info_instances($entity_type, $bundle_name);
      $variable_name = 'yoast_seo_enable_' . $entity_type . '__' . $bundle_name;

      // Enable Yoast SEO for Drupal when the body field is present.
      if (isset($fields['body'])) {
        variable_set($variable_name, TRUE);
      }
      else {
        variable_set($variable_name, FALSE);
      }
    }
  }
}
