<?php

/**
 * This class tests the condition provided by context profile role module.
 */
class ContextProfileRoleTest extends DrupalWebTestCase {
  protected $profile = 'testing';

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Condition: profile page role',
      'description' => 'Test profile page role condition.',
      'group' => 'Context Profile Role',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp('context_profile_role');

    // Need to flush the cache.
    drupal_flush_all_caches();

    $this->user_1 = $this->drupalCreateUser(array(
        'access user profiles',
        'administer site configuration',
      ));
    $this->user_2 = $this->drupalCreateUser(array('access user profiles'));

    $role_1 = $this->extractUserRole($this->user_1);

    // Create test context.
    ctools_include('export');
    $this->context = ctools_export_new_object('context');
    $this->context->name = 'testcontext';
    $this->context->conditions = array(
      'profile_role' => array(
        'values' => array(
          $role_1 => $role_1,
        ),
      ),
    );
    $this->context->reactions = array(
      'debug' => array(
        'debug' => TRUE,
      ),
    );
    $saved = context_save($this->context);
    $this->assertTrue($saved, "Context 'testcontext' saved.");

  }

  /**
   * {@inheritdoc}
   */
  public function tearDown() {
    parent::tearDown();
    context_delete($this->context);
    user_delete($this->user_1->uid);
    user_delete($this->user_2->uid);
  }

  /**
   * Test function.
   *
   * Test that the condition passes when seeing a user profile with a role in
   * the condition's values.
   */
  public function testProfilePageWithRole() {
    // User 1's profile triggers the context.
    $this->drupalLogin($this->user_1);
    $this->drupalGet('user/' . $this->user_1->uid);
    $this->assertText('Active context: testcontext', "User profile page with the role triggers the condition.");
  }

  /**
   * Test function.
   *
   * Test that the condition does not pass when seeing a user profile with a
   * role in the condition's values.
   */
  public function testProfilePageWithoutRole() {
    // User 2's profile does not trigger the context.
    $this->drupalLogin($this->user_2);
    $this->drupalGet('user/' . $this->user_2->uid);
    $this->assertNoText('Active context: testcontext', "User profile page without the role does not trigger the condition.");
  }

  /**
   * Helper function to extract role from a test user.
   */
  public function extractUserRole($user) {
    // The role name is not reliably put on the user object. Retrieve from
    // user_roles().
    $role = '';
    foreach (array_keys($user->roles) as $rid) {
      if ($rid !== DRUPAL_AUTHENTICATED_RID) {
        $role = user_role_load($rid)->name;
        break;
      }
    }
    return $role;
  }

}
