<?php
// $Id: syndication_parser.module,v 1.9 2008/07/20 18:06:12 aronnovak Exp $

/**
 * @file
 *   Provide a parser for RSS, Atom and RDF feeds.
 * 
 *   Accepts the downloaded feed and returns with the parsed structure.
 *   It does not provide a user interface, the aggregator module uses this
 *   and other feed-related modules can also use this module.
 */

/**
 * Implementation of hook_help().
 */
function syndication_parser_help($path, $arg) {
  switch ($path) {
    case 'admin/help#syndication_parser':
      $output = '<P>'. t('The Syndication Parser module downloads and parses RSS, Atom and RDF feeds and provides them to other modules. This module is typically used with aggregator module.') .'</P>';
      return $output;
  }
}

/**
 * Implementation of hook_parse().
 * 
 * @param $op
 *   'parse' Parse the feed-nodes
 *   'info' Metadata about the processor
 * @param $feed_nodes
 *   Array of feed-nodes which contains the URL or the URL of the feed (for standalone usage)
 */
function syndication_parser_aggregator_parse($op, $feed_nodes = NULL) {
  switch ($op) {
    case 'parse':
      $standalone = FALSE;
      if (is_string($feed_nodes)) {
        $standalone = TRUE;
        $feed_nodes = array();
        $feed_nodes[] = aggregator_feed_create($feed_nodes, '');
      }
      $results = array();
      foreach ($feed_nodes as $key => $node) {
        if (isset($node->feed->url)) {
          if (drupal_function_exists('syndication_parser_download')) {
            $downloaded = syndication_parser_download($node->feed->url);
            if (isset($downloaded['error'])) {
              $result = $downloaded['error'];
            }
            else {
              @$data = simplexml_load_string($downloaded['data']);
              if (drupal_function_exists('_syndication_parser_format_detect')) {
                $format = _syndication_parser_format_detect($data);
                if ($format == FALSE) {
                  $result = t('The format could not be detected.');
                }
                $feed_handler = '_syndication_parser_' . $format;
                if (drupal_function_exists($feed_handler)) {
                  $result = $feed_handler($data);
                  $result->url = $downloaded['url'];
                }
              }
            }
            if ($standalone) {
              return $result;
            }
          }
        }
        $results[$key] = empty($result) ? FALSE : $result;
        $result = NULL;
      }
      return $results;
      break;
    case 'info':
      return array(
        'title' => t('Syndication Parser'),
        'description' => t('Parser for RSS, Atom and RDF feeds. Mainly based on SimpleXML.'),
      );
  }
}
