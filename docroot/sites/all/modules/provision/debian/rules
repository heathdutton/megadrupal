#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

%:
	dh $@

override_dh_install:
	cp -r "$(CURDIR)/db/"  "$(CURDIR)/dns/"  "$(CURDIR)/http/" "$(CURDIR)/"*.make "$(CURDIR)/platform/" "$(CURDIR)/Provision/" "$(CURDIR)/Symfony/" "$(CURDIR)"/*.inc "$(CURDIR)"/*.php "$(CURDIR)"/*.info "$(CURDIR)/debian/aegir3-provision/usr/share/drush/commands/provision/"

	# We need this nasty hack, because we added directories.
	# TODO: this is really lame, there must be a better way to do this?
	if [ -d "$(CURDIR)/provision-tests" ]; then cp -r "$(CURDIR)/provision-tests/" "$(CURDIR)/debian/aegir3-provision/usr/share/drush/commands/provision/"; fi
	if [ -d "$(CURDIR)/subdirs" ]; then cp -r "$(CURDIR)/subdirs/" "$(CURDIR)/debian/aegir3-provision/usr/share/drush/commands/provision/"; fi

	cp "$(CURDIR)/debian/aegir3-provision.lintian" "$(CURDIR)/debian/aegir3-provision/usr/share/lintian/overrides/aegir3-provision"

override_dh_installinit:
	dh_installinit --name=hosting-queued

DOMAIN?=$(shell hostname -f)
KEY?="-kjenkins@$(DOMAIN)"

# this builds a debian package based on what the current branches are
# this usually tests the latest release
jenkins-build-official:
	git-buildpackage -b --git-upstream-branch=origin/upstream --git-debian-branch=origin/debian --git-ignore-branch -kjenkins@ci.aegirproject.org

# the version from the changelog, add the git hash
version=$(shell sed -ne 's/^[^(]*(\([^)]*\)).*/\1/;1p' debian/changelog)
commit=$(shell git log -n 1 --oneline | sed 's/ .*$$//')

# the version we're building with jenkins
jenkins_version=${version}+${BUILD_NUMBER}.${commit}

# debug for the above
show-version:
	@echo ${version}

# this builds a debian package but first updates the branches to follow the latest 2.x branch
# this assumes you are on a "debian" branch (of course)
jenkins-build-auto:
	dch -D unstable -v ${jenkins_version} "automatic jenkins build ${BUILD_TAG} for commit ${commit}"
	git commit -m"dummy commit for jenkins ${BUILD_TAG} autobuild" debian/changelog
	git-buildpackage -b ${KEY}

# helper to debug the above
show-jenkins-build-auto:
	@echo would build version ${jenkins_version} with key ${KEY}
