<?php
/*******************************************************************************
 * @file
 * Implementation of hook_install().
 */
function tripal_analysis_unigene_install() {
   // create the module's data directory
   tripal_create_files_dir('tripal_analysis_unigene');

   // We need to register to tripal_analysis module so it can provide a control
   // for our unigene result. Basically the registration is done by inserting
   // required information into the {tripal_analysis} table.
   tripal_register_analysis_child('tripal_analysis_unigene');

   if (db_table_exists('unigene_libraries_mview')) {
      $sql = "DROP TABLE unigene_libraries_mview";
      chado_query($sql);
   }
   if (db_table_exists('unigene_mview')) {
      $sql = "DROP TABLE unigene_mview";
      chado_query($sql);
   }  

   tripal_analysis_unigene_add_cvterms();
   tripal_analysis_unigene_add_organism_unigene_mview();
}

/**
*
*/
function tripal_analysis_unigene_add_cvterms() {
   tripal_insert_cvterm(array(
     'name' => 'unigene_version', 
     'def' => 'The version number for the unigene (e.g. v1, v2, etc...) ',
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
     'name' => 'analysis_unigene_name',
     'def' => 'The name for a unigene.',
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
     'name' => 'analysis_unigene_num_contigs',
     'def' => 'The number of contigs in the unigene assembly',
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
     'name' => 'analysis_unigene_num_singlets',
     'def' => 'The number of singlets remaining in the unigene assembly',
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
     'name' => 'analysis_unigene_num_clusters', 
     'def' => 'The number of clusters in the unigene assembly', 
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
     'name' => 'analysis_unigene_num_reads', 
     'def' => 'The number of reads, after filtering, used as input for the assembly', 
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
     'name' => 'analysis_unigene_avg_length', 
     'def' => 'The average contig length', 
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
     'name' => 'singlet', 
     'def' => "Indicates the feature is a singlet in a ".
       "specific unigene version (e.g. v1, v2, etc...). The value specified ".
       "should match that of the unigene_version", 
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));

   // Add cveterm 'analysis_unigene_settings' for inserting into analysisprop table   
   tripal_insert_cvterm(array(
     'name' => 'analysis_unigene_settings', 
     'def' => 'Settings of a unigene analysis', 
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
   tripal_insert_cvterm(array(
      'name' => 'singlet_in_analysis', 
      'def' => 'Label the feature as a singlet of specified analysis. The value ' .
        'is the name of a unigene analysis. More importantly, '.
        'the analysis_id of said analysis is inserted to the featureprop table as rank', 
     'cv_name' => 'tripal',
     'db_name' => 'tripal',
   ));
}
/**
*
*/
function tripal_analysis_unigene_add_organism_unigene_mview() {

   $view_name = 'organism_unigene_mview';
   $comment = t('This view is for associating an organism to a unigene analysis.');

   // Drop the MView table if it exists
   $mview_id = tripal_get_mview_id($view_name);
   if ($mview_id) {
      tripal_delete_mview($mview_id);
   }
   
   $sql =  "
     SELECT DISTINCT A.analysis_id, O.organism_id 
     FROM Analysis A 
       INNER JOIN analysisprop AP    ON AP.analysis_id = A.analysis_id 
       INNER JOIN cvterm CVT         ON AP.type_id = CVT.cvterm_id 
       INNER JOIN cv CV              ON CV.cv_id = CVT.cv_id 
       INNER JOIN analysisfeature AF ON A.analysis_id = AF.analysis_id 
       INNER JOIN feature F          ON AF.feature_id = F.feature_id 
       INNER JOIN organism O         ON F.organism_id = O.organism_id 
     WHERE CV.name = 'tripal' AND CVT.name='analysis_unigene_name'
   ";
   
  // the schema array for describing this view
  $schema = array(
    'table' => $view_name,
    'description' => $comment,
    'fields' => array(
      'analysis_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'organism_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'organism_unigene_mview_indx0' => array('analysis_id'),
      'organism_unigene_mview_indx1' => array('organism_id'),
    ),
    'foreign keys' => array(
      'analysis' => array(
        'table' => 'analysis',
        'columns' => array(
          'analysis_id' => 'analysis_id',
        ),
      ),
      'organism' => array(
        'table' => 'organism',
        'columns' => array(
          'organism_id' => 'organism_id',
        ),
      ),
    ),
  );

   tripal_add_mview($view_name, 'tripal_analysis_unigene', $schema, $sql, $comment);
}
/**
 * Implementation of hook_uninstall().
 */
function tripal_analysis_unigene_uninstall() {
   // Remove materialized views
   $mview = tripal_get_mview_id('organism_unigene_mview');
   if ($mview) {
      tripal_delete_mview($mview_id);
   }
   // Unregister the child analysis.
   tripal_unregister_analysis_child('tripal_analysis_unigene');

   // Delete module's variables from variables table.
   db_query("DELETE FROM {variable} WHERE name=:name",
            array(':name' => 'tripal_analysis_unigene_setting'));
   
}

/**
 * Implementation of hook_requirements(). Make sure 'Tripal Core' and 'Tripal
 * Analysis' are enabled before installation
 */
function tripal_analysis_unigene_requirements($phase) {
   $requirements = array();
   if ($phase == 'install') {
      if (!function_exists('tripal_create_moddir') || !function_exists('tripal_register_analysis_child')) {
         $requirements ['tripal_analysis_unigene'] = array(
            'title' => "tripal_analysis_unigene",
            'value' => "error. Some required modules are just being installed. Please try again.",
            'severity' => REQUIREMENT_ERROR,
         );
      }
   }
   return $requirements;
}