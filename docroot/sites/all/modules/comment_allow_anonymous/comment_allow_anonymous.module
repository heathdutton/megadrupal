<?php
// $Id: comment_allow_anonymous.module,v 1.1 2010/11/04 09:08:04 chx Exp $
/**
 * @file comment_allow_anonymous.module
 *
 * Adds a disallowed for anonymous option per node type.
 */

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function comment_allow_anonymous_form_node_type_form_alter(&$form) {
  $form['comment']['comment_anonymous']['#options'] = array(-1 => t('Anonymous posting is disallowed')) + $form['comment']['comment_anonymous']['#options'];
}

/**
 * Implementation of hook_node_view_alter().
 */
function comment_allow_anonymous_node_view_alter(&$build) {
  if (_comment_allow_anonymous_deny($build['#node'])) {
    unset($build['links']['#links']['comment-add'], $build['links']['#links']['comment-reply'], $build['comments']['comment_form']);
  }
}

/**
 * Implementation of hook_menu_alter().
 */
function comment_allow_anonymous_menu_alter(&$items) {
  $items['comment/reply/%node']['access callback'] = 'comment_allow_anonymous_comment_reply_access_callback';
  $items['comment/reply/%node']['access arguments'] = array(2);
}

/**
 * Central helper function.
 */
function _comment_allow_anonymous_deny($node) {
  return !$GLOBALS['user']->uid && user_access('post comments') && variable_get('comment_anonymous_' . $node->type, COMMENT_ANONYMOUS_MAYNOT_CONTACT) == -1;
}

/**
 * Menu access callback for comment/reply/% pages.
 */
function comment_allow_anonymous_comment_reply_access_callback($node) {
  return _comment_allow_anonymous_deny($node) ? FALSE : node_access('view', $node);
}
