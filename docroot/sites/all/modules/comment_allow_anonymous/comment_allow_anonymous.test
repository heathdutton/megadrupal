<?php

class CommentAllowAnonymousTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Comment allow anonymous',
      'description' => 'Test anonymous comment posting.',
      'group' => 'Comment',
    );
  }

  function setUp() {
    parent::setup('comment_allow_anonymous');
  }

  /**
   * Test comment interface.
   */
  function testCommentAllowAnonymous() {
    $admin_user = $this->drupalCreateUser(array('administer content types', 'administer comments', 'administer permissions'));
    // Anonymous by default can post if permissions allow.
    $this->drupalLogin($admin_user);
    $edit = array();
    foreach (array('post comments', 'skip comment approval') as $permission) {
      $edit[DRUPAL_ANONYMOUS_RID . '[' . $permission . ']'] = $permission;
    }
    $this->drupalPost('admin/people/permissions', $edit, t('Save permissions'));
    $this->drupalLogout();

    $node = $this->drupalCreateNode(array('type' => 'article', 'promote' => 1, 'uid' => $admin_user->uid));
    $body_field_name = 'comment_body[' . LANGUAGE_NONE . '][0][value]';
    $subject = $this->randomName();
    $body = $this->randomName();
    $edit = array(
      'subject' => $subject,
      $body_field_name => $body,
    );
    $this->drupalPost('node/' . $node->nid, $edit, t('Save'));
    $this->assertLink($subject, 0, t('Subject found'));
    // This can't be the form again because of the previous link assert.
    $this->assertRaw($body, t('Body found'));

    // Disable commenting.
    $this->drupalLogin($admin_user);
    $edit = array('comment_anonymous' => -1);
    $this->drupalPost('admin/structure/types/manage/article', $edit, t('Save content type'));
    $this->drupalLogout();

    // Check that nothing works: no 'add new comments' link anywhere, no
    // comment form, no separate page.
    $this->drupalGet('');
    $this->assertRaw($node->title);
    $this->assertNoLink(t('Add new comment'), t('No add new comment on the homepage.'));
    $this->drupalGet('node/' . $node->nid);
    $this->assertNoField($body_field_name, t('Comment body field not found.'));
    $this->assertNoField('edit-subject', t('Subject field not found.'));
    $this->assertNoLink(t('Add new comment'), t('No reply link found.'));
    $this->assertNoLink(t('Reply'), t('No reply link found.'));
    $this->drupalGet('comment/reply/'. $node->nid);
    $this->assertResponse(403, t('Access denied.'));
  }
}
