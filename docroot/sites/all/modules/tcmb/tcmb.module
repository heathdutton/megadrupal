<?php
/**
 * @file
 * Main module file for TCMB module.
 * Retrieves daily exchange rates http://www.tcmb.gov.tr
 */

/* 
 * Implements hook_cron().
 */

function tcmb_cron() {
  if (date('N') <= 5) {
    if (strtotime(date('H:i')) >= strtotime('15:30')) {
      $tcmb_currency_xml = new Domdocument;
      $tcmb_currency_xml->load('http://www.tcmb.gov.tr/kurlar/today.xml');
      $tcmb_currency_codes = tcmb_currency_codes();
      foreach ($tcmb_currency_codes as $currency_code => $currency_name) {
        $tcmb_xpath = new DOMXPath($tcmb_currency_xml);
        $query = "//Currency[@CurrencyCode='$currency_code']";
        $results = $tcmb_xpath->query($query);
        $created = $tcmb_currency_xml->getElementsByTagName('Tarih_Date')->item(0)->getAttribute('Tarih');
        $updated = date('Y-m-d', strtotime($created));
        $currency = db_insert('tcmb')
          ->fields(
            array(
              'currency_name' => $tcmb_currency_codes[$currency_code],
              'currency_code' => $currency_code,
              'updated' => $updated,
              'buying' => $results->item(0)->getElementsByTagName('ForexBuying')->item(0)->nodeValue,
              'selling' => $results->item(0)->getElementsByTagName('ForexSelling')->item(0)->nodeValue,
            )
          )
          ->execute();
      }
    }
  }
  watchdog('tcmb', 'Currency rates for @created have been stored', array('@created' => date('d-m-Y', strtotime($created))), WATCHDOG_INFO);
}

/**
 * Implements hook_help().
 */

function tcmb_help($path, $arg) {
  switch ($path) {
  case 'admin/help#tcmb':
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('Tcmb is a module that retrieves daily currency exchange rates from TCMB (Turkish Republic Central Bank).') . '</p>';
    $output .= '<p>' . t('With the version 2.0, Tcmb module is getting gold prices as well.') . '</p>';
    $output .= '<h3>' . t('How is it used?') . '</h3>';
    $output .= '<p>' . t('Just go to <a href="@tcmb_settings">Tcmb Settings page</a> to set some currency codes, then head to <a href="@_lock_settings">block settings</a> and move the Tcmb block to a region of your choice.', array('@tcmb_settings' => url('/admin/config/system/tcmb-settings'), '@block_settings' => url('admin/structure/blocks')));
    return $output;
  }
}

/**
 * Implements hook_permission().
 */

function tcmb_permission() {
  return array(
    'administer Tcmb' => array(
      'title' => t('administer Tcmb'),
      'description' => t('Perform administration tasks for Tcmb'),
    ),
  );
}

/**
 * Implements hook_menu().
 */

function tcmb_menu() {
  $items['admin/config/system/tcmb-settings'] = array(
    'title' => 'Tcmb General Settings',
    'description' => 'Configure Tcmb module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcmb_currency_settings_form'),
    'access arguments' => array('administer Tcmb'),
    'weight' => -19,
  );
  $items['admin/config/system/tcmb-import'] = array(
    'title' => 'Import Tcmb data',
    'description' => 'Import data from TCMB',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcmb_import_data_form'),
    'access arguments' => array('administer Tcmb'),
    'weight' => -18,
  );
  $items['admin/config/system/tcmb-settings/currency'] = array(
    'title' => 'Currency settings',
    'description' => 'Currency',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcmb_currency_settings_form'),
    'access arguments' => array('administer Tcmb'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/system/tcmb-settings/gold'] = array(
    'title' => 'Gold settings',
    'description' => 'Configure gold settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcmb_gold_settings_form'),
    'access arguments' => array('administer Tcmb'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/system/tcmb-settings/other-settings'] = array(
    'title' => 'Other settings',
    'description' => 'Configure other settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcmb_other_settings_form_currency'),
    'access arguments' => array('administer Tcmb'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/system/tcmb-settings/other-settings/currency'] = array(
    'title' => 'Currency Settings',
    'description' => 'Configure other settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcmb_other_settings_form_currency'),
    'access arguments' => array('administer Tcmb'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/system/tcmb-settings/other-settings/gold'] = array(
    'title' => 'Gold Settings',
    'description' => 'Configure other settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcmb_other_settings_form_gold'),
    'access arguments' => array('administer Tcmb'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_block_info().
 */

function tcmb_block_info() {
  $block['tcmb'] = array(
    'info' => t('Tcmb: currency'),
  );
  $block['gold'] = array(
    'info' => t('Tcmb: gold'),
  );
  return $block;
}

/**
 * Implements hook_block_view().
 */

function tcmb_block_view($delta = '') {
  $block = array();
  switch ($delta) {
  case 'tcmb':
    $records = db_select('tcmb', 't')
      ->fields('t', array(
        'updated',
      ))
      ->orderBy('updated', 'DESC')
      ->execute()
      ->fetchAssoc();
    $created = $records['updated'];
    $updated = date('d.m.Y', strtotime($created));
    $tcmb_block_title = variable_get('tcmb_block_title', t('TCMB rates for @tcmb_currency_date', array('@tcmb_currency_date' => $updated)));
    if (variable_get('tcmb_show_currency_block_title', NULL)) {
      $block['subject'] = (!empty($tcmb_currency_block_title)) ? $tcmb_block_title : t('TCMB rates for @tcmb_currency_date', array('@tcmb_currency_date' => $updated));
    }
    $block['content'] = tcmb_get_currency_data();
    cache_set("tcmb_currency_date", $updated, "cache", time() + 60 * 60 * 12);
    break;
  case 'gold':
    $tcmb_gold_xml = new DomDocument();
    $load = @$tcmb_gold_xml->load('http://xml.altinkaynak.com.tr/altin.xml');
    $tcmb_gold_xpath = new DOMXPath($tcmb_gold_xml);
    $query = "//DOVIZ[ADI='Tarih']";
    $results = $tcmb_gold_xpath->query($query);
    $tcmb_gold_date = $results->item(0)->getElementsByTagName('ALIS')->item(0)->nodeValue;
    $tcmb_show_gold_block_title = variable_get('tcmb_show_gold_block_title', NULL);
    $tcmb_gold_block_title = variable_get('tcmb_gold_block_title', t('Tcmb gold rates for @tcmb_gold_date', array('@tcmb_gold_date' => $tcmb_gold_date)));
    if ($tcmb_show_gold_block_title) {
      $block['subject'] = (!empty($tcmb_gold_block_title)) ? $tcmb_gold_block_title : t('Gold prices for @tcmb_gold_date', array('@tcmb_gold_date' => $tcmb_gold_date));
    }
    $block['content'] = tcmb_get_gold_data();
    cache_set("tcmb_gold_date", $tcmb_gold_date, "cache", time() + 60 * 60 * 12);
    break;
  }
  return $block;
}

/**
 * Generates table for TCMB currency codes.
 */

function tcmb_get_currency_data() {
  $tcmb_show_currency_block_footer = variable_get('tcmb_show_currency_block_footer', NULL);
  $tcmb_currency_block_footer = variable_get('tcmb_currency_block_footer', t('TCMB exchange rates are updated once a day at 15:30, on weekdays.'));
  $header = array(t('Currency'), t('Buying'), t('Selling'));
  $rows = tcmb_get_cached_currency_data();
  $output = theme('table', array('header' => $header, 'rows' => $rows));
  $tcmb_currency_codes = variable_get('tcmb_currency_codes', NULL);
  if ($tcmb_show_currency_block_footer) {
    if (!array_filter($tcmb_currency_codes)) {
      $output .= t('You need to set at least one currency code in the Tcmb Settings page.');
    } 
    elseif (array_filter($tcmb_currency_codes)) {
      $output .= (!empty($tcmb_currency_block_footer)) ? $tcmb_currency_block_footer : t('TCMB exchange rates are updated once a day on 15:30, on weekdays.');
    } 
    else {
      $output .= '';
    }
  }
  if (!array_filter($tcmb_currency_codes)) {
    drupal_set_message(t('You need to set at least one currency code in Tcmb Settings page'), 'error');
  } 
  /*
  elseif (array_filter($tcmb_currency_codes)) {
    $output .= render(drupal_get_form('tcmb_other_dates_form'));
  }
   */
  else {
    $output .= '';
  }
  return $output;
}

/**
 * Generates table for gold prices.
 */

function tcmb_get_gold_data() {
  $tcmb_show_gold_block_footer = variable_get('tcmb_show_gold_block_footer', NULL);
  $tcmb_gold_block_footer = variable_get('tcmb_gold_block_footer', t('Gold prices are updated every 5 minutes on weekdays, until 19:30.'));
  $header = array(t('Gold code'), t('Buying'), t('Selling'));
  $rows = tcmb_get_cached_gold_data();
  $output = theme('table', array('header' => $header, 'rows' => $rows));
  $tcmb_gold_codes = variable_get('tcmb_gold_codes', NULL);
  if ($tcmb_show_gold_block_footer) {
    if (!array_filter($tcmb_gold_codes)) {
      $output .= t('You need to set at least one gold code in the Tcmb settings page.');
    } 
    elseif (array_filter($tcmb_gold_codes)) {
      $output .= (empty($tcmb_gold_block_footer)) ? $tcmb_gold_block_footer : t('Gold prices are updated every 5 minutes on weekdays, until 19:30.');
    } 
    else {
      $output .= '';
    }
    return $output;
  }
}

/**
 * Caches TCMB data.
 * @param $reset
 *   Checks if data has been cached before. Defaults to FALSE.
 * @return
 *   TRUE if data has been cached, FALSE if not.
 */

function tcmb_get_cached_currency_data() {
  $cache = cache_get("tcmb_currency_output", "cache");
  $rows = array();
  if ($cache && isset($cache->data) && $cache->expire < time()) {
    $rows = $cache->data;
  }
  else {
    $rows = tcmb_currency_retrieve_rows();
    cache_set("tcmb_currency_output", $rows, "cache", time() + 60 * 60 * 12);
  }
  return $rows;
}

/**
 * Caches gold data.
 * @param $reset
 * Checks if data has been cached before. Defaults to FALSE.
 * @return
 * TRUE if data has been cached, FALSE if not.
 */

function tcmb_get_cached_gold_data() {
  $cache = cache_get("tcmb_gold_output", "cache");
  $rows = array();
  if ($cache && isset($cache->data) && $cache->expire < time()) {
    $rows = $cache->data;
  }
  else {
    $rows = tcmb_gold_retrieve_rows();
    cache_set("tcmb_gold_output", $rows, "cache", time() + 60 * 60 * 12);
  }
  return $rows;
}
/**
 * Displays TCMB currency XML data in the generated table.
 */

function tcmb_currency_retrieve_rows() {
  $records = db_select('tcmb', 't')
    ->fields('t', array(
      'updated',
    ))
    ->range(0, 1)
    ->orderBy('updated', 'DESC')
    ->execute()
    ->fetchAssoc();
  $updated = date('Y-m-d', strtotime($records['updated']));
  $tcmb_currency_codes = variable_get('tcmb_currency_codes', array());
  $records = db_select('tcmb', 't')
    ->fields('t', array(
      'currency_name',
      'currency_code',
      'updated',
      'buying',
      'selling',
    ))
    ->condition('currency_code', $tcmb_currency_codes, 'IN')
    ->condition('updated', $updated)
    ->groupBy('currency_code');
  $results = $records->execute()->fetchAll(PDO::FETCH_ASSOC);
  $rows = array();
  foreach ($results as $result) {
    $title = $result['currency_name'];
    $image = drupal_get_path('module', 'tcmb') . '/png/' . strtolower($result['currency_code']) . '.png';
    $rows[] = array('data' => array(theme('image', array('path' => $image, 'alt' => $title, 'title' => $title)) . " " . $result['currency_code'], $result['buying'], $result['selling']));
  }
  if (isset($rows)) { 
    return $rows;
  }
}

/**
 * Displays gold prices XML data in the generated table.
 */

function tcmb_gold_retrieve_rows() {
  $tcmb_gold_xml = new DomDocument();
  $tcmb_gold_xml->load('http://xml.altinkaynak.com.tr/altin.xml');
  $tcmb_gold_xpath = new DOMXPath($tcmb_gold_xml);
  $gold = array();
  $golden = tcmb_gold_codes();
  $gold_codes = variable_get('tcmb_gold_codes', $gold);
  if (!$gold_codes) {
    return;
  }
  foreach ($gold_codes as $tcmb_gold_code) {
    if (!$tcmb_gold_code) {
      continue;
    }
    $query = "//DOVIZ[ADI='$tcmb_gold_code']";
    $title = $golden[$tcmb_gold_code];
    $image = drupal_get_path('module', 'tcmb') . '/png/gold.png';
    $results = $tcmb_gold_xpath->query($query);
    if ($results->length < 1) {
      drupal_set_message(t('A problem occurred. Please try again later.'));
    } 
    else {
      $buy = $results->item(0)->getElementsByTagName('ALIS')->item(0)->nodeValue;
      $sell = $results->item(0)->getElementsByTagName('SATIS')->item(0)->nodeValue;
      $rows[] = array('data' => array(theme('image', array('path' => $image, 'alt' => $title, 'title' => $title)) . " " . check_plain($title), check_plain($buy), check_plain($sell)));
    }
    if (isset($rows)) {
      return $rows;
    }
  }
}

/**
 * Generates the currency code settings form.
 */

function tcmb_currency_settings_form() {
  $form = array();
  $form['tcmb_currency_codes'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Currency Codes'),
    '#default_value' => variable_get('tcmb_currency_codes', array()),
    '#options' => tcmb_currency_codes(),
  );
  return system_settings_form($form);
}

function tcmb_gold_settings_form() {
  $form = array();
  $form['tcmb_gold_codes'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Gold prices'),
    '#default_value' => variable_get('tcmb_gold_codes', array()),
    '#options' => tcmb_gold_codes(),
  );
  return system_settings_form($form);
}

function tcmb_other_settings_form_currency() {
  $records = db_select('tcmb', 't')
    ->fields('t', array(
      'updated',
    ))
    ->orderBy('updated', 'DESC')
    ->execute()
    ->fetchAssoc();
  $created = $records['updated'];
  $updated = date('d.m.Y', strtotime($created));
  $form = array();
  $form['tcmb_currency_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Tcmb currency settings.'),
  );
  $form['tcmb_currency_settings']['tcmb_show_currency_block_title'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show block title?'),
    '#default_value' => variable_get('tcmb_show_currency_block_title', 1),
  );
  $form['tcmb_currency_settings']['tcmb_currency_block_title'] = array(
    '#type' => 'textarea',
    '#title' => t('The new block title'),
    '#description' => t('You can set the new block title here.'),
    '#default_value' => variable_get('tcmb_block_title', t('TCMB exchange rates for @tcmb_currency_date', array('@tcmb_currency_date' => $updated))),
    '#states' => array(
      'visible' => array(
        ':input[name="tcmb_show_currency_block_title"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['tcmb_currency_settings']['tcmb_show_currency_block_footer'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show footer?'),
    '#default_value' => variable_get('tcmb_show_currency_block_footer', 1),
  );
  $form['tcmb_currency_settings']['tcmb_currency_block_footer'] = array(
    '#type' => 'textarea',
    '#title' => t('The new footer'),
    '#description' => t('You can set the new block title here.'),
    '#default_value' => variable_get('tcmb_currency_block_footer', t('TCMB exchange rates are updated at 15:30, on weekdays.')),
    '#states' => array(
      'visible' => array(
        ':input[name="tcmb_show_currency_block_footer"]' => array('checked' => TRUE),
      ),
    ),
  );
  return system_settings_form($form);
}

/*
 * Form for data importing settings.
 */
function tcmb_import_data_form($form, &$form_state) {
  $form['tcmb_import_data']['dropdown'] = array(
    '#type' => 'select',
    '#title' => t('Select the time span TCMB data will be imported'),
    '#description' => t('You can select the time span TCMB data will be imported.'),
    '#default_value' => variable_get('tcmb_import_date_span'),
    '#options' => array(
      '3 months' => t('3 months'),
      '6 months' => t('6 months'),
      '9 months' =>t('9 months'),
      '1 year' => t('1 year'),
    ),
  );
  $form['tcmb_import_data']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#weight' => 1,
  );
  return $form;
}

/*
 * Submit handler for import settings form.
 */
function tcmb_import_data_form_submit($form, &$form_state) {
  variable_set('tcmb_import_date_span', $form_state['values']['dropdown']);
  $x = strtotime($form_state['values']['dropdown'] . " ago");
  $today = strtotime("today");
  while($x < $today) {
    $x = strtotime("+1 day", $x);
    $dates[] = "http://www.tcmb.gov.tr/kurlar/" . date('Ym/dmY', $x) . ".xml";
  }
  $batch = array(
    'operations' => array(array('tcmb_get_mass_data_batch', array($dates))),
    'finished' => 'tcmb_get_mass_data_finished',
    'init_message' => t('Starting to get data.'),
    'title' => t('Getting data from TCMB.'),
    'progress_message' => t('Progressing @current out of @total'),
    'error_message' => t('There was an error getting data'),
  );
  batch_set($batch);
  // Clears caches
  drupal_flush_all_caches();
}

/* 
 * Renders the other settings for gold form.
 */
function tcmb_other_settings_form_gold() {
  $tcmb_gold_xml = new DomDocument();
  $load = @$tcmb_gold_xml->load('http://xml.altinkaynak.com.tr/altin.xml');
  $tcmb_gold_xpath = new DOMXPath($tcmb_gold_xml);
  $query = "//DOVIZ[ADI='Tarih']";
  $results = $tcmb_gold_xpath->query($query);
  $tcmb_gold_date = $results->item(0)->getElementsByTagName('ALIS')->item(0)->nodeValue;
  $form = array();
  $form['tcmb_gold_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Tcmb gold settings.'),
  );
  $form['tcmb_gold_settings']['tcmb_show_gold_block_title'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show block title?'),
    '#default_value' => variable_get('tcmb_show_gold_block_title', array()),
  );
  $form['tcmb_gold_settings']['tcmb_currency_block_title'] = array(
    '#type' => 'textarea',
    '#title' => t('The new block title'),
    '#description' => t('You can set the new block title here.'),
    '#default_value' => variable_get('tcmb_gold_block_title', t('TCMB gold rates for @tcmb_gold_date', array('@tcmb_gold_date' => $tcmb_gold_date))),
    '#states' => array(
      'visible' => array(
        ':input[name="tcmb_show_gold_block_title"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['tcmb_gold_settings']['tcmb_show_gold_block_footer'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show footer?'),
    '#default_value' => variable_get('tcmb_show_gold_block_footer', array()),
  );
  $form['tcmb_gold_settings']['tcmb_gold_block_footer'] = array(
    '#type' => 'textarea',
    '#title' => t('The new footer'),
    '#description' => t('You can set the new block title here.'),
    '#default_value' => variable_get('tcmb_gold_block_footer', t('TCMB gold rates are updated every 5 minutes on weekdays')),
    '#states' => array(
      'visible' => array(
        ':input[name="tcmb_show_gold_block_footer"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['tcmb_gold_settings']['tcmb_store_past_gold_rates'] = array(
    '#type' => 'checkbox',
    '#title' => t('Store also past values?'),
    '#states' => array(
      'visible' => array(
        ':input[name="tcmb_store_gold_rates_in_db"]' => array('checked' => TRUE),
      ),
    ),
  );
  return system_settings_form($form);
}

/*
 * The form element for other dates.
 */
function tcmb_other_dates_form($form_state) {
  $form['tcmb_pick_date'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter date'),
    '#description' => t('E.g., @today', array('@today' => date('d-m-Y'))),
    '#size' => 10,
    '#states' => array(
      'visible' => array(
        ':input[name="tcmb_show_other_dates_form"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Show me that date'),
    '#states' => array(
      'visible' => array(
        ':input[name="tcmb_pick_date"]' => array('filled' => TRUE),
      ),
    ),
  );
  return $form;
}

/**
 * Returns TCMB currency codes.
 */

function tcmb_currency_codes() {
  return array(
    'USD' => t('American Dollar'),
    'CAD' => t('Canadian Dollar'),
    'EUR' => t('Euro'),
    'GBP' => t('Great Britain Pounds'),
    'AUD' => t('Australian Dollar'),
    'DKK' => t('Danish Krone'),
    'JPY' => t('Japanese Yen'),
    'BGN' => t('Bulgarian Lev'),
    'CHF' => t('Swiss Franc'),
    'IRR' => t('Iranian Riyals'),
    'KWD' => t('Kuwaiti Dinar'),
    'NOK' => t('Norwegian Krone'),
    'RON' => t('Romanian Leu'),
    'RUB' => t('Russian Ruble'),
    'SAR' => t('Saudi Arabian Riyal'),
    'SEK' => t('Swedish Krona'),
  );
}

/*
 * Returns gold codes.
 */

function tcmb_gold_codes() {
  return array(
    'B' => t('22 carat bracelet'),
    '18' => t('18 carat gold'),
    '14' => t('14 carat gold'),
    'C' => t('Quarter gold coin'),
    'Y' => t('Half gold coin'),
    'T' => t('Full gold coin'),
    'G' => t('Gremse gold coin'),
    'A' => t('Ata (Cumhuriyet) gold coin'),
    'R' => t('Resat gold coin'),
    'H' => t('Hamit gold coin'),
    'GA' => t('Gram gold coin'),
  );
}

/**
 * Retrieves data in mass.
function tcmb_get_mass_data($date) {
  $tcmb_currency_codes = tcmb_currency_codes();
  $x = strtotime(variable_get('tcmb_import_date_span') . " ago");
  $today = strtotime("today");
  while($x < $today) {
    $x = strtotime("+1 day", $x);
    $dates[] = "http://www.tcmb.gov.tr/kurlar/" . date('Ym/dmY', $x) . ".xml";
  }
  foreach($dates as $date) {
    if (file_exists_remote($date)) {
      $tcmb_currency_xml = new DomDocument;
      $tcmb_currency_xml->load("$date");
      $tcmb_xpath = new DOMXPath($tcmb_currency_xml);
      foreach ($tcmb_currency_codes as $currency_code => $currency_name) {
        $query = "//Currency[@CurrencyCode='$currency_code']";
        $results = $tcmb_xpath->query($query);
        $buying = $results->item(0)->getElementsByTagName('ForexBuying')->item(0)->nodeValue;
        $selling = $results->item(0)->getElementsByTagName('ForexSelling')->item(0)->nodeValue;
        $created = $tcmb_currency_xml->getElementsByTagName('Tarih_Date')->item(0)->getAttribute('Tarih');
        $updated = date('Y-m-d', strtotime($created));
        $currency = db_insert('tcmb')
          ->fields(array(
            'currency_name' => $tcmb_currency_codes[$currency_code],
            'currency_code' => $currency_code,
            'updated' => $updated,
            'buying' => $results->item(0)->getElementsByTagName('ForexBuying')->item(0)->nodeValue,
            'selling' => $results->item(0)->getElementsByTagName('ForexSelling')->item(0)->nodeValue,
          ))
          ->execute();
      }
      watchdog('tcmb', 'Currency rates for @updated have been stored', array('@updated' => date('d-m-Y', strtotime($created))), WATCHDOG_INFO);
    }
  }
  drupal_set_message(t('Stored past data.'));
  sleep(3);
  drupal_goto(drupal_get_normal_path(variable_get('site_frontpage', 'node')));
}
 */

/* 
 * Checks if a remote XML file exists.
 */
function file_exists_remote($date){
  $curl = curl_init($date);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($curl, 156, 500);
  $response = curl_exec($curl);
  $status_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
  $ret = ($status_code == 200) ? TRUE : FALSE;
  curl_close($curl);
  return $ret;
}

/**
 * Batch API callback: Updates a batch of hubs.
 *
 * @param int $options
 *   An array of options to pass to the request.
 * @param array $context
 *   An array of Batch API data.
 */
function tcmb_get_mass_data_batch($dates, &$context) {
  if (!isset($context['sandbox']['progress'])) {
    $context['sandbox']['progress'] = 0;
  }

  foreach($dates as $date) {
    if (file_exists_remote($date)) {
      $context['results'][] = tcmb_get_mass_data($date);
      $context['sandbox']['progress']++;
    }
  }
  $context['finished'] = $context['sandbox']['progress'] / $limit;
}
/**
 * Get some data.
 */
function tcmb_get_mass_data($date) {
  $tcmb_currency_codes = tcmb_currency_codes();
  $tcmb_currency_xml = new DomDocument;
  $tcmb_currency_xml->load("$date");
  $tcmb_xpath = new DOMXPath($tcmb_currency_xml);
  foreach ($tcmb_currency_codes as $currency_code => $currency_name) {
    $query = "//Currency[@CurrencyCode='$currency_code']";
    $results = $tcmb_xpath->query($query);
    $buying = $results->item(0)->getElementsByTagName('ForexBuying')->item(0)->nodeValue;
    $selling = $results->item(0)->getElementsByTagName('ForexSelling')->item(0)->nodeValue;
    $created = $tcmb_currency_xml->getElementsByTagName('Tarih_Date')->item(0)->getAttribute('Tarih');
    $updated = date('Y-m-d', strtotime($created));
    $currency = db_insert('tcmb')
      ->fields(array(
        'currency_name' => $tcmb_currency_codes[$currency_code],
        'currency_code' => $currency_code,
        'updated' => $updated,
        'buying' => $results->item(0)->getElementsByTagName('ForexBuying')->item(0)->nodeValue,
        'selling' => $results->item(0)->getElementsByTagName('ForexSelling')->item(0)->nodeValue,
      ))
      ->execute();
  }
}
