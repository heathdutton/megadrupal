<?php

/**
 * @file
 * Webform per Email module.
 */

/**
 * Implements hook_menu().
 */
function webform_per_email_menu() {
  $items['admin/config/content/webform_per_email'] = array(
    'title' => 'Webform per Email',
    'description' => 'Webform per Email',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('webform_per_email_bulk_token'),
    'access arguments' => array('create webform content'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'webform_per_email.admin.inc',
  );

  $items['admin/config/content/webform_per_email/create'] = array(
    'title' => 'Create Permits',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/config/content/webform_per_email/settings'] = array(
    'title' => 'Settings',
    'description' => 'Settings for Webfrom per Email',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('webform_per_email_settings'),
    'access arguments' => array('create webform content'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'webform_per_email.admin.inc',
    'weight' => 0,
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function webform_per_email_form_alter(&$form, &$form_state, $form_id) {
  $permit_only_def = isset($form['nid']) ? WPENidsList::exists($form['nid']['#value']) : TRUE;
  if ($form_id == "webform_node_form") {
    $form['options']['permit_only'] = array(
      '#type' => 'checkbox',
      '#title' => t('Accessible by permit only'),
      '#default_value' => $permit_only_def,
    );
  }

  elseif (isset($form['#node']) && $form['#node']->type == "webform" && WPENidsList::exists($form['#node']->nid)) {
    // Add destroyer only on the last page.
    if (isset($form_state['webform']) && $form_state['webform']['page_count'] == $form_state['webform']['page_num']) {
      $form['#submit'][] = 'webform_per_email_permit_destroyer';
    }
  }
}

/**
 * Custom submit function to destroy permit after webform is submitted.
 */
function webform_per_email_permit_destroyer() {
  if (!user_access('administer')) {
    $permit_hash = isset($_GET['permit']) ? $_GET['permit'] : NULL;
    $permit = new WebformPermit($permit_hash);
    $permit->destroy();
  }
}

/**
 * Implements hook_node_insert().
 */
function webform_per_email_node_insert($node) {
  webform_per_email_node_permit_only_option($node);
}

/**
 * Implements hook_node_update().
 */
function webform_per_email_node_update($node) {
  webform_per_email_node_permit_only_option($node);
}

/**
 * Updates Accesible by permit only.
 */
function webform_per_email_node_permit_only_option($node) {
  if ($node->type == "webform" && isset($node->permit_only)) {
    if ($node->permit_only) {
      WPENidsList::add($node->nid);
    }
    else {
      WPENidsList::remove($node->nid);
    }
  }
}

/**
 * Implements hook_node_access().
 */
function webform_per_email_node_access($node, $op, $account) {
  // If $node is a string, the node has not yet been created. We don't care
  // about that case.
  if (is_string($node)) {
    return NODE_ACCESS_IGNORE;
  }

  if ($node->type != "webform" || !WPENidsList::exists($node->nid)) {
    return NODE_ACCESS_IGNORE;
  }

  // If the permit hash is valid then ignore modifying access check.
  $permit_hash = isset($_GET['permit']) ? $_GET['permit'] : "";
  if (WebformPermit::validate($permit_hash, $node->nid)) {
    return NODE_ACCESS_IGNORE;
  }
  else {
    return NODE_ACCESS_DENY;
  }
}

/**
 * Implements hook_cron().
 */
function webform_per_email_cron() {
  $queue = DrupalQueue::get('webform_permit_outbox_queue');
  $webform_per_email_settings = variable_get('webform_per_email_settings');
  $cron_limit = isset($webform_per_email_settings) && isset($webform_per_email_settings['cron_limit']) ? $webform_per_email_settings['cron_limit'] : 25;

  for ($i = 1; $i <= $cron_limit; $i++) {
    $dequeued_permit = $queue->claimItem();

    if (!$dequeued_permit) {
      break;
    }
    else {
      $email = $dequeued_permit->data['email'];
      $nid = $dequeued_permit->data['nid'];
      $hash = $dequeued_permit->data['hash'];

      global $language;
      $path = drupal_get_path_alias("node/$nid");
      $path = url($path, array('absolute' => TRUE));
      $link = $path . "?permit=$hash";

      $params['@path'] = $path;
      $params['@link'] = $link;
      foreach ($dequeued_permit->data as $key => $value) {
        $params["@$key"] = $value;
      }

      drupal_mail('webform_per_email', 'permit_info', $email, $language, $params);
      $queue->deleteItem($dequeued_permit);
      watchdog("webform_per_email_added", 'Sent permit to %email for node/%nid in webform_permit_outbox_queue', array('%email' => $email, '%nid' => $nid), WATCHDOG_INFO);
    }
  }
}

/**
 * Implements hook_mail().
 */
function webform_per_email_mail($key, &$message, $params) {
  $webform_per_email_settings = variable_get('webform_per_email_settings');

  switch ($key) {
    case 'permit_info':
      $message['subject'] = format_string($webform_per_email_settings['mail_subject'], $params);
      $message['body'][] = format_string($webform_per_email_settings['mail_template'], $params);
      $message['from'] = $webform_per_email_settings['mail_from_name'] . " <" . $webform_per_email_settings['mail_from_email'] . ">";
      break;
  }
}
