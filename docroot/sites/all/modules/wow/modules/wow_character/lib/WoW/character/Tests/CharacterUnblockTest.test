<?php

/**
 * @file
 * Definition of WoW\character\Tests\CharacterUnblockTest.
 */

/**
 * Test wow_character_user_unblock() behavior.
 */
class CharacterUnblockTest extends CharacterTestBase {

  private $user;

  /**
   * @var WoWRealm
   */
  private $realm;

  /**
   * @var WoWCharacter
   */
  private $character;

  public static function getInfo() {
    return array(
      'name' => 'Character unblock',
      'description' => 'Test the unblock character user page.',
      'group' => 'WoW Character',
    );
  }

  protected function setUp() {
    parent::setUp();

    $this->user = $this->drupalCreateUser();
    $this->drupalLogin($this->user);

    $this->realm = $this->wowCreateRealm('eu', 'Archimonde');
    $this->character = $this->wowCreateCharacter($this->realm, 'Mercurial', array('uid' => $this->user->uid));
  }

  function testCharacterUnblock() {
    $user = $this->user;
    $character = $this->character;

    $this->drupalPost("user/$user->uid/characters/unblock/$character->cid", array(), t('Unblock Character'));

    // Get the filename.
    $filename = wow_test_get_filename($character->region, 'en_GB', $character->remotePath() . '.items');
    $data = file_get_contents($filename);
    $data_character = json_decode($data);

    foreach ($this->extractSlots($user, $character) as $slot) {
      $this->assertText(t('Your @slot is still equipped.', array('@slot' => t($slot))), 'Found slots sill equiped.', 'WoW Character');
      unset($data_character->items->$slot);
    }

    $data_modified = json_encode($data_character);

    $this->drupalPost("user/$user->uid/characters/unblock/$character->cid", array(), t('Unblock Character'));
  }

  protected function extractSlots($user, $character) {
    if ($this->plainTextContent === FALSE) {
      $this->plainTextContent = filter_xss($this->drupalGetContent(), array());
    }

    $pos = 0;
    $slots = array();
    for ($i = 0; $i < 4; $i++) {
      $pos = strpos($this->plainTextContent, 'Remove', $pos + 1) + 7;
      $end = strpos($this->plainTextContent, ':', $pos);
      $slots[] = substr($this->plainTextContent, $pos, $end - $pos);
    }

    return $slots;
  }
}
