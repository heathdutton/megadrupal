<?php

/**
 * @file
 * Definition of WoW\character\Tests\CharacterRemoveTest.
 */

/**
 * Test wow_character_user_remove() behavior.
 */
class CharacterRemoveTest extends CharacterTestBase {

  public static function getInfo() {
    return array(
      'name' => 'Character remove',
      'description' => 'Test the remove character user page.',
      'group' => 'WoW Character',
    );
  }

  protected function testCharacterRemove() {

    $user = $this->drupalCreateUser();
    $this->drupalLogin($user);

    $realm = $this->randomRealm();
    $character_a = $this->randomCharacter($realm, array('uid' => $user->uid, 'status' => 1));
    $character_b = $this->randomCharacter($realm, array('uid' => $user->uid, 'status' => 1));
    $character_c = $this->randomCharacter($realm, array('uid' => $user->uid, 'status' => 1, 'isMain' => 1));

    $this->drupalGet("user/$user->uid/characters");

    // Test for existence of remove link in table.
    $link = l(t('remove'), "user/$user->uid/characters/remove/$character_a->cid", array('query' => array('destination' => "user/$user->uid/characters")));
    $this->assertRaw($link, 'Found character A remove link on user characters page');
    $link = l(t('remove'), "user/$user->uid/characters/remove/$character_b->cid", array('query' => array('destination' => "user/$user->uid/characters")));
    $this->assertRaw($link, 'Found character B remove link on user characters page');
    $link = l(t('remove'), "user/$user->uid/characters/remove/$character_c->cid", array('query' => array('destination' => "user/$user->uid/characters")));
    $this->assertRaw($link, 'Found character C remove link on user characters page');

    // Removes the selected character.
    $this->drupalPost("user/$user->uid/characters/remove/$character_b->cid", array(), t('Confirm'));
    $this->assertResponse(200, 'Character B can be removed.');
    $character_b = wow_character_load($character_b->cid, TRUE);
    $this->assertEqual($character_b->uid, 0, 'Character B is removed.');
    $this->assertEqual($character_b->status, 0, 'Character B is blocked.');
    $this->assertNoText($character_b->name, 'Character not in list of characters', 'WoW Character');
  }
}
