<?php

/**
 * @file
 * Install, update and uninstall functions for the wow_guild module.
 */

/**
 * Implements hook_install().
 */
function wow_guild_install() {
  // Adds the gid field to the {wow_characters} table. This is a foreign key to
  // the {wow_guild}.gid field.
  $gid = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => "Character's {wow_guild}.gid.",
  );
  db_add_field('wow_characters', 'gid', $gid);

  // Adds the rank field to the {wow_characters} table. This represents the
  // rank within a guild of a character.
  $rank = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'size' => 'tiny',
    'description' => "Member's rank",
  );
  db_add_field('wow_characters', 'rank', $rank);

  db_query("ALTER TABLE {wow_guild} MODIFY name VARCHAR(24) CHARACTER SET latin1 COLLATE latin1_general_cs NOT NULL COMMENT 'Guild\'s name.'")->execute();
}

/**
 * Implements hook_schema().
 */
function wow_guild_schema() {
  $schema['wow_guild'] = array(
    'description' => 'Stores guild data.',
    'fields' => array(
      'gid' => array(
        'description' => 'Primary Key: Unique guild ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'region' => array(
        'type' => 'char',
        'length' => 2,
        'not null' => TRUE,
        'description' => "Guild's region.",
      ),
      'realm' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => "Guild's realm (slug).",
      ),
      'name' => array(
        'type' => 'char',
        'length' => 24,
        'not null' => TRUE,
        'description' => "Guild's name.",
      ),
      'level' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => "Guild's level.",
      ),
      'side' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => "Guild's side.",
      ),
      'achievementPoints' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Guild's achievement points.",
      ),
      'queued' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Time when this guild was queued for refresh, 0 if not queued.',
      ),
      'lastFetched' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Timestamp for guild's last fetch.",
      ),
      'lastModified' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Timestamp for guild's last update.",
      ),
    ),
    'primary key' => array('gid'),
    'unique keys' => array(
      'guild' => array('region', 'name', 'realm'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function wow_guild_schema_alter(&$schema) {
  $schema['wow_characters']['fields']['gid'] = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => "Character's {wow_guild}.gid.",
  );
  $schema['wow_characters']['fields']['rank'] = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'size' => 'tiny',
    'description' => "Member's rank",
  );
  $schema['wow_characters']['foreign keys']['guild'] = array(
    'table' => 'wow_guild',
    'columns' => array('gid' => 'gid'),
  );
}

/**
 * Implements hook_uninstall().
 */
function wow_guild_uninstall() {
  db_drop_field('wow_characters', 'gid');
  db_drop_field('wow_characters', 'rank');

  variable_del('wow_guild_refresh_method');
  variable_del('wow_guild_refresh_threshold');
  variable_del('wow_guild_default');
  // Lazy loaded.
  variable_del('wow_guild_rewards');
}

/**
 * Moving the wow_guild variable to wow_guild_default.
 * Restores the missing unique key to 'region' introduced in 1.x (Sorry!).
 * Added 'lastFetched' field to wow_guild table.
 */
function wow_guild_update_7200() {
  db_drop_unique_key('wow_guild', 'guild');

  // Added lastModified field.
  $spec = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => "Timestamp for guild's last fetch.",
  );
  db_add_field('wow_guild', 'lastFetched', $spec);

  // Changed the description: +(slug).
  $spec = array(
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'description' => "Guild's realm (slug).",
  );
  db_change_field('wow_guild', 'realm', 'realm', $spec);

  db_add_unique_key('wow_guild', 'guild', array('region', 'realm', 'name'));

  // Now using 'wow_guild_default' as name for drupal core consistency with
  // default variables name.
  $guild = variable_get('wow_guild', FALSE);
  if ($guild) {
    // Set as site default.
    $guild_default = new stdClass();
    $guild_default->region = $guild->region;
    $guild_default->gid = $guild->gid;
    $guild_default->name = $guild->name;
    $guild_default->realm = wow_realm_to_slug($guild->realm);

    variable_set('wow_guild_default', $guild_default);
    variable_del('wow_guild');
  }
}

/**
 * Replace realm name by its realm slug equivalent.
 */
function wow_guild_update_7201(&$sandbox) {
  // Update 10 guilds at a time to "slugify" the realm name.
  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['current_gid'] = 0;
    $sandbox['max'] = db_query('SELECT COUNT(DISTINCT gid) FROM {wow_guild}')->fetchField();
  }

  $guilds = db_select('wow_guild', 'g')
    ->fields('g', array('gid', 'realm'))
    ->condition('gid', $sandbox['current_gid'], '>')
    ->range(0, 10)
    ->orderBy('gid', 'ASC')
    ->execute();

  foreach ($guilds as $guild) {
    db_update('wow_guild')
      ->fields(array('realm' => wow_realm_to_slug($guild->realm)))
      ->condition('gid', $guild->gid)
      ->execute();

    $sandbox['progress']++;
    $sandbox['current_gid'] = $guild->gid;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);

  return format_plural($sandbox['progress'],
      'Changed the realm name to its slug equivalent of 1 guild.',
      'Changed the realm name to its slug equivalent of @count guilds.',
      array('@count' => $sandbox['progress']));
}

/**
 * Adds a 'queued' column to avoid queuing item more than once.
 *
 * Cleans the queue table from 'wow_guild' items.
 */
function wow_guild_update_7202() {
  $spec =  array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Time when this guild was queued for refresh, 0 if not queued.',
  );
  db_add_field('wow_guild', 'queued', $spec);

  db_delete('queue')
    ->condition('name', 'wow_guild')
    ->execute();
}

/**
 * Implements hook_update_dependencies().
 */
function wow_guild_update_dependencies() {
  // wow_character_update_7200() requires the 2.x version of the wow module.
  $dependencies['wow_guild'][7200] = array(
    'wow' => 7200,
    'wow_character' => 7200,
  );

  return $dependencies;
}
