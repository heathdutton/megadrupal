<?php

/**
 * @file
 * Definition of WoW\guild\Tests\GuildTestBase.
 */

class GuildTestBase extends CharacterTestBase {

  protected function setUp() {
    // Since this is a base class for many test cases, support the same
    // flexibility that DrupalWebTestCase::setUp() has for the modules to be
    // passed in as either an array or a variable number of string arguments.
    $modules = func_get_args();
    if (isset($modules[0]) && is_array($modules[0])) {
      $modules = $modules[0];
    }
    $modules[] = 'wow_test_guild';
    parent::setUp($modules);
  }

  /**
   * Saves a wow_guild like it was fetched from the service.
   *
   * @param WoWGuild $guild
   */
  protected function wowGuildSaveFetched($guild) {
    $data = $this->wowCreateGuildData($guild);
    $response = $this->wowCreateHttpResult($guild->region, $data);
    $controller = entity_get_controller('wow_guild');
    $controller->setNextResponse($response);
    $controller->fetch($guild);
    $controller->save($guild);
  }

  /**
   * Create a guild data object that can be encapsuled in a service response.
   *
   * @param WoWGuild $guild
   *   A wow_guild entity, optional fields can be specified:
   *   - 'members': An array of wow_character, with a special key 'rank'
   *   representing the rank of the character within the guild.
   */
  protected static function wowCreateGuildData($guild) {
    $data = new stdClass();
    foreach (array('realm', 'name', 'level', 'side', 'lastModified', 'achievementPoints') as $key) {
      $data->{$key} = $guild->{$key};
    }

    if (isset($guild->members)) {
      foreach ($guild->members as $member) {
        $data->members[] = self::wowCreateGuildCharacterData($member, $member->rank);
      }
    }

    return $data;
  }

  /**
   * Create a character data object that can be encapsuled in a service response.
   *
   * @param WoWCharacter $character
   *   A wow_character entity.
   * @param int $rank
   *   The member rank.
   *
   * @return object
   *   An object representing a character within a guild.
   */
  protected static function wowCreateGuildCharacterData($character, $rank = 0) {
    $data = new stdClass();
    $data->rank = $rank;
    $data->character = new stdClass();
    foreach (array('realm', 'name', 'level', 'class', 'race', 'gender', 'thumbnail') as $key) {
      $data->character->{$key} = $character->{$key};
    }

    return $data;
  }

  /**
   * Creates a Guild entity.
   *
   * @param WoWRealm $realm
   *   The guild realm.
   * @param string $name
   *   The guild name.
   * @param array $values
   *   An array of additional values.
   *
   * @return WoWGuild
   *   The wow_guild entity.
   */
  protected static function wowCreateGuild($realm, $name, $values = array()) {
    $entity = entity_create('wow_guild', $values + array(
      'region' => $realm->region,
      'realm' => $realm->slug,
      'name' => $name,
    ));

    return $entity->save() ? $entity : FALSE;
  }

  /**
   * Generates a random guild using an existing realm and a random name.
   *
   * @param WoWRealm $realm
   *   The guild realm.
   * @param array $values
   *   An array of additional values.
   *
   * @return WoWGuild
   *   The randomly generated wow_guild entity.
   */
  public static function randomGuild($realm, $values = array()) {
    return self::wowCreateGuild($realm, self::randomName(24), $values);
  }
}
