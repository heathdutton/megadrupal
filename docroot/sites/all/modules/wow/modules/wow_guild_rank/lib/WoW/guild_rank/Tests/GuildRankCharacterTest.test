<?php

/**
 * @file
 * Definition of WoW\guild_rank\Tests\GuildRankCharacterTest.
 */

class GuildRankCharacterTest extends GuildRankTestBase {

  public static function getInfo() {
    return array(
      'name' => 'Character integration',
      'description' => 'Test character module integration for block/unblock operations.',
      'group' => 'WoW Guild Rank',
    );
  }

  /**
   * Test blocking a character.
   */
  function testBlockCharacter() {
    $account = $this->drupalCreateUser();

    $character_d = $this->randomCharacter($this->defaultRealm);
    $character_d->status = 1;
    $character_d->uid = $account->uid;
    $character_d->save();

    $cid_a = $this->defaultGuild->members[0]->cid;
    $cid_b = $this->defaultGuild->members[1]->cid;
    $cid_c = $this->defaultGuild->members[2]->cid;
    $cid_d = $character_d->cid;


    $characters = wow_character_load_multiple(FALSE);
    foreach (array($cid_a, $cid_b, $cid_c, $cid_d) as $cid) {
      $characters[$cid]->uid = $account->uid;
      $characters[$cid]->status = 1;
      $characters[$cid]->save();
    }

    // Test block the character b.
    $characters[$cid_b]->status = 0;
    $characters[$cid_b]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertTrue($characters[$cid_a]->isMain, t('Character A is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_b]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_c]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');

    // Test block the character a.
    $characters[$cid_a]->status = 0;
    $characters[$cid_a]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[$cid_a]->isMain, t('Character A not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_b]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertTrue($characters[$cid_c]->isMain, t('Character C is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');

    // Test block the character d.
    $characters[$cid_d]->status = 0;
    $characters[$cid_d]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[$cid_a]->isMain, t('Character A not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_b]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertTrue($characters[$cid_c]->isMain, t('Character C is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');

    // Test block the character c.
    $characters[$cid_c]->status = 0;
    $characters[$cid_c]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[$cid_a]->isMain, t('Character A not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_b]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_c]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');

  }

  /**
   * Test unblocking a character.
   */
  function testUnblockCharacter() {
    $account = $this->drupalCreateUser();

    $character_d = $this->randomCharacter($this->defaultRealm);
    $character_d->uid = $account->uid;
    $character_d->save();

    $cid_a = $this->defaultGuild->members[0]->cid;
    $cid_b = $this->defaultGuild->members[1]->cid;
    $cid_c = $this->defaultGuild->members[2]->cid;
    $cid_d = $character_d->cid;

    $characters = wow_character_load_multiple(FALSE, TRUE);

    // Test unblock the character b.
    $characters[$cid_b]->uid = $account->uid;
    $characters[$cid_b]->status = 1;
    $characters[$cid_b]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[$cid_a]->isMain, t('Character A not main.'), 'WoW Guild Rank');
    $this->assertTrue($characters[$cid_b]->isMain, t('Character B is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_c]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');

    // Test unblock the character c.
    $characters[$cid_c]->uid = $account->uid;
    $characters[$cid_c]->status = 1;
    $characters[$cid_c]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[$cid_a]->isMain, t('Character A not main.'), 'WoW Guild Rank');
    $this->assertTrue($characters[$cid_b]->isMain, t('Character B is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_c]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');

    // Test unblock the character a.
    $characters[$cid_a]->uid = $account->uid;
    $characters[$cid_a]->status = 1;
    $characters[$cid_a]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertTrue($characters[$cid_a]->isMain, t('Character A is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_b]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_c]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');

    // Test activating a character which is not in the guild.
    $characters[$cid_d]->status = 1;
    $characters[$cid_d]->save();

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertTrue($characters[$cid_a]->isMain, t('Character A is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_b]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_c]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[$cid_d]->isMain, t('Character D not main.'), 'WoW Guild Rank');
  }

}
