<?php

/**
 * @file
 * Definition of WoW\guild_rank\Tests\GuildRankPermissionTest.
 */

class GuildRankPermissionTest extends GuildRankTestBase {

  public static function getInfo() {
    return array(
      'name' => 'Guild rank permission',
      'description' => 'Test guild rank for arbitrary users.',
      'group' => 'WoW Guild Rank',
    );
  }

  /**
   * Test loading a user with arbitrary rank.
   */
  function testAssignRole() {
    $guild = $this->defaultGuild;

    // Test an officer rank.
    $character_b = wow_character_load($guild->members[1]->cid, TRUE);
    $this->assertEqual($guild->gid, $character_b->gid, t('Found default guild for character B.'), 'WoW Guild Rank');
    $this->assertEqual(1, $character_b->rank, t('Found officer rank for character B.'), 'WoW Guild Rank');

    // Test an officer permission on a user.
    $account = $this->drupalCreateUser();
    $character_b->uid = $account->uid;
    $character_b->isMain = TRUE;
    $character_b->status = 1;
    $character_b->save();
    $account = user_load($account->uid, TRUE);
    $this->assertFalse(array_key_exists($this->memberRid, $account->roles), t('Member permission not on character B.'), 'WoW Guild Rank');
    $this->assertTrue(array_key_exists($this->officerRid, $account->roles), t('Found officer permission on character B.'), 'WoW Guild Rank');

    // Test a member rank.
    $character_d = wow_character_load($guild->members[3]->cid, TRUE);
    $this->assertEqual($guild->gid, $character_d->gid, t('Found default guild for character D.'), 'WoW Guild Rank');
    $this->assertEqual(3, $character_d->rank, t('Found member rank for character D.'), 'WoW Guild Rank');

    // Test a member permission on a user.
    $account = $this->drupalCreateUser();
    $character_d->uid = $account->uid;
    $character_d->isMain = TRUE;
    $character_d->status = 1;
    $character_d->save();
    $account = user_load($account->uid, TRUE);
    $this->assertTrue(array_key_exists($this->memberRid, $account->roles), t('Found member permission on character D.'), 'WoW Guild Rank');
    $this->assertFalse(array_key_exists($this->officerRid, $account->roles), t('Officer permission not on character D.'), 'WoW Guild Rank');

    // Test an untrained rank.
    $character_e = wow_character_load($guild->members[4]->cid, TRUE);
    $this->assertEqual($guild->gid, $character_e->gid, t('Found default guild for character E.'), 'WoW Guild Rank');
    $this->assertEqual(4, $character_e->rank, t('Found member rank for character E.'), 'WoW Guild Rank');

    // Test a member permission on a user.
    $account = $this->drupalCreateUser();
    $character_e->uid = $account->uid;
    $character_e->isMain = TRUE;
    $character_e->status = 1;
    $character_e->save();
    $account = user_load($account->uid, TRUE);
    $this->assertFalse(array_key_exists($this->memberRid, $account->roles), t('Member permission not on character E.'), 'WoW Guild Rank');
    $this->assertFalse(array_key_exists($this->officerRid, $account->roles), t('Officer permission not on character E.'), 'WoW Guild Rank');
  }

  /**
   * Test loading a user not main with arbitrary rank.
   */
  function testNotAssignRole() {
    $guild = $this->defaultGuild;
    $account = $this->drupalCreateUser();

    // Test not an officer permission on a user.
    $character_a = wow_character_load($guild->members[0]->cid, TRUE);
    $character_a->uid = $account->uid;
    $character_a->save();
    $account = user_load($account->uid, TRUE);
    $this->assertFalse(array_key_exists($this->memberRid, $account->roles), t('Member permission not on character A.'), 'WoW Guild Rank');
    $this->assertFalse(array_key_exists($this->officerRid, $account->roles), t('Officer permission not on character A.'), 'WoW Guild Rank');

    // Test not a member permission on a user.
    $character_c = wow_character_load($guild->members[2]->cid, TRUE);
    $character_c->uid = $account->uid;
    $character_c->save();
    $account = user_load($account->uid, TRUE);
    $this->assertFalse(array_key_exists($this->memberRid, $account->roles), t('Member permission not on character C.'), 'WoW Guild Rank');
    $this->assertFalse(array_key_exists($this->officerRid, $account->roles), t('Officer permission not on character C.'), 'WoW Guild Rank');
  }

}
