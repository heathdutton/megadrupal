<?php

/**
 * @file
 * Definition of WoW\guild\Tests\GuildRankMembersSaveTest.
 */

/**
 * Test $guild->save() behavior for members rank.
 */
class GuildRankMembersSaveTest extends GuildRankTestBase {

  /**
   * The user uid.
   *
   * var int
   */
  private $uid;

  public static function getInfo() {
    return array(
      'name' => 'Guild members rank save',
      'description' => 'Test guild members rank saving.',
      'group' => 'WoW Guild Rank',
    );
  }

  protected function setUp() {
    parent::setUp();

    $this->uid = $this->drupalCreateUser()->uid;

    $characters = array();
    for ($i = 1; $i < 5; $i++) {
      $character = $characters[] = wow_character_load($this->defaultGuild->members[$i]->cid, TRUE);
      $character->uid = $this->uid;
      $character->status = 1;
      $character->isMain = ($i == 1);
      $character->save();
    }
  }

  /**
   * Test the main status change when user joined the guild.
   */
  function testGuildMembersJoinedSave() {
    $guild = $this->defaultGuild;
    $character_e = $guild->members[4];
    unset($guild->members[4]);

    $character_a = wow_character_load($this->defaultGuild->members[0]->cid, TRUE);
    $character_a->uid = $this->uid;
    $character_a->gid = 0;
    $character_a->status = 1;
    $character_a->save();

    // Test the main status change.
    $this->wowGuildSaveFetched(clone $guild);

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertTrue($characters[1]->isMain, t('Character A is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[2]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[3]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[4]->isMain, t('Character D not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[5]->isMain, t('Character E not main.'), 'WoW Guild Rank');

    // Test the main status does not change.
    $guild->members[] = $character_e;
    $this->wowGuildSaveFetched(clone $guild);

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertTrue($characters[1]->isMain, t('Character A is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[2]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[3]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[4]->isMain, t('Character D not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[5]->isMain, t('Character E not main.'), 'WoW Guild Rank');
  }

  /**
   * Test the main status change accordingly to guild ranks.
   */
  function testGuildMembersRankChangedSave() {
    $guild = $this->defaultGuild;

    // Test the main status change.
    $guild->members[1]->rank = 3;
    $this->wowGuildSaveFetched(clone $guild);

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[2]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertTrue($characters[3]->isMain, t('Character C is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[4]->isMain, t('Character D not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[5]->isMain, t('Character E not main.'), 'WoW Guild Rank');

    // Test the main status change back.
    $guild->members[1]->rank = 1;
    $this->wowGuildSaveFetched(clone $guild);

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertTrue($characters[2]->isMain, t('Character B is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[3]->isMain, t('Character C not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[4]->isMain, t('Character D not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[5]->isMain, t('Character E not main.'), 'WoW Guild Rank');
  }

  /**
   * Test the main status change in response to guild kick/leave.
   */
  function testGuildMembersLeftSave() {
    $guild = $this->defaultGuild;
    $member = $guild->members[1];

    // Test the main status change.
    unset($guild->members[1]);
    $this->wowGuildSaveFetched(clone $guild);

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[2]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertTrue($characters[3]->isMain, t('Character C is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[4]->isMain, t('Character D not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[5]->isMain, t('Character E not main.'), 'WoW Guild Rank');

    // Test the main status does not change .
    unset($guild->members[3]);
    unset($guild->members[4]);
    $this->wowGuildSaveFetched(clone $guild);

    $characters = wow_character_load_multiple(FALSE, TRUE);
    $this->assertFalse($characters[2]->isMain, t('Character B not main.'), 'WoW Guild Rank');
    $this->assertTrue($characters[3]->isMain, t('Character C is a main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[4]->isMain, t('Character D not main.'), 'WoW Guild Rank');
    $this->assertFalse($characters[5]->isMain, t('Character E not main.'), 'WoW Guild Rank');
  }

}
