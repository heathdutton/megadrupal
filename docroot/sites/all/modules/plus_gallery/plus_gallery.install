<?php

/**
 * @file
 * Requirements function for the Plus Gallery Core.
 */
// Load all constants for Plus Gallery.
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'plus_gallery') . '/plus_gallery.const.inc';
 
/**
 * Implements hook_requirements().
 */
function plus_gallery_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $plusgallery = libraries_load('plusgallery');
    $t = get_t();
    if (!$plusgallery['loaded']) {
      $requirements['plusgallery'] = array(
        'title' => '+Gallery',
        'value' => $plusgallery['error message'],
        'description' => $t('The +Gallery library can be downloaded <a href="@url" title="Download +Gallery" target="_blank">here</a>.<br />Make sure the library is located in @path.',
          array('@url' => $plusgallery['download url'], '@path' => 'sites/all/plusgallery')),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    else if (version_compare($plusgallery['version'], PLUS_GALLERY_LIBRARY_MIN_VERSION) < 0) {
      $requirements['plusgallery'] = array(
        'title' => '+Gallery',
        'value' => $t('Out of date'),
        'description' => $t('Your version of the +Gallery library is too old. The +Gallery library should be at least version %version.',
          array('%version' => PLUS_GALLERY_LIBRARY_MIN_VERSION)),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    else {
      $requirements['plusgallery'] = array(
        'title' => '+Gallery',
        'value' => $t('Found +Gallery library version %version.',
          array('%version' => $plusgallery['version'])),
        'severity' => REQUIREMENT_OK,
      );
    }
  }

  return $requirements;
}

/**
 * Returns all fields created on the system of the type defined in mymodule.
 *
 * @return array
 *   Array containing all the Plus Gallery fields.
 */
function _plus_gallery_get_fields() {
  $fields = array();
  foreach (field_info_fields() as $field) {
    if ($field['type'] == 'plus_gallery') {
      $fields[] = $field;
    }
  }
  return $fields;
}

/**
 * Add a column to the tables of the fields created with this module.
 * 
 * @param string $column_name
 *   The name of the column that needs to be added.
 * @param array $spec
 *   The array containing the specs that define the column.
 */
function _plus_gallery_add_column($column_name, $spec) {
  $fields = _plus_gallery_get_fields();
  foreach ($fields as $field) {
    $data_table_name = 'field_data_' . $field['field_name'];
    $revision_table_name = 'field_revision_' . $field['field_name'];
    $field_name = $field['field_name'] . '_' . $column_name;

    db_add_field($data_table_name, $field_name, $spec);
    db_add_field($revision_table_name, $field_name, $spec);
  }
}

/**
 * Make {data_type} and {data_limit} unsigned.
 */
function plus_gallery_update_7100(&$sandbox) {
  $fields = _plus_gallery_get_fields();
  foreach ($fields as $field) {
    $tables = array(
      _field_sql_storage_tablename($field),
      _field_sql_storage_revision_tablename($field),
    );

    $spec1 = array(
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'unsigned' => TRUE,
      'default' => 0,
    );
    $spec2 = array(
      'type' => 'int',
      'size' => 'tiny',
      'not null' => FALSE,
      'unsigned' => TRUE,
    );

    foreach ($tables as $table) {
      $field_name = $field['field_name'];

      $column1 = $field_name . '_data_type';
      $column2 = $field_name . '_data_limit';

      db_change_field($table, $column1, $column1, $spec1);
      db_change_field($table, $column2, $column2, $spec2);
    }
  }
}

/**
 * Add {album_title} and {album_limit} columns.
 */
function plus_gallery_update_7101(&$sandbox) {
  $spec = array(
    'type' => 'int',
    'size' => 'tiny',
    'not null' => FALSE,
    'unsigned' => TRUE,
  );

  _plus_gallery_add_column('album_title', $spec);
  _plus_gallery_add_column('album_limit', $spec);
}

/**
 * Add {incl_excl} and {data_incl_excl} columns.
 */
function plus_gallery_update_7102(&$sandbox) {
  $spec1 = array(
    'type' => 'int',
    'size' => 'tiny',
    'not null' => FALSE,
    'unsigned' => TRUE,
    'default' => 0,
  );
  $spec2 = array(
    'type' => 'text',
    'size' => 'medium',
    'not null' => FALSE,
  );

  _plus_gallery_add_column('incl_excl', $spec1);
  _plus_gallery_add_column('data_incl_excl', $spec2);
}

/**
 * Remove variables {plus_gallery_location} and {plus_gallery_credit}.
 */
function plus_gallery_update_7103(&$sandbox) {
  variable_del('plus_gallery_location');
  variable_del('plus_gallery_credit');
}

/**
 * Change length of {access_token} from 63 to 255, for Facebooks access token. 
 */
function plus_gallery_update_7104(&$sandbox) {
  $fields = _plus_gallery_get_fields();
  $spec = array('type' => 'varchar', 'length' => PLUS_GALLERY_ACCESS_TOKEN_LENGTH, 'not null' => FALSE);
  foreach ($fields as $field) {
    $data_table_name = 'field_data_' . $field['field_name'];
    $revision_table_name = 'field_revision_' . $field['field_name'];
    $field_name = $field['field_name'] . '_access_token';

    db_change_field($data_table_name, $field_name, $field_name, $spec);
    db_change_field($revision_table_name, $field_name, $field_name, $spec);
  }
}
/**
 * Update field_config to rename fields so they match the new modulename.
 */
function plus_gallery_update_7105(&$sandbox) {
  db_update('field_config')
  ->fields(array(
    'type' => 'plus_gallery_field',
  ))
  ->condition('type', 'plus_gallery')
  ->execute();
  
  db_update('field_config')
  ->fields(array(
    'module' => 'plus_gallery_field',
  ))
  ->condition('module', 'plus_gallery')
  ->execute();
}