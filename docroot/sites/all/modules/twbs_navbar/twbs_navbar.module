<?php

/**
 * @file
 * Administration navbar for quick access to top level administration items.
 */

/**
 * Implements hook_help().
 */
function twbs_navbar_help($path, $arg) {
  $output = '';

  switch ($path) {
    case 'admin/help#twbs_navbar':
      return '<p>' . t('Administration navbar for quick access to top level administration items.') . '</p>';
  }

  return $output;
}

/**
 * Implements hook_permission().
 */
function twbs_navbar_permission() {
  return array(
    'access twbs_navbar' => array(
      'title' => t('Use the administration twbs_navbar'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function twbs_navbar_theme($existing, $type, $theme, $path) {
  $items['twbs_navbar'] = array(
    'render element' => 'twbs_navbar',
    'template' => 'twbs_navbar',
    'path' => drupal_get_path('module', 'twbs_navbar'),
  );

  return $items;
}

/**
 * Implements hook_page_build().
 *
 * Add admin twbs_navbar to the page_top region automatically.
 */
function twbs_navbar_page_build(&$page) {
  $page['page_top']['twbs_navbar'] = array(
    '#pre_render' => array('twbs_navbar_pre_render'),
    '#access' => user_access('access twbs_navbar'),
  );
}

/**
 * Prerender function for the twbs_navbar.
 *
 * Since building the twbs_navbar takes some time, it is done just prior to
 * rendering to ensure that it is built only if it will be displayed.
 */
function twbs_navbar_pre_render($twbs_navbar) {
  $twbs_navbar = array_merge($twbs_navbar, twbs_navbar_view());
  return $twbs_navbar;
}

/**
 * Implements hook_preprocess_html().
 *
 * Add some page classes, so global page theming can adjust to the twbs_navbar.
 */
function twbs_navbar_preprocess_html(&$vars) {
  if (isset($vars['page']['page_top']['twbs_navbar']) && user_access('access twbs_navbar')) {
    $vars['classes_array'][] = 'with-twbs-navbar';
  }
}

/**
 * Implements hook_system_info_alter().
 *
 * Indicate that the 'page_top' region (in which the twbs_navbar will be displayed)
 * is an overlay supplemental region that should be refreshed whenever its
 * content is updated.
 *
 * This information is provided for any module that might need to use it, not
 * just the core Overlay module.
 */
function twbs_navbar_system_info_alter(&$info, $file, $type) {
  if ($type == 'theme') {
    $info['overlay_supplemental_regions'][] = 'page_top';
  }
}

/**
 * Builds the admin menu as a structured array ready for drupal_render().
 *
 * @return
 *   Array of links and settings relating to the admin menu.
 */
function twbs_navbar_view() {
  $build = array(
    '#theme' => 'twbs_navbar',
    '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'twbs_navbar') . '/twbs_navbar.less',
      ),
    ),
  );

  // Add brand link to front.
  $build['navbar_brand'] = array(
    '#theme' => 'link',
    '#text' => t('Home'),
    '#path' => '<front>',
    '#options' => array(
      'html' => TRUE,
      'attributes' => array(
        'class' => 'navbar-brand',
      ),
    ),
  );

  // Include all supported alter functions.
  foreach (array('dashboard', 'devel', 'menu', 'shortcut', 'user') as $hook) {
    module_load_include('inc', 'twbs_navbar', "includes/${hook}_twbs_navbar_view_alter");
  }

  // Allow other modules to implement its menu button by running drupal_alter();
  $build['navbar_nav'] = array();
  drupal_alter('twbs_navbar_view', $build);

  return $build;
}

/**
 * Preprocess variables for twbs_navbar.tpl.php
 *
 * @see twbs_navbar.tpl.php
 */
function template_preprocess_twbs_navbar(&$variables) {
  $navbar_brand = drupal_render($variables['twbs_navbar']['navbar_brand']);
  $variables['navbar_brand'] = $navbar_brand;
  unset($variables['twbs_navbar']['navbar_brand']);

  $navbar_nav = '<ul class="nav navbar-nav">';
  foreach ($variables['twbs_navbar']['navbar_nav'] as $items) {
    if (isset($items['#theme'])) {
      $navbar_nav .= '<li>' . drupal_render($items) . '</li>';
    }
    else {
      $navbar_nav .= '<li class="dropdown">';
      foreach ($items as $item) {
        $navbar_nav .= drupal_render($item);
      }
      $navbar_nav .= '</li>';
    }
  }
  $navbar_nav .= '</ul>';
  $variables['navbar_nav'] = $navbar_nav;
  unset($variables['twbs_navbar']['navbar_nav']);
}
