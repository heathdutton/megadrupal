<?php

/**
 * @file
 * Tests the functionality of the Simpletest example content type.
 */

class EmailFieldVerificationTestCase extends DrupalWebTestCase {
  protected $privilegedUser;

  /**
   * My God! pareview.sh is really picky.
   */
  public static function getInfo() {
    // Note: getInfo() strings are not translated with t().
    return array(
      'name' => 'Email Field Verification',
      'group' => 'Email Field Verification',
      'description' => 'should not be empty',
    );
  }

  /**
   * My God! pareview.sh is really picky.
   */
  public function setUp() {
    parent::setUp(array(
      'devel',
      'email',
      'email_field_verification',
    ));

    // Create and log in our privileged user.
    $this->privilegedUser = $this->drupalCreateUser(array('create article content', 'resend own email field verification links'));
    $this->drupalLogin($this->privilegedUser);
  }

  /**
   * My God! pareview.sh is really picky.
   */
  public function testMultiValueTimeout() {
    // Create a field with settings to validate.
    $this->field = array(
      'field_name' => drupal_strtolower($this->randomName()),
      'type' => 'email',
      'settings' => array(),
      'cardinality' => -1,
    );

    field_create_field($this->field);

    $this->instance = array(
      'field_name' => $this->field['field_name'],
      'entity_type' => 'node',
      'bundle' => 'article',
      'widget' => array(
        'type' => 'email_textfield',
        'module' => 'email',
      ),
      'settings' => array(),
      'display' => array(
        'default' => array(
          'type' => 'email_default',
          'settings' => array(),
        ),
      ),
      'email_field_verification_container' => array(
        'email_field_verification_require_verification' => 1,
        'email_field_verification_publish_confirmed' => 0,
        'email_field_verification_timeout' => "1",
        'email_field_verification_timeout_response' => "2",
        'email_field_verification_resend_verification' => 1,
      ),
    );

    field_create_instance($this->instance);

    // Display creation form.
    $this->drupalGet('node/add/article');
    $this->drupalPost(NULL, array(), t('Add another item'));
    $langcode = LANGUAGE_NONE;

    // Submit a signed decimal value within the allowed precision and scale.
    $value = strtolower($this->randomName(6) . '@' . $this->randomName(6) . '.' . $this->randomName(3));
    $title = $this->randomName(8);
    $edit = array(
      'title' => $title,
      "{$this->field['field_name']}[$langcode][0][email]" => $value,
      "{$this->field['field_name']}[$langcode][1][email]" => '1_' . $value,
    );

    $this->drupalPost(NULL, $edit, t('Save'));
    $this->assertText(t('Article @name has been created.', array('@name' => $title)));

    $link = 'email/verification/resend/nojs/node/1/' . $this->field['field_name'] . '/0/' . $value;
    $this->drupalGet($link, array('query'));

    $this->assertText(t('Successfully sent verification link.'));

    $this->drupalGetMails();

    $this->drupalGet('email/verification/lalala');
    $this->assertText(t('The mail address could not be confirmed.'));

    $mail_result = db_select('email_field_verification_data', 'e')
      ->fields('e')
      ->execute();

    // No timeout.
    $current_mail = $mail_result->fetchAssoc();
    $this->drupalGet('email/verification/' . $current_mail['hash']);
    $this->assertText(t('Your mail address has been confirmed.'));

    // Timeout.
    $current_mail = $mail_result->fetchAssoc();
    $timeout_timestamp = time() - (25 * 60 * 60);
    db_update('email_field_verification_data')
      ->fields(array('timeout' => $timeout_timestamp))
      ->condition('hash', $current_mail['hash'], '=')
      ->execute();
    $this->drupalGet('email/verification/' . $current_mail['hash']);
    $this->assertText(t('It took you too long to confirm this mail address.'));
  }
}
