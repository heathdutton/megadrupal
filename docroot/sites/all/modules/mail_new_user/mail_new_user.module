<?php

/**
 * @file
 * Allow users to modify the welcome email at the moment of sending.
 */

/**
 * Implements hook_form_FORMID_alter() for user_register_form.
 * 
 * Alter the user_register_form to allow users to directly change welcome email.
 */
function mail_new_user_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['mail_subject'] = array(
    '#title' => t('Subject'),
    '#type' => 'textfield',
    // From user.admin.inc:
    '#default_value' => _user_mail_text('register_admin_created_subject', NULL, array(), FALSE),
    '#weight' => 90, 
    '#states' => array(
      'visible' => array(
        ':input[name="notify"]' => array('checked' => TRUE),
      ),
    ),
  );
  
  $form['mail_body'] = array(
    '#title' => t('Body'),
    '#type' => 'textarea',
    '#rows' => 15,
    // From user.admin.inc:
    '#default_value' => _user_mail_text('register_admin_created_body', NULL, array(), FALSE),
    '#weight' => 100, 
    '#states' => array(
      'visible' => array(
        ':input[name="notify"]' => array('checked' => TRUE),
      ),
    ),
  );
  
  // We need to make sure that that the new content is saved before the welcome
  // mail is sent. Hence we put our submit handler at the start of the array. 
  array_unshift($form['#submit'], 'mail_new_user_user_register_form_submit');
}

/**
 * Additional submit handler for the user_register_form.
 */
function mail_new_user_user_register_form_submit($form, &$form_state) {
  variable_set('user_mail_register_admin_created_subject', $form_state['input']['mail_subject']);
  variable_set('user_mail_register_admin_created_body', $form_state['input']['mail_body']);
}
