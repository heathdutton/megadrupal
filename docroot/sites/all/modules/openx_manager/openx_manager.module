<?php
/**
 * @author Bruno Massa http://drupal.org/user/67164
 * @file
 * Control a OpenX server from distance.
 */

/**
 * The main interface with the OpenX API
 *
 * @param $op
 *   String. The operation to be done
 * @param ...
 *   Any. Any needed data to execute the API operation.
 */
function _openx_manager_api($op) {
  module_load_include('api.inc', 'openx_manager');
  $args = func_get_args();
  return call_user_func_array('_openx_manager_call', $args);
}

/**
 * Implementation of hook_exit().
 */
function openx_manager_exit() {
  // Close the connextion with OpenX server, if opened.
  if (_openx_manager_session(TRUE)) {
    xmlrpc(
      'http://'. variable_get('openx_manager_server', '') .'/www/api/v1/xmlrpc/LogonXmlRpcService.php',
      'logoff',
      _openx_manager_session()
    );
  }
}

/**
 * Implementation of hook_form_alter().
 */
function openx_manager_form_openx_banner_node_form_alter(&$form, $form_state) {
  $form['buttons']['#weight'] = 99;
  $form['#theme']             = 'openx_banner_form';
}

/**
 * Implementation of hook_form_alter().
 */
function openx_manager_form_openx_zone_node_form_alter(&$form, $form_state) {
  $form['#validate'][] = '_openx_node_zone_validate2';
  drupal_add_js(drupal_get_path('module', 'openx_manager') .'/openx_manager.zone.js');
}

/**
 * Implementation of hook_link().
 */
function openx_manager_link($type, $object, $teaser = FALSE) {
  if ($type == 'node' and empty($teaser)) {
    if ($object->type == 'openx_advertiser' and user_access('create openx campaigns')) {
      $links['create_campaign'] = array(
        'title'       => t('Create a new Campaign'),
        'href'        => 'node/add/openx-campaign',
        'query'       => array('oaid' => $object->oaid, 'nid' => $object->nid),
      );
    }
    elseif ($object->type == 'openx_campaign') {
      if (user_access('create openx banners')) {
      $links['create_banner'] = array(
        'title'       => t('Create a new Banner'),
        'href'        => 'node/add/openx-banner',
        'query'       => array('ocid' => $object->ocid, 'nid' => $object->nid),
      );
      }
      if (user_access('link zone to campaigns')) {
        $links['link_campaign'] = array(
          'title'       => t('Link it a zone'),
          'href'        => "node/{$object->nid}/link-campaign-zone",
        );
      }
    }
    elseif ($object->type == 'openx_publisher' and user_access('create openx zones')) {
      $links['create_zone'] = array(
        'title'       => t('Create a new Zone'),
        'href'        => 'node/add/openx-zone',
        'query'       => array('opid' => $object->opid, 'nid' => $object->nid),
      );
    }
    elseif ($object->type == 'openx_zone') {
      if (user_access('link zone to campaigns')) {
        $links['link_campaign'] = array(
          'title'       => t('Link it a campaign'),
          'href'        => "node/{$object->nid}/link-zone-campaign",
        );
      }
      if (user_access('link zone to banners')) {
        $links['link_banner'] = array(
          'title'       => t('Link it a banner'),
          'href'        => "node/{$object->nid}/link-zone-banner",
        );
      }
    }
    elseif ($object->type == 'openx_banner' and user_access('link zone to banners')) {
      $links['link_zone'] = array(
        'title'       => t('Link it a zone'),
        'href'        => "node/{$object->nid}/link-banner-zone",
      );
    }
    if (!empty($links)) {
      return $links;
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function openx_manager_menu() {
  // Settings pages
  $items['admin/settings/openx-manager'] = array(
    'access arguments'  => array('administer site configuration'),
    'description'       => 'Control a OpenX server from here',
    'file'              => 'openx_manager.settings.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_openx_manager_settings'),
    'title'             => 'OpenX manager',
  );
  $items['admin/settings/openx-manager/settings'] = array(
    'title'             => 'Settings',
    'type'              => MENU_DEFAULT_LOCAL_TASK,
    'weight'            => -10
  );
  $items['admin/settings/openx-manager/import'] = array(
    'access arguments'  => array('administer site configuration'),
    'description'       => 'Import data from OpenX server',
    'file'              => 'openx_manager.settings.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_openx_manager_import'),
    'title'             => 'OpenX data import',
    'type'              => MENU_LOCAL_TASK,
  );

  // Drupal User - OpenX user integration
  $items['user/%user/advertiser'] = array(
    'access callback'   => '_openx_manager_user_integration',
    'access arguments'  => array('user-advertiser', 1),
    'file'              => 'openx_manager.advertiser.inc',
    'page callback'     => '_openx_user_advertiser',
    'page arguments'    => array(1),
    'title'             => 'Advertiser',
    'type'              => MENU_LOCAL_TASK,
    'weight'            => 1,
  );
  $items['user/%user/manager'] = array(
    'access callback'   => '_openx_manager_user_integration',
    'access arguments'  => array('user-manager', 1),
    'file'              => 'openx_manager.manager.inc',
    'page callback'     => '_openx_user_manager',
    'page arguments'    => array(1),
    'title'             => 'Manager',
    'type'              => MENU_LOCAL_TASK,
    'weight'            => 1,
  );
  $items['user/%user/publisher'] = array(
    'access callback'   => '_openx_manager_user_integration',
    'access arguments'  => array('user-publisher', 1),
    'file'              => 'openx_manager.publisher.inc',
    'page callback'     => '_openx_user_publisher',
    'page arguments'    => array(1),
    'title'             => 'Publisher',
    'type'              => MENU_LOCAL_TASK,
    'weight'            => 1,
  );
  $items['user/%user/ouser'] = array(
    'access callback'   => '_openx_manager_user_integration',
    'access arguments'  => array('user-user', 1),
    'file'              => 'openx_manager.user.inc',
    'page callback'     => '_openx_user_user',
    'page arguments'    => array(1),
    'title'             => 'OpenX User',
    'type'              => MENU_LOCAL_TASK,
    'weight'            => 1,
  );

  // Link Zone to Campaign and Banner pages
  $items['node/%node/link-banner-zone'] = array(
    'access arguments'  => array('link zone to banners', 1),
    'file'              => 'openx_manager.zone.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_openx_node_zone_link_banner', 1, 'banner'),
    'title'             => 'Link to Banners',
    'type'              => MENU_CALLBACK,
  );
  $items['node/%node/link-campaign-zone'] = array(
    'access arguments'  => array('link zone to campaigns', 1),
    'file'              => 'openx_manager.zone.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_openx_node_zone_link_campaign', 1, 'campaign'),
    'title'             => 'Link to Campaigns',
    'type'              => MENU_CALLBACK,
  );
  $items['node/%node/link-zone-banner'] = array(
    'access arguments'  => array('link zone to banners', 1),
    'file'              => 'openx_manager.zone.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_openx_node_zone_link_banner', 1, 'zone'),
    'title'             => 'Link to Banners',
    'type'              => MENU_CALLBACK,
  );
  $items['node/%node/link-zone-campaign'] = array(
    'access arguments'  => array('link zone to campaigns', 1),
    'file'              => 'openx_manager.zone.inc',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('_openx_node_zone_link_campaign', 1, 'zone'),
    'title'             => 'Link to Campaigns',
    'type'              => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_node_info().
 */
function openx_manager_node_info() {
  return array(
    'openx_advertiser' => array(
      'description' => t('OpenX Advertisers'),
      'has_body'    => FALSE,
      'locked'      => TRUE,
      'module'      => 'openx_node_advertiser',
      'name'        => t('Advertiser'),
    ),
    'openx_banner' => array(
      'description' => t('OpenX Banners'),
      'has_body'    => FALSE,
      'locked'      => TRUE,
      'module'      => 'openx_node_banner',
      'name'        => t('Banner'),
    ),
    'openx_campaign' => array(
      'description' => t('OpenX Campaigns'),
      'has_body'    => FALSE,
      'locked'      => TRUE,
      'module'      => 'openx_node_campaign',
      'name'        => t('Campaign'),
    ),
    'openx_manager' => array(
      'description' => t('OpenX Managers'),
      'has_body'    => FALSE,
      'locked'      => TRUE,
      'module'      => 'openx_node_manager',
      'name'        => t('Manager'),
    ),
    'openx_publisher' => array(
      'description' => t('OpenX Publishers'),
      'has_body'    => FALSE,
      'locked'      => TRUE,
      'module'      => 'openx_node_publisher',
      'name'        => t('Publisher'),
    ),
    'openx_user' => array(
      'description' => t('OpenX Users'),
      'has_body'    => FALSE,
      'locked'      => TRUE,
      'module'      => 'openx_node_user',
      'name'        => t('User'),
    ),
    'openx_zone' => array(
      'description' => t('OpenX Zones'),
      'has_body'    => FALSE,
      'locked'      => TRUE,
      'module'      => 'openx_node_zone',
      'name'        => t('Zone'),
    ),
  );
}

/**
 * Implementation of hook_perm().
 */
function openx_manager_perm() {
  return array(
    'create openx advertisers',
    'create openx banners',
    'create openx campaigns',
    'create openx campaigns - priority',
    'create openx managers',
    'create openx publishers',
    'create openx users',
    'create openx zones',
    'edit own openx advertisers',
    'edit own openx banners',
    'edit own openx campaigns',
    'edit own openx managers',
    'edit own openx publishers',
    'edit own openx users',
    'edit own openx zones',
    'view openx advertisers',
    'view openx banners',
    'view openx campaigns',
    'view openx managers',
    'view openx publishers',
    'view openx users',
    'view openx zones',

    'link zone to banners',
    'link zone to campaigns',

    'user-advertiser', 'user-manager', 'user-publisher', 'user-user'
  );
}

/**
 * Ask, if not already, a new session ID from OpenX
 *
 * @param $check_only
 *   Boolean (optional). TRUE if its only to check if the session was already opened.
 * @param $server
 *   String (optional). The OpenX server URL.
 * @param $username
 *   String (optional). The OpenX server account username.
 * @param $password
 *   String (optional). The OpenX server account password.
 * @return
 *   String. The full session ID, used on every further communication.
 */
function _openx_manager_session($check_only = FALSE, $server = NULL, $username = NULL, $password = NULL) {
  static $session_id;
  if (!$check_only and !$session_id) {
    if (empty($server) and empty($username) and empty($password)) {
      $server   = variable_get('openx_manager_server', '');
      $username = variable_get('openx_manager_username', '');
      $password = variable_get('openx_manager_password', '');
    }

    $session_id = xmlrpc(
      $server .'/www/api/v1/xmlrpc/LogonXmlRpcService.php',
      'logon',
      $username,
      $password
    );
    if (xmlrpc_errno()) {
      drupal_set_message(t('Not possible to connect with the OpenX server.'), 'error');
    }
  }
  return $session_id;
}

/**
 * Check if the values needed to connect with OpenX server are all set.
 *
 * @return
 *   Boolean. TRUE if all values are set.
 */
function _openx_manager_server_status() {
  static $server_status;
  if (!isset($server_status)) {
    $server_status = (variable_get('openx_manager_server', '')
      and variable_get('openx_manager_username', '')
      and variable_get('openx_manager_password', ''));
  }
  return $server_status;
}

/**
 * Implementation of hook_theme().
 */
function openx_manager_theme() {
  return array(
    'openx_advertiser' => array(
      'file'      => 'openx_manager.advertiser.inc',
      'arguments' => array('node'),
    ),
    'openx_banner' => array(
      'file'      => 'openx_manager.banner.inc',
      'arguments' => array('node'),
    ),
    'openx_banner_form' => array(
      'file'      => 'openx_manager.banner.inc',
      'arguments' => array('form'),
    ),
    'openx_campaign' => array(
      'file'      => 'openx_manager.campaign.inc',
      'arguments' => array('node'),
    ),
    'openx_manager' => array(
      'file'      => 'openx_manager.manager.inc',
      'arguments' => array('node'),
    ),
    'openx_publisher' => array(
      'file'      => 'openx_manager.publisher.inc',
      'arguments' => array('node'),
    ),
    'openx_user' => array(
      'file'      => 'openx_manager.user.inc',
      'arguments' => array('node'),
    ),
    'openx_zone' => array(
      'file'      => 'openx_manager.zone.inc',
      'arguments' => array('node'),
    ),
  );
}

/**
 * Implementation of hook_user().
 */
function openx_manager_user($type, &$edit, &$user, $category = NULL) {
  // If the server is not set yet, dont do any operation

  if ($type == 'insert' or $type == 'update') {
    if (user_access('user-advertiser')) {
      module_load_include('advertiser.inc', 'openx_manager');
      _openx_user_advertiser_update($user, $edit);
    }
    if (user_access('user-manager')) {
      module_load_include('manager.inc', 'openx_manager');
      _openx_user_manager_update($user, $edit);
    }
    if (user_access('user-publisher')) {
      module_load_include('publisher.inc', 'openx_manager');
      _openx_user_publisher_update($user, $edit);
    }
//     if (user_access('user-user')) {
//       module_load_include('user.inc', 'openx_manager');
//       _openx_user_user_update($user, $edit);
//     }
  }
  if ($type == 'delete') {
    if (user_access('user-advertiser')) {
      module_load_include('advertiser.inc', 'openx_manager');
      _openx_user_advertiser_delete($user);
    }
    if (user_access('user-manager')) {
      module_load_include('manager.inc', 'openx_manager');
      _openx_user_manager_delete($user);
    }
    if (user_access('user-publisher')) {
      module_load_include('publisher.inc', 'openx_manager');
      _openx_user_publisher_delete($user);
    }
    if (user_access('user-user')) {
      module_load_include('user.inc', 'openx_manager');
      _openx_user_user_delete($user);
    }
  }
}

/**
 * Check if the user can be integrated with a OpenX user.
 */
function _openx_manager_user_integration($permission, $user) {
  return variable_get('openx_manager_user_integration', FALSE) and user_access($permission);
}

/**
 * Implementation of hook_views_api().
 */
function openx_manager_views_api() {
  return array(
    'api'   => 2,
    'path'  => drupal_get_path('module', 'openx_manager') .'/views',
  );
}

/**
 * Implementation of hook_access().
 *
 * For Advertisers
 */
function openx_node_advertiser_access($op, $node, $account) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_access($op, $node, $account);
}

/**
 * Implementation of hook_delete().
 *
 * For Advertisers
 */
function openx_node_advertiser_delete(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Advertisers
 */
function openx_node_advertiser_form(&$node, $form_state) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Advertisers
 */
function openx_node_advertiser_insert(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Advertisers
 */
function openx_node_advertiser_load(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Advertisers
 */
function openx_node_advertiser_update(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Advertisers
 */
function openx_node_advertiser_validate(&$node) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_advertiser_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('advertiser.inc', 'openx_manager');
  return _openx_node_advertiser_view($node, $teaser, $page);
}

/**
 * Implementation of hook_access().
 *
 * For Banners
 */
function openx_node_banner_access($op, $node, $account) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_access($op, $node, $account);
}

/**
 * Implementation of hook_delete().
 *
 * For Banners
 */
function openx_node_banner_delete(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Banners
 */
function openx_node_banner_form(&$node, $form_state) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Banners
 */
function openx_node_banner_insert(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Banners
 */
function openx_node_banner_load(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Banners
 */
function openx_node_banner_update(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Banners
 */
function openx_node_banner_validate(&$node) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_banner_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('banner.inc', 'openx_manager');
  return _openx_node_banner_view($node, $teaser, $page);
}

/**
 * Implementation of hook_access().
 *
 * For Campaigns
 */
function openx_node_campaign_access($op, $node, $account) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_access($op, $node, $account);
}

/**
 * Implementation of hook_delete().
 *
 * For Campaigns
 */
function openx_node_campaign_delete(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Campaigns
 */
function openx_node_campaign_form(&$node, $form_state) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Campaigns
 */
function openx_node_campaign_insert(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Campaigns
 */
function openx_node_campaign_load(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Campaigns
 */
function openx_node_campaign_update(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Campaigns
 */
function openx_node_campaign_validate(&$node) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_campaign_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('campaign.inc', 'openx_manager');
  return _openx_node_campaign_view($node, $teaser, $page);
}

/**
 * Implementation of hook_access().
 *
 * For Managers
 */
function openx_node_manager_access($op, $node, $account) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_access($op, $node, $account);
}

/**
 * Implementation of hook_delete().
 *
 * For Managers
 */
function openx_node_manager_delete(&$node) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Managers
 */
function openx_node_manager_form(&$node, $form_state) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Managers
 */
function openx_node_manager_insert(&$node) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Managers
 */
function openx_node_manager_load(&$node) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Managers
 */
function openx_node_manager_update(&$node) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Managers
 */
function openx_node_manager_validate(&$node) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_manager_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('manager.inc', 'openx_manager');
  return _openx_node_manager_view($node, $teaser, $page);
}

/**
 * Implementation of hook_access().
 *
 * For Publishers
 */
function openx_node_publisher_access($op, $node, $account) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_access($op, $node, $account);
}

/**
 * Implementation of hook_delete().
 *
 * For Publishers
 */
function openx_node_publisher_delete(&$node) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Publishers
 */
function openx_node_publisher_form(&$node, $form_state) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Publishers
 */
function openx_node_publisher_insert(&$node) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Publishers
 */
function openx_node_publisher_load(&$node) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Publishers
 */
function openx_node_publisher_update(&$node) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Publishers
 */
function openx_node_publisher_validate(&$node) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_publisher_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('publisher.inc', 'openx_manager');
  return _openx_node_publisher_view($node, $teaser, $page);
}

/**
 * Implementation of hook_access().
 *
 * For Users
 */
function openx_node_user_access($op, $node, $account) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_access($op, $node, $account);
}

/**
 * Implementation of hook_delete().
 *
 * For Users
 */
function openx_node_user_delete(&$node) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Users
 */
function openx_node_user_form(&$node, $form_state) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Users
 */
function openx_node_user_insert(&$node) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Users
 */
function openx_node_user_load(&$node) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Users
 */
function openx_node_user_update(&$node) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Users
 */
function openx_node_user_validate(&$node) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_user_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('user.inc', 'openx_manager');
  return _openx_node_user_view($node, $teaser, $page);
}

/**
 * Implementation of hook_access().
 *
 * For Zones
 */
function openx_node_zone_access($op, $node, $account) {
  module_load_include('zone.inc', 'openx_manager');
  return _openx_node_zone_access($op, $node, $account);
}

/**
 * Implementation of hook_delete().
 *
 * For Zones
 */
function openx_node_zone_delete(&$node) {
  module_load_include('zone.inc', 'openx_manager');
  return _openx_node_zone_delete($node);
}

/**
 * Implementation of hook_form().
 *
 * For Zones
 */
function openx_node_zone_form(&$node, $form_state) {
  module_load_include('zone.inc', 'openx_manager');
  return _openx_node_zone_form($node, $form_state);
}

/**
 * Implementation of hook_insert().
 *
 * For Zones
 */
function openx_node_zone_insert(&$node) {
  module_load_include('zone.inc', 'openx_manager');
  return _openx_node_zone_insert($node);
}

/**
 * Implementation of hook_load().
 *
 * For Zones
 */
function openx_node_zone_load(&$node) {
  module_load_include('zone.inc', 'openx_manager');
  return _openx_node_zone_load($node);
}

/**
 * Implementation of hook_update().
 *
 * For Zones
 */
function openx_node_zone_update(&$node) {
  module_load_include('zone.inc', 'openx_manager');
  return _openx_node_zone_update($node);
}

/**
 * Implementation of hook_validate().
 *
 * For Zones
 */
function openx_node_zone_validate(&$node) {
  module_load_include('zone.inc', 'openx_manager');
  return _openx_node_zone_validate($node);
}

/**
 * Implementation of hook_view().
 *
 * For Advertisers
 */
function openx_node_zone_view(&$node, $teaser = FALSE, $page = FALSE) {
  module_load_include('zone.inc', 'openx_zone');
  return _openx_node_zone_view($node, $teaser, $page);
}
