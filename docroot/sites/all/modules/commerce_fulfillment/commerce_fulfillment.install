<?php

/**
 * @file
 * Builds the two custom entities for the module.
 */

/**
 * Implements hook_schema().
 */
function commerce_fulfillment_schema() {

  $schema = array();

  $schema['commerce_fulfillment_packages'] = array(
    'description' => 'The base table for the package entity',
    'fields' => array(
      'package_id' => array(
        'description' => 'Primary key of the package entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'box_type' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('package_id'),
    'foreign keys' => array(
      'order_id' => array(
        'table' => 'commerce_order',
        'columns' => array('order_id' => 'order_id'),
      ),
      'commerce_fulfillment_line_items' => array(
        'table' => 'commerce_line_item',
        'columns' => array('commerce_fulfillment_line_item' => 'line_item_id'),
      ),
      'commerce_fulfillment_shipping' => array(
        'table' => 'commerce_customer_profile',
        'columns' => array('commerce_fulfillment_shipping' => 'profile_id'),
      ),
    ),
  );

  $schema['commerce_fulfillment_shipments'] = array(
    'description' => 'The base table for the Shipment entity',
    'fields' => array(
      'shipment_id' => array(
        'description' => 'Primary key of the Shipment entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'Status of the shipment("Pending" or "Completed")',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'tracking_number' => array(
        'description' => 'Tracking number for the shipments',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('shipment_id'),
    'foreign keys' => array(
      'order_id' => array(
        'table' => 'commerce_order',
        'columns' => array('order_id' => 'order_id'),
      ),
      'commerce_fulfillment_packages' => array(
        'table' => 'commerce_fulfillment_packages',
        'columns' => array('commerce_fulfillment_packages' => 'commerce_fulfillment_packages'),
      ),
      'commerce_fulfillment_shipping' => array(
        'table' => 'commerce_fulfillment_packages',
        'columns' => array('commerce_fulfillment_shipping' => 'commerce_fulfillment_shipping'),
      ),
    ),
  );

  return $schema;

}

/**
 * Implements hook_enable().
 */
function commerce_fulfillment_enable() {
  commerce_fulfillment_configure_package_type();
  commerce_fulfillment_configure_shipment_type();
}

/**
 * Implements hook_uninstall().
 */
function commerce_fulfillment_uninstall() {
  variable_del('commerce_fulfillment_package_type');
  variable_del('commerce_fulfillment_company');
  variable_del('commerce_fulfillment_address');
  variable_del('commerce_fulfillment_phone');
  variable_del('commerce_fulfillment_boxtype');
  variable_del('commerce_fulfillment_logo');
}
