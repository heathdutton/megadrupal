<?php

/**
 * @file
 * mojeID module adds mojeID branding to Drupal openid forms and adds some
 * features for better integration with the mojeID provider.
 *
 * Read more about mojeID (the OpenID provider ) - http://mojeid.cz/
 *
 * @author Vojtech Kusy - http://vojtechkusy.com/
 *
 * CREDITS
 *  - Initial development sponsored by NIC.CZ - http://www.nic.cz/
 *  - Developed by Ants! - http://atomicant.co.uk/
 */

//=============================================================================
//  DRUPAL HOOKS
//=============================================================================

/**
 * Implements hook_menu().
 */
function mojeid_registration_menu() {

  $items['admin/config/people/mojeid/registration'] = array(
    'title' => 'Registration',
    'description'  => 'Configure mojeID registration settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mojeid_registration_admin_settings'),
    'access arguments' => array('administer mojeid'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'mojeid_registration.admin.inc',
  );

  if (variable_get('mojeid_registration', TRUE)) {
    $items[_mojeid_registration_page_get('path')] = array(
      'title' => _mojeid_registration_page_get('title'),
      'page callback' => 'mojeid_registration_benefits_page',
      'access callback' => TRUE,
      'type' => MENU_SUGGESTED_ITEM,
      'file' => 'mojeid_registration.pages.inc',
    );

    $items['mojeid/registration'] = array(
      'title' => 'mojeID registration endpoint',
      'page callback' => 'mojeid_registration_endpoint',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
      'file' => 'mojeid_registration.pages.inc',
    );
  }

  return $items;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * @see mojeid_admin_settings()
 */
function mojeid_registration_form_mojeid_admin_settings_alter(&$form, &$form_state) {
  $form['banners']['mojeid_promo_icons']['#options']['mojeid_benefits_page'] = t('mojeID benefits page');
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * @see user_login_block()
 * @see _mojeid_form_alter_user_login()
 */
function mojeid_registration_form_user_login_block_alter(&$form, &$form_state) {
  if (empty($form['mojeid_links'])) {
    $form['mojeid_links'] = array(
      '#theme' => 'item_list',
      '#items' => array(),
      '#attributes' => array('class' => array('mojeid-links')),
      '#weight' => 9,
    );
  }

  $form['mojeid_links']['#items'][] = array(
    'data' => l(t('mojeID benefits') , _mojeid_registration_page_get('path')),
    'class' => array('mojeid-benefits'),
  );

  // Hide links in description, we need users to go through our "benefits" page.
  if (isset($form['mojeid_identifier']['#description'])) {
    unset($form['mojeid_identifier']['#description']);
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * @see user_login()
 * @see _mojeid_form_alter_user_login()
*/
function mojeid_registration_form_user_login_alter(&$form, &$form_state) {
  $button_type = variable_get('mojeid_direct_login_button', 'basic');
  $form['actions']['mojeid_registration'] = mojeid_registration_button($button_type);
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * @see user_register_form()
 */
function mojeid_registration_form_user_register_form_alter(&$form, &$form_state) {
  // Load additional CSS.
  $form['#attached']['css'][] = drupal_get_path('module', 'mojeid') . '/mojeid.css';

  // Show mojeID register button.
  $button_type = variable_get('mojeid_direct_login_button', 'basic');
  $form['actions']['mojeid_registration'] = mojeid_registration_button($button_type);
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * @see user_login_block()
 * @see user_register_form()
 * @see _mojeid_form_alter_user_login()
 */
function mojeid_registration_form_alter(&$form, &$form_state, $form_id) {
  if (in_array($form_id, array('user_login', 'user_register_form', 'user_register'))) {
    if (empty($form['mojeid_links'])) {
      $form['mojeid_links'] = array(
        '#theme' => 'item_list',
        '#items' => array(),
        '#attributes' => array('class' => array('mojeid-links')),
        '#weight' => 2,
      );
    }

    $form['mojeid_links']['#items'][] = array(
      'data' => l(t('Benefits for mojeID users') , _mojeid_registration_page_get('path')),
      'class' => array('mojeid-link'),
    );
  }
}

/**
 * Implementation of hook_xrds(); Simple XRDS module.
 */
function mojeid_registration_xrds($account = NULL) {
  $xrds = array();

  $xrds['mojeid_registration_assert_url'] = array(
    'services' => array(
      array(
        'priority' => 10,
        'data' => array(
          'Type' => array('http://specs.nic.cz/registration/assert_url'),
          'URI' => array(url('mojeid/registration', array('absolute' => TRUE, 'https' => TRUE))),
        ),
      )
    )
  );

  return $xrds;
}

//=============================================================================
//  MODULE FUNCTIONS
//=============================================================================

/**
 * A reusable mojeID registration form button.
 */
function mojeid_registration_button() {
  // Image button.
  if (variable_get('mojeid_direct_login_button', 'basic') == 'image') {
    module_load_include('inc', 'mojeid');
    $module_path = drupal_get_path('module', 'mojeid');
    $theme = variable_get('mojeid_theme', 'silver_155x24');
    list($color, $size) = explode('_', $theme);

    $element = array(
      '#type' => 'image_button',
      '#src' => mojeid_file_language_variant("$module_path/img/buttons_$color/reg_$size.png"),
      // @todo: remove the comment when http://drupal.org/node/1452894 will be fixed
      //'#value' => t('mojeID registration'),
      '#attributes' => array(
        'class' => array('image-button'),
        'title' => t('Register to mojeID'),
      ),
      '#weight' => 15,
      '#submit' => array('mojeid_registration_button_submit'),
      '#limit_validation_errors' => array(),
    );
  }
  // Basic submit button.
  else {
    $element = array(
      '#type' => 'submit',
      '#value' => t('mojeID registration'),
      '#weight' => 10,
      '#submit' => array('mojeid_registration_button_submit'),
      '#limit_validation_errors' => array(),
    );
  }

  return $element;
}

/**
 * A reusable submit handler for mojeID registration form buttons.
 */
function mojeid_registration_button_submit($form, &$form_state) {
  mojeid_registration_begin();
}

/**
 * Initialize the mojeID registration process, redirect user to mojeID provider.
 *
 * Invokes:
 *   hook_mojeid_registration_request_alter() and
 *   hook_mojeid_registration_request().
 *
 * @param array $data
 *   Additional data that we want to pass to mojeID, check the documentation.
 */
function mojeid_registration_begin($data = array()) {
  $test = variable_get('mojeid_server', MOJEID_SERVER) == MOJEID_SERVER_TEST;
  $endpoint = $test ? MOJEID_REGISTRATION_ENDPOINT_TEST : MOJEID_REGISTRATION_ENDPOINT;

  // Prevent any language modifications to the url by generating and using a fake language object.
  $language = new stdClass();
  $language->language = '';
  $language->prefix = '';

  // Construct valid HTTPS domain name - a realm.
  $realm = url('', array('absolute' => TRUE, 'https' => TRUE, 'language' => $language));

  // Set required data - site realm URL and unique nonce.
  $data['realm'] = $realm;
  $data['registration_nonce'] = mojeid_registration_get_nonce();

  // Invoke hook_mojeid_registration_request_alter().
  drupal_alter('mojeid_registration_request', $data);

  // Invoke hook_mojeid_registration_request().
  module_invoke_all('mojeid_registration_request', $data);

  openid_redirect($endpoint, $data);
}

/**
 * Creates unique nonce for future reply validation.
 *
 * @return string
 */
function mojeid_registration_get_nonce() {
  module_load_include('inc', 'openid');

  // Create new nonce.
  $nonce = _openid_nonce();

  // Record that this nonce was used. Nonce is valid for the next 30 mins.
  db_insert('mojeid_nonce')
    ->fields(array(
      'nonce' => $nonce,
      'expires' => REQUEST_TIME + 1800,
    ))
    ->execute();

  return $nonce;
}

/**
 * Verify that the given nonce exists.
 *
 * @param string $nonce
 * @return bool
 */
function mojeid_registration_verify_nonce($nonce) {
  // Delete expired nonces.
  db_query("DELETE FROM {mojeid_nonce} WHERE expires > :expires", array(':expires' => REQUEST_TIME));

  // Validate nonce.
  $nonce_exists = db_query("SELECT COUNT(nonce) FROM {mojeid_nonce} WHERE nonce = :nonce", array(':nonce' => $nonce))->fetchField();
  // @todo Do we need to care about nonce replay attack? Nonce is valid for 30 mins.

  return (bool) $nonce_exists;
}

//=============================================================================
//  MODULE HELPER FUNCTIONS
//=============================================================================

/**
 * Default page body for Benefits for users site.
 *
 * @return string
 */
function _mojeid_registration_page_get($element) {
  switch ($element) {
    case 'path':
      return variable_get('mojeid_registration_page_path', 'mojeid/benefits');
    case 'title':
      return variable_get('mojeid_registration_page_title', t('Benefits for mojeID users'));
    case 'body':
      return variable_get('mojeid_registration_page_body', t('<strong>1. One password for many websites</strong>
<p>You do not need to remember tens of usernames and passwords for various websites. You will only use a single username and password which will allow you to log in to your favourite websites from any computer or mobile phone. Your Internet life will now be much easier.</p>
<p><strong>Example:</strong> You use one account for your e-mail service, then you have to remember your login details for several e-shops, and for your favourite Internet forum or message board you need another username and password. <strong>Once the mojeID service is implemented for all these services, you will log in with only a single username and password. You will simply log in via the mojeID service.</strong></p>

<strong>2. Private data under control</strong>
<p>Are you tired of changing your e-mail address at several web servers? Do you have a new e-mail address? Now, you only need to change these data once - mojeID will make sure that your favourite websites have all your important data updated with every log-in.</p>
<p>You can set your data you want to share with various service providers via the mojeID service.</p>
<p><strong>Example:</strong> When you start using a new e-mail address, you need to change your user profiles at several servers or maybe tens of servers. This is to make sure the news, confirming e-mails, etc. from various Internet services always reach you. <strong>With mojeID you only need to change your e-mail address once. All the other pages will automatically update as soon as you log in to them.</strong></p>

<strong>3. Safer log-in</strong>
<p>If you use tens of passwords, you probably keep track of them. At the worst, you keep them written on a piece of paper which may be stolen or otherwise misused. <strong>With mojeID you will not need these passwords.</strong> mojeID supports other more secure login methods than plain password. Digital certificates are supported and one time passwords support is planned for future versions.</p>
<p><strong>Example:</strong> In case you do not consider plain password login to be secure it is possible to use other login methods. You can select login method each time you login.</p>'));
    case 'body_format':
      return variable_get('mojeid_registration_page_body_format', 'filtered_html');
  }
}
