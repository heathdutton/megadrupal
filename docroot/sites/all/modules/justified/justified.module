<?php

/**
 * @file
 * Primary hooks for Justified module.
 */

define('JUSTIFIED_LIBRARY_DIR', 'sites/all/libraries/justified');

/**
 * Implements hook_library().
 */
function justified_library() {
  $libraries['justified'] = array(
    'title' => 'justified.js',
    'website' => 'https://github.com/nitinhayaran/Justified.js',
    'version' => '1.1.1',
    'js' => array(
      JUSTIFIED_LIBRARY_DIR . '/jquery.justified.min.js' => array(),
    ),
    'css' => array(
      JUSTIFIED_LIBRARY_DIR . '/jquery.justified.css' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_field_formatter_info().
 */
function justified_field_formatter_info() {
  $image_formatters = image_field_formatter_info();

  $formatters['justified'] = $image_formatters['image'];
  $formatters['justified']['label'] = t('Justified');
  $formatters['justified']['settings']['row_height'] = 150;
  $formatters['justified']['settings']['max_row_height'] = 500;
  $formatters['justified']['settings']['margin'] = 3;

  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function justified_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $element = image_field_formatter_settings_form($field, $instance, $view_mode, $form, $form_state);

  $settings = $instance['display'][$view_mode]['settings'];

  $element['row_height'] = array(
    '#title' => t('Row height'),
    '#type' => 'textfield',
    '#default_value' => $settings['row_height'],
    '#element_validate' => array('element_validate_integer_positive'),
    '#size' => 10,
  );

  $element['max_row_height'] = array(
    '#title' => t('Max row height'),
    '#type' => 'textfield',
    '#default_value' => $settings['max_row_height'],
    '#element_validate' => array('element_validate_integer_positive'),
    '#size' => 10,
  );

  $element['margin'] = array(
    '#title' => t('Margin'),
    '#type' => 'textfield',
    '#default_value' => $settings['margin'],
    '#element_validate' => array('element_validate_integer_positive'),
    '#size' => 10,
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function justified_field_formatter_settings_summary($field, $instance, $view_mode) {
  $image_summary = image_field_formatter_settings_summary($field, $instance, $view_mode);

  $settings = $instance['display'][$view_mode]['settings'];
  $summary[] = t('Row height: !row_height', array('!row_height' => $settings['row_height']));
  $summary[] = t('Max row height: !max_row_height', array('!max_row_height' => $settings['max_row_height']));
  $summary[] = t('Mow margin: !margin', array('!margin' => $settings['margin']));

  return $image_summary . '<br/>' . implode('<br/>', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function justified_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  $settings = $display['settings'];
  $images = array();
  foreach ($items as $item) {
    $image = array(
      'alt' => $item['alt'],
      'title' => $item['title'],
    );
    if ($settings['image_style']) {
      // Determine the dimensions of the styled image.
      $dimensions = array(
        'width' => $item['width'],
        'height' => $item['height'],
      );
      image_style_transform_dimensions($settings['image_style'], $dimensions);
      $image['width'] = $dimensions['width'];
      $image['height'] = $dimensions['height'];
      $image['path'] = image_style_url($settings['image_style'], $item['uri']);
    }
    else {
      $image['width'] = $item['width'];
      $image['height'] = $item['height'];
      $image['path'] = file_create_url($item['uri']);
    }

    $images[] = $image;
  }

  $element = array(
    '#theme' => 'container',
    '#attributes' => array(
      'id' => drupal_html_id('justified-containter'),
      'class' => array('justified-container'),
    ),
    '#attached' => array(
      'library' => array(array('justified', 'justified')),
      'js' => array(drupal_get_path('module', 'justified') . '/justified.js'),
    ),
  );

  $js_settings['justified']['instances'][] = array(
    'images' => $images,
    'id' => $element['#attributes']['id'],
    'row_height' => $display['settings']['row_height'],
    'max_row_height' => $display['settings']['max_row_height'],
    'margin' => $display['settings']['margin'],
  );

  drupal_add_js($js_settings, 'setting');
  return $element;
}
