<?php

/**
 * @file
 * Implement socialshare support for Drupal
 */
/**
 * Implements hook_menu().
 * Responed to url handling for lr_social_sharing module.
 *
 * @return array An array of menu items
 */
function lr_social_sharing_menu() {
  $file_path = drupal_get_path('module', 'lr_social_sharing');
  $path = 'admin/config/people/userregistration/share';
  if (!module_exists('lr_social_login')) {

    $path = 'admin/config/people/userregistration/share/settings';
    $items['admin/config/people/userregistration/share'] = array(
      'title' => 'Social Sharing',
      'description' => 'Configure setting for Social Sharing',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('lr_social_sharingbar_settings_form'),
      'access arguments' => array('administer social sharing'),
      'weight' => -4,
      'file' => 'includes/lr_social_sharing.admin.inc',
    );
  }
  $items[$path] = array(
    'title' => 'Social Sharing',
    'description' => 'lr_social_sharing Share settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lr_social_sharingbar_settings_form'),
    'access arguments' => array('administer social sharing'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'file path' => $file_path,
    'file' => 'includes/lr_social_sharing.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 *
 * Responed to Define user permissions.
 *
 * @return array An array of permission settings
 */
function lr_social_sharing_permission() {
  return array(
    'administer social sharing' => array(
      'title' => t('Administer Social Sharing settings'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_theme().
 *
 * @return array An associative array of theme hook information
 */
function lr_social_sharing_theme() {
  return array(
    'lr_social_sharing_social_share' => array(
      'variables' => array(
        'node' => NULL,
        'position' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 *
 * @return array An associative array whose keys define the delta for each block and whose values contain the block descriptions
 */
function lr_social_sharing_block_info() {
  $blocks['sharing'] = array(
    'info' => t('Social Sharing'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * @param $delta Which block to render. This is a unique identifier for the block within the module, defined in hook_block_info()
 * @return array Contain block's body and subject
 */
function lr_social_sharing_block_view($delta) {
  $block = array();
  if ($delta == 'sharing') {
    $output = '';
    if (variable_get('lr_social_sharing_enable_horizontal_share') == 1) {
      lr_social_sharing_horizontal_script_code();
      $output .= lr_social_sharing_horizontal_sharing_div();
    }

    if (variable_get('lr_social_sharing_enable_vertical_share') == 1) {
      lr_social_sharing_vertical_script_code();
      $output .= lr_social_sharing_vertical_sharing_div();
    }

    $block['content'] = $output;
  }
  return $block;
}

/**
 * Theme social share
 *
 * @param object $node The node that is being assembled for rendering.
 * @return string Sharing div
 */
function theme_lr_social_sharing_social_share($node) {
  $output = "";
  $item = menu_get_object($type = 'node', $position = 1, $path = NULL);
  $item_nid = (!empty($item->nid) ? $item->nid : "");
  $item_title = (!empty($item->title) ? $item->title : "");
  $shareall_withexcept = variable_get('socialshare_show_pages');
  $node_withexcept = variable_get('socialshare_show_exceptpages');
  $node_except = explode(',', $node_withexcept);
  $vertical_shareall_withexcept = variable_get('socialshare_vertical_show_pages');
  $vertical_node_withexcept = variable_get('socialshare_vertical_show_exceptpages');
  $vertical_node_except = explode(',', $vertical_node_withexcept);
  $share_title = variable_get('socialshare_label_string', 'Share it now!');

  if (variable_get('lr_social_sharing_enable_horizontal_share') == 1) {
    if ($node['position'] == 'horizontal') {
      if ($shareall_withexcept == 0) {
        if (!in_array($item_nid, $node_except) AND !in_array($item_title, $node_except)) {
          $output .= '<div>' . $share_title . '</div>';
          $output .= lr_social_sharing_horizontal_sharing_div();
        }
      }
      elseif ($shareall_withexcept == 1) {
        if (in_array($item_nid, $node_except) OR in_array($item_title, $node_except)) {
          $output .= '<div>' . $share_title . '</div>';
          $output .= lr_social_sharing_horizontal_sharing_div();
        }
      }
    }

    lr_social_sharing_horizontal_script_code();
  }

  if (variable_get('lr_social_sharing_enable_vertical_share') == 1) {
    if ($node['position'] == 'vertical') {
      if ($vertical_shareall_withexcept == 0) {
        if (!in_array($item_nid, $vertical_node_except) AND !in_array($item_title, $vertical_node_except)) {
          $output .= lr_social_sharing_vertical_sharing_div();
        }
      }
      elseif ($vertical_shareall_withexcept == 1) {
        if (in_array($item_nid, $vertical_node_except) OR in_array($item_title, $vertical_node_except)) {
          $output .= lr_social_sharing_vertical_sharing_div();
        }
      }
    }
    lr_social_sharing_vertical_script_code();
  }

  return $output;
}

/**
 * Implements hook_node_view().
 *
 * @param object $node The node that is being assembled for rendering.
 * @param array $view_mode The $view_mode parameter from node_view()
 * @param string $langcode The language code used for rendering.
 */
function lr_social_sharing_node_view($node, $view_mode, $langcode) {
  if (variable_get('lr_social_sharing_enable_horizontal_share') == 1) {
    if (variable_get('socialshare_position_top', 1)) {
      $node->content['socialshare_top'] = array(
        '#markup' => theme('lr_social_sharing_social_share', array(
          'node' => $node,
          'position' => 'horizontal',
        )),
        '#weight' => -10,
      );
    }

    if (variable_get('socialshare_position_bottom', 1)) {
      $node->content['socialshare_bottom'] = array(
        '#markup' => theme('lr_social_sharing_social_share', array(
          'node' => $node,
          'position' => 'horizontal',
        )),
        '#weight' => 10,
      );
    }
  }

  if (variable_get('lr_social_sharing_enable_vertical_share') == 1) {
    $node->content['socialshare_vertical'] = array(
      '#markup' => theme('lr_social_sharing_social_share', array(
        'node' => $node,
        'position' => 'vertical',
      )),
      '#weight' => 10,
    );
  }
}

/**
 *  Horizontal Social Sharing Script code.
 */
function lr_social_sharing_horizontal_script_code() {
  module_load_include('inc', 'lr_social_sharing', 'includes/lr_social_sharing.admin');
  $share_providers = variable_get("lr_social_sharing_rearrange_providers_list");
  $horizontal_image = variable_get('lr_social_sharing_horizontal_images');

  if (empty($share_providers)) {
    variable_set('lr_social_sharing_rearrange_providers_list', lr_social_sharing_default_sharing_networks('lr_social_sharing_rearrange_providers_list'));
  }
  if (in_array($horizontal_image, array('8', '9'))) {

    $counter_providers = variable_get('socialcounter_rearrange_providers_list');

    if (empty($counter_providers)) {
      variable_set('socialcounter_rearrange_providers_list', lr_social_sharing_default_sharing_networks('socialcounter_rearrange_providers_list'));
    }

    $type = 'horizontal';

    if (variable_get('lr_social_sharing_horizontal_images') == '8') {
      $type = 'vertical';
    }

    $mysettings = array(
      'counter' => TRUE,
      'lr_interface' => 'simple',
      'providers' => implode(",", variable_get('socialcounter_rearrange_providers_list')),
      'countertype' => $type,
      'divwidget' => 'lrcounter_simplebox',
    );
  }
  else {
    $interface = 'simpleimage';

    if ($horizontal_image == '0' || $horizontal_image == '1') {
      $interface = 'horizontal';
    }
    elseif ($horizontal_image == '10') {
      $interface = 'responsive';
    }
    $size = '16';

    if ($horizontal_image == '0' || $horizontal_image == '2' || $horizontal_image == '10') {
      $size = '32';
    }

    $mysettings = array(
      'sharing' => TRUE,
      'lr_interface' => $interface,
      'providers' => implode(",", variable_get('lr_social_sharing_rearrange_providers_list')),
      'size' => $size,
      'apikey' => trim(variable_get('socialloginandsocialshare_apikey')),
      'divwidget' => 'lrsharecontainer',
    );
  }

  drupal_add_js(array('advancelrsocialshare' => $mysettings), 'setting');
}

/**
 * Vertical Social Sharing Script code.
 */
function lr_social_sharing_vertical_script_code() {
  module_load_include('inc', 'lr_social_sharing', 'includes/lr_social_sharing.admin');

  if (variable_get('lr_social_sharing_vertical_images') == '4' || variable_get('lr_social_sharing_vertical_images') == '5') {
    $share_providers = variable_get("socialshare_vertical_rearrange_providers_list");

    if (empty($share_providers)) {
      variable_set('socialshare_vertical_rearrange_providers_list', lr_social_sharing_default_sharing_networks('socialshare_vertical_rearrange_providers_list'));
    }

    $size = '16';

    if (variable_get('lr_social_sharing_vertical_images') == '4') {
      $size = '32';
    }
    $position1 = 'bottom';
    $position2 = 'right';
    if (variable_get('socialshare_vertical_position') == '0') {
      $position1 = 'top';
      $position2 = 'left';
    }
    elseif (variable_get('socialshare_vertical_position') == '1') {
      $position1 = 'top';
      $position2 = 'right';
    }
    elseif (variable_get('socialshare_vertical_position') == '2') {
      $position1 = 'bottom';
      $position2 = 'left';
    }

    $mysettings = array(
      'verticalsharing' => TRUE,
      'lr_vertical_interface' => 'Simplefloat',
      'vertical_providers' => implode(",", variable_get('socialshare_vertical_rearrange_providers_list')),
      'vertical_size' => $size,
      'vertical_apikey' => trim(variable_get('lr_social_sharing_apikey')),
      'vertical_position1' => $position1,
      'vertical_position2' => $position2,
      'vertical_offset' => '0px',
      'vertical_divwidget' => 'lrshareverticalcontainer',
    );
  }
  else {
    $counter_providers = variable_get('socialcounter_rearrange_providers_list');

    if (empty($counter_providers)) {
      variable_set('socialcounter_rearrange_providers_list', lr_social_sharing_default_sharing_networks('socialcounter_rearrange_providers_list'));
    }

    $type = 'horizontal';

    if (variable_get('lr_social_sharing_vertical_images') == '6') {
      $type = 'vertical';

    }
    $position1 = 'bottom';
    $position2 = 'right';
    if (variable_get('socialshare_vertical_position') == '0') {
      $position1 = 'top';
      $position2 = 'left';
    }
    elseif (variable_get('socialshare_vertical_position') == '1') {
      $position1 = 'top';
      $position2 = 'right';
    }
    elseif (variable_get('socialshare_vertical_position') == '2') {
      $position1 = 'bottom';
      $position2 = 'left';
    }

    $mysettings = array(
      'verticalcounter' => TRUE,
      'vertical_providers' => implode(",", variable_get('socialcounter_vertical_rearrange_providers_list')),
      'vertical_countertype' => $type,
      'vertical_position1' => $position1,
      'vertical_position2' => $position2,
      'vertical_offset' => '0px',
      'vertical_divwidget' => 'lrcounter_verticalsimplebox',
    );
  }

  drupal_add_js(array('advancelrsocialshare' => $mysettings), 'setting');
}

/**
 * Check values in array.
 *
 * @param string $value check value is in array
 * @return boolean true if value exist in array
 */
function lr_social_sharing_in_array($value) {
  if (in_array($value, array('0', '1', '2', '3', '10'))) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Get horizontal div to show sharing widget
 *
 * @return string Horizontal sharing div
 */
function lr_social_sharing_horizontal_sharing_div() {
  $socialsharing_horizontal_images = variable_get('lr_social_sharing_horizontal_images');
  lr_social_sharing_sharing_script();

  if (in_array($socialsharing_horizontal_images, array('8', '9'))) {
    return '<div class="lrcounter_simplebox"></div>';
  }
  else {
    return '<div class="lrsharecontainer"></div>';
  }
}

/**
 * Get vertical div to show sharing widget.
 *
 * @return string Vertical sharing div
 */
function lr_social_sharing_vertical_sharing_div() {
  $socialsharing_vertical_images = variable_get('lr_social_sharing_vertical_images');
  lr_social_sharing_sharing_script();

  if ($socialsharing_vertical_images == '4' || $socialsharing_vertical_images == '5') {
    return '<div class="lrshareverticalcontainer"></div>';
  }
  else {
    return '<div class="lrcounter_verticalsimplebox"></div>';
  }
}

/**
 * Get Sharing script to show sharing widget.
 */
function lr_social_sharing_sharing_script() {
  drupal_add_js(
    drupal_get_path('module', 'lr_social_sharing') . '/js/socialshare_widget.js',
    array(
      'type' => 'file',
      'scope' => 'footer',
      'weight' => 7,
    )
  );
}
