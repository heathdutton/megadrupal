<?php
/**
 * @file
 * Implements the necessary hooks for IMCE SWFUpload to work properly.
 */

/**
 * Implements hook_menu().
 */
function imce_swfupload_menu() {
  $items['imce_swfupload'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'imce_swfupload_upload_process',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Handle files posted by the flash swfupload.swf file
 */
function imce_swfupload_upload_process() {
  global $user;

  $menu = imce_menu();
  include_once(drupal_get_path('module', 'imce') . '/' . $menu['imce']['file']);
  header('Content-Type: text/javascript; charset=utf-8');
  if (!function_exists('imce_initiate_profile') || !function_exists('imce_process_profile') || !function_exists('imce_directory_info')) {
    print "{status : 0, message : 'Unable to include required IMCE functionality, incompatible IMCE version detected'};";
    return;
  }

  if (!isset($user->uid)) {
    print "{status : 0, message : 'Invalid user'};";
  }
  else {
    $imce_profile = imce_initiate_profile($user);  
    imce_process_profile($imce_profile);
    $dir_info = imce_directory_info($_REQUEST['dir'], $imce_profile);
    if (!$dir_info['upload']) {
      drupal_set_message(t('You are not allowed to upload to the requested directory'), 'error');
    }
    // Convert the files array to the form drupal expects.
    $filedata = array_keys($_FILES);
    foreach ($filedata as $key) {
      $_FILES['files']['name'][$key] = $_FILES[$key]['name'];
      $_FILES['files']['type'][$key] = $_FILES[$key]['type'];
      $_FILES['files']['tmp_name'][$key] = $_FILES[$key]['tmp_name'];
      $_FILES['files']['error'][$key] = $_FILES[$key]['error'];
      $_FILES['files']['size'][$key] = $_FILES[$key]['size'];
    }

    $replace = (($_REQUEST['imce_swfu_conflict'] == FILE_EXISTS_REPLACE) ? FILE_EXISTS_REPLACE : FILE_EXISTS_RENAME);
    $dir = file_build_uri($_REQUEST['dir']);
    $validators = array('imce_validate_all' => array(&$imce_profile));
    // Much of the following is adapted from imce original.
    if ($dir_info['upload'] && $file = file_save_upload('Filedata', $validators, $dir, $replace)) {
      //core bug #203204.
      @chmod($file->filepath, 0664);
  
      //core bug #54223.
      if ($replace == FILE_EXISTS_RENAME) {
        $name = basename($file->filepath);
        if ($name != $file->filename) {
          $file->filename = $name;
        }
      }
      elseif ($replace == FILE_EXISTS_REPLACE) {
        if ($_file = db_fetch_object(db_query("SELECT fid FROM {files} WHERE filepath = '%s' AND fid <> %d", $file->filepath, $file->fid))) {
          db_query("DELETE FROM {files} WHERE fid = %d", $file->fid);
          $file->fid = $_file->fid;
        }
      }
  
      $file->status = FILE_STATUS_PERMANENT;
      drupal_write_record('files', $file, array('fid'));

      // Data for updating file list.
      print "{status : 1, file : {" ;
      print " name : '" . $file->filename . "',";
      print " size : '" . $file->filesize . "',";
      print " fsize : '" . format_size($file->filesize) . "',";
      print " width : '',";
      print " height : '',";
      print " date : '" . $file->timestamp . "',";
      print " fdate : '" . format_date($file->timestamp, 'small') . "'";
      print "}};";
    }
    else {
      $msg = '';
      $messages = drupal_get_messages();
      foreach ($messages as $type => $values) {
        $msg .= "\n" . join("\n", $values);
      }
      print "{status : 0, message : 'Error saving file " . drupal_json_encode(strip_tags(substr($msg, 1))) . "'};";
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function imce_swfupload_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == "imce_upload_form") {
    global $user;
    global $base_url;
    $imce_profile = imce_user_profile($user);
    // Convert the imce profile extensions into a form swfupload likes.
    if (strstr($imce_profile['extensions'], '*') !== FALSE) {
      $imce_profile['extensions'] = preg_replace('/\*/', '*.*', $imce_profile['extensions']);
    }
    else {
      $imce_profile['extensions'] = ' ' . $imce_profile['extensions'];
      $imce_profile['extensions'] = preg_replace('/ (\w)/', ';*.\1', $imce_profile['extensions']);
      $imce_profile['extensions'] = preg_replace('/ /', '', $imce_profile['extensions']);
    }
    $swfupload_library = jqp_library_load('swfupload');
    if (!$swfupload_library || !isset($swfupload_library->scripts['2.2.0.1'])) {
      drupal_set_message(t('Unable to load SWFUpload library information, check javascript library configuration for SWFUpload version 2.2.0.1'), 'error');
      return;
    }
    $swfupload_library_js = array_shift($swfupload_library->scripts['2.2.0.1']);
    $swfupload_library_swf = preg_replace('/js$/', 'swf', $swfupload_library_js);
    if (!file_exists($swfupload_library_swf)) {
      drupal_set_message(t('SWFUpload flash file not detected, please check your SWFUpload installation'), 'error');
      return;
    }
    drupal_add_css(drupal_get_path('module', 'imce_swfupload') . '/imce_swfupload.css', 'module', 'all', TRUE);
    drupal_add_js($swfupload_library_js);
    drupal_add_js(drupal_get_path('module', 'imce_swfupload') . '/imce_swfupload.js');

    $default_replace = variable_get('imce_settings_replace', FILE_EXISTS_RENAME);
    $js = <<<_EOJS
    imce.hooks.load.push(function() {
      imce.opAdd({
        name : 'bulkupload',
        title : 'Bulk Upload',
        content : '<div id="imce_swfu"><span id="imce_swfu_button"></span></div><div id="imce_swfu_controls"><input id="imce_swfu_conflict_replace" name="imce_swfu_conflict" type="radio" value="1" /><label for="imce_swfu_conflict_replace">Replace files with conflicting names</label><br /><input id="imce_swfu_conflict_rename" name="imce_swfu_conflict" type="radio" value="0" checked="checked" /><label for="imce_swfu_conflict_rename">Rename uploaded files to avoid conflicts</label></div>'
      });
      imce.hooks.navigate.push(function (data, olddir, cached) {
        data.perm.upload ? imce.opEnable('bulkupload') : imce.opDisable('bulkupload');
      });
      lib = new imceSWFU();
      lib.settings.containerId = 'imce_swfu';
      lib.initInterface();
      lib.settings.sid = '$user->sid';
      swfu = new SWFUpload({
        upload_url : '$base_url/imce_swfupload',
        flash_url : '$base_url/$swfupload_library_swf',
        button_placeholder_id : 'imce_swfu_button',
        preserve_relative_urls : true,
        button_width : 100, 
        button_height : 20, 
        debug : false,
        button_text : '<span class="uploadButton">Select Files</span>',
        button_text_style : '.uploadButton { color: #000099; text-decoration: underline; width: 100; text-align: center; font-family: sans-serif;font-size: 14pt;}',
        file_types : '$imce_profile[extensions]',
        file_size_limit : '$imce_profile[filesize]MB',
        file_queued_handler : lib.fileQueued,
        file_queue_error_handler : lib.queueError,
        upload_success_handler : lib.uploadSuccess,
        upload_error_handler : lib.uploadError,
        upload_progress_handler : lib.uploadProgress,
        upload_start_handler : lib.uploadStart
      });
      lib.settings.instance = swfu;
      $('#imce_swfu_controls input[type="radio"]').each(function () { if ($(this).val() == $default_replace) { $(this).select(); }} );
      $('#imce_swfu_controls input[type="radio"]').click(function () { lib.setPostParam($(this).attr('name'), $(this).val()); });
    });
_EOJS;

    drupal_add_js($js, 'inline', 'header');
  }
}
