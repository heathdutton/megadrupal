<?php

/**
 * @file
 * Uses the KeyCAPTCHA web service to improve the CAPTCHA system.
 */

if ( !class_exists('KeyCAPTCHA_CLASS') ) {
  class KeyCAPTCHA_CLASS  {
    private $c_kc_keyword = "accept";
    private $p_kc_visitor_ip = "";
    private $p_kc_session_id = "";
    private $p_kc_web_server_sign = "";
    private $p_kc_web_server_sign2 = "";
    private $p_kc_js_code = "";
    private $p_kc_private_key = "";

    public function get_web_server_sign($use_visitor_ip = 0) {
      return md5($this->p_kc_session_id . (($use_visitor_ip) ? ($this->p_kc_visitor_ip) :("")) . $this->p_kc_private_key);
    }

    function __construct($a_private_key='', $a_js_code='') {
      if ( $a_private_key != '' ) {
        $this->p_kc_private_key = trim($a_private_key);
      };
      if ( $a_js_code != '' ) {
        $this->p_kc_js_code = $a_js_code;
      };
      $this->p_kc_session_id = uniqid() . '-1.3.0.025';
      $this->p_kc_visitor_ip = $_SERVER["REMOTE_ADDR"];
    }

    public function check_result($response) {
      $kc_vars = explode("|", $response);
      if ( count( $kc_vars ) < 4 ) {
        return FALSE;
      }
      if ($kc_vars[0] == md5($this->c_kc_keyword . $kc_vars[1] . $this->p_kc_private_key . $kc_vars[2])) {
        if (stripos($kc_vars[2], "http://") !== 0) {
          $kc_current_time = time();
		  $kc_var_time = preg_split('/\/| |:/', $kc_vars[2]);
          $kc_submit_time = gmmktime($kc_var_time[3], $kc_var_time[4], $kc_var_time[5], $kc_var_time[1], $kc_var_time[2], $kc_var_time[0]);
          if (($kc_current_time - $kc_submit_time) < 15) {
            return TRUE;
          }
        }
        else {
          if ( drupal_http_request($kc_vars[2] )->data == "1" ) {
            return TRUE;
          }
        }
      }
      return FALSE;
    }

    public function render_js() {
      if ( isset($_SERVER['HTTPS']) && ( $_SERVER['HTTPS'] == 'on' ) ) {
        $this->p_kc_js_code = str_replace("http://", "https://", $this->p_kc_js_code);
      }
      $this->p_kc_js_code = str_replace("#KC_SESSION_ID#", $this->p_kc_session_id, $this->p_kc_js_code);
      $this->p_kc_js_code = str_replace("#KC_WSIGN#", $this->get_web_server_sign(1), $this->p_kc_js_code);
      $this->p_kc_js_code = str_replace("#KC_WSIGN2#", $this->get_web_server_sign(), $this->p_kc_js_code);
      return $this->p_kc_js_code;
    }
  }
}

/**
 * Implements hook_menu().
 */
function keycaptcha_menu() {
  $items = array();
  $items['admin/config/people/captcha/keycaptcha'] = array(
    'title' => 'KeyCAPTCHA',
    'description' => 'Administer the KeyCAPTCHA web service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('keycaptcha_admin_settings'),
    'access arguments' => array('administer CAPTCHA settings'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'keycaptcha.admin.inc',
  );
  return $items;
}

/**
 * Valid permissions for this module
 *
 * @return
 *   An array of valid permissions for the onthisdate module
 */
function keycaptcha_perm() {
  return array();
}


/**
 * Implements of hook_captcha().
 */
function keycaptcha_captcha() {
  $args = func_get_args();
  $op = array_shift($args);
  switch ($op) {
    case 'list':
      return array('KeyCAPTCHA');

    case 'generate':
      $captcha_type = array_shift($args);
      $captcha = array();

      if ($captcha_type == 'KeyCAPTCHA') {
        $keycaptcha_js_code = variable_get('keycaptcha_js_code', '');
        $keycaptcha_private_key = variable_get('keycaptcha_private_key', '');
        if ( ( $keycaptcha_js_code = '' ) || ( $keycaptcha_private_key == '' ) ) {
          drupal_set_message(t('You do not set the parameters ("Private key" and "KeyCAPTCHA script") for the correct working of KeyCAPTCHA. Please go to <a href="https://www.keycaptcha.com" target="_blank">KeyCAPTCHA site</a> and read installation instruction for Drupal.'), 'error');
        }

        // Create the form. Captcha requires TRUE to be returned in solution.
        $captcha['solution'] = TRUE;
        $captcha['captcha_validate'] = 'keycaptcha_captcha_validation';
        $html = '<input type=hidden name=capcode id=capcode />##keycaptchacode##';
        $kc_o = new KeyCAPTCHA_CLASS( variable_get('keycaptcha_private_key', ''), variable_get('keycaptcha_js_code', '') );
        $keycaptcha_form_value = str_replace( '##keycaptchacode##', $kc_o->render_js(), $html );

        $captcha['form']['captcha_response'] = array(
          '#type' => 'hidden',
          '#value' => 'KeyCAPTCHA',
        );
        $captcha['form']['captcha_form'] = array(
          '#type' => 'item',
          '#markup' => '<div id="keycaptcha_custom_theme_widget">' . $keycaptcha_form_value . '<noscript>You should turn on JavaScript on your browser. After that please reload the page. Otherwise you won&#039;t be able to post any information on this site.</noscript></div>',
        );
      }
      return $captcha;
  }
}

function keycaptcha_captcha_validation($solution = NULL, $response = NULL, $element = NULL, $form_state = NULL) {
  if ($response == 'KeyCAPTCHA' && isset($form_state['input']['capcode'])) {
    $kc_o = new KeyCAPTCHA_CLASS( variable_get('keycaptcha_private_key', '') );

    if ( !$kc_o->check_result($form_state['input']['capcode']) ) {
      return FALSE;
    }
    return TRUE;
  }
  return FALSE;
}

