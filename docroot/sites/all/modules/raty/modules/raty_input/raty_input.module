<?php

/**
 * @file
 *
 * Raty - Field input widget and Views integration.
 */

/**
 * Implements hook_views_api().
 */
function raty_input_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Implements hook_theme().
 */
function raty_input_theme($existing, $type, $theme, $path) {
  $path = drupal_get_path('module', 'raty') . '/theme';
  return array(
    'raty_input_widget' => array(
      'render element' => 'element',
      'file' => 'raty.theme.inc',
      'path' => $path,
    ),
    'raty_views_filter' => array(
      'render element' => 'element',
      'file' => 'raty.theme.inc',
      'path' => $path,
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function raty_input_field_widget_info() {
  return array(
    'raty' => array(
      'label' => t('Raty Stars'),
      'field types' => array('number_integer', 'number_decimal', 'number_float', 'list_number'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function raty_input_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $value = isset($items[$delta]['value']) ? $items[$delta]['value'] : '';
  // Substitute the decimal separator.
  if ($field['type'] == 'number_decimal' || $field['type'] == 'number_float') {
    $value = strtr($value, '.', $field['settings']['decimal_separator']);
  }

  // Include the Raty library.
  $raty_path = raty_load_js('input');
  if (!empty($raty_path)) {
    $raty_settings = array('raty_path' => $raty_path, 'score' => $value);
    drupal_add_js(array('raty_input' => $raty_settings), 'setting');
  }

  $raty_id = drupal_html_id('edit-' . $element['#field_name'] .  "-{$delta}");

  $element += array(
    '#type' => 'textfield',
    '#default_value' => $value,
    // Allow a slightly larger size than the field length to allow for some
    // configurations where all characters won't fit in input field.
    '#size' => $field['type'] == 'number_decimal' ? $field['settings']['precision'] + 4 : 12,
    // Allow two extra characters for signed values and decimal separator.
    '#maxlength' => $field['type'] == 'number_decimal' ? $field['settings']['precision'] + 2 : 10,
    // Extract the number type from the field type name for easier validation.
    '#number_type' => str_replace('number_', '', $field['type']),
    '#attributes' => array(
      'class' => array($raty_id),
    ),
    '#theme_wrappers' => array('raty_input_widget'),
  );

  $element['#raty_id'] = $raty_id;

  // Add prefix and suffix.
  if (!empty($instance['settings']['prefix'])) {
    $prefixes = explode('|', $instance['settings']['prefix']);
    $element['#field_prefix'] = field_filter_xss(array_pop($prefixes));
  }
  if (!empty($instance['settings']['suffix'])) {
    $suffixes = explode('|', $instance['settings']['suffix']);
    $element['#field_suffix'] = field_filter_xss(array_pop($suffixes));
  }

  $element['#element_validate'][] = 'number_field_widget_validate';

  return array('value' => $element);
}
