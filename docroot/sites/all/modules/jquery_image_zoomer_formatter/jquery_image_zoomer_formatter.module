<?php

/**
 * @file
 * Implement jQuery Zoomer formatter for image field.
 */

/**
 * Implements hook_theme().
 */
function jquery_image_zoomer_formatter_theme() {
  return array(
    'jquery_image_zoomer_image' => array(
      'variables' => array(
        'item' => NULL,
        'zoomed_image_style' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter().
 */
function jquery_image_zoomer_formatter_field_formatter_info() {
  $formatters = array(
    'jquery_image_zoomer' => array(
      'label' => t('jQuery Image Zoomer'),
      'field types' => array('image', 'media'),
      'settings' => array(
        'jquery_image_zoomer_image_wrapper_height' => '',
        'jquery_image_zoomer_image_wrapper_width' => '',
        'jquery_image_zoomer_custom_class' => '',
        'jquery_image_zoomer_image_zoom_style' => '',
      ),
    ),
  );

  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function jquery_image_zoomer_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {

  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $image_styles = image_style_options(FALSE);
  $element['jquery_image_zoomer_image_wrapper_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Image Wrapper Height'),
    '#description' => t('Height of the image wrapper.'),
    '#default_value' => (isset($settings['jquery_image_zoomer_image_wrapper_height']) &&
    !empty($settings['jquery_image_zoomer_image_wrapper_height'])) ? $settings['jquery_image_zoomer_image_wrapper_height'] : 500,
    '#required' => TRUE,
    '#element_validate' => array('_element_validate_integer_positive'),
  );

  $element['jquery_image_zoomer_image_wrapper_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Image Wrapper Width'),
    '#description' => t('Width of the image wrapper.'),
    '#default_value' => (isset($settings['jquery_image_zoomer_image_wrapper_width']) &&
    !empty($settings['jquery_image_zoomer_image_wrapper_width'])) ? $settings['jquery_image_zoomer_image_wrapper_width'] : 500,
    '#required' => TRUE,
    '#element_validate' => array('_element_validate_integer_positive'),
  );
  $element['jquery_image_zoomer_custom_class'] = array(
    '#type' => 'textfield',
    '#title' => t('Custom css class for zoomer div element.'),
    '#description' => t('This adds a custom css class to zoomer div element. This help you to add background for the image area etc.'),
    '#default_value' => (isset($settings['jquery_image_zoomer_custom_class']) &&
    !empty($settings['jquery_image_zoomer_custom_class'])) ? $settings['jquery_image_zoomer_custom_class'] : '',
    '#required' => FALSE,
  );

  $element['jquery_image_zoomer_image_zoom_style'] = array(
    '#type' => 'select',
    '#title' => t('Zoomed image style'),
    '#options' => $image_styles,
    '#empty_option' => t('None (use original image)'),
    '#default_value' => (isset($settings['jquery_image_zoomer_image_zoom_style']) &&
    !empty($settings['jquery_image_zoomer_image_zoom_style'])) ? $settings['jquery_image_zoomer_image_zoom_style'] : '',
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function jquery_image_zoomer_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  $image_styles = image_style_options(FALSE);
  unset($image_styles['']);

  $summary[] = t('Image Wrapper height: @height', array(
    '@height' => (isset($settings['jquery_image_zoomer_image_wrapper_height']) &&
    !empty($settings['jquery_image_zoomer_image_wrapper_height'])) ? $settings['jquery_image_zoomer_image_wrapper_height'] . 'px' : '500px',
  ));
  $summary[] = t('Image Wrapper width: @width', array(
    '@width' => (isset($settings['jquery_image_zoomer_image_wrapper_width']) &&
    !empty($settings['jquery_image_zoomer_image_wrapper_width'])) ? $settings['jquery_image_zoomer_image_wrapper_width'] . 'px' : '500px',
  ));
  $summary[] = t('Custom css class: @custom_class', array(
    '@custom_class' => (isset($settings['jquery_image_zoomer_custom_class']) &&
    !empty($settings['jquery_image_zoomer_custom_class'])) ? $settings['jquery_image_zoomer_custom_class'] : 'None',
  ));
  $summary[] = t('Zoomed image style: @style', array(
    '@style' => (isset($settings['jquery_image_zoomer_image_zoom_style']) &&
    !empty($settings['jquery_image_zoomer_image_zoom_style'])) ? $image_styles[$settings['jquery_image_zoomer_image_zoom_style']] : 'original',
  ));

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function jquery_image_zoomer_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  $path = libraries_get_path('jquery_zoomer');

  drupal_add_js($path . '/jquery.fs.zoomer.js');
  drupal_add_js(drupal_get_path('module', 'jquery_image_zoomer_formatter') . '/js/jquery_image_zoomer_formatter.js');
  drupal_add_css($path . '/jquery.fs.zoomer.css');

  $image_wrapper_height = (isset($display['settings']['jquery_image_zoomer_image_wrapper_height']) &&
      !empty($display['settings']['jquery_image_zoomer_image_wrapper_height'])) ? check_plain($display['settings']['jquery_image_zoomer_image_wrapper_height']) : '500';

  $image_wrapper_width = (isset($display['settings']['jquery_image_zoomer_image_wrapper_width']) &&
      !empty($display['settings']['jquery_image_zoomer_image_wrapper_width'])) ? check_plain($display['settings']['jquery_image_zoomer_image_wrapper_width']) : '500';

  $zoomed_image_style = (isset($display['settings']['jquery_image_zoomer_image_zoom_style']) &&
      !empty($display['settings']['jquery_image_zoomer_image_zoom_style'])) ? check_plain($display['settings']['jquery_image_zoomer_image_zoom_style']) : '';

  $custom_css_class = (isset($display['settings']['jquery_image_zoomer_custom_class']) &&
      !empty($display['settings']['jquery_image_zoomer_custom_class'])) ? check_plain($display['settings']['jquery_image_zoomer_custom_class']) : '';

  $settings = array(
    'zoomer_custom_class' => $custom_css_class,
  );
  drupal_add_js(array('jquery_image_zoomer_formatter' => $settings), 'setting');
  drupal_add_css(
      '.zoomer_wrapper { border: 1px solid #ddd; border-radius: 3px; height: ' . $image_wrapper_height . 'px; margin: 10px 0; overflow: hidden; width: ' . $image_wrapper_width . 'px; }', 'inline'
  );

  $element = array();
  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      '#theme' => 'jquery_image_zoomer_image',
      '#item' => $item,
      '#zoomed_image_style' => $zoomed_image_style,
    );
  }

  return $element;
}

/**
 * Returns the HTML code for zooming image.
 */
function theme_jquery_image_zoomer_image($variables) {

  $item = $variables['item'];
  if (isset($item['file']) && is_object($item['file'])) {
    $item['uri'] = $item['file']->uri;
    $item['alt'] = '';
  }

  $image = array(
    'path' => $item['uri'],
    'alt' => check_plain($item['alt']),
  );

  if (drupal_strlen($item['title']) > 0) {
    $image['title'] = check_plain($item['title']);
  }

  $display_image = '<div class="zoomer_wrapper jqueryimage_zoomer">';
  if ($variables['zoomed_image_style']) {
    $image['style_name'] = $variables['zoomed_image_style'];
    $display_image .= theme('image_style', $image);
  }
  else {
    $display_image .= theme('image', $image);
  }

  $display_image .= '</div>';

  return $display_image;
}
