<?php

/**
 * @file
 * Provides Slideshow style options for Views.
 */

define('IMAGECIRCLESLIDER_MODULE_PATH', drupal_get_path('module', 'image_circleslider'));
/**
 * Implement hooks_views_api().
 */
function image_circleslider_views_api() {
  return array(
    'api' => '3.0',
    'path' => IMAGECIRCLESLIDER_MODULE_PATH,
  );
}

/**
 * Implements hook_help().
 */
function image_circleslider_help($path, $arg) {
  switch ($path) {
    case 'admin/help#tinycircleslider':
      return '<p>Check the README.txt to sort things out.</p>';
  }
}

/**
 * Implements hook_library().
 */
function image_circleslider_library() {
  $libraries = array();
  $libraries['imagecirclesliderlib'] = array(
    'title' => 'Image CircleSlider',
    'verison' => '1.0',
  );
  return $libraries;
}

/**
 * Preprocess the primary theme implementation for a view.
 */
function template_preprocess_views_image_circleslider(&$vars) {
  drupal_add_js('sites/all/libraries/imagecirclesliderlib/js/jquery.tinycircleslider.js');
  drupal_add_js(IMAGECIRCLESLIDER_MODULE_PATH . '/js/slider.js', 'external');
  drupal_add_css((IMAGECIRCLESLIDER_MODULE_PATH . '/css/circleslider.css'), array('type' => 'external'));
}
/**
 * Implements hook_field_formatter_info().
 */
function image_circleslider_field_formatter_info() {
  return array(
    'image_circleslider_formatter' => array(
      'label' => t('Image CircleSlider'),
      'field types' => array('image'),
    ),
  );
}

/**
 * Implement hook_field_formatter_view().
 */
function image_circleslider_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $img_path = array();
  foreach ($items as $key => $val) {
    $uri = $val['uri'];
    $img_path[$key] = file_create_url($uri);
  }
  $element = array(
    '#theme' => 'image_circleslider_format',
    '#item' => $items,
  );
  // Calls image_circleslider_get_library_path().
  $element['#attached']['js'][] = image_circleslider_get_library_path();
  $element['#attached']['js'][] = IMAGECIRCLESLIDER_MODULE_PATH . '/js/slider.js';
  $element['#attached']['css'][] = IMAGECIRCLESLIDER_MODULE_PATH . '/css/circleslider.css';
  return $element;
}

/**
 * Implements hook_theme().
 */
function image_circleslider_theme() {
  return array(
    'image_circleslider' => array(
      'variables' => array('items' => NULL),
      'template' => 'image_circleslider-field',
    ),
    'image_circleslider_format' => array(
      'variables' => array('item' => NULL),
    ),
  );
}

/*
 * Checks for the library path, else assigns the conventional path.
 */
function image_circleslider_get_library_path() {
  if (module_exists('libraries') && function_exists('libraries_get_path')) {
    return libraries_get_path('imagecirclesliderlib') . '/js';
  }
}

/**
 * Implements hook_field_formatter_format().
 */
function theme_image_circleslider_format($variables) {
  $images = array();
  foreach ($variables['item'] as $item) {
    $image = array(
      'path' => $item['uri'],
    );

    if (isset($item['alt'])) {
      $image['alt'] = $item['alt'];
    }

    if (isset($item['attributes'])) {
      $image['attributes'] = $item['attributes'];
    }

    if (isset($item['width']) && isset($item['height'])) {
      $image['width'] = $item['width'];
      $image['height'] = $item['height'];
    }

    // Do not output an empty 'title' attribute.
    if (isset($item['title']) && drupal_strlen($item['title']) > 0) {
      $image['title'] = $item['title'];
    }
    $images[] = theme('image', $image);
  }
  $output = theme('image_circleslider', array('items' => $images));
  return $output;
}
