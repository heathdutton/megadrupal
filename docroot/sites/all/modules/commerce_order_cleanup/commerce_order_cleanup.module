<?php

/**
 * @file
 * Contains commerce order cleanup implementation.
 */


/**
 * Implements hook_menu()
 */
function commerce_order_cleanup_menu() {
  $items = array();

  $items['admin/commerce/config/order-cleanup'] = array(
    'title' => 'Commerce order cleanup',
    'description' => 'Configure order cleanup.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_order_cleanup_settings'),
    'access arguments' => array('administer commerce order cleanup'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 30,
    'file' => 'commerce_order_cleanup.admin.inc',
  );

  return $items;
}

/**
 *  Implements hook_permission().
 */
function commerce_order_cleanup_permission() {
  return array(
    'administer commerce order cleanup' => array(
      'title' => t('Administer commerce order cleanup'),
    ),
  );
}

/**
 * Providers available order status.
 *
 * @param string $type
 *   A string of type. Allowed value is status for now.
 *
 * @return array
 */
function _commerce_order_cleanup_get_options($type) {
  switch ($type) {
    case 'status':
      if (empty($status_list)) {
        $result = db_query("SELECT DISTINCT status FROM {commerce_order}");
        foreach ($result as $row) {
          $status_list[] = array($row->status);
        }
        if (!empty($status_list)) {
          array_unshift($status_list, array('Available status'));
        }
      }
      return $status_list;
  }
}

/**
 * Batch process callback.
 *
 * @param $nids
 *
 * @return mixed
 *
 * @see drush_commerce_order_cleanup_delete_orders()
 */
function commerce_order_cleanup_delete_multiple($nids) {
  $result = commerce_order_delete_multiple($nids);
  $_SESSION['commerce_order_deleted'] += count($nids);
  drupal_set_message(t('Deleted @node_count orders.', array('@node_count' => $_SESSION['commerce_order_deleted'],)));
  return $result;
}


/**
 * Batch finish callback.
 *
 * @param $success
 * @param $results
 * @param $operations
 *
 * @see drush_commerce_order_cleanup_delete_orders()
 */
function commerce_order_cleanup_delete_finished($success, $results, $operations) {
  if ($success) {
    drupal_set_message(t('Deleted all orders successfully.'));
  }
  else {
    $error_operation = reset($operations);
    drupal_set_message(t('An error occurred while processing @operation with arguments : @args', array('@operation' => $error_operation[0], '@args' => print_r($error_operation[0], TRUE))));
  }
  unset($_SESSION['commerce_order_total'], $_SESSION['commerce_order_deleted']);
}
