<?php

function nested_image_style_image_effect_info() {
  return array(
    'nested_image_style' => array(
      'label' => t('Nest Image Style'),
      'help' => t('Inherit image effects from another image style.'),
      'effect callback' => 'nested_image_style_effect',
      'form callback' => 'nested_image_style_form',
    ),
  );
}

function nested_image_style_form($data) {
  // Prepare list of image styles as options to choose from
  $styles = image_styles();
  $options = array(
    '_unset_' => t('Choose Style / Unset'), // Special entry, setting to this deletes step.
  );
  foreach ($styles as $style) {
    $options[$style['name']] = $style['name'];
  }

  // Prevent recursion. disallow users to nest style within itself.
  $this_style = menu_get_object('image_style', 5);
  unset ($options[$this_style['name']]);

  $form['scale'] = array();
  $count = 1; // Purely for display purposes
  foreach ($data['scale'] as $index => $scale) {
    $form['scale'][$index] = array(
      '#title' => t('!index: Watermark style', array('!index' => $count++)),
      '#description' => t('Choose image style to inherit effects from. Choose <em>Unset</em> to remove.'),
      '#type' => 'select',
      '#options' => $options,
      '#default_value' => !empty($data['scale'][$index]) ? $data['scale'][$index] : NULL,
    );
  }
  $form['scale'][] = array(
    '#title' => t('!index: Watermark style', array('!index' => $count)),
    '#description' => t('Choose image style to inherit effects from.'),
    '#type' => 'select',
    '#options' => $options,
  );
  $form['scale']['#element_validate'][] = 'nested_image_style_form_values_cleanup';

  return $form;
}

/**
 * Removes submitted effects which were set to '_unset_'
 */
function nested_image_style_form_values_cleanup($element, &$form_state, $form) {
  $values = array();
  foreach (element_children($element) as $child) {
    if ('_unset_' != $element[$child]['#value']) {
      $values[] = $element[$child]['#value'];
    }
  }
  form_set_value($element, $values, $form_state);
}

function nested_image_style_effect(&$image, $data) {
  foreach ($data['scale'] as $name) {
    $style = image_style_load($name);
    foreach ($style['effects'] as $effect) {
      image_effect_apply($image, $effect);
    }
  }
}
