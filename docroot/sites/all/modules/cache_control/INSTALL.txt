Drupal configuration
--------------------
You need to enable reverse proxy support in Drupal's settings.php (set
reverse_proxy to TRUE and configure reverse_proxy_addresses). The settings are
explained in detail in default.settings.php

PHP configuration
-----------------
Cache Control requires that PHP's output buffering is enabled. This is due to
the fact that Cache Control needs to be able to override the HTTP headers Drupal
sets in bootstrap (see drupal_page_header() in bootstrap.inc).

Varnish configuration
---------------------
Your Varnish will require some configuring before it can fully operate with
Cache Control. An example configuration file for Varnish is included with the
module.

Installation and basic usage
----------------------------
After enabling Cache Control and Cache Control Purge modules, you need to go to
admin/settings/cache_control and check "Enable Cache Control". The main admin
page also allows you to set a global cache lifetime.

Under 'Paths being cached currently' (admin/settings/cache_control/cache_paths),
you'll find the paths that can be cached by Varnish (i.e. HTTP headers allowing
caching can be sent for those paths). On this page, you can also override the
global cache lifetime per path. Under 'Paths not currently cached'
(admin/config/development/cache_control/available_paths) you'll find all other paths.

You can make a path cacheable by selecting it on the 'Paths not currently
cached' list and clicking 'Make selected paths cacheable'. The paths are for
generic menu router items (like node/%) rather than individual aliases/paths
(such as node/3), i.e. there's no fine-grained control per path yet (but it's on
the roadmap).

If you enabled Cache Control Purge (which is very recommended), you can manually
purge cached pages (or the whole cache) in
admin/config/development/cache_control/manual_purge.

Dependencies
-------------
Cache Control has no dependencies to other modules. MongoDB storage backend
requires mongodb module. Cache Control Purge requires Cache Control.
Some dependencies may be added in the future (see Roadmap).

Further, Cache Control is designed in a way that doesn't require you to add a
dependency to Cache Control into your module.