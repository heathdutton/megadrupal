<?php
/**
 * @file
 * Install, update and uninstall functions.
 */

/**
 * Implements hook_schema().
 */
function mkdru_schema() {
  $schema['mkdru'] = array(
    'description' => 'Stores settings for mkdru nodes.',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,), 'vid' => array(
        'description' => 'The current {node_revisions}.vid version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'settings' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Metasearch settings',
      ),
      'pz2_path' => array(
        'type' => 'text',
        'description' => 'URL/path for Service Proxy or Pazpar2',
        // alas, we cannot have a default value for a text column
      ),
      'sp_user' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
        'description' => 'Service proxy username',
        'default' => 'guest',
      ),
      'sp_pass' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
        'description' => 'Service proxy password',
        'default' => 'guest',
      ),
      'sp_server_auth' => array(
        'description' => 'Authenticate Service Proxy on the server side and pass session token',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 1,
      ),
    ),
    'primary key' => array('nid', 'vid'),
    'unique keys' => array('vid' => array('vid')),
    'indexes' => array('nid' => array('nid')),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function mkdru_install() {
  require(realpath( dirname( __FILE__ )) . '/defaults.inc' );
  // Default fallback for pz2_js
  variable_set('pz2_js_path', $mkdru_admin_defaults['pz2_js_path']);
  // Disable attachments by default
  variable_set('upload_mkdru', 0);
  // Default to not promoting to front page
  variable_set('node_options_mkdru', array('status'));
  // Disable comments by default
  variable_set('comment_mkdru', defined('COMMENT_NODE_HIDDEN') ? COMMENT_NODE_HIDDEN : NULL);
}

/**
 * Implements hook_uninstall().
 */
function mkdru_uninstall() {
  // Delete variables
  variable_del('pz2_js_path');
  variable_del('upload_mkdru');
  variable_del('comment_mkdru');
  variable_del('node_options_mkdru');
}

/**
 * Updates.
 */
function mkdru_update_7100() {
  // Moved to defaults.inc
  variable_del('mkdru_defaults');
}
function mkdru_update_7101() {
  require(realpath( dirname( __FILE__ )) . '/defaults.inc' );
  // Add separate fields for sp credentials
  $spec = array(
    'type' => 'text',
    'description' => 'URL/path for Service Proxy or Pazpar2',
  );
  db_add_field('mkdru', 'pz2_path', $spec);
  $spec = array(
    'type' => 'varchar',
    'length' => '64',
    'not null' => FALSE,
    'description' => 'Service proxy username',
    'default' => $mkdru_defaults['pz2_path'],
  );
  db_add_field('mkdru', 'sp_user', $spec);
  $spec = array(
    'type' => 'varchar',
    'length' => '64',
    'not null' => FALSE,
    'description' => 'Service proxy password',
    'default' => $mkdru_defaults['sp']['pass'],
  );
  db_add_field('mkdru', 'sp_pass', $spec);
  $spec = array(
    'description' => 'Authenticate Service Proxy on the server side and pass session token',
    'type' => 'int',
    'unsigned' => TRUE,
    'default' => 1
  );
  db_add_field('mkdru', 'sp_server_auth', $spec);
  // Load all mkdru nodes
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'mkdru')
    ->execute();
  $nodes = node_load_multiple(array_keys($result['node']));
  foreach ($nodes as $node) {
    $settings = json_decode($node->mkdru['settings'], TRUE);
    $user = $settings['sp']['user'];
    $pass = $settings['sp']['pass'];
    $pz2_path = $settings['pz2_path'];
    unset($settings['sp']['user']);
    unset($settings['sp']['pass']);
    unset($settings['pz2_path']);
    // Move credentials and pz2_path
    $node->mkdru['sp_user'] = $user;
    $node->mkdru['sp_pass'] = $pass;
    $node->mkdru['pz2_path'] = $pz2_path;
    // Rename use_sessions to is_service_proxy
    $settings['is_service_proxy'] = !($settings['use_sessions']);
    $node->mkdru['sp_server_auth'] = 0;
    $settings['sp_server_auth'] = 0;
    unset($settings['use_sessions']);
    $node->mkdru['settings'] = json_encode($settings);
    node_save($node);
  }
}
function mkdru_update_7102() {
  // update pz2_js_path to include filename
  $current = variable_get('pz2_js_path', FALSE);
  if ($current) {
    variable_set('pz2_js_path', $current . '/pz2.js');
  }
}
