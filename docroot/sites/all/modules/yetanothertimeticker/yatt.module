<?php

/**
 * Implements hook_block_info().
 */
function yatt_block_info() {
  $blocks = array();
  $blocks['yatt'] = array(
    'info' => t('Yatt'),
	'title' => 'YATT',
  );
 
  return $blocks;
}


/**
 * Implements hook_block_configure().
 */
function yatt_block_configure($delta='') {
	
  $form = array();
  
  
 
  switch($delta) {
    case 'yatt' :
      $form['yatt_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Title'),
        '#default_value' => variable_get('yatt_title', ''),
      );
      
      $form['yatt_expiry_text'] = array(
        '#type' => 'textfield',
        '#title' => t('Expiry text'),
        '#default_value' => variable_get('yatt_expiry_text', ''),
      );
      
      $form['yatt_expiry_time'] = array(
        '#type' => 'textfield',
        '#title' => t('Expiry date & time'),
        '#default_value' => variable_get('yatt_expiry_time', ''),
	'#description' => 'Format for example: yyyy/mm/dd hh:mm or month dd, yyyy hh:mm',
      );
      
      $form['yatt_css'] = array(
        '#type' => 'checkbox',
        '#title' => t('Use Yatt CSS'),
        '#default_value' => variable_get('yatt_css', ''),
      );
      break;
  }
  return $form;

}


/**
 * Implements hook_block_save().
 */
function yatt_block_save($delta = '', $edit = array()) {//print_r($edit);exit;

  switch($delta) {
    case 'yatt' :    
      variable_set('yatt_title', $edit['yatt_title']);
      variable_set('yatt_expiry_text', $edit['yatt_expiry_text']);
      variable_set('yatt_expiry_time', $edit['yatt_expiry_time']);
      variable_set('yatt_css', $edit['yatt_css']);
      break;
  }
  
}


/**
 * Implements hook_block_view().
 */
function yatt_block_view($delta='') {
  drupal_add_js(array('Yatt' => array('yatt_expiry_text' => variable_get('yatt_expiry_text', 'Time has expired'), 'yatt_expiry_time' => variable_get('yatt_expiry_time', ''))), 'setting');
  if(variable_get('yatt_css', NULL)) {
    drupal_add_css(drupal_get_path('module', 'yatt') . '/yatt.css', array('weight' => 1000, 'group' => CSS_THEME));
  }
  
  $block = array();
 
  switch($delta) {
    case 'yatt' :
      $block['content'] = my_block_view();
      break;
  } 
  return $block;
}
 
/**
 * Custom function to assemble renderable array for block content.
 * Returns a renderable array with the block content.
 * @return
 *   returns a renderable array of block content.
 */
function my_block_view() {
  $block = array();
 
  // Block output in HTML with div wrapper
  $block = array(
    'output' => array(
      '#prefix' => '<div class="yatt-wrapper"><h3 class="yatt-title">' . variable_get('yatt_title', 'Yatt Time Ticker') . '</h3>',
      '#type' => 'markup',
      '#markup' => theme('yatt_block', array()),
      '#suffix' => '</div>',
    ),
  );
  return $block;
}


/**
 * Implement hook_theme()
 */
function yatt_theme() {
  return array(
    'yatt_block' => array(
	'variables' => array(),
    ),
  );
}


function theme_yatt_block() {
  return '<div class="yatt-element" id="yatt-days">
      <div class="yatt-element-value"></div><br>' . t('Days') . '
    </div>
    <div class="yatt-element" id="yatt-hours">
      <div class="yatt-element-value"></div><br>' . t('Hours') . '
    </div>
    <div class="yatt-element" id="yatt-minutes">
      <div class="yatt-element-value"></div><br>' . t('Minutes') . '
    </div>
    <div class="yatt-element" id="yatt-seconds">
      <div class="yatt-element-value"></div><br>' . t('Seconds') . '
    </div>';
}

?>