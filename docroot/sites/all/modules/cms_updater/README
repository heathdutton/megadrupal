-- SUMMARY --

CMS Updater module helps you to keep your Drupal site secure at all times.
Right after a new Drupal core release is published, this is recognised by the CMS Updater Service,
which in turn will update your Drupal system.

There is no need for intervention on your part – just check your mailbox from time to time, read your PDF update,
and see if the automated updates have been successfully completed (or not).

The use of this module requires the purchase of a CMS Updater licence key for € 29.99 incl. VAT.
This fee covers one year of updates - your subscription will not be automatically extended,
although you will be reminded when your subscription is close to expiring.


-- REQUIREMENTS --

This Module will only work when:
* Your Drupal root is writable by the web server.
* Your Drupal can write to a temp dir.
* Your Drupal can write to the Drupal files dir.
* Your PHP version should handle .zip or tar.gz files.
  (But there is also a fallback zip class in case Phar or ZipArchive classes are not available.)


-- INSTALLATION --

* Install as usual, see http://drupal.org/node/70151 for further information.


-- CONFIGURATION --

* You have to insert your CMS Updater license key in the admin settings form (admin/config/system/cms-updater)
* If you haven't a license key, you can buy one directly in this settings form.


—- Help and Support —-

For help and support, use the issue queue of this project (https://www.drupal.org/project/issues/cms_updater) or
visit our project website at https://cms-updater.com and find your helping hand.


-- BACKUPS AND LOGGING --

You should always have a backup plan for your Drupal installation (source files and database).
That means, you should create backups of source code and the database regularly.

But despite of your regular backup plan, the CMS Updater module is creating a backup of certain core-source files and
your Drupal database before an update starts.

Depending on your configuration, CMS Updater stores backups either in the public or the private file system.
In case of the default public file system path, the following files are created:

sites/default/files/cms_updater
sites/default/files/cms_updater/.htaccess
sites/default/files/cms_updater/[update_number]
sites/default/files/cms_updater/[update_number]/[update_number]-backup.sql
sites/default/files/cms_updater/[update_number]/[update_number]-backupfiles.zip
sites/default/files/cms_updater/[update_number]/[update_number]_cms_updater.log

[update_number] is the folder, named with the id of the according update.
(Keep in mind, it's an not linear increasing number.)


-- RESTORING BACKUPS MADE BY CMS UPDATER --

Under rare conditions it is possible that a core update of your Drupal results in a website,
which has errors or is not reachable anymore.
(Maybe not all files could be copied e.g. due to a possible power failure.)

In that case you can manually copy the files in
sites/default/files/cms_updater/[update_number]/[update_number]-backupfiles.zip back to your drupal root.
(e.g. extract the archive into your drupal root directory.)

After that, also restore your Drupal DB with the content of
sites/default/files/cms_updater/[update_number]/[update_number]-backup.sql you can import it using phpMyAdmin or
restore using the Backup and Migrate Module (https://www.drupal.org/project/backup_migrate).