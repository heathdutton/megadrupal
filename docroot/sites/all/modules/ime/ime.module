<?php

/**
 * @file
 * System which include Jquery IME library.
 */

/**
 * Implements hook_help().
 */
function ime_help($path, $arg) {
  switch ($path) {

    case 'admin/config/regional/ime':
      return '<p>' . t('jQuery.IME is a jQuery based input method editor library supporting more than 135 input methods across more than 62 languages.') . '</p>';

    case 'admin/help#ime':
      $output = '';
      $output .= '<h3>' . t('Introduction') . '</h3>';
      $output .= '<p>' . t('jQuery.IME is a jQuery based input method editor library supporting more than 135 input methods across more than 62 languages.These input methods are well tested. Initially the input methods were contributed by the Wikimedia community. By now many input methods have also been contributed by Red Hat.This project is a Wikimedia foundation initiative to provide language technology tools to a wider audience outside the Wikimedia universe.This input tool is widely deployed in all Wikimedia projects (eg: wikipedia) <a href="https://github.com/wikimedia/jquery.ime" target= "_blank"> https://github.com/wikimedia/jquery.ime</a>') . '</p>';
      $output .= '<h3>' . t('Requirements') . '</h3>';
      $output .= '<h4>' . t('jquery.ime library') . '</h4>';
      $output .= t('You will need to download jquery.ime from the site <a href="https://github.com/wikimedia/jquery.ime" target= "_blank"> https://github.com/wikimedia/jquery.ime</a>. Extract the jquery.ime files to the "/sites/all/libraries/" directory and rename to jquery.ime (e.g:/sites/all/libraries/jquery.ime/).');
      $output .= t('You can download this module using drush command "drush dl ime" after that do "drush en ime" it will download the jQuery.ime library as well automatically');
      $output .= '<h3>' . t('Installation / Configuration') . '</h4>';
      $output .= '1. Extract the module files to the "sites/all/modules" directory. It should now
        contain a "ime" directory.<br/>';
      $output .= '2. Enable the module in the "Administration panel > Modules > Multilingual - Internationalization" section.<br/>';
      $output .= '3. User System Configuration find Ime Drupal and enable the "Enable jquery.ime" and Save.<br/>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function ime_menu() {
  $items = array();
  $items['admin/config/regional/ime'] = array(
    'title' => 'jQuery Ime',
    'description' => 'Input Method Editor allows you to write content in more than 62 multiple languages.',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ime_admin_form'),
  );

  return $items;
}

/**
 * Administration setting form for ime.
 */
function ime_admin_form($form, &$form_state) {
  global $base_url;
  $library = libraries_detect('jquery.ime');
  if (!$library['installed']) {
    if ($library['error'] == 'not found' || $library['error'] == 'not detected') {
      $lib_error_message = strip_tags($library['error message']);
      drupal_set_message(t('@error Please make sure the library is <a href="@installedcorrectly">installed correctly</a>.', array('@error' => $lib_error_message, '@installedcorrectly' => $base_url . '/admin/help/ime')), 'error');
      watchdog('jquery.ime', $library['error message'], NULL, WATCHDOG_ERROR);
      return;
    }
  }

  $jquery = drupal_get_library('system', 'jquery');
  if (version_compare($jquery['version'], '1.7', '<')) {
    drupal_set_message(t('jquery.ime requires jQuery 1.7 or higher. Please <a href="@configure">configure jQuery Update</a> to use a higher jQuery version.', array('@configure' => $base_url . '/admin/config/development/jquery_update')), 'error');
    return;
  }

  $form['ime_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable jquery.ime'),
    '#default_value' => variable_get('ime_enable', 0),
    '#description' => t("Add jquery.ime to elements with element IDs specified below."),
  );

  $form['ime_ids'] = array(
    '#type' => 'textarea',
    '#title' => t('Element IDs'),
    '#default_value' => variable_get('ime_ids', "#edit-title,textarea"),
    '#description' => t('Comma separated list of element IDs with "#" tage of elements for which jQuery.ime will be enabled or element name.eg. #edit-title,textarea'),
  );
  $default_pages = 'node/*/edit' . "\n" . 'node/add/*';
  $form['ime_pages'] = array(
    '#type' => 'textarea',
    '#title' => t('Enable IME on specific pages'),
    '#description' => t("Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are blog for the blog page and blog/* for every personal blog."),
    '#default_value' => variable_get('ime_pages', $default_pages),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_libraries_info().
 */
function ime_libraries_info() {
  $libraries['jquery.ime'] = array(
    'name' => 'jquery.ime',
    'vendor url' => 'https://github.com/wikimedia/jquery.ime',
    'download url' => 'https://github.com/wikimedia/jquery.ime',
    'version' => '1.0',
    'files' => array(
      'js' => array(
        'src/jquery.ime.selector.js',
        'src/jquery.ime.js',
        'src/jquery.ime.preferences.js',
        'src/jquery.ime.inputmethods.js',
      ),
      'css' => array(
        'css/jquery.ime.css',
      ),
    ),
    'integration files' => array(
      'ime' => array(
        'js' => array(
          'js/ime_script.js',
        ),
      ),
    ),
  );
  return $libraries;
}

/**
 * Get a pattern of pages.
 *
 * @param bool $ime_enable
 *   TRUE if Jquery IME is enable, FALSE otherwise.
 *
 * @return array $patterns
 *   An array of selected pages.
 */
function ime_paths_patterns($ime_enable) {
  $patterns = array();
  $pages = variable_get('ime_pages');
  if (isset($ime_enable) && !empty($pages)) {
    foreach (explode("\n", $pages) as $line) {
      $line = trim($line);
      if (!empty($line)) {
        $patterns[] = $line;
      }
    }
  }
  return $patterns;
}

/**
 * Implements hook_page_build().
 */
function ime_page_build() {
  $jquery_ime_ids = variable_get('ime_ids');
  $jquery_ime_enable = variable_get('ime_enable');
  $library = libraries_detect('jquery.ime');
  if ($library['installed'] && $jquery_ime_enable) {
    $ime_enable = TRUE;
    $paths = ime_paths_patterns($ime_enable);
    if (isset($paths) && !empty($paths)) {
      foreach ($paths as $page) {
        if (drupal_match_path(current_path(), $page) || drupal_match_path(drupal_get_path_alias(current_path()), $page)) {
          $field_ids = $jquery_ime_ids;
          $jquery_ime_lib_path = libraries_get_path('jquery.ime', TRUE);
          drupal_add_js(array(
            'ime' => array(
              'jqueryImePath' => $jquery_ime_lib_path . "/",
            ),
              ), 'setting');
          drupal_add_js(array(
            'ime' => array(
              'field_ids' => $field_ids,
            ),
              ), 'setting');
          libraries_load_files($library);
          break;
        }
      }
    }
  }
}
