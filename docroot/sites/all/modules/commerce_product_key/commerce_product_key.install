<?php
/**
 * @file
 * The database schema for the product key entity.
 */

/**
 * Implements hook_schema().
 */
function commerce_product_key_schema() {
  $schema = array();

  $schema['commerce_product_key'] = array(
    'description' => 'The base table for products.',
    'fields' => array(
      'product_key_id' => array(
        'description' => 'The primary identifier for a product key, used internally only.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'description' => 'The {users}.uid that this product key belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'key_owner_id' => array(
        'description' => 'The {commerce_product_order}.uid the product key belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'code' => array(
        'description' => 'The unique, human-readable identifier for a product.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {commerce_product_key_type}.type of this product.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'activated' => array(
        'description' => 'Boolean indicating whether or not the product key has been activated.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'revoked' => array(
        'description' => 'Boolean indicating whether or not the product key has been revoked.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'language' => array(
        'description' => 'The {languages}.language of this product.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid that created this product.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether or not the product key appears in lists and may be added to orders.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the product was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the product was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('product_key_id'),
    'indexes' => array(
      'type' => array('type'),
    ),
    'unique keys' => array(
      'code' => array('code'),
    ),
    'foreign keys' => array(
      'creator' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'key_owner_id' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'order_id' => array(
        'table' => 'commerce_order',
        'columns' => array('order_id' => 'order_id'),
      ),
    ),
  );

  return $schema;
}
