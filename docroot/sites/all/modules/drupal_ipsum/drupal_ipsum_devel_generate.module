<?php
/**
 * @file
 * Drupal Ipsum Devel Generate module.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter Devel Generate content form to add Drupal Ipsum fields.
 */
function drupal_ipsum_devel_generate_form_devel_generate_content_form_alter(&$form, &$form_state) {
  $drupal_ipsum_form = array(
    'drupal_ipsum' => array(
      '#title' => t('Drupal Ipsum settings'),
      '#description' => t('Replace the text generated by Devel Generate with Drupal Ipsum text.'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#weight' => 0,
      'drupal_ipsum_content' => array(
        '#title' => t('Use Drupal Ipsum for content'),
        '#description' => t("This will replace the node's title and text fields visible to Devel Generate."),
        '#type' => 'checkbox',
        '#weight' => 0,
      ),
    ),
  );

  if (module_exists('comment')) {
    $drupal_ipsum_form['drupal_ipsum']['drupal_ipsum_comment'] = array(
      '#title' => t('Use Drupal Ipsum for comments'),
      '#description' => t("This will replace comment title, body and text fields visible to Devel Generate."),
      '#type' => 'checkbox',
      '#weight' => 1,
    );
  }

  $form += $drupal_ipsum_form;
  array_unshift($form['#submit'], 'drupal_ipsum_devel_generate_content_form_submit');

  // Clear comment flag.
  unset($_SESSION['drupal_ipsum_devel_generate_comment']);
}

/**
 * Submit callback.
 *
 * @see drupal_ipsum_devel_generate_form_devel_generate_content_form_alter()
 */
function drupal_ipsum_devel_generate_content_form_submit($form, &$form_state) {
  if (isset($form_state['values']['drupal_ipsum_comment']) && $form_state['values']['drupal_ipsum_comment'] == 1) {
    // Make sure we have a session. This is a total edge case.
    if (!isset($_SESSION)) {
      drupal_session_start();
    }

    $_SESSION['drupal_ipsum_devel_generate_comment'] = TRUE;
  }
}

/**
 * Implements hook_comment_presave().
 *
 * Overwrites comment subjects & titles with Drupal Ipsum text when using Devel Generate.
 */
function drupal_ipsum_devel_generate_comment_presave($comment) {
  if (isset($_SESSION) && isset($_SESSION['drupal_ipsum_devel_generate_comment'])) {
    if (isset($comment->name) && $comment->name === 'devel generate') {
      // Generate a subject between 1 and 4 words long.
      $comment->subject = drupal_ipsum_generate(NULL, mt_rand(1, 4), DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);

      // Populate body with Drupal Ipsum text. Generate x paragraphs of random Drupal Ipsum text.
      if (isset($comment->comment_body)) {
        $lang = $comment->language;
        $comment->comment_body[$lang][0]['value'] = drupal_ipsum_generate(NULL, mt_rand(1, 3), DRUPAL_IPSUM_TYPE_PARAGRAPH, DRUPAL_IPSUM_START_ANY, FALSE);
      }

      // Populate other text fields.
      foreach ($comment as $k => $v) {
        if (strpos($k, 'field_') === 0) {
          if (isset($v[$lang][0]['value']) && is_string($v[$lang][0]['value']) && isset($v[$lang][0]['format'])) {
            // Safe to assume its a text field.
            $length = strlen($v[$lang][0]['value']);

            if ($length <= 255) {
              $comment->{$k}[$lang][0]['value'] = drupal_ipsum_generate(NULL, mt_rand(1, 5), DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);
            }
            else {
              $comment->{$k}[$lang][0]['value'] = drupal_ipsum_generate();
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_node_presave().
 *
 * Overwrites node titles, bodies & other text fields with Drupal Ipsum text when using Devel Generate.
 */
function drupal_ipsum_devel_generate_node_presave($node) {
  if (isset($node->devel_generate) && $node->devel_generate['drupal_ipsum_content']) {
    // Generate a title up to X words long.
    $node->title = drupal_ipsum_generate(NULL, $node->devel_generate['title_length'], DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);

    // Populate body with Drupal Ipsum text using default options.
    $lang = isset($node->language) ? $node->language : LANGUAGE_NONE;
    if (isset($node->body)) {
      $node->body[$lang][0]['value'] = drupal_ipsum_generate();
    }

    // Populate other text fields.
    foreach ($node as $k => $v) {
      if (strpos($k, 'field_') === 0) {
        if (isset($v[$lang][0]['value']) && is_string($v[$lang][0]['value']) && isset($v[$lang][0]['format'])) {
          // Safe to assume its a text field.
          $length = strlen($v[$lang][0]['value']);

          if ($length <= 255) {
            $node->{$k}[$lang][0]['value'] = drupal_ipsum_generate(NULL, mt_rand(1, 5), DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);
          }
          else {
            $node->{$k}[$lang][0]['value'] = drupal_ipsum_generate();
          }
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter Devel Generate user form to add Drupal Ipsum fields.
 */
function drupal_ipsum_devel_generate_form_devel_generate_users_form_alter(&$form, &$form_state) {
  $drupal_ipsum_form = array(
    'drupal_ipsum' => array(
      '#title' => t('Drupal Ipsum settings'),
      '#description' => t('Replace the text generated by Devel Generate with Drupal Ipsum text.'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#weight' => 0,
      'drupal_ipsum_users' => array(
        '#title' => t('Use Drupal Ipsum for user names'),
        '#description' => t("This will replace generated user names with Drupal Ipsum text."),
        '#type' => 'checkbox',
        '#weight' => 0,
      ),
    ),
  );

  $form += $drupal_ipsum_form;
  array_unshift($form['#submit'], 'drupal_ipsum_devel_generate_users_form_submit');
  unset($_SESSION['drupal_ipsum_devel_generate_users']);
}

/**
 * Submit callback.
 *
 * @see drupal_ipsum_devel_generate_form_devel_generate_users_form_alter()
 */
function drupal_ipsum_devel_generate_users_form_submit($form, &$form_state) {
  if (isset($form_state['values']['drupal_ipsum_users']) && $form_state['values']['drupal_ipsum_users'] == 1) {
    // Make sure we have a session. This is a total edge case.
    if (!isset($_SESSION)) {
      drupal_session_start();
    }

    $_SESSION['drupal_ipsum_devel_generate_users'] = TRUE;
  }
}

/**
 * Implements hook_user_presave().
 *
 * Overwrites user names with Drupal Ipsum text when using Devel Generate.
 */
function drupal_ipsum_user_presave(&$edit, $account, $category) {
  if (isset($_SESSION) && isset($_SESSION['drupal_ipsum_devel_generate_users'])) {
    // Make sure usernames are unique.
    do {
      // Randomly concatenate 1 to 3 words.
      $new_name = drupal_ipsum_generate(NULL, mt_rand(1, 3), DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);
      $result = db_select('users', 'u')->fields('u', array('name'))->condition('name', $new_name, '=')->execute();
      $name_is_unique = $result->rowCount() === 0;
    } while (!$name_is_unique);

    $old_name = $edit['name'];
    $edit['mail'] = str_replace($old_name, $edit['name'], $edit['mail']);
    $edit['name'] = strtolower(str_replace(' ', '_', $new_name));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter Devel Generate vocabulary form to add Drupal Ipsum fields.
 */
function drupal_ipsum_devel_generate_form_devel_generate_vocab_form_alter(&$form, &$form_state) {
  $drupal_ipsum_form = array(
    'drupal_ipsum' => array(
      '#title' => t('Drupal Ipsum settings'),
      '#description' => t('Replace the text generated by Devel Generate with Drupal Ipsum text.'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#weight' => 0,
      'drupal_ipsum_vocab' => array(
        '#title' => t('Use Drupal Ipsum for vocabulary names'),
        '#description' => t("This will replace generated vocabulary names with Drupal Ipsum text."),
        '#type' => 'checkbox',
        '#weight' => 0,
      ),
    ),
  );

  $form += $drupal_ipsum_form;
  array_unshift($form['#submit'], 'drupal_ipsum_devel_generate_vocab_form_submit');
  unset($_SESSION['drupal_ipsum_devel_generate_vocab']);
}

/**
 * Submit callback.
 *
 * @see drupal_ipsum_devel_generate_form_devel_generate_vocab_form_alter()
 */
function drupal_ipsum_devel_generate_vocab_form_submit($form, &$form_state) {
  if (isset($form_state['values']['drupal_ipsum_vocab']) && $form_state['values']['drupal_ipsum_vocab'] == 1) {
    // Make sure we have a session. This is a total edge case.
    if (!isset($_SESSION)) {
      drupal_session_start();
    }

    $_SESSION['drupal_ipsum_devel_generate_vocab'] = TRUE;
  }
}

/**
 * Implements hook_taxonomy_vocabulary_presave().
 *
 * Overwrites vocabulary names with Drupal Ipsum text when using Devel Generate.
 */
function drupal_ipsum_devel_generate_taxonomy_vocabulary_presave($vocabulary) {
  if (isset($_SESSION) && isset($_SESSION['drupal_ipsum_devel_generate_vocab'])) {
    // Maintain same word length as generated name.
    $length = count(explode(' ', $vocabulary->name));
    $old_name = $vocabulary->name;
    $vocabulary->name = drupal_ipsum_generate(NULL, $length, DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);
    $vocabulary->machine_name = strtolower(str_replace(' ', '_', $vocabulary->name));
    $vocabulary->description = str_replace($old_name, $vocabulary->name, $vocabulary->description);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter Devel Generate term form to add Drupal Ipsum fields.
 */
function drupal_ipsum_devel_generate_form_devel_generate_term_form_alter(&$form, &$form_state) {
  $drupal_ipsum_form = array(
    'drupal_ipsum' => array(
      '#title' => t('Drupal Ipsum settings'),
      '#description' => t('Replace the text generated by Devel Generate with Drupal Ipsum text.'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#weight' => 0,
      'drupal_ipsum_term' => array(
        '#title' => t('Use Drupal Ipsum for term names'),
        '#description' => t("This will replace generated term names with Drupal Ipsum text."),
        '#type' => 'checkbox',
        '#weight' => 0,
      ),
    ),
  );

  $form += $drupal_ipsum_form;
  array_unshift($form['#submit'], 'drupal_ipsum_devel_generate_term_form_submit');
  unset($_SESSION['drupal_ipsum_devel_generate_term']);
}

/**
 * Submit callback.
 *
 * @see drupal_ipsum_devel_generate_form_devel_generate_term_form_alter()
 */
function drupal_ipsum_devel_generate_term_form_submit($form, &$form_state) {
  if (isset($form_state['values']['drupal_ipsum_term']) && $form_state['values']['drupal_ipsum_term'] == 1) {
    // Make sure we have a session. This is a total edge case.
    if (!isset($_SESSION)) {
      drupal_session_start();
    }

    $_SESSION['drupal_ipsum_devel_generate_term'] = TRUE;
  }
}

/**
 * Implements hook_taxonomy_term_presave().
 *
 * Overwrites term names with Drupal Ipsum text when using Devel Generate.
 */
function drupal_ipsum_devel_generate_taxonomy_term_presave($term) {
  if (isset($_SESSION) && isset($_SESSION['drupal_ipsum_devel_generate_term'])) {
    // Maintain same word length as generated name.
    $length = count(explode(' ', $term->name));
    $old_name = $term->name;
    $term->name = drupal_ipsum_generate(NULL, $length, DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);
    $term->description = str_replace($old_name, $term->name, $term->description);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter Devel Generate menu form to add Drupal Ipsum fields.
 */
function drupal_ipsum_devel_generate_form_devel_generate_menu_form_alter(&$form, &$form_state) {
  $drupal_ipsum_form = array(
    'drupal_ipsum' => array(
      '#title' => t('Drupal Ipsum settings'),
      '#description' => t('Replace the text generated by Devel Generate with Drupal Ipsum text.'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#weight' => 0,
      'drupal_ipsum_menu' => array(
        '#title' => t('Use Drupal Ipsum for menu names'),
        '#description' => t("This will replace generated menu names with Drupal Ipsum text."),
        '#type' => 'checkbox',
        '#weight' => 0,
      ),
      'drupal_ipsum_menu_link' => array(
        '#title' => t('Use Drupal Ipsum for menu links'),
        '#description' => t("This will replace generated menu link names with Drupal Ipsum text."),
        '#type' => 'checkbox',
        '#weight' => 1,
      ),
    ),
  );

  $form += $drupal_ipsum_form;
  array_unshift($form['#submit'], 'drupal_ipsum_devel_generate_menu_form_submit');
  unset($_SESSION['drupal_ipsum_devel_generate_menu']);
  unset($_SESSION['drupal_ipsum_devel_generate_menu_link']);
}

/**
 * Submit callback.
 *
 * @see drupal_ipsum_devel_generate_form_devel_generate_menu_form_alter()
 */
function drupal_ipsum_devel_generate_menu_form_submit($form, &$form_state) {
  if (isset($form_state['values']['drupal_ipsum_menu']) && $form_state['values']['drupal_ipsum_menu'] == 1) {
    // Make sure we have a session. This is a total edge case.
    if (!isset($_SESSION)) {
      drupal_session_start();
    }

    $_SESSION['drupal_ipsum_devel_generate_menu'] = TRUE;
  }

  if (isset($form_state['values']['drupal_ipsum_menu_link']) && $form_state['values']['drupal_ipsum_menu_link'] == 1) {
    // Make sure we have a session. This is a total edge case.
    if (!isset($_SESSION)) {
      drupal_session_start();
    }

    $_SESSION['drupal_ipsum_devel_generate_menu_link'] = TRUE;
  }
}

/**
 * Implements hook_menu_insert().
 *
 * Overwrites menu names with Drupal Ipsum text when using Devel Generate.
 */
function drupal_ipsum_devel_generate_menu_insert($menu) {
  if (isset($_SESSION) && isset($_SESSION['drupal_ipsum_devel_generate_menu'])) {
    // Maintain same word length as generated name.
    $length = count(explode(' ', $menu['title']));
    $old_name = $menu['title'];
    $menu['title'] = drupal_ipsum_generate(NULL, $length, DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);
    $menu['description'] = str_replace($old_name, $menu['title'], $menu['description']) . '. ' . t('Generated by Drupal Ipsum.');
    // Leave menu_name intact to keep compatibility with generated menu links.
    // $old_name = strtolower($old_name);
    // $menu['menu_name'] = str_replace($old_name, strtolower(str_replace(' ', '_', $menu['title'])), $menu['menu_name']);
    menu_save($menu);
  }
}

/**
 * Implements hook_menu_link_insert().
 *
 * Overwrites menu link names with Drupal Ipsum text when using Devel Generate.
 */
function drupal_ipsum_devel_generate_menu_link_insert($link) {
  if (isset($_SESSION) && isset($_SESSION['drupal_ipsum_devel_generate_menu_link']) && isset($link['options']['devel'])) {
    // Maintain same word length as generated name.
    $length = count(explode(' ', $link['link_title']));
    $old_name = $link['link_title'];
    $link['link_title'] = drupal_ipsum_generate(NULL, $length, DRUPAL_IPSUM_TYPE_WORD, DRUPAL_IPSUM_START_ANY);
    $link['options']['attributes']['title'] = str_replace($old_name, $link['link_title'], $link['options']['attributes']['title']) . ' ' . t('Generated by Drupal Ipsum.');
    menu_link_save($link);
  }
}