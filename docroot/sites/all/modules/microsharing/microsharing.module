<?php

define('MICROSHARING_URL_API','http://4qu.co/rapi.php');

/**
 * Implements hook_theme().
 */
function microsharing_theme() {
  return array(
    'microsharing_services_admin' => array(
      'render element' => 'form',
  		'template' => 'microsharing-admin',
    ),
  );
}

/**
 * Implements hook_page_alter().
 */
function microsharing_page_alter(&$page) {
  
  if (!variable_get('microsharing_enabled', true)){
    return;
  }
  
  $microsharing_visibility_path = variable_get ('microsharing_visibility_path', array ('visibility' => BLOCK_VISIBILITY_NOTLISTED, 'pages' => 'admin/*'));

  // Limited visibility blocks must list at least one page.
  if ($microsharing_visibility_path['visibility'] == BLOCK_VISIBILITY_LISTED && empty($microsharing_visibility_path['pages'])) {
    return;
  }

  // Match path if necessary.
  if ($microsharing_visibility_path['pages']) {
    // Convert path to lowercase. This allows comparison of the same path
    // with different case. Ex: /Page, /page, /PAGE.
    $pages = drupal_strtolower($microsharing_visibility_path['pages']);
    if ($microsharing_visibility_path['visibility'] < BLOCK_VISIBILITY_PHP) {
      // Convert the Drupal path to lowercase
      $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
      // Compare the lowercase internal and lowercase path alias (if any).
      $page_match = drupal_match_path($path, $pages);
      if ($path != $_GET['q']) {
        $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
      }
      // When visibility has a value of 0 (BLOCK_VISIBILITY_NOTLISTED),
      // the widget is displayed on all pages except those listed in pages.
      // When set to 1 (BLOCK_VISIBILITY_LISTED), it is displayed only on those
      // pages listed in pages.
      $page_match = !($microsharing_visibility_path['visibility'] xor $page_match);
    }elseif (module_exists('php')) {
      $page_match = php_eval($microsharing_visibility_path['pages']);
    }else {
      $page_match = FALSE;
    }
  }else {
    $page_match = TRUE;
  }
  if (!$page_match) {
    return;
  }else{
    $services_code = variable_get('microsharing_services_code', "");
    if (empty ($services_code)) {
      $services_code = '<script src="//cdn.4qu.co/w.js"></script>
                        <script type="text/javascript">
                          var my_settings = {
                          	"services": "facebook,twitter,email,pinterest,linkedin,evernote,googleplus,vk,odnoklassniki,moimir,livejournal,amenme",
                          	"image_services": "facebook,twitter,email,pinterest,linkedin,evernote,googleplus,vk,odnoklassniki,moimir,livejournal,amenme",
                          	"highlight_color": "b2f4dd",
                          	"service_color": "2ba6cb",
                          	"service_background": "ffffff",
                          	"hover_color": "000000",
                          	"text_color": "000000",
                          	"text_sharing": true,
                          	"image_sharing": true,
                          	"sidebar_sharing" : true,
                          	"image_sharing_position": "ne"
                          };
                        </script>';
    }
    
    $page['footer']['microsharing'] = array ('#markup' => $services_code);
  }
}

/**
 * Implements hook_menu().
 * @see hook_menu()
 */
function microsharing_menu() {
  $items = array ();
  # Admin pages
  $items['admin/config/services/microsharing'] = array(
    'title' => 'Micro sharing service 4qu.co',
    'description' => 'Integration with micro sharing service 4qu.co.',
  	'type' => MENU_NORMAL_ITEM,
    'page callback' => 'microsharing_admin',
    'access arguments' => array("administer site configuration"),
  );
  $items['admin/config/services/microsharing/settings'] = array(
    'title' => 'Micro sharing service 4qu.co settings',
    'description' => 'Setting enabled services, adjust colors for service icons, a highlithing text, a hovered image.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/services/microsharing/statistic'] = array(
    'title' => 'Micro sharing service 4qu.co statistic',
    'description' => 'See statistic micro sharing for your domain.',
    'page callback' => 'microsharing_admin_statistic',
  	'type' => MENU_LOCAL_TASK,
    'access arguments' => array("administer site configuration"),
  );
  return $items;
}

function microsharing_admin() {
  drupal_add_css(drupal_get_path('module', 'microsharing') .'/css/microsharing.css', array('preprocess' => FALSE));
  drupal_add_css(drupal_get_path('module', 'microsharing') .'/js/colorpicker/css/colorpicker.css', array('preprocess' => FALSE));
  drupal_add_js(drupal_get_path('module', 'microsharing') .'/js/colorpicker/js/colorpicker.js', array('preprocess' => FALSE));
  drupal_add_js('//cdn.4qu.co/w.js', 'external');
  drupal_add_js(drupal_get_path('module', 'microsharing') .'/js/microsharing.js', array('preprocess' => FALSE));
  $services_code = variable_get('microsharing_services_code', "");
  $settings = 'var my_settings = {"services": "facebook,twitter,email,linkedin,evernote,googleplus,vk,odnoklassniki,moimir,livejournal",
                            		  "image_services": "facebook,twitter,email,pinterest,linkedin,evernote,googleplus,vk,odnoklassniki,moimir,livejournal",
                            		  "highlight_color": "b2f4dd",
                            		  "service_color": "2ba6cb",
                            		  "service_background": "ffffff",
                            		  "hover_color": "000000",
                            		  "text_color": "000000",
                            		  "text_sharing": true,
                            		  "image_sharing": true,
                            		  "sidebar_sharing" : true,
                            		  "image_sharing_position": "ne",
                            		  "container_restrict" : "#example-preview",
                            		  "google_analytics": true
                            	   };'; 
  if (!empty ($services_code)) {
    preg_match_all('/var my_settings = {[^}]*};/', $services_code, $matches);
    if (isset ($matches[0]) && isset ($matches[0])) {
      $settings = $matches[0][0];
    };
  }

  drupal_add_js($settings, 'inline');
  $form = drupal_get_form("microsharing_admin_form");

  return drupal_render($form);
}

function microsharing_admin_form($form, &$form_state) {
  $form    = array();

  $form["microsharing_services_code_social_services"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_social_services', ""),
  );
  
  $form["microsharing_services_code_color_icon"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_color_icon', ""),
  );
  
  $form["microsharing_services_code_bg_icon"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_bg_icon', ""),
  );
  
  $form["microsharing_services_code_background_text"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_background_text', ""),
  );
  
  $form["microsharing_services_code_color_text"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_color_text', ""),
  );
  
  $form["microsharing_services_code_sharing_quote"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_sharing_quote', "true"),
  );
  
  $form["microsharing_services_code_sharing_images"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_sharing_images', "true"),
  );
  
  $form["microsharing_services_code_sharing_page"] = array(
    "#type"          => "textfield",
    "#maxlength"		 => 2048,
    "#attributes"		 => array ('style' => 'display:none;'),
    "#default_value" => variable_get('microsharing_services_code_sharing_page', "true"),
  );

  $form["microsharing_enabled"] = array(
    "#type"          => "checkbox",
    "#title"         => t("Enabled widget?"),
    "#default_value" => variable_get('microsharing_enabled', true),
  );

  // Per-path visibility.
  $form['microsharing_visibility_path'] = array(
    '#type'        => 'fieldset',
    '#title'       => t('Pages'),
    '#collapsible' => TRUE,
    '#collapsed'   => TRUE,
    '#group'	     => 'visibility',

  );

  $access                       = user_access('use PHP for settings');
  $microsharing_visibility_path = variable_get ('microsharing_visibility_path', array ('visibility' => BLOCK_VISIBILITY_NOTLISTED, 'pages' => 'admin/*'));
  
  $options = array(
    BLOCK_VISIBILITY_NOTLISTED => t('All pages except those listed'),
    BLOCK_VISIBILITY_LISTED    => t('Only the listed pages'),
  );
  $description = t("Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>'));

  if (module_exists('php') && $access) {
    $options     += array(BLOCK_VISIBILITY_PHP => t('Pages on which this PHP code returns <code>TRUE</code> (experts only)'));
    $title        = t('Pages or PHP code');
    $description .= ' ' . t('If the PHP option is chosen, enter PHP code between %php. Note that executing incorrect PHP code can break your Drupal site.', array('%php' => '<?php ?>'));
  }else {
    $title        = t('Pages');
  }
  
  $form['microsharing_visibility_path']['visibility'] = array(
    '#type'          => 'radios',
    '#title'         => t('Show widget on specific pages'),
    '#options'       => $options,
    '#default_value' => $microsharing_visibility_path['visibility'],
  );
  
  $form['microsharing_visibility_path']['pages'] = array(
    '#type'          => 'textarea',
    '#title'         => '<span class="element-invisible">' . $title . '</span>',
    '#default_value' => $microsharing_visibility_path['pages'],
    '#description'   => $description,
  );
  
  $services_code = '<script src="//cdn.4qu.co/w.js"></script>
                    <script type="text/javascript">
                      var my_settings = {
                      	"services": "facebook,twitter,email,pinterest,linkedin,evernote,googleplus,vk,odnoklassniki,moimir,livejournal,amenme",
                      	"image_services": "facebook,twitter,email,pinterest,linkedin,evernote,googleplus,vk,odnoklassniki,moimir,livejournal,amenme",
                      	"highlight_color": "b2f4dd",
                      	"service_color": "2ba6cb",
                      	"service_background": "ffffff",
                      	"hover_color": "000000",
                      	"text_color": "000000",
                      	"text_sharing": true,
                      	"image_sharing": true,
                      	"sidebar_sharing" : true,
                      	"image_sharing_position": "ne"
                      };
                    </script>';
  
  $form["microsharing_services_code"] = array(
    "#type"          => "textarea",
    "#title"         => t("Code"),
    "#rows"					 => 16,
    "#default_value" => variable_get('microsharing_services_code', $services_code),
    "#description"	 => t('More parameters see in !link', array ('!link' => l('Documentation Api', 'http://4qu.co/doc', array ('external' => true, 'attributes' => array('target' => '_blank')))))
  );
  
  $form['#theme'] = array ('microsharing_services_admin');
    
  return system_settings_form($form);
}

function template_preprocess_microsharing_services_admin(&$variables) {
  unset($variables['form']['#theme']);
  $variables['render_form'] = drupal_render($variables['form']);
}

function microsharing_admin_statistic() {
  global $base_url;
  $html = '';
  $form = drupal_get_form("microsharing_admin_statistic_form");
  $html .= drupal_render($form);
  $microsharing_token_api = variable_get('microsharing_token_api', "");
  if (!empty ($microsharing_token_api)) {
    $timestamp = time();
    $microsharing_token_api_signature = variable_get('microsharing_token_api_signature', '');
    if (variable_get('microsharing_token_api_timestamp', 0) + 43200 < time() || empty($microsharing_token_api_signature)) {
      $signature = md5( $timestamp . variable_get('microsharing_token_api', ""));
      variable_set('microsharing_token_api_signature', $signature);
      variable_set('microsharing_token_api_timestamp', $timestamp);
    } 
    
    $url = MICROSHARING_URL_API . '?timestamp=' . variable_get('microsharing_token_api_timestamp', 0) . '&signature=' . variable_get('microsharing_token_api_signature', '') . '&action=stats&domain=' . str_replace(array ('http://','https://'), array ('',''), $base_url) . '&filter=last&start=0&limit=100&format=json';
    $response = drupal_http_request($url);

    if ($response->code == 200 && !empty ($response->data)) {
      $links = drupal_json_decode($response->data);
    }
    
    $header = array (t('Shorturl'), t('Url'), t('Title'), t('Timestamp'), t('Clicks'));
    $rows = array ();
    if (!empty ($links['links'])) {
      foreach($links['links'] as $k => $v) {
        $rows[] = array ($v['shorturl'], $v['url'], $v['title'], $v['timestamp'], $v['clicks']); 
      }
    }

    $html .= '<h4>' . t('Total links') . ' ' . (!empty($links['stats']['total_links']) ? $links['stats']['total_links'] : 0) . ', ' . t('Total clicks') . ' ' . (!empty($links['stats']['total_clicks']) ? $links['stats']['total_clicks'] : 0) . '</h4>';
    $html .= theme ('table', array('header' => $header, 'rows' => $rows, 'empty' => t('No data')));
  }
  return $html;
}

function microsharing_admin_statistic_form($form, &$form_state) {
  $form    = array();
    
  $form["microsharing_token_api"] = array(
    "#type"          => "textfield",
  	"#maxlength"		 => 2048,
    "#title"		     => t('Enter your token'),
    "#description"	 => t('Get token in your account. If you have not yet account, you may sign up on !url_link', array ('!url_link' => l('Register page', 'http://4qu.co/stat/index.php?act=joinform', array ('external' => true, 'attributes' => array('target' => '_blank'))))),
    "#default_value" => variable_get('microsharing_token_api', ""),
  );
  
  return system_settings_form($form);
}