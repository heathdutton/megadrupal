<?php

/**
 * @file
 * Virtual Field tests.
 */

/**
 * Tests the basics.
 */
class VirtualFieldTestCase extends DrupalWebTestCase {

  /**
   * Info for the testing module.
   */
  public static function getInfo() {
    return array(
      'name' => 'Virtual Field',
      'description' => 'Tests basic Virtual Field functionality',
      'group' => 'Virtual Field',
    );
  }

  /**
   * Setup before testing.
   */
  public function setUp() {
    parent::setUp('virtual_field', 'virtual_field_test', 'field_ui');
  }

  /**
   * Basic tests.
   *
   * Create a virtual field, attach it to a node type, see if it displays
   * properly, add it to another node type, and check if it looks OK.
   */
  public function testBasicSetup() {
    $node_type = $this->drupalCreateContentType();
    $user = $this->drupalCreateUser(array(
              'administer content types',
              'administer nodes',
              'bypass node access',
            ));
    $this->drupalLogin($user);

    $manage_page = 'admin/structure/types/manage/' . $node_type->name . '/fields';
    $this->drupalGet($manage_page);

    // Can we add a field?
    $this->assertField('fields[_add_new_virtual_field_field][label]', 'Found add new virtual field label.');

    // Add our virtual field.
    $edit = array(
      'fields[_add_new_virtual_field_field][label]' => 'Test field',
      'fields[_add_new_virtual_field_field][field_name]' => 'vf_test',
      'fields[_add_new_virtual_field_field][type]' => 'vtest',
      'fields[_add_new_virtual_field_field][widget_type]' => 'hidden',
    );
    $this->drupalPost($manage_page, $edit, t('Save'));

    // Check if we can see the display settings.
    $display_page = 'admin/structure/types/manage/' . $node_type->name . '/display';
    $this->drupalGet($display_page);

    $this->assertField('fields[field_vf_test][type]', 'Found display settings for the virtual field.');

    /*
     * Normally we'd do something like:
     *
     *   $settings = array(
     *     'type' => $node_type->name,
     *   );
     *   $node = $this->drupalCreateNode($settings);
     *
     * But that seems not to support fields. At all.
     */
    $this->drupalGet('node/add/' . $node_type->name);
    $edit = array(
      'title' => 'test',
      'body[und][0][value]' => 'test',
      'body[und][0][format]' => 'plain_text',
    );
    $this->drupalPost('node/add/' . $node_type->name, $edit, t('Save'));

    $node = node_load(1);
    // field_language() seems broken. It doesn't see the field in testing.
    $langcode = LANGUAGE_NONE;

    $this->assertTrue($node->field_vf_test[$langcode][0]['vtest_value'] == ($node->nid * 2), 'Found field on node.');
    $this->drupalGet('node/' . $node->nid);

    $this->assertText('vtest:' . (($node->nid * 2) + 1), 'Field is properly displayed.');

    // Create another node type.
    $node_type2 = $this->drupalCreateContentType();
    $manage_page = 'admin/structure/types/manage/' . $node_type2->name . '/fields';
    $this->drupalGet($manage_page);

    $this->assertTrue($this->xpath('//select[@id=:id]//option[@value="field_vf_test" and text()=:label]', array(':id' => 'edit-fields-add-existing-field-field-name', ':label' => 'Virtual test field: field_vf_test (Test field)')), 'Existing virtual field can be selected.');

    // Add our virtual field to this content type too.
    $edit = array(
      'fields[_add_existing_field][label]' => 'Test field reused',
      'fields[_add_existing_field][field_name]' => 'field_vf_test',
      'fields[_add_existing_field][widget_type]' => 'hidden',
    );
    $this->drupalPost($manage_page, $edit, t('Save'));

    // Check if we can see the display settings.
    $display_page = 'admin/structure/types/manage/' . $node_type2->name . '/display';
    $this->drupalGet($display_page);

    $this->assertField('fields[field_vf_test][type]', 'Found display settings for the virtual field.');

    $this->assertFalse($this->xpath('//select[@id=:id]//option[@value="field_vf_test" and text()=:label]', array(':id' => 'edit-fields-add-existing-field-field-name', ':label' => 'Virtual test field: field_vf_test (Test field)')), 'Existing virtual field already on the content type cannot be added.');

    $this->drupalGet('node/add/' . $node_type2->name);
    $edit = array(
      'title' => 'test 2',
      'body[und][0][value]' => 'test 2',
      'body[und][0][format]' => 'plain_text',
    );
    $this->drupalPost('node/add/' . $node_type2->name, $edit, t('Save'));

    $node = node_load(2);
    // See above.
    $langcode = LANGUAGE_NONE;

    $this->assertTrue($node->field_vf_test[$langcode][0]['vtest_value'] == ($node->nid * 2), 'Found field on node.');
    $this->drupalGet('node/' . $node->nid);

    $this->assertText('vtest:' . (($node->nid * 2) + 1), 'Field is properly displayed.');

  }
}

/**
 * Tests the automatic adding of widget
 */
class VirtualFieldWidgetTestCase extends DrupalWebTestCase {

  /**
   * Info for the testing module.
   */
  public static function getInfo() {
    return array(
      'name' => 'Virtual Field hidden widget',
      'description' => 'Tests automatic setting of hidden widget.',
      'group' => 'Virtual Field',
    );
  }

  /**
   * Setup before testing.
   */
  public function setUp() {
    parent::setUp('virtual_field', 'virtual_field_test_widget', 'field_ui');
  }

  /**
   * Basic tests.
   *
   * Create a virtual field, attach it to a node type, see if it displays
   * properly, add it to another node type, and check if it looks OK.
   */
  public function testWidgetSetup() {
    // Pretty simple test, really.
    $widget_info = field_info_widget_types('hidden');
    $this->assertTrue(in_array('wtest', $widget_info['field types']), 'Widget supports the field type.');
  }
}
