<?php

/**
 * @file
 * Test module for Virtual Field.
 *
 * Need another test module without a hook_widget_info_alter().
 */

/**
 * Implements hook_field_info().
 *
 * Tell field and virtual field about our field.
 */
function virtual_field_test_widget_field_info() {
  return array(
    'wtest' => array(
      'label' => t('Virtual widget test field'),
      'description' => t('Virtual field for testing, automatic widget.'),
      'default_widget' => 'hidden',
      'default_formatter' => 'wtest_default',
      'virtual_field' => array(
        'entity_types' => array('node'),
        'add_widget' => TRUE,
      ),
    ),
  );
}

/**
 * Implements hook_field_load().
 *
 * Without this the field never gets a value.
 */
function virtual_field_test_widget_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age) {
  foreach ($entities as $id => $entity) {
    $items[$id][0] = array(
      // Some random value (that we can check for later).
      'wtest_value' => $id * 2,
    );
  }
}

/**
 * Implements hook_field_formatter_info().
 *
 * We need a formatter for our field.
 */
function virtual_field_test_widget_field_formatter_info() {
  return array(
    'wtest_default' => array(
      'label' => t('Default virtual field'),
      'field types' => array('wtest'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 * Render the field.
 */
function virtual_field_test_widget_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      // Another, different, random value.
      '#markup' => 'wtest:' . ($item['wtest_value'] + 1),
    );
  }

  return $element;
}
