<?php

/**
 * @file
 * Build dynamic query for developer.
 */

/**
 * Implements hook_help().
 */
function querybuilder_help($path, $arg) {
  switch ($path) {
    case 'admin/help#querybuilder':
      $output  = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('QueryBuilder is a module which build the dynamic query for developer especially which are new in drupal. This module helps the drupal developer for building dyamic query by follow drupal syntax. This will reduce the amount of time at the time of building query.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function querybuilder_menu() {
  $items = array();
  $items['admin/config/querybuilder'] = array(
    'title' => 'Query Builder',
    'description' => 'Build dynamic queries for developer.',
    'position' => 'right',
    'weight' => 0,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
  );
  // Dynamic queries.
  $items['admin/config/querybuilder/dynamic'] = array(
    'title' => 'Dyamic queries',
    'description' => 'Dynamic query for dynamic.',
    'weight' => 0,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
  );
  // Insert statement.
  $items['admin/config/querybuilder/dynamic/insert'] = array(
    'title' => 'Insert Statement',
    'description' => 'Insert query for developer.',
    'weight' => 0,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_insert'),
    'access arguments' => array('access insert query page'),
    'file' => 'includes/querybuilder_insert.inc',
  );
  // Update statement.
  $items['admin/config/querybuilder/dynamic/update'] = array(
    'title' => 'Update Statement',
    'description' => 'Update query for developer.',
    'weight' => 1,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_update'),
    'access arguments' => array('access upadate query page'),
    'file' => 'includes/querybuilder_update.inc',
  );
  // Merge statement.
  $items['admin/config/querybuilder/dynamic/merge'] = array(
    'title' => 'Insert/Update Statement',
    'description' => 'Merge query for developer.',
    'weight' => 2,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_merge'),
    'access arguments' => array('access merge query page'),
    'file' => 'includes/querybuilder_merge.inc',
  );
  // Delete statement.
  $items['admin/config/querybuilder/dynamic/delete'] = array(
    'title' => 'Delete Statement',
    'description' => 'Delete query for developer.',
    'weight' => 3,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_delete'),
    'access arguments' => array('access delete query page'),
    'file' => 'includes/querybuilder_delete.inc',
  );
  // Truncate statement.
  $items['admin/config/querybuilder/dynamic/truncate'] = array(
    'title' => 'Truncate Statement',
    'description' => 'Truncate query for developer.',
    'weight' => 4,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_truncate'),
    'access arguments' => array('access truncate query page'),
    'file' => 'includes/querybuilder_truncate.inc',
  );
  // Select statement.
  $items['admin/config/querybuilder/dynamic/select'] = array(
    'title' => 'Select Statement',
    'description' => 'Select query for developer.',
    'weight' => 5,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_select'),
    'access arguments' => array('access select query page'),
    'file' => 'includes/querybuilder_select.inc',
  );
  // Drop statement.
  $items['admin/config/querybuilder/dynamic/drop'] = array(
    'title' => 'Drop Statement',
    'description' => 'Drop query for developer.',
    'weight' => 6,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_drop'),
    'access arguments' => array('access drop query page'),
    'file' => 'includes/querybuilder_drop.inc',
  );
  // Optimise database.
  $items['admin/config/querybuilder/database'] = array(
    'title' => 'Optimise Database',
    'description' => 'Optimise all tables of the database.',
    'weight' => 6,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('querybuilder_optimise'),
    'access arguments' => array('access optimise database page'),
    'file' => 'querybuilder_optimise.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function querybuilder_permission() {
  // Set permission for query builder.
  return array(
    'administer site configuration' => array(
      'title' => t('Administer site configuration'),
      'description' => t('Administer site configuration.'),
      'restrict access' => TRUE,
    ),
    'access insert query page' => array(
      'title' => t('Access insert query page'),
      'description' => t('Access insert query page for building dynamic query.'),
      'restrict access' => TRUE,
    ),
    'access upadate query page' => array(
      'title' => t('Access upadate query page'),
      'description' => t('Access update query page for building dynamic query.'),
      'restrict access' => TRUE,
    ),
    'access merge query page' => array(
      'title' => t('Access merge query page'),
      'description' => t('Access insert/update query page for building dynamic query.'),
      'restrict access' => TRUE,
    ),
    'access delete query page' => array(
      'title' => t('Access delete query page'),
      'description' => t('Access delete query page.'),
      'restrict access' => TRUE,
    ),
    'access truncate query page' => array(
      'title' => t('Access truncate query page'),
      'description' => t('Access truncate query page.'),
      'restrict access' => TRUE,
    ),
    'access select query page' => array(
      'title' => t('Access select query page'),
      'description' => t('Access select query page for building dynamic query.'),
      'restrict access' => TRUE,
    ),
    'access drop query page' => array(
      'title' => t('Access drop query page'),
      'description' => t('Access drop query page.'),
      'restrict access' => TRUE,
    ),
    'access optimise database page' => array(
      'title' => t('Access optimise database page'),
      'description' => t('Access optimise database page.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_cron().
 */
function querybuilder_cron() {
  $clear_cache = variable_get('querybuilder_clear_cache_by_cron', FALSE);
  if (!empty($clear_cache)) {
    drupal_flush_all_caches();
    drupal_set_message(t('Cache cleared.'));
  }
}
