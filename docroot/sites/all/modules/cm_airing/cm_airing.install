<?php

/**
 * Implements hook_uninstall().
 */
function cm_airing_uninstall() {
  
  field_delete_instance('field_airing_title');
  field_delete_instance('field_airing_channel');
  field_delete_instance('field_airing_date');
  field_delete_instance('field_airing_duration');
  
  field_delete_field('field_airing_title');
  field_delete_field('field_airing_channel');
  field_delete_field('field_airing_date');
  field_delete_field('field_airing_duration');
  
  // Loop over any field instances attached to the airing
  // entity type and delete them individually.
  // http://api.drupal.org/api/function/field_delete_field/7
  $instances = field_info_instances('airing', 'airing');
  
  //why isn't this working?
  //dsm($instances);
  
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Remove all cm_airing variables.
  $variables = db_query("SELECT name FROM {variable} WHERE name LIKE 'cm_airing_%'");
  foreach ($variables as $variable) {
    variable_del($variable->name);
  }
  
  $entities = db_query("SELECT airing_id FROM {cm_airing}")->fetchAll();
    
  // Delete all the airings at once
  if (count($entities)) {
    entity_delete_multiple('airing', $entities);
  }
}

/**
 * Implements hook_install().
 */
function cm_airing_install() {
  cm_airing_add_airing_title_field();
  cm_airing_add_channel_taxonomy();
  cm_airing_add_airing_date_field();
  cm_airing_add_airing_duration_field();
}

/**
 * Creates channel taxonomy if it doesn't exist
 */
function cm_airing_add_channel_taxonomy() {
  
  // CHANNEL
  
  //check for existing channel vocabulary
  $vocabularies = taxonomy_get_vocabularies();
  foreach($vocabularies as $vocab) {
    if($vocab->machine_name == 'channel') {
      variable_set('cm_airing_channel_vid', $vocab->vid);
    }
  }
    
  // Create the channel vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('cm_airing_channel_vid', 0));
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Channel'),
      'machine_name' => 'channel',
      'description' => t(''),
      'hierarchy' => 1,
      'module' => 'cm_airing',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('cm_airing_channel_vid', $vocabulary->vid);
    
  }

  // Create the 'field_airing_channel' field if it doesn't already exist.
  if (!field_info_field('field_airing_channel')) {
    $field = array(
      'field_name' => 'field_airing_channel',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0,
          ),
        ),
      ),
    );
    field_create_field($field);
   
    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_airing_channel',
      'entity_type' => 'airing',
      'label' => $vocabulary->name,
      'bundle' => 'airing',
      'required' => TRUE,
      'widget' => array(
        'type' => 'options_select',
      ),
      'display' => array(
        'default' => array(
          'type' => 'taxonomy_term_reference_link',
         'weight' => 10,
        ),
        'teaser' => array(
          'type' => 'taxonomy_term_reference_link',
         'weight' => 10,
        ),
      ),
    );
    field_create_instance($instance);

  }  
}  

/**
 * Creates airing_date field if it doesn't exist
 */
function cm_airing_add_airing_date_field() {
  
  $long_date_format = variable_get('date_format_long', 'm/d/Y - H:i:sa');
  
  // Create the 'field_airing_date' field if it doesn't already exist.
  if (!field_info_field('field_airing_date')) {
    $field = array(
      'field_name' => 'field_airing_date',
      'type' => 'datetime',
      'locked' => '1',
      'widget' => array(
        'weight' => '-1',
        'type' => 'date_popup',
        'module' => 'date',
        'description' => '',
        'settings' => array(
          'input_format' => $long_date_format,
          'year_range' => '-1:+1',
          'label_position' => 'above',
          'increment' => '1',
        ),
      ),
      'settings' => array(
        'granularity' => array(
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'month' => 'month',
          'second' => 'second',
          'year' => 'year',
        ),
        'timezone_db' => 'UTC',
        'todate' => 'required',
        'tz_handling' => 'site',
      ),
    );
    
    field_create_field($field);
   
    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_airing_date',
      'entity_type' => 'airing',
      'label' => t('Date'),
      'bundle' => 'airing',
      'required' => TRUE,
      'settings' => array(
        'default_value' => 'blank',
        'default_value2' => 'same',
      ),
      'widget' => array(
        'type' => 'date_popup',
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'date',
          'settings' => array(
            'format_type' => 'long',
            'fromto' => 'both',   
          ),
          'type' => 'date_default',
          'weight' => 6,
        ),
      ),
    );
    field_create_instance($instance);
  } 
}

/**
 * Creates airing_date field if it doesn't exist
 */
function cm_airing_add_airing_title_field() {
  
  // Create the 'field_airing_title' field if it doesn't already exist.
  if (!field_info_field('field_airing_title')) {
    $field = array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_airing_title',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => '1',
      'module' => 'text',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'text',
    );

     
    field_create_field($field);
    
    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_airing_title',
      'entity_type' => 'airing',
      'label' => t('Title'),
      'bundle' => 'airing',
      'required' => TRUE,
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => '-3',
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 1,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
    );
    field_create_instance($instance);
  } 
}

/**
 * Creates airing_duration field if it doesn't exist
 */
function cm_airing_add_airing_duration_field() {
  
  //Changes structure to use Features export
  $fields['airing-airing-field_airing_duration'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_airing_duration',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'hms_field',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'hms_field',
    ),
    'field_instance' => array(
      'bundle' => 'airing',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'hms_field',
          'settings' => array(
            'format' => 'h:mm',
            'leading_zero' => TRUE,
          ),
          'type' => 'hms_default_formatter',
          'weight' => 16,
        ),
      ),
      'entity_type' => 'airing',
      'field_name' => 'field_airing_duration',
      'label' => 'Duration',
      'required' => 0,
      'settings' => array(
        'format' => 'h:mm:ss',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 0,
        'module' => 'hms_field',
        'settings' => array(),
        'type' => 'hms_default_widget',
        'weight' => '16',
      ),
    ),
  );
       
 field_create_field($fields['airing-airing-field_airing_duration']['field_config']);
 field_create_instance($fields['airing-airing-field_airing_duration']['field_instance']);
  
}

/**
 * Implements hook_schema().
 */
function cm_airing_schema() {
  $schema = array();

  $schema['cm_airing'] = array(
    'description' => 'The base table for airings.',
    'fields' => array(
      'airing_id' => array(
        'description' => 'The primary identifier for the airing.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this airing.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the airing was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the airing was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'description' => array(
        'description' => 'airing description.',
        'type' => 'text',
      ),
    ),
    'primary key' => array('airing_id'),
  );

  return $schema;
}
