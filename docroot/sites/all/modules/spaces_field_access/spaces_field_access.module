<?php

/**
 * Implements hook_field_info_alter().
 */
function spaces_field_access_field_info_alter(&$info) {
  foreach ($info as $field_type => $field_type_info) {
    $info[$field_type]['instance_settings'] += array(
      'spaces_field_access' =>  array(),
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function spaces_field_access_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  $form['instance']['settings']['spaces_field_access'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Spaces Access'),
    '#description' => t('Select spaces to which allow view/edit access of this field. If no items are selected, field will be available to any space.'),
    '#options' => spaces_field_access_get_spaces(),
    '#default_value' => $form['#instance']['settings']['spaces_field_access'],
  );
}

/**
 * Implements hook_field_access().
 */
function spaces_field_access_field_access($op, $field, $entity_type, $entity, $account) {
  // Entity isn't always supplied, but the context of an entity is required
  // for instance level access settings.
  if (isset($entity)) {
    // Need the bundle key to find the bundle name.
    $entity_info = entity_get_info($entity_type);
    if ($bundle_key = $entity_info['entity keys']['bundle']) {
      $bundle_name = $entity->$bundle_key;
    }
    else {
      $bundle_name = $entity_type;
    }
    $field_instance = field_info_instance($entity_type, $field['field_name'], $bundle_name);
    if (!empty($field_instance['settings']['spaces_field_access'])) {
      $space = spaces_get_space();
      $spaces = $field_instance['settings']['spaces_field_access'];
      $spaces = array_intersect_key($spaces, spaces_field_access_get_spaces());

      $values = array_unique(array_values($spaces));
      $empty_values = empty($values) || $values == array(0);
      if (!empty($space) && !$empty_values) {
        switch ($space->type) {
          case 'og':
            $gid = $space->og->gid;
            if (empty($spaces['og:' . $gid])) {
              return FALSE;
            }
            break;
          //TODO: implement this for other space types
        }
      }
    }
  }
}

/**
 * Get available spaces.
 */
function spaces_field_access_get_spaces() {
  $spaces = array();
  $types = spaces_types();
  foreach ($types as $type) {
    switch ($type['plugin']) {
      case 'space_og':
        $gids = og_get_all_group();
        foreach ($gids as $gid) {
          $group = og_load($gid);
          $spaces['og' . ':' . $group->gid] = 'OG: ' . $group->label;
        }
        break;
      //TODO: imlement this for other space types
    }
  }

  return $spaces;
}