<?php

/**
 * Implements hook_theme().
 */
function browser_details_theme($existing, $type, $theme, $path) {
    return array(
        'browser_details_plugin' => array(
            'variables' => array(
                'plugin' => NULL,
            ),
        ),
    );
}

/**
 * Implements hook_menu().
 */
function browser_details_menu() {
}

/**
 * Implements hook_block_info().
 */
function browser_details_block_info() {
    $blocks = array();

    $plugins = browser_details_load();
    foreach ($plugins as $name => $plugin) {
        $blocks[$name] = array(
            'info' => t('Browser Details: ' . $plugin['title']),
            'cache' => DRUPAL_NO_CACHE,
        );
    }

    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function browser_details_block_view($delta) {
    $plugin = browser_details_load($delta);

    if (isset($plugin['js'])) {
        $js = $plugin['js'];

        if (is_array($js)) {
            foreach ($js as $file)
                drupal_add_js($file);
        } else {
            drupal_add_js($js);
        }
    }

    return array('subject' => $plugin['title'], 'content' => theme('browser_details_plugin', array('plugin' => $plugin)));
}

function theme_browser_details_plugin(&$vars) {
    $plugin = $vars['plugin'];
    $content = browser_details_get_plugin_attrib('content', $plugin);
    $icon = browser_details_get_plugin_attrib('icon', $plugin);
    $icon = (!empty($icon)) ? theme('image', array('path' => $icon)) : '';

    drupal_add_css(drupal_get_path('module', 'browser_details') . '/css/browser_details.css');

    return '<div id="bd-' . $plugin['name'] . '" class="bd-plugin"><div class="icon">' . $icon . '</div><div class="content">' . $content . '</div></div>';
}

function browser_details_get_plugin_attrib($attrib, $plugin) {
    if (isset($plugin[$attrib])) {
        if (function_exists($plugin[$attrib])) {
            $callback = $plugin[$attrib];
            $content = $callback();
        } else {
            $content = $plugin[$attrib];
        }
    } else {
        $content = '';
    }

    return $content;
}

function browser_details_load($plugin = '') {
    $plugins = browser_details_cache_get('browser_details_plugins');
    if (!empty($plugin))
        return (isset($plugins[$plugin])) ? $plugins[$plugin] : null;
    else
        return $plugins;
}

function browser_details_cache_get($cache_name, $callback = '') {
    $data = &drupal_static($cache_name);

    if (!isset($data)) {
        if ($cache = cache_get($cache_name)) {
            $data = $cache->data;
        }
        else {
            if (!isset($callback) || !function_exists($callback)) {
                $callback = "browser_details_cache_get_{$cache_name}";
                if (!function_exists($callback))
                    $data = null;
            } else {
                $data = null;
            }

            $data = $callback();
            cache_set($cache_name, $data, 'cache');
        }
    }

    return $data;
}

function browser_details_cache_get_browser_details_plugins() {
    return module_invoke_all('browser_details_plugin');
}
