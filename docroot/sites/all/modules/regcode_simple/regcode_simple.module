<?php

/**
 * @file
 * Registration code (simple) module.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Edit user account settings form; add Registration code setting field.
 */
function regcode_simple_form_user_admin_settings_alter(&$form, &$form_state, $form_id) {
  $form['registration_cancellation']['regcode_simple'] = array(
    '#type' => 'textfield',
    '#title' => t('Registration code'),
    '#description' => t('When you add a value here user registration without this code is not possible.') .
    ' ' . t('If you leave this empty Registration code field will not be added to the form.'),
    '#maxlength' => 128,
    '#size' => 10,
    '#default_value' => variable_get('regcode_simple', ''),
    '#weight' => -10,
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Edit user registration form; add Registration code -field IF it is set.
 */
function regcode_simple_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  // If registration code is set add field to User registration form.
  if (variable_get('regcode_simple', FALSE)) {
    $form['regcode_simple'] = array(
      '#type' => 'textfield',
      '#title' => t('Registration code'),
      '#description' => t('Use the provided code to register to this site.'),
      '#required' => TRUE,
    );
    // Add also validation handler.
    $form['#validate'][] = 'regcode_simple_form_user_register_form_validate';
  }
}

/**
 * Validation handler for user_register_form.
 */
function regcode_simple_form_user_register_form_validate($form, &$form_state) {

  $provided_key = $form_state['values']['regcode_simple'];
  $regcode_key = variable_get('regcode_simple', '');

  if ($provided_key != $regcode_key) {
    form_set_error('regcode_simple', t('Registration code is not valid.'));
  }
}
