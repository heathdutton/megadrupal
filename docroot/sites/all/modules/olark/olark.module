<?php
// $Id:

/**
 * @file
 *   Integrates Olark Chat in a Drupal site.
 */

/**
 * Implements hook_menu().
 */
function olark_menu() {
  $items = array();

  $items['admin/config/services/olark'] = array(
    'title' => 'Olark settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('olark_settings'),
    'access arguments' => array('administer site configuration')
  );

  return $items;
}

/**
 * Implements hook_footer().
 */
function olark_page_alter(&$page) {
  // Note that the 'olark_enable' variable can be (un)set in
  // the $conf array in settings.php, or by another module to enable/disable
  // however, there is not a user interface for this variable.
  if (variable_get('olark_enable', 1)) {
    if (!variable_get('olark_context', 0)) {
      olark_add_js();
      $page['page_bottom']['tns']['#markup'] = variable_get('olark_code', '');
    }
    else {
      if ($plugin = context_get_plugin('reaction', 'olark_add')) {
        if ($plugin->execute()) {
          olark_add_js();
          $page['page_bottom']['tns']['#markup'] = variable_get('olark_code', '');
        }
      }
    }
  }
}

/**
 * Implements hook_context_registry().
 */
function olark_context_registry() {
  return array(
    'reactions' => array(
      'olark_add' => array(
        'title' => t('Olark'),
        'plugin' => 'olark_context_reaction_add',
        'description' => t('Add Olark chat code to the page'),
      ),
    ),
  );
}

/**
 * Notify CTools that we'll be using the plugin API with Context module.
 */
function olark_ctools_plugin_api($module, $api) {
  if ($module == 'context' && $api == 'plugins') {
    return array('version' => 3);
  }
}

/**
 * CTools plugin API hook for Context.
 */
function olark_context_plugins() {
  $plugins = array();
  $plugins['olark_context_reaction_add'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'olark') . '/plugins',
      'file' => 'olark_context_reaction_add.inc',
      'class' => 'olark_context_reaction_add',
      'parent' => 'context_reaction',
    ),
  );

  return $plugins;
}

/**
 * Settings form.
 */
function olark_settings($form, &$form_state) {
  $form = array();
  $form['olark_code'] = array(
    '#type' => 'textarea',
    '#title' => t('Olark code'),
    '#description' => t('Paste the Javascript code block from <a href="http://olark.com/install">Olark.com</a>'),
    '#default_value' => variable_get('olark_code', ''),
  );
  $form['olark_ios'] = array(
    '#type' => 'checkbox',
    '#title' => t('Disable in iOS devices'),
    '#description' => t('Hides it on iPhone, iPad and iPod since it has issues in this plataforms.'),
    '#default_value' => variable_get('olark_ios', ''),
  );
  if (module_exists('context')) {
    $form['olark_context'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use Context to choose when Olark is added to the page.'),
      '#description' => t('The Olark code will be included on all pages of your site by default. You can use <a href="!context_url">Context module</a> to fine tune when and where it will be displayed.', array('!context_url' => url('admin/structure/context'))),
      '#default_value' => variable_get('olark_context', 0),
    );
  }
  return system_settings_form($form);
}

/**
 * Builds and inserts the correct Olark Javascript into the page.
 */
function olark_add_js() {
  static $added;
  if (!isset($added)) {
    global $user;

    $path = drupal_get_path('module', 'olark');
    drupal_add_js($path . '/olark.js');

    $setting = array('olark' => array());

    // If the user is logged in, let's get some pertinent information and
    // pass it along as well.
    if ($user->uid) {
      $setting['olark']['uid'] = $user->uid;
      $setting['olark']['name'] = $user->name;
      //$setting['olark']['mail'] = t('email !mail', array('!mail' => $user->mail));
      $setting['olark']['mail'] = $user->mail;
      $setting['olark']['roles'] = t('roles !roles', array('!roles' => implode(', ', $user->roles)));
      $setting['olark']['userpage'] = url('user/' . $user->uid, array('absolute' => TRUE));
      $setting['olark']['loggedinas'] = t('logged in as !link', array('!link' => l($user->name, 'user/' . $user->uid, array('absolute' => TRUE))));
    }

    $setting['olark']['disable_ios'] = variable_get('olark_ios', '');
    $setting['olark']['enabled'] = variable_get('olark_enable', 1);
    drupal_add_js($setting, array('type' => 'setting', 'scope' => JS_DEFAULT));

    $added = TRUE;
  }
}
