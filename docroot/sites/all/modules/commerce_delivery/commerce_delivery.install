<?php

/**
 * @file
 * Commerce delivery install
 */

/**
 * Implements hook_schema().
 */
function commerce_delivery_schema() {
  $schema = array();
  $schema['commerce_delivery'] = array(
    'description' => 'The base table for deliveries.',
    'fields' => array(
      'delivery_id' => array(
        'description' => 'The primary identifier for a delivery.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'description' => 'The order id.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The module defined delivery type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'The {commerce_delivery_status}.name of this delivery.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the order was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the order was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('delivery_id'),
    'foreign keys' => array(
      'order_id' => array(
        'table' => 'commerce_order',
        'columns' => array('order_id' => 'order_id', ),
      ),
    ),
  );
  return $schema;
}

/**
 * Implements hook_field_schema().
 */
function commerce_delivery_field_schema($field) {
  return array(
    'columns' => array(
      'delivery_ref' => array(
        'description' => 'Delivery ID.',
        'type' => 'int',
      ),
    ),
    'indexes' => array(
      'delivery_ref' => array('delivery_ref'),
    ),
    'foreign keys' => array(
      'delivery_id' => array(
        'table' => 'commerce_delivery',
        'columns' => array('delivery_ref' => 'delivery_id'),
      ),
    ),
  );
}

/**
 * Implements hook_install().
 */
function commerce_delivery_install() {
  if (!field_info_field('delivery_ref')) {
    $field = array(
      'field_name' => 'delivery_ref',
      'type' => 'number_integer',
      'settings' => array(
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'delivery_ref',
      'entity_type' => 'commerce_line_item',
      'label' => 'Delivery id',
      'default_value_function' => 'commerce_delivery_ref_default_value',
      'bundle' => 'product',
      'widget' => array(
        'type' => 'options_buttons',
      ),
    );
    field_create_instance($instance);
  }

  variable_set('commerce_delivery_status_options', '0|new
1|pending
2|delivered
3|on hold
4|cancelled');
  variable_set('commerce_delivery_default_status', 0);
  variable_set('commerce_delivery_active_status', array(0, 1));
}


/**
 * Implements hook_uninstall().
 */
function commerce_delivery_uninstall() {
  field_delete_field('delivery_ref');
  variable_del('commerce_delivery_status_options');
  variable_del('commerce_delivery_default_status');
  variable_del('commerce_delivery_active_status');
  variable_del('commerce_delivery_help_text');
  variable_del('commerce_delivery_shippable_field');
}

