<?php

/**
 * Implements hook_schema().
 */
function role_vocabulary_schema() {
  $schema['role_vocabulary'] = array(
    'description' => 'Maps roles to taxonomy terms.',
    'fields' => array(
      'rid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: {role}.rid for role.',
      ),
      'tid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: {term_data}.tid for taxonomy term.',
      ),
    ),
    'primary key' => array('rid'),
    'indexes' => array(
      'tid' => array('tid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function role_vocabulary_install() {
  // Check if "Roles" vocabulary exists.
  if ($vocabulary = db_query("SELECT vid, machine_name FROM {taxonomy_vocabulary} WHERE name = 'Roles'")->fetchAssoc()) {
    drupal_set_message(t('Roles will be synced as terms in your existing <a href="!vocab">Roles</a> vocabulary. You need to <a href="!sync">perform an initial sync</a>.', array(
      '!vocab' => url('admin/structure/taxonomy/' . $vocabulary['machine_name']),
      '!sync' => url('admin/structure/taxonomy/role_vocabulary/sync'),
    )));
    variable_set('role_vocabulary', $vocabulary['vid']);
  }

  // If not, create it.
  else {
    $vocabulary = (object) array(
      'name' => 'Roles',
      'module' => 'role_vocabulary',
      'machine_name' => 'roles',
      'description' => 'Terms corresponding to user roles.'
    );
    taxonomy_vocabulary_save($vocabulary);
    drupal_set_message(t('Roles will be synced as terms in the new <a href="!url">Roles</a> vocabulary. You need to <a href="!sync">perform an initial sync</a>.', array(
      '!url' => url('admin/structure/taxonomy/' . $vocabulary->machine_name),
      '!sync' => url('admin/structure/taxonomy/role_vocabulary/sync'),
    )));
    variable_set('role_vocabulary', $vocabulary->vid);
  }
}

/**
 * Implements hook_uninstall().
 */
function role_vocabulary_uninstall() {
  variable_del('role_vocabulary');
}
