<?php

/**
 * @file
 * Bean Tax installation routines
 */

/**
 * Update Vocabulary settings to use machine_name instead of vid.
 */
function bean_tax_update_7001() {
  $bean_tax_types = array('bean_tax_related', 'bean_tax_listing');
  foreach ($bean_tax_types as $bean_type) {
    $query = new EntityFieldQuery();
    $result = $query->entityCondition('entity_type', 'bean')->propertyCondition('type', $bean_type)->execute();
    if (!empty($result['bean'])) {
      $beans = bean_load_multiple(array_keys($result['bean']));
      foreach ($beans as $bean) {
        $values = array();
        foreach ($bean->filters['vocabulary'] as $vid) {
          $vocabulary = entity_load_single('taxonomy_vocabulary', $vid);
          $values[$vocabulary->machine_name] = $vocabulary->machine_name;
        }
        $bean->data['filters']['vocabulary'] = $values;
        $bean->save();
      }
    }
  }
  return t('Bean Tax Beans Updated');
}

/**
 * Update Bean Tax Blocks with cache_duration settings.
 */
function bean_tax_update_7002() {
  $bean_tax_types = array('bean_tax_related', 'bean_tax_listing');
  foreach ($bean_tax_types as $bean_type) {
    $query = new EntityFieldQuery();
    $result = $query->entityCondition('entity_type', 'bean')
      ->propertyCondition('type', $bean_type)
      ->execute();
    if (!empty($result['bean'])) {
      $bids = array_keys($result['bean']);
      $beans = entity_load('bean', $bids);
      foreach ($beans as $bean) {
        $bean->data['settings']['cache_duration'] = 5;
        if ($bean->save()) {
          watchdog('bean_tax', 'Bean "' . $bean->title . '" updated with cache_duration set.');
        }
      }
    }
  }
}

/**
 * Update TaxRelatedBean cache_auth_user and cache_anon_user settings.
 */
function bean_tax_update_7003() {
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'bean')
    ->propertyCondition('type', 'bean_tax_related')
    ->execute();
  if (!empty($result['bean'])) {
    $bids = array_keys($result['bean']);
    $beans = entity_load('bean', $bids);
    foreach ($beans as $bean) {
      $bean->data['settings']['cache_auth_user'] = 1;
      $bean->data['settings']['cache_anon_user'] = 1;
      if ($bean->save()) {
        watchdog('bean_tax', 'Bean "' . $bean->title . '" updated user cache settings.');
      }
    }
  }
}

