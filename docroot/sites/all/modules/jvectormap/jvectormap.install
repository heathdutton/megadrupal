<?php
/**
 * @file
 * Install, update and uninstall functions for the jVectorMap module.
 */

/**
 * Implements hook_requirements().
 *
 * Checks the version of jVectorMap on install and
 * issues an error if there is a problem.
 */
function jvectormap_requirements($phase) {
  $requirements = array();

  // Ensure translations do not break at install time.
  $t = get_t();

  if ($phase == 'runtime') {
    // Default requirement title.
    $title = $t('jVectorMap');

    $library = libraries_detect('jvectormap');

    // Success!  We found the library.
    if ($library['installed']) {
      $requirements['jvectormap']['title'] = $title;
      $requirements['jvectormap']['value'] = $library['version'];
      $requirements['jvectormap']['description'] = $t('Installed version');
      $requirements['jvectormap']['severity'] = REQUIREMENT_OK;
    }
    // Not installed or unsupported version installed.
    else {
      $supported_versions = array_keys($library['versions']);
      $error = $library['error message'] . ' '
          . $t('Please download a supported version (%versions) from %url.',
              array(
                '%versions' => implode(' or ', $supported_versions),
                '%url' => $library['download url'],
              ));
      $requirements['jvectormap']['title'] = $title;
      $requirements['jvectormap']['value'] = isset($library['version']) ? $library['version'] : '';
      $requirements['jvectormap']['description'] = $error;
      $requirements['jvectormap']['severity'] = REQUIREMENT_ERROR;
    }
  }

  return $requirements;
}
