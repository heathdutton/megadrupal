<?php
/**
 * @file
 * Implements jVectorMap in Drupal.
 */

/**
 * Implements hook_theme().
 */
function jvectormap_theme() {
  return array(
    'jvectormap' => array(
      'variables' => array(
        'map_path' => NULL,
        'attributes' => array(),
      ),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function jvectormap_libraries_info() {
  $libraries['jvectormap'] = array(
    'name' => 'jVectorMap',
    'vendor url' => 'http://jvectormap.com/',
    'download url' => 'http://jvectormap.com/download/',
    'version arguments' => array(
      'file' => 'jquery.jvectormap.min.js',
      'pattern' => '@jVectorMap version ([0-9\.]+)@',
      'lines' => 2,
      'cols' => 30,
    ),
    'versions' => array(
      '1.2.2' => array(
        'files' => array(
          'js' => array('jquery.jvectormap.min.js'),
          'css' => array('jquery.jvectormap.css'),
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Theme implementation for jvectormap.
 *
 * @param array $variables
 *   Variables for theming.
 *
 * @return string
 *   Themed html for rendering a jvectormap.
 */
function theme_jvectormap($variables) {
  $attributes = $variables['attributes'];
  $map_path = isset($variables['map_path']) ? $variables['map_path'] : NULL;
  $default_map_path = libraries_get_path('jvectormap') . '/jquery-jvectormap-world-mill-en.js';

  static $auto_identifier = 0;

  if (empty($attributes['id'])) {
    $attributes['id'] = 'jvectormap-auto-identifier-' . $auto_identifier;
    ++$auto_identifier;
  }

  if (empty($attributes['style'])) {
    $attributes['style'] = "width:600px;height:400px";
  }

  $output = array(
    'jvectormap' => array(
      '#type' => 'container',
      '#attributes' => $attributes,
    ),
  );

  libraries_load('jvectormap');

  if (!empty($map_path)) {
    drupal_add_js($map_path);
  }
  elseif (is_readable($default_map_path)) {
    drupal_add_js($default_map_path);
  }

  return drupal_render($output);
}
