<?php

/**
 * @file
 * Restricts access to a site using cookies
 */

/**
 * Implements hook_permission().
 */
function cookielock_permission() {
  return array(
    'administer cookie lock' => array(
      'title' => t('Administer Cookie Lock settings'),
      'description' => t('Allow the user to administer Cookie Lock settings'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function cookielock_menu() {
  $items = array();

  $items['admin/config/development/cookielock'] = array(
    'title' => 'Cookie Lock settings',
    'description' => 'Configuration for the Cookie Lock module',
    'page callback' => 'cookielock_settings_page',
    'access arguments' => array('administer cookie lock'),
    'file' => 'cookielock.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['cookielock'] = array(
    'title' => 'Credentials Required',
    'page callback' => 'cookielock_main_page',
    'access callback' => TRUE,
    'file' => 'cookielock.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function cookielock_theme() {
 return array(
    'cookielock_page' => array(
      'template' => 'cookielock-page',
      'variables' => array(
        'content' => NULL,
      ),
      'file' => 'cookielock.theme.inc',
      'path' => drupal_get_path('module', 'cookielock') . '/theme',
    ),
  );
}

/**
 * Implements hook_init().
 */
function cookielock_init() {
  // Don't lock out Drush or cron access
  if (php_sapi_name() == 'cli' || $_SERVER['SCRIPT_NAME'] == '/cron.php') {
    return;
  }

  if (module_exists('cookielock')) {
    $path = current_path();
    if (cookielock_authenticated()) {
      if ($path == 'cookielock') {
        drupal_goto('<front>');
      }
      return;
    }
    else {
      if ($path != 'cookielock') {
        drupal_goto('cookielock', array('query' => drupal_get_destination()));
      }
    }
  }
}

/**
 * Returns TRUE if user has correct authentication cookies
 *
 * @return bool
 *   TRUE if user is authenticated, FALSE if not
 */
function cookielock_authenticated() {
  if (variable_get('cookielock_islocked', 0) == 0) {
    return TRUE;
  }

  $unrestricted_ips = variable_get('cookielock_unrestricted_ips', '');
  if (!empty($unrestricted_ips)) {
    $ip_address = ip_address();
    if (!empty($ip_address)) {
      if (strpos($unrestricted_ips, $ip_address) !== FALSE) {
        return TRUE;
      }
    }
  }

  $cookie_username = filter_input(INPUT_COOKIE, 'Drupal_visitor_cookielock_username');
  $cookie_password = filter_input(INPUT_COOKIE, 'Drupal_visitor_cookielock_password');
  $stored_user = variable_get('cookielock_username', 'S0m3th!NGaUSERwillNEVERENTER!?(*#');
  $stored_pass = variable_get('cookielock_password', 'md5willnevergeneratethisstring');

  if (empty($stored_user) || empty($stored_pass)) {
    // We don't have a necessary value, so we cannot authenticate. Allow access.
    return TRUE;
  }

  // If the cookie username and cookie password match the current username and password, they're allowed access
  if (!empty($cookie_username) && !empty($cookie_password)) {
    if ($cookie_username == $stored_user && $cookie_password == $stored_pass) {
      return TRUE;
    }
  }

  return FALSE;
}