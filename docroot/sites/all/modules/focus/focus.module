<?php
/**
 * @file
 * Simple module that sets focus on the first field in a form.
 */

/**
 * Default forms, can be overriden at admin/settings/focus.
 */
define('FOCUS_FORMS',
  // Add feed category.
  "aggregator_form_category\n" .
  // Add feed.
  "aggregator_form_feed\n" .
  // Add node.
  "!content_type!_node_form\n" .
  // Add block.
  "block_add_block_form\n" .
  // Add/edit input format.
  "filter_admin_format_form\n" .
  // Add/edit forum container.
  "forum_form_container\n" .
  // Add/edit forum.
  "forum_form_forum\n" .
  // Search translated strings.
  "locale_translate_seek_form\n" .
  // Add/edit menu.
  "menu_edit_menu\n" .
  // Add/edit menu item.
  "menu_edit_item\n" .
  // Add/edit content type.
  "node_type_form\n" .
  // Add/edit URL alias.
  "path_admin_form\n" .
  // Add/edit profile field.
  "profile_field_form\n" .
  // Search page.
  "search_form\n" .
  // Add/edit vocabulary.
  "taxonomy_form_vocabulary\n" .
  // Add/edit term.
  "taxonomy_form_term\n" .
  // Add role.
  "user_admin_new_role\n" .
  // Edit role.
  "user_admin_role\n" .
  // Login page (treated as special case below).
  "user_login\n" .
  // Request new password.
  "user_pass\n" .
  // Add user (register).
  "user_register\n" .
  // Exposed filter.
  "views_exposed_form\n" .
  // Add view.
  "views_ui_add_form\n"
);


/**
 * Implements hook_menu().
 */
function focus_menu() {
  $items['admin/config/user-interface/focus'] = array(
    'title' => 'Form field focus',
    'description' => 'Set the input fields.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('focus_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Settings form.
 */
function focus_admin_settings() {
  $form['focus_forms'] = array(
    '#type' => 'textarea',
    '#title' => t('Forms'),
    '#default_value' => variable_get('focus_forms', FOCUS_FORMS),
    '#rows' => 20,
    '#description' => t('Enter one form_id per line. !content_type! can be used as a wildcard for all content types. The form_id of a form can be found by looking at the HTML source. Look for &lt;input type="hidden" name="form_id" value="search_form"  /&gt;. The value is the form_id, in this example "search_form".'),
  );
  return system_settings_form($form);
}


/**
 * Implements hook_form_alter().
 *
 * Add javascript (jQuery) to set focus on the first field in the defined forms.
 */
function focus_form_alter(&$form, &$form_state, $form_id) {

  static $add_js = TRUE;

  // Get defined forms.
  $focus_forms = variable_get('focus_forms', FOCUS_FORMS);
  // Replace !content_type! with the current node type.
  if (isset($form['type']['#value'])) {
    $focus_forms = strtr($focus_forms, array("!content_type!" => $form['type']['#value']));
  }

  $focus_forms = preg_split("/[\s,]+/", $focus_forms);

  if ($add_js && in_array($form_id, $focus_forms)) {
    // Treat the user login form as a special case (otherwise
    // OpenID, if enabled,  will break it).
    if ($form_id == 'user_login') {
      $selector = '#edit-name';
    }
    // All other forms.
    else {
      $selector = '#' . $form['#id'] . ' :input:visible:enabled:first';
    }
    $jquery_snippet = 'jQuery(document).ready(function(){var i = jQuery("' . $selector . '");if (i.val() == "") {i[0].focus();}});';
    drupal_add_js($jquery_snippet, 'inline');

    // Don't add javascrip for another form.
    $add_js = FALSE;
  }
}
