<?php

/**
 * @file
 * Ajax Regions module.
 */

/**
 * Register array of regions for loading.
 */
function ajax_regions_loader_register($reg = FALSE) {
  static $register = FALSE;
  if ($reg) {
    $register = $reg;
  }
  return $register;
}

/**
 * Implements hook_help().
 */
function ajax_regions_help($path, $arg) {
  if ($path == 'admin/help#ajax_regions') {
    $output = '<p>' . t('This module allows to configure flexibly the internal links of your site, which will update the appointed regions using Ajax, instead of full page refresh.') . '</p>';
    $output .= '<p>' . t('All the options are collected on one page of module configuration.') . '</p>';
    $output .= '<p><b>* ' . t('Please note that anyone granted the permission "Administer Ajax Regions configuration page" can post inject arbitrary JavaScript (including XSS exploits). There is no way of blocking XSS exploits (inserted via the admin GUI) without crippling the module.') . '</b></p>';
    return $output;
  }
}

/**
 * Implements hook_permission().
 */
function ajax_regions_permission() {
  return array(
    'administer ajax_regions' => array(
      'title' => t('Administer Ajax Regions configuration page'),
    ),
  );
}

/**
 * Implements hook_module_implements_alter().
 */
function ajax_regions_module_implements_alter(&$implementations, $hook) {
  if (isset($implementations['ajax_regions'])) {
    $group = array('ajax_regions' => $implementations['ajax_regions']);
    unset($implementations['ajax_regions']);
    $implementations = $group + $implementations;
  }
}

/**
 * Add js and css for module.
 */
function ajax_regions_page_build() {
  if (isset($_POST['ajax_regions'])) {
    // Just regions.
    $rl = $_POST['ajax_regions'];
    ajax_regions_loader_register($rl);
  }
  else {
    // Full page.
    drupal_add_library('system', 'drupal.ajax');
    drupal_add_js(drupal_get_path('module', 'ajax_regions') . '/js/ajax_regions.js', array('weight' => 98));

    $options = array();
    $options['array'] = variable_get('ajax_regions_array', array());
    $options['site_name'] = variable_get('site_name');

    drupal_add_js(array('ajax_regions' => $options), 'setting');
    $before = variable_get('ajax_regions_before_loading');
    if ($before != '') {
      drupal_add_js($before, array('type' => 'inline', 'weight' => 99));
    }

    $after = variable_get('ajax_regions_after_loading');
    if ($after != '') {
      drupal_add_js($after, array('type' => 'inline', 'weight' => 100));
    }
  }
}

/**
 * Implements hook_page_alter().
 */
function ajax_regions_page_alter($page) {
  $rl = ajax_regions_loader_register();
  if ($rl) {
    $commands = array();
    $data = array();
    foreach ($rl as $key => $val) {
      $data[] = array(
        'id' => 'region',
        'selector' => $val,
        'html' => render($page[$key]),
      );
    }

    $settings = array();
    $settings['id'] = 'settings';
    if (arg(0) == 'node' && is_numeric(arg(1))) {
      $settings['node_id'] = arg(1);
    }
    else {
      $settings['node_id'] = 0;
    }
    $settings['node_title'] = drupal_get_title();
    $data[] = $settings;

    // Views settings for new ajax-content.
    global $_ajax_regions_ajaxviews;
    if (isset($_ajax_regions_ajaxviews)) {
      $data[] = array(
        'id' => 'views',
        'views' => array(
          'ajax_path' => url('views/ajax'),
          'ajaxViews' => $_ajax_regions_ajaxviews,
        ),
      );
    }

    $commands[] = array(
      'command' => 'ajax_regions',
      'data' => $data,
    );

    print ajax_render($commands);
    drupal_exit();
  }
}

/**
 * Implements hook_menu().
 */
function ajax_regions_menu() {
  $items = array();

  // Sleeping page.
  $items['ajax_regions/sleep/%'] = array(
    'title' => 'Sleeping page',
    'page callback' => 'ajax_regions_sleep',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  // Module settings menu.
  $items['admin/config/system/ajax_regions'] = array(
    'title' => 'Ajax Regions',
    'description' => 'Ajax Regions behaviour configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ajax_regions_admin'),
    'access arguments' => array('administer ajax_regions'),
    'file' => 'ajax_regions.admin.inc',
  );

  return $items;
}

/**
 * Ajax-Sleep.
 *
 * @sec
 *   Loading time (seconds)
 */
function ajax_regions_sleep($sec_sleep) {
  if ($sec_sleep > 10) {
    $sec_sleep = 10;
  }
  sleep($sec_sleep);
}

/**
 * Integration with views preprocess.
 */
function ajax_regions_preprocess_views_view(&$vars) {
  global $_ajax_regions_ajaxviews;
  if (!isset($_ajax_regions_ajaxviews)) {
    $_ajax_regions_ajaxviews = array();
  }

  $view = $vars['view'];

  // If using AJAX, send identifying data about this view.
  if ($view->use_ajax && empty($view->is_attachment) && empty($view->live_preview)) {
    $_ajax_regions_ajaxviews['views_dom_id:' . $vars['dom_id']] = array(
      'view_name' => $view->name,
      'view_display_id' => $view->current_display,
      'view_path' => check_plain($_GET['q']),
      'view_base_path' => $view->get_path(),
      'view_dom_id' => $vars['dom_id'],
      'pager_element' => isset($view->query->pager) ? $view->query->pager->get_pager_id() : 0,
    );
  }
}

/**
 * Implements hook_theme().
 */
function ajax_regions_theme() {
  return array(
    'ajax_regions_strings' => array(
      'render element' => 'form',
      'file' => 'ajax_regions.admin.inc',
    ),
  );
}
