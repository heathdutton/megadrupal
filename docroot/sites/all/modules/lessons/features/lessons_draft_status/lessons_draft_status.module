<?php
/**
 * @file
 */

include_once('lessons_draft_status.theme.inc');

/**
 * Implements hook_comment_presave().
 *
 * Update lesson draft status when commenter proposes a status update.
 * Note: It would be nice to replace this with a Rules-based feature component
 * in the future.
 */
function lessons_draft_status_comment_presave($comment) {
  if ($comment->node_type == 'comment_node_lesson'
  && property_exists($comment, 'field_update_lesson_status') // Confirm field_update_lesson_status hasn't been removed.
  && !empty($comment->field_update_lesson_status['und'])) {  // Check for status update.
    $node = node_load($comment->nid);
    $node->field_lesson_draft_status = $comment->field_update_lesson_status;
    $node->field_lesson_last_peer_review['und'][0]['value'] = $comment->changed;
    node_save($node);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Alter lesson_node_form. Don't expose 'Last peer review' field for user input.
 * This field is updated programatically when comments are used to review drafts.
 */
function lessons_draft_status_form_lesson_node_form_alter(&$form, &$form_state, $form_id) {
  $form['field_lesson_last_peer_review']['#access'] = FALSE;
}

/**
 * Implements hook_block_info().
 */
function lessons_draft_status_block_info() {
  $blocks = array();
  $blocks['lessons_draft_status_colors']['info'] = t('Lessons Draft Status Colors');
  //$blocks['lessons_draft_status_statistics']['info'] = t('Lessons Draft Stats');
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function lessons_draft_status_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'lessons_draft_status_colors':
      // Note: If this module is overridden with user-defined draft status
      // values saved via the GUI, those will be surfaced here. But if a user
      // generates allowed values with their own function 
      // ($field_info['settings']['allowed_values_function']) those values, and the
      // corresponding CSS classes are not currently exposed here.
      $field_info = field_info_field('field_lesson_draft_status');
      $field_allowed_values = $field_info['settings']['allowed_values'];
      $statuses = array();
      foreach ($field_allowed_values as $key => $value) {
        $machine_name = _lessons_draft_status_machine_name($key);
        $statuses[$machine_name] = $value;
      }
      $block['subject'] = t('Lesson Status');
      $block['content'] = array(
        '#theme' => 'lessons_draft_status_colors',
        '#lessons_draft_statuses' => $statuses,
      );
      break;

    /*
    case 'lessons_draft_status_statistics':
      $block['subject'] = t('Lessons Draft Stats';
      $block['content'] = '@todo';
      break;
    // */
  }
  return $block;
}

/**
 * Convert strings to all lowercase and dashes in place of spaces.
 *   e.g. This Example -> this-example
 * 
 * @param $name
 *  String.
 *
 * @return
 *  String.
 */
function _lessons_draft_status_machine_name($name) {
  return strtolower(preg_replace('/[^a-zA-Z0-9-]+/', '-', $name));
}

