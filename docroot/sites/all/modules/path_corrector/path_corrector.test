<?php


/**
 * Tests the functionality of the Path Corrector module.
 */
class PathCorrectorTestCase extends DrupalWebTestCase {
  protected $privileged_user;

  public static function getInfo() {
    return array(
      'name' => 'Path Corrector Basic Test',
      'description' => 'Ensure that Path Corrector functions properly.',
      'group' => 'Path Corrector',
    );
  }

  public function setUp() {
    // Enable any modules required for the test.
    parent::setUp(array('path_corrector', 'node', 'filter'));

    // Create and log in our privileged user.
    $this->privileged_user = $this->drupalCreateUser(array(
      'administer filters',
      'bypass node access',
    ));
    $this->drupalLogin($this->privileged_user);
  }


  public function testPathCorrector() {
    // Add a text format specifying an example Path Corrector setup.
    $format = new stdClass();
    $format->format = 'custom_pc_format';
    $format->name = 'Custom PC format';
    $format->filters = array(
      'path_corrector' => array(
        'status' => 1,
        'settings' => array(
          'tags' => drupal_map_assoc(array('a', 'img')),
          'string_replacements' => implode("\n", array(
            'example.com|example.org',
            'example.org|example.net'
          )),
        ),
      ),
    );
    filter_format_save($format);

    // Ensure this format is assigned to our user's role...
    $permission = filter_permission_name($format);
    user_role_change_permissions(key($this->privileged_user->roles), array($permission => 1));

    // Now create a node with some content using this format.
    $langcode = LANGUAGE_NONE;
    $title_key = "title";
    $body_value_key = "body[$langcode][0][value]";
    $body_format_key = "body[$langcode][0][format]";

    $edit['title'] = $this->randomName(8);
    $edit[$body_value_key] = 'This is some <a href="http://example.com" title="Test Link">Test</a> Content. <img src="http://www.example.org/test.png" alt="Test PNG" />';
    $edit[$body_format_key] = $format->format;
    $this->drupalPost('node/add/page', $edit, t('Save'));
    $node = $this->drupalGetNodeByTitle($edit['title']);

    // Load this node and assert that the output must be in the expected/altered form.
    $this->drupalGet('node/' . $node->nid);
    $this->assertRaw('This is some <a href="http://example.net" title="Test Link">Test</a> Content. <img src="http://www.example.net/test.png" alt="Test PNG" />', 'Markup is formatted correctly');
  }
}