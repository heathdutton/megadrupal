<?php

/**
 * Define default value for tocify context setting.
 */
define('TOCIFY_CONTEXT', '.node');

/**
 * Define default value for tocify selectors setting.
 */
define('TOCIFY_SELECTORS', 'h2, h3, h4, h5, h6');

/**
 * Implements hook_library().
 */
function tocify_library() {
  $libraries = array();
  $libraries['tocify'] = array(
    'title' => 'Tocify',
    'website' => 'http://gregfranko.com/jquery.tocify.js/',
    'version' => '1.9.0',
    'js' => array(
      drupal_get_path('module', 'tocify') . '/jquery.tocify.js' => array(),
      drupal_get_path('module', 'tocify') . '/tocify.js' => array(),
    ),
    'css' => array(
      drupal_get_path('module', 'tocify') . '/jquery.tocify.css' => array(),
    ),
    'dependencies' => array(
      array('system', 'jquery'),
      array('system', 'ui.widget'),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_block_info().
 */
function tocify_block_info() {
  $blocks = array();
  $blocks['tocify'] = array(
    'info' => t('Tocify'),
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function tocify_block_configure($delta = '') {
  $form = array();
  switch ($delta) {
    case 'tocify':
      $form['context'] = array(
        '#type' => 'textfield',
        '#title' => t('Context'),
        '#default_value' => variable_get('tocify_context', TOCIFY_CONTEXT),
        '#description' => t('Any valid jQuery selector'),
      );
      $form['selectors'] = array(
        '#type' => 'textfield',
        '#title' => t('Selectors'),
        '#default_value' => variable_get('tocify_selectors', TOCIFY_SELECTORS),
        '#description' => t('Each comma separated selector must be a header element.'),
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function tocify_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'tocify':
      variable_set('tocify_context', $edit['context']);
      variable_set('tocify_selectors', $edit['selectors']);
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function tocify_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'tocify':
      $block['subject'] = '';
      $block['content'] = _tocify_block();
      break;
  }

  return $block;
}

/**
 * Implementation of _tocify_block().
 */
function _tocify_block() {
  return array(
    '#type' => 'markup',
    '#markup' => '<div id="tocify"></div>',
    '#attached' => array(
      'library' => array(
        array('tocify', 'tocify'),
      ),
      'js' => array(array(
        'data' => array(
          'tocify' => array(
            'context' => variable_get('tocify_context', TOCIFY_CONTEXT),
            'selectors' => variable_get('tocify_selectors', TOCIFY_SELECTORS),
          ),
        ),
        'type' => 'setting',
      )),
    ),
  );
}
