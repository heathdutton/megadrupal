<?php
/**
 * @file
 * Add a simple currency converter to your site.
 */

/**
 * Implements hook_menu().
 */
function simple_currency_converter_menu() {
  $items['admin/config/regional/simplecurrencyconverter'] = array(
    'title' => 'Simple Currency Converter',
    'description' => 'Configure Simple Currency Converter',
    'access callback' => 'user_access',
    'access arguments' => array('simplecurrencyconverter administer'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simple_currency_converter_admin_form'),
    'file' => 'includes/simple_currency_converter.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/regional/simplecurrencyconverter/config'] = array(
    'title' => 'Simple Currency Converter Configuration',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  // Currency Converter AJAX.
  $items['simple_currency_converter_set_currency/%'] = array(
    // 'title' => 'Simple currency conversion',
    'page arguments' => array(1, 2),
    'page callback' => 'simple_currency_converter_set_currency',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function simple_currency_converter_permission() {
  return array(
    'simplecurrencyconverter administer' => array(
      'title' => t('Simple Currency Converter'),
      'description' => t('Administer Simple Currency Converter.'),
    ),
  );
}

/**
 * Implements hook_preprocess().
 */
function simple_currency_converter_preprocess(&$variables, $hook) {
  if ($hook == 'html') {
    module_load_include('inc', 'simple_currency_converter', 'includes/simple_currency_converter.currency');

    drupal_add_library('system', 'ui.dialog');
    $data = array(
      'modal_id' => variable_get('scc_modal_window_id', 'scc_modal_window_id'),
      'disclaimer' => variable_get('scc_disclaimer_text'),
    );

    $variables['page']['page_bottom']['simple_currency_converter'] = array(
      '#markup' => theme('simple_currency_converter_configurator', $data),
    );

    $path = drupal_get_path('module', 'simple_currency_converter');
    $path .= '/js/simple_currency_converter.js';
    drupal_add_js($path, 'file');

    $settings = simple_currency_converter_settings();
    drupal_alter('simple_currency_converter_settings', $settings);

    drupal_add_js(
      array(
        'simple_currency_converter' => $settings,
      ),
      'setting'
    );
  }
}

/**
 * Simple currency converter module settings.
 */
function simple_currency_converter_settings() {
  return array(
    'scc_modal_window_trigger' => variable_get('scc_modal_window_trigger',
      '.scc_modal_window_trigger'),
    'scc_modal_window_id' => variable_get('scc_modal_window_id',
      'scc_modal_window_id'),
    'scc_element_to_convert' => variable_get('scc_element_to_convert',
      '.scc_price'),
    'scc_country_info' => simple_currency_converter_supply_country_info(),
    'scc_modal_window_title' => variable_get('scc_modal_window_title',
      'Select your currency'),
    'scc_default_conversion_currency' => variable_get('scc_default_conversion_currency',
      'none'),
    'scc_user_cookie_expiration' => variable_get('scc_user_cookie_expiration',
      14),
  );
}

/**
 * Implements hook_theme().
 */
function simple_currency_converter_theme($existing, $type, $theme, $path) {
  return array(
    'simple_currency_converter_configurator' => array(
      'template'  => 'simple-currency-converter-configurator',
      'variables' => array(
        'modal_id' => NULL,
        'disclaimer' => NULL,
      ),
      'path' => drupal_get_path('module', 'simple_currency_converter') . '/templates',
    ),
  );
}

/**
 * Reset the cookies to the new currency.
 *
 * @param string $from_currency
 *   Define the currency to convert from.
 * @param string $to_currency
 *   Define the currency to convert to.
 */
function simple_currency_converter_set_currency($from_currency, $to_currency) {
  $conversion_ratio = 1;

  if ($from_currency != $to_currency) {
    $conversion_ratio = simple_currency_converter_currency($from_currency,
      $to_currency, $amount = 1);
  }

  if (!$conversion_ratio) {
    drupal_not_found();
  }

  $cookie_name = 'scc_ratio_from_' . $to_currency . '_to_' . $from_currency;
  $expire = variable_get('scc_currency_rate_cookie_expiration');

  setcookie($cookie_name, $conversion_ratio, time() + $expire, "/");

  $data = array(
    'ratio' => $conversion_ratio,
    'name' => $cookie_name,
    'to_currency' => $from_currency,
  );

  drupal_json_output($data);
  drupal_exit();
}

/**
 * Get the currency rate.
 *
 * @param string $from_currency
 *   The currency to convert from.
 * @param string $to_currency
 *   The currency to convert to.
 * @param int $amount
 *   The amount to convert.
 *
 * @return float|null
 *   The converted amount
 */
function simple_currency_converter_currency($from_currency, $to_currency, $amount) {
  $feed = simple_currency_converter_request_feed('primary', $from_currency, $to_currency, $amount);

  if (!$feed) {
    $feed = simple_currency_converter_request_feed('secondary', $from_currency, $to_currency, $amount);
    if (module_exists('notifier_scc')) {
      notifier_scc_notify(compact('from_currency', 'to_currency', 'feed'));
    }
  }

  if ($feed) {
    return round($feed, 5);
  }

  return NULL;
}

/**
 * Get the currency feed.
 */
function simple_currency_converter_request_feed($type, $from_currency, $to_currency, $amount) {
  $feed = NULL;
  switch ($type) {
    case 'primary':
      $feed = variable_get('scc_feed_primary', '');
      break;

    case 'secondary':
      $feed = variable_get('scc_feed_secondary', '');
      break;
  }

  $function = $feed . '_simple_currency_converter_request_feed';
  if ($feed && function_exists($function)) {
    $feed = $function($from_currency, $to_currency, $amount);
    return $feed;
  }

  return NULL;
}
