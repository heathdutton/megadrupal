<?php

/**
 * @file
 * Extends the simple currency converter module.
 */

/**
 * Implements hook_simple_currency_converter_feed().
 */
function ecb_scc_simple_currency_converter_feed($feeds) {
  $feeds['ecb_scc'] = 'European Central Bank';
  return $feeds;
}

/**
 * Calculate the conversion rate.
 */
function ecb_scc_simple_currency_converter_request_feed($from_currency, $to_currency, $amount) {

  $url = 'http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml';

  $xml = drupal_http_request($url);

  if (!isset($xml->error) && isset($xml->data) && !empty($xml->data)) {
    $data = ecb_scc_update_parse_xml($xml->data);
  }
  else {
    return NULL;
  }

  if (!isset($data[$from_currency]) || !isset($data[$to_currency])) {
    return NULL;
  }

  $from = $data[$from_currency]['rate'];
  $to   = $data[$to_currency]['rate'];

  $amount = ($to / $from) * $amount;

  return $amount;
}

/**
 * Parse the xml.
 */
function ecb_scc_update_parse_xml($raw_xml) {
  try {
    $xml = new SimpleXMLElement($raw_xml);
  }
  catch (Exception $e) {
    return FALSE;
  }

  $data = array();
  foreach ($xml->Cube->Cube->Cube as $rate) {
    $code = (string) $rate['currency'];
    $rate = (string) $rate['rate'];

    $data[$code] = array(
      'code' => $code,
      'rate' => $rate,
    );

  }

  return $data;
}

/**
 * Available currency.
 */
function ecb_scc_return_codes() {
  return array(
    'USD',
    'JPY',
    'BGN',
    'CZK',
    'DKK',
    'GBP',
    'HUF',
    'LTL',
    'PLN',
    'RON',
    'SEK',
    'CHF',
    'NOK',
    'HRK',
    'RUB',
    'TRY',
    'AUD',
    'BRL',
    'CAD',
    'CNY',
    'HKD',
    'IDR',
    'ILS',
    'INR',
    'KRW',
    'MXN',
    'MYR',
    'NZD',
    'PHP',
    'SGD',
    'THB',
    'ZAR',
  );
}
