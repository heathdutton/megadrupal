<?php

/**
 * @file
 * Adds a handler for Vidyard videos to Video Embed Field.
 */

/**
 * Implements hook_video_embed_handler_info().
 */
function video_embed_vidyard_video_embed_handler_info() {
  $handlers = array();

  // Vidyard issues sub-domains for users, so they need to be dynamic.
  $domains = explode(',', variable_get('video_embed_vidyard_domains', ''));

  $handlers['vidyard'] = array(
    'title' => 'Vidyard Video',
    'function' => 'video_embed_vidyard_handle_video',
    'thumbnail_default' => drupal_get_path('module', 'video_embed_vidyard') . '/img/vidyard.jpg',
    'form' => 'video_embed_vidyard_display_settings_form',
    'form_validate' => 'video_embed_field_handler_vidyard_form_validate',
    'domains' => $domains,
    'defaults' => array(
      'width' => 640,
      'height' => 360,
    ),
  );

  return $handlers;
}



/**
 * Implements hook_menu().
 */
function video_embed_vidyard_menu() {
  $items['admin/config/media/vef/video_embed_vidyard'] = array(
    'title' => t('Vidyard Domains'),
    'description' => t('Configure which Vidyard subdomains to allow.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('video_embed_vidyard_admin_page'),
    'access arguments' => array('administer video styles'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function video_embed_vidyard_admin_page() {
  $form = array();
  $form['video_embed_vidyard_domains'] = array(
    '#type' => 'textfield',
    '#title' => t('Vidyard Domains'),
    '#description' => t('Comma separted list of vidyard subdomains to support. This will be your sub-domain(s) from Vidyard e.g. embed.vidaryd.com,secure.vidyard.com'),
    '#default_value' => variable_get('video_embed_vidyard_domains', array()),
  );

  return system_settings_form($form);
}

/**
 * Defines the form elements for the Vidyard videos configuration form.
 *
 * @param array $defaults
 *   The form default values.
 *
 * @return array
 *   The provider settings form array.
 */
function video_embed_vidyard_display_settings_form($defaults) {
  $form = array();

  $form['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Width'),
    '#description' => t('The width of the player.'),
    '#default_value' => $defaults['width'],
  );

  $form['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Height'),
    '#description' => t('The height of the player.'),
    '#default_value' => $defaults['height'],
  );

  $form['autoplay'] = array(
    '#type' => 'checkbox',
    '#title' => t('Autoplay'),
    '#description' => t('Should the video start automatically on page load?'),
    '#default_value' => $defaults['autoplay'],
  );

  $form['allow_fullscreen'] = array(
    '#type' => 'checkbox',
    '#title' => t('Allow Fullscreen'),
    '#description' => t('Allow the video to go fullscreen.'),
    '#default_value' => $defaults['allow_fullscreen'],
  );

  return $form;
}

/**
 * Validates the form elements for the Vidyard video configuration form.
 *
 * @param array $element
 *   The form element to validate.
 * @param array $form_state
 *   The form to validate state.
 * @param array $form
 *   The form to validate structure.
 */
function video_embed_field_handler_vidyard_form_validate($element, &$form_state, $form) {
  video_embed_field_validate_dimensions($element);
}

/**
 * Handler for Vidyard videos.
 *
 * @param string $url
 *   The video URL.
 * @param array $settings
 *   The settings array.
 *
 * @return string|bool
 *   The video iframe, or FALSE in case the ID can't be retrieved from the URL.
 */
function video_embed_vidyard_handle_video($url, $settings) {
  $id = _video_embed_vidyard_get_video_id($url);

  if ($id) {
    $width = (int)$settings['width'];
    $height = (int)$settings['height'];
    $autoplay = (int)$settings['autoplay'];
    $allow_fullscreen = ((int)$settings['allow_fullscreen']) ? 'allowfullscreen' : NULL;

    $embed = "<iframe class='vidyard_iframe' src='//play.vidyard.com/@id.html?v=3.1.1&autoplay=$autoplay' width='$width' height='$height' scrolling='no' frameborder='0' allowtransparency='true' $allow_fullscreen></iframe>";
    $embed = format_string($embed, array(
      '@id' => check_plain($id),
    ));

    $video = array(
      '#markup' => $embed,
    );

    return $video;
  }

  return FALSE;
}

/**
 * Helper function to get the Vidyard video's id.
 *
 * @param string $url
 *   The video URL.
 *
 * @return string|bool
 *   The video ID, or FALSE in case the ID can't be retrieved from the URL.
 */
function _video_embed_vidyard_get_video_id($url) {
  $url_path = parse_url($url);
  preg_match('/https?:\/\/([a-zA-Z0-9])*\.vidyard.com\/share\/(?<id>[\-a-zA-Z0-9]*)/', $url, $matches);
  return isset($matches['id']) ? $matches['id'] : FALSE;
}
