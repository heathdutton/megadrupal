<?php

/**
 * @file
 * MessageBird install file.
 */

/**
 * Implements hook_requirements().
 */
function messagebird_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time:
  $t = get_t();

  // Report Drupal version:
  if (in_array($phase, array('runtime', 'update'))) {
    $library = libraries_detect('messagebird');

    // Check if the library has been installed correctly.
    if ($library['installed']) {
      $requirements['messagebird_library'] = array(
        'title' => $t('MessageBird'),
        'value' => $library['version'],
        'description' => $t('The MessageBird API library is installed correctly.'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['messagebird_library'] = array(
        'title' => $t('MessageBird'),
        'value' => $library['error'],
        'description' => $library['error message'],
        'severity' => REQUIREMENT_ERROR,
      );
    }

    // Check the MessageBird account balance.
    if ($library['installed'] && $balance = messagebird_get_balance()) {
      if ($balance->payment == 'prepaid') {
        $requirements['messagebird_balance'] = array(
          'title' => $t('MessageBird balance'),
          'value' => check_plain($balance->amount . ' ' . $balance->type),
          'description' => $t('The MessageBird account balance.'),
        );

        $credit_balance_warning = variable_get('messagebird_credit_balance_warning', '');
        if (!empty($credit_balance_warning)) {
          if ($balance->amount == 0) {
            $requirements['messagebird_balance']['severity'] = REQUIREMENT_ERROR;
          }
          elseif ($balance->amount < $credit_balance_warning) {
            $requirements['messagebird_balance']['severity'] = REQUIREMENT_WARNING;
          }
        }
        else {
          $requirements['messagebird_balance']['severity'] = REQUIREMENT_OK;
        }
      }
    }
  }

  return $requirements;
}
