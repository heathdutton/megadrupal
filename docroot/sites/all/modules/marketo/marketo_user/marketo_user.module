<?php

/**
 * Implements hook_menu()
 */
function marketo_user_menu() {
  $items = array();
  $items['admin/config/services/marketo-user'] = array(
    'title' => t('marketo user'),
    'description' => t('marketo user Settings page.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('marketo_user_settings_form'),
    'access arguments' => array('administer marketo user'),
    'file' => 'marketo_user.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  

  return $items;
}

/**
 * Implements hook_permission().
 */
function marketo_user_permission() {
  $perms = array(
    'administer marketo user' => array(
      'title' => t('Administer Marketo User Module'),
      'description' => t('Administer the Marketo/User integration and SOAP API.'),
    ),
  );
  return $perms;
}


/**
 * Implements hook_webform_submission_insert().
 *
 * Remember the tagged fields so they can be submitted to Marketo.
 */

function marketo_user_user_insert(&$edit, $account, $category) {

	$key = $account->mail;
	
	$data = 

	array(
	
		'FirstName' => $account->field_first_name['und'][0]['value'], 
		'LastName' => $account->field_last_name['und'][0]['value'],
		'Campaign_IdNum__c' => variable_get('marketo_user_sf_campaign_id','70150000000KEUL'),
		'Initial_Contact__c' => variable_get('marketo_user_sf_initial_contact', 'IAHC Registration Form'),
		'Latest_form__c' => variable_get('marketo_user_sf_latest_form', 'IAHC Registration Form'),
		'LeadSource' => variable_get('marketo_user_sf_leadsource', 'unknown'),
		
		
		);

	marketo_user_soap($key, $data);
	watchdog("marketo", "Drupal user data: " . print_r($account, TRUE));	
	
}

function marketo_user_webform_submission_insert($node, $submission) {
  // Loop through all components looking for those which are tagged for submission to marketo.
  $key = FALSE;
  $data = array();
  foreach ($node->webform['components'] as $delta => $component) {
    $name = trim($component['form_key']);
    if (!empty($name)) {
      if (!empty($component['extra']['marketo']['marketo_key'])) {
        $key = trim(reset($submission->data[$delta]['value']));
      }
      elseif (!empty($component['extra']['marketo']['marketo_submit'])) {
        $data[$name] = implode(marketo_user_DELIMITER, $submission->data[$delta]['value']);
      }
    }
  }
  if ($key) {
    $context = compact('key', 'node', 'submission');
    drupal_alter('marketo_user_data', $data, $context);
    if (variable_get('marketo_user_soap', TRUE)) {
      marketo_user_soap($key, $data);
    }
    elseif (module_exists('marketo_munchkin')) {
      $_SESSION['marketo-munchkin-submit'] = 'webform';
      $_SESSION['marketo-munchkin-data-user_email'] = $key;
      $_SESSION['marketo-user-data'] = $data;
    }
  }
}

function marketo_user_soap($key, $data) {
  module_load_include('inc', 'marketo_user', '../includes/marketo.soap');
  //$default = array(
  //  'oid' => variable_get('webform_marketoiin_salesforce_oid', '00D500000007Sev'),
  //);
  //$data += $default;

  // There should always be a lead source.
  //if (!array_key_exists('LeadSource', $output_data) || empty($output_data['LeadSource'])) $output_data['LeadSource'] = 'Unknown';
  //$output_data['mkto2__Original_Source_Info__pc'] = $_SERVER["SERVER_NAME"] . $_SERVER['REQUEST_URI'];
  //$output_data['Initial_IP_Address__c'] = $_SERVER['REMOTE_ADDR'];

  $accessKey = variable_get('marketo_user_soap_access_key', '');
  $secretKey = variable_get('marketo_user_soap_secret_key', '');
  $soapEndPoint = variable_get('marketo_user_soap_endpoint', 'https://na-k.marketo.com/soap/mktows/1_6');
  $client = new mktSampleMktowsClient($accessKey, $secretKey, $soapEndPoint);
  watchdog("marketo", "Marketo client status: " . print_r($client, TRUE));
  watchdog("marketo", "Data sent to marketo: Email: " . $key . ", Data: " . print_r($data, TRUE));
  $result = $client->syncLead($key, $data);
  watchdog("marketo", "Data recieved from marketo: " . print_r($result, TRUE));
  return $result;
} 