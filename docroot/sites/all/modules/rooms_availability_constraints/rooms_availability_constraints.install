<?php

/**
 * @file
 * Install for Rooms Availability module - sets up the main Rooms Availability
 * table.
 */

/**
 * Implements hook_field_schema().
 */
function rooms_availability_constraints_field_schema($field) {
  if ($field['type'] == 'rooms_availability_constraints_range') {
    return array(
      'columns' => array(
        'start_date' => array(
          'type' => 'varchar',
          'length' => 10,
          'not null' => TRUE,
        ),
        'end_date' => array(
          'type' => 'varchar',
          'length' => 10,
          'not null' => TRUE,
        ),
        'always' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 1,
        ),
        'constraint_type' => array(
          'type' => 'varchar',
          'length' => 20,
          'not null' => TRUE,
        ),
        'start_day' => array(
          'type' => 'int',
          'not null' => FALSE,
        ),
        'minimum_stay' => array(
          'type' => 'int',
          'not null' => FALSE,
        ),
        'maximum_stay' => array(
          'type' => 'int',
          'not null' => FALSE,
        ),
      ),
      'indexes' => array(
        'range' => array(
          'start_date',
          'end_date',
          'minimum_stay',
          'maximum_stay'),
        'range_day' => array(
          'start_date',
          'end_date',
          'minimum_stay',
          'maximum_stay',
          'start_day'),
      ),
    );
  }
}

/**
 * Implements hook_install().
 */
function rooms_availability_constraints_install() {
  field_info_cache_clear();
  rooms_availability_constraints_add_availability_range_field('rooms_unit_type', 'rooms_unit_type');
}

/**
 * Implements hook_uninstall().
 */
function rooms_availability_constraints_uninstall() {
  foreach (rooms_unit_get_types() as $type) {
    variable_del('rooms_availability_constraints_unit_' . $type->type);
    variable_del('rooms_availability_constraints_type_' . $type->type);
  }
  field_delete_field('rooms_constraints_range');
}
