Index: performance/performance.module
===================================================================
--- performance/performance.module	(revision 883)
+++ performance/performance.module	(revision 888)
@@ -134,7 +134,7 @@
 
   $params = array(
     'timer' => timer_read('page'),
-     'path'  => $path,
+    'path'  => $path,
   );
 
   // Memory
@@ -160,10 +160,25 @@
   $params['query_count'] = $query_count;
   $params['query_timer'] = $query_timer;
 
+  $anon = ($data['anon']) ? t('Yes') : t('No');
 
+  // Set our header for PQP's output
+  if (module_exists('pqp')) {
+    _pqp_set_header($path, $params['timer'], $anon);
+  }
+
   if (variable_get('performance_detail', 0)) {
+    if (module_exists('pqp')) {  
+      // Gather PQP data
+      $params['data'] = serialize(_pqp_get_data());
+    }
     performance_log_details($params);
   }
+  else {
+    if (module_exists('pqp')) {
+      pqp_print_live();
+    }
+  }
 
   if (variable_get('performance_summary_db', 0)) {
     performance_log_summary_db($params);
@@ -263,14 +278,15 @@
 function performance_log_details($params = array()) {
   global $user;
   $anon = ($user->uid) ? FALSE : TRUE;
-  db_query("INSERT INTO {performance_detail} (path, anon, bytes, millisecs, timestamp, query_timer, query_count) VALUES ('%s', %d, %d, %d, %d, %d, %d)",
+  db_query("INSERT INTO {performance_detail} (path, anon, bytes, millisecs, timestamp, query_timer, query_count, data) VALUES ('%s', %d, %d, %d, %d, %d, %d, '%s')",
     $params['path'],
     $anon,
     $params['mem'],
     $params['timer'],
     time(),
     $params['query_timer'],
-    $params['query_count']
+    $params['query_count'],
+    $params['data']
   );
 }
 
@@ -462,6 +478,9 @@
 function performance_cron_db_prune($timestamp = 0) {
   // Remove rows which have not been accessed since a certain timestamp
   db_query("DELETE FROM {performance_summary} WHERE last_access <= %d", $timestamp);
+
+  // Remove performance_detail rows on a daily basis
+  db_query("DELETE FROM {performance_detail} WHERE timestamp <= %d", $timestamp);
 }
 
 function performance_cron_apc_prune($timestamp = 0) {
Index: performance/performance.install
===================================================================
--- performance/performance.install	(revision 883)
+++ performance/performance.install	(revision 888)
@@ -35,6 +35,7 @@
       'query_timer' => array('type' => 'int', 'not null' => TRUE,  'default' => 0, 'disp-width' => '11'),
       'anon'        => array('type' => 'int', 'not null' => FALSE, 'default' => 1, 'disp-width' => '1'),
       'path'        => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
+      'data'        => array('type' => 'blob', 'description' => 'A collection of data to store.', 'not null' => FALSE, 'size' => 'big'),
     ),
     'primary key' => array('pid'),
     'indexes' => array(
@@ -113,3 +114,9 @@
   db_drop_field($ret, 'performance_summary', 'title');
   return $ret;
 }
+
+function performance_update_2() {
+  $ret = array();
+  db_add_field($ret, 'performance_detail', 'data', array('type' => 'blob', 'description' => 'A collection of data to store.', 'not null' => FALSE, 'size' => 'big'));
+  return $ret;
+}
