<?php

/**
 * Implements hook_permission().
 */
function tckn_kontrol_permission() {
  return array(
    'administer tckn_kontrol' => array(
      'title' => t('administer TCKN Kontrol'),
      'description' => t('Perform administrative tasks for TCKN Kontrol'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function tckn_kontrol_menu() {
  $items['admin/config/system/tckn-kontrol-settings'] = array(
    'title' => 'TCKN Kontrol Settings',
    'description' => 'Controls how TCKN Kontrol module works',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tckn_kontrol_settings_form'),
    'access arguments' => array('administer tckn_kontrol'),
  );
  return $items;
}

/**
 * TCKN Kontrol settings form.
 */
function tckn_kontrol_settings_form() {
  $form = array();
  $form['tckn_kontrol_allow_non_unique'] = array(
    '#type' => 'checkbox',
    '#title' => t('Allow non-unique TCKN'),
    '#default_value' => variable_get('tckn_kontrol_allow_non_unique', 0)
  );
  return system_settings_form($form);
}

/**
 * Implements hook_form_alter().
 */
function tckn_kontrol_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  $_user = user_load($user->uid);
  if ($form_id == 'user_register_form') {
    $form['#validate'][] = 'tckn_check';
  }
  if ($form_id == 'user_profile_form') {
    $form['#validate'][] = 'tckn_check';
    /*
    if (!empty($_user->field_tckn['und'][0]['value'])) {
      $form['field_tckn']['#disabled'] = TRUE;
    }
     */
  }
  if (strpos($form_id, '_node_form')) {
    $form['#validate'][] = 'tckn_check';
  }
}

function tckn_check($form, &$form_state) {
  $entered = $form_state['input']['field_tckn']['und'][0]['value'];
  $chopped = substr($entered, 0, 9);
  $i = 0;
  for ($x = 0; $x < strlen($chopped); $x += 2) {
    $i += $chopped[$x];
  }
  $y = 0;
  for ($x = 1; $x < strlen($chopped); $x += 2) {
    $y += $chopped[$x];
  }
  $z = 0;
  for ($x = 0; $x < strlen($chopped); $x++) {
    $z += $chopped[$x];
  }
  $tenth = (($i * 7) - $y) % 10;
  $eleventh = ($z + $tenth) % 10;
  $final = $chopped.$tenth.$eleventh;
  if (!empty($entered)) {
    if (substr($entered, 0, 1) == 0) {
      form_set_error('field_tckn', t('You can\'t start TCKN with 0.'));
    }
    if (strlen($entered) < 11) {
      form_set_error('field_tckn', t('TCKN can\'t be less than 11 characters.'));
    }
    if (variable_get('tckn_kontrol_allow_non_unique') == 0) {
      $exists = db_query('SELECT field_tckn_value FROM {field_data_field_tckn} WHERE field_tckn_value = :entered', array(':entered' => $entered))->fetchField();
      if ($exists) {
        form_set_error('field_tckn', t('Another user with the same TCKN exists'));
      }
    }
    if ($entered != $final) {
      form_set_error('field_tckn', t('Your TCKN doesn\'t validate'));
    }
  }
}
