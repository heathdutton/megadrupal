<?php
/**
 * @file
 * Install, update and uninstall functions for the Configuration Builder module.
 */

/**
 * Implements hook_schema().
 */
function config_builder_schema() {
  $schema = array();

  $schema['config_builder'] = array(
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'name',
      'identifier' => 'config_builder',
      'default hook' => 'config_builder_defaults',
      'api' => array(
        'owner' => 'config_builder',
        'api' => 'config_builder',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'access' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'serialize' => TRUE,
      ),
      'fapi' => array(
        'type' => 'blob',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('name'),
  );

  $schema['config_builder_index'] = array(
    'fields' => array(
      'config' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'id' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'default_value' => array(
        'type' => 'blob',
      ),
      'element' => array(
        'type' => 'blob',
        'serialize' => TRUE,
      ),
    ),
  );

  return $schema;
}

/**
 * Add 'access' field to 'config_builder' table, update access defaults and
 * remove 'description' field from 'config_builder_index' table.
 */
function config_builder_update_7100() {
  // Add 'access' field to 'config_builder' table.
  db_add_field('config_builder', 'access', array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''));

  // Update access defaults.
  ctools_include('export');
  foreach (ctools_export_crud_load_all('config_builder') as $config) {
    $config->access = array(
      'type' => 'user_access',
      'user_access' => 'administer site configuration',
    );
    ctools_export_crud_save('config_builder', $config);
  }

  // Remove 'description' field from 'config_builder_index' table.
  db_drop_field('config_builder_index', 'description');
}


/**
 * Add 'type' field to 'config_builder_index' table, update FAPI to use
 * non-eval() approach and add 'element' field to 'config_builder_index' table.
 */
function config_builder_update_7101() {
  // Add 'type' field to 'config_builder_index' table.
  db_add_field('config_builder_index', 'type', array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'default' => ''));

  // Update FAPI to use non-eval() approach.
  foreach (config_builder_crud_load_all(TRUE) as $config) {
    if (isset($config->fapi) && !is_array($config->fapi)) {
      ctools_include('export');

      $form = array();
      ob_start();
      eval($config->fapi);
      ob_get_clean();

      $config->fapi = $form;
      ctools_export_crud_save('config_builder', $config);
    }
  }

  // Add 'access' field to 'config_builder' table.
  db_add_field('config_builder_index', 'element', array('type' => 'blob', 'serialize' => TRUE));
}
