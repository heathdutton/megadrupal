<?php
/**
 * @file
 *   Install and related hooks for solr_index_accelerator.
 */

/**
 * Implements hook_install().
 */
function solr_index_accelerator_install() {
  // TODO The drupal_(un)install_schema functions are called automatically in D7.
  // drupal_install_schema('solr_index_accelerator')
}
/**
 * Implements hook_schema().
 */
function solr_index_accelerator_schema() {
  $types = array(
    'other' => 'solr_index_accelerator_entities',
    'node' => 'solr_index_accelerator_entities_node',
  );
  foreach ($types as $type => $table) {
    $schema[$table] = array(
      'description' => 'Cache of Solr documents ordered by timestamp.',
      'fields' => array(
        'entity_type' => array(
          'description' => 'The type of entity.',
          'type' => 'varchar',
          'length' => 32,
          'not null' => TRUE,
        ),
        'entity_id' => array(
          'description' => 'The primary identifier for an entity.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'bundle' => array(
          'description' => 'The bundle to which this entity belongs.',
          'type' => 'varchar',
          'length' => 128,
          'not null' => TRUE,
        ),
        'status' => array(
          'description' => 'Boolean indicating whether the entity should be in the index.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 1,
        ),
        'changed' => array(
          'description' => 'The Unix timestamp when an entity was changed.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'data' => array(
          'description' => 'The JSON solr document.',
          'type' => 'text',
          'size' => 'big',
          'not null' => TRUE,
        ),
      ),
      'indexes' => array(
        'bundle_changed' => array('bundle', 'changed'),
      ),
      'primary key' => array('entity_id'),
    );
  }
  return $schema;
}
