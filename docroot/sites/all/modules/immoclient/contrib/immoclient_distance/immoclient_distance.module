<?php

/**
 * Implements hook_entity_info().
 */
function immoclient_distance_entity_info() {
  
  $info = array();
  
  $info['immoclient_distance'] = array(
    'label' => t('Distance'),
    'base table' => 'immoclient_distance',
    'entity keys' => array(
      'id' => 'id',
      'label' => 'distanz_zu',
    ),
    'entity class' => 'ImmoclientdistanceEntity',
    'controller class' => 'ImmoclientDistanceEntityController',
    'plural label' => t('Distances'),
    'access callback' => 'immoclient_price_access_callback', 
    'uri callback' => 'entity_class_uri',
    'label callback' => 'immoclient_distance_label_callback',
    'admin ui' => array(
      'path' => 'admin/content/immo/else/distance',
      'controller class' => 'EntityDefaultUIController',
    ),
    'translation' => array(
        'entity_translation' => array(
          'base path' => 'admin/content/immo/else/distance/manage/%entity_object',
          'path wildcard' => '%entity_object',
        ),
      ),
    'fieldable' => TRUE, 
    'bundles' => array(
      'immoclient_distance' => array(
        'label' => t('Distance'),
        'admin' => array(
          'path' => 'admin/structure/immo/distance/manage',
        ),
      ),
    ),
    'inline entity form' => array(
        'controller' => 'ImmoclientDistanceInlineEntityFormController',
    ),
    'views controller class' => 'ImmoclientdistanceDefaultViewsController',
    'module' => 'immoclient_distance',
  );
  
  return $info;
}
/**
 * Implements hook_menu()
 */
function immoclient_distance_menu() {
  $items = array();
  
  $items['immoclient_distance/%'] = array(
    'title' => 'Distance',
    'page callback' => 'immoclient_distance_view_area',
    'page arguments' => array(1),
    'access arguments' => array('view price'),
  );
  $items['admin/structure/immo/distance'] = array(
    'title' => 'Immo Distance',
    'access arguments' => array('admin price'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}
/**
 * Callback function for displaying the individual distance default page
 */
function immoclient_distance_view_area($id) {
  
  $area = entity_load('immoclient_distance', array($id));
  $area_def = $area[$id];
  drupal_set_title($area_def->distanz_zu);
  $output = entity_view('immoclient_distance', array($area_def));
  return $output;
  
}
/**
 * Form definition for adding / editing a distance.
 */
function immoclient_distance_form($form, &$form_state, $free = NULL) {

  $form['distanz_zu'] = array(
    '#title' => t('Distance to?'),
    '#type' => 'select',
    '#options' => array(
      'FLUGHAFEN'=>t('Airport'),
      'FERNBAHNHOF' => t('Long distance station'),
      'AUTOBAHN' =>t('AUTOBAHN'),
      'US_BAHN'=>t('Tube'),
      'BUS'=>t('Bus'),
      'KINDERGAERTEN'=>t('Kindergarten'),
      'GRUNDSCHULE'=>t('Primary School'),
      'HAUPTSCHULE'=>t('Secondary General School'),
      'REALSCHULE'=>t('Intermediate Secondary School'),
      'GESAMTSCHULE'=>t('Comprehensive Schools'),
      'GYMNASIUM'=>t('Grammar Schools'),
      'ZENTRUM'=>t('Centre'),
      'EINKAUFSMOEGLICHKEITEN'=>t('Shopping facilities'),
      'GASTSTAETTEN'=>t('Pubs')
        ),
    '#default_value' => isset($free->distanz_zu) ? $free->distanz_zu : '',
    '#required' => TRUE,
  );

  $form['distance_measure'] = array(
    '#title' => t('Distance'),
    '#type' => 'numericfield',
    '#precision' => 10,
    '#decimals' => 0,
    '#minimum' => 0,
    '#maximum' => 50000000.99,
    '#default_value' => isset($free->distance_measure) ? $free->distance_measure : '',
    '#required' => FALSE,
  );
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => isset($free->id) ? t('Update project') : t('Save project'),
    '#weight' => 50,
  );

  return $form;
}
/**
 * Submit handler for the distance add/edit form.
 */
function immoclient_distance_form_submit($form, &$form_state) {
  $project = entity_ui_form_submit_build_entity($form, $form_state);
  $project->save();
  drupal_set_message(t('The distance: @name has been saved.', array('@name' => $free->distanz_zu)));
  $form_state['redirect'] = 'admin/content/immo/distance';
}
/**
 * EntityTest Views Controller class.
 */
class ImmoclientdistanceDefaultViewsController extends EntityDefaultViewsController {
  /**
   * Edit or add extra fields to views_data().
   */
  public function views_data() {
    $data = parent::views_data();
//    dpm($data,'Views data');
    // Add your custom data here
    /*
    * Example: change the handler of a field
    * if the 'created' field is a unix timestamp in the database,
    * Entity API will set the handler to views_handler_field_numeric,
    * change this to the views date handler
    */
 //   $data['entity_test']['created']['field']['handler'] = 'views_handler_field_date';
    return $data;
  }
}
/**
 * Project entity class extending the Entity class
 */
class ImmoclientdistanceEntity extends Entity {
  
  /**
   * Change the default URI from default/id to immoclient_distance/id
   */
  protected function defaultUri() {
    return array('path' => 'immoclient_distance/' . $this->identifier());
  }
  
}

  
  /**
 * Implements hook_entity_property_info().
 * for views integration and inline_entity_form
 */
function immoclient_distance_entity_property_info() {
  $info = array();
  $info['immoclient_distance']['properties']['id'] = array(
    'label' => t('ID'),
    'description' => t('ID'),
    'type' => 'integer',
    'schema field' => 'id',
    'translatable' => TRUE,    
  );
  $info['immoclient_distance']['properties']['distanz_zu'] = array(
    'label' => t('Distance to important places'),
    'description' => t('Distance to important places'),
    'type' => 'text',
    'options list' => 'immoclient_distance_options_list',
    'schema field' => 'distanz_zu',
    'translatable' => TRUE,    
  );
  $info['immoclient_distance']['properties']['distance_measure'] = array(
    'label' => t('Distance'),
    'description' => t('Distance'),
    'type' => 'decimal',
    'schema field' => 'distance_measure',
    'translatable' => TRUE,    
  );
  return $info;
}
function immoclient_distance_label_callback($immoclient_distance){
  //dpm($immoclient_distance);
  $distanz_zu = $immoclient_distance->distanz_zu;
  $options = immoclient_distance_options_list();
  return $options[$distanz_zu];
}

function immoclient_distance_option_callback($immoclient_distancebuild){
  $options = immoclient_distance_options_list();
  return $options[$immoclient_distancebuild];
}

/**
 * gives the select list for "platzart"
 */
function immoclient_distance_options_list(){
    return array(
      'FLUGHAFEN'=>t('Airport'),
      'FERNBAHNHOF' => t('Long distance station'),
      'AUTOBAHN' =>t('AUTOBAHN'),
      'US_BAHN'=>t('Tube'),
      'BUS'=>t('Bus'),
      'KINDERGAERTEN'=>t('Kindergarten'),
      'GRUNDSCHULE'=>t('Primary School'),
      'HAUPTSCHULE'=>t('Secondary General School'),
      'REALSCHULE'=>t('Intermediate Secondary School'),
      'GESAMTSCHULE'=>t('Comprehensive Schools'),
      'GYMNASIUM'=>t('Grammar Schools'),
      'ZENTRUM'=>t('Centre'),
      'EINKAUFSMOEGLICHKEITEN'=>t('Shopping facilities'),
      'GASTSTAETTEN'=>t('Pubs')
      );
}
