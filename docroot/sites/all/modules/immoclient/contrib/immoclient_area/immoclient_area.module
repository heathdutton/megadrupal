<?php


/**
 * Implements hook_entity_info().
 */
function immoclient_area_entity_info() {
  
  $info = array();
  
  $info['immoclient_area'] = array(
    'label' => t('Immo area'),
    'base table' => 'immoclient_area_default',
    'entity keys' => array(
      'id' => 'id',
    //  'label' => 'wohnflaeche',
    ),
    'entity class' => 'ImmoclientareaEntity',
    'controller class' => 'ImmoclientareaEntityController',
    'plural label' => t('Area'),
    'access callback' => 'immoclient_price_access_callback',
    'uri callback' => 'entity_class_uri',
    'admin ui' => array(
      'path' => 'admin/content/areas',
      'controller class' => 'EntityDefaultUIController',
    ),
    'translation' => array(
        'entity_translation' => array(
          'base path' => 'admin/content/areas/manage/%entity_object',
          'path wildcard' => '%entity_object',
        ),
      ),
    'fieldable' => FALSE,
    'bundles' => array(
      'immoclient_area' => array(
        'label' => t('Areas'),
        'admin' => array(
          'path' => 'admin/structure/immo/areas/manage',
        ),
      ),
    ),
    'inline entity form' => array(
        'controller' => 'ImmoclientareaInlineEntityFormController',
    ),
    'views controller class' => 'ImmoclientareaDefaultViewsController',
    'module' => 'immoclient_area',
  );
  
  return $info;
}

/**
 * Implements hook_menu()
 */
function immoclient_area_menu() {
  $items = array();
  
  $items['immoclient_area/%'] = array(
    'title' => 'Area',
    'page callback' => 'immoclient_area_view_area',
    'page arguments' => array(1),
    'access arguments' => array('view price'),
  );
  $items['admin/structure/immo/areas'] = array(
    'title' => 'Immo areas',
    'access arguments' => array('admin price'),
    'type' => MENU_NORMAL_ITEM,
  ); 
  return $items;
}

/**
 * Callback function for displaying the individual price default page
 */
function immoclient_area_view_area($id) {
  
  $area = entity_load('immoclient_area', array($id));
  $area_def = $area[$id];
  
  drupal_set_title($area_def->wohnflaeche);
  $output = entity_view('immoclient_area', array($area_def));
  //dpm($output);
  return $output;
  
}
/**
 * Form definition for adding / editing a project.
 */
function immoclient_area_form($form, &$form_state, $immoclient_area = NULL) {
  
  $form['wohnflaeche'] = array(
    '#title' => t('Living space'),
    '#type' => 'numericfield',
    '#precision' => 10,
    '#decimals' => 0,
    '#minimum' => 0,
    '#maximum' => 50000000.99,
    '#default_value' => isset($immoclient_area->wohnflaeche) ? $immoclient_area->wohnflaeche : '0.00',
    '#required' => FALSE,
  );
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => isset($immoclient_area->id) ? t('Update Price default') : t('Save project'),
    '#weight' => 50,
  );

  return $form;
}
/**
 * Submit handler for the project add/edit form.
 */
function immoclient_area_form_submit($form, &$form_state) {
  $immoclient_area = entity_ui_form_submit_build_entity($form, $form_state);
  $immoclient_area->save();
  drupal_set_message(t('The area: @name has been saved.', array('@name' => $immoclient_area->wohnflaeche)));
  $form_state['redirect'] = 'admin/areas';
}


/**
 * EntityTest Views Controller class.
 */
class ImmoclientareaDefaultViewsController extends EntityDefaultViewsController {
  /**
   * Edit or add extra fields to views_data().
   */
  public function views_data() {
    $data = parent::views_data();
//    dpm($data,'Views data');
    // Add your custom data here
    /*
    * Example: change the handler of a field
    * if the 'created' field is a unix timestamp in the database,
    * Entity API will set the handler to views_handler_field_numeric,
    * change this to the views date handler
    */
 //   $data['entity_test']['created']['field']['handler'] = 'views_handler_field_date';
    return $data;
  }
}

/**
 * Project entity class extending the Entity class
 */
class ImmoclientareaEntity extends Entity {
  
  /**
   * Change the default URI from default/id to immoclient_area/id
   */
  protected function defaultUri() {
    return array('path' => 'immoclient_area/' . $this->identifier());
  }
  
}

function immoclient_area_entity_property_info() {
  
  $info = array(); 
 
 $info['immoclient_area']['properties']['wohnflaeche'] = array(
    'label' => t('Living space'),
    'description' => t('Living space'),
    'type' => 'decimal',
    'schema field' => 'wohnflaeche',
    'translatable' => TRUE, 
  );
 $info['immoclient_area']['properties']['gesamtflaeche'] = array(
    'label' => t('Total area'),
    'description' => t('Total area'),
    'type' => 'decimal',
    'schema field' => 'gesamtflaeche',
    'translatable' => TRUE, 
  );
 $info['immoclient_area']['properties']['bgf'] = array(
    'label' => t('Total floor area'),
    'description' => t('Sum of all areas of every floor'),
    'type' => 'decimal',
    'schema field' => 'bgf',
    'translatable' => TRUE, 
  );
 $info['immoclient_area']['properties']['sonstflaeche'] = array(
    'label' => t('Other space'),
    'description' => t('Other space'),
    'type' => 'decimal',
    'schema field' => 'sonstflaeche',
    'translatable' => TRUE, 
  );
 $info['immoclient_area']['properties']['nutzflaeche'] = array(
    'label' => t('Useful area'),
    'description' => t('Useful area'),
    'type' => 'decimal',
    'schema field' => 'nutzflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['ladenflaeche'] = array(
    'label' => t('Store space'),
    'description' => t('Store space'),
    'type' => 'decimal',
    'schema field' => 'ladenflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['lagerflaeche'] = array(
    'label' => t('Storage space'),
    'description' => t('Storage space'),
    'type' => 'decimal',
    'schema field' => 'lagerflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['verkaufsflaeche'] = array(
    'label' => t('Sales area'),
    'description' => t('Sales area'),
    'type' => 'decimal',
    'schema field' => 'verkaufsflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['freiflaeche'] = array(
    'label' => t('Open space'),
    'description' => t('Open space'),
    'type' => 'decimal',
    'schema field' => 'freiflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['bueroflaeche'] = array(
    'label' => t('Office space'),
    'description' => t('Office space'),
    'type' => 'decimal',
    'schema field' => 'bueroflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['bueroteilflaeche'] = array(
    'label' => t('Office space apart'),
    'description' => t('Office space apart'),
    'type' => 'decimal',
    'schema field' => 'bueroteilflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['fensterfront'] = array(
    'label' => t('Surface of the windows'),
    'description' => t('Surface of the windows'),
    'type' => 'decimal',
    'schema field' => 'fensterfront',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['verwaltungsflaeche'] = array(
    'label' => t('Space for administration'),
    'description' => t('Space for administration'),
    'type' => 'decimal',
    'schema field' => 'verwaltungsflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['gastroflaeche'] = array(
    'label' => t('Space for gastronomy'),
    'description' => t('Space for gastronomy'),
    'type' => 'decimal',
    'schema field' => 'gastroflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['grundstuecksflaeche'] = array(
    'label' => t('Grundstuecksflaeche'),
    'description' => t('Grundstuecksflaeche'),
    'type' => 'decimal',
    'schema field' => 'grundstuecksflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['gartenflaeche'] = array(
    'label' => t('Area of garden in m²'),
    'description' => t('Area of garden in m²'),
    'type' => 'decimal',
    'schema field' => 'gartenflaeche',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['grz'] = array(
    'label' => t('Grundflächenzahl'),
    'description' => t('Grundflächenzahl'),
    'type' => 'decimal',
    'schema field' => 'grz',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['gfz'] = array(
    'label' => t('Geschossflächenzahl'),
    'description' => t('Geschossflächenzahl'),
    'type' => 'decimal',
    'schema field' => 'gfz',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['bmz'] = array(
    'label' => t('Baumassenzahl'),
    'description' => t('Baumassenzahl'),
    'type' => 'decimal',
    'schema field' => 'bmz',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['anzahl_zimmer'] = array(
    'label' => t('Number of chambers'),
    'description' => t('Number of chambers'),
    'type' => 'decimal',
    'schema field' => 'anzahl_zimmer',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['anzahl_schlafzimmer'] = array(
    'label' => t('Number of bedrooms'),
    'description' => t('Number of bedrooms'),
    'type' => 'decimal',
    'schema field' => 'anzahl_schlafzimmer',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['anzahl_kuechen'] = array(
    'label' => t('Number of kitchens'),
    'description' => t('Number of kitchens'),
    'type' => 'decimal',
    'schema field' => 'anzahl_kuechen',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['anzahl_badezimmer'] = array(
    'label' => t('Number of bathrooms'),
    'description' => t('Number of bathrooms'),
    'type' => 'decimal',
    'schema field' => 'anzahl_badezimmer',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['anzahl_sep_wc'] = array(
    'label' => t('Number of separated toilets'),
    'description' => t('Number of separated toilets'),
    'type' => 'decimal',
    'schema field' => 'anzahl_sep_wc',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['anzahl_balkone'] = array(
    'label' => t('Number of balconies'),
    'description' => t('Number of balconies'),
    'type' => 'decimal',
    'schema field' => 'anzahl_balkone',
    'translatable' => TRUE, 
  );
    $info['immoclient_area']['properties']['anzahl_terrassen'] = array(
    'label' => t('Number of patios'),
    'description' => t('Number of patios'),
    'type' => 'decimal',
    'schema field' => 'anzahl_terrassen',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['anzahl_logia'] = array(
    'label' => t('Number of loggias'),
    'description' => t('Number of loggias'),
    'type' => 'decimal',
    'schema field' => 'anzahl_logia',
    'translatable' => TRUE, 
  );
  $info['immoclient_area']['properties']['balkon_terrasse_flaeche'] = array(
    'label' => t('Amount of all balconies and patios'),
    'description' => t('Amount of all balconies and patios'),
    'type' => 'decimal',
    'schema field' => 'balkon_terrasse_flaeche',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['anzahl_wohn_schlafzimmer'] = array(
    'label' => t('Amount of all living-bedrooms'),
    'description' => t('Amount of all living-bedrooms'),
    'type' => 'decimal',
    'schema field' => 'anzahl_wohn_schlafzimmer',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['kellerflaeche'] = array(
    'label' => t('Basement space in qm'),
    'description' => t('Basement space in qm'),
    'type' => 'decimal',
    'schema field' => 'kellerflaeche',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['fensterfront_qm'] = array(
    'label' => t('Window frontiere in qm'),
    'description' => t('Window frontiere in qm'),
    'type' => 'decimal',
    'schema field' => 'fensterfront_qm',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['grundstuecksfront'] = array(
    'label' => t('Distance to the street in m'),
    'description' => t('Distance to the street in m'),
    'type' => 'decimal',
    'schema field' => 'grundstuecksfront',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['dachbodenflaeche'] = array(
    'label' => t('Attic space'),
    'description' => t('Attic space'),
    'type' => 'decimal',
    'schema field' => 'dachbodenflaeche',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['teilbar_ab'] = array(
    'label' => t('Dividable since'),
    'description' => t('Dividable since'),
    'type' => 'decimal',
    'schema field' => 'teilbar_ab',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['beheizbare_flaeche'] = array(
    'label' => t('Number of parking places'),
    'description' => t('Number of parking places'),
    'type' => 'decimal',
    'schema field' => 'beheizbare_flaeche',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['anzahl_stellplaetze'] = array(
    'label' => t('Heating area'),
    'description' => t('Heating area'),
    'type' => 'decimal',
    'schema field' => 'anzahl_stellplaetze',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['plaetze_gastraum'] = array(
    'label' => t('Places in the official rooms'),
    'description' => t('Places in the official rooms'),
    'type' => 'decimal',
    'schema field' => 'plaetze_gastraum',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['anzahl_betten'] = array(
    'label' => t('Amount of beds'),
    'description' => t('Amount of beds'),
    'type' => 'decimal',
    'schema field' => 'anzahl_betten',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['anzahl_tagungsraeume'] = array(
    'label' => t('Amount of meeting rooms'),
    'description' => t('Amount of meeting rooms'),
    'type' => 'decimal',
    'schema field' => 'anzahl_tagungsraeume',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['vermietbare_flaeche'] = array(
    'label' => t('Space to rent'),
    'description' => t('Space to rent'),
    'type' => 'decimal',
    'schema field' => 'vermietbare_flaeche',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['anzahl_wohneinheiten'] = array(
    'label' => t('Numbers of living units'),
    'description' => t('Numbers of living units'),
    'type' => 'decimal',
    'schema field' => 'anzahl_wohneinheiten',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['anzahl_gewerbeeinheiten'] = array(
    'label' => t('Numbers of business units'),
    'description' => t('Numbers of business units'),
    'type' => 'decimal',
    'schema field' => 'anzahl_gewerbeeinheiten',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['einliegerwohnung'] = array(
    'label' => t('Granny flat available?'),
    'description' => t('Granny flat available?'),
    'type' => 'boolean',
    'schema field' => 'einliegerwohnung',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['kubatur'] = array(
    'label' => t('Kubatur'),
    'description' => t('Kubatur'),
    'type' => 'decimal',
    'schema field' => 'kubatur',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['ausnuetzungsziffer'] = array(
    'label' => t('Governing plot ratios'),
    'description' => t('Governing plot ratios'),
    'type' => 'decimal',
    'schema field' => 'ausnuetzungsziffer',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['flaechevon'] = array(
    'label' => t('Area from'),
    'description' => t('Area from'),
    'type' => 'decimal',
    'schema field' => 'flaechevon',
    'translatable' => TRUE, 
  );
   $info['immoclient_area']['properties']['flaechebis'] = array(
    'label' => t('Area to'),
    'description' => t('Area to'),
    'type' => 'decimal',
    'schema field' => 'flaechebis',
    'translatable' => TRUE, 
  );
  return $info;
}
