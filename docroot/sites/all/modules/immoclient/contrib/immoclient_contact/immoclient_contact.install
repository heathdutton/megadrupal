<?php
//schon kopiert nach clientimmo!
/**
 * Implements hook_schema().
 */
function immoclient_contact_schema() {
  
  $schema = array();
   
  $schema['immoclient_contact'] = array(
    'description' => 'The base table for the employers',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the contact',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
        'name' => array(
        'description' => 'Name',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,           
      ), 
        'vorname' => array(
        'description' => 'Prename',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'titel' => array(
        'description' => 'title',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'anrede' => array(
        'description' => 'salutation',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'position' => array(
        'description' => 'position',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'anrede_brief' => array(
        'description' => 'anrede brief',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'firma' => array(
        'description' => 'firm',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'strasse' => array(
        'description' => 'street',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'hausnummer' => array(
        'description' => 'hausnummer',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'plz' => array(
        'description' => 'plz',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'ort' => array(
        'description' => 'village',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,           
      ),
        'postfach' => array(
        'description' => 'po box',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'postf_plz' => array(
        'description' => 'po box postalcode',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'land' => array(
        'description' => 'country',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'adressfreigabe' => array(
        'description' => 'show address',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,           
        'default'=> 0,
      ),
        'email_zentrale' => array(
        'description' => 'email firm',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'email_direkt' => array(
        'description' => 'email personel',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'tel_zentrale' => array(
        'description' => 'telefon firm',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'tel_durchw' => array(
        'description' => 'telefon personel',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'tel_fax' => array(
        'description' => 'tel fax',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'tel_handy' => array(
        'description' => 'mobile phone',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE, 
      ),
        'personennummer' => array(
        'description' => 'ID in Austria',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
        'immobilientreuhaenderid' => array(
        'description' => 'ID',
        'type' => 'text',
        'size' => 'small',
        'not null' => FALSE,           
      ),
    ),
    'primary key' => array('id'),
  );
  
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function immoclient_contact_uninstall() {
  // delete the fieldgroups of this bundle
  db_delete('field_group')
      ->condition('bundle', 'immoclient_contact')
      ->execute();
  
  // @see https://api.drupal.org/api/drupal/modules!field!field.crud.inc/function/field_delete_field/7
  $fields = immoclient_contact_deletable_fields();
  foreach ($fields as $fieldname) {
  field_delete_field($fieldname);
  }
  field_purge_batch(500);
}


/*
 * create an array of fields belonging to immoclient bundle
 */
function immoclient_contact_deletable_fields(){
  $options = array('target' => 'slave');
 
  $content_type = 'immoclient_contact';

  $sql = "SELECT field_name
          FROM field_config_instance ci
          WHERE ci.bundle = :content_type ";
     
  $result = db_query($sql, array(':content_type' => $content_type,), $options);
  $fields = array();
  foreach ($result->fetchAll() as $key => $field) {
    $fields[] = $field->field_name;
    
  }
  return $fields;
}
