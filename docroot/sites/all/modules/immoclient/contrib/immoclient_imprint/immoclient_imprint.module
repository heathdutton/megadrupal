<?php

/**
 * Implements hook_entity_info().
 */
function immoclient_imprint_entity_info() {  
  $info = array();
  
  $info['immoclient_imprint'] = array(
    'label' => t('Impressum'),
    'base table' => 'immoclient_imprint',
    'entity keys' => array(
      'id' => 'id',
      'label' => 'firmenname',
    ),
    'entity class' => 'ImmoclientimpressumEntity',
    'controller class' => 'ImmoclientImpressumEntityController',
    'access callback' => 'immoclient_customer_access_callback', 
    'uri callback' => 'entity_class_uri',
    'plural label' => 'Impressum',
    'label callback' => 'immoclient_imprint_label_callback',
    'admin ui' => array(
      'path' => 'admin/impressum',
      'controller class' => 'EntityDefaultUIController',
    ),
      'translation' => array(
        'entity_translation' => array(
          'base path' => 'admin/content/impressum/manage/%entity_object',
          'path wildcard' => '%entity_object',
        ),
      ),
    'fieldable' => TRUE, 
    'bundles' => array(
      'immoclient_imprint' => array(
        'label' => t('Impressum'),
        'admin' => array(
          'path' => 'admin/structure/immo/impressum/manage',
        ),
      ),
    ),
    'views controller class' => 'ImmoclientimpressumDefaultViewsController',
    'module' => 'immoclient_imprint',
  );
  
  return $info;
}

/**
 * Implements hook_menu()
 */
function immoclient_imprint_menu() {
  $items = array();
  
  $items['immoclient_imprint/%'] = array(
    'title' => 'Impressum',
    'page callback' => 'immoclient_imprint_view',
    'page arguments' => array(1),
    'access arguments' => array('view customer'),
  );
  $items['admin/structure/immo/impressum'] = array(
    'title' => 'Impressum',
    'access arguments' => array('admin customer'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Callback function for displaying the impressum
 */
function immoclient_imprint_view($id) {
  
  $imp = entity_load('immoclient_imprint', array($id));
//  dpm($area);
  $imp_def = $imp[$id];
//  dpm($area_def);
  drupal_set_title($imp_def->firmenname);
  $output = entity_view('immoclient_imprint', array($imp_def));
//  dpm($output);
  return $output;
  
}

/**
 * Form definition for adding / editing the impressum.
 */
function immoclient_imprint_form($form, &$form_state, $imp = NULL) {

  $form['firmenname'] = array(
    '#title' => t('Firm name'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->firmenname) ? $imp->firmenname : '',
    '#required' => TRUE,
  );
  $form['firmenanschrift'] = array(
    '#title' => t('Address complete'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->firmenanschrift) ? $imp->firmenanschrift : '',
    '#required' => TRUE,
  );
  $form['telefon'] = array(
    '#title' => t('Telefon'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->telefon) ? $imp->telefon : '',
    '#required' => TRUE,
  );
  $form['vertretungsberechtigter'] = array(
    '#title' => t('Authorised representative'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->vertretungsberechtigter) ? $imp->vertretungsberechtigter : '',
    '#required' => TRUE,
  );
  $form['berufsaufsichtsbehoerde'] = array(
    '#title' => t('Trade office'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->berufsaufsichtsbehoerde) ? $imp->berufsaufsichtsbehoerde : '',
    '#required' => TRUE,
  );
  $form['handelsregister'] = array(
    '#title' => t('Register of companies'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->handelsregister) ? $imp->handelsregister : '',
    '#required' => TRUE,
  );
  $form['handelsregister_nr'] = array(
    '#title' => t('Nr. of register of companies'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->handelsregister_nr) ? $imp->handelsregister_nr : '',
    '#required' => TRUE,
  );
  $form['umsst_id'] = array(
    '#title' => t('VAT ID'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->umsst_id) ? $imp->umsst_id : '',
    '#required' => TRUE,
  );
  $form['steuernummer'] = array(
    '#title' => t('TAX ID'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->steuernummer) ? $imp->steuernummer : '',
    '#required' => TRUE,
  );
  $form['weiteres'] = array(
    '#title' => t('Else'),
    '#type' => 'textfield',
    '#default_value' => isset($imp->weiteres) ? $imp->weiteres : '',
    '#required' => FALSE,
  );
  
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => isset($imp->id) ? t('Update project') : t('Save project'),
    '#weight' => 50,
  );

  return $form;
}
/**
 * Submit handler for the project add/edit form.
 */
function immoclient_imprint_form_submit($form, &$form_state) {
  $project = entity_ui_form_submit_build_entity($form, $form_state);
 // dpm($project);
  $project->save();
  drupal_set_message(t('The Impressum has been saved.'));
  $form_state['redirect'] = 'admin/impressum';
}
/**
 * EntityTest Views Controller class.
 */
class ImmoclientimpressumDefaultViewsController extends EntityDefaultViewsController {
  /**
   * Edit or add extra fields to views_data().
   */
  public function views_data() {
    $data = parent::views_data();

    return $data;
  }
}
/**
 * Project entity class extending the Entity class
 */
class ImmoclientimpressumEntity extends Entity {
  
  /**
   * Change the default URI from default/id to immoclient_imprint/id
   */
  protected function defaultUri() {
    return array('path' => 'immoclient_imprint/' . $this->identifier());
  } 
}

function immoclient_imprint_label_callback($customer, $type){
  if(isset($customer->firmenname)){
    return $customer->firmenname;
  }
}


  /**
 * Implements hook_entity_property_info().
 * for views integration and inline_entity_form
 */
function immoclient_imprint_entity_property_info() {
  $info = array();
  $info['immoclient_imprint']['properties']['id'] = array(
    'label' => t('ID'),
    'description' => t('ID'),
    'type' => 'integer',
    'schema field' => 'id',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['firmenname'] = array(
    'label' => t('Name of firm'),
    'description' => t('Name of firm'),
    'type' => 'text',
    'schema field' => 'firmenname',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['firmenanschrift'] = array(
    'label' => t('Address of firm'),
    'description' => t('Address of firm'),
    'type' => 'text',
    'schema field' => 'firmenanschrift',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['telefon'] = array(
    'label' => t('Telefon of firm'),
    'description' => t('Telefon of firm'),
    'type' => 'text',
    'schema field' => 'telefon',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['vertretungsberechtigter'] = array(
    'label' => t('Authorised representative'),
    'description' => t('Authorised representative'),
    'type' => 'text',
    'schema field' => 'vertretungsberechtigter',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['berufsaufsichtsbehoerde'] = array(
    'label' => t('Trade office'),
    'description' => t('Trade office'),
    'type' => 'text',
    'schema field' => 'berufsaufsichtsbehoerde',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['handelsregister'] = array(
    'label' => t('Register of companies'),
    'description' => t('Register of companies'),
    'type' => 'text',
    'schema field' => 'handelsregister',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['handelsregister_nr'] = array(
    'label' => t('Nbr. of register of companies'),
    'description' => t('Nmbr. of register of companies'),
    'type' => 'text',
    'schema field' => 'handelsregister_nr',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['umsst_id'] = array(
    'label' => t('Vat ID'),
    'description' => t('VAT ID'),
    'type' => 'text',
    'schema field' => 'umsst_id',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['steuernummer'] = array(
    'label' => t('Tax ID'),
    'description' => t('Tax ID'),
    'type' => 'text',
    'schema field' => 'steuernummer',
    'translatable' => FALSE,    
  );
  $info['immoclient_imprint']['properties']['weiteres'] = array(
    'label' => t('Impressum else'),
    'description' => t('Impressum else'),
    'type' => 'text',
    'schema field' => 'weiteres',
    'translatable' => FALSE,    
  );
  
  return $info;
}
