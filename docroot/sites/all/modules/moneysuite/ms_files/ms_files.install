<?php
/**
 * @file
 * Licensed under the GNU GPLv2 License
 */

/**
 * Implementation of hook_requirements
 */
function ms_files_requirements($phase) {
  $t = get_t();
  $requirements = array();

  // Checks if the user has a private file directory enabled
  if ($phase == 'install') {
    if (!variable_get('file_private_path', FALSE)) {
      $requirements['ms_files'] = array(
        'title' => $t('File Downloads Suite'),
        'value' => VERSION,
        'description' => $t('Private Files Directory needs to be set before installing File Downloads Suite. Set it !link.',
          array('!link' => l($t('here'), 'admin/config/media/file-system'))),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    return $requirements;
  }
}

/**
 * Implements hook_install().
 */
function ms_files_install() {
  // Create the Directory
  variable_set('ms_files_default_directory', 'private://ms_files');
  $dir = 'private://ms_files';
  file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
}

/**
 * Implements hook_uninstall().
 */
function ms_files_uninstall() {
  // Delete related variables all at once.
  db_delete('variable')
    ->condition('name', 'ms_files_%%', 'LIKE')
    ->execute();
}

/**
 * Implements hook_schema().
 */
function ms_files_schema() {
  $schema['ms_files_profiles'] = array(
    'description' => 'Used to hold file info',
    'fields' => array(
      'pfid' => array(
        'type' => 'serial',
        'description' => 'The unique File Profile ID (primary)',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'fid' => array(
        'type' => 'int',
        'description' => 'The File ID of the Drupal file',
        'disp-width' => '11'
      ),
      'uid' => array(
        'description' => t('The user id who owns the products.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'name' => array(
        'type' => 'varchar',
        'description' => 'The name of the File',
        'length' => '255',
        'not null' => TRUE
      ),
      'description' => array(
        'type' => 'text',
        'description' => 'Description of the File',
      ),
      'amount' => array(
        'type' => 'numeric',
        'description' => 'The Price of the File',
        'precision' => '10',
        'scale' => '2'
      ),
      'rid' => array(
        'type' => 'int',
        'description' => 'The Role ID granted upon pruchase',
        'disp-width' => '11'
      ),
      'download_limit' => array(
        'type' => 'int',
        'description' => 'The max number of times a file may be downloaded',
        'disp-width' => '11'
      ),
      'address_limit' => array(
        'type' => 'int',
        'description' => 'The max number of different IP Addresses that may download the file',
        'disp-width' => '11'
      ),
      'time_limit' => array(
        'type' => 'int',
        'description' => 'The number of days until the file expires',
        'disp-width' => '11'
      ),
      'purchase_mail_subject' => array(
        'type' => 'varchar',
        'description' => 'Subject for the Purchase Email',
        'length' => '255'
      ),
      'purchase_mail_body' => array(
        'type' => 'text',
        'description' => 'Body for the Purchase Email',
      ),
      'expired_mail_subject' => array(
        'type' => 'varchar',
        'description' => 'Subject for the Expired Email',
        'length' => '255'
      ),
      'expired_mail_body' => array(
        'type' => 'text',
        'description' => 'Body for the Expired Email',
      ),
      'weight' => array(
        'type' => 'int',
        'description' => 'Used for ordering the files',
        'not null' => TRUE,
        'disp-width' => '11',
        'default' => 0
      ),
      'data' => array(
        'type' => 'text',
        'description' => 'Serialized Array of Data for the plan',
        'serialize' => TRUE
      ),
    ),
    'primary key' => array('pfid'),
  );

  $schema['ms_files_downloads'] = array(
    'description' => 'Used to record all file profiles',
    'fields' => array(
      'fuid' => array(
        'type' => 'serial',
        'description' => 'The Unique ID of this File Download',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'pfid' => array(
        'type' => 'int',
        'description' => 'The File Profile ID',
        'disp-width' => '11'
      ),
      'fid' => array(
        'type' => 'int',
        'description' => 'The Drupal File ID',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'uid' => array(
        'type' => 'int',
        'description' => 'The UID of the user who purchased the file',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'oid' => array(
        'type' => 'int',
        'description' => 'The Order ID associated with the File Download',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'file_key' => array(
        'type' => 'varchar',
        'description' => 'A generated key used for the Download URL',
        'length' => 32,
        'not null' => TRUE,
        'default' => ''
      ),
      'downloads' => array(
        'type' => 'int',
        'description' => 'The number of times the file has been downloaded',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'addresses' => array(
        'type' => 'text',
        'description' => 'The list of IP Addresses that have downloaded the file',
        'serialize' => TRUE,
      ),
      'download_limit' => array(
        'type' => 'int',
        'description' => 'The max number of times the file may be downloaded',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'address_limit' => array(
        'type' => 'int',
        'description' => 'The max number of IP Addresses that may download the file',
        'not null' => TRUE,
        'disp-width' => '11'
      ),
      'granted' => array(
        'type' => 'int',
        'description' => 'Timestamp of when the file was purchased',
        'not null' => TRUE,
        'disp-width' => '11',
        'default' => 0
      ),
      'expiration' => array(
        'type' => 'int',
        'description' => 'The Expiration Timestamp of the File Download',
        'not null' => TRUE,
        'disp-width' => '11',
        'default' => 0
      ),
      'status' => array(
        'type' => 'int',
        'description' => 'The Status of the File Download',
        'not null' => TRUE,
        'disp-width' => '11',
        'default' => 1
      ),
    ),
    'primary key' => array('fuid'),
  );

  return $schema;
}

// ======================================
// Updates:
// ======================================

/**
 * Add the uid field to the ms_files_profiles table
 */
function ms_files_update_7301(&$sandbox) {
  if (!db_field_exists('ms_files_profiles', 'uid')) {
  db_add_field('ms_files_profiles', 'uid', array(
      'description' => t('The user id who owns the products.'),
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 1,
    ));
  }

  return t('Successfully added the uid field to the ms_files_profiles database table.');
}
