<?php


/**
 * @file
 */

/**
 * Implements hook_requirements().
 */
function ms_authorizenet_requirements($phase) {
  $t = get_t();

  $has_curl = function_exists('curl_init');

  $requirements['ms_authorizenet_curl'] = array(
    'title' => $t('cURL'),
    'value' => $has_curl ? $t('Enabled') : $t('Not found'),
  );
  if (!$has_curl) {
    $requirements['ms_authorizenet_curl']['severity'] = REQUIREMENT_ERROR;
    $requirements['ms_authorizenet_curl']['description'] = $t("Authorize.net requires the PHP <a href='!curl_url'>cURL</a> library.", array('!curl_url' => 'http://php.net/manual/en/curl.setup.php'));
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function ms_authorizenet_uninstall() {
  // Delete related variables all at once.
  db_delete('variable')
    ->condition('name', 'ms_authorizenet_%%', 'LIKE')
    ->execute();
}

/**
 * Implements hook_schema().
 */
function ms_authorizenet_schema() {
  $schema['ms_authorizenet_cim_profiles'] = array(
    'description' => 'Used to hold Customer Profiles',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'description' => 'The unique ID (primary)',
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'description' => 'The User ID',
        'disp_width' => '11',
        'not null' => TRUE,
        'default' => 0,
      ),
      'profile_id' => array(
        'type' => 'varchar',
        'description' => 'The Customer Profile ID on Authorize.net',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'email' => array(
        'type' => 'varchar',
        'description' => 'The email address associated with this profile',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'type' => 'varchar',
        'description' => 'The description of this profile',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'profile_id' => array('profile_id'),
      'uid' => array('uid'),
    ),
    'primary key' => array('id'),
  );

  $schema['ms_authorizenet_payment_profiles'] = array(
    'description' => 'Used to hold Customer Payment Profiles',
    'fields' => array(
      'id' => array(
        'description' => 'The unique ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The user ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'profile_id' => array(
        'type' => 'varchar',
        'description' => 'The Customer Profile ID on Authorize.net',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'payment_id' => array(
        'type' => 'varchar',
        'description' => 'The Customer Payment Profile ID on Authorize.net',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'The status',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'billtofirstname' => array(
        'description' => 'Billing First Name',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtolastname' => array(
        'description' => 'Billing Last Name',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtoaddress' => array(
        'description' => 'Billing Address',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtocity' => array(
        'description' => 'Billing City',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtostate' => array(
        'description' => 'Billing State ISO2',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtozip' => array(
        'description' => 'Billing Zip',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtocountry' => array(
        'description' => 'Billing Country ISO2',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtophonenumber' => array(
        'description' => 'Billing Phone',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'billtofaxnumber' => array(
        'description' => 'Billing Fax',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'cardnumber' => array(
        'description' => 'Last 4 Digits of Card Number',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'expirationmonth' => array(
        'description' => 'Expiration Month of the Card',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'expirationyear' => array(
        'description' => 'Expiration Year of the Card',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'notified' => array(
        'type' => 'int',
        'description' => 'When the user was last notified of card expiration',
        'disp_width' => '11',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'payment_id' => array('payment_id'),
      'profile_id' => array('profile_id'),
      'uid' => array('uid'),
    ),
    'primary key' => array('id'),
  );

  $schema['ms_authorizenet_shipping_profiles'] = array(
    'description' => 'Used to hold Customer Shipping Profiles',
    'fields' => array(
      'id' => array(
        'description' => 'The unique ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The user ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'profile_id' => array(
        'type' => 'varchar',
        'description' => 'The Customer Profile ID on Authorize.net',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'shipping_id' => array(
        'type' => 'varchar',
        'description' => 'The Customer Shipping Profile ID on Authorize.net',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'The status',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'shiptofirstname' => array(
        'description' => 'Shipping First Name',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptolastname' => array(
        'description' => 'Shipping Last Name',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptoaddress' => array(
        'description' => 'Shipping Address',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptocity' => array(
        'description' => 'Shipping City',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptostate' => array(
        'description' => 'Shipping State ISO2',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptozip' => array(
        'description' => 'Shipping Zip',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptocountry' => array(
        'description' => 'Shipping Country ISO2',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptophonenumber' => array(
        'description' => 'Shipping Phone',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'shiptofaxnumber' => array(
        'description' => 'Shipping Fax',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'shipping_id' => array('shipping_id'),
      'profile_id' => array('profile_id'),
      'uid' => array('uid'),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

// ======================================
// Updates:
// ======================================

/**
 * Add the notified field to the payment profiles table.
 */
function ms_authorizenet_update_7101(&$sandbox) {
  if (!db_field_exists('ms_authorizenet_payment_profiles', 'notified')) {
    db_add_field('ms_authorizenet_payment_profiles', 'notified', array(
      'type' => 'int',
      'description' => 'When the user was last notified of card expiration',
      'disp_width' => '11',
      'not null' => TRUE,
      'default' => 0,
    ));

    $notified = variable_get('ms_authorizenet_last_expiration_reminder', 0);
    db_query("UPDATE {ms_authorizenet_payment_profiles} SET notified = :notified", array(':notified' => $notified));
    variable_del('ms_authorizenet_last_expiration_reminder');
  }

  return t('Successfully added the notified field to the ms_authorizenet_payment_profiles database table.');
}
