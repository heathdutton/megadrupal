<?php

/**
 * @file
 * MoneySuite VoguePay Gateway
 *
 * Original author: Leighton Whiting - Released under GENERAL PUBLIC LICENSE
 * Current maintenance by multiple MoneySuite users.
 * Re: new initiative: https://www.drupal.org/node/2315653 
 */

/**
 * Implements hook_help().
 */
function ms_voguepay_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/moneysuite/gateways/ms_voguepay":
    case "admin/help#ms_voguepay":
      $output = '<p>' . t("VoguePay Payment Gateway Module for MoneySuite. This
      allows you to receive payments via your VoguePay account.") . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_menu().
 */
function ms_voguepay_menu() {
  $items = array();
  $items['ms/checkout/voguepay'] = array(
    'title' => 'Checkout',
    'page callback' => 'ms_voguepay_initiate_payment',
    'access callback' => TRUE,
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  $items['ms_voguepay/backend/%'] = array(
    'page callback' => 'ms_voguepay_backend_page',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['ms_voguepay/cancel/%'] = array(
    'title' => 'Cancel Payments',
    'page callback' => 'ms_voguepay_cancel_page',
    'page arguments' => array(2),
    'access callback' => 'ms_core_cancel_test',
    'access arguments' => array(2),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Admin Settings Form.
 */
function ms_voguepay_admin() {
  $form['main'] = array(
    '#type' => 'fieldset',
    '#title' => t('Main Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['main']['ms_voguepay_merchant_id'] = array(
    '#type' => 'textfield',
    '#title' => t('VoguePay Merchant ID'),
    '#default_value' => variable_get('ms_voguepay_merchant_id', ''),
  );
  $form['main']['ms_voguepay_demo'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable test mode'),
    '#default_value' => variable_get('ms_voguepay_demo', FALSE),
    '#description' => t("This will use the demo account that VoguePay provides. You may use any email address and password to make a payment when this is turned on. Use failed@anydomain.com to simulate a failed payment.")
  );

  $form['main']['ms_voguepay_jump_page_text'] = array(
    '#type' => 'textarea',
    '#title' => t('Jump Page Text'),
    '#description' => t("Fill in the text you wish the user to see for the VoguePay Jump page. They will be redirected automatically if Javascript is enabled, otherwise a button is provided for them to click."),
    '#required' => FALSE,
    '#default_value' => variable_get('ms_voguepay_jump_page_text',
    "Please wait for a few seconds, your registration is being processed and you will be redirected to VoguePay's secure payment page.
    <br/><br/>
    If you are not automatically redirected to the VoguePay payment page within 5 seconds, click below:
    <br/><br/>"),
  );
  $form['main']['ms_voguepay_jump_page_timeout'] = array(
    '#type' => 'textfield',
    '#title' => t('Jump Page Timeout'),
    '#description' => t("How many seconds should the Jump Page wait until it automatically redirects?"),
    '#required' => TRUE,
    '#default_value' => variable_get('ms_voguepay_jump_page_timeout', 0),
  );

  return $form;
}

/**
 * Implements hook_ms_core_payment_gateway().
 */
function ms_voguepay_ms_core_payment_gateway() {
  $gateway['ms_voguepay'] = array(
    'name' => 'VoguePay',
    'display_name' => t('Credit Card'),
    'description' => t('Pay by Credit Card'),
    'cards' => array('visa', 'electron', 'mc', 'maestro', 'switch', 'solo'),
    'module' => 'ms_voguepay',
    'currency' => array('NGN'),
    'checkout_path' => 'ms/checkout/voguepay',
    'recurring' => FALSE, // @todo - Apparently they do support recurring, but documentation is sparse. https://voguepay.com/developers
    'settings' => ms_voguepay_admin(),
  );

  return $gateway;
}

/**
 * Process the IPN by adding a Payment record to an Order
 */
function ms_voguepay_backend_page($unique_key) {
  ms_core_log('ms_voguepay', t('IPN from VoguePay: !txn',
      array('!txn' => ms_core_print_r($_POST))));
  if (empty($_POST['transaction_id'])) {
    exit;
  }

  $order = ms_core_order_load_unique($unique_key);

  if (!$order) {
    ms_core_log_error('ms_voguepay', t('Could not load order. Key: !order',
      array('!order' => $unique_key)));
    exit;
  }

  // get the full transaction details as an json from voguepay
  $json = file_get_contents('https://voguepay.com/?v_transaction_id='.$_POST['transaction_id'].'&type=json');
  // create new array to store our transaction detail
  $transaction = json_decode($json, true);

  /*
  Now we have the following keys in our $transaction array
  $transaction['merchant_id'],
  $transaction['transaction_id'],
  $transaction['email'],
  $transaction['total'],
  $transaction['merchant_ref'],
  $transaction['memo'],
  $transaction['status'],
  $transaction['date'],
  $transaction['referrer'],
  $transaction['method']
  */

  if ($transaction['total'] == 0) {
    exit;
  }

  if ($transaction['status'] != 'Approved') {
    // There was some error with the transaction. Log the error in the history.
    ms_core_add_history_item($order, 0, t('Transaction not Approved.'), TRUE);
    ms_core_log_error('ms_voguepay', t('Transaction not Approved. Transaction: !txn Order: !order',
      array('!txn' => ms_core_print_r($transaction), '!order' => ms_core_print_r($order))));
  }

  if ($transaction['total'] != $order->amount) {
    // Possible hacking attempt. Log it.
    ms_core_add_history_item($order, 0, t('Total does not match order.'), TRUE);
    ms_core_log_error('ms_voguepay', t('Possible hack attempt. Total mismatch. Transaction: !txn Order: !order',
      array('!txn' => ms_core_print_r($transaction), '!order' => ms_core_print_r($order))));
  }

  // Insert the Payment to the order
  $payment = ms_core_new_payment($order->oid, 'ms_voguepay', $order->order_type, $order->amount, $order->currency);
  $payment->transaction = $transaction['transaction_id'];
  $payment->data = $transaction;


  if ($order->order_type == 'recurring') {
    $payment->type = 'rec_signup';
    $payment->recurring_id = ms_core_generate_recurring_id();
  }

  ms_core_enter_payment($payment);
  ms_core_add_history_item($order, 0, t('A payment has been accepted via VoguePay.'), TRUE);

  exit;
}

/**
 * Prep Variables for VoguePay and Send
 */
function ms_voguepay_checkout_form($form, &$form_state, $order) {
  $form = array();

  $data = array(
    'v_merchant_id' => variable_get('ms_voguepay_demo', TRUE) ? 'demo' : variable_get('ms_voguepay_merchant_id', ''),
    'merchant_ref' => $order->oid,
    'memo' => ms_core_get_order_title($order, 64),
    'item_1' => ms_core_get_order_title($order, 64),
    'description_1' => '',
    'price_1' => $order->amount,
    'notify_url' => url('ms_voguepay/backend/' . $order->unique_key, array('absolute' => TRUE)),
    'success_url' => url('ms_gateway/landing/' . $order->unique_key, array('absolute' => TRUE)),
    'fail_url' => url('ms/checkout', array('absolute' => TRUE)),
  );

  if ($order->order_type == 'recurring' && FALSE) {
    $data['recurrent'] = 'true';
    // @todo - We need to calculate the number of days from these.
    // Also, trial periods aren't supported from what I can tell.
    // And no way to cancel that I can see.
    // $data['interval'] = $order->recurring_schedule['main_length'] * $order->recurring_schedule['main_unit'];
  }

  foreach ($data as $name => $value) {
    $form[$name] = array(
      '#type' => 'hidden',
      '#value' => $value,
    );
  }

  $form['#action'] = 'https://voguepay.com/pay/';
  $form['submit'] = array(
    '#type' => 'submit',
    '#name' => 'ms_voguepay_submit',
    '#value' => t('Continue'),
  );

  return $form;
}

/**
 * Initiate a Payment
 */
function ms_voguepay_initiate_payment() {
  // Stop the caching
  $GLOBALS['conf']['cache'] = FALSE;

  // Load the order
  if (!$order = ms_core_load_session_order()) {
    // Error
    return t('There was an error with the checkout');
  }

  // Set the order status
  ms_core_set_order_status($order, 'pending');

  $timeout = variable_get('ms_voguepay_jump_page_timeout', 0) * 1000;
  $js = "
  (function ($) {
    window.setTimeout(function() {
      $('#ms-voguepay-checkout-form').submit();
    }, $timeout);
  })(jQuery);
  ";
  drupal_add_js($js, array('type' => 'inline', 'scope' => 'footer'));

  // Generate some HTML
  $html = variable_get('ms_voguepay_jump_page_text', "Please wait for a few seconds, your purchase is being processed and you will be redirected to VoguePay's secure payment page.
    <br/><br/>
    If you are not automatically redirected to the VoguePay payment page within 5 seconds, click below:
    <br/><br/>");

  // Start the Payment
  $form = drupal_get_form('ms_voguepay_checkout_form', $order);
  $html .= drupal_render($form);

  return $html;
}
