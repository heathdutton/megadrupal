<?php

/**
 * @file
 * Integrates First Data redirected payment service.
 */

/**
 * Implements hook_init().
 */
function ms_ibis_init() {
  include_once 'Merchant.php';
}

/**
 * Implements hook_menu().
 */
function ms_ibis_menu() {
  $items = array();

  $items['ms/checkout/ms_ibis'] = array(
    'title' => 'Checkout',
    'page callback' => 'ms_ibis_checkout',
    'access callback' => 'ms_core_view_page_access_test',
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  $items['ms_ibis/complete'] = array(
    'title' => 'Order complete',
    'page callback' => 'ms_ibis_complete',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'ms_ibis.pages.inc',
  );
  $items['ms_ibis/failed'] = array(
    'title' => 'Order failed',
    'page callback' => 'ms_ibis_failed',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'ms_ibis.pages.inc',
  );
  /* Not implemented yet.
  $items['ms_ibis/make/dms'] = array(
    'title' => 'Process IBIS DMS payment',
    'page callback' => 'ms_ibis_make_dms',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'ms_ibis.dms.inc',
  );
  $items['admin/moneysuite/orders/view/%ms_core_order_key/dms'] = array(
    'title' => 'Make IBIS DMS payment',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('ms_ibis_make_dms_form', 4),
    'type' => MENU_LOCAL_TASK,
    'file' => 'ms_ibis.dms.inc',
  );
  */

  return $items;
}

/**
 * Implements hook_ms_core_payment_gateway().
 */
function ms_ibis_ms_core_payment_gateway() {
  $gateways['ms_ibis'] = array(
    'name' => 'First Data (IBIS)',
    'display_name' => t('Credit Card'),
    'description' => t('Pay by Credit Card'),
    'cards' => array('visa', 'mc', 'amex', 'discover', 'paypal'),
    'module' => 'ms_ibis',
    'checkout_path' => 'ms/checkout/ms_ibis',
    'recurring' => FALSE,
    'settings' => ms_ibis_admin(),
    'refund_callback' => 'ms_ibis_refund',
    'currency' => array('LVL', 'EUR', 'USD', 'RSD', 'SKK', 'LTL', 'EEK', 'RUB', 'YUM'),
  );

  return $gateways;
}

/**
 * Admin Settings form.
 */
function ms_ibis_admin() {
  $form = array();

  $form['server'] = array(
    '#type' => 'fieldset',
    '#title' => t('Server settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['server']['ms_ibis_server'] = array(
    '#type' => 'select',
    '#title' => t('IBIS server'),
    '#options' => array(
      'test' => 'Test',
      'live' => 'Live',
    ),
    '#default_value' => variable_get('ms_ibis_server', 'test'),
  );
  $form['server']['server_url_live'] = array(
    '#type' => 'textfield',
    '#title' => t('Server url live'),
    '#default_value' => variable_get('server_url_live', ''),
    '#description' => t('Url for live server if selected "Live" in "IBIS server"'),
  );
  $form['server']['client_url_live'] = array(
    '#type' => 'textfield',
    '#title' => t('Client url live'),
    '#default_value' => variable_get('client_url_live', ''),
    '#description' => t('Url for live client if selected "Live" in "IBIS server"'),
  );
  $form['server']['server_url_test'] = array(
    '#type' => 'textfield',
    '#title' => t('Server url test'),
    '#default_value' => variable_get('server_url_test', 'https://secureshop-test.firstdata.lv:8443/ecomm/MerchantHandler'),
    '#description' => t('Url for test server if selected "Test" in "IBIS server"'),
  );
  $form['server']['client_url_test'] = array(
    '#type' => 'textfield',
    '#title' => t('Client url test'),
    '#default_value' => variable_get('client_url_test', 'https://secureshop-test.firstdata.lv/ecomm/ClientHandler'),
    '#description' => t('Url for test client if selected "Test" in "IBIS server"'),
  );
  // 428=LVL 978=EUR 840=USD 941=RSD 703=SKK 440=LTL 233=EEK 643=RUB
  // 891=YUM.
  $form['server']['ms_ibis_currency'] = array(
    '#type' => 'select',
    '#title' => t('Currency'),
    '#options' => array(
      '978' => 'EUR',
      '428' => 'LVL',
      '840' => 'USD',
    ),
    '#default_value' => variable_get('ms_ibis_currency', 'EUR'),
  );
  $form['server']['ms_ibis_payment_type'] = array(
    '#type' => 'select',
    '#title' => t('Payment method'),
    '#options' => array(
      'sms' => 'SMS',
      //'dms' => 'DMS', Disabled this for now.
    ),
    '#default_value' => variable_get('ms_ibis_payment_type', 'sms'),
  );
  $form['server']['ms_ibis_cert_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Full path to keystore file'),
    '#default_value' => variable_get('ms_ibis_cert_path', ''),
    '#description' => t("This should be the full path to the certificate, and it should be below the public directory for security purposes.")
  );
  $form['server']['ms_ibis_cert_pass'] = array(
    '#type' => 'textfield',
    '#title' => t('Keystore password'),
    '#default_value' => variable_get('ms_ibis_cert_pass', ''),
  );
  $form['server']['server_complete_callback'] = array(
    '#type' => 'item',
    '#title' => t('returnOkUrl'),
    '#markup' => url('ms_ibis/complete', array('absolute' => TRUE)),
    '#description' => t("Copy and paste this url in the returnOkUrl field in your merchant settings page."),
  );
  $form['server']['server_fail_callback'] = array(
    '#type' => 'item',
    '#title' => t('returnFailUrl'),
    '#markup' => url('ms_ibis/fail', array('absolute' => TRUE)),
    '#description' => t("Copy and paste this url in the returnFailUrl field in your merchant settings page."),
  );
  $form['server']['server_ip'] = array(
    '#type' => 'item',
    '#title' => t('IP Address'),
    '#markup' => $_SERVER['SERVER_ADDR'],
    '#description' => t("Copy and paste this url in the IP Address field in your merchant settings page."),
  );

  return $form;
}

/**
 * Page Callback: Redirect to IBIS.
 */
function ms_ibis_checkout() {
  // Stop the caching
  $GLOBALS['conf']['cache'] = FALSE;

  if (!$order = ms_core_load_session_order()) {
    // Error
    return t('There was an error with the checkout');
  }

  switch (variable_get('ms_ibis_payment_type', 'dms')) {
    case 'dms':
      module_load_include('inc', 'ms_ibis', 'ms_ibis.dms');
      ms_ibis_process_dms($order);
      break;

    case 'sms':
      module_load_include('inc', 'ms_ibis', 'ms_ibis.sms');
      ms_ibis_process_sms($order);
      break;
  }
}

/**
 * Implements hook_cron().
 */
function ms_ibis_cron() {
  $ecomm_server_url = (variable_get('ms_ibis_server', 'test') == 'test') ? variable_get('server_url_test', '') : variable_get('server_url_live', '');

  if (variable_get("IBIS_lastclosedate", 0) != format_date(REQUEST_TIME, 'custom', 'Ymd')) {
    $merchant = new Merchant($ecomm_server_url, variable_get('ms_ibis_cert_path', ''), variable_get('ms_ibis_cert_pass', ''), 1);
    $resp = $merchant->closeDay();

    ms_core_log('ms_ibis', 'IBIS close business day: ' . $resp);
    variable_set("IBIS_lastclosedate", format_date(REQUEST_TIME, 'custom', 'Ymd'));

    // RESULT: OK RESULT_CODE: 500 FLD_075: 4 FLD_076: 6 FLD_087: 40.
    // FLD_088: 60.
    if (strstr($resp, 'RESULT:')) {
      $result = explode('RESULT: ', $resp);
      $result = preg_split('/\r\n|\r|\n/', $result[1]);
      $result = $result[0];
    } else {
      $result = '';
    }

    if (strstr($resp, 'RESULT_CODE:')) {
      $result_code = explode('RESULT_CODE: ', $resp);
      $result_code = preg_split('/\r\n|\r|\n/', $result_code[1]);
      $result_code = $result_code[0];
    } else {
      $result_code = '';
    }

    if (strstr($resp, 'FLD_075:')) {
      $count_reversal = explode('FLD_075: ', $resp);
      $count_reversal = preg_split('/\r\n|\r|\n/', $count_reversal[1]);
      $count_reversal = $count_reversal[0];
    } else {
      $count_reversal = '';
    }

    if (strstr($resp, 'FLD_076:')) {
      $count_transaction = explode('FLD_076: ', $resp);
      $count_transaction = preg_split('/\r\n|\r|\n/', $count_transaction[1]);
      $count_transaction = $count_transaction[0];
    } else {
      $count_transaction = '';
    }

    if (strstr($resp, 'FLD_087:')) {
      $amount_reversal = explode('FLD_087: ', $resp);
      $amount_reversal = preg_split('/\r\n|\r|\n/', $amount_reversal[1]);
      $amount_reversal = $amount_reversal[0];
    } else {
      $amount_reversal = '';
    }

    if (strstr($resp, 'FLD_088:')) {
      $amount_transaction = explode('FLD_088: ', $resp);
      $amount_transaction = preg_split('/\r\n|\r|\n/', $amount_transaction[1]);
      $amount_transaction = $amount_transaction[0];
    } else {
      $amount_transaction = '';
    }

    $now = format_date(REQUEST_TIME, 'custom', 'Y-m-d H:i:s');
    db_insert('ms_ibis_batch')
      ->fields(array(
        'result' => $result,
        'result_code' => $result_code,
        'count_reversal' => $count_reversal,
        'count_transaction' => $count_transaction,
        'amount_reversal' => $amount_reversal,
        'amount_transaction' => $amount_transaction,
        'close_date' => $now,
        'response' => $resp,
      ))
      ->execute();
  }
}
