<?php

/**
 * @file
 * MoneySuite Role Discounts.
 *
 * Original author: Leighton Whiting - Released under GENERAL PUBLIC LICENSE 
 * Current maintenance by multiple MoneySuite users.
 * Re: new initiative: https://www.drupal.org/node/2315653
 */

/**
 * Implements hook_help().
 */
function ms_role_discounts_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/moneysuite/ms_role_discounts":
    case "admin/help#ms_role_discounts":
      $output .= '<p>' . t("MoneySuite Role Discounts Module. This allows you to set automatic Discounts or
      Fees that will be applied to an order based on a user's role. The discount can be a fixed amount or
      a percentage.") . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_menu().
 */
function ms_role_discounts_menu() {
  $items = array();

  $items['admin/moneysuite/ms_role_discounts'] = array(
    'title' => 'Role Discounts/Fees',
    'description' => 'Add a discount or fee to all products purchased by certain roles',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_role_discounts_admin'),
    'access arguments' => array('administer moneysuite settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_ms_core_overrides().
 */
function ms_role_discounts_ms_core_overrides() {
  return array(
    'ms_role_discounts' => array(
      'title' => t('Role Discounts'),
      'form' => 'ms_role_discounts_admin',
    ),
  );
}

/**
 * Form constructor for the Admin Settings Form.
 */
function ms_role_discounts_admin($form, &$form_state) {
  $form['main'] = array(
    '#type' => 'fieldset',
    '#title' => t('Main Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#ms_override' => TRUE,
  );
  $form['main']['ms_role_discounts_scope'] = array(
    '#type' => 'radios',
    '#title' => t('Scope'),
    '#default_value' => variable_get('ms_role_discounts_scope', 'recurring'),
    '#options' => ms_core_get_scopes(),
    '#required' => TRUE,
    '#ms_override' => TRUE,
    '#description' => t('Whether the discount should affect the first payment only or all payments. Only applies for Recurring Payments.'),
  );

  $roles = user_roles();
  foreach ($roles as $rid => $name) {
    $form['role_discounts_' . $rid] = array(
      '#type' => 'fieldset',
      '#title' => t('Discounts/Fees for @name', array('@name' => $name)),
      '#collapsible' => TRUE,
      '#ms_override' => TRUE,
      '#collapsed' => variable_get('ms_role_discounts_amount_' . $rid, 0) == 0 ? TRUE : FALSE,
    );

    $form['role_discounts_' . $rid]['ms_role_discounts_name_' . $rid] = array(
      '#type' => 'textfield',
      '#title' => t('Display Label for Discount/Fee in Cart and Order'),
      '#size' => 32,
      '#maxlength' => 64,
      '#default_value' => variable_get('ms_role_discounts_name_' . $rid, t('Role Discount')),
      '#description' => t("This is what will appear next to the Discount/Fee amount on orders."),
      '#required' => TRUE,
      '#ms_override' => TRUE,
    );
    $form['role_discounts_' . $rid]['ms_role_discounts_amount_' . $rid] = array(
      '#type' => 'textfield',
      '#title' => t('Discount/Fee Amount to apply to orders by default'),
      '#size' => 32,
      '#maxlength' => 64,
      '#default_value' => variable_get('ms_role_discounts_amount_' . $rid, 0),
      '#description' => t("This discount/fee will apply to all orders by default. Use a negative value to give a discount, and a positive value to give a fee."),
      '#required' => TRUE,
      '#ms_override' => TRUE,
    );
    $form['role_discounts_' . $rid]['ms_role_discounts_type_' . $rid] = array(
      '#type' => 'radios',
      '#title' => t('Percentage or Fixed Amount?'),
      '#default_value' => variable_get('ms_role_discounts_type_' . $rid, 'percentage'),
      '#options' => array(
        'percentage' => t('Percentage'),
        'fixed' => t('Fixed'),
      ),
      '#required' => TRUE,
      '#ms_override' => TRUE,
    );
  }

  return system_settings_form($form);
}

/**
 * Implements hook_ms_cart_added()
 */
function ms_role_discounts_ms_cart_added($cart, $product) {
  global $user;

  foreach ($user->roles as $rid => $name) {
    $discount_amount = ms_core_variable_get('ms_role_discounts_amount_' . $rid, 0, $product);

    if ($discount_amount) {
      $adjustment = new MsAdjustment();
      $adjustment->id = 'ms_role_discounts_' . $rid;
      $adjustment->product_id = NULL;

      // Add the product specific settings if applicable.
      if (!empty($product->cart_product_id)) {
        $adjustment->id = 'ms_role_discounts_' . $rid . '_' . $product->cart_product_id;
        $adjustment->product_id = $product->cart_product_id;
      }

      $adjustment->display = ms_core_variable_get('ms_role_discounts_name_' . $rid, '', $product);
      $adjustment->type = ms_core_variable_get('ms_role_discounts_type_' . $rid, 'percentage', $product);
      $adjustment->value = ms_core_variable_get('ms_role_discounts_amount_' . $rid, 0, $product);
      $adjustment->weight = 0;
      $adjustment->scope = ms_core_variable_get('ms_role_discounts_scope', 'recurring', $product);

      // Add the discount to the order.
      if ($adjustment->value) {
        ms_core_add_cart_adjustment($adjustment, TRUE);
      }
    }
  }
}
