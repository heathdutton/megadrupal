<?php

/**
 * @file
 */

/**
 * Implements hook_uninstall().
 */
function ms_gift_cards_uninstall() {
  // Delete related variables all at once.
  db_delete('variable')
    ->condition('name', 'ms_gift_cards_%%', 'LIKE')
    ->execute();
}

/**
 * Implements hook_schema().
 */
function ms_gift_cards_schema() {
  $schema['ms_gift_cards'] = array(
    'description' => 'Used to record all gift memberships',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'description' => 'The unique ID (primary)',
        'not null' => TRUE,
      ),
      'code' => array(
        'type' => 'varchar',
        'description' => 'The code for this gift card',
        'length' => '128',
        'not null' => TRUE,
      ),
      'admin_note' => array(
        'type' => 'varchar',
        'description' => 'The admin note associated with this gift card.',
        'length' => '256',
        'not null' => TRUE,
        'default' => '',
      ),
      'value' => array(
        'type' => 'numeric',
        'precision' => 6,
        'scale' => 2,
        'not null' => TRUE,
        'default' => 100,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => '12',
        'not null' => TRUE,
        'default' => 'percentage',
      ),
      'scope' => array(
        'description' => 'Whether the adjustment should apply to whole order or just first payment',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => 'recurring',
      ),
      'activated' => array(
        'type' => 'int',
        'description' => 'The date the card was activated',
        'not null' => TRUE,
        'default' => 0,
      ),
      'redeemed' => array(
        'type' => 'int',
        'description' => 'The date the card was redeemed',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'type' => 'int',
        'description' => 'The date the card was created',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'type' => 'varchar',
        'description' => 'The status of the card',
        'length' => '32',
        'not null' => TRUE,
      ),
      'amount' => array(
        'type' => 'numeric',
        'description' => 'The Price',
        'precision' => '10',
        'scale' => '2',
        'not null' => TRUE,
      ),
      'oid' => array(
        'type' => 'int',
        'description' => 'The unique order ID',
        'not null' => TRUE,
      ),
      'affiliate' => array(
        'type' => 'int',
        'description' => 'The affiliate ID',
        'not null' => TRUE,
      ),
      'activated_user' => array(
        'type' => 'int',
        'description' => 'The activated user ID',
        'not null' => TRUE,
      ),
      'redeemed_user' => array(
        'type' => 'int',
        'description' => 'The redeemed user ID',
        'not null' => TRUE,
      ),
      'product_id' => array(
        'type' => 'varchar',
        'description' => 'The id of the product',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'module' => array(
        'type' => 'varchar',
        'description' => 'The name of module',
        'length' => '64',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

// ======================================
// Updates:
// ======================================

/**
 * Change the product_id field to varchar in the ms_gift_cards table
 */
function ms_gift_cards_update_7101(&$sandbox) {
  db_change_field('ms_gift_cards', 'product_id', 'product_id', array(
    'type' => 'varchar',
    'description' => 'The id of the product',
    'length' => '255',
    'not null' => TRUE,
    'default' => '',
  ));
  return t('Successfully changed the product_id field in the ms_gift_cards table to varchar.');
}

/**
 * Add various new columns to the ms_gift_cards table.
 */
function ms_gift_cards_update_7201(&$sandbox) {
  if (db_field_exists('ms_gift_cards', 'admin_note')) {
    db_drop_field('ms_gift_cards', 'admin_note');
  }
  if (!db_field_exists('ms_gift_cards', 'admin_note')) {
    db_add_field('ms_gift_cards', 'admin_note', array(
      'type' => 'varchar',
      'description' => 'The admin note associated with this gift card.',
      'length' => '256',
      'not null' => TRUE,
      'default' => '',
    ));
  }

  if (db_field_exists('ms_gift_cards', 'value')) {
    db_drop_field('ms_gift_cards', 'value');
  }
  if (!db_field_exists('ms_gift_cards', 'value')) {
    db_add_field('ms_gift_cards', 'value', array(
      'type' => 'numeric',
      'precision' => 6,
      'scale' => 2,
      'not null' => TRUE,
      'default' => 100,
    ));
  }

  if (db_field_exists('ms_gift_cards', 'type')) {
    db_drop_field('ms_gift_cards', 'type');
  }
  if (!db_field_exists('ms_gift_cards', 'type')) {
    db_add_field('ms_gift_cards', 'type', array(
      'type' => 'varchar',
      'length' => '12',
      'not null' => TRUE,
      'default' => 'percentage',
    ));
  }

  if (db_field_exists('ms_gift_cards', 'scope')) {
    db_drop_field('ms_gift_cards', 'scope');
  }
  if (!db_field_exists('ms_gift_cards', 'scope')) {
    db_add_field('ms_gift_cards', 'scope', array(
      'description' => 'Whether the adjustment should apply to whole order or just first payment',
      'type' => 'varchar',
      'length' => 32,
      'not null' => TRUE,
      'default' => 'recurring',
    ));
  }

  return t('Successfully added new columns to the ms_gift_cards table.');
}