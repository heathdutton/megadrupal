<?php

/**
 * @file
 * Allows the user to create generic products.
 *
 * Original author: Leighton Whiting - Released under GENERAL PUBLIC LICENSE 
 * Current maintenance by multiple MoneySuite users.
 * Re: new initiative: https://www.drupal.org/node/2315653
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function ms_product_kit_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ms_products' && $plugin == 'product_types') {
    return 'plugins/product_types';
  }
}

/**
 * Implements hook_field_info().
 *
 * Provides the description of the field.
 */
function ms_product_kit_field_info() {
  return array(
    'ms_product_kit_product_plan' => array(
      'label' => t('MoneySuite Product Plan Reference'),
      'description' => t('Link a MS Product to this entity.'),
      'default_widget' => 'ms_product_kit_product_plan_widget',
      'default_formatter' => 'ms_product_kit_product_plan_link',
    ),
  );
}

/**
 * Implements hook_field_is_empty().
 */
function ms_product_kit_field_is_empty($item, $field) {
  return empty($item['pid']);
}

/**
 * Implements hook_field_formatter_info().
 */
function ms_product_kit_field_formatter_info() {
  return array(
    'ms_product_kit_product_plan_link' => array(
      'label' => t('Show a purchase link for the product'),
      'field types' => array('ms_product_kit_product_plan'),
    ),
    'ms_product_kit_product_plan_button' => array(
      'label' => t('Show a purchase button for the product'),
      'field types' => array('ms_product_kit_product_plan'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function ms_product_kit_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'ms_product_kit_product_plan_link':
      foreach ($items as $delta => $item) {
        $element[$delta]['#markup'] = theme('ms_product_kit_product_plan_link', array('item' => $item));
      }
      break;
    case 'ms_product_kit_product_plan_button':
      foreach ($items as $delta => $item) {
        $element[$delta]['#markup'] = theme('ms_product_kit_product_plan_button', array('item' => $item));
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_theme().
 */
function ms_product_kit_theme() {
  return array(
    // Themes for the formatters.
    'ms_product_kit_product_plan_link' => array(
      'render element' => 'item',
    ),
    'ms_product_kit_product_plan_button' => array(
      'render element' => 'item',
    ),
  );
}

/**
 * Theme function for ms_product_kit_product_plan_link field formatter.
 */
function theme_ms_product_kit_product_plan_link($variables) {
  $item = $variables['item'];
  $output = "";
  if ($plan = ms_products_plan_load($item['pid'])) {
    $output .= "<div class='ms_product_kit-plan-link'>";
    $output .= "<div class='ms_product_kit-plan-link-title'>" . $plan->name . "</div>";
    if ($product = ms_core_get_module_product($plan->bundle . '-' . $plan->sku)) {
      $output .= l(t('Add to cart'), 'ms_product/purchase/' . $plan->sku);
    }
    $output .= "</div>";
  }

  return $output;
}

/**
 * Theme function for ms_product_kit_product_plan_link field formatter.
 */
function theme_ms_product_kit_product_plan_button($variables) {
  $item = $variables['item'];
  $output = "";
  if ($plan = ms_products_plan_load($item['pid'])) {
    $output .= "<div class='ms_product_kit-plan-link'>";
    if ($product = ms_core_get_module_product($plan->bundle . '-' . $plan->sku)) {
      $output .= ms_core_get_add_to_cart_button($product);
    }
    $output .= "</div>";
  }

  return $output;
}

/**
 * Implements hook_field_widget_info().
 */
function ms_product_kit_field_widget_info() {
  return array(
    'ms_product_kit_product_plan_widget' => array(
      'label' => t('MS Product'),
      'field types' => array('ms_product_kit_product_plan'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function ms_product_kit_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  switch ($instance['widget']['type']) {
    case 'ms_product_kit_product_plan_widget':
      $products = ms_products_get_plans_list();
      $list = array();
      if (!$instance['required']) {
        $list[0] = 'None';
      }

      foreach ($products as $key => $value) {
        $list[$key] = $value;
      }
      $element['pid'] = array(
        '#type' => 'select',
        '#title' => t('MS Product'),
        '#options' => $list,
        '#attributes' => array('class' => array('ms_product_kit_product_plan')),
        '#required' => $instance['required'],
        '#default_value' => isset($items[$delta]['pid']) ? $items[$delta]['pid'] : '',
        '#delta' => $delta,
      );
      break;
  }
  return $element;
}

/**
 * Implements hook_field_widget_error().
 */
function ms_product_kit_field_widget_error($element, $error, $form, &$form_state) {
  switch ($error['error']) {
    case 'ms_product_kit_invalid':
      form_error($element, $error['message']);
      break;
  }
}

