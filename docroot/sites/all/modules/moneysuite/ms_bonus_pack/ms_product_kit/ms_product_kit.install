<?php

/**
 * @file
 * MS Product Kit Install File
 */

/**
 * Implements hook_uninstall().
 */
function ms_product_kit_uninstall() {
  // Delete related variables all at once.
  db_delete('variable')
    ->condition('name', 'ms_product_kit_%%', 'LIKE')
    ->execute();
}

/**
 * Implements hook_field_schema().
 *
 * This defines the actual database schema of the field, using the format
 * used by the Schema API.
 *
 * The actual data we store here is just one 7-character element, even
 * though the widget presents the three portions separately.
 *
 * @see hook_field_schema()
 * @link schemaapi Schema API @endlink
 */
function ms_product_kit_field_schema($field) {
  $columns = array(
    'pid' => array(
      'type' => 'varchar',
      'default' => '',
      'length' => 255,
      'not null' => TRUE,
    ),
  );
  $indexes = array(
    'pid' => array('pid'),
  );
  return array(
    'columns' => $columns,
    'indexes' => $indexes,
  );
}

// ======================================
// Updates:
// ======================================

/**
 * Change the field type to varchar instead of integer.
 */
function ms_product_kit_update_7101(&$sandbox) {
  field_cache_clear();
  $fields = field_info_fields();
  foreach ($fields as $field_name => $field) {
    if ($field['type'] == 'ms_product_kit_product_plan' && $field['storage']['type'] == 'field_sql_storage') {
      foreach ($field['storage']['details']['sql'] as $table_info) {
        foreach ($table_info as $table_name => $columns) {
          $column_name = _field_sql_storage_columnname($field_name, 'pid');
          db_change_field($table_name, $column_name, $column_name, array(
            'type' => 'varchar',
            'default' => '',
            'length' => 255,
            'not null' => TRUE,
          ));
        }
      }
    }
  }
  field_cache_clear();
  return t('Successfully changed the field type to varchar.');
}