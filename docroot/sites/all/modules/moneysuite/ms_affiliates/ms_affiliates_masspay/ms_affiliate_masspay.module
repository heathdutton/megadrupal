<?php

/**
 * @file
 * Module that allows for payout through PayPal MassPay
 *
 * Original author: Leighton Whiting - Released under GENERAL PUBLIC LICENSE
 * Current maintenance by multiple MoneySuite users.
 * Re: new initiative: https://www.drupal.org/node/2315653 
 */

// ======================================
// Main Functions:
// ======================================

/**
 * Implements hook_help().
 */
function ms_affiliate_masspay_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#ms_affiliate_masspay":
      $output = '<p>' . t("Provides integration with PayPal MassPay so you can pay affiliates in bulk.") . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_menu().
 */
function ms_affiliate_masspay_menu() {
  $items = array();

  $items['admin/moneysuite/ms_affiliate_masspay'] = array(
    'title' => 'MassPay Settings',
    'description' => 'Set the various MassPay Settings here',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_masspay_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/people/pay_affiliates/masspay'] = array(
    'title' => 'MassPay',
    'page callback' => 'ms_affiliate_masspay_masspay_page',
    'access arguments' => array('administer affiliates'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );

  return $items;
}

// ======================================
// Administration Page:
// ======================================

/**
 * Show the admin form options
 */
function ms_affiliate_masspay_admin($form, &$form_state) {
  $form['main'] = array(
    '#type' => 'fieldset',
    '#title' => t('Main Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['main']['ms_affiliate_masspay_api_username'] = array(
    '#type' => 'textfield',
    '#title' => t('API Username'),
    '#default_value' => variable_get('ms_affiliate_masspay_api_username', ''),
    '#required' => TRUE,
  );
  $form['main']['ms_affiliate_masspay_api_password'] = array(
    '#type' => 'textfield',
    '#title' => t('API Password'),
    '#default_value' => variable_get('ms_affiliate_masspay_api_password', ''),
    '#required' => TRUE,
  );
  $form['main']['ms_affiliate_masspay_api_signature'] = array(
    '#type' => 'textfield',
    '#title' => t('API Signature'),
    '#default_value' => variable_get('ms_affiliate_masspay_api_signature', ''),
    '#required' => TRUE,
  );
  $form['main']['ms_affiliate_masspay_endpoint'] = array(
    '#type' => 'select',
    '#title' => t('Mode'),
    '#default_value' => variable_get('ms_affiliate_masspay_endpoint', 'https://api-3t.paypal.com/nvp'),
    '#options' => array(
      'https://api-3t.$environment.paypal.com/nvp' => t('Sandbox'),
      'https://api-3t.paypal.com/nvp' => t('Live'),
    ),
    '#required' => TRUE,
  );
  $form['main']['ipn_url'] = array(
    '#type' => 'markup',
    '#markup' => url('ms_paypal_wpp/ipn', array('absolute' => TRUE)),
    '#title' => t("IPN URL"),
    '#description' => t("You must set the IPN URL in your PayPal Account to the URL listed here."),
  );

  return system_settings_form($form);
}

// ======================================
// Functions
// ======================================

/**
 * Implements hook_ms_affiliates_bulk_options()
 */
function ms_affiliate_masspay_ms_affiliates_bulk_options() {
  return array('masspay' => t("Pay via MassPay"));
}

/**
 * Shows the form containing the affiliates
 */
function ms_affiliate_masspay_masspay_page() {
  if (isset($_SESSION['ms_affiliates_bulk_uids']) AND $uids = $_SESSION['ms_affiliates_bulk_uids'] AND is_array($uids)) {
    return drupal_get_form('ms_affiliate_masspay_masspay_form', $uids);
  }

  drupal_not_found();
}

/**
 * Builds the form to pay the selected uids
 */
function ms_affiliate_masspay_masspay_form($form, &$form_state, $uids) {
  $currency = variable_get('ms_affiliates_default_currency', 'USD');
  $form['currency'] = array(
    '#type' => 'select',
    '#title' => t('Currency'),
    '#options' => ms_core_get_currencies(),
    '#default_value' => variable_get('ms_affiliates_default_currency', 'USD'),
    '#description' => t("The Currency to use for these transactions."),
    '#required' => TRUE,
  );
  $form['masspay']['accounts'] = array(
    '#type' => 'fieldset',
    '#tree' => TRUE,
    '#title' => t('Set up MassPay transaction'),
  );

  foreach ($uids as $uid) {
    $account = user_load($uid);
    if (isset($account->ms_affiliates_paypal_address) AND $account->ms_affiliates_paypal_address) {
      $amount = $account->af_balance;

      $form['masspay']['accounts'][$account->uid] = array(
        '#type' => 'textfield',
        '#title' => check_plain($account->name),
        '#default_value' => $amount,
        '#description' => t("Enter the amount to pay @name. Balance is @balance. Payment will be sent to @mail",
          array('@name' => $account->name, '@balance' => ms_core_format_money($amount, $currency), '@mail' => $account->ms_affiliates_paypal_address)),
      );
    } else {
      drupal_set_message(t("@name doesn't have a PayPal email address entered and has been skipped.",
        array('@name' => l($account->name, 'user/' . $account->uid))));
    }
  }

  $form_state['redirect'] = 'admin/people/pay_affiliates';
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

/**
 * Validates the data and processes the payments
 */
function ms_affiliate_masspay_masspay_form_validate($form, &$form_state) {
  // Set request-specific fields.
  $email_subject = urlencode(t('Payment'));
  $receiver_type = urlencode('EmailAddress');
  $currency = urlencode($form_state['values']['currency']);

  // Add request-specific fields to the request string.
  $nvp_str = "&EMAILSUBJECT=$email_subject&RECEIVERTYPE=$receiver_type&CURRENCYCODE=$currency";

  $receivers_array = array();

  $i = 0;
  foreach ($form_state['values']['accounts'] as $uid => $amount) {
    $account = user_load($uid);
    $receiver_data = array(
      'receiverEmail' => $account->ms_affiliates_paypal_address,
      'amount' => $amount,
      'uniqueID' => ms_core_generate_transaction_id(10),
      'note' => t("Automated Affiliate Payment")
    );
    $receivers_array[$i] = $receiver_data;
    $i += 1;
  }

  foreach ($receivers_array as $i => $receiver_data) {
    $receiver_mail = urlencode($receiver_data['receiverEmail']);
    $amount = urlencode($receiver_data['amount']);
    $unique_id = urlencode($receiver_data['uniqueID']);
    $note = urlencode($receiver_data['note']);
    $nvp_str .= "&L_EMAIL$i=$receiver_mail&L_Amt$i=$amount&L_UNIQUEID$i=$unique_id&L_NOTE$i=$note";
  }

  // Execute the API operation
  $response = ms_affiliate_masspay_http_post('MassPay', $nvp_str);

  if ($response && "SUCCESS" == strtoupper($response["ACK"]) || "SUCCESSWITHWARNING" == strtoupper($response["ACK"])) {
    ms_core_log('ms_affiliate_masspay', 'MassPay Completed Successfully: !response', array('!response' => ms_core_print_r($response)));
    drupal_set_message(t("MassPay API call successful."));
    unset($_SESSION['ms_affiliates_bulk_uids']);
  } else {
    form_set_error('submit', t("MassPay API call failed. See the Recent Log Entries for more information."));
    ms_core_log_error('ms_affiliate_masspay', 'MassPay failed: !response', array('!response' => ms_core_print_r($response)));
  }
}

/**
 * Implements hook_ms_paypal_wpp_masspay_ipn()
 */
function ms_affiliate_masspay_ms_paypal_wpp_masspay_ipn($post) {
  if ($ipn = ms_paypal_wpp_ipn_handler($post)) {
    ms_core_log('ms_affiliate_masspay', 'Successfully Received a MassPay IPN from PayPal. Here are the details: Data: !data',
      array('!data' => ms_core_print_r($ipn)));

    $a_raw = explode('&', $ipn['custom']);
    $vars = array();
    foreach ($a_raw as $a) {
      $b = explode('=', $a);
      $vars[$b[0]] = $b[1];
    }

    $affiliate = user_load($vars['af_uid']);
    $account = user_load($vars['uid']);
    $amount = $ipn['mc_gross'];

    // Update the User Balance
    $end_balance = ms_affiliates_update_balance($affiliate->uid, -$amount);

    // Add Item to History
    ms_affiliates_insert_record($affiliate->uid, $account->uid, 0, 0, t('MassPay Payment'), 'masspay_payment', -$amount);

    //Email Affiliate the Payment Details
    $currency = variable_get('ms_affiliate_masspay_default_currency', '');
    if (variable_get('ms_affiliate_masspay_payment_mail_body', FALSE)) {
      $payment_vars = array(
        'amount' => ms_core_format_money($amount, $currency),
        'userName' => $affiliate->name,
        'balance' => ms_core_format_money($end_balance, $currency),
        'itemName' => t('Affiliate Payment'),
        'paypalEmail' => $affiliate->ms_affiliate_masspay_paypal_address,
        'account' => $affiliate,
      );
      drupal_mail('ms_affiliate_masspay', 'payment', $affiliate->mail, user_preferred_language($affiliate), $payment_vars);
    }

    ms_core_log('ms_affiliate_masspay', 'Paid %payment to user !aff, paypal email: %paypalEmail.',
      array(
        '%paypalEmail' => $affiliate->ms_affiliate_masspay_paypal_address,
        '%payment' => ms_core_format_money($amount, $currency),
        '!aff' => l($affiliate->name, 'user/' . $affiliate->uid)
      ));
  } else {
    ms_core_log_error('ms_affiliate_masspay', 'MassPay IPN failed validation. Details: !ipn', array('!ipn' => ms_core_print_r($post)));
  }
}

/**
 * Send HTTP POST Request
 *
 * @param string
 *   The API method name
 * @param string
 *   The POST Message fields in &name=value pair format
 *
 * @return array
 *   Parsed HTTP Response body.
 */
function ms_affiliate_masspay_http_post($method_name, $nvp_str) {
  // Set up your API credentials, PayPal end point, and API version.
  $api_username = urlencode(variable_get('ms_affiliate_masspay_api_username', ''));
  $api_password = urlencode(variable_get('ms_affiliate_masspay_api_password', ''));
  $api_signature = urlencode(variable_get('ms_affiliate_masspay_api_signature', ''));
  $endpoint = variable_get('ms_affiliate_masspay_endpoint', 'https://api-3t.paypal.com/nvp');
  $version = urlencode('51.0');

  // Set the curl parameters.
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $endpoint);
  curl_setopt($ch, CURLOPT_VERBOSE, 1);

  // Turn off the server and peer verification (TrustManager Concept).
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);

  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_POST, 1);

  // Set the API operation, version, and API signature in the request.
  $nvpreq = "METHOD=$method_name&VERSION=$version&PWD=$api_password&USER=$api_username&SIGNATURE=$api_signature" . $nvp_str;

  // Set the request as a POST FIELD for curl.
  curl_setopt($ch, CURLOPT_POSTFIELDS, $nvpreq);

  // Get response from the server.
  $http_response = curl_exec($ch);

  if (!$http_response) {
    ms_core_log_error('ms_affiliate_masspay', "@method failed: @error (@error_num)",
      array('@method' => $method_name, '@error' => curl_error($ch), '@error_num' => curl_errno($ch)));
    return FALSE;
  }

  // Extract the response details.
  $http_response_array = explode("&", $http_response);

  $http_parsed_response_array = array();
  foreach ($http_response_array as $value) {
    $tmp_array = explode("=", $value);
    if (sizeof($tmp_array) > 1) {
      $http_parsed_response_array[$tmp_array[0]] = $tmp_array[1];
    }
  }

  if ((0 == sizeof($http_parsed_response_array)) || !array_key_exists('ACK', $http_parsed_response_array)) {
    ms_core_log_error('ms_affiliate_masspay', "Invalid HTTP Response for POST request($nvpreq) to $endpoint.");
  }

  return $http_parsed_response_array;
}

/**
 * Implements hook_ms_affiliates_history_types_alter().
 */
function ms_affiliates_masspay_ms_affiliates_history_types_alter(&$types) {
  $types['masspay_payment'] = t("PayPal MassPay Payout");
}