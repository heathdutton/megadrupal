<?php

/**
 * @file
 * MoneySuite Affiliate Coupons allows you to generate coupons for affiliates
 * which, when used, will automatically set the user as a referral of the
 * affiliate associated with the coupon.
 *
 * Original author: Leighton Whiting - Released under GENERAL PUBLIC LICENSE
 * Current maintenance by multiple MoneySuite users.
 * Re: new initiative: https://www.drupal.org/node/2315653 
 */

/**
 * Implements hook_menu().
 */
function ms_affiliate_coupons_menu() {
  $items = array();

  $items['admin/moneysuite/ms_affiliate_coupons'] = array(
    'title' => 'Affiliate Coupons',
    'description' => 'Manage affiliate coupons.',
    'page callback' => 'ms_affiliate_coupons_show_coupons_page',
    'page arguments' => array('active'),
    'access arguments' => array('view coupons'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/list'] = array(
    'title' => 'Affiliate Coupons',
    'description' => 'View affiliate coupons',
    'page callback' => 'ms_affiliate_coupons_show_coupons_page',
    'access arguments' => array('view coupons'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/overrides'] = array(
    'title' => 'Coupon Overrides',
    'description' => 'View affiliate coupon overrides',
    'page callback' => 'ms_affiliate_coupons_show_overrides_page',
    'access arguments' => array('view coupons'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/templates'] = array(
    'title' => 'Coupon Templates',
    'description' => 'View affiliate coupon templates',
    'page callback' => 'ms_affiliate_coupons_show_templates_page',
    'access arguments' => array('view coupons'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/templates/list'] = array(
    'title' => 'List Coupon Templates',
    'description' => 'View affiliate coupon templates',
    'page callback' => 'ms_affiliate_coupons_show_templates_page',
    'access arguments' => array('view coupons'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/templates/add'] = array(
    'title' => 'Add new template',
    'description' => 'Add a new affiliate coupon template.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_template_form', 'add'),
    'access arguments' => array('manage coupons'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/templates/edit/%'] = array(
    'title' => 'Edit template',
    'description' => 'Edit an existing affiliate coupon template.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_template_form', 'edit', 5),
    'access arguments' => array('manage coupons'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/templates/delete/%'] = array(
    'title' => 'Delete template',
    'description' => 'Delete an affiliate coupon template.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_template_delete_confirm', 5),
    'access arguments' => array('manage coupons'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/generate'] = array(
    'title' => 'Generate Coupons',
    'description' => 'Generate Coupons for Affiliates who need them',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_generate_coupons_confirm'),
    'access arguments' => array('manage coupons'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/overrides/add/%'] = array(
    'title' => 'Add new coupon override',
    'description' => 'Add a new coupon override.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_coupon_override_form', 'add', 5),
    'access arguments' => array('manage coupons'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/overrides/edit/%'] = array(
    'title' => 'Edit coupon override',
    'description' => 'Edit an existing coupon override.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_coupon_override_form', 'edit', 5),
    'access arguments' => array('manage coupons'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  $items['admin/moneysuite/ms_affiliate_coupons/overrides/delete/%'] = array(
    'title' => 'Delete coupon override',
    'description' => 'Delete a coupon override.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_coupon_override_delete_confirm', 5),
    'access arguments' => array('manage coupons'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  $items['user/%user/ms_affiliate/coupons/edit/%'] = array(
    'title' => 'Edit coupon',
    'description' => 'Edit a coupon.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ms_affiliate_coupons_coupon_edit_form', 1, 5),
    'access arguments' => array('act as affiliate'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );

  return $items;
}

/**
 * Generate the affiliate coupons each cron run if needed
 */
function ms_affiliate_coupons_cron() {
  // Generate the coupons
  ms_affiliate_coupons_generate_coupons();
}

// ======================================
// Pages:
// ======================================

/**
 * Provide a UI to generate the affiliate coupons
 */
function ms_affiliate_coupons_generate_coupons_confirm($form, &$form_state) {
  return confirm_form($form, t('Are you sure you want to generate affiliate coupons?'), 'admin/moneysuite/ms_affiliate_coupons', t('This action cannot be undone. Coupons will be generated for all affiliates who still need them.'), t('Generate'));
}

/**
 * Generate the coupons
 */
function ms_affiliate_coupons_generate_coupons_confirm_submit($form, &$form_state) {
  // Generate the coupons
  $count = ms_affiliate_coupons_generate_coupons();

  drupal_set_message(t('Success! %count affiliate coupons were generated.', array('%count' => $count)));
  $form_state['redirect'] = 'admin/moneysuite/ms_affiliate_coupons';
}

/**
 * Show all of the affiliate coupons, and allow overriding and removing overrides
 */
function ms_affiliate_coupons_show_coupons_page() {
  $output = '';
  $headers = array(
    array(
      'data' => t('User'),
      'class' => array('ms_af_coupons_user_header'),
      'field' => 'u.name',
      'sort' => 'desc',
    ),
    array(
      'data' => t('Template'),
      'class' => array('ms_af_coupons_template_header'),
      'field' => 'template_name',
    ),
    array(
      'data' => t('Code'),
      'class' => array('ms_af_coupons_code_header'),
      'field' => 'd.code',
    ),
    array(
      'data' => t('Custom Override'),
      'class' => array('ms_af_coupons_override_header'),
      'field' => 'c.type',
    ),
    array(
      'data' => t('Actions'),
      'class' => array('ms_af_coupons_actions_header'),
    ),
  );

  $query = db_select('ms_affiliate_coupons', 'd');
  $query->leftjoin('ms_affiliate_coupon_templates', 't', 'd.tid = t.id');
  $query->leftjoin('ms_affiliate_coupon_overrides', 'c', 'd.id = c.id');
  $query->leftjoin('users', 'u', 'd.uid = u.uid');

  $query->fields('d', array('id', 'code', 'uid', 'tid'));
  $query->fields('u', array('name'));
  $query->fields('c', array('type', 'value'));
  $query->addField('t', 'name', 'template_name');

  $name = '';
  if (isset($_GET['name'])) {
    $name = $_GET['name'];
    $query->condition('u.name', '%' . $name . '%', 'LIKE');
  }

  $query = $query->extend('TableSort')->orderByHeader($headers);
  $query = $query->extend('PagerDefault')->limit(20);

  // execute the query
  $result = $query->execute();

  $rows = array();
  $attr = array('id' => 'ms-af-coupons-table');
  foreach ($result as $row) {
    $actions = array();
    if ($row->type) {
      $actions[] = l('Edit Override', 'admin/moneysuite/ms_affiliate_coupons/overrides/edit/' . $row->id);
      $actions[] = l('Remove Override', 'admin/moneysuite/ms_affiliate_coupons/overrides/delete/' . $row->id);
    } else {
      $actions[] = l('Add Override', 'admin/moneysuite/ms_affiliate_coupons/overrides/add/' . $row->id);
    }
    $rows[] = array(
      array(
        'data' => l($row->name, 'user/' . $row->uid),
        'class' => array('ms_af_coupons_user'),
      ),
      array(
        'data' => $row->template_name,
        'class' => array('ms_af_coupons_template'),
      ),
      array(
        'data' => $row->code,
        'class' => array('ms_af_coupons_code'),
      ),
      array(
        'data' => ms_coupons_get_discount_string($row),
        'class' => array('ms_af_coupons_code'),
      ),
      array(
        'data' => implode(' | ', $actions),
        'class' => array('ms_af_coupons_actions'),
      ),
    );
  }

  // Add the name filter
  $filters = drupal_get_form('ms_core_get_filter_form', array('name' => $name));
  $output .= drupal_render($filters);

  $output .= theme('table', array('header' => $headers, 'rows' => $rows, 'attributes' => $attr, 'empty' => t('No coupons yet.')));

  $build = array();

  // add the content
  $build['content'] = array('#markup' => $output);

  // Add the pager
  $build['pager'] = array(
    '#theme' => 'pager',
    '#weight' => 5,
  );

  return $build;
}

/**
 * Show all of the templates, and allow adding, editing, and deleting
 */
function ms_affiliate_coupons_show_templates_page() {
  $output = '';
  $headers = array(
    array(
      'data' => t('Template Name'),
      'class' => array('ms_af_coupons_template_header'),
      'field' => 't.id',
      'sort' => 'desc',
    ),
    array(
      'data' => t('Coupon Name'),
      'class' => array('ms_af_coupons_coupon_name_header'),
    ),
    array(
      'data' => t('Discount'),
      'class' => array('ms_af_coupons_coupon_commission_header'),
    ),
    array(
      'data' => t('Pattern'),
      'class' => array('ms_af_coupons_pattern_header'),
    ),
    array(
      'data' => t('Actions'),
      'class' => array('ms_af_coupons_actions_header'),
    ),
  );

  $query = db_select('ms_affiliate_coupon_templates', 't');

  $query->fields('t', array('name', 'id', 'pattern', 'cid'));

  $query = $query->extend('TableSort')->orderByHeader($headers);
  $query = $query->extend('PagerDefault')->limit(20);

  // execute the query
  $result = $query->execute();

  $rows = array();
  $attr = array('id' => 'ms-af-coupons-table');
  foreach ($result as $row) {
    $coupon = ms_coupons_load($row->cid);
    $actions = array();
    $actions[] = l('Edit Template', 'admin/moneysuite/ms_affiliate_coupons/templates/edit/' . $row->id);
    $actions[] = l('Remove Template', 'admin/moneysuite/ms_affiliate_coupons/templates/delete/' . $row->id);
    $rows[] = array(
      array(
        'data' => $row->name,
        'class' => array('ms_af_coupons_template'),
      ),
      array(
        'data' => l($coupon->name, 'admin/moneysuite/ms_coupons/edit/' . $coupon->cid),
        'class' => array('ms_af_coupons_coupon_name'),
      ),
      array(
        'data' => ms_coupons_get_discount_string($coupon),
        'class' => array('ms_af_coupons_coupon_commission'),
      ),
      array(
        'data' => $row->pattern,
        'class' => array('ms_af_coupons_pattern'),
      ),
      array(
        'data' => implode(' | ', $actions),
        'class' => array('ms_af_coupons_actions'),
      ),
    );
  }

  $output .= theme('table', array('header' => $headers, 'rows' => $rows, 'attributes' => $attr, 'empty' => t('No templates yet.')));

  $build = array();

  // add the content
  $build['content'] = array('#markup' => $output);

  // Add the pager
  $build['pager'] = array(
    '#theme' => 'pager',
    '#weight' => 5,
  );

  return $build;
}

/**
 * Show all of the overrides, and allow editing and deleting
 */
function ms_affiliate_coupons_show_overrides_page() {
  $output = '';
  $headers = array(
    array(
      'data' => t('User'),
      'class' => array('ms_af_coupons_user_header'),
      'field' => 'u.name',
      'sort' => 'desc',
    ),
    array(
      'data' => t('Template'),
      'class' => array('ms_af_coupons_template_header'),
      'field' => 'template_name',
    ),
    array(
      'data' => t('Code'),
      'class' => array('ms_af_coupons_code_header'),
      'field' => 'd.code',
    ),
    array(
      'data' => t('Custom Override'),
      'class' => array('ms_af_coupons_override_header'),
      'field' => 'c.type',
    ),
    array(
      'data' => t('Actions'),
      'class' => array('ms_af_coupons_actions_header'),
    ),
  );

  $query = db_select('ms_affiliate_coupon_overrides', 'c');
  $query->leftjoin('ms_affiliate_coupons', 'd', 'c.id = d.id');
  $query->leftjoin('ms_affiliate_coupon_templates', 't', 'd.tid = t.id');
  $query->leftjoin('users', 'u', 'd.uid = u.uid');

  $query->fields('d', array('id', 'code', 'uid', 'tid'));
  $query->fields('u', array('name'));
  $query->fields('c', array('type', 'value'));
  $query->addField('t', 'name', 'template_name');

  $name = '';
  if (isset($_GET['name'])) {
    $name = $_GET['name'];
    $query->condition('u.name', '%' . $name . '%', 'LIKE');
  }

  $query = $query->extend('TableSort')->orderByHeader($headers);
  $query = $query->extend('PagerDefault')->limit(20);

  // execute the query
  $result = $query->execute();

  $rows = array();
  $attr = array('id' => 'ms-af-coupons-table');
  foreach ($result as $row) {
    $actions = array();
    if ($row->type) {
      $actions[] = l('Edit Override', 'admin/moneysuite/ms_affiliate_coupons/overrides/edit/' . $row->id);
      $actions[] = l('Remove Override', 'admin/moneysuite/ms_affiliate_coupons/overrides/delete/' . $row->id);
    }
    $rows[] = array(
      array(
        'data' => l($row->name, 'user/' . $row->uid),
        'class' => array('ms_af_coupons_user'),
      ),
      array(
        'data' => $row->template_name,
        'class' => array('ms_af_coupons_template'),
      ),
      array(
        'data' => $row->code,
        'class' => array('ms_af_coupons_code'),
      ),
      array(
        'data' => ms_coupons_get_discount_string($row),
        'class' => array('ms_af_coupons_code'),
      ),
      array(
        'data' => implode(' | ', $actions),
        'class' => array('ms_af_coupons_actions'),
      ),
    );
  }

  // Add the name filter
  $filters = drupal_get_form('ms_core_get_filter_form', array('name' => $name));
  $output .= drupal_render($filters);

  $output .= theme('table', array('header' => $headers, 'rows' => $rows, 'attributes' => $attr, 'empty' => t('No coupond overrides.')));

  $build = array();

  // add the content
  $build['content'] = array('#markup' => $output);

  // Add the pager
  $build['pager'] = array(
    '#theme' => 'pager',
    '#weight' => 5,
  );

  return $build;
}

// ======================================
// Coupon Templates:
// ======================================


/**
 * Build function for the coupon template form
 */
function ms_affiliate_coupons_template_form($form, $form_state, $action, $id = 0) {
  $override = FALSE;

  $template = NULL;
  if ($action == 'edit') {
    $override = TRUE;
    $template = ms_affiliate_coupons_load_template($id);
    $form['template_id'] = array(
      '#type' => 'value',
      '#value' => $template->id,
    );
  }

  $form['main'] = array(
    '#type' => 'fieldset',
    '#title' => t('Coupon Template Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['main']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Template Name'),
    '#default_value' => ($override) ? $template->name : '',
    '#size' => 32,
    '#required' => TRUE,
  );
  $form['main']['username'] = array(
    '#type' => 'textfield',
    '#title' => t('Affiliate User Name'),
    '#default_value' => ($override) ? $template->username : '',
    '#description' => t("If you want to create a template for just a specific user,
      enter their username here. Otherwise, this template will generate coupons
      for all affiliates."),
    '#size' => 32,
    '#autocomplete_path' => 'admin/structure/ms_core/autocomplete',
    '#required' => FALSE,
  );

  $form['main']['cid'] = array(
    '#type' => 'select',
    '#title' => t('Coupon'),
    '#default_value' => ($override) ? $template->cid : 0,
    '#options' => ms_coupons_get_coupons_list(),
    '#description' => t('Select which coupon to associate with this template.'),
    '#required' => TRUE,
  );

  $form['main']['pattern'] = array(
    '#type' => 'textfield',
    '#title' => t('Pattern'),
    '#default_value' => ($override) ? $template->pattern : 'EXAMPLE-[username]',
    '#size' => 32,
    '#description' => t('Specify a pattern to use when generating the coupon names. [username] can be used to represent the user name, and [uid] can represent the user id.'),
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  $form_state['#redirect'] = 'admin/moneysuite/ms_affiliate_coupons/templates';

  return $form;
}

/**
 * Submit function for the coupon template form
 */
function ms_affiliate_coupons_template_form_submit($form, &$form_state) {
  // Load the coupon
  if ($form_state['values']['template_id']) {
    $template = ms_affiliate_coupons_load_template($form_state['values']['template_id']);

    $template->cid = $form_state['values']['cid'];
    $template->name = $form_state['values']['name'];
    $template->username = $form_state['values']['username'];
    $template->pattern = $form_state['values']['pattern'];

    // Write the record
    drupal_write_record('ms_affiliate_coupon_templates', $template, 'id');

    drupal_set_message(t('Successfully updated the template. Note that existing coupons with override settings have not been changed, and existing coupons have not been renamed.'));
  } else {
    $template = new stdClass();

    $template->cid = $form_state['values']['cid'];
    $template->name = $form_state['values']['name'];
    $template->username = $form_state['values']['username'];
    $template->pattern = $form_state['values']['pattern'];

    // Write the record
    drupal_write_record('ms_affiliate_coupon_templates', $template);

    drupal_set_message(t('Successfully created a new template.'));
  }
}

/**
 * Delete coupon template confirm form
 */
function ms_affiliate_coupons_template_delete_confirm($form, &$form_state, $id) {
  $template = ms_affiliate_coupons_load_template($id);
  $form['#ms_template_id'] = $template->id;
  return confirm_form($form, t('Are you sure you want to delete this coupon template?'), 'admin/moneysuite/ms_affiliate_coupons', t('This action cannot be undone. In addition, all existing affiliate coupons that use this template will be deleted.'), t('Delete'));
}

/**
 * Delete a coupon
 */
function ms_affiliate_coupons_template_delete_confirm_submit($form, &$form_state) {
  $template = ms_affiliate_coupons_load_template($form['#ms_template_id']);

  db_delete('ms_affiliate_coupon_templates')
    ->condition('id', $template->id)
    ->execute();

  // Delete all affiliate coupons associated with this template
  db_delete('ms_affiliate_coupons')
    ->condition('tid', $template->id)
    ->execute();

  drupal_set_message(t('Coupon Template and all associated affiliate coupons have been deleted.'));
  $form_state['redirect'] = 'admin/moneysuite/ms_affiliate_coupons';
}

// ======================================
// Coupon Overrides:
// ======================================


/**
 * Build function for the coupon override form
 */
function ms_affiliate_coupons_coupon_override_form($form, &$form_state, $action, $id) {
  $override = FALSE;

  $aff_coupon = ms_affiliate_coupons_load_coupon($id);
  $template = ms_affiliate_coupons_load_template($aff_coupon->tid);
  $coupon = ms_coupons_load($template->cid);

  $coupon_override = NULL;
  if ($action == 'edit') {
    $override = TRUE;
    $coupon_override = ms_affiliate_coupons_load_override($aff_coupon->id);
  }

  $form['main'] = array(
    '#type' => 'fieldset',
    '#title' => t('Coupon Override Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['main']['coupon_id'] = array(
    '#type' => 'value',
    '#value' => $aff_coupon->id,
  );

  $form['main']['type'] = array(
    '#type' => 'select',
    '#title' => t('Discount type'),
    '#default_value' => ($override) ? $coupon_override->type : $coupon->type,
    '#options' => array(
      'percentage' => 'Percentage',
      'fixed' => 'Fixed Value',
    ),
  );

  $form['main']['value'] = array(
    '#type' => 'textfield',
    '#title' => t('Discount value'),
    '#default_value' => ($override) ? $coupon_override->value : $coupon->value,
    '#size' => 10,
    '#description' => t('Enter values without symbols, for 15%, enter "15" and choose Percentage as the discount type.'),
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  $form_state['#redirect'] = 'admin/moneysuite/ms_affiliate_coupons/overrides';

  return $form;
}

/**
 * Submit function for the coupon override form
 */
function ms_affiliate_coupons_coupon_override_form_submit($form, &$form_state) {
  // Load the coupon
  $aff_coupon = ms_affiliate_coupons_load_coupon($form_state['values']['coupon_id']);

  // Change the code
  $aff_coupon->value = $form_state['values']['value'];
  $aff_coupon->type = $form_state['values']['type'];

  // Delete existing records
  db_delete('ms_affiliate_coupon_overrides')
    ->condition('id', $aff_coupon->id)
    ->execute();

  // Write the record
  drupal_write_record('ms_affiliate_coupon_overrides', $aff_coupon);
}

/**
 * Delete coupon confirm form
 */
function ms_affiliate_coupons_coupon_override_delete_confirm($form, &$form_state, $id) {
  $aff_coupon = ms_affiliate_coupons_load_coupon($id);
  $form['#ms_coupons_id'] = $aff_coupon->id;
  return confirm_form($form, t('Are you sure you want to delete the override settings for this coupon?'), 'admin/moneysuite/ms_affiliate_coupons/overrides', t('This action cannot be undone.'), t('Delete'));
}

/**
 * Delete a coupon
 */
function ms_affiliate_coupons_coupon_override_delete_confirm_submit($form, &$form_state) {
  $aff_coupon = ms_affiliate_coupons_load_coupon($form['#ms_coupons_id']);

  db_delete('ms_affiliate_coupon_overrides')
    ->condition('id', $aff_coupon->id)
    ->execute();

  drupal_set_message(t('Coupon Override has been deleted.'));
  $form_state['redirect'] = 'admin/moneysuite/ms_affiliate_coupons/overrides';
}

// ======================================
// Coupons:
// ======================================


/**
 * Build a form for the users to edit their coupon name
 */
function ms_affiliate_coupons_coupon_edit_form($form, &$form_state, $account, $id) {
  // Load the coupon
  $aff_coupon = ms_affiliate_coupons_load_coupon($id);

  $form['main'] = array(
    '#type' => 'fieldset',
    '#title' => t('Coupon Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['main']['id'] = array(
    '#type' => 'value',
    '#value' => $aff_coupon->id,
  );

  $form['main']['code'] = array(
    '#type' => 'textfield',
    '#title' => t('Coupon Code'),
    '#default_value' => $aff_coupon->code,
    '#size' => 32,
    '#maxlength' => 128,
    '#description' => t('Enter the coupon code you would like to use. No Spaces Allowed, Alpha-Numeric characters only.'),
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  $form_state['#redirect'] = 'user/' . $account->uid . '/ms_affiliate';

  return $form;
}

/**
 * Validate a form for the users to edit their coupon name
 */
function ms_affiliate_coupons_coupon_edit_form_validate($form, &$form_state) {
  // Check if the coupon code is unique
  if ($coupon = ms_coupons_find($form_state['values']['code'])) {
    form_set_error('code', t('Coupon code already used.'));
  }

  // Check if the coupon code is too short
  if (strlen($form_state['values']['code']) < 6) {
    form_set_error('code', t('The coupon code must be at least 6 characters long.'));
  }
}

/**
 * Submit a form for the users to edit their coupon name
 */
function ms_affiliate_coupons_coupon_edit_form_submit($form, &$form_state) {
  // Load the coupon
  $aff_coupon = ms_affiliate_coupons_load_coupon($form_state['values']['id']);

  // Change the code
  $aff_coupon->code = strtoupper($form_state['values']['code']);

  // Update the coupon name
  if ($aff_coupon->uid) {
    drupal_write_record('ms_affiliate_coupons', $aff_coupon, 'id');
  }
}

// ======================================
// Functions:
// ======================================


/**
 * Generate the Affiliate Coupons for all affiliates who don't have them yet
 */
function ms_affiliate_coupons_generate_coupons() {
  $count = 0;

  $templates = ms_affiliate_coupons_get_templates();

  if (!empty($templates)) {
    $roles = user_roles();
    $affiliate_roles = array();

    foreach ($roles as $rid => $role) {
      $role_permissions = user_role_permissions(array($rid => $role));

      $perms = array();
      foreach ($role_permissions as $one_role) {
        $perms += $one_role;
      }
      if (isset($perms['act as affiliate'])) {
        $affiliate_roles[$rid] = $role;
      }
    }

    foreach ($affiliate_roles as $rid => $role) {
      if ($rid == 2) {
        $result = db_query("SELECT * FROM {users} WHERE status = :status", array(':status' => 1));
      } else {
        $result = db_query("SELECT * FROM {users_roles} WHERE rid = :rid", array(':rid' => $rid));
      }

      foreach ($result as $row) {
        foreach ($templates as $tid => $template) {
          if (!ms_affiliate_coupons_get_aff_coupon_by_uid($row->uid, $tid)) {
            // Generate the coupon
            $account = user_load($row->uid);
            if (!empty($template->username) AND $template->username != $account->name) {
              // Do nothing
            } else {
              ms_affiliate_coupons_generate_aff_coupon($account, $template);
              $count += 1;
            }
          }
        }
      }
    }
  }

  return $count;
}

/**
 * Generate an affiliate coupon
 */
function ms_affiliate_coupons_generate_aff_coupon($account, $template) {
  // Make the pattern
  $pattern = $template->pattern;
  $pattern = str_replace('[username]', drupal_encode_path($account->name), $pattern);
  $pattern = str_replace('[uid]', $account->uid, $pattern);
  $pattern = strtoupper($pattern);

  // Make sure the pattern is unique
  if (ms_affiliate_coupons_find($pattern)) {
    $count = 1;
    while (ms_affiliate_coupons_find($pattern . '_' . $count)) {
      $count += 1;
    }
    $pattern .= '_' . $count;
  }

  $aff_coupon = new stdClass();
  $aff_coupon->code = strtoupper($pattern);
  $aff_coupon->uid = $account->uid;
  $aff_coupon->tid = $template->id;

  db_delete('ms_affiliate_coupons')
    ->condition('uid', $account->uid)
    ->condition('tid', $template->id)
    ->execute();

  drupal_write_record('ms_affiliate_coupons', $aff_coupon);
}

/**
 * Get an affiliate coupon by uid and tid
 */
function ms_affiliate_coupons_get_aff_coupon_by_uid($uid, $tid) {
  $result = db_query("SELECT * FROM {ms_affiliate_coupons} WHERE uid = :uid AND tid = :tid",
    array(':uid' => $uid, ':tid' => $tid));
  foreach ($result as $row) {
    return $row;
  }
  return FALSE;
}

/**
 * Get the affiliate coupons
 */
function ms_affiliate_coupons_get_aff_coupons($uid) {
  $coupons = array();

  $result = db_query("SELECT * FROM {ms_affiliate_coupons} WHERE uid = :uid", array(':uid' => $uid));

  foreach ($result as $row) {
    $coupons[$row->id] = $row;
  }

  return $coupons;
}

/**
 * Get a list of the templates
 */
function ms_affiliate_coupons_get_templates() {
  $templates = array();

  $result = db_query("SELECT * FROM {ms_affiliate_coupon_templates}");

  foreach ($result as $template) {
    $templates[$template->id] = $template;
  }

  return $templates;
}

/**
 * Load an affiliate coupon object
 */
function ms_affiliate_coupons_load_coupon($id) {
  $result = db_query("SELECT * FROM {ms_affiliate_coupons} WHERE id = :id", array(':id' => $id));

  foreach ($result as $row) {
    return $row;
  }

  return FALSE;
}

/**
 * Load an affiliate coupon template object
 */
function ms_affiliate_coupons_load_template($tid) {
  $result = db_query("SELECT * FROM {ms_affiliate_coupon_templates} WHERE id = :id", array(':id' => $tid));
  foreach ($result as $row) {
    return $row;
  }
  return FALSE;
}

/**
 * Load an affiliate coupon override object
 */
function ms_affiliate_coupons_load_override($id) {
  $result = db_query("SELECT * FROM {ms_affiliate_coupon_overrides} WHERE id = :id", array(':id' => $id));
  foreach ($result as $row) {
    return $row;
  }
  return FALSE;
}

/**
 * Load a coupon from the supplied code.
 */
function ms_affiliate_coupons_find($code) {
  // Look for matching single coupon first.
  $result = db_query("SELECT * FROM {ms_affiliate_coupons} WHERE code = :code",
    array(':code' => strtoupper($code)));
  foreach ($result as $row) {
    return $row;
  }

  return FALSE;
}

/**
 * Load a coupon and add the overridden values from an aff_coupon record
 */
function ms_affiliate_coupons_load_coupon_values($aff_coupon) {
  $template = ms_affiliate_coupons_load_template($aff_coupon->tid);
  $override = ms_affiliate_coupons_load_override($aff_coupon->id);
  $coupon = ms_coupons_load($template->cid);

  $coupon->code = $aff_coupon->code;

  if ($override) {
    $coupon->type = $override->type;
    $coupon->value = $override->value;
  }

  return $coupon;
}

/**
 * Implementation of hook_ms_coupon_added()
 */
function ms_affiliate_coupons_ms_coupon_added($coupon) {
  global $user;
  // Load the aff coupon if the $user is anonymous

  if ($aff_coupon = ms_affiliate_coupons_find($coupon->code)) {
    // Set the affiliate for the $user
    if ($affiliate = user_load($aff_coupon->uid)) {
      $_SESSION['affiliate'] = $affiliate->uid;
    }

    //Set the cookie
    ms_affiliates_set_cookie($_SESSION['affiliate']);

    // Record the click
    ms_affiliates_clicked($affiliate, 'affiliate_coupon');

    // Set the affiliate if the user is logged in
    if ($user->uid) {
      ms_affiliates_save_referral_helper($user, $affiliate->uid);
    }
  }
}

/**
 * Implementation of hook_ms_coupons()
 */
function ms_affiliate_coupons_ms_coupons($code) {
  $coupons = array();
  if ($aff_coupon = ms_affiliate_coupons_find($code)) {
    $coupon = ms_affiliate_coupons_load_coupon_values($aff_coupon);
    $coupons[$aff_coupon->code] = $coupon;

    return $coupons;
  }
}

/**
 * Helper function to generate coupons for a user account
 */
function ms_affiliate_coupons_generate_user_coupons($account) {
  $templates = ms_affiliate_coupons_get_templates();
  if (!empty($templates) AND user_access('act as affiliate', $account)) {
    foreach ($templates as $tid => $template) {
      if (!ms_affiliate_coupons_get_aff_coupon_by_uid($account->uid, $tid)) {
        // Generate the coupon
        $account = user_load($account->uid);
        if (!empty($template->username) AND $template->username != $account->name) {
          // Do nothing
        } else {
          ms_affiliate_coupons_generate_aff_coupon($account, $template);
        }
      }
    }
  }
}

/**
 * Implementation of hook_ms_affiliates_dashboard()
 */
function ms_affiliate_coupons_ms_affiliates_dashboard($account) {
  ms_affiliate_coupons_generate_user_coupons($account);

  $extras = array();

  $aff_coupons = ms_affiliate_coupons_get_aff_coupons($account->uid);

  if (!empty($aff_coupons)) {
    $output = '';

    $headers = array(
      array(
        'data' => t('Code'),
        'class' => 'ms_af_coupons_code_header',
      ),
      array(
        'data' => t('Name'),
        'class' => 'ms_af_coupons_template_header',
      ),
      array(
        'data' => t('Discount'),
        'class' => 'ms_af_coupons_override_header',
      ),
      array(
        'data' => t('Actions'),
        'class' => 'ms_af_coupons_actions_header',
      ),
    );

    $rows = array();
    $attr = array('id' => 'ms-af-coupons-table');
    foreach ($aff_coupons as $aff_coupon) {
      $actions = array();
      $coupon = ms_affiliate_coupons_load_coupon_values($aff_coupon);
      $template = ms_affiliate_coupons_load_template($aff_coupon->tid);

      $actions[] = l('Change Code', 'user/' . $account->uid . '/ms_affiliate/coupons/edit/' . $aff_coupon->id);

      $rows[] = array(
        array(
          'data' => $aff_coupon->code,
          'class' => 'ms_af_coupons_code',
        ),
        array(
          'data' => $template->name,
          'class' => 'ms_af_coupons_template',
        ),
        array(
          'data' => ms_coupons_get_discount_string($coupon),
          'class' => 'ms_af_coupons_code',
        ),
        array(
          'data' => implode(' | ', $actions),
          'class' => 'ms_af_coupons_actions',
        ),
      );
    }

    $output .= theme('table', array('header' => $headers, 'rows' => $rows, 'attributes' => $attr, 'empty' => t('No affiliate coupons.')));

    $extras[] = array(
      'title' => t('Affiliate Coupons'),
      'body' => $output,
    );
  }

  return $extras;
}

/**
 * Implements hook_token_values().
 */
function ms_affiliate_coupons_token_values($type, $object = NULL, $options = array()) {
  if ($type == 'ms_affiliate_email') {
    $templates = ms_affiliate_coupons_get_templates();
    if (!empty($templates) AND user_access('act as affiliate', $object)) {
      $tokens = array();
      foreach ($templates as $tid => $template) {
        if ($aff_coupon = ms_affiliate_coupons_get_aff_coupon_by_uid($object->uid, $tid)) {
          $coupon = ms_affiliate_coupons_load_coupon_values($aff_coupon);
          $tokens['aff_coupon_code-' . $tid] = $aff_coupon->code;
          $tokens['aff_coupon_discount-' . $tid] = ms_coupons_get_discount_string($coupon);
        }
      }
      return $tokens;
    }
  }
}

/**
 * Implements hook_token_list().
 */
function ms_affiliate_coupons_token_list($type = 'all') {
  if ($type == 'ms_affiliate_email') {
    $templates = ms_affiliate_coupons_get_templates();
    if (!empty($templates)) {
      $tokens = array();
      foreach ($templates as $tid => $template) {
        $tokens['ms_affiliate_email']['aff_coupon_code-' . $tid] = t("The Affiliate's coupon code for the %template template",
          array('%template' => $template->name));
        $tokens['ms_affiliate_email']['aff_coupon_discount-' . $tid] = t("The Affiliate's coupon discount for the %template template",
          array('%template' => $template->name));
      }
      return $tokens;
    }
  }
}
