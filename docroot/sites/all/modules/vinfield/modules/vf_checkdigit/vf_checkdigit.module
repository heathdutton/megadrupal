<?php
/**
 * @file
 *
 * Validation provider module that simply checks to see if the VIN passes
 * basic check digit validation.
 */

/**
 * Implements hook_vinfield_provider_info
 */
function vf_checkdigit_vinfield_provider_info() {
  $items = array();

  $items['vf_checkdigit'] = array(
    'title' => 'Check Digit Validator',
    'description' => 'Validation provider that simply checks to see if the VIN passes basic check digit validation.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vf_checkdigit_settings'),
    'query callback' => 'vf_checkdigit_provider_query',
    'always invoke' => TRUE,
  );

  return $items;
}

/**
 * Settings callback
 */
function vf_checkdigit_settings($form, &$form_state) {
  $form['message'] = array(
    '#prefix' => '<p>',
    '#markup' => t('There are no settings for this provider.'),
    '#suffix' => '<p>',
  );

  return $form;
}

/**
 * Implements provider query callback
 *
 * Private validation method for VINs
 * Based on the VIN specs found at:
 * http://www.nhtsa.dot.gov/cars/rules/maninfo/mcpkg002.pdf
 */
function vf_checkdigit_provider_query($vin) {
  $err_msg = '';
  $val_table = array("0" => 0, "1" => 1, "2" => 2, "3" => 3, "4" => 4, "5" => 5, "6" => 6, "7" => 7, "8" => 8, "9" => 9, "A" => 1, "B" => 2, "C" => 3, "D" => 4, "E" => 5, "F" => 6, "G" => 7, "H" => 8, "J" => 1, "K" => 2, "L" => 3, "M" => 4, "N" => 5, "P" => 7, "R" => 9, "S" => 2, "T" => 3, "U" => 4, "V" => 5, "W" => 6, "X" => 7, "Y" => 8, "Z" => 9);
  $mult = array(8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2);
  $rem_check = array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "X");

  // Verify the correct length:
  if (17 == drupal_strlen($vin)) {
    // Now loop through VIN and calc product:
    for ($i = 0, $prod_sum = 0; $i < 17; ++$i) {
      $digit = drupal_substr($vin, $i, 1);

      // Make sure it's a valid alpha char:
      if (isset($val_table[$digit])) {
        $prod = $val_table[$digit] * $mult[$i];
      }
      else {
        $err_msg = t("Invalid character '!digit' in position !i", array("!digit" => $digit, "!i" => $i + 1));
        break;
      }

      $prod_sum += $prod;
    }

    // Now make sure we made it through the loop:
    if (17 == $i) {
      // Check to see if the math works out:
      $check_digit = drupal_substr($vin, 8, 1);
      $mod_val = $prod_sum % 11;
      if ($check_digit != $rem_check[$mod_val]) {
        $err_msg = t("Check digit calculation failed.  One or more digits are not correct.");
      }
    }
  }
  else {
    $err_msg = t("VIN must be 17 digits, no spaces");
  }

  if (!empty($err_msg)) {
    return array(
      '#error' => array(
        'message' => $err_msg,
      ),
    );
  }

  return array(
    'vin' => $vin,
  );
}
