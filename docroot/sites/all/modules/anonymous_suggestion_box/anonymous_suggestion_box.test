<?php

/**
 * @file
 * Test file for anonymous_suggestion_box module.
 */

/**
 * Default test case for the anonymous_suggestion_box module.
 *
 * @ingroup anonymous_suggestion_box
 */
class AnonymousSuggestionBoxTestCase extends DrupalWebTestCase {
  protected $privilegeduser;

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Anonymous Suggestion Box',
      'description' => 'Various tests on the anonymous_suggestion_box module.' ,
      'group' => 'anonymous_suggestion_box',
    );
  }

  /**
   * Enable modules.
   */
  public function setUp() {
    parent::setUp('anonymous_suggestion_box');
    $this->privilegeduser = $this->drupalCreateUser(array(
      'submit anonymous suggestions',
      ));
    $this->viewprivilegeduser = $this->drupalCreateUser(array(
      'submit anonymous suggestions',
      'view anonymous suggestion box',
      ));
    $this->drupalLogin($this->privilegeduser);
    variable_set('anonymous_suggestion_box_method_email', 1);
    variable_set('anonymous_suggestion_box_method_db', 1);

  }
  /**
   * Test each tutorial.
   */
  public function testAnonymousSuggestionBox() {
    $this->drupalGet('anonymous_suggestion_box');
    $this->assertNoDuplicateIds('There are no duplicate IDs');
    $this->assertText(t('Submissions are kept completely anonymous, no details of who submitted the information is stored or transmitted.'));
    $edit = array();
    $location_text = $this->randomName(16);
    $edit["location"] = $location_text;
    $edit["observation"] = "observation";
    $edit["suggested"] = "suggested";
    $this->drupalPost('anonymous_suggestion_box', $edit, t('Submit'));
    $site_email = variable_get('site_mail');
    $to_email = variable_get('anonymous_suggestion_box_to_email', $site_email);
    $this->assertText(t('Your Anonymous message has been saved.'));
    $this->assertText(t('Your Anonymous message has been sent.'));
    $this->assertMail("to", $to_email, 'Email Sent');
    $this->drupalGet('anonymous_suggestion_box/view');
    $this->assertResponse(403, 'Access is denied on the view submissions page.');
    $this->drupalLogout();
    $this->drupalLogin($this->viewprivilegeduser);
    $this->drupalGet('anonymous_suggestion_box/view');
    $this->assertText($location_text);
    $this->drupalPost('anonymous_suggestion_box', array(), t('Submit'));
    $this->assertText(t('Location field is required.'));
    $this->assertText(t('Observation field is required.'));
    $this->assertText(t('Suggested Improvement field is required.'));
  }
}
