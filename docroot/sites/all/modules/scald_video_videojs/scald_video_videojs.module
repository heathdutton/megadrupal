<?php

/**
 * @file
 * Scald VideoJS is a Scald Player for Scald Video module.
 */

/**
 * Implements hook_scald_player().
 */
function scald_video_videojs_scald_player() {
  return array(
    'video_js' => array(
      'name' => 'Video.js',
      'description' => 'Video.js is a JavaScript and CSS library that makes it easier to work with and build on HTML5 video.',
      'type' => array('video'),
    ),
  );
}

/**
 * Implements hook_scald_prerender().
 */
function scald_video_videojs_scald_prerender($atom, $context, $options, $mode) {

  global $base_url;

  if ($mode == 'player') {
    $atom->rendered->player = array(
      '#markup' => $atom->rendered->player,
      '#attached' => array(
        'css' => array(
          'sites/all/libraries/video-js/video-js.min.css',
        ),
        'js' => array(
          $base_url . '/sites/all/libraries/video-js/video.js' => array(
            'scope' => 'header',
            'group' => JS_LIBRARY,
          ),
          'videojs.options.flash.swf = "' . $base_url . '/sites/all/libraries/video-js/video-js.swf";' => array(
            'type' => 'inline',
            'scope' => 'header',
          ),
          0 => drupal_get_path('module', 'scald_video_videojs') . '/scald_video_videojs.js',
        ),
      ),
    );
    // JS Settings are updated separately to provide support for multiple videos atoms.
    $atom->rendered->player['#attached']['js'][1]['type'] = 'setting';
    $atom->rendered->player['#attached']['js'][1]['data']['scaldVideoPlayerVideoJS'][] = array(
      'videoId' => 'scald-video-' . $atom->sid,
      'videoWidth' => $atom->data['video_width'],
      'videoHeight' => $atom->data['video_height'],
    );
  }
}

/**
 * Return the version of Video.js installed.
 * Thanks to https://drupal.org/project/videojs
 *
 * @param $directory
 *   The directory to check for a Video.js installation.
 *
 * @return null|string
 */
function scald_video_videojs_get_version($directory = NULL) {
  $version = NULL;

  if (!isset($directory)) {
    $directory = variable_get('videojs_directory', 'sites/all/libraries/video-js');
  }

  if (!file_exists($directory . '/video.js')) {
    return NULL;
  }

  $contents = file_get_contents($directory . '/video.js');

  $matches = array();
  if (preg_match('/(?:v[ ]*|Version )([\d.]+)/i', $contents, $matches)) {
    $version = $matches[1];
  }

  return $version;
}
