<?php

/**
 * Implements hook_help().
 */
function taxonomy_find_help($path, $arg) {
  switch ($path) {
    case 'admin/help#taxonomy_find':
      return t('<p>The Taxonomy Find module adds a simple search interface to lookup taxonomy terms by name. In cases where you have large taxonomies, the standard Drupal core taxonomy term list pages are difficult to browse through as there may be 100s of pages of results.</p>');
    case 'admin/content/taxonomy/search':
      return t('<p>Enter the term name or partial term name that you want to search for in the text field below. You can constrain the search to a specific vocabulary by selecting a vocabulary from the drop-down menu. If there are more than @count results there will be pager links to view additional results. Configuration options are on the <a href="@settings">settings page</a>.</p>', array('@count' => variable_get('taxonomy_find_results_per_page', 20), '@settings' => url('admin/settings/taxonomy_find')));
  }
}

/**
 * Implements hook_permission().
 */
function taxonomy_find_permission() {
  return array(
    'administer taxonomy find' => array(
      'title' => t('Administer Taxonomy Find'),
      'description' => t('Configure settings for Taxonomy Find module.'),
    ),
    'access taxonomy find' => array(
      'title' => t('Access Taxonomy Find'),
      'description' => t('User with this permission can search for taxonomy terms.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function taxonomy_find_menu() {
  $items = array();

  $items['admin/config/content/taxonomy_find'] = array(
    'title' => 'Taxonomy Find',
    'description' => 'Configure settings for Taxonomy Find',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_find_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer taxonomy find'),
  );

  $items['admin/structure/taxonomy/search'] = array(
    'title' => 'Search',
    'description' => 'Search for taxonomy terms',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_find_search_terms_form'),
    'access callback' => 'user_access',
    'access arguments' => array('access taxonomy find'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Page callback for admin settings form.
 */
function taxonomy_find_admin_settings() {
  $form = array();

  $form['taxonomy_find_results_per_page'] = array(
    '#type' => 'select',
    '#title' => t('Number of results per page'),
    '#description' => t('Select how many taxonomy terms to show per page of search results.'),
    '#options' => drupal_map_assoc(array(5, 10, 15, 20, 25, 50, 100, 200)),
    '#default_value' => variable_get('taxonomy_find_results_per_page', 20),
  );

  $form['taxonomy_find_show_node_count'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show node count in results'),
    '#description' => t('If selected, the taxonomy term search results will display the number of nodes with this term.'),
    '#default_value' => variable_get('taxonomy_find_show_node_count', 0),
  );

  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vocabulary) {
    $options[$vocabulary->vid] = $vocabulary->name;
  }

  $form['taxonomy_find_exclude_vocabularies'] = array(
    '#type' => 'select',
    '#title' => t('Exclude vocabularies from search'),
    '#description' => t('Select any vocabularies to exclude from taxonomy search'),
    '#options' => $options,
    '#default_value' => variable_get('taxonomy_find_exclude_vocabularies', array()),
    '#multiple' => TRUE,
    '#size' => 8,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_theme().
 */
function taxonomy_find_theme($existing, $type, $theme, $path) {
  return array(
    'taxonomy_find_search_results' => array('results' => NULL),
  );
}

/**
 * Form builder function for taxonomy term search form.
 */
function taxonomy_find_search_terms_form($form, &$form_state) {
  $options = array('' => t('All'));
  $vocabularies = taxonomy_get_vocabularies();
  $exclude_list = variable_get('taxonomy_find_exclude_vocabularies', array());
  foreach ($vocabularies as $vocabulary) {
    if (!in_array($vocabulary->vid, $exclude_list)) {
      $options[$vocabulary->vid] = $vocabulary->name;
    }
  }

  $form['vocabularies'] = array(
    '#type' => 'select',
    '#title' => t('Select vocabulary to search'),
    '#description' => t('Select a vocabulary to constrain the search to. If no vocabulary is selected, all vocabularies (except any vocabularies configured to be excluded) will be searched.'),
    '#options' => $options,
  );

  $form['search_term'] = array(
    '#type' => 'textfield',
    '#title' => t('Search for taxonomy terms'),
    '#description' => t('Type in the term name or partial term name that you wish to search for.'),
    '#required' => TRUE,
    '#default_value' => '',
    '#size' => 40,
    '#maxlength' => 255,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );

  // Handle case where form submits to itself or form is reached via pager links / tablesort headers
  if (!empty($form_state['values']) || (isset($_GET['form_id']) && $_GET['form_id'] == 'taxonomy_find_search_terms_form' && drupal_valid_token($_GET['form_token'], $_GET['form_id']))) {
    $form['results'] = array(
      '#markup' => taxonomy_find_process_search_terms($form_state),
    );
  }

  return $form;
}

/**
 * Taxonomy term search form submit handler.
 */
function taxonomy_find_search_terms_form_submit($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
}

/**
 * Processes term search and displays results in a table.
 */
function taxonomy_find_process_search_terms($form_state) {
  $vocabularies = taxonomy_get_vocabularies();
  $rows = array();

  // In order for tablesort headers to work properly, seed the $_GET array
  // with the search term and vocabularies form values as well as form id and token
  if (isset($form_state['values']['form_id'])) {
    $_GET['form_id'] = $form_state['values']['form_id'];
  }
  if (isset($form_state['values']['form_token'])) {
    $_GET['form_token'] = $form_state['values']['form_token'];
  }
  if (isset($form_state['values']['search_term'])) {
    $_GET['search_term'] = $form_state['values']['search_term'];
  }
  if (isset($form_state['values']['vocabularies'])) {
    $_GET['vocabularies'] = $form_state['values']['vocabularies'];
  }
  
  // If form submit results are being paged or tablesorted, extract form values from the query string
  if (empty($form_state['values']) && ($_GET['form_id'] == 'taxonomy_find_search_terms_form' && drupal_valid_token($_GET['form_token'], $_GET['form_id']))) {
    $form_state['values']['vocabularies'] = $_GET['vocabularies'];
    $form_state['values']['search_term'] = $_GET['search_term'];
  }

  // Set table headers
  $header = array();
  $header[] = array('data' => t('Term'), 'field' => 'name', 'sort' => 'asc');
  $header[] = array('data' => t('Vocabulary'), 'field' => 'vocabulary_name');
  if (variable_get('taxonomy_find_show_node_count', 0)) {
    $header[] = t('Node count');
  }
  if (user_access('administer taxonomy')) {
    $header[] = t('Edit term');
  }

  $query = db_select('taxonomy_term_data', 'ttd')->extend('TableSort')->extend('PagerDefault')->limit(variable_get('taxonomy_find_results_per_page', 20));
  $query->join('taxonomy_vocabulary', 'tv', 'ttd.vid = tv.vid');
  $query->fields('ttd', array('tid', 'vid', 'name'));
  $query->addField('tv', 'name', 'vocabulary_name');
  $query->condition('ttd.name', '%' . $form_state['values']['search_term'] . '%', 'LIKE');
  $query->orderByHeader($header);

  // Check if any vocabularies should be excluded
  $exclude_vocabularies = variable_get('taxonomy_find_exclude_vocabularies', array());
  if (drupal_strlen($form_state['values']['vocabularies'])) {
    $query->condition('ttd.vid', $form_state['values']['vocabularies']);
  }
  elseif (count($exclude_vocabularies)) {
    $query->condition('ttd.vid', $exclude_vocabularies, 'NOT IN');
  }
  $result = $query->execute();

  foreach ($result as $term)  {
    $row = array();
    $row[] = array(
      'data' => $term->name,
      'class' => array('taxonomy-find-search-results-term-name'),
    );
    $row[] = array(
      'data' => $term->vocabulary_name,
      'class' => array('taxonomy-find-search-results-vocabulary-name'),
    );
    if (variable_get('taxonomy_find_show_node_count', 0)) {
      $row[] = array(
        'data' => db_query('SELECT COUNT(ti.nid) FROM {taxonomy_index} as ti INNER JOIN {node} as n on n.nid = ti.nid WHERE ti.tid = :tid', array(':tid' => $term->tid))->fetchField(),
        'class' => array('taxonomy-find-search-results-node-count'),
      );
    }
    if (user_access('administer taxonomy')) {
      $row[] = array(
        'data' => l(t('edit'), 'taxonomy/term/' . $term->tid . '/edit'),
        'class' => array('taxonomy-find-search-results-edit-link'),
      );
    }
    $rows[] = $row;
  }

  if (count($rows)) {
    $results = array(
      'header' => $header,
      'rows' => $rows,
      'query_string' => $form_state['values'],
    );
    return theme('taxonomy_find_search_results', $results);
  }
  else {
    return t('No taxonomy terms found.');
  }
}

/**
 * Theme function to display results of taxonomy search.
 */
function theme_taxonomy_find_search_results($results) {
  $output = '';

  $pager = theme('pager', array('parameters' => $results['query_string']));
  $output = theme('table', array('header' => $results['header'], 'rows' => $results['rows'], 'attributes' => array('id' => 'taxonomy-find-search-results-table'))) . $pager;

  return $output;
}