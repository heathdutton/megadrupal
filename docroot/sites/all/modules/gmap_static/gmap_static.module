<?php

/**
 * @file
 * Checks Visibility and View Mode settings, initializes map changes.
 */

/**
 * Implements hook_init().
 *
 * Attaching JavaScript to make changes on user's browser, if it allowed on the
 * current page and for the current device. View mode settings also attached. 
 */
function gmap_static_init() {
  $view_mode = gmap_static_view_mode();
  if ($view_mode && gmap_static_page_is_enabled()) {
    $module_path = drupal_get_path('module', 'gmap_static');
    drupal_add_css($module_path . '/theme/gmap_static.css');
    drupal_add_js(array('gmap_static_view_mode' => $view_mode), 'setting');
    drupal_add_js($module_path . '/includes/gmap_static.js', 'file');
  }
}

/**
 * Returns a device type.
 *
 * @return string
 *   A string with device type mobile|computer.
 */
function gmap_static_device() {
  $mobile = array('iPhone', 'Android', 'webOS', 'BlackBerry', 'iPod', 'iPad');
  foreach ($mobile as $agent) {
    if (strpos($_SERVER['HTTP_USER_AGENT'], $agent)) {
      return 'mobile';
    }
  }
  return 'computer';
}

/**
 * Implements hook_menu().
 */
function gmap_static_menu() {
  $items['admin/config/system/gmap_static'] = array(
    'title' => 'GoogleMap Static',
    'description' => 'gmap_static',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gmap_static_config'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/gmap_static.admin.inc',
  );
  return $items;
}

/**
 * Checks to see if the device allowed to changes.
 *
 * @return array|FALSE
 *   If setting for the current device is set 'none', return FALSE. Else returns
 *   array which contains all the devices settings.
 */
function gmap_static_view_mode() {
  $device = gmap_static_device();
  $options = variable_get('gmap_static_view_mode', array($device => 'none'));
  if ($options[$device] != 'none') {
    return $options;
  }
  else {
    return FALSE;
  }
}

/**
 * Checks to see if the page allowed to changes.
 *
 * @return bool
 *   Returns TRUE if is allowed, FALSE if is not.
 */
function gmap_static_page_is_enabled() {
  $pages = variable_get('gmap_static_pages', FALSE);
  $visibility = variable_get('gmap_static_visibility', 0);
  if ($pages) {
    $pages = drupal_strtolower($pages);
    $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
    $page_match = drupal_match_path($path, $pages);
    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }
  }
  else {
    $page_match = FALSE;
  }
  $page_match = !($visibility xor $page_match);
  return $page_match;
}
