<?php
/**
 * @file
 * Opentable integration for the Restaurant Distribution
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function restaurant_opentable_ctools_plugin_directory($module, $plugin) {
  return 'plugins/' . $plugin;
}

/**
 * Implement hook_theme().
 */
function restaurant_opentable_theme() {
  return array(
    'restaurant_opentable_reservation_form' => array(
      'variables' => array('restaurant_id' => NULL, 'mode' => NULL),
      'template' => 'templates/restaurant-opentable-reservation-form',
      'file' => 'restaurant_opentable.theme.inc',
    ),
    'restaurant_opentable_awards' => array(
      'variables' => array('awards' => NULL),
      'template' => 'templates/restaurant-opentable-awards',
      'file' => 'restaurant_opentable.theme.inc',
    ),
    'restaurant_opentable_ratings' => array(
      'variables' => array('ratings' => NULL),
      'template' => 'templates/restaurant-opentable-ratings',
      'file' => 'restaurant_opentable.theme.inc',
    ),
  );
}

/**
 * Implements hook_panopoly_config_info().
 */
function restaurant_opentable_panopoly_config_info() {
  $info = array();

  $info['opentable'] = array(
    'title' => t('Opentable'),
    'description' => t('Settings for Opentable'),
    'weight' => 10,
  );

  $info['opentable']['config']['opentable_url'] = array(
    'title' => t('URL'),
    'type' => 'string',
    'description' => t('Opentable url for your restaurant. Example: http://opentable.com/garden-court. <br/> <strong>Note that the cache data is going to be rebuilt if the url changes.</strong>'),
  );

  return $info;
}

/**
 * Implements hook_variable_update().
 */
function restaurant_opentable_variable_update($name, $value, $old_value, $options) {
  if ($name == 'restaurant_config_opentable_url' && ($value != $old_value)) {
    _restaurant_opentable_rebuild_data($value);
  }
}

/**
 * Returns information about a restaurant on opentable.
 */
function _restaurant_opentable_get_info($url) {
  // Load simple_html_dom library.
  require_once(restaurant_opentable_get_simple_html_dom_path());

  // Load our scraper and get the data.
  module_load_include('inc', 'restaurant_opentable', 'restaurant_opentable.scraper');
  $data = restaurant_opentable_scraper_get_restaurant_data($url);

  // Create simple_html_dom objects from each page.
  foreach ($data as $name => $page) {
    if (isset($page['html'])) {
      $$name = str_get_html($page['html']);
    }
  }

  // Load some info from the meta.
  $meta = $info['meta'] = $data['meta'];
  $info['restaurant_id'] = $meta['opentableapps:ot_rest_id'];

  // Let the parsing begin.

  // Get awards.
  $info['awards'] = array();
  if ($badgeContainer = $overview->find('#DinersChoiceBadgeContainer', 0)) {
    foreach ($badgeContainer->find('.item') as $item) {
      $award = array(
        'label' => $item->find('.label', 0)->plaintext,
        'name' => $item->find('.name', 0)->plaintext,
      );
      $info['awards'][] = $award;
    }
  }

  // Get ratings.
  $info['ratings'] = array();
  if ($rating_html) {
    if ($rating_html->find('.BVRRSecondaryRatingsContainer')) {
      foreach ($rating_html->find('.BVRRRatingEntry') as $entry) {
        $rating = array();
        if ($label = $entry->find('.BVRRLabel', 0)) {
          $rating['label'] = $label->plaintext;
        }
        if ($range = $entry->find('.BVRRRatingNormalOutOf', 0)) {
          if (preg_match("/^\((.*)\)[\s]*([\d\.]*)[\s]*\/[\s]*([\d]*)/", trim($range->plaintext), $matches)) {
            $rating['rating']['text'] = $matches[1];
            $rating['rating']['value'] = $matches[2];
            $rating['rating']['range'] = $matches[3];
          } else {
            $rating['rating']['text'] = $range->plaintext;
          }
        }
        $info['ratings'][] = $rating;
      }
    }
  }

  return $info;
}

/**
 * Clears all cache data. Then scraps and parses again.
 */
function _restaurant_opentable_rebuild_data($url) {
  $cid = 'restaurant_opentable_data_' . md5($url);

  // Clear cache.
  cache_clear_all($cid, 'cache');

  // Call parsing function which will in turn call scraper.
  _restaurant_opentable_get_info($url);
}

/**
 * Helper function to get the url of the restaurant page.
 */
function _restaurant_opentable_get_url() {
  return panopoly_config_get('opentable_url');
}

/**
 * Get the location of the simple_html_dom library.
 *
 * @return
 *   The location of the library, or FALSE if the library isn't installed.
 */
function restaurant_opentable_get_simple_html_dom_path() {
  $path = FALSE;


   if (function_exists('libraries_get_path')) {
     $path = libraries_get_path('simplehtmldom');
     if ($path && file_exists($path . '/simple_html_dom.php')) {
       return $path . '/simple_html_dom.php';
     }
   }

  // Get path to simple_html_dom.
  $path = drupal_get_path('module', 'restaurant_base');
  if ($path && file_exists($path . '/libraries/simplehtmldom/simple_html_dom.php')) {
    return $path . '/libraries/simplehtmldom/simple_html_dom.php';
  }

  return $path;
}

