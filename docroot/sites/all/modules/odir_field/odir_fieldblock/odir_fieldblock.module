<?php
/**
 * @file
 * Main file of odir_field module
 */

/**
 * Implemets hook_help().
 */
function odir_fieldblock_help($path, $arg) {
  if ($path == 'admin/help#odir') {
    return '<p>' . t("Adds a block with nodes associated to directory.") . '</p>';
  }
}

/**
 * Implements hook_theme().
 */
function odir_fieldblock_theme() {
  return array(
    'odir_field_add_button' => array(
      'template' => 'templates/odir-field-add-button',
      'variables' => array(
        'url' => '',
        'label' => '',
        'element_counter' => '',
      ),
    ),
    'odir_field_add_button_header' => array(
      'template' => 'templates/odir-field-add-button-header',
      'variables' => array(),
    ),
  );
}


/**
 * Implements hook_block_info().
 * Dublicates the odir blocks for every odir_field.
 */
function odir_fieldblock_block_info() {
  $blocks = array();
  $rows = odir_field_load_fields('odir_field');
  if ($rows) {
    foreach ($rows as $r) {
      $blocks[odir_fieldblock_get_delta_id('associated nodes', $r->field_name)]['info'] = t('Nodes assossicated to directory (@fieldname)', array('@fieldname' => $r->field_name));
      $blocks[odir_fieldblock_get_delta_id('folder list', $r->field_name)]['info'] = t('ALPHA-STATUS: Subdirectories (@fieldname)', array('@fieldname' => $r->field_name));
      $blocks[odir_fieldblock_get_delta_id('folder operations', $r->field_name)]['info'] = t('ALPHA-STATUS: Directory operations (@fieldname)', array('@fieldname' => $r->field_name));
    }
  }
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function odir_fieldblock_block_view($delta = '') {
  $dir = odir_system_path();
  $current_path_encoded = _odir_get_current_path_encoded_from_field_or_from_sesssion('odir_block_fieldname');
  $current_path = odir_decode($current_path_encoded);
  $blocks = array();
  $rows = odir_field_load_fields('odir_field');
  if ($rows) {
    foreach ($rows as $r) {
      $base_div_id = "odir_field_block_view_associated_node_" . $r->field_name;
      switch ($delta) {
        case odir_fieldblock_get_delta_id('associated nodes', $r->field_name):
          $blocks['subject'] = t('Associated nodes @fieldname', array('@fieldname' => $r->field_name));
          $blocks['content'] = odir_fieldblock_view_associated_nodes($base_div_id, $r->field_name, $current_path);
          break;
          
        case odir_fieldblock_get_delta_id('folder list', $r->field_name):
            $blocks['subject'] = t('Navigation @fieldname', array('@fieldname' => $r->field_name));
            $blocks['content'] = odir_block_view_folder_list($base_div_id, $current_path_encoded, $current_path);
            $blocks['fieldname'] = $r->field_name;
            break;
          
        case odir_fieldblock_get_delta_id('folder operations', $r->field_name) :
          $blocks['subject'] = t('Operations @fieldname', array('@fieldname' => $r->field_name));
          $blocks['content'] = odir_block_view_folder_operations($base_div_id, $current_path_encoded, $current_path);
          $blocks['fieldname'] = $r->field_name;
          break;
      }
      return $blocks;
    }
  }
}

/**
 * Returns the delta-id which has to be limited to a length of 32!
 */
function odir_fieldblock_get_delta_id($delta, $field_name) {
  $temp = $field_name . ' ' . $delta;
  return substr($temp, 0, 31);
}

/**
 * Prepares the block "associated nodes"
 */
function odir_fieldblock_view_associated_nodes($base_div_id, $field_name, $current_path) {
  $content = "";
  if ($current_path == "") {
    return "";
  }
  $rows = odir_field_load_associated_nodes($field_name, $current_path);
  foreach ($rows as $r) {
    $content .= "<div id=\"" . $base_div_id . "_" . $r->nid . "\">" . l($r->title, 'node/' . $r->nid, array()) . "</div>";
  }
  return $content;
}

/**
 * Displays links providing the actual directory as parameter.
 * Add node to active directory. (Not actually used!)
 */
function odir_fieldblock_menu_alter_display_links() {
  $count = 0;
  $content = '';
  foreach (odir_field_get_node_types() as $type) {
    if ($count == 0) {
      $content .= theme('odir_field_add_button_header', array());
    }
    $type_url_str = str_replace('_', '-', $type->node_type);
    $odir = odir_current_encoded();
    $new_menu_item_url = 'node/add/' . $type_url_str . '_odir/' . $odir;
    $content .= theme('odir_field_add_button', array(
      'url' => url($new_menu_item_url),
      'label' => $type_url_str,
      'element_counter' => $count,
    ));
    $count++;
  }
  return $content;
}
