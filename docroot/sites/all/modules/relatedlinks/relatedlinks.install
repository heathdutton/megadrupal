<?php

/**
 * @file
 * Installation and uninstallation scripts for the relatedlinks module.
 */

/**
 * Implements hook_install().
 */
function relatedlinks_install() {
  $t = get_t();

  if (!module_exists('taxonomy') && !module_exists('search')) {
    drupal_set_message($t('The discovered links feature of the relatedlinks module requires one of the following modules:
<ul>
  <li>Taxonomy</li>
  <li>Search</li>
</ul>'));
    return;
  }

  drupal_set_message($t('Relatedlinks module: Installation script complete.'));
}

/**
 * Implements hook_schema().
 */
function relatedlinks_schema() {
  $schema['relatedlinks'] = array(
    'description' => 'Relatedlinks module: store manual, parsed and discovered links.',
    'fields' => array(
      'lid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Link ID'
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Node ID'
      ),
      'url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Link URL'
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => NULL,
        'description' => 'Link title'
      ),
      'type' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
        'description' => 'Link type: Parsed, manual or discovered'
      )
    ),
    'indexes' => array(
      'nid' => array('nid'),
      'nid_type' => array('nid', 'type')
    ),
    'primary key' => array('lid')
  );

  $schema['relatedlinks_tracker'] = array(
    'description' => 'Table keeping track of discovered links.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The related node ID'
      ),
      'keywords' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Keywords to aid discovered links'
      ),
      'updated' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Last updated time'
      )
    ),
    'indexes' => array('updated' => array('updated')),
    'primary key' => array('nid')
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function relatedlinks_requirements() {
  $requirements = array();

  if (!module_exists('taxonomy') && !module_exists('search')) {
    $t = get_t();

    $requirements['relatedlinks'] = array(
      'title' => $t('Relatedlinks'),
      'value' => $t('The discovered links feature of the relatedlinks module requires one of either Search or Taxonomy modules to be enabled.'),
      'severity' => REQUIREMENT_INFO
    );
  }

  return $requirements;
}

/**
 * The relatedlinks blocks should not be cached. Equivalent of
 * relatedlinks_update_6000() which has not been ported. It does not matter if
 * this update runs more than once.
 *
 * @see http://drupal.org/node/1155634
 */
function relatedlinks_update_7000() {
  db_update('block')
    ->fields(array('cache' => DRUPAL_NO_CACHE))
    ->condition('module', 'relatedlinks')
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function relatedlinks_uninstall() {
  variable_del('relatedlinks_types');
  variable_del('relatedlinks_node_types');
  variable_del('relatedlinks_discovered');

  $t = get_t();
  drupal_set_message($t('Relatedlinks module: Uninstallation script complete.'));
}

