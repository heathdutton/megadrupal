<?php

/**
 * Implements hook_feeds_parser_sources_alter().
 */
function feeds_entityreference_feeds_parser_sources_alter(&$sources, $content_type) {
  if (!empty($content_type)) {
    $field_names_from = array();
    $field_names_to = array();
    foreach (field_info_instances() as $entity_type => $entity_fields) {
      foreach ($entity_fields as $bundle => $bundle_fields) {
        foreach ($bundle_fields as $field) {
          $field_info = field_info_field($field['field_name']);
          if ($field_info['type'] == 'entityreference') {
            if ((isset($field_info['settings']))
              && (isset($field_info['settings']['target_type'])) 
              && (isset($field_info['settings']['handler_settings'])) 
              && (isset($field_info['settings']['handler_settings']['target_bundles'])) 
              && ($field_info['settings']['target_type'] == 'node')
              && (isset($field_info['settings']['handler_settings']['target_bundles'][$content_type]))) {
                $field_names_from[] = $entity_type . ':' . $bundle . ':' . $field['field_name'];
            }
          }
        }
      }
    }
    foreach (field_info_instances('node', $content_type) as $field) {
      $field_info = field_info_field($field['field_name']);
      if ($field_info['type'] == 'entityreference') {
        $field_names_to[] = $field['field_name'];
      }
    }

    foreach ($field_names_from as $field_name) {
      $sources['parent:entityreference:from:' . $field_name] = array(
        'name' => t('Feed node: referencing entity using: @field', array('@field' => $field_name)),
        'description' => t('Entity which references to feed node.'),
        'callback' => 'feeds_entityreference_get_referencing_entity',
      );
    }
    foreach ($field_names_to as $field_name) {
      $sources['parent:entityreference:to:' . $field_name] = array(
        'name' => t('Feed node: entity referenced using: @field', array('@field' => $field_name)),
        'description' => t('Entity which is referenced by feed node.'),
        'callback' => 'feeds_entityreference_get_referenced_entity',
      );
    }
  }
}

/**
 * Implements hook_feeds_processor_targets_alter().
 */
function feeds_entityreference_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  foreach (field_info_instances($entity_type, $bundle_name) as $field_name => $instance_info) {
    $field_info = field_info_field($field_name);
    if ($field_info['type'] == 'entityreference') {
      $targets['entityreference:' . $field_name] = array(
        'name' => t('Value of field: @field', array('@field' => $field_name)),
        'description' => t('Raw value for entity reference field: @label', array('@label' => $instance_info['label'])),
        'callback' => 'feeds_entityreference_set_entityreference_target',
      );
    }
  }
}

/**
 * Callback, returns entities which reference to feed node.
 */
function feeds_entityreference_get_referencing_entity(FeedsSource $source, FeedsParserResult $result, $key) {
  if ($node = node_load($source->feed_nid)) {
    list($entity_name, $bundle, $field_name) = explode(':', str_replace('parent:entityreference:from:', '', $key));

    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', $entity_name, '=')
      ->entityCondition('bundle', $bundle)
      ->fieldCondition($field_name, 'target_id', $source->feed_nid, '=');
    $query_result = $query->execute();

    $result = array();
    if (isset($query_result[$entity_name])) {
      foreach (array_keys($query_result[$entity_name]) as $entity_id) {
        $result[] = $entity_id;
      }
    }

    return $result;
  }
}

/**
 * Callback, returns entities referenced by feed node.
 */
function feeds_entityreference_get_referenced_entity(FeedsSource $source, FeedsParserResult $result, $key) {
  $field_name = str_replace('parent:entityreference:to:', '', $key);
  if ($node = node_load($source->feed_nid)) {
    $result = array();
    $entity_ids = array();
    if (isset($node->$field_name)) {
      foreach ($node->$field_name as $language => $values) {
        foreach ($values as $value) {
          $id = (isset($value['target_id'])) ? $value['target_id'] : NULL;
          if ($id) {
            $entity_ids[$id] = $id;
          }
        }
      }
    }
    foreach ($entity_ids as $entity_id) {
      $result[] = $entity_id;
    }
    return $result;
  }
}

/**
 * Callback for mapping entity reference fields.
 */
function feeds_entityreference_set_entityreference_target($source, $entity, $target, $value, $mapping) {
  if (empty($value)) {
    return;
  }
  if (!is_array($value)) {
    $value = array($value);
  }

  $target = str_replace('entityreference:', '', $target);
  $info = field_info_field($target);
  $language = isset($mapping['language']) ? $mapping['language'] : LANGUAGE_NONE;

  $field = isset($entity->$target) ? $entity->$target : array($language => array());

  // Allow for multiple mappings to the same target.
  $delta = count($field[$language]);

  foreach ($value as $v) {
    if ($info['cardinality'] == $delta) {
      break;
    }
    if (is_object($v) && ($v instanceof FeedsElement)) {
      $v = $v->getValue();
    }
    if (($v) && (is_numeric($v))) {
      $field[$language][$delta]['target_id'] = $v;
      $delta++;
    }
  }

  $entity->{$target} = $field;
}
