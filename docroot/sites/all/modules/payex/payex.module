<?php

/**
 * @file
 * Module for processing payments via PayEx API.
 */

/**
 * Implementation of hook_menu().
 */
function payex_menu() {
  return array(
    'admin/config/payment/payex' => array(
      'title' => 'PayEx settings',
      'description' => 'Configure PayEx account settings',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('payex_admin_settings_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'payex.admin.inc',
      'file path' => drupal_get_path('module', 'payex') .'/includes',
    ),
  );
}

/**
 * Implementation of hook_menu_alter().
 */
function payex_menu_alter(&$items) {
  // Add a general payment config area, if none is present
  if (!isset($items['admin/config/payment'])) {
    $items['admin/config/payment'] = array(
      'title' => 'Payment',
      'description' => 'Payment integration modules.',
      'position' => 'right',
      'weight' => -10,
      'page callback' => 'system_admin_menu_block_page',
      'access arguments' => array('access administration pages'),
      'file' => 'system.admin.inc',
      'file path' => drupal_get_path('module', 'system'),
    );
  }
}

/**
 * Provide a list of valid payment types for PayEx.
 */
function payex_payment_types() {
  return array(
    'PX' => t('PayEx account'),
    'VISA' => t('Visa'),
    'MC' => t('Mastercard'),
    'EUROCARD' => t('Eurocard'),
    'MAESTRO' => t('Maestro'),
    'DINERS' => t('Diners Club'),
    'AMEX' => t('American Express'),
    'JCB' => t('JCB'),
    'FINAX' => t('Finax'),
    'DANKORT' => t('Dankort'),
  );
}

/**
 * Provide a list of valid currencies for PayEx.
 */
function payex_currencies() {
  return array(
    'DKK' => t('Danish krone'),
    'EUR' => t('Euro'),
    'GBP' => t('Pound sterling'),
    'SEK' => t('Swedish krona'),
    'NOK' => t('Norwegan krone'),
    'USD' => t('United States dollar'),
  );
}

/**
 * Get PayEx language based on Drupal language.
 */
function payex_get_language($lang_code) {
  $payex_lang = array(
    'cs' => 'cs-CS',
    'da' => 'da-DK',
    'de' => 'de-DE',
    'en' => 'en-US',
    'es' => 'es-ES',
    'fi' => 'fi-FI',
    'fr' => 'fr-FR',
    'hu' => 'hu-HU',
    'nb' => 'nb-NO',
    'pl' => 'pl-PL',
    'sv' => 'sv-SE',
  );

  if (isset($payex_lang[$lang_code])) {
    return $payex_lang[$lang_code];
  }
  else {
    return $payex_lang['en'];
  }
}

/**
 * Initialize a payment.
 */
function payex_order_initialize($params) {
  $settings = variable_get('payex_settings', array());

  // Use default VAT and currency settings if not provided by caller.
  $params += array(
    'currency' => $settings['currency'],
    'vat' => $settings['vat'] * 100,
  );

  if (!isset($settings['merchant_account']) || !isset($settings['encryption_key'])) {
    drupal_set_message(t('PayEx payment services not properly configured. Payment not possible.'), 'error');
    return array();
  }

  module_load_include('class.php', 'payex', 'lib/PxOrder');

  try {
    $pxo = new PxOrder($settings['merchant_account'],  $settings['encryption_key']);
    $response = $pxo->initialize($params);
  }
  catch (SoapFault $error){
    drupal_set_message(t('An error occured while communicating with the PayEx payment service. Please try again.'), 'error');
    watchdog('payex', 'SoapFault in %function: %faultstring', array(
      '%function' => __FUNCTION__,
      '%faultstring' => $error->faultstring,
    ), WATCHDOG_CRITICAL);
  }

  // TODO: Handle error conditions here.

  return $response;
}

/**
 * Complete a payment.
 */
function payex_order_complete($params) {
  $settings = variable_get('payex_settings', array());

  if (!isset($settings['merchant_account']) || !isset($settings['encryption_key'])) {
    drupal_set_message(t('PayEx payment services not properly configured. Payment not possible.'), 'error');
    return array();
  }

  module_load_include('class.php', 'payex', 'lib/PxOrder');

  try {
    $pxo = new PxOrder($settings['merchant_account'],  $settings['encryption_key']);
    $response = $pxo->complete($params);
  }
  catch (SoapFault $error){
    drupal_set_message(t('An error occured while communicating with the PayEx payment service. Please try again.'), 'error');
    watchdog('payex', 'SoapFault in %function: %faultstring', array(
      '%function' => __FUNCTION__,
      '%faultstring' => $error->faultstring,
    ), WATCHDOG_CRITICAL);
  }

  // TODO: Handle error conditions here.

  return $response;
}

