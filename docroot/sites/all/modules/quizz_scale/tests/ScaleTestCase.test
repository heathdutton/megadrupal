<?php

/**
 * Test class for scale questions.
 */
class ScaleTestCase extends QuizTestCase {

  protected $questionHandler = 'scale';

  public static function getInfo() {
    return array(
        'name'        => t('Scale'),
        'description' => t('Test cases for scale question type.'),
        'group'       => 'Quiz question',
    );
  }

  function setUp($modules = array(), $admin_permissions = array(), $user_permissions = array()) {
    $modules[] = 'quizz_scale';
    parent::setUp($modules, $admin_permissions, $user_permissions);
  }

  /**
   * Create a new question with default settings.
   */
  private function createQuizQuestion() {
    return $this->drupalCreateQuestion(array(
          'type'         => $this->questionHandler,
          'title'        => 'Scale 1 title',
          'alternative0' => 'This is alternative 1',
          'alternative1' => 'This is alternative 2',
          'alternative2' => 'This is alternative 3',
          'alternative3' => 'This is alternative 4',
          'alternative4' => 'This is alternative 5',
          'body'         => 'Scale 1 body text',
    ));
  }

  function testTakeQuestion() {
    $question = $this->createQuizQuestion();

    // Link the question.
    $quiz = $this->linkQuestionToQuiz($question);

    // Test that question appears in lists.
    $this->drupalLogin($this->admin);
    $this->drupalGet("quiz/$quiz->qid/questions");
    $this->assertText('Scale 1 title');

    // Login as non-admin.
    $this->drupalLogin($this->user);

    // Take the quiz.
    $this->drupalGet("quiz/$quiz->qid/take");
    $this->assertText('Scale 1 body text');
    $this->assertText('This is alternative 1');
    $this->assertText('This is alternative 2');

    // Test validation.
    $this->drupalPost(NULL, array(), t('Finish'));
    $this->assertText('You must provide an answer.');

    // Test any question.
    $this->drupalGet("quiz/$quiz->qid/take");
    // Alternative #2 is actually 24 (because of the presets).
    $this->drupalPost(NULL, array("question[$question->qid][answer]" => 24), t('Finish'));
    $this->assertText('You got 1 of 1 possible points.');
  }

}
