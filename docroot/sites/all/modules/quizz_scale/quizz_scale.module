<?php

use Drupal\quizz_scale\Entity\Collection;

/**
 * Implements hook_theme().
 */
function quizz_scale_theme($existing, $type, $theme, $path) {
  $module_path = drupal_get_path('module', 'quizz_scale');
  return array(
      'quizz_scale_creation_form'        => array(
          'render element' => 'form',
          'path'           => $module_path . '/theme',
          'file'           => 'scale.theme.inc',
      ),
      'quizz_scale_response_form'        => array(
          'render element' => 'form',
          'path'           => $module_path . '/theme',
          'file'           => 'scale.theme.inc',
      ),
      'quizz_scale_answer_question_view' => array(
          'variables' => array(
              'alternatives' => NULL,
          ),
          'path'      => $module_path . '/theme',
          'file'      => 'scale.theme.inc',
      ),
      'scale_answering_form'             => array(
          'render element' => 'form',
          'path'           => $module_path . '/theme',
          'template'       => 'scale-answering-form',
      ),
  );
}

/**
 * Implements hook_quizz_question_info().
 */
function quizz_scale_quizz_question_info() {
  return array(
      'scale' => array(
          'name'              => t('Scale question'),
          'description'       => t('Quiz questions that allow a user to choose from a scale.'),
          'question provider' => 'Drupal\quizz_scale\ScaleQuestion',
          'response provider' => 'Drupal\quizz_scale\ScaleResponse',
          'module'            => 'quizz_question', // All wrapper functions are in that module.
      ),
  );
}

/**
 * Implements hook_entity_info().
 * @return array
 */
function quizz_scale_entity_info() {
  $info = array();

  if (db_table_exists('quiz_scale_collection')) {
    $info['scale_collection'] = array(
        'label'            => t('Collection'),
        'plural label'     => t('Collections'),
        'description'      => t('Scale collections'),
        'entity class'     => 'Drupal\quizz_scale\Entity\Collection',
        'controller class' => 'Drupal\quizz_scale\Entity\CollectionController',
        'base table'       => 'quiz_scale_collection',
        'fieldable'        => FALSE,
        'exportable'       => TRUE,
        'entity keys'      => array('id' => 'id', 'name' => 'name', 'label' => 'label'),
        'access callback'  => 'quizz_scale_collection_access_callback',
        'module'           => 'quizz_scale',
    );
  }

  return $info;
}

/**
 * Implements hook_user_cancel().
 *
 * @TODO: See #2383607
 */
function quizz_scale_user_cancel($edit, $account, $method) {
  $query = db_query(
    'SELECT id
     FROM {quiz_scale_collection} collection
       JOIN {quiz_scale_user} u ON collection.id = u.collection_id
     WHERE uid = :uid
       AND collection.for_all = :for_all
       AND collection.id NOT IN (SELECT collection_id FROM {quiz_scale_question})
       AND collection.id NOT IN (SELECT collection_id FROM {quiz_scale_user} WHERE NOT uid = :uid)', array(
      ':uid'     => $account->uid,
      ':for_all' => 0
  ));

  foreach ($query as $row) {
    $ids[] = $row->id;
  }

  if (!empty($ids)) {
    entity_delete_multiple('scale_collection', $ids);
  }
}

/**
 * @return \Drupal\quizz_scale\Entity\CollectionController
 */
function quizz_scale_collection_controller() {
  return entity_get_controller('scale_collection');
}

/**
 * Load collection entity.
 *
 * @param int $id
 * @return \Drupal\quizz_scale\Entity\Collection|null
 */
function quizz_scale_collection_entity_load($id) {
  return entity_load_single('scale_collection', $id);
}

/**
 * Access callback for scale_collection entity.
 *
 * @param string $op
 * @param Collection $collection
 * @param stdClass $account
 * @return bool
 */
function quizz_scale_collection_access_callback($op, $collection = NULL, $account = NULL) {
  return TRUE;
}
