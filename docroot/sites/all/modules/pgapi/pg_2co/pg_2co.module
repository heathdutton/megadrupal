<?php

// Define constants
define("c2coActionUrlSingle", "https://www.2checkout.com/checkout/spurchase");
define("c2coActionUrlMulti",  "https://www.2checkout.com/checkout/spurchase");

/**
 * Implements hook_menu().
 */
function pg_2co_menu() {
  $items = array();
  $items['2co/done'] = array(
    'title' => 'Internal Data',
    'page callback' => 'pg_2co_done_payment',
    'access callback' => TRUE,
    'file' => 'pg_2co.pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/pgdata/pgsettings/2co'] = array(
    'title' => '2co',
    'description' => '2co payment settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pg_2co_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer pgapi'),
    'file' => 'pg_2co.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_pgapi_gw().
 */
function pg_2co_pgapi_gw($op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'display name':
      $ret = t('2co Payment Gateway');
      break;
    case 'payment gateway info':
      $ret['name'] = t('2co');
      $prices[variable_get('pg_2co_currency_code', 'USD')] = round(($a3 * variable_get('pg_2co_rate', '1.00')), 2);
      $ret['price'] = $prices;
      break;
    case 'process form':
      $transaction = $a3;
      $ret = _pg_2co_process_form($transaction);
      break;
    case 'get form':
      $transaction = $a3;
      $ret = drupal_get_form('pg_2co_extraform', $transaction);
      break;
    default:
      $ret = '';
  }
  return $ret;
}

/**
 * Implements hook_pgapi_transaction().
 */
function pg_2co_pgapi_transaction($status, &$transaction) {
  switch ($status) {
    case PG_PENDING:
      $transaction->extra['amount'] = round(($transaction->amount * variable_get('pg_2co_rate', '1.00')), 2);
      break;
  }
}

/**
 * Return form for 2co payment
 */
function pg_2co_extraform($form_state, $transaction) {
  $form = array();
  $form['message'] = array(
    '#type' => 'markup',
    '#value' => t('We will charge !amount from your CC', array('!amount' => round(($transaction->amount * variable_get('pg_2co_rate', '1.00')), 2))),
  );
  return $form;
}

/**
 * Process 2co transaction
 */
function _pg_2co_process_form($transaction) {
  $output = drupal_get_form('pg_2co_payform', $transaction);
  $transaction->gateway = '2co';
  pgapi_transaction_save($transaction);
  echo '<html><body>' . $output . '<script>pgpayform.submit();</script></body>';
  exit();
}

/**
 *  Return 2co payment form
 */
function pg_2co_payform($form, &$form_state, $transaction) {
  $form = array();
  $form['sid'] = array(
    '#type' => 'hidden',
    '#default_value' => variable_get('pg_2co_sid', ''),
  );
  $form['total'] = array(
    '#type' => 'hidden',
    '#default_value' => number_format($transaction->amount * variable_get('pg_2co_rate', '1.00'), 2),
  );
  $form['cart_order_id'] = array(
    '#type' => 'hidden',
    '#default_value' => $transaction->txnid,
  );
  $form['demo'] = array(
    '#type' => 'hidden',
    '#default_value' => variable_get('pg_2co_demo', TRUE),
  );
  $form['lang'] = array(
    '#type' => 'hidden',
    '#default_value' => variable_get('pg_2co_language', 'en'),
  );
  $form['x_receipt_link_url'] = array(
    '#type' => 'hidden',
    '#default_value' => url('2co/success', array('absolute' => TRUE)),
  );
  $form['#attributes'] = array('name' => 'pgpayform');
  $form['#action'] = variable_get('pg_2co_action_url', c2coActionUrlSingle);
  return $form;
}
