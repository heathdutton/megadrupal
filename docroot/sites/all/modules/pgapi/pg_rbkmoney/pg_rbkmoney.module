<?php

// Define constants
define("crbkmoneyPayActionUrl", "https://rbkmoney.ru/acceptpurchase.aspx");

/**
 * Implements hook_menu().
 */
function pg_rbkmoney_menu() {
  $items = array();
  $items['rbkmoney/done'] = array(
    'title' => 'Internal Data',
    'page callback' => 'pg_rbkmoney_done_payment',
    'access callback' => TRUE,
    'file' => 'pg_rbkmoney.pages.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/pgdata/pgsettings/rbkmoney'] = array(
    'title' => 'RBK Money',
    'description' => 'rbkmoney payment settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pg_rbkmoney_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer pgapi'),
    'file' => 'pg_rbkmoney.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_pgapi_gw().
 */
function pg_rbkmoney_pgapi_gw($op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'display name':
      $ret = t('RBK Money Payment Gateway');
      break;
    case 'payment gateway info':
      $ret['name'] = theme('image', array('path' => drupal_get_path('module', 'pg_rbkmoney') . '/images/rbk_money.png', 'width' => t('RBK Money'), 'height' => t('RBK Money')));
      $rate = variable_get('pg_rbkmoney_rate', '1.00');
      $currency = variable_get('pg_rbkmoney_currency', 'RUR');
      $prices[$currency] = round(($a3 * $rate), 2);
      $ret['price'] = $prices;
      break;
    case 'process form':
      $transaction = $a3;
      $form_state  = $a4;
      $ret = _pg_rbkmoney_process_form($form_state, $transaction);
      break;
    case 'get form':
      $transaction = $a3;
      //$form_state  = $a4;
      $ret = drupal_get_form('pg_rbkmoney_extraform', $transaction);
      break;
    default:
      $ret = '';
  }
  return $ret;
}

/**
 * Implements hook_pgapi_transaction().
 */
function pg_rbkmoney_pgapi_transaction($status, &$transaction) {
  switch ($status) {
    case PG_PENDING:
      $rate = variable_get('pg_rbkmoney_rate', '1.00');
      $currency = variable_get('pg_rbkmoney_currency', 'RUR');
      $prices[$currency] = round(($transaction->amount * $rate), 2);
      $transaction->extra['prices'] = $prices;
      break;
  }
}

/**
 * Return form with availible rbk payment methods
 */
function pg_rbkmoney_extraform($form, &$form_state, $transaction) {
  $options = array(
    "inner" => t('RBK Money purse'),
    "bankCard" => t('Credit card VISA/MasterCard'),
    "exchangers" => t('Internet Payment systems'),
    "prepaidcard" => t('Prepaid RBK Money Card'),
    "transfers" => t('Money transfer'),
    "terminals" => t('Payment terminals'),
    "bank" => t('Bank payment'),
    "postRus" => t('Russian post'),
    "atm" => t('ATM'),
    "ibank" => t('Internet banking'),
    "euroset" => t('Euroset'),
  );
  $default = key($options);
  $form['preference'] = array(
    '#type' => 'select',
    '#title' => t('Payment method'),
    '#options' => $options,
    '#default_value' => $default,
    '#attributes' => array('class' => 'rbk_method'),
  );
  return $form;
}

/**
 * Process RBK payment form
 */
function _pg_rbkmoney_process_form($form_result, $transaction) {
  $output = drupal_get_form('pg_rbkmoney_payform', $form_result, $transaction);
  $transaction->method = 'pg_rbkmoney';
  pgapi_transaction_save($transaction);
  echo '<html><body>' . $output . '<script>pgpayform.submit();</script></body>';
  exit();
}


/**
 * Return RBK payment form
 */
function pg_rbkmoney_payform($form, $form_state, $post, $transaction) {
  global $user;
  $rate = variable_get('pg_rbkmoney_rate', '1.00');
  $amount = round(($transaction->amount * $rate), 2);

  // Build payment form
  $form['eshopId'] = array(
    '#type' => 'hidden',
    '#value' => variable_get('pg_rbkmoney_eshopId', ''),
  );
  $form['orderId'] = array(
    '#type' => 'hidden',
    '#value' => $transaction->txnid,
  );
  $form['user_email'] = array(
    '#type' => 'hidden',
    '#value' => $transaction->email,
  );
  $form['preference'] = array(
    '#type' => 'hidden',
    '#value' => $post['preference'],
  );
  $form['serviceName'] = array(
    '#type' => 'hidden',
    '#default_value' => $transaction->title,
  );
  $form['recipientAmount'] = array(
    '#type' => 'hidden',
    '#value' => $amount,
  );
  $form['recipientCurrency'] = array(
    '#type' => 'hidden',
    '#value' => variable_get('pg_rbkmoney_currency', 'RUR'),
  );

  // Get transaction success url
  $transaction->status = PG_COMPLETED;
  $form['successUrl'] = array(
    '#type' => 'hidden',
    '#default_value' => url(pgapi_get_redirect_url($transaction), array('absolute' => TRUE)),
  );

  // Get transaction failure url
  $transaction->status = PG_FAILED;
  $form['failUrl'] = array(
    '#type' => 'hidden',
    '#default_value' => url(pgapi_get_redirect_url($transaction), array('absolute' => TRUE)),
  );

  $form['#attributes'] = array('name' => 'pgpayform');
  $form['#action'] = crbkmoneyPayActionUrl;
  return $form;
}

