<?php

/**
 * @file
 * Install file for lingwo_language.
 */

/**
 * Implements hook_schema().
 */
function lingwo_language_schema() {
  $schema['lingwo_language_revisions'] = array(
    'description' => 'Stores a collection of named values for each revision of a language definition.',
    'fields' => array(
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'The {node} this version belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'The name of the language value.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'value' => array(
        'description' => 'Serialized data representing the language value.',
        'type' => 'text',
        'size' => 'normal',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
      'vid' => array('vid'),
    ),
    'primary key' => array('vid', 'name'),
  );

  $schema['lingwo_language'] = array(
    'description' => 'Connects lingwo_language nodes to languages.',
    'fields' => array(
      'nid' => array(
        'description' => 'The lingwo_language {node}.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'language' => array(
        'description' => 'The entry on {languages}.',
        'type' => 'varchar',
        'length' => 12,
        'default' => NULL,
      ),
    ),
    'indexes' => array(
      'language' => array('language'),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}


/**
 * Implements hook_install().
 */
function lingwo_language_install() {
  $entry_type = LingwoEntry::$settings->content_type;

  // By default, we enable translation, with the thinking that if the user has a multi-lingual site
  // they probably want translation, if then setting this variable will affect nothing.
  // 2 = TRANSLATION_ENABLED.  We can't use the symbol because 'translation' might not be enabled.
  variable_set('language_content_type_' . $entry_type, 2);
}

/**
 * Implements hook_uninstall().
 */
function lingwo_language_uninstall() {
  // TODO: ARG! How can we use our code to do the uninstall if the module is
  // already disabled? This is probably a job for the 'variable' module.
  /*
  foreach (LingwoLanguage::$settings->getNames() as $name) {
    variable_del($name);
  }
  */
}

