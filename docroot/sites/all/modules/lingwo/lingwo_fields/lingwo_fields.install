<?php

/**
 * @file
 * Install file for lingwo_fields.
 */

/**
 * Implements hook_schema().
 */
function lingwo_fields_schema() {
  $schema['lingwo_fields_revisions'] = array(
    'description' => 'Stores the fields data for a revision of a given entry',
    'fields' => array(
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'The {node} this version belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'description' => 'Serialized data representing the fields.',
        'type' => 'text',
        'size' => 'normal',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
    ),
    'primary key' => array('vid'),
  );

  $schema['lingwo_fields_forms'] = array(
    'description' => 'A lookup table for finding entries based on their forms.',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node} that this form is from.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'form' => array(
        'description' => 'The form of the of this entry.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'form_name' => array(
        'description' => 'The name of this form.',
        'type' => 'varchar',
        'length' => '255',
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
      'form' => array('form'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function lingwo_fields_uninstall() {
  // TODO: ARG! How can we use our code to do the uninstall if the module is
  // already disabled? This is probably a job for the 'variable' module.
  /*
  foreach (LingwoFields::$settings->getNames() as $name) {
    variable_del($name);
  }
   */
}

