<?php

/**
 * @file
 * Install file for lingwo_entry.
 */

/**
 * Implements hook_schema().
 */
function lingwo_entry_schema() {
  $schema['lingwo_entry'] = array(
    'description' => 'Used to look-up dictionary entries and ensure uniqueness.',
    'fields' => array(
      'language' => array(
        'description' => 'The {languages}.language of this entry.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'pos' => array(
        'description' => 'Part of speech',
        'type' => 'varchar',
        'length' => 24,
        'not null' => TRUE,
        'default' => '',
      ),
      'headword' => array(
        'description' => 'The headword of this entry.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'nid' => array(
        'description' => 'The primary identifier for the entry node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entry_hash' => array(
        'description' => 'A SHA-1 hash of language, pos and headword',
        'type' => 'char',
        'length' => '40',
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('language', 'pos', 'headword'),
    'unique keys' => array(
      'nid' => array('nid'),
      'entry_hash' => array('entry_hash'),
    ),
    // The default collation (utf8_general_ci) treats accented characters (like: ó, ą, ę, ń)
    // as equivalent to their unaccented counter-parts.  Also, we want entry titles to be
    // case-sensitively unique (ie. "Ps" is different than "PS") -- ticket #38.
    'mysql_suffix' => "DEFAULT CHARSET=utf8 COLLATE=utf8_bin",
  );

  $schema['lingwo_entry_info'] = array(
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for the entry node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'language' => array(
        'description' => 'The language spec (language-language) for this entry',
        'type' => 'varchar',
        'length' => 24,
        'not null' => TRUE,
        'default' => '',
      ),
      'source_language' => array(
        'description' => 'The source {languages}.language of this entry.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'target_language' => array(
        'description' => 'The target {languages}.language of this entry.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'translation' => array(
        'description' => 'Boolean indicating whether this is a translation or not.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'pos' => array(
        'description' => 'Part of speech',
        'type' => 'varchar',
        'length' => 24,
        'not null' => TRUE,
        'default' => '',
      ),
      'entry_hash' => array(
        'description' => 'A SHA-1 hash of language, pos and headword',
        'type' => 'char',
        'length' => '40',
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'language' => array('language'),
      'source_language' => array('source_language'),
      'target_language' => array('target_language'),
      'pos' => array('pos'),
      'translation' => array('translation'),
    ),
    'unique keys' => array(
      'entry_hash' => array('entry_hash'),
    ),
    'primary key' => array('nid'),
    // Needs to match all the other tables with entry_hash so that the indexes will work!
    'mysql_suffix' => "DEFAULT CHARSET=utf8 COLLATE=utf8_bin",
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function lingwo_entry_install() {
  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'lingwo_entry') . '/lingwo_entry.api.inc';
  $entry_type = LingwoEntry::$settings->content_type;

  // By default, we don't want to promote dictionary entries to the front page.
  variable_set('node_options_' . $entry_type, array('status'));

  // we need to happen after the "locale" module (which we would if the module name was
  // alphabetically higher) and probably after some other modules too..
  db_query("UPDATE {system} SET weight = 50 WHERE name = 'lingwo_entry'");
}

/**
 * Implements hook_uninstall().
 */
function lingwo_entry_uninstall() {
  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'lingwo_entry') . '/lingwo_entry.api.inc';
  $entry_type = LingwoEntry::$settings->content_type;

  // remove all of our variables
  foreach (LingwoEntry::$settings->getNames() as $name) {
    variable_del($name);
  }

  // these core variables get left behind for some reason
  variable_del("node_options_" . $entry_type);
  variable_del("upload_" . $entry_type);
}

/**
 * Update functions.
 */

