<?php
/**
 * Message Private installer.
 */

/**
 * Implements hook_requirements().
 *
 * Check if there are Group nodes on the system that can be used in the view.
 */
function message_private_og_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break during installation.
  $t = get_t();

  if ($phase == 'install' || $phase == 'runtime') {
    if (function_exists('og_get_all_group_bundle')) {
      $bundles = og_get_all_group_bundle();
      if (!isset($bundles['node'])) {
        $requirements['message_private_og_bundle'] = array(
          'title' => $t('Message Private OG'),
          'description' => $t('You need a bundle that is a group type to send group messages'),
          'severity' => REQUIREMENT_WARNING,
          'value' => $t('No group bundle'),
        );
      }
    }
  }

  return $requirements;
}

/**
 * Implements hook_install().
 *
 * Creates a new bundle type private_message, creates field bases and field
 * instances and associates them to the bundle.
 */
function message_private_og_install() {

  // Ensure translations don't break during installation.
  $t = get_t();

  $field_bases = array();

  $field_bases['field_message_group_ref'] = array(
    'active' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_message_group_ref',
    'foreign keys' => array(
      'node' => array(
        'columns' => array(
          'target_id' => 'nid',
        ),
        'table' => 'node',
      ),
    ),
    'indexes' => array(
      'target_id' => array(
        0 => 'target_id',
      ),
    ),
    'locked' => 0,
    'module' => 'entityreference',
    'settings' => array(
      'entity_translation_sync' => FALSE,
      'handler' => 'base',
      'handler_settings' => array(
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 1,
          ),
        ),
        'sort' => array(
          'type' => 'none',
        ),
        'target_bundles' => array('group'),
      ),
      'target_type' => 'node',
    ),
    'translatable' => 0,
    'type' => 'entityreference',
  );

  foreach ($field_bases as $field_base) {
    field_create_field($field_base);
  }

  $field_instances = array();

  $field_instances['message-private_message-field_message_group_ref'] = array(
    'bundle' => 'private_message',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'inline',
        'module' => 'entityreference',
        'settings' => array(
          'link' => 1,
        ),
        'type' => 'entityreference_label',
        'weight' => 1,
      ),
      'message_notify_email_body' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
      'message_notify_email_subject' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 3,
      ),
    ),
    'entity_type' => 'message',
    'field_name' => 'field_message_group_ref',
    'label' => $t('To Groups'),
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_select',
      'weight' => 0,
    ),
  );

  foreach ($field_instances as $field_instance) {
    field_create_instance($field_instance);
  }
}

/**
 * Implements hook_enable().
 *
 * Changes the User Reference field required value.
 */
function message_private_og_enable() {
  // Fetch an instance info array for User reference field.
  $instance_info = field_info_instance('message', 'field_message_user_ref', 'private_message');
  // Change the required property in the instance definition to not required.
  $instance_info['required'] = FALSE;
  // Write the changed definition back.
  field_update_instance($instance_info);
}

/**
 * Implements hook_disable().
 *
 * Restores the User Reference field back to required.
 */
function message_private_og_disable() {
  // Fetch an instance info array for User reference field.
  $instance_info = field_info_instance('message', 'field_message_user_ref', 'private_message');
  // Change the required property in the instance definition to not required.
  $instance_info['required'] = TRUE;
  // Write the changed definition back.
  field_update_instance($instance_info);
}

/**
 * Implements hook_uninstall().
 *
 * Deletes the fields defined by this module.
 */
function message_private_og_uninstall() {
  field_delete_field('field_message_group_ref');
}
