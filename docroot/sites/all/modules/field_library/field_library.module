<?php

/**
 * @file
 * Provides the main module functionality.
 */

/**
 * Implements hook_permission().
 */
function field_library_permission() {
  $return = array();

  $return['administer field_library'] = array(
    'title' => t('Administer field library'),
    'description' => t('Allow to the user to modify field library bundles.'),
    'restrict access' => TRUE,
  );

  $return['use field_library'] = array(
    'title' => t('Use field library'),
    'description' => t('Use field library to rapidly build out content and other entity type fields.'),
    'restrict access' => TRUE,
  );

  return $return;
}

/**
 * Implements hook_entity_info().
 */
function field_library_entity_info() {
  $return = array();

  $return['field_library'] = array(
    'label' => t('Field Library'),
    'entity class' => 'FieldLibrary',
    'controller class' => 'DrupalDefaultEntityController',
    'base table' => 'field_library',
    'module' => 'field_library',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'eid',
      'name' => 'name',
      'bundle' => 'bundle',
    ),
    'bundle keys' => array('bundle' => 'name'),
  );
  foreach (field_library_get_bundles() as $bundle_name => $bundle_info) {
    $return['field_library']['bundles'][$bundle_name] = array(
      'label' => $bundle_info->title,
      'admin' => array(
        'path' => 'admin/structure/field-library/manage/%field_library_bundle',
        'real path' => 'admin/structure/field-library/manage/' . $bundle_name,
        'bundle argument' => 4,
        'access arguments' => array('administer field_library'),
      ),
    );
  }

  return $return;
}

/**
 * Gets all library bundles.
 */
function field_library_get_bundles() {
  ctools_include('export');
  return ctools_export_crud_load_all('field_library_bundle');
}

/**
 * Menu item loader.
 */
function field_library_bundle_load($id) {
  ctools_include('export');
  return ctools_export_crud_load('field_library_bundle', $id);
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function field_library_ctools_plugin_directory($owner, $plugin_type) {
  // Load the export_ui plugin.
  if ($plugin_type == 'export_ui') {
    return 'plugins/export_ui';
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for field_ui_field_overview_form().
 */
function field_library_form_field_ui_field_overview_form_alter(&$form, $form_state) {
  if (user_access('use field_library')) {
    // Add the select field.
    $options = array();
    foreach (field_library_get_bundles() as $bundle) {
      $options[$bundle->name] = $bundle->title;
    }
    $form['field_library'] = array(
      '#type' => 'fieldset',
      '#title' => t('Add fields from library'),
      '#tree' => FALSE,
    );
    $form['field_library']['field_library_bundle'] = array(
      '#type' => 'select',
      '#title_display' => 'invisible',
      '#title' => t('Add fields from field library'),
      '#options' => $options,
      '#empty_option' => t('- Select a field library bundle -'),
      '#description' => t('Re-use a group of fields from the field library.'),
      '#attributes' => array('class' => array('field-select')),
      '#cell_attributes' => array('colspan' => 4),
      '#prefix' => '<div class="add-field-library-placeholder">&nbsp;</div>',
    );
    $form['field_library']['field_library_add'] = array(
      '#type' => 'submit',
      '#value' => t('Add from library'),
      '#submit' => array('field_library_add_library_submit'),
      '#validate' => array('field_library_add_library_validate'),
    );
    if (user_access('administer field_library')) {
      $form['field_library']['field_library_bundle']['#description'] = t('Re-use a group of fields from the <a href="!url">field library.</a>', array(
        '!url' => url('admin/structure/field-library/field_library_bundle'),
      ));
    }
  }
}

/**
 * Provides the submit handler for adding a field library to a bundle.
 */
function field_library_add_library_validate(&$form, &$form_state) {
  $library = $form_state['values']['field_library_bundle'];
  if (empty($library)) {
    form_set_error('field_library_bundle', t('Add from library: you need to select a field library bundle.'));

  }
}

/**
 * Provides the submit handler for adding a field library to a bundle.
 */
function field_library_add_library_submit(&$form, &$form_state) {
  $entity_type = $form['#entity_type'];
  $bundle = $form['#bundle'];
  $library = $form_state['values']['field_library_bundle'];
  $form_state['redirect'] = sprintf('admin/structure/field-library/add/%s/%s/%s', $entity_type, $bundle, $library);
}

/**
 * Implements hook_menu().
 */
function field_library_menu() {
  $items = array();
  $items['admin/structure/field-library/add/%/%/%field_library_bundle'] = array(
    'page callback' => 'drupal_get_form',
    'access arguments' => array('use field_library'),
    'file' => 'field_library.admin.inc',
    'page arguments' => array('field_library_add_confirm', 4, 5, 6),
  );
  return $items;
}
