<?php
/**
 * @file
 * Module that extends the settings for trimmed text fields, that allows us to trim on word boundary.
 */

/**
 * Implements hook_field_formatter_info_alter().
 */
function field_word_boundary_field_formatter_info_alter(&$info) {
  $info['text_trimmed']['settings']['ellipsis'] = FALSE;
  $info['text_trimmed']['settings']['word_boundary'] = FALSE;
  $info['text_summary_or_trimmed']['settings']['ellipsis'] = FALSE;
  $info['text_summary_or_trimmed']['settings']['word_boundary'] = FALSE;
}

/**
 * Implements hook_field_formatter_settings_form_alter().
 */
function field_word_boundary_field_formatter_settings_form_alter(&$settings_form, $context) {
  $display = $context['instance']['display'][$context['view_mode']];
  $settings = $display['settings'];
  
  // Normalize the settings.
  $settings['word_boundary'] = isset($settings['word_boundary']) ? $settings['word_boundary'] : FALSE;
  $settings['ellipsis'] = isset($settings['ellipsis']) ? $settings['ellipsis'] : FALSE;

  if (in_array($display['type'], array('text_trimmed', 'text_summary_or_trimmed'))) {
    $settings_form['word_boundary'] = array(
      '#title' => t('Trim on word boundary'),
      '#type' => 'checkbox',
      '#default_value' => $settings['word_boundary'],
      '#attached' => array(
        'js' => array(drupal_get_path('module', 'field_word_boundary') . '/field_word_boundary.js')
      ),
    );
    $settings_form['ellipsis'] = array(
      '#title' => t('Add ellipsis'),
      '#type' => 'checkbox',
      '#default_value' => $settings['ellipsis'],
    );
  }
}

/**
 * Implements hook_field_formatter_settings_summary_alter().
 */
function field_word_boundary_field_formatter_settings_summary_alter(&$summary, $context) {
  $display = $context['instance']['display'][$context['view_mode']];
  $settings = $display['settings'];
  
  // Normalize the settings.
  $settings['word_boundary'] = isset($settings['word_boundary']) ? $settings['word_boundary'] : FALSE;
  $settings['ellipsis'] = isset($settings['ellipsis']) ? $settings['ellipsis'] : FALSE;

  if (in_array($display['type'], array('text_trimmed', 'text_summary_or_trimmed'))) {
    $summary .= '<br />' . t('Word boundary') . ': ' . ($settings['word_boundary'] ? t('Yes') : t('No'));
    if ($settings['word_boundary']) {
      $summary .= '<br />' . t('Ellipsis') . ': ' . ($settings['ellipsis'] ? t('Yes') : t('No'));
    }
  }  
}

/**
 * Implements hook_field_attach_view_alter().
 */
function field_word_boundary_field_attach_view_alter(&$output, $context) {
  foreach (element_children($output) as $field_name) {
    if (in_array($output[$field_name]['#formatter'], array('text_trimmed', 'text_summary_or_trimmed'))) {
      $element = &$output[$field_name];
      $instance = field_info_instance($element['#entity_type'], $field_name, $element['#bundle']);
      $display = isset($instance['display'][$context['view_mode']]) ? $instance['display'][$context['view_mode']] : $instance['display']['default'];
      $settings = $display['settings'];
      
      // Normalize the settings.
      $settings['word_boundary'] = isset($settings['word_boundary']) ? $settings['word_boundary'] : FALSE;
      $settings['ellipsis'] = isset($settings['ellipsis']) ? $settings['ellipsis'] : FALSE;

      // If the word boundary option isn't selected for this field, we shouldn't
      // do anything. Continue to the next field.
      if (!$settings['word_boundary']) {
        continue;
      }

      switch ($element['#formatter']) {
        case 'text_trimmed':
          foreach ($element['#items'] as $delta => $item) {
            // Trim the text using the original safe value, and add an ellipsis
            // if it's selected.
            $element[$delta]['#markup'] = _filter_htmlcorrector(truncate_utf8($item['safe_value'], $settings['trim_length'], $settings['word_boundary'], $settings['ellipsis']));
          }
          break;
          
        case 'text_summary_or_trimmed';
          foreach ($element['#items'] as $delta => $item) {
            // If the user hasn't specified a summary, we'll trim the text and
            // add an  ellipsis if it's selected.
            if (empty($item['summary'])) {
              $element[$delta]['#markup'] = _filter_htmlcorrector(truncate_utf8($item['safe_value'], $settings['trim_length'], $settings['word_boundary'], $settings['ellipsis']));            
            }
          }
          break;
      }
    }
  }
}
