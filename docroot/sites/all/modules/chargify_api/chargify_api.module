<?php

/**
 * @file
 *   Chargify API Module file.
 */

// Load the vendor classes
require_once 'vendor/autoload.php';

use Chargify\Controller\Factory as ControllerFactory;

/**
 * Implements hook_menu().
 */
function chargify_api_menu() {
  $items = array();

  $items['admin/config/services/chargify'] = array(
    'title' => 'Chargify',
    'description' => 'Configure Chargify settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chargify_api_settings_form'),
    'access arguments' => array('administer chargify'),
    'file' => 'chargify_api.admin.inc',
  );

  if (function_exists('json_decode')) {
    $items['chargify-postback'] = array(
      'page callback' => 'chargify_api_chargify_postback',
      'type' => MENU_CALLBACK,
      'access callback' => TRUE,
    );
  }

  return $items;
}

/**
 * Implements hook_permission().
 */
function chargify_api_permission() {
  return array(
    'access chargify' => array(
      'title' => t('Access Chargify API'),
      'description' => t('Ability to use the Chargify API'),
    ),
  );
}

/**
 * Page callback for chargify-postback.
 */
function chargify_api_chargify_postback() {
  // Read the raw POST data, since PHP doesn't know what to do with a JSON post.
  $json = file_get_contents('php://input');
  if (($subscriptions = json_decode($json)) && is_array($subscriptions) && !empty($subscriptions)) {
    module_invoke_all('chargify_api_postback', $subscriptions);
  }
}

/**
 * Get the controller for a given resource.
 * @param  string $resource Lower case singular name of the resource.
 * @return object           Resource controller object.
 */
function chargify_api_controller($resource) {
  try {
    $controller = NULL;

    // Check permissions.
    if (user_access('access chargify')) {
      // Determin domain and api key.
      if (variable_get('chargify_api_test_mode', FALSE)) {
        $domain = variable_get('chargify_api_test_domain', '');
        $api_key = variable_get('chargify_api_test_api_key', '');
      }
      else {
        $domain = variable_get('chargify_api_domain', '');
        $api_key = variable_get('chargify_api_api_key', '');
      }

      $controller = ControllerFactory::build($resource, $domain, $api_key);
    }

    return $controller;
  }
  catch (Exception $e) {
    watchdog_exception('chargify_api', $e, $e->getMessage(), array(), WATCHDOG_ERROR);
  }
}

