<?php

/**
 * @file
 * Schema, install and update functions for agrcache module.
 */

/**
 * Implements hook_requirements().
 */
function agrcache_requirements($phase) {
  $t = get_t();
  $requirements = array();
  if (!variable_get('clean_url', 0) && $phase == 'runtime') {
    $requirements['agrcache_clean_url'] = array(
      'title' => $t('Clean urls'),
      'value' => $t('Aggregate cache requires clean URLs to be enabled in order to serve aggregates.'),
      'severity' => REQUIREMENT_WARNING,
    );
  }
  return $requirements;
}

/**
 * Regenerate variables in case previous values were corrupt due to a race condition.
 */
function agrcache_update_7001() {
  variable_del('agrcache_js_cache_files');
  variable_del('agrcache_css_cache_files');
}

/**
 * Don't use variables anymore.
 */
function agrcache_update_7002() {
  variable_del('agrcache_js_cache_files');
  variable_del('agrcache_css_cache_files');
  $schema = agrcache_schema_7002();
  db_create_table('agrcache_files', $schema['agrcache_files']);
}

/**
 * Implements hook_schema().
 */
function agrcache_schema() {
  return agrcache_schema_7002();
}

/**
 * Helper for hook_schema() and update functions.
 */
function agrcache_schema_7002() {
  $schema['agrcache_files'] = array(
    'description' => 'Storage for css and js files data.',
    'fields' => array(
      'fid' => array(
        'description' => 'The primary identifier for an aggregate file.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'file_type' => array(
        'description' => 'Css or js.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'file_list' => array(
        'description' => 'The value of the variable.',
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'translatable' => TRUE,
      ),
    ),
    'indexes' => array(
      'file_type' => array('file_type'),
    ),
    'primary key' => array('fid'),
  );
  return $schema;
}
