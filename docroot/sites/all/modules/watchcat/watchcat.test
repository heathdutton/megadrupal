<?php
/**
 * @file
 * Tests for watchcat.
 */

/**
 * Helper test class with some added functions for testing.
 */
class WatchatTestHelper extends DrupalWebTestCase {
  public function setUp($modules = array()) {
    $modules[] = 'entity';
    $modules[] = 'watchcat';
    $modules[] = 'watchcat_example';
    parent::setUp($modules);
  }

  function assertVerb($verb) {
    $verbs = &drupal_static(__FUNCTION__);

    if (!isset($verbs)) {
      // Load all verbs defined by hook_watchcat_verbs().
      foreach (module_implements('watchcat_verbs') as $module) {
        $verbs[$module] = module_invoke($module, 'watchcat_verbs');
      }
      // Let other modules alter the verbs.
      drupal_alter('watchcat_verbs', $verbs);
    }

    // Split the verb.
    list($_module, $_verb) = explode(':', $verb, 2);
    $this->assertTrue(isset($verbs[$_module][$_verb]), t("The verb @verb was found.", array('@verb' => $verb)));
  }

  function assertLog($actor, $verb, $object = NULL, $target = NULL, $message = '') {
    $query = db_select('watchcat')
      ->fields('watchcat')
      ->condition('actor_id', $actor)
      ->condition('verb', $verb);

    if (!is_null($object)) {
      $query->condition('object_id', $object);
    }

    if (!is_null($target)) {
      $query->condition('target_id', $target);
    }

    $log = $query->execute()->fetch();

    if (empty($message)) {
      $message = 'Log was created.';
    }

    $this->assertTrue($log, $message);

    return $log;
  }
}

/**
 * Test watchcat hooks.
 */
class WatchCatHookTestCase extends WatchatTestHelper {
  public static function getInfo() {
    return array(
      'name' => 'Watchcat hook tests',
      'description' => '...',
      'group' => 'Watchcat',
    );
  }

  /**
   * Test hook_watchcat_verbs().
   */
  function testHookVerbs() {
    $this->assertVerb('user:login');
    $this->assertVerb('user:logout');
    $this->assertVerb('node:insert');
    $this->assertVerb('node:update');
    $this->assertVerb('node:delete');
  }
}

/**
 * Test watchcat logs.
 */
class WatchCatLogTestCase extends WatchatTestHelper {

  public static function getInfo() {
    return array(
      'name' => 'Watchcat log tests',
      'description' => '...',
      'group' => 'Watchcat',
    );
  }

  /**
   * Test the watchcat() function.
   */
  function testUserLogs() {
    // Create a user.
    $account = $this->drupalCreateUser();
    // Login with the user.
    $this->drupalLogin($account);
    $this->assertLog($account->uid, 'user:login', NULL, NULL, 'Login log created.');

    // Logout with the user.
    $this->drupalLogout();
    $this->assertLog($account->uid, 'user:logout', NULL, NULL, 'Logout log created.');
  }

  /**
   * Test the watchcat() function.
   */
  function testNodeLogs() {
    global $user;

    // Create a node.
    $node = $this->drupalCreateNode();
    $this->assertLog($user->uid, 'node:insert', $node->nid, NULL, 'Node insert log created.');

    // Update the node.
    $node->title = 'Updated title';
    node_save($node);
    $this->assertLog($user->uid, 'node:update', $node->nid, NULL, 'Node update log created.');

    // Delte the node.
    node_delete($node->nid);
    $this->assertLog($user->uid, 'node:delete', $node->nid, NULL, 'Node delete log created.');
  }
}