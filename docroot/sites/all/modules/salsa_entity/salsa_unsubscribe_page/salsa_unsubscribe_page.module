<?php

/**
 * @file
 * Salsa unsubscribe page module.
 */

/**
 * Implements hook_salsa_object_type_info().
 */
function salsa_unsubscribe_page_salsa_object_type_info() {
  return array(
    'unsubscribe_page' => array(
      'label' => t('Salsa Unsubscribe Page'),
      'entity class' => 'SalsaUnsubscribePage',
    ),
    'unsubscribe' => array(
      'label' => t('Salsa Unsubscribe'),
    ),
  );
}

/**
 * Unsubscribe page form.
 */
function salsa_unsubscribe_page_form($form, &$form_state, $unsubscribe_page) {
  global $user;

  $form_state['salsa_object'] = $unsubscribe_page;

  $form_state['supporter'] = FALSE;
  if (isset($_GET['token'])) {
    $supporter_KEY = db_select('salsa_supporter_token', 'st')
      ->fields('st', array('supporter_KEY'))
      ->condition('token', $_GET['token'])
      ->execute()
      ->fetchField();

    if ($supporter_KEY) {
      $form_state['supporter'] = entity_load_single('salsa_supporter', $supporter_KEY);
    }
    else {
      drupal_set_message(t('Error processing login token.'), 'error');
    }
  }
  elseif ($user->uid > 0) {
    $form_state['supporter'] = salsa_entity_get_supporter();
  }

  if ($form_state['supporter']) {
    if (isset($unsubscribe_page->PreTag_Text)) {
      $form['PreTag_Text'] = array(
        '#type' => 'item',
        '#markup' => $unsubscribe_page->PreTag_Text,
      );
    }

    // Groups checkboxes.
    $groups_options = array();
    $groups_KEYS = salsa_entity_string_explode($unsubscribe_page->groups_KEYS);
    if (!empty($groups_KEYS) && $supporter_groups = entity_load('salsa_supporter_groups', FALSE, array('supporter_KEY' => $form_state['supporter']->supporter_KEY))) {
      $all_groups = entity_load('salsa_groups');
      foreach ($supporter_groups as $supporter_group) {
        if (in_array($supporter_group->groups_KEY, $groups_KEYS)) {
          $groups_options[$supporter_group->supporter_groups_KEY] = $all_groups[$supporter_group->groups_KEY]->Group_Name;
        }
      }
    }

    // Tags checkboxes.
    $tags_options = array();
    $tags_KEYS = salsa_entity_string_explode($unsubscribe_page->tag_KEYS);
    if (!empty($tags_KEYS)) {
      $tags = entity_load('salsa_tag', $tags_KEYS);
      $database_table = reset(entity_load('salsa_database_table', FALSE, array('table_name' => 'supporter')));
      foreach ($tags_KEYS as $tag_KEY) {
        $tag_data = entity_load('salsa_tag_data', FALSE, array(
          'tag_KEY' => $tag_KEY,
          'database_table_KEY' => $database_table->database_table_KEY,
          'table_key' => $form_state['supporter']->supporter_KEY
          ));
        if (!empty($tag_data)) {
          foreach ($tag_data as $item) {
            $tags_options[$item->tag_data_KEY] = $tags[$item->tag_KEY]->tag;
          }
        }
      }
    }

    asort($groups_options);
    asort($tags_options);

    $form_state['groups_option_KEYS'] = array_keys($groups_options);
    $form_state['tags_option_KEYS'] = array_keys($tags_options);

    $default_value = 0;
    $groups_tags_options = $groups_options + $tags_options;
    if (empty($groups_tags_options)) {
      $default_value = 1;
      $remove_options = array(
        1 => t('Everything. Permanently remove me from all lists.'),
      );
    }
    elseif ($unsubscribe_page->hide_remove_from_emaillist == 'true') {
      $default_value = NULL;
      $remove_options = array();
    }
    else {
      $remove_options = array(
        1 => t('Everything. Permanently remove me from all lists.'),
        0 => t('The following lists:'),
      );
    }

    $form['remove'] = array(
      '#type' => 'radios',
      '#title' => t('Unsubscribe @email from:', array('@email' => $form_state['supporter']->Email)),
      '#options' => $remove_options,
      '#default_value' => $default_value,
    );

    $form['groups_tags'] = array(
      '#type' => 'container',
      '#states' => array(
        'visible' => array(
          ':input[name=remove]' => array('value' => 0),
        ),
      ),
    );

    if (!empty($groups_options)) {
      $form['groups_tags']['groups_KEYS'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Groups'),
        '#options' => $groups_options,
        '#default_value' => $form_state['groups_option_KEYS'],
      );
    }

    if ($tags_options) {
      $form['groups_tags']['tags_KEYS'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Tags'),
        '#options' => $tags_options,
        '#default_value' => $form_state['tags_option_KEYS'],
      );
    }

    if ($unsubscribe_page->show_reason_field == 'true') {
      $form['reason'] = array(
        '#type' => 'textarea',
        '#title' => t('Please tell us why you are unsubscribing:'),
        '#placeholder' => t('Please enter a reason'),
      );
    }

    if (isset($unsubscribe_page->Footer)) {
      $form['Footer'] = array(
        '#type' => 'item',
        '#markup' => $unsubscribe_page->Footer,
      );
    }

    $form['unsubscribe'] = array(
      '#type' => 'submit',
      '#value' => t('Unsubscribe'),
    );

    $form['cancel'] = array(
      '#type' => 'submit',
      '#value' => t('Cancel'),
      '#submit' => array('salsa_unsubscribe_page_cancel'),
    );
  }
  else {
    // User is not logged in, so we need to verify it first.
    $form['Email'] = array(
      '#type' => 'textfield',
      '#title' => t('Please verify your e-mail address to unsubscribe:'),
      '#placeholder' => t('e-mail address'),
    );

    // Even though the user is not verified, pre-fill the e-mail if possible.
    if ($supporter = salsa_entity_get_supporter()) {
      $form['Email']['#default_value'] = $supporter->Email;
    }

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Verify my e-mail address'),
      '#submit' => array('salsa_unsubscribe_page_verify_email_address'),
    );
  }

  return $form;
}

/**
 * Unsubscribe page form validate.
 */
function salsa_unsubscribe_page_form_validate($form, &$form_state) {
  // Email validation.
  if (isset($form_state['values']['Email'])) {
    $mail = $form_state['values']['Email'];
    if (!valid_email_address($mail)) {
      form_set_error('Email', t('The e-mail address you specified is not valid.'));
    }
    else {
      // Check if the supporter exists and has subscribed.
      $supporter = entity_load('salsa_supporter', FALSE, array('Email' => $mail));
      $supporter = reset($supporter);
      if  (is_object($supporter) && isset($supporter->Receive_Email) && ($supporter->Receive_Email != 1)) {
        form_set_error('Email', t('No supporters with the specified email address were subscribed.'));
      }
      elseif (!is_object($supporter)) {
        form_set_error('Email', t('Supporter with @email e-mail address is not registered.', array('@email' => $form_state['values']['Email'])));
      }
    }
  }
}

/**
 * Unsubscribe submit callback.
 */
function salsa_unsubscribe_page_form_submit($form, &$form_state) {
  if ($form_state['values']['remove']) {
    // Remove permanently.
    $form_state['supporter']->Receive_Email = -3;
    $form_state['supporter']->save();

    drupal_set_message(t('You were successfully removed from all future emails.'));
  }
  else {
    // Remove selected groups.
    if (isset($form_state['values']['groups_KEYS'])) {
      entity_delete_multiple('salsa_supporter_groups', array_filter($form_state['values']['groups_KEYS']));
    }

    // Remove selected tags.
    if (isset($form_state['values']['tags_KEYS'])) {
      entity_delete_multiple('salsa_tag_data', array_filter($form_state['values']['tags_KEYS']));
    }

    drupal_set_message(t('You were successfully removed from the specified lists.'));
  }

  // Add reason.
  if (isset($form_state['values']['reason'])) {
    $reason = new SalsaEntity(array(), 'salsa_unsubscribe');
    $reason->organization_KEY = $form_state['salsa_object']->organization_KEY;
    $reason->supporter_KEY = $form_state['supporter']->supporter_KEY;
    $reason->Email = $form_state['supporter']->Email;
    $reason->Unsubscribe_Method = 'Web Page';
    $reason->reason = $form_state['values']['reason'];
    $reason->save();
  }

  if (isset($form_state['salsa_object']->redirect_path)) {
    drupal_goto($form_state['salsa_object']->redirect_path);
  }
  drupal_goto('<front>');
}

/**
 * Submit callback that verifies e-mail address.
 */
function salsa_unsubscribe_page_verify_email_address($form, &$form_state) {
  global $language;

  // Generate and save token.
  $key = '';
  $mail = $form_state['values']['Email'];
  $supporter = reset(entity_load('salsa_supporter', FALSE, array('Email' => $mail)));
  if  (is_object($supporter) && isset($supporter->supporter_KEY)) {
    $key = $supporter->supporter_KEY;
  }
  $record = db_select('salsa_supporter_token', 'st')
    ->fields('st')
    ->condition('supporter_KEY', $key)
    ->execute()
    ->fetchAssoc();

  if (!$record) {
    $record = array(
      'supporter_KEY' => $key,
      'token' => drupal_get_token($key),
      'timestamp' => REQUEST_TIME,
    );
    drupal_write_record('salsa_supporter_token', $record);
  }

  // Send an e-mail with unsubscribe link.
  $url = $form_state['salsa_object']->uri();
  $params = array('unsubscribe_link' => url($url['path'], array('absolute' => TRUE, 'query' => array('token' => $record['token']))));

  $message = drupal_mail('salsa_unsubscribe_page', microtime(), $mail, $language, $params);
  if ($message['result']) {
    drupal_set_message(t('Please check your email (@email) for a link to unsubscribe.', array('@email' => $mail)));
  }
}

/**
 * Implements hook_mail().
 */
function salsa_unsubscribe_page_mail($key, &$message, $params) {
  $message['subject'] = t('Confirm your unsubscribe');
  $message['body'][] = t('Please complete the unsubscribe process by clicking the link below.') . "\n\n";
  $message['body'][] = $params['unsubscribe_link'];
}

/**
 * Cancel callback.
 */
function salsa_unsubscribe_page_cancel($form, &$form_state) {
  drupal_set_message(t('Your subscription preferences are unchanged.'));
  if (isset($form_state['salsa_object']->redirect_path)) {
    drupal_goto($form_state['salsa_object']->redirect_path);
  }
  drupal_goto('<front>');
}
