<?php

/**
 * @file
 * Salsa API test methods.
 */


class SalsaUnsubscribePageTestCase extends SalsaEntityBaseTestCase {
  public function setUp() {
    parent::setUp(array('salsa_profile', 'salsa_signup_page', 'salsa_unsubscribe_page'));
  }
}

class SalsaUnsubscribePageWhenNotLoggedInTestCase extends SalsaUnsubscribePageTestCase {
  public static function getInfo() {
    return array(
      'name' => t('Unsubscribe page - not logged in.'),
      'description' => t('This test covers the unsubscribe process when the user is not logged in.'),
      'group' => t('Salsa API'),
    );
  }

  /**
   * Check if the supporter data loaded correctly.
   */
  function testUnsubscribePageNotLoggedIn() {
    // Create an admin user.
    $permissions = array(
      'access administration pages',
      'administer users',
      'administer salsa',
      'administer permissions',
    );

    $admin_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($admin_user);

    // Set perimissions.
    $permissions = array(
      '1[view salsa_unsubscribe_page]' => TRUE,
      '2[view salsa_unsubscribe_page]' => TRUE,
    );
    $this->drupalPost('admin/people/permissions', $permissions, t('Save permissions'));
    $this->drupalLogout();

    // Verify email address.
    $unsubscribe = array('Email' => 'example@example.com');
    $this->drupalPost('salsa/unsubscribe_page/1', $unsubscribe, t('Verify my e-mail address'));

    // Get mails.
    $mails = $this->drupalGetMails();

    // Permanently unsubscribe user from all lists.
    $unsubscribe = array('remove' => TRUE);
    $this->drupalPost($mails[0]['params']['unsubscribe_link'], $unsubscribe, t('Unsubscribe'));

    // Check that Receive_Email property is -3.
    $saved = variable_get('salsa_entity_mock_saved', array());
    $this->assertTrue($saved['supporter'][1]['Receive_Email'], -3, t('Supporter @email unsubscribed.', array('@email' => 'example@example.com')));

    // Check for failing with a nonexistent email address.
    $unsubscribe = array('Email' => 'nonexistent@example.com');
    $this->drupalPost('salsa/unsubscribe_page/1', $unsubscribe, t('Verify my e-mail address'));
    $this->assertText(t('Supporter with @email e-mail address is not registered.', array('@email' => $unsubscribe['Email'])));

    // Check for an invalid email address as well.
    $unsubscribe = array('Email' => 'invalid-example.com');
    $this->drupalPost('salsa/unsubscribe_page/1', $unsubscribe, t('Verify my e-mail address'));
    $this->assertText(t('The e-mail address you specified is not valid.'));
  }


  /**
   * Check if the supporter data loaded correctly.
   */
  function testUnsubscribePageWhenLoggedIn() {
    // Create an admin user.
    $permissions = array(
      'access administration pages',
      'administer users',
      'administer salsa',
      'administer permissions',
    );

    $admin_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($admin_user);

    // Select signup page to be integrated with Drupal registration form.
    $signup_page_settings = array(
      'signup_page_registration_form' => 1,
    );
    $this->drupalPost('admin/config/services/salsa/signup_page', $signup_page_settings, t('Save configuration'));

    // Select custom field to store Drupal UID.
    $profile_settings = array(
      'salsa_profile_custom_field' => 'uid',
    );
    $this->drupalPost('admin/config/services/salsa/profile', $profile_settings, t('Save configuration'));

    // Disable email verification.
    $verification_settings = array(
      'user_register' => 1,
      'user_email_verification' => FALSE,
    );
    $this->drupalPost('admin/config/people/accounts', $verification_settings, t('Save configuration'));

    // Set perimissions.
    $permissions = array(
      '1[view salsa_unsubscribe_page]' => TRUE,
      '2[view salsa_unsubscribe_page]' => TRUE,
    );
    $this->drupalPost('admin/people/permissions', $permissions, t('Save permissions'));
    $this->drupalLogout();

    // Register a new user.
    $registration_form_fields = array(
      'name' => 'signup',
      'mail' => 'example@example.com',
      'pass[pass1]' => '123456789',
      'pass[pass2]' => '123456789',
      'Supporter_Info[First_Name]' => 'First Name',
      'Supporter_Info[Last_Name]' => 'Last Name',
      'Supporter_Info[Zip]' => 1000,
      'Supporter_Info[Receive_Email]' => 1,
    );
    $this->drupalPost('user/register', $registration_form_fields, t('Create new account'));

    // Permanently unsubscribe user from all lists.
    $unsubscribe = array('remove' => TRUE);
    $this->drupalPost('salsa/unsubscribe_page/1', $unsubscribe, t('Unsubscribe'));

    // Check that Receive_Email property is -3.
    $saved = variable_get('salsa_entity_mock_saved', array());
    $supporter_KEY = user_load_by_mail($registration_form_fields['mail'])->field_salsa_supporter_key[LANGUAGE_NONE][0]['value'];
    $this->assertTrue($saved['supporter'][$supporter_KEY]['Receive_Email'], -3, t('The user is permanently unsubscribed.'));
  }
}
