<?php
/**
 * @file
 * Shortcode for Google Maps - based on the Simple Google Maps module
 *
 * Provides a shortcode macro to embed Google Maps link/map to texts.
 */

/**
 * Implements hook_shortcode_info().
 */
function shortcode_gmap_shortcode_info() {
  $shortcodes['gmap'] = array(
    'title' => t('Embed Google map'),
    'description' => t('Embed google map to the text by url or address.'),
    'process callback' => 'shortcode_gmap_shortcode_gmap',
    // 'settings callback' => '_shortcode_settings_form', TODO
    // 'attributes callback' => "shortcode_gmap_gmap_attributes",
    'tips callback' => 'shortcode_gmap_shortcode_gmap_tip',
  );

  return $shortcodes;
}

/**
 * Provides the gmap shortcode callback.
 *
 * This function processes the given attributes and link and returns a google
 * map embed code.
 */
function shortcode_gmap_shortcode_gmap($attrs, $text) {
  $attrs = shortcode_attrs(array(
      'include_map' => TRUE,
      'include_link' => FALSE,
      'include_text' => FALSE,
      'width' => '100%',
      'height' => '300',
      'address' => '',
      'zoom' => 19,
      'information_bubble' => TRUE,
      'link_text' => t('View larger map'),
      'address_text' => '',
      'map_type' => 'm',
      'langcode' => '',
      'url_suffix' => '',
    ),
    $attrs
  );

  if (!empty($text)) {
    $attrs['address'] = $text;
  }

  if (empty($attrs['address_text'])) {
    $attrs['address_text'] = $attrs['address'];
  }

  if (empty($attrs['langcode'])) {
    $attrs['langcode'] = $GLOBALS['language']->language;
  }

  if (!empty($attrs['address'])) {
    $attrs['url_suffix'] = urlencode($attrs['address']);
  }

  switch ($attrs['map_type']) {
    case 'k':
    case 'satellite':
      $attrs['map_type'] = 'k';
      break;

    case 'h':
    case 'hybrid':
      $attrs['map_type'] = 'h';
      break;

    case 'p':
    case 'terrain':
      $attrs['map_type'] = 'p';
      break;

    default:
      $attrs['map_type'] = 'm';
      break;

  }
  $attrs['include_map'] = shortcode_bool($attrs['include_map']);
  $attrs['include_link'] = shortcode_bool($attrs['include_link']);
  $attrs['include_text'] = shortcode_bool($attrs['include_text']);
  $attrs['information_bubble'] = shortcode_bool($attrs['information_bubble']);

  return theme('shortcode_gmap', $attrs);
}


/**
 * Implements hook_theme().
 */
function shortcode_gmap_theme($existing, $type, $theme, $path) {
  return array(
    'shortcode_gmap' => array(
      'variables' => array(
        'include_map' => TRUE,
        'include_link' => FALSE,
        'include_text' => FALSE,
        'width' => 200,
        'height' => 200,
        'address' => '',
        'zoom' => 12,
        'information_bubble' => TRUE,
        'link_text' => t('View larger map'),
        'address_text' => '',
        'map_type' => 'm',
        'langcode' => 'en',
      ),
    ),
  );
}

/**
 * Provides theme function for the gmap Shortcode macro.
 */
function theme_shortcode_gmap($vars) {
  $out = '';

  if ($vars['include_map']) {
    $out .= '<iframe frameborder="0" scrolling="no" marginheight="0" marginwidth="0"'
      . ' width="' . $vars['width'] . '"'
      . ' height="' . $vars['height'] . '"'
      . ' src="https://maps.google.com/maps?hl='
        . $vars['langcode']
        . '&amp;q=' . $vars['url_suffix']
        . '&amp;iwloc=' . ($vars['information_bubble'] ? 'A' : 'near')
        . '&amp;z=' . $vars['zoom']
        . '&amp;t=' . $vars['map_type']
      . '&amp;output=embed"></iframe>';
  }

  if ($vars['include_link']) {
    $out .= '<p class="simple-gmap-link"><a href="https://maps.google.com/maps?q='
      . $vars['url_suffix']
      . '&amp;hl=' . $vars['langcode']
      . '&amp;iwloc=' . ($vars['information_bubble'] ? 'A' : 'near')
      . '&amp;z=' . $vars['zoom']
      . '&amp;t=' . $vars['map_type']
      . '" target="_blank">'
      . $vars['link_text']
      . '</a></p>';
  }

  if (!empty($vars['include_text']) && !empty($vars['address_text'])) {
    $out .= '<p class="simple-gmap-address">' . $vars['address_text'] . '</p>';
  }

  return $out;
}
