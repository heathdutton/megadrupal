<?php

/**
 * Implements hook_views_api().
 */
function entity_visits_views_api() {
  return array('api' => '3.0');
}

/**
 * Implements hook_menu().
 */
function entity_visits_menu() {
  $items = array();

  $items['config/system/entity_visits'] = array(
    'title' => 'Entity Visits',
    'description' => 'Configure entity visits settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('entity_visits_admin_settings'),
    'access arguments' => array('administer entity visits'),
    'file' => 'entity_visits.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function entity_visits_permission() {
  $permissions = array(
    'administer entity visits' => array(
      'title' => t('Administer Entity Visits'),
      'description' => t('Allows to administer entity visits module.'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_entity_view().
 */
function entity_visits_entity_view($entity, $type, $view_mode, $langcode) {
  if (user_is_logged_in() && isset($entity->type)) {
    $view_modes = variable_get("entity_visits_{$type}_{$entity->type}");

    if ($view_modes[$view_mode]) {
      $record = array(
        'eid' => entity_id($type, $entity),
        'uid' => $GLOBALS['user']->uid,
        'type' => $type,
        'bundle' => $entity->type,
        'view_mode' => $view_mode,
      );

      if ($record['eid']) {
        db_merge('entity_visits')
          ->key($record)
          ->fields($record + array('date' => time()))
          ->execute();
      }
    }
  }
}
