<?php
/**
 * @file
 * Testing comment stats module.
 */

/**
 * CommentStatsTests class for Comment Stats module extends DrupalWebTestCase.
 */
class CommentStatsTests extends DrupalWebTestCase {
  protected $webUser;

  /**
   * Metadata about comment stats main page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Comment stats main page',
      'description' => 'Testing comment stats main page.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Perform any setup tasks for our test case.
   */
  public function setUp() {
    parent::setUp(array('comment_stats'));

  }

  /**
   * Verify that current user has no access to page.
   *
   * @param string $url
   *   URL to verify.
   */
  public function commentStatsVerifyNoAccess($url) {
    // Test that page returns 403 Access Denied.
    $this->drupalGet($url);
    $this->assertResponse(403);
  }

  /**
   * Comment Stats main page functionality.
   */
  public function testCommentStatsMainPage() {

    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats');

    // Create a user with permissions to access 'access for comment stats' page.
    $this->webUser = $this->drupalCreateUser(array('access for comment stats'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalGet('admin/content/commentstats');
    $this->assertResponse(200, 'Comment stats main page is accessible.');
    $this->drupalLogout();

  }

}


/**
 * CommentStatsDashboard class extending Base class.
 */
class CommentStatsDashboard extends CommentStatsTests {
  /**
   * Metadata about comment stats dashboard page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Comment stats dashboard page',
      'description' => 'Testing comments stats dashboard page.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Test comments stats dashboard.
   */
  public function testCommentStatsDashboard() {
    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/dashboard');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/dashboard');

    // Create a user with permissions to access 'access for comment stats' page.
    $this->webUser = $this->drupalCreateUser(array('access for comment stats'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalGet('admin/content/commentstats/dashboard');
    $this->assertResponse(200, 'Comment stats dashboard page is accessible.');
    $this->drupalLogout();
  }

}

/**
 * CommentStatsUsers class extending Base class.
 */
class CommentStatsUsers extends CommentStatsTests {
  /**
   * Metadata about comment stats users page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Comment stats users page',
      'description' => 'Testing comment stats users page.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Test comments stats users page.
   */
  public function testCommentStatsUsers() {
    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/users/0');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/users/2');

    // Create a user with permissions to access 'access for user details in
    // comment stats' page.
    $this->webUser = $this->drupalCreateUser(array('access for user details in comment stats'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalGet('admin/content/commentstats/users/1');
    $this->assertResponse(200, 'Comment stats users page is accessible.');
    $this->drupalLogout();
  }

}

/**
 * CommentStatsComments class extending Base class.
 */
class CommentStatsComments extends CommentStatsTests {
  /**
   * Metadata about comment stats comments page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Comments access in comment stats module',
      'description' => 'Test comments page in comment stats.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Test comments stats comments.
   */
  public function testCommentStatsComments() {
    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/posts/0');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/posts/2');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/posts/gui87jjsh');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/posts/jhegd89');

    // Create a user with permissions to access 'access for posts in
    // comment stats' page.
    $this->webUser = $this->drupalCreateUser(array('access for posts in comment stats'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalGet('admin/content/commentstats/posts/1');
    $this->assertResponse(200, 'Comment stats comments page is accessible.');
    $this->drupalLogout();
  }

}

/**
 * CommentStatsReplies class extending Base class.
 */
class CommentStatsReplies extends CommentStatsTests {
  /**
   * Metadata about comment stats replies page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Comment Stats Replies',
      'description' => 'Testing replies in comment stats module.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Test comments stats replies.
   */
  public function testCommentStatsReplies() {
    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/replies/0');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/replies/2');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/replies/gui87jjsh');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/replies/jhegd89');

    // Create a user with permissions to access 'access for replies in comment
    // stats' page.
    $this->webUser = $this->drupalCreateUser(array('access for replies in comment stats'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalGet('admin/content/commentstats/replies/1');
    $this->assertResponse(200, 'Comment stats replies page is accessible.');
    $this->drupalLogout();
  }

}

/**
 * CommentStatsUnapproved class extending Base class.
 */
class CommentStatsUnapproved extends CommentStatsTests {
  /**
   * Metadata about comment stats unapproved page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Unapproved comments in Comment Stats',
      'description' => 'Testing unapproved comments view in comments stats.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Testing unapproved comments in comments stats.
   */
  public function testCommentStatsUnapproved() {
    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/unapproved/0');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/unapproved/2');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/unapproved/gui87jjsh');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/unapproved/jhegd89');

    // Create a user with permissions to access 'access for unapproved in
    // comment stats' page.
    $this->webUser = $this->drupalCreateUser(array('access for unapproved comments in comment stats'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalGet('admin/content/commentstats/unapproved/1');
    $this->assertResponse(200, 'Comment stats unapproved page is accessible.');
    $this->drupalLogout();
  }

}

/**
 * CommentStatsCommentView class extending Base class.
 */
class CommentStatsCommentView extends CommentStatsTests {
  /**
   * Metadata about comments view page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Comments View',
      'description' => 'Testing comments view.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Testing unapproved comments in comments stats.
   */
  public function testCommentsView() {
    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/comments/view/1/0');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/comments/view/2/2');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/comments/view/dummy/gui87jjsh');
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/comments/view/dummycontent/jhegd89');

    // Create a user with permissions to access 'access for viewing comments'
    $this->webUser = $this->drupalCreateUser(array('access for viewing comments'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalGet('admin/content/commentstats/comments/view/1/1');
    $this->assertResponse(200, 'Comment stats unapproved page is accessible.');
    $this->drupalLogout();
  }

}

/**
 * CommentStatsConfiguration class extending Base class.
 */
class CommentStatsConfiguration extends CommentStatsTests {
  /**
   * Metadata about comment stats configuration page.
   */
  public static function getInfo() {
    return array(
      'name' => 'Comments Stats Configuration',
      'description' => 'Testing comments stats configuration form.',
      'group' => 'Comment Stats',
    );
  }

  /**
   * Testing configuration of comments stats.
   */
  public function testCommentsStatsConfiguration() {
    // Verify that anonymous user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/config');

    // Create a regular user and login.
    $this->webUser = $this->drupalCreateUser();
    $this->drupalLogin($this->webUser);

    // Verify that regular user can't access the pages created by.
    $this->commentStatsVerifyNoAccess('admin/content/commentstats/config');

    // Create a user with permissions to access 'access for comment stats
    // configurations' page.
    $this->webUser = $this->drupalCreateUser(array('access for comment stats configurations'));
    $this->drupalLogin($this->webUser);

    // Verify that user can access simple content.
    $this->drupalPost(
    'admin/content/commentstats/config',
    array(
      'comment_stats_show_closed' => 0,
      'comment_stats_show_unpublished' => 0,
      'comment_stats' => 15,
      'comment_stats_users' => 15,
      'comment_stats_comments_per_user' => 15,
      'comment_stats_posts' => 15,
      'comment_stats_replies' => 15,
      'comment_stats_unapproved' => 15,
    ),
    t('Submit'));

    $this->assertResponse(200, 'Comment stats configuration form is submitted successfully.');
    $this->assertText(t('Comment stats configuration saved successfully.'));
    $this->drupalLogout();
  }

}
