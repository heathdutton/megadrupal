<?php
// $Id$

/**
 * @file
 * @brief
 *
 * Description: See README file
 *
 * @author Sean Boran (boran), http://drupal.org/user/147185
 */


/**
 * Implements hook_init().
 */
function mymenu_init() {
  drupal_add_js(drupal_get_path('module', 'mymenu') . '/menu.js');
  drupal_add_css(drupal_get_path('module', 'mymenu') . '/mymenu.css');
}


/**
 * Implements hook_block_info().
 */
function mymenu_block_info() {
  $blocks = array();
  $blocks['mymenu']['info'] = t('My Menu 1 dropdown');
  $blocks['mymenu']['cache'] = DRUPAL_NO_CACHE;
  $blocks['mymenu2']['info'] = t('My Menu 2 Login/logout');
  $blocks['mymenu2']['cache'] = DRUPAL_NO_CACHE;
  $blocks['mymenu3']['info'] = t('My Menu 3 Login/logout copy');
  $blocks['mymenu3']['cache'] = DRUPAL_NO_CACHE;
  $blocks['mymenulang']['info'] = t('My Menu 4 langbar');
  $blocks['mymenulang']['cache'] = DRUPAL_NO_CACHE;
  $blocks['mymenulang2']['info'] = t('My Menu 5 langbar copy');
  $blocks['mymenulang2']['cache'] = DRUPAL_NO_CACHE;
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mymenu_block_view($delta) {
  global $user, $base_path, $base_url, $language;
  $block = array();
  $img_prefix=$base_url . "/" . variable_get('file_public_path', conf_path() . '/files');


  // Languages switcher links like: EN FR DE IT
  // Add two copies, for header/footer
  if (($delta == 'mymenulang') || ($delta == 'mymenulang2')) { 
    //$block['subject'] = t('MyMenu Langs');
    $block['subject'] = '<none>';
    $path = drupal_is_front_page() ? '<front>' : $_GET['q'];
    $languages = language_list('enabled');
    $links = array();
    foreach ($languages[1] as $lang) {
      $links[$lang->language] = array(
        'href'       => $path,
        'title'      => strtoupper($lang->language),
        'language'   => $lang,
        'attributes' => array('class' => array('language-link')),
      );
    }
    $links[$lang->language]['attributes']['class'][]='last'; // tag the last element

    // rip following from translation.module translation_link_alter()
    // so that we can allow links to non translated content.
    // if a node has not DE version for example, just show the default lang version
    // @todo: see '#' below
    if ($paths = translation_path_get_translations($path)) {
      // Path can only start with "node/$nid" or "node/$nid/" here.
      $path = explode('/', $path);
      $node = node_load($path[1]);
      $translations = translation_node_get_translations($node->tnid);
      foreach ($links as $langcode => $link) {
        if (isset($paths[$langcode]) && $translations[$langcode]->status) {
        #if (isset($paths[$langcode]) && $translations[$langcode]->nid) {
          // Translation in a different node.
          $links[$langcode]['href'] = $paths[$langcode];
          #$links[$langcode]['href'] = 'node/' . $translations[$langcode]->nid;
        }
        else {
          // disable the unset to show non translated langs too
          // No translation in this language, or no permission to view.
          //unset($links[$langcode]);
        }
      }
    }
    $variables['links']=$links;
    $variables['attributes']['class']=array('links', 'inline');
    $block['content'] = theme('links', $variables); 
    return $block;
  }


  // block: picture/login/logout/My profile
  // tw instances mymenu2/3 that can be added at the same time to 
  // the top and bottom of a page
  if (($delta == 'mymenu2') || ($delta == 'mymenu3')) {  
    //$block['subject'] = 'mymenu2';
    $block['content'] = '<div id=mymenu2>';
    if ($user->uid == 0){ 
      $block['content'] .= l(t('Login/Register'), 'user/login'); 
      #$block['content'] .= '<div id=login>';
      #$block['content'] .= l(t('Login'), 'user/login'); 
      #$block['content'] .= '</div>';
      #$block['content'] .= '<div id=register>';
      #$block['content'] .= l(t('Register'), 'user/Register'); 
      #$block['content'] .= '</div>';
    } 
    else{ 
      $variables['account'] = $user;
      $variables['user_picture'] = '';
      template_preprocess_user_picture($variables);
      $block['content'] .= $variables['user_picture'];
      $block['content'] .= l(t('My profile'), 'user');
      $block['content'] .= ' | ' . l(t('Log out'), 'user/logout'); 
    }
    $block['content'] .= '</div>';
    return $block;
  }


  if ($delta == 'mymenu' && TRUE) {

    if ( $user->uid == 0 ) { // hide if the user is not logged in
      $block['content'] = '';
      $block['content'] .= l(t('Login/Register'), 'user/login'); 
      return $block;
    }

    if ( variable_get('mymenu_useristitle', '0') == '1') {
      $title = $user->name;
    }
    else {
      $title = t(variable_get('mymenu_title', 'My Menu')); // settings.php
    }
    $block['subject'] = t(variable_get('mymenu_blocktitle', '<none>'));

    // prefix user picture
    #  $variables['account'] = $user;
    #  $variables['user_picture'] = '';
    #  template_preprocess_user_picture($variables);
    #  $block['content'] .= $variables['user_picture'];

    // get menu and subsection
    $menutop = variable_get('mymenu_menutop', 'user-menu');
    $menu = isset($menu) ? $menu : menu_tree_all_data($menutop, NULL, 2);

    // Build the Dropdown menu
    // moved js to drupal_add_js() in _init()
    $myform = ''
     . '<div id="myMenu" onclick="myMenuToogle();">' . $title . ' <div id="myMenuArrow"></div></div>'
     . '<div id="myMenu-list">';

    /* html select variant:
     .  '<select name=jumpmenu onChange='mymenujumpto(document.mymenu.jumpmenu.options [document.mymenu.jumpmenu.options.selectedIndex].value)'>'
     . "<option value=#>" . $title . "</option>";       // Menu titlei
     */

    if ( isset($menu) ) {  // error above, no valid menu?
      foreach ($menu as $menu_item) {
        //dpm($menu_item);
        if ( strlen($menu_item['link']['title']) > 0 ) {
          //dpm('Title=' . $menu_item['link']['title'] . ', href=' . $menu_item['link']['href']);
          $myform .= '<li><a href=' . $base_path . $language->language . '/' . $menu_item["link"]["href"] . '>' . $menu_item["link"]["title"] . '</a></li>';
        }
      }
    }

    $myform .= "</div>";
    $block['content'] = $myform;
    return $block;
  }
}



