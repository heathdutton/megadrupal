<?php
/**
 * @file
 * Integrates the Chado Organism module with Drupal Nodes & Views
 */

require_once 'api/tripal_organism.api.inc';
require_once 'api/tripal_organism.DEPRECATED.inc';

require_once 'includes/tripal_organism.admin.inc';
require_once 'includes/tripal_organism.delete.inc';
require_once 'includes/tripal_organism.chado_node.inc';

/**
 * @defgroup tripal_organism Organism Module
 * @ingroup tripal_modules
 * @{
 * Integrates the Chado Organism module with Drupal Nodes & Views
 * @}
 */

/**
 *  Implements hook_menu().
 *
 * Menu items are automatically added for the new node types created
 *  by this module to the 'Create Content' Navigation menu item.  This function
 *  adds more menu items needed for this module.
 *
 * @ingroup tripal_organism
 */
function tripal_organism_menu() {
  $items = array();

  // the administative settings menu
  $items['admin/tripal/chado/tripal_organism'] = array(
    'title' => 'Organisms',
    'description' => 'Any living biological entity, such as an animal, plant, fungus, or bacterium.',
    'page callback' => 'tripal_organism_admin_organism_view',
    'access arguments' => array('administer tripal organism'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/tripal/chado/tripal_organism/sync'] = array(
    'title' => ' Sync',
    'description' => 'Create pages on this site for organisms stored in Chado',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chado_node_sync_form', 'tripal_organism', 'chado_organism'),
    'access arguments' => array('administer tripal organism'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1
  );
  $items['admin/tripal/chado/tripal_organism/delete'] = array(
    'title' => ' Delete',
    'description' => 'Delete multiple organisms from Chado',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tripal_organism_delete_form'),
    'access arguments' => array('administer tripal feature'),
    'type' => MENU_LOCAL_TASK,
    'file path' => drupal_get_path('module', 'tripal_organism'),
    'file' =>  'includes/tripal_organism.delete.inc',
    'weight' => 2
  );
  $items['admin/tripal/chado/tripal_organism/chado_organism_toc'] = array(
    'title' => ' TOC',
    'description' => 'Manage the table of contents for organism nodes.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tripal_core_content_type_toc_form', 'chado_organism'),
    'access arguments' => array('administer tripal organism'),
    'type' => MENU_LOCAL_TASK,
    'file' =>  'includes/tripal_core.toc.inc',
    'file path' => drupal_get_path('module', 'tripal_core'),
    'weight' => 3
  );
  $items['admin/tripal/chado/tripal_organism/configuration'] = array(
    'title' => 'Settings',
    'description' => 'Manage integration of Chado organisms including associated features',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tripal_organism_admin'),
    'access arguments' => array('administer tripal organism'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5
  );
  $items['admin/tripal/chado/tripal_organism/help'] = array(
    'title' => 'Help',
    'description' => "A description of the Tripal Organism module including a short description of it's usage.",
    'page callback' => 'theme',
    'page arguments' => array('tripal_organism_help'),
    'access arguments' => array('administer tripal organism'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10
  );
  $items['admin/tripal/chado/tripal_organism/views/organisms/enable'] = array(
    'title' => 'Enable Organism Administrative View',
    'page callback' => 'tripal_enable_view',
    'page arguments' => array('tripal_organism_admin_organisms', 'admin/tripal/chado/tripal_organism'),
    'access arguments' => array('administer tripal organism'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/tripal/chado/tripal_organism/organism/auto_name/%'] = array(
    'page callback' => 'tripal_autocomplete_organism',
    'page arguments' => array(6),
    'access arguments' => array('administer tripal organism'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_search_biological_data_views().
 *
 * Adds the described views to the "Search Data" Page created by Tripal Views
 */
function tripal_organism_search_biological_data_views() {
  return array(
    'tripal_organism_user_organisms' => array(
      'machine_name' => 'tripal_organism_user_organisms',
      'human_name' => 'Organisms',
      'description' => 'Any living biological entity, such as an animal, plant, fungus, or bacterium.',
      'link' => 'chado/organism'
    ),
  );
}

/**
 * Implements hook_help().
 * Adds a help page to the module list
 *
 * @ingroup tripal_organism
 */
function tripal_organism_help ($path, $arg) {
  if ($path == 'admin/help#tripal_organism') {
    return theme('tripal_organism_help', array());
  }
}

/**
 *  Implements hook_theme().
 *
 *  We need to let drupal know about our theme functions and their arguments.
 *  We create theme functions to allow users of the module to customize the
 *  look and feel of the output generated in this module
 *
 * @ingroup tripal_organism
 */
function tripal_organism_theme($existing, $type, $theme, $path) {
  $core_path = drupal_get_path('module', 'tripal_core');

  $items = array(
    'node__chado_organism' => array(
      'template' => 'node--chado-generic',
      'render element' => 'node',
      'base hook' => 'node',
      'path' => "$core_path/theme/templates",
    ),
    'tripal_organism_base' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_base',
      'path' => "$path/theme/templates",
    ),
    'tripal_organism_properties' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_properties',
      'path' => "$path/theme/templates",
    ),
    'tripal_organism_references' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_references',
      'path' => "$path/theme/templates",
    ),
    'tripal_organism_teaser' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_organism_teaser',
      'path' => "$path/theme/templates",
    ),
    'tripal_organism_help' => array(
      'template' => 'tripal_organism_help',
      'variables' =>  array(NULL),
      'path' => "$path/theme/templates",
    ),
  );
  return $items;
}

/**
  * Implements hook_permission().
  *
  * Set the permission types that the chado module uses.  Essentially we
  *  want permissionis that protect creation, editing and deleting of chado
  *  data objects
  *
  * @ingroup tripal_organism
  */
function tripal_organism_permission() {
  return array(
    'access chado_organism content' => array(
      'title' => t('View Organisms'),
      'description' => t('Allow users to view organism pages.'),
    ),
    'create chado_organism content' => array(
      'title' => t('Create Organisms'),
      'description' => t('Allow users to create new organism pages.'),
    ),
    'delete chado_organism content' => array(
      'title' => t('Delete Organisms'),
      'description' => t('Allow users to delete organism pages.'),
    ),
    'edit chado_organism content' => array(
      'title' => t('Edit Organisms'),
      'description' => t('Allow users to edit organism pages.'),
    ),
    'administer tripal organism' => array(
      'title' => t('Administer Organisms'),
      'description' => t('Allow users to administer all organisms.'),
    ),
  );
}

/**
 * Implements hook_views_api().
 *
 * Essentially this hook tells drupal that there is views support for
 *  for this module which then includes tripal_db.views.inc where all the
 *  views integration code is
 *
 * @ingroup tripal_organism
 */
function tripal_organism_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Implements hook_job_describe_args().
 *
 * @ingroup tripal_organism
 */
function tripal_organism_job_describe_args($callback, $args) {

  $new_args = array();
  if ($callback == 'tripal_organism_sync_organisms') {
    $organism = chado_select_record('organism', array('genus', 'species'), array('organism_id' => $args[0]));
    $new_args['Organism'] = $organism[0]->genus . " " . $organism[0]->species;
  }
  return $new_args;
}


/**
 * Implementation of hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 *
 * @ingroup tripal_organism
 */
function tripal_organism_form_alter(&$form, &$form_state, $form_id) {
  // turn of preview button for insert/updates
  if ($form_id == "chado_organism_node_form") {
    $form['actions']['preview']['#access'] = FALSE;

    //remove the body field
    unset($form['body']);
  }
}
