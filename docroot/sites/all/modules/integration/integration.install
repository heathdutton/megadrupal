<?php

/**
 * @file
 * Contains hook_install() and hook_update_N().
 */

/**
 * Implements hook_schema().
 */
function integration_schema() {

  $schema['integration_backend'] = integration_schema_defaults();
  $schema['integration_backend']['fields'] += array(
    'response' => array(
      'description' => 'The id of the response plugin to use.',
      'type' => 'varchar',
      'length' => 50,
      'not null' => TRUE,
    ),
    'formatter' => array(
      'description' => 'The id of the formatter plugin to use.',
      'type' => 'varchar',
      'length' => 50,
      'not null' => TRUE,
    ),
    'authentication' => array(
      'description' => 'The id of the authentication plugin to use.',
      'type' => 'varchar',
      'length' => 50,
      'not null' => TRUE,
    ),
  );

  $schema['integration_resource_schema'] = integration_schema_defaults();
  return $schema;
}

/**
 * Provides sensitive defaults for hook_entity_info() implementations.
 *
 * @return array
 *    List of hook_schema() defaults.
 *
 * @see hook_schema()
 */
function integration_schema_defaults() {
  return array(
    'fields' => array(
      'id' => array(
        'description' => 'Primary identifier.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Human readable configuration name.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'machine_name' => array(
        'description' => 'Configuration machine name.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'Configuration entity description.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'plugin' => array(
        'description' => 'Plugin name, as returned by hook_integration_PLUGIN_TYPE_info() implementations.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'settings' => array(
        'description' => 'Configuration entity settings.',
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
      'enabled' => array(
        'description' => 'A flag indicating whether the configuration is enabled.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'status' => array(
        'description' => 'The exportable status of the configuration entity.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
      ),
      'module' => array(
        'description' => 'The name of the module from which this configuration entity originates.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'enabled' => array('enabled'),
    ),
    'unique keys' => array(
      'machine_name' => array('machine_name'),
    ),
    'primary key' => array('id'),
  );
}
