<?php

/**
 * @file panels_iab.module
 *
 * This module provides some dummy content for developing sites which will
 * eventually have advertising in panels.
 */


/**
 * Implementation of hook_ctools_plugin_directory().
 */
function panels_iab_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}


/**
 * Implementation of hook_theme().
 */
function panels_iab_theme() {
  return array(
    'panels_iab_placeholder' => array(
      'arguments' => array('size' => NULL),
      'template' => 'panels-iab-placeholder',
    ),
  );
}


/**
 * Implementation of hook_preprocess_panels_iab_placeholder().
 */
function template_preprocess_panels_iab_placeholder(&$vars) {
  // Clean the size ready for output - it should be pretty clean as it is anyway
  $vars['size'] = check_plain($vars['size']);

  // Explode the size out into its components
  list($provider, $group, $file) = explode('__', $vars['size']);

  // Get the sizes
  $sizes = panels_iab_available_iab_sizes();

  // Get the Base URL...
  // The Base URL can either be set per file, per group or per provider.
  $base_url = '';
  if (isset($sizes[$provider]['groups'][$group]['items'][$file]['base url'])) {
    $base_url = $sizes[$provider]['groups'][$group]['items'][$file]['base url'];
  }
  elseif (isset($sizes[$provider]['groups'][$group]['base url'])) {
    $base_url = $sizes[$provider]['groups'][$group]['base url'];
  }
  elseif (isset($sizes[$provider]['base url'])) {
    $base_url = $sizes[$provider]['base url'];
  }
  else {
    // NONE FOUND... TODO?
  }


  // Build the Path, Alt, Title and Attributes into vars elements
  // This makes it easy for any 3rd party to alter and regenerate the image_html
  $vars['image_info'] = array();
  $vars['image_info']['path'] = $base_url . $file;
  $vars['image_info']['alt'] = t('Panels IAB Placeholder - @provider > @group > @title', array(
    '@provider' => $sizes[$provider]['title'],
    '@group' => $sizes[$provider]['groups'][$group]['title'],
    '@title' => $sizes[$provider]['groups'][$group]['items'][$file]['title'],
  ));
  $vars['image_info']['title'] = $vars['image_info']['alt'];
  $vars['image_info']['attributes'] = array();
  $vars['image_info']['width'] = $sizes[$provider]['groups'][$group]['items'][$file]['width'];
  $vars['image_info']['height'] = $sizes[$provider]['groups'][$group]['items'][$file]['height'];

  // Build the Image HTML from the above data
  $vars['image'] = theme('image', $vars['image_info']);

  // Build an array of CSS classes
  // Again, we do this so other modules can easily add a class and regenerate the classes element below
  $vars['classes_array'] = array(
    'panels-iab-placeholder',
    'panels-iab-placeholder-'. $vars['size'],
  );

  // Generate the classes by imploding the array with a space
  $vars['classes'] = implode(' ', $vars['classes_array']);

  // Add a Template suggestion for the placeholder size...
  // Template Suggestions are as follows (for example):
  // * panels-iab-placeholder.tpl.php
  // * panels-iab-placeholder-google.tpl.php
  // * panels-iab-placeholder-google-text.tpl.php
  // * panels-iab-placeholder-google-text-160x600.tpl.php
  $file_basename = basename($file);
  $vars['template_files'][] = "panels-iab-placeholder-{$provider}";
  $vars['template_files'][] = "panels-iab-placeholder-{$provider}-{$group}";
  $vars['template_files'][] = "panels-iab-placeholder-{$provider}-{$group}-{$file_basename}";
}


/**
 * Internal function to define ad sizes and names.
 * TODO: persistent caching...
 */
function panels_iab_available_iab_sizes($flush = FALSE) {
  // Define a static cache
  $data = &drupal_static(__FUNCTION__);

  // Flush if needed
  if ($flush) {
    $data = NULL;
  }

  // If there is data set, return it
  if (isset($data)) {
    return $data;
  }

  // Otherwise init as an array and build the data based on the hook
  $data = array();

  // Find each module that implements hook_panels_iab_sizes().
  foreach (module_implements('panels_iab_sizes') as $module) {

    // Call hook_panels_iab_sizes($data)
    if ($ret = module_invoke($module, 'panels_iab_sizes', $data)) {

      // If the module returns anything...
      if (isset($ret) && is_array($ret)) {
        $data = array_merge_recursive($data, $ret);
      }
    }
  }

  return $data;
}


/**
 * Implementation of hook_panels_iab_sizes().
 */
function panels_iab_panels_iab_sizes($data) {
  return array(
    'google' => array(
      'title' => t('Google'),
      'groups' => array(
        'text' => array(
          'title' => t('Text'),
          'base url' => 'https://www.google.com/adsense/static/en_US/images/',
          'items' => array(
            'leaderboard.gif'      => array('width' => 728, 'height' =>  90, 'title' => t('Leaderboard')),
            'banner.gif'           => array('width' => 468, 'height' =>  60, 'title' => t('Banner')),
            '234x60.gif'           => array('width' => 234, 'height' =>  60, 'title' => t('Half Banner')),
            '125x125.gif'          => array('width' => 125, 'height' => 125, 'title' => t('Button')),
            'skyscraper.gif'       => array('width' => 120, 'height' => 600, 'title' => t('Skyscraper')),
            '160x600.gif'          => array('width' => 160, 'height' => 600, 'title' => t('Wide Skyscraper')),
            '180x150.gif'          => array('width' => 180, 'height' => 150, 'title' => t('Small Rectangle')),
            '120x240.gif'          => array('width' => 120, 'height' => 240, 'title' => t('Vertical Banner')),
            '200x200.gif'          => array('width' => 200, 'height' => 200, 'title' => t('Small Square')),
            '250x250.gif'          => array('width' => 250, 'height' => 250, 'title' => t('Square')),
            'inline_rectangle.gif' => array('width' => 300, 'height' => 250, 'title' => t('Medium Rectangle')),
            '336x280.gif'          => array('width' => 336, 'height' => 180, 'title' => t('Large Rectangle')),
          ),
        ),
        'images' => array(
          'title' => t('Images'),
          'base url' => 'https://www.google.com/adsense/static/en_US/images/',
          'items' => array(
            'leaderboard_img.jpg'    => array('width' => 728, 'height' =>  90, 'title' => t('Leaderboard')),
            'banner_img.jpg'         => array('width' => 468, 'height' =>  60, 'title' => t('Banner')),
            'skyscraper_img.jpg'     => array('width' => 120, 'height' => 600, 'title' => t('Skyscraper')),
            'wideskyscraper_img.jpg' => array('width' => 160, 'height' => 600, 'title' => t('Wide Skyscraper')),
            '200x200.jpg'            => array('width' => 200, 'height' => 200, 'title' => t('Small Square'), 'base url' => 'http://www.google.com/images/adsense/en_us/'),
            'imagead_250x250.gif'    => array('width' => 250, 'height' => 250, 'title' => t('Square')),
            '300x250_img.jpg'        => array('width' => 300, 'height' => 250, 'title' => t('Medium Rectangle')),
            'imagead_336x280.gif'    => array('width' => 336, 'height' => 180, 'title' => t('Large Rectangle')),
          ),
        ),
        'videos' => array(
          'title' => t('Videos'),
          'base url' => 'https://www.google.com/adsense/static/en_US/images/',
          'items' => array(
            'exampleLeaderboard.gif'    => array('width' => 728, 'height' =>  90, 'title' => t('Leaderboard')),
            'exampleSkyscraper.gif'     => array('width' => 120, 'height' => 600, 'title' => t('Skyscraper')),
            'exampleWideSkyscraper.gif' => array('width' => 160, 'height' => 600, 'title' => t('Wide Skyscraper')),
            'video200x200.jpg'          => array('width' => 200, 'height' => 200, 'title' => t('Small Square'), 'base url' => 'https://adwords.google.com/select/images/samples/'),
            'video250x250.gif'          => array('width' => 250, 'height' => 250, 'title' => t('Square')),
            'videoinline.gif'           => array('width' => 300, 'height' => 250, 'title' => t('Medium Rectangle')),
            'video336x280.gif'          => array('width' => 336, 'height' => 180, 'title' => t('Large Rectangle')),
          ),
        ),
      ),
    ),
    'iab' => array(
      'title' => t('IAB'),
      'base url' => 'http://www.iab.net/media/image/',
      'groups' => array(
        'core' => array(
          'title' => t('IAB Core'),
          'items' => array(
            '300x250.gif' => array('width' => 300, 'height' => 250, 'title' => t('Medium Rectangle')),
            '180x150.gif' => array('width' => 180, 'height' => 150, 'title' => t('Rectangle')),
            '728x90.gif'  => array('width' => 728, 'height' =>  90, 'title' => t('Leaderboard')),
            '160x600.gif' => array('width' => 160, 'height' => 600, 'title' => t('Wide Skyscraper')),
            '300x600.gif' => array('width' => 300, 'height' => 600, 'title' => t('Half Page Ad')),
            '120x60.gif'  => array('width' => 120, 'height' =>  60, 'title' => t('Button 2')),
            '88x31.gif'   => array('width' =>  88, 'height' =>  31, 'title' => t('Micro Bar')),
          ),
        ),
        'delisted' => array(
          'title' => t('IAB Delisted'),
          'items' => array(
            '250x250.gif' => array('width' => 250, 'height' => 250, 'title' => t('Square Pop-up')),
            '240x400.gif' => array('width' => 240, 'height' => 400, 'title' => t('Vertical Rectangle')),
            '336x280.gif' => array('width' => 336, 'height' => 280, 'title' => t('Large Rectangle')),
            '300x100.gif' => array('width' => 300, 'height' => 100, 'title' => t('3:1 Rectangle')),
            '720x300.gif' => array('width' => 720, 'height' => 300, 'title' => t('Pop-under')),
            '468x60.gif'  => array('width' => 468, 'height' =>  60, 'title' => t('Full Banner')),
            '234x60.gif'  => array('width' => 234, 'height' =>  60, 'title' => t('Half Banner')),
            '120x90.gif'  => array('width' => 120, 'height' =>  90, 'title' => t('Button 1')),
            '120x240.gif' => array('width' => 120, 'height' => 240, 'title' => t('Vertical Banner')),
            '125x125.gif' => array('width' => 125, 'height' => 125, 'title' => t('Square Button')),
            '120x600.gif' => array('width' => 120, 'height' => 600, 'title' => t('Skyscraper')),
          )
        ),
      ),
    )
  );
}
