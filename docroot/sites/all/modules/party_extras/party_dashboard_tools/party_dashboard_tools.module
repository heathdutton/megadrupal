<?php

/**
 * Implements hook_menu().
 *
 * Define a page for modal popups for the deta set edit forms.
 */
function party_dashboard_tools_menu() {
  $items = array();

  $items['party/modal/%party/%party_data_set/%/%ctools_js'] = array(
    'page callback' => 'party_dashoard_tools_data_set_edit_modal',
    'page arguments' => array(5,2,3,4),
    'access callback' => 'party_access',
    'access arguments' => array('edit', 2, 3),
    'type' => MENU_CALLBACK,
    'file' => 'party_dashboard_tools.pages.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['party/modal/%party/%party_data_set/add/%ctools_js'] = array(
    'page callback' => 'party_dashoard_tools_data_set_edit_modal',
    'page arguments' => array(5,2,3),
    'access callback' => 'party_access',
    'access arguments' => array('edit', 2, 3),
    'type' => MENU_CALLBACK,
    'file' => 'party_dashboard_tools.pages.inc',
    'delivery callback' => 'ajax_deliver',
  );

  return $items;
}

/**
 * Implementation of hook_permission()
 */
function party_dashboard_tools_permission() {
  return array(
    'administer party dashboard contexts' => array(
      'title' => t('Administer dashboard contexts'),
      'description' => t('Add, edit and delete Party Dashboard contexts.'),
    ),
  );
}

/**
* Implementation of hook_ctools_plugin_api().
*/
function party_dashboard_tools_ctools_plugin_api($owner, $api) {
  if ($owner == 'party_dashboard_tools' && $api == 'party_dashboard_context') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function party_dashboard_tools_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_default_party_dashboard_tools_context().
 */
function party_dashboard_tools_default_party_dashboard_tools_context() {
  $export = array();

  $context = new stdClass;
  $context->api_version = 1;
  $context->name = 'general';
  $context->title = 'General';
  $context->settings = array(
    'path' => 'general',
    'access' => array(),
    'pages' => array('_all_' => '_all_'),
    'weight' => -99,
  );
  $export[$context->name] = $context;

  return $export;
}

/**
 * Implements hook_panels_post_render().
 */
function party_dashboard_tools_ctools_render_alter(&$info, &$page, &$page_context) {
  if ($page) {
    // See whether this page deals with party_dashboard_context.
    foreach ($page_context['contexts'] as $context) {
      if ($context->plugin == 'party_dashboard_context') {
        $party_dashboard_context = $context;
        break;
      }
    }
    if (isset($party_dashboard_context)) {
      // Load our contexts
      $contexts = ctools_export_crud_load_all('party_dashboard_context');
      $task_key = implode('-', array(
        $page_context['handler']->task,
        $page_context['handler']->subtask,
      ));
      $links = &drupal_static('party_dashboard_tools_local_tasks', array());

      foreach ($contexts as $context) {
        // Check whether this tab is relevant for this page.
        if (!empty($context->settings['pages']['_all_']) || !empty($context->settings['pages'][$task_key])) {
          // Check access.
          if (!empty($context->settings['access']) && !ctools_access($context->settings['access'], $page_context['contexts'])) {
            continue;
          }

          // Build our link.
          $link = array(
            '#theme' => 'menu_local_task',
            '#link' => array(
              'title' => $context->title,
              'localized_options' => array(),
            ),
            '#subpath' => $context->settings['path'],
            '#weight' => isset($context->settings['weight']) ? $context->settings['weight']: NULL,
          );
          $links[$context->settings['path']] = $link;

          // Check for the current one.
          if (!isset($links[$party_dashboard_context->data])) {
            $context_value = &drupal_static('ctools_context_create_party_dashboard_context', NULL);
            $_SESSION['party_dashboard']['context'] =
              $context_value =
              $party_dashboard_context->data = 'general';
          }
          $links[$party_dashboard_context->data]['#active'] = TRUE;
        }
      }
    }
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Check to see whether there are any special local tasks for us to add in.
 */
function party_dashboard_tools_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $tabs = drupal_static('party_dashboard_tools_local_tasks', array());

  if ($tabs) {
    // Get our base path.
    $base_path = explode('/', $root_path);
    foreach ($base_path as $i => &$item) {
      if (substr($item, 0, 1) == '%') {
        $item = arg($i);
      }
    }
    $base_path = implode('/', $base_path);

    // Add our links
    foreach ($tabs as $link) {
      $link['#link']['href'] = $base_path . '/' . $link['#subpath'];
      $data['tabs'][0]['output'][] = $link;
    }
    $data['tabs'][0]['count'] = count($data['tabs'][0]['output']);
  }
}
