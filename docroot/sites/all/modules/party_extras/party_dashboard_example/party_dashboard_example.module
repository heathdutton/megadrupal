<?php

/**
 * Implement hook_ctools_plugin_api()
 */
function party_dashboard_example_ctools_plugin_api($owner, $plugin) {
  if ($owner == 'page_manager' && $plugin == 'pages_default') {
    return array("version" => 1);
  }
  if ($owner == 'panels_mini' && $plugin == 'panels_default') {
    return array('version' => 1);
  }
  if ($owner == 'current_search' && $plugin == 'current_search') {
    return array('version' => 1);
  }
  if ($owner == 'facetapi' && $plugin == 'facetapi_defaults') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_views_api().
 */
function party_dashboard_example_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'party_dashboard_example') . '/views',
  );
}

/**
 * Implements hook_default_search_api_index().
 */
function party_dashboard_example_default_search_api_index() {
  $items = array();
  $items['party_index'] = entity_create('search_api_index', array(
    'name' => 'Party Index',
    'machine_name' => 'party_index',
    'description' => 'SOLR Index of parties for the Party Dashboard.',
    'server' => NULL,
    'item_type' => 'party',
    'options' => array(
      'index_directly' => TRUE,
      'cron_limit' => 25,
      'fields' => array(
        // Core Party Properties.
        'pid' => array(
          'type' => 'integer',
        ),
        'label' => array(
          'type' => 'string',
        ),
        'merged' => array(
          'type' => 'integer'
        ),
        'status' => array(
          'type' => 'integer'
        ),

        // Party Fields.
        'party_hat' => array(
          'type' => 'list<string>',
          'entity_type' => 'party_hat',
        ),

        // User Data Set.
        'user' => array(
          'type' => 'integer',
          'entity_type' => 'user',
        ),
        'user:name' => array(
          'type' => 'text',
        ),
        'user:mail' => array(
          'type' => 'text',
          'boost' => '3.0',
        ),

        // Aggregated Fields.
        'label_fulltext' => array(
          'type' => 'text',
          'boost' => '8.0',
        ),
      ),
      'data_alter_callbacks' => array(
        'party_alter_status_filter' => array(
          'status' => TRUE,
          'weight' => -10,
          'settings' => array(),
        ),
        'search_api_alter_add_aggregation' => array(
          'status' => TRUE,
          'weight' => 0,
          'settings' => array(
            'fields' => array(
              'label_fulltext' => array(
                'name' => 'Label (Fulltext)',
                'type' => 'fulltext',
                'fields' => array(
                  'label',
                ),
                'description' => 'Label for Fulltext Searching',
              ),
            ),
          ),
        ),
      ),
      'processors' => array(
        'search_api_case_ignore' => array(
          'status' => TRUE,
          'weight' => 0,
          'settings' => array(
            'fields' => array(
              'label_fulltext' => TRUE,
              'user:name' => TRUE,
              'user:mail' => TRUE,
            ),
          ),
        ),
        'search_api_tokenizer' => array(
          'status' => 0,
          'weight' => '20',
          'settings' => array(
            'fields' => array(
              'label_fulltext' => TRUE,
              'user:name' => TRUE,
              'user:mail' => TRUE,
            ),
            'spaces' => '[^[:alnum:]]',
            'ignorable' => "[']",
          )
        ),
      ),
    ),
    'enabled' => TRUE,
  ));
  return $items;
}
