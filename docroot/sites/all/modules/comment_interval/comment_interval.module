<?php

/**
 * @file
 * Comment Interval module file.
 *
 * This module provides an advanced action that enables site administrators to
 * specifiy how many comments should be posted to the site before the system sends out
 * a comment notification email.
 */

/**
 * Implements hook_help().
 */
function comment_interval_help($path, $arg) {
  if ($path == 'admin/help#comment_interval') {
    $output = '';
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The Comment Interval module provides an advanced action that allows site admins to specify an interval at which to send comment email notifications. For example, an interval setting of 10 will send out a notification email every 10 comments posted on the site. This functionality is useful when comments need approval before being published.') . '</p>';
    $output .= '<p>' . t('The notification email that gets sent out by this module is sent to the site email address that was specified when you first installed Drupal. This can be changed via the <b>Site Details</b> section of the <a href="!site-info" title="Site Information Administration Page">Site Information</a> Administration page.', array('!site-info' => '/admin/config/system/site-information')) . '</p>';
    $output .= '<h3>' . t('Requirements') . '</h3>';
    $output .= '<p>' . t('The Comment Interval module requires the Core Comment and Trigger modules, as well as the Contributed <a href="!token" title="Token Module Project Page">Token</a> module.', array('!token' => 'http://drupal.org/project/token')) . '</p>';
    $output .= '<h3>' . t('Usage') . '</h3>';
    $output .= t('<strong>1. Comment Interval Configuration</strong>');
    $output .= '<ul>';
    $output .= '<li>' . t('Download and install the <a href="!token" title="Token Module Project Page">Token</a> and <a href="!comment_interval" title="Comment Interval Module Project Page">Comment Interval</a> modules on your site. Enable the Comment, Trigger, Token, and Comment Interval modules via the <a href="!modules" title="Modules Admin Interface">Modules</a> Administration page.', array('!token' => 'http://drupal.org/project/token', '!comment_interval' => 'http://drupal.org/project/comment_interval', '!modules' => '/admin/modules')) . '</li>' . '<br />';
    $output .= '<li>' . t('The Comment Interval module provides an advanced action and as such, is configured via the Actions Administration page. Go to the <a href="!actions" title="Actions Administration Page">Actions</a> admin page and scroll down to the <b>CREATE AN ADVANCED ACTION</b> section. Select the "<i>Send a comment notification email at specified intervals...</i>" option from the select list and hit <b>Create</b>. This will take you to the Comment Interval advanced action configuration screen.', array('!actions' => '/admin/config/system/actions')) . '</li>' . '<br />';
    $output .= '<li>' . t('Under the <b>Comment notification interval settings</b>, select an interval option from the select list. For example, selecting an interval of "30" will result in a comment notification email being sent out for every 30 comments posted on the site.') . '</li>' . '<br />';
    $output .= '<li>' . t('Under the <b>Comment notification email subject</b> and <b>Comment notification email body text</b> fields, you can define your own email title and body text, or just leave these fields as is to use the defaults provided by the module.') . '</li>' . '<br />';
    $output .= '<li>' . t('Hit <b>Save</b> to save your settings.') . '</li>' . '<br />';
    $output .= '</ul>';
    $output .= t('<strong>2. Trigger Configuration</strong>');
    $output .= '<ul>';
    $output .= '<li>' . t('With the <i>Comment Interval advanced action</i> configured, you now need to set up a <b>Trigger</b> to send out the notification email when the specified comment interval has been reached. Head over to the <a href="!trigger" title="Triggers Admin Interface">Triggers</a> Administration page and click on the <i>Comments</i> tab. Under the "<b>TRIGGER: AFTER SAVING A NEW COMMENT</b>" trigger, select the "<i>Send a comment notification email at specified intervals</i>" action and click on the "Assign" button to save the configuration.', array('!trigger' => '/admin/structure/trigger/comment')) . '</li>' . '<br />';
    $output .= '<li>' . t('With configuration now complete, you can test your settings by posting comments on your site and ensuring a notification email is sent out when the specified comment interval is reached. In order to receive the notification email, please ensure that the <i>site email address</i> is set to an email account that you have access to.') . '</li>';
    $output .= '</ul>';

    return $output;
  }
}

/**
 * Implements hook_token_info().
 */
function comment_interval_token_info() {
  $types['comment-interval'] = array(
    'name' => t('Comment Interval'),
    'description' => t('Tokens related to the Comment Interval module.'),
  );
  // Comment interval tokens.
  $comment_interval['comment-interval-setting'] = array(
    'name' => t('Comment Interval Setting'),
    'description' => t('The current comment interval setting as set by admin.'),
  );
  return array(
    'types' => $types,
    'tokens' => array('comment-interval' => $comment_interval),
  );
}

/**
 * Implements hook_tokens().
 */
function comment_interval_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();

  if ($type == 'comment-interval') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'comment-count':
          $replacements[$original] = variable_get('comment_interval_config');
          break;
      }
    }
  }
  return $replacements;
}

/**
 * Implements hook_action_info().
 */
function comment_interval_action_info() {
  return array(
    'comment_interval_action' => array(
      'type' => 'comment',
      'label' => t('Send a comment notification email at specified intervals'),
      'configurable' => TRUE,
      'triggers' => array('comment_insert'),
    ),
  );
}

/**
 * Configuration form for comment_interval_action().
 */
function comment_interval_action_form($context) {
  // Define the default comment notifcation email message text.
  $default_email_text = t('This is to notify you that [comment-interval:comment-count] new comment(s) have been posted to the site. Please login and visit the Comments administration page (Administration > Content > Comments or [site:url]admin/content/comment) to review the new comment(s). Here you will be able modify, delete, publish, or unpublish any comment on your site.');

  // Email interval settings description text.
  $description = t('How many comments should be posted to the site before a notification email is sent to the site administator? For example, selecting a value of 5 will result in an email being sent for every 5 comments posted.');

  // Select list for email interval settings.
  $form['comment_interval_config'] = array(
    '#type' => 'select',
    '#default_value' => isset($context['comment_interval_config']) ? $context['comment_interval_config'] : 1,
    '#title' => t('Comment notification interval settings'),
    '#description' => $description,
    '#required' => TRUE,
    '#options' => array(
      1 => 1,
      5 => 5,
      10 => 10,
      15 => 15,
      20 => 20,
      30 => 30,
      40 => 40,
      50 => 50,
      60 => 60,
      70 => 70,
      80 => 80,
      90 => 90,
      100 => 100,
    ),
  );
  // Textfield for the email subject.
  $form['comment_interval_email_subject'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($context['comment_interval_email_subject']) ? $context['comment_interval_email_subject'] : t('New comments have been posted to the site'),
    '#title' => t('Comment notification email subject'),
    '#size' => 80,
    '#maxlength' => 120,
    '#required' => TRUE,
    '#description' => t('The subject of the comment notification email that will be sent to the site administrator.'),
  );
  // Textfield for the email body.
  $form['comment_interval_email_body'] = array(
    '#type' => 'textarea',
    '#rows' => 10,
    '#columns' => 40,
    '#default_value' => isset($context['comment_interval_email_body']) ? $context['comment_interval_email_body'] : $default_email_text,
    '#title' => t('Comment notication email body text'),
    '#required' => TRUE,
    '#description' => t('The text of the comment notification email that will be sent to the site administrator.'),
  );
  // Fieldset listing available comment related tokens.
  if (module_exists('token')) {
    $form['comment_interval_tokens'] = array(
      '#type' => 'fieldset',
      '#title' => t('Replacement patterns'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#description' => t('Tokens that can be used in the body of the email.'),
    );
    $form['comment_interval_tokens']['tokens'] = array(
      '#theme' => 'token_tree',
      '#token_types' => array('comment-interval'),
    );
  }
  return $form;
}

/**
 * Submit handler for comment_interval_action_form.
 */
function comment_interval_action_submit($form, &$form_state) {
  // Incase our comment counter variable has been set before, we
  // reset it to 0 so that our comment interval settings are accurate.
  variable_set('comment_interval_counter', 0);

  // Save comment_interval_config field value in a variable so we can retrieve it
  // to set the value of the comment interval token.
  variable_set('comment_interval_config', $form_state['values']['comment_interval_config']);
  return array(
    'comment_interval_config' => $form_state['values']['comment_interval_config'],
    'comment_interval_email_subject' => $form_state['values']['comment_interval_email_subject'],
    'comment_interval_email_body' => $form_state['values']['comment_interval_email_body'],
  );
}

/**
 * Implements hook_mail().
 */
function comment_interval_mail($key, &$message, $params) {
  switch ($key) {
    // Prepare the comment notification email for use in drupal_mail().
    case 'comment_notification':
      // Todo: Do we still need this?
      $comment = comment_load($params['comment_id']);
      $message['subject'] = $params['subject'];
      $message['body'][] = token_replace($params['body'], array('comment' => $comment));
      break;
  }
}

/**
 * Configurable action. Sends a comment notification email after a specified
 * number of comments have been posted.
 */
function comment_interval_action($object, $context) {
  // Set the comment_counter variable. Increments by 1
  // each time a new comment is inserted.
  $comment_counter = (int) variable_get('comment_interval_counter', 0) + 1;
  variable_set('comment_interval_counter', $comment_counter);

  // Send out a notification email when the admin defined comment interval
  // setting has been reached.
  if ($comment_counter % $context['comment_interval_config'] == 0) {
    // Set variables and parameters for use in drupal_mail().
    $site_email = variable_get('site_mail', '');
    global $language;
    $params = array(
      'subject' => $context['comment_interval_email_subject'],
      'body' => $context['comment_interval_email_body'],
      'comment_id' => $object->cid,
    );
    drupal_mail('comment_interval', 'comment_notification', $site_email, $language, $params);
  }
}
