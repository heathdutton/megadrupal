<?php

/**
 * @file
 * This module allows to congratulate user on the anniversary order.
 *
 * Administrator can set number of an anniversary order and create custom
 * checkout pane that will be shown to user who've created anniversary order.
 */

/**
 * Implements hook_commerce_checkout_pane_info().
 *
 * Create custom checkout pane shown to client on anniversary order completion.
 * It's content varies based on order's number.
 * We need Commerce Message Panes third-party module to make it work.
 */
function congratulations_on_anniversary_order_commerce_checkout_pane_info() {
  $checkout_panes = array();

  // Create pane, which will be shown on anniversary order.
  $checkout_panes['congratulations_on_anniversary_order_message_pane'] = array(
    // Pane title to show at Checkout settings page to admin.
    'title' => t('Anniversary order'),
    'base' => 'commerce_message_pane',
    // Choose default checkout stage to show pane (may be altered at Checkout
    // settings page).
    'page' => 'complete',
    'enabled' => TRUE,
  );

  return $checkout_panes;
}

/**
 * Implements hook_menu().
 *
 * Create module's admin page.
 */
function congratulations_on_anniversary_order_menu() {
  $items = array();

  $items['admin/commerce/config/congratulations_on_anniversary_order'] = array(
    'title' => 'Congratulations on Anniversary Order',
    'description' => 'Congratulations on anniversary order.',
    // Form to set anniversary number at configuration page.
    'page callback' => 'drupal_get_form',
    'page arguments' => array('congratulations_on_anniversary_order_form'),
    'access arguments' => array('administer congratulations on anniversary order module'),
    'file' => 'congratulations_on_anniversary_order.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * When an order was completed by client, we should compare current order number
 * and number of an anniversary order.
 * If current order is anniversary we should show
 * 'anniversary_order_message_pane' (created by this module).
 * Else we should show standard pane (created by Commerce itself).
 */
function congratulations_on_anniversary_order_form_commerce_checkout_form_complete_alter(&$form, &$form_state) {
  // Get anniversary order number.
  $anniv_order_num = variable_get('congratulations_on_anniversary_order_anniv_order_number_absolute_val');
  // URL of a page seen by user after order completion contains current order
  // number.
  // We should get it and compare with anniversary order number.
  if (arg(0) == 'checkout' && arg(1) == $anniv_order_num &&  arg(2) == 'complete') {
    // It's an anniversary order, we should hide default checkout pane.
    // Checkout pane, created by this module will be shown to user.
    $form['checkout_completion_message'] = FALSE;
  }
  else {
    // It's NOT an anniversary order, we should hide checkout pane, created by
    // this module.
    // Default checkout pane will be shown to user.
    $form['congratulations_on_anniversary_order_message_pane'] = FALSE;
  }
}

/**
 * Implements hook_commerce_checkout_complete().
 *
 * When an order was completed by client, we should compare current order number
 * and number of anniversary order.
 * If current order is anniversary we should send mail to the client.
 */
function congratulations_on_anniversary_order_commerce_checkout_complete($order) {
  // Get current user profile.
  global $user;
  // Get user mail.
  $user_email = $user->mail;
  // Get current order number.
  $current_order_num = $order->order_id;
  $current_anniv_order = variable_get('congratulations_on_anniversary_order_anniv_order_number_absolute_val');
  // If we should send e-mail AND current order number equals anniversary order
  // number.
  $mail_to_user = variable_get('congratulations_on_anniversary_order_send_mail_to_user');
  if ($current_order_num == $current_anniv_order) {
    // Calls Rules event which was declared in
    // congratulations_on_anniversary_order.rules.inc
    // That Rules event allows site admin to trigger any action on anniversary
    // order creation.
    module_load_include('inc', 'congratulations_on_anniversary_order', 'congratulations_on_anniversary_order.rules');
    rules_invoke_event('anniversary_order_completed', $order);

    if ($mail_to_user == 1) {
      // Get admin-entered body title and message.
      $mail_body = variable_get('congratulations_on_anniversary_order_body_messsage_user');
      $mail_title = variable_get('congratulations_on_anniversary_order_title_message_user');
      // Send mail to client.
      drupal_mail('system', 'mail', $user_email, language_default(), array(
        'context' => array(
          // Add token_replace() to replace placeholders like
          // [commerce-order:order-number] with actual token values at e-mail's
          // title and body.
          'subject' => token_replace($mail_title, array('commerce-order' => $order)),
          'message' => token_replace($mail_body, array('commerce-order' => $order)),
        ),
      ));
    }
  }
}

/**
 * Implements hook_permission().
 *
 * Make it possible to grant permissions to certain roles to administer module
 * settings.
 */
function congratulations_on_anniversary_order_permission() {
  return array(
    'administer congratulations on anniversary order module' => array(
      // Show at permissons page.
      'title' => t('Administer Congratulations on Anniversary Order module'),
      'description' => t('Allows users to manage module settings.'),
      'restrict access' => TRUE,
    ),
  );
}
