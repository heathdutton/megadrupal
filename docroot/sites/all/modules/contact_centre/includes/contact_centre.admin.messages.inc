<?php
/**
 * @file
 * Contact notes admin message list include file.
 */

function contact_centre_messages() {
  $build = array();

  $date_type    = variable_get('contact_centre_date_format', 'medium');
  $date_format  = variable_get('date_format_' . $date_type, $date_type);

  // set headers for display and query
  $headers = array(
    'id'        => array('data' => t('Message ID'),     'field' => 'm.id',       'sort' => 'desc' ),
    'category'  => array('data' => t('Category'),       'field' => 'category'                     ),
    'name'      => array('data' => t('Name'),           'field' => 'm.name'                       ),
    'mail'      => array('data' => t('Email Address'),  'field' => 'm.mail'                       ),
    'subject'   => array('data' => t('Subject'),        'field' => 'm.subject'                    ),
    'created'   => array('data' => t('Created'),        'field' => 'm.created'                    ),
    'opened'    => array('data' => t('Opened'),         'field' => 'm.opened'                     ),
    'resolved'  => array('data' => t('Resolved'),       'field' => 'm.resolved'                   ),
    'actions'   => array('data' => ''                                                             ),
  );

  // get messages from database
  $messages_per_page = variable_get('contact_centre_messages_per_page', 15);

  $query = db_select('contact_centre_messages', 'm')
    ->extend('PagerDefault')->limit($messages_per_page)
    ->extend('TableSort');

  // join the contact table so we can extract the contact categories
  $query->join('contact', 'c', 'c.cid = m.cid');
  $query->fields('m', array('id', 'uid', 'name', 'mail', 'subject', 'created', 'opened', 'resolved'))
    ->fields('c', array('category'))
    ->orderByHeader($headers);    // add the orderByHeader call for table sorting

  // execute the query and fetch all the results back into an associative array
  $results = $query->execute()->fetchAll(PDO::FETCH_ASSOC);

  // build the rows array for the table
  $rows = array();
  foreach ($results as $key => $result) {
    // build the links array for the current row
    $links = array(
      'view' => array(
        'title' =>  t('View'),
        'href'  =>  'admin/contact/' . $result['id'] . '/view',
      ),
      'addnote' => array(
        'title' =>  t('Add note'),
        'href'  =>  'admin/contact/' . $result['id'] . '/add-note',
      ),
      'read-status' => array(
        'title' =>  $result['opened'] != 0 ? t('Mark unopened') : t('Mark opened'),
        'href'  =>  'admin/contact/' . $result['id'] . '/mark/open-status/' . $result['opened'],
      ),
      'resolved-status' => array(
        'title' =>  $result['resolved'] != 0 ? t('Mark unresolved') : t('Mark resolved'),
        'href'  =>  'admin/contact/' . $result['id'] . '/mark/resolve-status/' . $result['resolved'],
      ),
    );

    // build the classes array for the current row
    $classes = array();

    // set a class to indicate if message is opened
    if ($result['opened'] == 0) {
      $classes[] = 'unopened';
    }
    else {
      $classes[] = 'opened';
    }

    // set a class to indicate if message is resolved
    if ($result['resolved'] == 0) {
      $classes[] = 'unresolved';
    }
    else {
      $classes[] = 'resolved';
    }

    $classes = implode(' ', $classes);

    // push row data into the rows array
    $rows[] = array(
      'data' => array(
        'id'        => array('data' => $result['id']),
        'category'  => array('data' => $result['category']),
        'name'      => array('data' => check_plain($result['name'])),
        'mail'      => array('data' => check_plain($result['mail'])),
        'subject'   => array('data' => check_plain($result['subject'])),
        'created'   => array('data' => format_date($result['created'], $date_type, $date_format)),
        'opened'    => array('data' => $result['opened'] == 0 ? 'No' : 'Yes'),
        'resolved'  => array('data' => $result['resolved'] == 0 ? 'No' : 'Yes'),
        'actions'   => array('data' => theme('links__ctools_dropbutton', array('links' => $links, 'attributes' => array('class' => array('links', 'inline')))), 'class' => array('contact-centre-actions')),
      ),
      'class' => array(
        $classes
      ),
    );
  }

  // create the drupal render array element for the messages table
  $build['messages'] = array(
    '#theme' => 'table',
    '#header' => $headers,
    '#rows' => $rows,
    '#empty' => t('There are no contact message at this time.'),
    '#attributes' => array(
      'class' => array(
        'contact-centre-message-list',
      ),
    ),
    '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'contact_centre') . '/css/contact_centre_ctools.css',
      ),
    ),
  );

  // add the pager object generated by the query
  $build['pager'] = array(
    '#theme' => 'pager',
    '#weight' => 5,
  );

  // return the render array for drupal to render
  return $build;
}
