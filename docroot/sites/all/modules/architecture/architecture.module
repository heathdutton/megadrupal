<?php

/**
 * @file
 * Provides reports about a Drupal site's data architecture.
 *
 * The Architecture module provides reports documenting how a Drupal site is
 * architected. It provides reports on:
 *   Site entities and fields
 *   Site taxonomies
 *   Site variables
 * In addition to HTML reports, it exports data as CSV files. Ultimately this
 * module is intended to provide an automatic export for all of the information
 * components listed in Palantir's Build Spec spreadsheet, as described here:
 *
 * http://www.palantir.net/blog/developing-drupal-sites-plan-or-perish
 * https://docs.google.com/a/nuams.co/spreadsheet/ccc?key=0AuIiRK97zQSYdG1EUXNxdDhtVlZBang1N3o1b19IRWc#gid=0
 *
 * as well as the information components currently available from the
 * sitedoc module:
 *
 * https://drupal.org/project/sitedoc
 */

/**
 * Implements hook_help().
 */
function architecture_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#architecture':
      return '<p>' . t('Architecture defines a set of views that give you an overview of your site layout and structure. It defines the "use architecture" permission, and anyone with that permission can view the Architecture views. In addition, anyone with permission to administer views may customize the Architecture-defined views. The views can be found <a href="@architecture" title="Architecture module reports">under "reports"</a>.', array('@architecture' => url('admin/reports/architecture'))) . '</p>';
  }
}

/**
 * Implements hook_permission().
 *
 * Provide a permission for administering this module.
 */
function architecture_permission() {
  return array(
    'use architecture' => array(
      'title' => t('Use the Architecture module'),
      'description' => t('See stuff provided by the Architecture module.'),
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function architecture_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'architecture'),
  );
}

/**
 * Implements hook_views_plugins().
 */
function architecture_views_plugins() {
  $plugin = array();

  // Query plugin gets data about page manager that may or may not be in the DB.
  $plugin['query']['architecture_pm_data_plugin_query'] = array(
    'title' => t('Page Manager data query'),
    'help' => t('Page Manager data query object'),
    'handler' => 'architecture_pm_data_plugin_query',
  );
  // Query plugin gets data about Imagestyles that may or may not be in the DB.
  $plugin['query']['architecture_imagestyles_plugin_query'] = array(
    'title' => t('Imagestyles data query'),
    'help' => t('Imagestyles data query object'),
    'handler' => 'architecture_imagestyles_plugin_query',
  );
// Query plugin gets data about Views that may or may not be in the DB.
  $plugin['query']['architecture_views_data_plugin_query'] = array(
    'title' => t('Views data query'),
    'help' => t('Views data query object'),
    'handler' => 'architecture_views_data_plugin_query',
  );

  return $plugin;
}

/**
 * Implements hook_form_alter().
 */
function architecture_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-architecture-list-all-blocks-page-1') {
  // Get list of regions as options for filters.
    $results = db_select('block', 'b')
        ->fields('b')
        ->execute()
        ->fetchAll();
    $regions = array();
    $themes = array();
    foreach ($results as $result) {
      $regions[$result->region] = $result->region;
      $themes[$result->theme] = $result->theme;
    }
    $themes[''] = '[all]';
    $regions = array_unique($regions);
    $regions[''] = '[all]';
    $regions['-1'] = '[none]';
    $form['Region']['#type'] = 'select';
    $form['Region']['#options'] = $regions;
    $form['Region']['#size'] = max(count($themes), count($regions));
    $form['Theme']['#type'] = 'select';
    $form['Theme']['#options'] = $themes;
    $form['Theme']['#size'] = max(count($themes), count($regions));
  }
}
/**
* Implements hook_menu().
*/
function architecture_menu() {
  $items = array();

  $items['admin/reports/architecture'] = array(
    'title' => 'Architecture',
    'description' => 'Report on the lay of the land of your site.',
    'page callback' => 'architecture_overview',
    'access arguments' => array('use architecture'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 0,
  );
  return $items;
}

/**
* Page callback: Architecture settings
*
* @see architecture_menu()
*/
function architecture_overview() {
  return '<p>' . '<H2>' . 'Getting the Lay of the Land' . '</H2>' . t('The tabs on this page link to customizeable views that give you an overview of your site layout and structure. They can be viewed by anyone with "use architecture" permissions. In addition, anyone with permission to administer views may customize the Architecture-defined views.') . '</p>' . '<h3>Exporting to CSV</h3>' . '<p>' . t('Installing and enabling the <a href="@link" title="Views Export Data project page on Drupal.org">Views Export Data module</a> automatically exposes an exportable version of each view. The default format is CSV and each download is available at the regular view path with "/export" added to the end (e.g. "/admin/reports/architecture/fields/export"). Editing the export display mode of the view allows you to export in any format that Views Export Data makes available.', array('@link' => 'https://drupal.org/project/views_data_export')) . '</p>';
}