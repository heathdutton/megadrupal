<?php

/**
 * @file
 * Schema definition.
 */

/**
 * Implements hook_schema().
 */
function panels_frame_schema() {
  $schema['panels_frame'] = array(
    'description' => 'Contains exportable compilations of layouts',
    'fields' => array(
      'pfid' => array(
        'type' => 'serial',
        'description' => 'Obligatory primary key.',
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Human-readable name for this layout.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Machine-readable name for happy programming.',
      ),
      'description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A place for commentary and description to this layout.',
        'object default' => '',
      ),
      'plugin' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'The layout plugin that owns this layout.',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative category for this layout.',
      ),
      'data' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A heap of data.',
        'serialize' => TRUE,
        'object default' => array(),
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Settings, in case we need them.',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'export' => array(
      'admin_title' => 'label',
      'admin_description' => 'description',
      'api' => array(
        'owner' => 'panels_frame',
        'api' => 'frames',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'primary key' => array('pfid'),
  );

  return $schema;
}

/**
 * Flushes all caches.
 */
function panels_frame_update_7001() {
  // Do nothing. All we want to do is flush the cache.
  return t('Flushed caches to cleanse the soul.');
}

/**
 * Update any existing object caches for Stacks.
 */
function panels_frame_update_7002() {
  db_update('ctools_object_cache')
    ->condition('obj', 'ctui_panels_frame_stack_ui')
    ->expression('name', "CONCAT('edit-', name)")
    ->fields(array('obj' => 'panels_frame:stack'))
    ->execute();

  return t('Object cache identifiers updated.');
}
