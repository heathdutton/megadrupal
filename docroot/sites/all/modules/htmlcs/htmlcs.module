<?php

/**
 * @file
 * Provides core hooks for htmlcs.
 */

define('HTMLCS_PERMISSION', 'view htmlcs');
define('HTMLCS_DELTA', 'htmlcs');
define('HTMLCS_DEFAULT_STANDARD', 'WCAG2AA');
define('HTMLCS_DEFAULT_STANDARD_FIELD', 'htmlcs_standard');
define('HTMLCS_DEFAULT_BUILD', '//squizlabs.github.io/HTML_CodeSniffer/build/');
define('HTMLCS_DEFAULT_BUILD_FIELD', 'htmlcs_build');

/**
 * Implements hook_permission().
 */
function htmlcs_permission() {
  return array(
    HTMLCS_PERMISSION => array(
      'title' => t('View HTMLCS'),
      'description' => t('Perform HTML_Codesniffer checks on the page where the block exists.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function htmlcs_theme() {
  return array(
    'htmlcs_toggle' => array(
      'template' => 'templates/htmlcs-toggle',
      'variables' => array(
        'element_id' => drupal_html_id('htmlcs_toggle'),
        'input_id' => drupal_html_id('htmlcs_toggle_value'),
        'label' => '',
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function htmlcs_block_info() {
  return array(
    HTMLCS_DELTA => array(
      'info' => t('HTMLCS'),
    ),
  );
}

/**
 * Implements hook_block_configure().
 */
function htmlcs_block_configure($delta = '') {
  $form = array();
  if ($delta == HTMLCS_DELTA) {
    $form[HTMLCS_DEFAULT_STANDARD_FIELD] = array(
      '#type' => 'select',
      '#title' => t('The default standard to report.'),
      '#default_value' => _htmlcs_get_standard(),
      '#options' => drupal_map_assoc(_htmlcs_get_standard_options()),
    );
    $form[HTMLCS_DEFAULT_BUILD_FIELD] = array(
      '#type' => 'textfield',
      '#title' => t('The URL of the HTML_Codesniffer build.'),
      '#default_value' => _htmlcs_get_build(),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function htmlcs_block_save($delta = '', $edit = array()) {
  if ($delta == HTMLCS_DELTA) {
    variable_set(HTMLCS_DEFAULT_STANDARD_FIELD, $edit[HTMLCS_DEFAULT_STANDARD_FIELD]);
    variable_set(HTMLCS_DEFAULT_BUILD_FIELD, $edit[HTMLCS_DEFAULT_BUILD_FIELD]);
  }
}

/**
 * Implements hook_block_view().
 */
function htmlcs_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case HTMLCS_DELTA:
      if (user_access(HTMLCS_PERMISSION)) {
        $block['content'] = array(
          '#theme' => 'htmlcs_toggle',
          '#label' => t('Accessibility checker'),
          '#attached' => array(
            'js' => array(
              drupal_get_path('module', 'htmlcs') . '/js/htmlcs.js',
              array(
                'data' => array(
                  'htmlcs' => array(
                    'modulePath' => _htmlcs_get_build(),
                    'defaultReport' => _htmlcs_get_standard(),
                  ),
                ),
                'type' => 'setting',
              ),
            ),
            'css' => array(
              drupal_get_path('module', 'htmlcs') . '/css/htmlcs.css',
            ),
          ),
        );
      }
      break;
  }
  return $block;
}

/**
 * Return the default codesniffer report type.
 */
function _htmlcs_get_standard() {
  return variable_get(HTMLCS_DEFAULT_STANDARD_FIELD, HTMLCS_DEFAULT_STANDARD);
}

/**
 * Return the default codesniffer build path.
 */
function _htmlcs_get_build() {
  return variable_get(HTMLCS_DEFAULT_BUILD_FIELD, HTMLCS_DEFAULT_BUILD);
}

/**
 * Return the array of report options.
 */
function _htmlcs_get_standard_options() {
  return array(
    'WCAG2A',
    'WCAG2AA',
    'WCAG2AAA',
    'Section508',
  );
}
