<?php

/**
 * @file
 * Adds an update log to the modules administration page.
 */

/**
 * Implements hook_menu()
 */
function update_log_menu() {
  $items = array();

  $items['admin/modules/updates'] = array(
    'title' => 'Update Log',
    'description' => 'Display a log of module updates.',
    'page callback' => 'update_log_page_callback',
    'access arguments' => array('administer modules'),
    'file' => 'update_log.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_help()
 */
function update_log_help($path, $arg) {
  global $base_url;

  switch ($path) {
    case 'admin/modules/updates':
      return '<p>' . t('This is a list of completed module updates and associated schema versions. <a href="@update-php">See pending updates</a>.', array('@update-php' => $base_url . '/update.php')) . '</p>';
  }
}

/**
 * Gets an associative array of completed updates indexed by module name.
 *
 * Code largely adapted from update_get_update_list()
 *
 * @return array
 *   Array of completed updates.
 */
function update_log_get_completed_update_list() {
  $cache = cache_get('update_log_completed_update_list');

  if (!empty($cache)) {
    $update_data = $cache->data;
  }
  else {
    module_load_include('inc', 'content', 'includes/install');
    module_load_include('inc', 'content', 'includes/update');

    drupal_load_updates();

    $update_data = array();

    // Get the current schema versions for all modules.
    $modules = drupal_get_installed_schema_version(NULL, FALSE, TRUE);

    foreach ($modules as $module => $schema_version) {
      // Get the list of updates defined by this module.
      $updates = drupal_get_schema_versions($module);

      if ($updates !== FALSE) {
        foreach ($updates as $update) {
          // Only use completed updates.
          if ($update <= $schema_version) {
            // The description for an update comes from its Doxygen.
            $func = new ReflectionFunction($module . '_update_' . $update);
            $description = str_replace(array("\n", '*', '/'), '', $func->getDocComment());
            $update_data[$module][$update] = $description;
          }
        }
      }
    }

    cache_set('update_log_completed_update_list', $update_data);
  }

  return $update_data;
}
