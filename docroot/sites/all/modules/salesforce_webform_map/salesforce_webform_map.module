<?php

define('SALESFORCE_WEBFORM_MAP_FROM_WEBFORM', 'webform');
define('SALESFORCE_WEBFORM_MAP_FROM_NODE', 'node');
define('SALESFORCE_WEBFORM_MAP_FROM_USER', 'user');
define('SALESFORCE_WEBFORM_MAP_FROM_WEBFORM_ANONYMOUS', 'webform_anonymous');

/**
  * Implements hook_webform_submission_presave().
  */
function salesforce_webform_map_webform_submission_presave($node, $submission) {
  // Map components via key to form_key
  $data = array();
  $rmap = array();

  foreach ($node->webform['components'] as $key => $val) {
    if (isset($submission->data[$key])) {
      $data[$val['form_key']] = $submission->data[$key];
      $rmap[$val['form_key']] = $key;
    }
  }

  // We only map the fields that we get from salesforce_map
  if (!isset($data['salesforce_mapping']['value'][0])) {
    return;
  }
  $salesforce_mapping = explode(',', $data['salesforce_mapping']['value'][0]);
  unset($data['salesforce_mapping']);

  // Set some defaults based on "global data" in the submission

  foreach ($salesforce_mapping as $key => $val) {
    $salesforce_mapping[$key] = explode('|', $val);
  }
  foreach ($salesforce_mapping as $map) {
    $name = $map[0];
    $type = SALESFORCE_WEBFORM_MAP_FROM_WEBFORM;
    $salesforce_id = NULL;

    if (isset($map[1])) {
      $type = $map[1];
    }

    // Do we already have a SF ID for this object?
    if (isset($map[2])) {
      $salesforce_id = $map[2];
    }

    // If salesforce ID exists, skip this object
    if (isset($salesforce_id)) {
      $data['salesforce_' . $name]['value'][0] = $salesforce_id;
      continue;
    }

    if ($type == SALESFORCE_WEBFORM_MAP_FROM_WEBFORM_ANONYMOUS && user_is_logged_in()) {
      continue;
    }
    if ($type == SALESFORCE_WEBFORM_MAP_FROM_USER) {
      if (user_is_logged_in()) {
        global $user;
        $account = user_load($user->uid);
        if (isset($account->salesforce_id)) {
          $data['salesforce_' . $name]['value'][0] = $account->salesforce_id;
        }
      }
      continue;
    }
    if ($type == SALESFORCE_WEBFORM_MAP_FROM_NODE) {
      if (isset($node->salesforce_id)) {
        $data['salesforce_' . $name]['value'][0] = $node->salesforce_id;
      }
      continue;
    }

    $sf_map = salesforce_mapping_load($name);

    if (!isset($sf_map->drupal_entity_type)) {
      salesforce_set_message(
        t('Unknown type %name used in salesforce_mapping', array(
          '%name' => $name
        )
      ), 'error');
      continue;
    }

    $entity_type = $sf_map->drupal_entity_type;

    $values = array();

    // Need to get the bundle key.
    $info = entity_get_info($entity_type);

    if (!empty($info['entity keys']['bundle'])) {
      $values[$info['entity keys']['bundle']] = $sf_map->drupal_bundle;
    }

    // Create an entity with the specified bundle.
    $entity = entity_create($entity_type, $values);
    $wrapper = entity_metadata_wrapper($entity_type, $entity);

    foreach ($data as $key => $val) {
      $field_name = 'field_' . substr($key, 0, 26);
      if (isset($wrapper->{$field_name}) && isset($val['value'][0])) {
        // @todo: Multiple values not supported
        try {
          $wrapper->{$field_name}->set($val['value'][0]);
        }
        catch (EntityMetadataWrapperException $e) {
          watchdog_exception('salesforce_webform_map_webform_submission_presave', $e);
          salesforce_set_message($e->getMessage(), 'error');
        }
      }
    }

    // @todo: Add a hook instead for special cases.
    if ($entity_type == 'entityform') {
      _salesforce_webform_map_entityform_populate($entity);
    }

    entity_save($entity_type, $entity);

    // We need to re-load it to get the SF ID.
    list($entity_id) = entity_extract_ids($entity_type, $entity);

    $res = entity_load($entity_type, array($entity_id));
    $res = reset($res);

    if (!isset($res->salesforce_id)) {
      return;
    }

    $data['salesforce_' . $name]['value'][0] = $res->salesforce_id;
  }

  // Update original salesforce mapping text.

  $sf_map_key = $rmap['salesforce_mapping'];
  $text = $submission->data[$sf_map_key]['value'][0];
  foreach ($salesforce_mapping as $sf_key => $map) {
    $t = $map;
    if (isset($data['salesforce_' . $t[0]])) {
      $t[2] = $data['salesforce_' . $t[0]]['value'][0];
      $text = str_replace(implode('|',$map), implode('|', $t), $text);
    }
  }
  $submission->data[$sf_map_key]['value'][0] = $text;
}

/**
 * Populate the properties of the entity form as if submitted via UI.
 */
function _salesforce_webform_map_entityform_populate($entityform) {
  // Add in created and changed times.
  if ($entityform->is_new = isset($entityform->is_new) ? $entityform->is_new : 0) {
    global $user;
    $entityform->created = time();
    $entityform->uid = !empty($user->uid) ? $user->uid : 0;
  }

  $entityform->changed = time();
}
