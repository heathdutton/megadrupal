<?php

/**
 * @file
 * Integration module for NYS Global Navigation.
 *
 * Defines two blocks, NYS Global Navigation Header and NYS Global Navigation
 *   Footer.  Can also be integrated directly into a theme.
 * See:  https://github.com/ny/global-navigation.
 */

/**
 * The minimum version of the New York State Global Navigation library.
 */
define('NYS_GLOBAL_NAV_MIN_PLUGIN_VERSION', '1.0.2');

/**
 * Implements hook_menu().
 */
function nys_global_nav_menu() {
  $items['admin/config/user-interface/nys-global-nav'] = array(
    'title' => 'NYS Global Navigation',
    'description' => 'Configure NYS Global Navigation Header and Footer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nys_global_nav_admin_settings'),
    'access arguments' => array('administer nys global nav'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'nys_global_nav.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_block_info().
 */
function nys_global_nav_block_info() {
  $blocks = array();
  // If automatic insertion is enabled, don't show header block.
  if (!variable_get('nys_global_nav_header_auto', FALSE)) {
    $blocks['nys_global_nav_header'] = array(
      // The name that will appear in the block list.
      'info' => t('NYS Global Navigation Header'),
      // Disable caching in MVP.
      'cache' => DRUPAL_NO_CACHE,
    );
  }
  // If automatic insertion is enabled, don't show footer block.
  if (!variable_get('nys_global_nav_footer_auto', FALSE)) {
    $blocks['nys_global_nav_footer'] = array(
      // The name that will appear in the block list.
      'info' => t('NYS Global Navigation Footer'),
      // Disable caching in MVP.
      'cache' => DRUPAL_NO_CACHE,
    );
  }
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nys_global_nav_block_view($delta = '') {
  switch ($delta) {
    case 'nys_global_nav_header':
      // If automatic insertion is enabled, don't show header block.
      if (!variable_get('nys_global_nav_header_auto', FALSE)) {
        // Set block subject and content.
        $block['subject'] = t('NYS Global Navigation Header');
        $block['content'] = nys_global_nav_header();
        return $block;
      }

    case 'nys_global_nav_footer':
      // If automatic insertion is enabled, don't show footer block.
      if (!variable_get('nys_global_nav_footer_auto', FALSE)) {
        // Set block subject and content.
        $block['subject'] = t('NYS Global Navigation Footer');
        $block['content'] = nys_global_nav_footer();
        return $block;
      }

  }
}

/**
 * Implements hook_page_build().
 *
 * Add uNav header and footer to the page_top and page_bottom regions
 * automatically if corresponding Drupal variable nys_global_nav_%_auto is TRUE.
 * But don't add uNav if on an administrative page.
 */
function nys_global_nav_page_build(&$page) {
  // Performance: Skip this entirely for AJAX requests or if on administrative
  // page.  AJAX code from admin_menu module, seemed like a good idea.
  if ((strpos($_GET['q'], 'js/') === 0) || path_is_admin(current_path())) {
    return;
  }
  /*********************************************************************
   * Debugging code to be removed
   */
  // $test = drupal_get_path('module', 'color');
  /***  End of Debugging Code  ***/
  if (variable_get('nys_global_nav_header_auto', FALSE)) {
    $page['page_top']['nys_global_nav'] = _nys_global_nav_header();
  }
  if (variable_get('nys_global_nav_footer_auto', FALSE)) {
    $page['page_bottom']['nys_global_nav'] = _nys_global_nav_footer();
  }
}

/**
 * Implements hook_theme().
 */
function nys_global_nav_theme() {
  return array(
    'nys_global_nav_header' => array(
      'template' => 'nys-global-nav-header',
      'variables' => array(
        'header_menu_name' => NULL,
        'library_information' => libraries_detect('nys_global_nav'),
),
    ),
    'nys_global_nav_footer' => array(
      'template' => 'nys-global-nav-footer',
      'variables' => array(
        'footer_menu_name' => NULL,
        'social_media_urls' => array(),
      ),
    ),
    'nys_global_nav_footer_social_media' => array(
      'template' => 'nys-global-nav-footer-social-media',
      'variables' => array(
        'social_media_urls' => array(),
      ),
    ),
    'nys_global_nav_footer_social_media_urls' => array(
      'variables' => array(
        'social_media_urls' => array(),
      ),
    ),
    'nys_global_nav_footer_social_media_url' => array(
      'variables' => array(
        'social_media_url' => array(),
      ),
    ),
    'nys_global_nav_header_menu' => array(
      'variables' => array(
        'menu_name' => NULL,
        'id' => NULL,
      ),
    ),
    'nys_global_nav_header_menu_item' => array(
      'variables' => array(
        'element' => NULL,
        'properties' => NULL,
      ),
    ),
    'nys_global_nav_header_menu_item_link' => array(
      'variables' => array(
        'menu_item' => NULL,
        'link_options' => NULL,
      ),
    ),
    'nys_global_nav_footer_menu' => array(
      'variables' => array(
        'menu_name' => NULL,
        'id' => NULL,
      ),
    ),
    'nys_global_nav_footer_menu_column' => array(
      'variables' => array(
        'element' => NULL,
        'properties' => NULL,
      ),
    ),
    'nys_global_nav_footer_menu_item_link' => array(
      'variables' => array(
        'menu_item' => NULL,
        'link_options' => NULL,
      ),
    ),
  );
}


/**
 * Implements hook_permission().
 */
function nys_global_nav_permission() {
  return array(
    'administer nys global nav' => array(
      'title' => t('Administer NYS Global Navigation'),
    ),
  );
}


/**
 * Implements hook_help().
 */
function nys_global_nav_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/modules#description':
      $output .= t('Integrate NYS Global Navigation onto your Drupal site.');
      break;

    case 'admin/config/user-interface/nys-global-nav':
      $output .= t('<p>Block-specific settings could be found at !link</p>', array('!link' => l(t('Blocks management'), 'admin/structure/block')));
      break;
  }
  return $output;
}

/**
 * Implements hook_libraries_info().
 */
function nys_global_nav_libraries_info() {
  $libraries['nys_global_nav'] = array(
    // Only used in administrative UI of Libraries API.
    'name' => 'New York State Global Navigation library',
    'vendor url' => 'http://its.ny.gov/webny',
    'download url' => 'https://github.com/ny/global-navigation',
    'version arguments' => array(
      'file' => 'source/js/nys-global-nav-header.js',
      'pattern' => '@(?i:nys-global-nav)\sv?([0-9\.a-z]+)@',
      'lines' => 5,
    ),
    'path' => 'source',
    'files' => array(
      // 'js' and 'css' follow the syntax of hook_library(), but file paths are
      // relative to the library path.
      'js' => array(
        'nys-global-nav-header.js',
      ),
      'css' => array(
        'nys-global-nav.css',
        'nys-global-nav-fonts.css',
      ),
    ),
  );
  return $libraries;
}

/**
 * Non-hook function to generate header block content.
 *
 * @return string
 *   Raw html content suitable for printing in theme.
 */
function nys_global_nav_header() {
  $header = theme('nys-global-nav-header');
  return $header;
}

/**
 * Non-hook function to generate footer block content.
 *
 * @return string
 *   Raw html content suitable for printing in theme.
 */
function nys_global_nav_footer() {
  $footer = theme('nys-global-nav-footer');
  return $footer;
}

/**
 * Non-hook function to generate header block content.
 *
 * @return array
 *   Render array element that defines the header.
 *   Includes the CSS and JS to be included on the page.
 */
function _nys_global_nav_header() {
  $resources_location = _nys_global_nav_get_path('nys_global_nav') . '/source';
  // Pass the directory of the library JavaScript to Drupal's JS.
  drupal_add_js(array('nys_global_nav' => array('js_library' => '/' . $resources_location . '/js/nys-global-nav-header.js')), 'setting');
  $header = array(
    '#weight' => -950,
    '#header_menu_name' => variable_get('nys_global_nav_header_menu', ''),
    '#theme' => 'nys_global_nav_header',
    '#attached' => array(
      'css' => array(
        $resources_location . '/css/nys-brand/' . variable_get('nys_global_nav_agency_color', 'administration') . '.css',
        $resources_location . '/css/nys-global-nav.css',
        $resources_location . '/css/nys-global-nav-fonts.css',
      ),
      'js' => array(
        drupal_get_path('module', 'nys_global_nav') . '/js/drupal-nys-global-nav-header.js',
      ),
    ),
  );
  return $header;
}

/**
 * Non-hook function to generate footer block content.
 *
 * @return array
 *   Render array element that defines the footer.
 */
function _nys_global_nav_footer() {
  $footer = array(
    '#weight' => 950,
    '#footer_menu_name' => variable_get('nys_global_nav_footer_menu', ''),
    '#social_media_urls' => _nys_global_nav_social_media_urls(),
    '#theme' => 'nys_global_nav_footer',
    'social_media' => array(
      '#theme' => 'nys_global_nav_footer_social_media',
      '#social_media_urls' => _nys_global_nav_social_media_urls(),
    ),
  );
  return $footer;
}

/**
 * Theme function menu tree to be themed for NYS Global Navigation header.
 *
 * Code patterned/copied from drupal.org/project/superfish and adapted.
 */
function theme_nys_global_nav_header_menu($variables) {

  $id = $variables['id'];
  $menu_name = $variables['menu_name'];

  $menu = menu_tree_all_data($menu_name, NULL, 2);

  if (function_exists('i18n_menu_localize_tree')) {
    $menu = i18n_menu_localize_tree($menu);
  }

  $output = '';
  $output .= '<ul id="' . $id . '">';
  $output .= theme('nys_global_nav_header_menu_item', array('element' => $menu));
  $output .= '</ul>';

  return $output;
}

/**
 * Theme a header menu item.
 *
 * @param array $variables
 *   An array of variables containing element: The menu item array.
 *
 * @ingroup themeable
 */
function theme_nys_global_nav_header_menu_item($variables) {
  $element = $variables['element'];
  $output = '';

  foreach ($element as $menu_item) {
    if (isset($menu_item['link']) && !$menu_item['link']['hidden'] && $menu_item['link']['access']) {
      $output .= '<li>';
      $output .= theme('nys_global_nav_header_menu_item_link', array('menu_item' => $menu_item));
    }
    if (!empty($menu_item['below'])) {
      $output .= '<ul>';
      $output .= theme('nys_global_nav_header_menu_item', array('element' => $menu_item['below']));
      $output .= '</ul>';
    }
    if (isset($menu_item['link']) && !$menu_item['link']['hidden'] && $menu_item['link']['access']) {
      $output .= '</li>';
    }
  }

  return $output;
}

/**
 * Theme a header menu item link.
 *
 * @param array $variables
 *   An array of variables containing menu_item: The menu item array.
 *
 * @ingroup themeable
 */
function theme_nys_global_nav_header_menu_item_link($variables) {
  $menu_item = $variables['menu_item'];
  $nav_link = l($menu_item['link']['title'], $menu_item['link']['href'], $menu_item['link']['options']);
  return $nav_link;
}

/**
 * Theme function menu tree to be themed for NYS Global Navigation footer.
 *
 * Code patterned/copied from drupal.org/project/superfish and adapted.
 */
function theme_nys_global_nav_footer_menu($variables) {

  $menu_name = $variables['menu_name'];

  $menu = menu_tree_all_data($menu_name, NULL, 2);

  if (function_exists('i18n_menu_localize_tree')) {
    $menu = i18n_menu_localize_tree($menu);
  }

  $output = '';

  foreach ($menu as $menu_item) {
    if (isset($menu_item['link']) && !$menu_item['link']['hidden'] && $menu_item['link']['access']) {
      $output .= '<div class="footer-col"><h4>';
      $output .= theme('nys_global_nav_footer_menu_item_link', array('menu_item' => $menu_item));
      $output .= '</h4>';
    }
    if (!empty($menu_item['below'])) {
      $output .= '<ul>';
      $output .= theme('nys_global_nav_footer_menu_column', array('element' => $menu_item['below']));
      $output .= '</ul>';
    }
    if (isset($menu_item['link']) && !$menu_item['link']['hidden'] && $menu_item['link']['access']) {
      $output .= '</div>';
    }
  }

  return $output;
}

/**
 * Theme a footer menu column.
 *
 * @param array $variables
 *   An array of variables containing element: The menu item array.
 *
 * @ingroup themeable
 */
function theme_nys_global_nav_footer_menu_column($variables) {
  $element = $variables['element'];
  $output = '';

  foreach ($element as $menu_item) {
    if (isset($menu_item['link']) && !$menu_item['link']['hidden'] && $menu_item['link']['access']) {
      $output .= '<li>';
      $output .= theme('nys_global_nav_footer_menu_item_link', array('menu_item' => $menu_item));
      $output .= '</li>';
    }
  }

  return $output;
}

/**
 * Theme a footer menu item link.
 *
 * @param array $variables
 *   An array of variables containing menu_item: The menu item array.
 *
 * @ingroup themeable
 */
function theme_nys_global_nav_footer_menu_item_link($variables) {
  $menu_item = $variables['menu_item'];
  $nav_link = l($menu_item['link']['title'], $menu_item['link']['href'], $menu_item['link']['options']);
  return $nav_link;
}

/**
 * Theme function social media URLs to be themed for NYS Global Navigation.
 *
 * @param array $variables
 *   An array of variables containing social_media_urls: array of 
 *   social media urls.
 *
 * @ingroup themeable
 */
function theme_nys_global_nav_footer_social_media_urls($variables) {

  $social_media_urls = $variables['social_media_urls'];

  $output = '';

  foreach ($social_media_urls as $social_media_index => $social_media_url) {
    $output .= theme('nys_global_nav_footer_social_media_url', array('social_media_url' => array($social_media_index => $social_media_url)));
  }

  return $output;
}

/**
 * Theme function to theme a single social media URL for NYS Global Navigation.
 *
 * @param array $variables
 *   An array of variables containing social_media_url: array with
 *   social media url.
 *
 * @ingroup themeable
 */
function theme_nys_global_nav_footer_social_media_url($variables) {

  $social_media_url = $variables['social_media_url'];
  $social_media_id = key($social_media_url);

  $output = '';
  $output .= '<li><a href="' . $social_media_url[$social_media_id] . '"><span class="icon-social-' . $social_media_id . '"></span><span>' . strtoupper($social_media_id) . '</span></a></li>';
  return $output;
}

/**
 * Helper function to count number of top level menu items.
 *
 * @param string $menu_name
 *   The name of the menu.
 *
 * @return integer $count
 *   Number of 1st level items in the menu.
 */
function _nys_global_nav_menu_count_top($menu_name = '') {

  $menu = menu_tree_all_data($menu_name, NULL, 2);
  return count($menu);

}

/**
 * Helper function to get library paths.
 */
function _nys_global_nav_get_path($library = 'nys_global_nav') {
  $directory = '';
  // Ensure the Libraries API module is installed.
  if (module_exists('libraries') && function_exists('libraries_get_path')) {
    $directory = libraries_get_path($library);
  }
  // Otherwise use the default directory.
  elseif (file_exists('profiles/' . drupal_get_profile() . '/libraries/' . $library)) {
    $directory = 'profiles/' . drupal_get_profile() . '/libraries/' . $library;
  }
  if (empty($directory)) {
    $directory = 'sites/all/libraries/' . $library;
  }
  return $directory;
}

/**
 * Helper function to set up social media names.
 *
 * @return array $social_media_names
 *   - array indexed by internal name of social media names.
 */
function _nys_global_nav_setup_social_names() {
  return array(
    'blogger' => 'Blogger',
    'delicious' => 'Delicious',
    'facebook' => 'Facebook',
    'feed' => 'RSS Feed',
    'flickr' => 'Flickr',
    'foursquare' => 'Foursquare',
    'github' => 'GitHub',
    'google-plus' => 'Google+',
    'instagram' => 'Instagram',
    'linkedin' => 'Linkedin',
    'mail' => 'Mail',
    'pinterest' => 'Pinterest',
    'reddit' => 'Reddit',
    'share' => 'Share',
    'tumblr' => 'Tumblr',
    'twitter' => 'Twitter',
    'vimeo' => 'Vimeo',
    'yelp' => 'Yelp',
    'youtube' => 'YouTube',
  );
}

/**
 * Helper function to get social media URLs that are not empty.
 *
 * @return array $social_media_names
 *   - the social media URLs that are not empty.
 */
function _nys_global_nav_social_media_urls() {
  $social_media_list = _nys_global_nav_setup_social_names();
  $social_media_urls = array();
  foreach ($social_media_list as $key => $social_media_name) {
    $social_media_index_name = check_plain($key);
    $social_media_url = variable_get('nys_global_nav_social_media_' . $social_media_index_name, '');
    if (!empty($social_media_url)) {
      $social_media_urls[$social_media_index_name] = $social_media_url;
    };
  }
  return $social_media_urls;
}
