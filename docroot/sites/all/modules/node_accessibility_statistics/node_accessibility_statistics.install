<?php

/**
 * @file
 * Install file for the node accessibility.
 */

/**
 * Implementation of hook_schema().
 */
function node_accessibility_statistics_schema() {
  $schema = array();

  $schema['node_accessibility_statistics_plots'] = array(
    'description' => st("Phplot files."),
    'fields' => array(
      'id' => array(
        'description' => st("The primary key used to represent this file."),
        'type' => 'serial',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => st("The files's ID from {file_managed}.fid."),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'type' => array(
        'description' => t("The machine-readable name of the plot type."),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'fid' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    ),
  );

  $schema['node_accessibility_statistics_plot_nodes'] = array(
    'description' => st("Phplot file/node relations."),
    'fields' => array(
      'pid' => array(
        'description' => st("The plots's ID from {node_accessibility_statistics_plots}.fid."),
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => st("The node's ID from {node}.nid."),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => st("The node's version ID from {node}.vid."),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('pid'),
    'foreign keys' => array(
      'pid' => array(
        'table' => 'node_accessibility_statistics_plots',
        'columns' => array('pid' => 'pid'),
      ),
      'nid' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
    ),
  );

  $schema['node_accessibility_statistics_types'] = array(
    'description' => t("Content type specific settings for quail api."),
    'fields' => array(
      'type' => array(
        'description' => t("The machine-readable name of the node type that has accessibility validation enabled."),
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'statistics_options' => array(
        'description' => t("A serialized array that contains the machine name of all enabled statistics."),
        'type' => 'blob',
        'size' => 'big',
        'not null' => FALSE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('type'),
    'foreign keys' => array(
      'type' => array(
        'table' => 'node_type',
        'columns' => array('type' => 'type'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implementation of hook_disable().
 */
function node_accessibility_statistics_disable() {
  if (function_exists('node_accessibility_statistics_reset_cache')) {
    node_accessibility_statistics_reset_cache();
  }
}


/**
 * Remove caching of node accessibility statistics page.
 *
 * Using caching, while saving performance, ends up being too confusing.
 */
function node_accessibility_statistics_update_7100() {
  cache_clear_all('node_accessibility_statistics_page', 'cache', TRUE);
}
