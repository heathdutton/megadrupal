<?php

/**
 * Implements hook_enable().
 */
function infodesk_summer_reading_enable() {
  _infodesk_summer_reading_deploy_create_roles();
  _infodesk_summer_reading_deploy_time_tracker();
  _infodesk_summer_reading_deploy_user_settings();
}

/**
 * Implements hook_permission().
 */
function infodesk_summer_reading_permission() {
  return array(
    'administer summer reading message' => array(
      'title' => t('Time Entry Message'),
      'description' => t('Set time entry submit message for summer reading program.'),
    ),
  );
}

/**
 * Implements hook_disable().
 */
function infodesk_summer_reading_disable() {
  db_delete('time_tracker_activity')
    ->condition('name', 'Reading')
    ->execute();

  if (defined('STDIN')) {
    CINC::init('TextField')->machine_name('field_reader_firstname')->delete();
    CINC::init('TextField')->machine_name('field_reader_lastname')->delete();
    CINC::init('ListTextField')->machine_name('field_reader_age')->delete();
    CINC::init('TextField')->machine_name('field_reader_zipcode')->delete();
    CINC::init('ListTextField')->machine_name('field_reader_school')->delete();
    CINC::init('ListTextField')->machine_name('field_reader_gender')->delete();
    CINC::init('TextField')->machine_name('field_reader_phone')->delete();
    CINC::init('BooleanField')->machine_name('field_reader_text_me')->delete();
    CINC::init('BooleanField')->machine_name('field_reader_email_me')->delete();
    user_role_delete('reader');
  }

}

/**
 * Adds Reader role to the DB.
 */
function _infodesk_summer_reading_deploy_create_roles() {
  $role_to_rid = array_flip(user_roles());

  // Create reader role
  if (!isset($role_to_rid['reader'])) {
    $reader_role = new stdClass();
    $reader_role->name = 'reader';
    user_role_save($reader_role);
    user_role_grant_permissions($reader_role->rid, array(
      'access content',
      'add time tracker entries',
      'view own time tracker entries',
      'edit own time tracker entries',
      'delete own time tracker entries',
      'administer time sheet',
      'view time sheet entries',
      'administer subusers',
      'view subusers',
      'edit subusers',
      'delete subusers',
      'create subuser ' . $reader_role->rid,
      'switch to subuser',
    ));
  }
}

/**
 * Adds Reading activity to time_tracker_activity table in the DB.
 */
function _infodesk_summer_reading_deploy_time_tracker() {
  variable_set('time_tracker-user-user', 1);

  db_insert('time_tracker_activity')
    ->fields(array(
      'taid' => 1,
      'name' => 'Reading',
      'weight' => 1,
      'status' => 1,
    ))
    ->execute();
}

function _infodesk_summer_reading_deploy_user_settings() {
  variable_set('user_register', USER_REGISTER_VISITORS);

  $firstname_field = CINC::init('TextField')
    ->machine_name('field_reader_firstname')
    ->set_instance('label', 'First Name')
    ->set_instance('settings.user_register_form', TRUE)
    ->set_instance('widget', array(
      'settings' => array(
        'size' => 18
      )
    ))
    ->set_instance('required', TRUE)
    ->create();

  $firstname_field->create_instance_for('user', 'user');

  $lastname_field = CINC::init('TextField')
    ->machine_name('field_reader_lastname')
    ->set_instance('label', 'Last Name')
    ->set_instance('settings.user_register_form', TRUE)
    ->set_instance('widget', array(
      'settings' => array(
        'size' => 18
      )
    ))
    ->set_instance('required', TRUE)
    ->create();

  $lastname_field->create_instance_for('user', 'user');

  $age_field = CINC::init('ListTextField')
    ->machine_name('field_reader_age')
    ->set('settings', array(
      'allowed_values' => array(
        '0-5' => '0-5',
        '6-11' => '6-11',
        '12-18' => '12-18',
        '18+' => '18+',
      ),
    ))
    ->set_instance('label', 'Age')
    ->set_instance('settings.user_register_form', TRUE)
    ->set_instance('required', TRUE)
    ->create();

  $age_field->create_instance_for('user', 'user');

  $zipcode_field = CINC::init('TextField')
    ->machine_name('field_reader_zipcode')
    ->set('settings', array(
      'max_length' => 12
    ))
    ->set_instance('label', 'Zip Code')
    ->set_instance('settings.user_register_form', TRUE)
    ->set_instance('widget', array(
      'settings' => array(
        'size' => 5
      )
    ))
    ->set_instance('required', TRUE)
    ->create();

  $zipcode_field->create_instance_for('user', 'user');

  $school_field = CINC::init('ListTextField')
    ->machine_name('field_reader_school')
    ->set('settings', array(
      'allowed_values_function' => array('_infodesk_summer_reading_schools'),
    ))
    ->set_instance('label', 'School')
    ->set_instance('settings.user_register_form', TRUE)
    ->create();

  $school_field->create_instance_for('user', 'user');

  $gender_field = CINC::init('ListTextField')
    ->machine_name('field_reader_gender')
    ->set('settings', array(
      'allowed_values' => array(
        'Female' => 'Female',
        'Male' => 'Male',
      ),
    ))
    ->set_instance('label', 'Gender')
    ->set_instance('settings.user_register_form', TRUE)
    ->set_instance('widget', array(
      'type' => 'options_buttons'
    ))
    ->create();

  $gender_field->create_instance_for('user', 'user');

  $phone_field = CINC::init('TextField')
    ->machine_name('field_reader_phone')
    ->set('settings', array(
      'max_length' => 64
    ))
    ->set_instance('label', 'Phone Number')
    ->set_instance('settings.user_register_form', TRUE)
    ->set_instance('widget', array(
      'settings' => array(
        'size' => 12
      )
    ))
    ->create();

  $phone_field->create_instance_for('user', 'user');

  $text_me_field = CINC::init('BooleanField')
    ->machine_name('field_reader_text_me')
    ->set_instance('label', 'Ok to Text Me?')
    ->set_instance('settings.user_register_form', TRUE)
    ->create();

  $text_me_field->create_instance_for('user', 'user');

  $email_me_field = CINC::init('BooleanField')
    ->machine_name('field_reader_email_me')
    ->set_instance('label', 'Ok to Email Me?')
    ->set_instance('settings.user_register_form', TRUE)
    ->create();

  $email_me_field->create_instance_for('user', 'user');
}

/**
 * Todo: Add schools here in key=>value array for select list allowed values
 * @return array
 */
function _infodesk_summer_reading_schools() {
  return array();
}
