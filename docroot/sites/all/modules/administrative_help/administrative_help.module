<?php
/**
 * @file
 * Main module code for the Administrative Help Module.
 *
 * @author Developed by Nicole Benes and RichirOutreach.com
 */

/**
 * Implements hook_permission().
 */
function administrative_help_permission() {
  return array(
    'access administrative_help content' => array(
      'title' => t('View content for the Administrative Help module'),
    ),
  );
}


/**
 * Implements hook_node_access().
 */
function administrative_help_node_access($node, $op, $account) {
  $type = is_string($node) ? $node : $node->type;

  if ($type == "administrative_help") {
    if (user_access('access administrative_help content', $account)) {
      return NODE_ACCESS_ALLOW;
    }

    return NODE_ACCESS_DENY;
  }

  return NODE_ACCESS_IGNORE;
}


/**
 * Implements hook_block_info().
 */
function administrative_help_block_info() {
  $blocks['administrative_help'] = array(
    // The name that will appear in the block list.
    'info' => t('Administrative Help Topics'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}


/**
 * Custom content function.
 *
 * Retrieve posts from database that are of the type
 * administrative_help
 *
 * @return array $query
 *   A result set of the targeted posts.
 */
function administrative_help_contents() {
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created'))
    ->condition('status', 1)
    ->condition('type', 'administrative_help')
    ->orderBy('created', 'DESC')
    ->addTag('node_access')
    ->execute();
  return $query;
}


/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function administrative_help_block_view($delta = '') {
  switch ($delta) {
    case 'administrative_help':
      $block['subject'] = t('Administrative Help Topics');
      if (user_access('access administrative_help content')) {
        // Use our custom function to retrieve data.
        $result = administrative_help_contents();

        // Array to contain items for the block to render.
        $items = array();

        // Iterate over the resultset and format as links.
        foreach ($result as $node) {
          $items[] = array(
            'data' => l($node->title, 'node/' . $node->nid),
          );
        }

        // No content.
        if (empty($items)) {
          $block['content'] = t('No help topics available.');
        }
        else {
          // Pass data through theme function.
          $block['content'] = theme('item_list', array(
            'items' => $items));
        }
      }
      return $block;
  }
}


/**
 * Implements hook_help().
 */
function administrative_help_help($path, $arg) {
  switch ($path) {
    case 'admin/help#administrative_help':
      $output = file_get_contents(drupal_get_path('module', 'administrative_help') . '/README.txt');
      return module_exists('markdown') ? filter_xss_admin(module_invoke('markdown', 'filter', 'process', 0, -1, $output)) : '<pre>' . check_plain($output) . '</pre>';
  }
}
