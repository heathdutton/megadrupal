<?php

/**
 * @file
 * Install file for the Captcha By IP module.
 */

/**
 * Implementation of hook_schema().
 */
function captcha_by_ip_schema() {
  $schema = array();
  $schema['captcha_by_ip'] = array(
    'description' => 'This table stores which forms to process IP ranges for CAPTCHA determination.',
    'fields' => array(
      'form_id' => array(
        'description' => 'The form_id of the form to add a CAPTCHA to.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'operation' => array(
        'description' => 'The operation to perform on IP match (exclude or enforce CAPTCHA).',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => 'none',
      ),
      'ip_range' => array(
        'description' => 'An IP range in CIDR notation.',
        'type' => 'text',
      ),
    ),
    'primary key' => array('form_id'),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function captcha_by_ip_install() {
  // Load in defaults from file captcha_by_ip.defaults.inc
  $defaults = include_once(drupal_get_path('module', 'captcha_by_ip') . '/captcha_by_ip.defaults.inc');
  if (is_array($defaults['forms'])) {
    if (!empty($defaults['forms'])) {
      foreach ($defaults['forms'] as $form_id => $settings) {
        // Verify form currently has CAPTCHA enabled
        $valid_form = db_select('captcha_points', 'cp')
          ->fields('cp')
          ->condition('form_id', $form_id, '=')
          ->execute()
          ->fetchObject();
        if ($valid_form) {
          // Validate valid IP range
          if (_captcha_by_ip_validate_default_ip($settings['ip_range'])) {
            // Validate for proper operation
            if (in_array($settings['operation'], array('none', 'exclude', 'enforce'))) {
              // Insert defaults
              db_insert('captcha_by_ip')
                ->fields(array(
                  'form_id' => $form_id,
                  'operation' => $settings['operation'],
                  'ip_range' => $settings['ip_range'],
                ))
                ->execute();
            }
          }
        }
      }
    }
  }
}

/**
 * Implementation of hook_uninstall().
 */
function captcha_by_ip_uninstall() {
  // Drop variables.
  variable_del('captcha_by_ip_header');
  drupal_set_message(t('Captcha By IP module uninstalled successfully.'));
}

/**
 * Validate function to validate ip addresses passed in by include.
 */
function _captcha_by_ip_validate_default_ip($ip_address) {
  $ipaddresses = explode(";", $ip_address);
  $valid = TRUE;
  // Check each ip address individually
  foreach ($ipaddresses as $ipaddress) {
    // Seperate in to address and cidr mask
    $cidr = explode("/", $ipaddress);
    // Check address and cidr mask entered
    if (count($cidr) == 2) {
      $ipaddr = explode(".", $cidr[0]);
      // Check four octets entered
      if (count($ipaddr) == 4) {
        // Check each octet is valid - numeric and 0 < value < 255
        for ($i=0; $i<count($ipaddr); $i++) {
          if ((!is_numeric($ipaddr[$i])) || ($ipaddr[$i] < 0) || ($ipaddr[$i] > 255)) {
            $valid = FALSE;
          }
        }
        // Check cidr mask value - numeric and 0 < value < 33
        if((!is_numeric($cidr[1])) || ($cidr[1]<1) || ($cidr[1]>32)) {
          $valid = FALSE;
        }
      }
      else {
        $valid = FALSE;
      }
    }
    else {
      $valid = FALSE;
    }
  }
  return $valid;
}
