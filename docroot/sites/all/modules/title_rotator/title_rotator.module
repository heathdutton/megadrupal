<?php

/**
 * @file
 * title_rotator.module
 */

/**
 * Implements hook_menu().
 */
function title_rotator_menu() {
  $items = array();
  // Put the administrative settings under System on the Configuration page.
  $items['admin/config/system/title-rotator'] = array(
    'title' => 'Site name and Slogan Rotator',
    'description' => 'Configure alternative site names and slogans',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('title_rotator_admin_configure'),
    'access arguments' => array('administer site configuration'),
    'file' => 'title_rotator.admin.inc',
  );
  return $items;
}

/**
 * Implements HOOK_preprocess_THEME().
 */
function title_rotator_preprocess_page(&$variables) {
  title_rotator_set_next_choice($variables, 'site_name');
  title_rotator_set_next_choice($variables, 'site_slogan');
}

function title_rotator_set_next_choice(&$variables, $variable_name) {
  $choices = variable_get("title_rotator_{$variable_name}s");
  if (!empty($choices)) {
    $current_name = "title_rotator_current_{$variable_name}";

    if (module_exists('session_cache')) {
      $session = session_cache_get('title_rotator');
      $current = empty($session[$current_name]) ? variable_get($variable_name) : $session[$current_name];
      $variables[$variable_name] = $session[$current_name] = title_rotator_get_next_choice($choices, $current);
      session_cache_set('title_rotator', $session);
    }
    else {
      $current = empty($_SESSION[$current_name]) ? variable_get($variable_name) : $_SESSION[$current_name];
      $variables[$variable_name] = $_SESSION[$current_name] = title_rotator_get_next_choice($choices, $current);
    }
  }
}

/**
 * Returns the next string from a list.
 *
 * @param string $choices_string, must be delimited by '|
 * @param string $current_choice
 * @return string, next alternative in the list, or first when we're at the end
 */
function title_rotator_get_next_choice($choices_string, $current_choice) {
  $choices = explode('|', $choices_string);
  if (!empty($choices)) {
    $found = FALSE;
    $next_choice = reset($choices);
    while (!$found && $next_choice) {
      $found = trim($next_choice) == trim($current_choice);
      $next_choice = next($choices);
    }
    if (empty($next_choice)) {
      $next_choice = reset($choices);
    }
  }
  else {
    $next_choice = empty($current_choice) ? $choices_string : $current_choice;
  }
  return trim(filter_xss_admin($next_choice));
}
