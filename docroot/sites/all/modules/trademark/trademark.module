<?php

/**
 * @file
 * Provides an input filter that can automatically wrap &trade;, &reg; and &copy; symbols with superscript HTML tags (&lt;sup&gt;).
 */

function trademark_menu() {
  $menu = array(
    'admin/config/content/trademark' => array(
      'title' => t('Trademark'),
      'description' => t('Automatically wrap &trade;, &reg; and &copy; symbols with superscript HTML tags (<code>&lt;sup&gt;</code>).'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('trademark_admin_settings'),
      'access callback' => 'user_access',
      'access arguments' => array('administer trademark settings'),
      'type' => MENU_NORMAL_ITEM,
    ),
  );
  return $menu;
}

function trademark_permission() {
  $permission = array(
    'administer trademark settings' => array(
      'title' => t('Administer Trademark Settings'), 
      'description' => t('Perform administration configuration tasks for the Trademark module.'),
    ),
  );
  return $permission;
}

function trademark_admin_settings() {
  $form = array();

  $form['trademark_copyright'] = array(
    '#type' => 'checkbox',
    '#title' => t('Wrap copyright &copy; symbols'),
    '#default_value' => variable_get('trademark_copyright', TRUE),
    '#description' => t("By enabling this option, copyright &copy; symbols will be wrapped in a HTML superscript tag (<code>&lt;sup&gt;</code>)."),
  );
  $form['trademark_registered'] = array(
    '#type' => 'checkbox',
    '#title' => t('Wrap registered &reg; symbols'),
    '#default_value' => variable_get('trademark_registered', TRUE),
    '#description' => t("By enabling this option, registered &reg; symbols will be wrapped in a HTML superscript tag (<code>&lt;sup&gt;</code>)."),
  );
  $form['trademark_trademark'] = array(
    '#type' => 'checkbox',
    '#title' => t('Wrap trademark &trade; symbols'),
    '#default_value' => variable_get('trademark_trademark', FALSE),
    '#description' => t("By enabling this option, trademark &trade; symbols will be wrapped in a HTML superscript tag (<code>&lt;sup&gt;</code>). By default this option is disabled as the trademark symbol is usually rendered as superscript natively."),
  );
  
  $form['trademark_node_title'] = array(
    '#type' => 'checkbox',
    '#title' => t('Filter Node Titles'),
    '#default_value' => variable_get('trademark_node_title', TRUE),
    '#description' => t("By default, node titles do not run through content input filters. By enabling this option, this will ensure that all node titles are checked for trademark symbols."),
  );
  return system_settings_form($form);
}

function trademark_preprocess_page(&$variables) {
  if (variable_get('trademark_node_title', TRUE)) {
    $variables['title'] = _trademark_process(drupal_get_title());
  }
}

/**
 * Implementation of hook_theme().
 */
function trademark_theme($existing) {
  return array(
    'views_view_field__title' => array(
      'variables' => array('view' => NULL, 'field' => NULL, 'row' => NULL, 'output' => NULL),
      'original hook' => 'views_view_field',
    ),
  );
}

/**
 * Views node title integration.
 */
function theme_views_view_field__title(&$variables) {
  $output = $variables['view']->render_field('title', $variables['view']->row_index);
  if (variable_get('trademark_node_title', TRUE)) {
    $output = _trademark_process($output);
  }
  return $output;
}

/**
 * Implements hook_filter_info().
 */
function trademark_filter_info() {
  $filters = array();
  $replacements = array();
  if (variable_get('trademark_copyright', TRUE)) {
    $replacements[] = '&copy;';
  }
  if (variable_get('trademark_registered', TRUE)) {
    $replacements[] = '&reg;';
  }
  if (variable_get('trademark_trademark', TRUE)) {
    $replacements[] = '&trade;';
  }
  $filters['trademark'] = array(
    'title' => t('Wrap the following symbols in HTML superscript tags (<code>&lt;sup&gt;</code>): !replacements', array('!replacements' => implode(',', $replacements))),
    'process callback' => '_trademark_process',
    'tips callback' => '_trademark_tips',
  );
  return $filters;
}

/**
 * Filter tips callback.
 */
function _trademark_tips($filter, $format, $long = FALSE) {
  $replacements = array();
  if (variable_get('trademark_copyright', TRUE)) {
    $replacements[] = '&copy;';
  }
  if (variable_get('trademark_registered', TRUE)) {
    $replacements[] = '&reg;';
  }
  if (variable_get('trademark_trademark', FALSE)) {
    $replacements[] = '&trade;';
  }  
  if ($long && !empty($replacements)) {
    return t('The following symbols will be wrapped in HTML superscript tags (<code>&lt;sup&gt;</code>): !replacements', array('!replacements' => implode(',', $replacements)));
  }
}

/**
 * Replacement process callbacks.
 */
function _trademark_process($text, $filter = NULL) {
  $patterns = array();
  if (variable_get('trademark_copyright', TRUE)) {
    $patterns[] = '/([!])?(&copy;|&#169;|©)/';
  }
  if (variable_get('trademark_registered', TRUE)) {
    $patterns[] = '/([!])?(&reg;|&#174;|®)/';
  }
  if (variable_get('trademark_trademark', FALSE)) {
    $patterns[] = '/([!])?(&trade;|&#153;|™)/';
  }
  if (!empty($patterns)) {
    return preg_replace_callback($patterns, '_trademark_replace_callback', $text);
  }
  else {
    return $text;
  }
}

function _trademark_replace_callback($text) {
  if ($text[1] != '!') {
    $text = '<sup>' . $text[2] . '</sup>';
  }
  return $text;
}
