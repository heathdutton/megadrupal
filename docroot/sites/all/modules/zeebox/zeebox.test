<?php
/**
 * @file
 * Simpletests for the zeebox Everywhere module.
 */

class zeeboxTestCase extends DrupalWebTestCase {
  protected $admin_user;
  protected $bean;

  /**
   * Enable modules and create an admin user with specific permissions.
   */
  public function setUp() {
    parent::setUp('bean', 'ctools', 'entity', 'block', 'zeebox');
    $permissions = array_merge(
      array(
        'administer blocks',
        'access administration pages',
        'administer site configuration',
        'access content',
      ),
      array_keys(bean_permission())
    );
    $this->admin_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->admin_user);
    variable_set('zeebox_region', 'us');
  }

  /**
   * Test loading of the plugin
   */
  protected function beanLoadPluginTest($plugin_name) {
    // Load the class
    $plugin_class = bean_load_plugin_class($plugin_name);
    $plugin_class_name = get_class($plugin_class);

    // Plugin should be implement the BeanTypePluginInterface interface
    if (bean_check_plugin_class($plugin_class_name)) {
      $this->pass(t('Bean type should use the BeanTypePluginInterface interface'));
    }
    else {
      $this->fail(t('Bean type should use the BeanTypePluginInterface interface'));
    }
  }

  /**
   * Creates and tests the TV Room widget.
   */
  protected function createBeanAndTest($values) {
    $bean = bean_create($values);
    bean_save($bean);
    $this->bean = $bean;

    $this->drupalGet($bean->url());
    $this->assertResponse(200, 'Bean Page is viewable');
    $this->assertText($bean->label(), 'Bean Page is viewable');

    $this->drupalGet("block/{$bean->identifier()}");
    $this->assertResponse(200, 'Legacy Bean Page is viewable');
    $this->assertText($bean->label(), 'Legacy Bean Page is viewable');
  }
}

class zeeboxTestSettings extends zeeboxTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Settings',
      'description' => 'Tests the administrative settings page works correctly.',
      'group' => 'zeebox Everywhere',
    );
  }

  /**
   * Tests the settings page - NOTE the variable even though its US
   * by default, is hard-set to US in the setUp() function.
   */
  public function testSettingsPage() {
    $expected_region = 'uk';
    $this->drupalGet('admin/config/regional/zeebox');
    $this->drupalPost('admin/config/regional/zeebox', array('zeebox_region' => $expected_region), t('Save configuration'));
    $this->assertIdentical(variable_get('zeebox_region', 'us'), $expected_region, 'Settings page works correctly.');
  }
}

class zeeboxTestPlugins extends zeeboxTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Bean integration',
      'description' => 'Tests the zeebox Everywhere module plugins are picked up by Bean.',
      'group' => 'zeebox Everywhere',
    );
  }

  /**
   * Tests the Bean /block/add page displays all our widgets.
   */
  public function testAvailableWidgets() {
    $this->drupalGet('block/add');
    $this->assertRaw('>zeebox TV Room<', 'TV Room found.');
    $this->assertRaw('>zeebox TV Room Teaser<', 'TV Room Teaser found.');
    $this->assertRaw('>zeebox Hot TV Rooms widget<', 'Hot TV Rooms found.');
    $this->assertRaw('>zeebox Synchronised Play-along Zone widget<', 'Play-along Zone found.');
    $this->assertRaw('>zeebox Follow button<', 'Follow Button found.');
  }
}

class zeeboxTestRender extends zeeboxTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Render',
      'description' => 'Tests the plugins render correctly.',
      'group' => 'zeebox Everywhere',
    );
  }

  /**
   * Tests the TV Room widget.
   */
  public function testRenderTVRoom() {
    $values = array(
      'delta' => 'zeebox_tv_room',
      'type' => 'zeebox_tv_room',
      'label' => t('Test TV Room'),
      'title' => t('Test TV Room'),
      'view_mode' => 'default',
      'data' => array(
        'settings' => array(
          'tv_room_id' => 'ad627b45-cc45-11e2-1066-20c615b252f0',
        ),
      ),
    );
    $this->beanLoadPluginTest($values['type']);
    $this->createBeanAndTest($values);

    $this->drupalGet($this->bean->url());
    $this->assertRaw('<a class="zeebox-tv-room" href="http://zeebox.com/tv/rooms/ad627b45-cc45-11e2-1066-20c615b252f0" data-zeebox-type="tv-room">', 'TV Room widget found.');
  }

  /**
   * Tests the TV Room Teaser widget.
   */
  public function testRenderTVRoomTeaser() {
    $values = array(
      'delta' => 'zeebox_tv_room_teaser',
      'type' => 'zeebox_tv_room_teaser',
      'label' => t('Test TV Room Teaser'),
      'title' => t('Test TV Room Teaser'),
      'view_mode' => 'default',
      'data' => array(
        'settings' => array(
          'tv_room_id' => 'ad627b45-cc45-11e2-1066-20c615b252f0',
        ),
      ),
    );
    $this->beanLoadPluginTest($values['type']);
    $this->createBeanAndTest($values);

    $this->drupalGet($this->bean->url());
    $this->assertRaw('<a class="zeebox-tv-room-teaser" href="http://zeebox.com/tv/rooms/ad627b45-cc45-11e2-1066-20c615b252f0" data-zeebox-type="tv-room" data-zeebox-teaser="true">', 'TV Room Teaser widget found.');
  }

  /**
   * Tests the Hot TV Room widget.
   */
  public function testRenderHotTVRoom() {
    $values = array(
      'delta' => 'zeebox_hot_tv_rooms',
      'type' => 'zeebox_hot_tv_rooms',
      'label' => t('Test Hot TV Room'),
      'title' => t('Test Hot TV Room'),
      'view_mode' => 'default',
      'data' => array(
        'settings' => array(
          'tv_room_link' => 'test',
          'limit' => 5,
          'user_id' => '555',
        ),
      ),
    );
    $this->beanLoadPluginTest($values['type']);
    $this->createBeanAndTest($values);

    $this->drupalGet($this->bean->url());
    $this->assertRaw('<a class="zeebox-hot-tv-rooms" href="http://zeebox.com/users/555/rooms" data-zeebox-limit="5" data-zeebox-link="test" data-zeebox-type="hot-rooms">', 'Hot TV Room widget found.');
  }

  /**
   * Tests the Play-along zone widget.
   */
  public function testRenderPlayAlong() {
    $values = array(
      'delta' => 'zeebox_play_along',
      'type' => 'zeebox_play_along',
      'label' => t('Test Play-along Zone'),
      'title' => t('Test Play-along Zone'),
      'view_mode' => 'default',
      'data' => array(
        'settings' => array(
          'brand_id' => '374',
        ),
      ),
    );
    $this->beanLoadPluginTest($values['type']);
    $this->createBeanAndTest($values);

    $this->drupalGet($this->bean->url());
    $this->assertRaw('<a class="zeebox-play-along" href="http://zeebox.com/tv/brand/374" data-zeebox-type="sync-widget">', 'Play-along zone widget found.');
  }

  /**
   * Tests the Follow Button widget.
   */
  public function testRenderFollowButton() {
    $values = array(
      'delta' => 'zeebox_follow_button',
      'type' => 'zeebox_follow_button',
      'label' => t('Test Follow Button'),
      'title' => t('Test Follow Button'),
      'view_mode' => 'default',
      'data' => array(
        'settings' => array(
          'brand_id' => '374',
        ),
      ),
    );
    $this->beanLoadPluginTest($values['type']);
    $this->createBeanAndTest($values);

    $this->drupalGet($this->bean->url());
    $this->assertRaw('src="http://stage-develop.zeebox.com/buttons/follow-frame.html?brand=374&tvc=us"', 'Follow Button widget found.');
  }
}
