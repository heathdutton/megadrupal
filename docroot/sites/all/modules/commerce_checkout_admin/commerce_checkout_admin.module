<?php

/**
 * @file
 * Display an order number field on order edit pages.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function commerce_checkout_admin_form_commerce_order_ui_order_form_alter(&$form, &$form_state) {
  $order = $form_state['commerce_order'];
  $form['order_status']['order_number'] = array(
    '#type' => 'textfield',
    '#title' => t('Order number'),
    '#default_value' => $order->order_number,
    '#size' => 20,
    '#maxlength' => 255,
  );
  // We need to pass along the original order number here, because we only want
  // to trigger an order update when the user has actually changed it.
  $form['order_status']['order_number_original'] = array(
    '#type' => 'value',
    '#value' => $order->order_number,
  );
  $form['actions']['submit']['#validate'][] = 'commerce_checkout_admin_order_form_validate';
  $form['actions']['submit']['#submit'][] = 'commerce_checkout_admin_order_form_submit';
}

/**
 * Form validation handler for the order form.
 */
function commerce_checkout_admin_order_form_validate($form, &$form_state) {
  $order_number = $form_state['values']['order_number'];
  $order_id = $form_state['commerce_order']->order_id;
  // Do not validate the order number on new orders where it is left empty.
  if ($order_number || $order_id) {
    if (!commerce_order_validate_number_unique($order_number, $order_id)) {
      form_set_error('order_number', t('Order number already exists for a different order.'));
    }
    if (!commerce_order_validate_number_characters($order_number)) {
      form_set_error('order_number', t('Order number must not be empty and must only contain alphanumeric characters, dashes and under scores.'));
    }
  }
}

/**
 * Form submission handler for commerce_order_order_form().
 */
function commerce_checkout_admin_order_form_submit($form, &$form_state) {
  // A order number cannot be empty, so ignore that.
  if (!empty($form_state['values']['order_number'])
    // Only update the order if the user has actually changed the number.
    && $form_state['values']['order_number'] != $form_state['values']['order_number_original']
  ) {
    $order = commerce_order_load($form_state['commerce_order']->order_id);
    $order->order_number = $form_state['values']['order_number'];
    commerce_order_save($order);
  }
}
