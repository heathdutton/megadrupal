<?php
/**
 * @file
 *
 * Tripal Analysis GO Module
 */

/**
 *  Implementation of hook_install();
 */
function tripal_analysis_go_install(){

   // Register this module as an analysis.
   tripal_register_analysis_child('tripal_analysis_go');

   // Add the materialized views.
   tripal_analysis_go_add_mviews();
}

/**
 * Adds materialized views for this module.
 */
function tripal_analysis_go_add_mviews() {
  $view_name = 'go_count_analysis';
  $comment = t('This view is for counting features assigned to GO terms by a particular analysis.');
  
  // Drop the MView table if it exists
  $mview_id = tripal_get_mview_id($view_name);
  if ($mview_id) {
    tripal_delete_mview($mview_id);
  }
  
  $sql = "
    SELECT T1.cvname,T1.cvterm_id,T1.analysis_id,T1.organism_id,count(*) as feature_count
    FROM
    (SELECT DISTINCT AF.analysis_id, AF.feature_id,CVT.name as cvname,
       CVT.cvterm_id,CVTP.object_id,CV.name, F.organism_id
     FROM analysisfeatureprop AFP
       INNER JOIN analysisfeature AF ON AF.analysisfeature_id = AFP.analysisfeature_id
       INNER JOIN feature F          ON AF.feature_id = F.feature_id
       INNER JOIN cvtermpath CVTP    ON CVTP.subject_id = AFP.type_id
       INNER JOIN cvterm CVT         ON CVTP.object_id = CVT.cvterm_id
       INNER JOIN CV                 ON CV.cv_id = CVT.cv_id
    
     WHERE
       (CV.name = 'biological_process' or
        CV.name = 'molecular_function' or
        CV.name = 'cellular_component')) as T1
    GROUP BY T1.cvname,T1.cvterm_id,T1.analysis_id,T1.organism_id
  ";

  $schema = array(
    'table' => $view_name,
    'description' => $comment,
    'fields' => array(
      'cvterm_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'organism_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'analysis_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'feature_count' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      $view_name . '_indx0' => array('cvterm_id', 'organism_id', 'analysis_id'),
    ),
    'foreign keys' => array(
      'cvterm' => array(
        'table' => 'cvterm',
        'columns' => array(
          'cvterm_id' => 'cvterm_id',
        ),
      ),
      'organism' => array(
        'table' => 'organism',
        'columns' => array(
          'organism_id' => 'organism_id',
        ),
      ),
      'analysis' => array(
        'table' => 'analysis',
        'columns' => array(
          'analysis_id' => 'analysis_id',
        ),
      ),
    ),
  );
  tripal_add_mview($view_name, 'tripal_analysis_go', $schema, $sql, $comment);
}
/**
 * Implements hook_uninstall()
 */
function tripal_analysis_go_uninstall(){

  // Remove materialized views
  $mview = tripal_get_mview_id('go_count_analysis');
  if ($mview) {
    tripal_delete_mview($mview_id);
  }

  // Unregister the child analysis.
  tripal_unregister_analysis_child('tripal_analysis_go');
}

/*******************************************************************************
 * Implementation of hook_requirements(). Make sure 'Tripal Core' and 'Tripal
 * Analysis' are enabled before installation
 */
function tripal_analysis_go_requirements($phase) {
  $requirements = array();
  if ($phase == 'install') {
    if (!function_exists('tripal_create_moddir') || !function_exists('tripal_register_analysis_child')) {
      $requirements ['tripal_analysis_go'] = array(
        'title' => "tripal_analysis_go",
        'value' => "error. Some required modules are just being installed. Please try again.",
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}
