<?php

require_once "includes/tripal_analysis_go.gaf_loader.inc";
require_once "includes/tripal_analysis_go.admin.inc";
require_once "includes/tripal_analysis_go.charts.inc";
require_once "theme/tripal_analysis_go.theme.inc";



/**
 * Implements hook_init().
 */
function tripal_analysis_go_init(){
   // Add style sheet.
   drupal_add_css(drupal_get_path('module', 'tripal_analysis_go') . '/theme/css/tripal_analysis_go.css', 'theme');
   drupal_add_js(drupal_get_path('module', 'tripal_analysis_go') . '/theme/js/tripal_analysis_go.js');
}

/**
 * Implements hook_menu().
 */
function tripal_analysis_go_menu() {
  $items = array();
  
  $items['download_goterm_features'] = array(
    'path' => 'download_goterm_features',
    'title' => t('Get GO Term Features'),
    'page callback' => 'tripal_analysis_go_get_goterm_features',
    'page arguments' => array(1,2),
    'access arguments' => array('access chado_analysis_go content'),
    'type' => MENU_CALLBACK
  );
  $items['tripal_analysis_go_org_charts'] = array(
    'path' => 'tripal_analysis_go_org_charts',
    'title' => t('Analysis GO Charts'),
    'page callback' => 'tripal_analysis_go_org_charts',
    'page arguments' => array(1),
    'access arguments' => array('access chado_analysis_go content'),
    'type' => MENU_CALLBACK
  );
  $items['admin/tripal/extension/tripal_go_analysis'] = array(
    'title' => 'Tripal GO Analyses',
    'description' => 'Settings for the displays of GO analysis results.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tripal_analysis_go_settings_form'),
    'access arguments' => array('administer tripal'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/tripal/loaders/gaf_load'] = array(
    'title' => t('GAF File Loader'),
    'description' => t("Import Gene Ontology's GAF 2.0 file format to associate GO terms with features."),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tripal_analysis_go_gaf_load_form'),
    'access arguments' => array('administer tripal'),
    'type' => MENU_NORMAL_ITEM,
  );

   return $items;
}

/**
 * Implements hook_node_view().
 */
function tripal_analysis_go_node_view($node, $view_mode, $langcode) {

  switch ($node->type) {
    case 'chado_organism':
      if ($view_mode == 'full') {
        $node->content['tripal_organism_go_summary'] = array(
          '#markup' => theme('tripal_organism_go_summary', array('node' => $node)),
          '#tripal_toc_id'    => 'GO',
          '#tripal_toc_title' => 'GO Analysis Reports',
        );
      }
      break;
   }
 }

/**
 * Implements hook_theme().
 */
function tripal_analysis_go_theme($existing, $type, $theme, $path) {
  $core_path = drupal_get_path('module', 'tripal_core');
  $items = array(
    'tripal_organism_go_summary' => array (
      'variables' => array('node' => null),
      'template' => 'tripal_organism_go_summary',
      'path' => "$path/theme/templates",
    ),
  );
  return $items;
}

/**
 *
 *
 * @ingroup tripal_feature
 */
function tripal_analysis_go_job_describe_args($callback,$args){

   $new_args = array();
   if($callback == 'tripal_analysis_go_load_gaf'){
      
      $new_args['GAF 2.0 file'] = $args[0];

      $organism = tripal_core_chado_select('organism',array('genus','species'),array('organism_id' => $args[1]));
      $new_args['Organism'] = $organism[0]->genus." ". $organism[0]->species;
      $new_args['Sequence Type'] = $args[7];
      if(!$args[8]){
        $new_args['Use Unique Name'] = 'No';
      } else {
        $new_args['Use Unique Name'] = 'Yes';
      }

      // add in the analysis 
      if($args[2]){
         $analysis = tripal_core_chado_select('analysis',array('name'),array('analysis_id' => $args[2]));
      }
      $new_args['Analysis'] = $analysis[0]->name;

      if($args[3]){
        $new_args['Function to perform'] = 'Add GO terms';
      }
      if($args[4]){
        $new_args['Function to perform'] = 'Replace GO terms';
      }
      if($args[5]){
        $new_args['Function to perform'] = 'Delete GO terms';
      }

      $new_args['Regular expression for the feature name'] = $args[6];


   }
   return $new_args;
}
