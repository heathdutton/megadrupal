<?php

/**
 * @file
 * Adds sentiment analysis for comments.
 */

/**
 * Implements hook_form_alter().
 */
function sentiment_analysis_comment_form_alter(&$form, &$form_state, $form_id) {
  if (strstr($form_id, 'comment_node')) {
    // Unshift default validate.
    array_unshift($form['#validate'], 'sentiment_analysis_comment_form_validate');
  }
}

/**
 * Implements hook_form_validate().
 */
function sentiment_analysis_comment_form_validate($form, &$form_state) {
  global $user;
  $uid = $user->uid;
  $nid = $form_state['values']['nid'];
  $cid = $form_state['values']['cid'];
  // Check API present/not.
  $api_key = sentiment_analysis_get_api();
  if (!empty($api_key)) {
    $sentence = $form_state['values']['comment_body'][LANGUAGE_NONE][0]['value'];
    // Checking length of inputted value.
    if (strlen($sentence) > 5000) {
      form_set_error('comment_body', t('Character count shoule be less than 5000'));
      return FALSE;
    }
    if (!empty($sentence)) {
      $api_url = "https://api.idolondemand.com/1/api/sync/analyzesentiment/v1";
      $api_query = $api_url . "?text=" . urlencode($sentence);
      $api_query .= "&apikey=" . $api_key;
      $api_session = curl_init($api_query);
      curl_setopt($api_session, CURLOPT_RETURNTRANSFER, TRUE);
      $apiexec = curl_exec($api_session);
      // Output of API in JSON format.
      $sentence_result = json_decode($apiexec, TRUE);
      $score = $sentence_result['aggregate']['score'];
      if (!empty($sentence_result)) {
        $current_url = url(current_path(), array('absolute' => TRUE, 'query' => drupal_get_query_parameters()));
        if ($sentence_result['aggregate']['sentiment'] == 'negative') {
          foreach ($sentence_result['negative'] as $negative_list) {
            $sentiment_word = $negative_list['sentiment'];
            drupal_set_message(t(':sentiment_word is a sentiment word.', array(":sentiment_word" => $sentiment_word)), 'error');
          }
        }
        $sentiment = $sentence_result['aggregate']['sentiment'];
        // Insert analyzed Sentiment Data.
        $nid = db_insert('sentiment_analysis_details')
            ->fields(array(
              'sentiment' => $sentiment,
              'sentence_description' => $sentence,
              'score' => $score,
              'nid' => $nid,
              'cid' => $cid,
              'uid' => $uid,
              'page_url' => $current_url,
              'time' => date('Y-m-d h:i:s a'),
            ))
            ->execute();
      }
    }
    // Form set error is sentiment is negative.
    if (!empty($sentence_result)) {
      if ($sentence_result['aggregate']['sentiment'] == 'negative') {
        form_set_error('comment_body', t('Rectify error(s) ans resubmit again.'));
        return FALSE;
      }
    }
  }
  // No API key.
  else {
    drupal_set_message(t('Skipped sentiment analysis due to lack of API Key'));
  }
}
