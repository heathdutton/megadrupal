<?php
/**
 * @file
 * Main functionality of module.
 */

/**
 * Returns a list of default schema fields for CSV to SQL tables.
 */
function migrate_csv_to_sql_default_csv_schema_fields() {
  $fields = array(
    'id' => array(
      'type' => 'serial',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'description' => 'Primary key for table',
    ),
    'file_name' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'description' => 'CSV file name',
    ),
    'hash' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'description' => 'Contains hash of the imported row',
    ),
    'csvrownum' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'description' => 'Contains csv row number of the imported row',
    ),
  );

  return $fields;
}

/**
 * Installs CSV to SQL database tables, for a given module.
 *
 * This should be called by implementing modules in hook_schema(), because
 * it can't be called generically for all modules, given the schemas have to
 * be static.
 */
function migrate_csv_to_sql_install_schema_tables_for_module($module_name) {
  $schema = array();

  // Invoke module that implements the hook, to get CSV data tables.
  drupal_load('module', $module_name);
  $csv_to_sql_tables_info = call_user_func_array($module_name . '_migrate_csv_to_sql_tables', array());

  foreach ($csv_to_sql_tables_info as $table_name => $table_info) {
    $table_schema = $table_info['schema'];

    // If requested add default CSV to SQL fields like ID, file name, etc.
    if ($table_info['wrap_with_default_fields']) {
      $new_fields = migrate_csv_to_sql_default_csv_schema_fields();
      $new_fields = array_merge($new_fields, $table_schema['fields']);
      $table_schema['fields'] = $new_fields;
    }

    $schema[$table_name] = $table_schema;
  }

  return $schema;
}
