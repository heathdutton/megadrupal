<?php

/**
 * @file
 *
 * Test case for Drupal core misc/textarea.js javascript.
 */

if (!class_exists('DrupalSeleniumWebTestCase')) {
  drupal_set_message(t('Selenium tests are not displayed because the selenium module is not enabled.'), 'warning', FALSE);
  return;
}

class TextareaTestCase extends DrupalSeleniumWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Textarea',
      'description' => 'Tests for textarea javascript.',
      'group' => 'Selenium',
      'browsers' => array('firefox', 'chrome'),
    );
  }

  /**
   * Test textarea functionality on article node form.
   */
  function testCreateArticle() {
    // Login user.
    $user = $this->drupalCreateUser(array('administer nodes', 'bypass node access'));
    $this->drupalLogin($user);

    $this->drupalGet('node/add/article');

    $this->verboseScreenshot();

    // Get current height of the textarea.
    $textarea_element = $this->driver->getElement('id=edit-body-und-0-value');
    $height = $textarea_element->getCssValue('height');

    $grip_element = $this->driver->getElement('css=.form-item-body-und-0-value div.grippie');

    // Drag resize element to increase the height.
    $grip_element->moveCursorCenter();
    $this->driver->mouseClickHold();
    $grip_element->moveCursorRelative(0, 100);
    $this->driver->mouseClickRelease();

    $new_height = $textarea_element->getCssValue('height');
    $this->assertTrue($new_height > $height, t('Height of the textarea has been increased.'));

    $this->verboseScreenshot();

    // Drag resize element to decrease the height.
    $grip_element->moveCursorCenter();
    $this->driver->mouseClickHold();
    $grip_element->moveCursorRelative(0, -200);
    $this->driver->mouseClickRelease();

    $new_height = $textarea_element->getCssValue('height');
    $this->assertTrue($new_height < $height, t('Height of the textarea has been decreased.'));

    $this->verboseScreenshot();
  }
}
