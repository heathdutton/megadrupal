<?php

/**
 * @file
 * Defines abstract base test class for the Paybox module tests.
 */

/**
 * Test payment user interface.
 */
class CommercePayboxTestCase extends DrupalWebTestCase {

  /**
   * Implementation of getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => t('Paybox System'),
      'description' => t('Tests the commerce_paybox module.'),
      'group' => t('Commerce Paybox'),
    );
  }

  public function setUp() {
    parent::setUp('commerce_paybox');
  }

  /**
   * Tests the function commerce_paybox_check_sign().
   */
  public function testCheckSign() {
    $group = 'Paybox signature';

    $test_cases = array(
      array(
        'label' => t('Well signed query (w/ clean URLs).'),
        'query' => drupal_http_build_query(array(
          'txnid' => '61',
          'error' => '00004',
          'sig' => 'bfq0uj3553qkYln/6p/NShOpE9LGmrmPQWlWKziDR3k/aULYviqiF6Ez/FugTuH2E1TYpiuVFtf455GlRWIhyaPC6XdGc5KAtBzC8SehWOiZ3Cwf6PPEIhDsDsWvRVajjsx9wTp5XL2C7+LoKtftHUikOZic6jr62cnr1wAieOk=',
        )),
        'assert_func' => 'assertTrue',
      ),
      array(
        'label' => t('Well signed query (w/o clean URLs).'),
        'query' => drupal_http_build_query(array(
          'q' => 'commerce_paybox/auto',
          'txnid' => '61',
          'error' => '00004',
          'sig' => 'bfq0uj3553qkYln/6p/NShOpE9LGmrmPQWlWKziDR3k/aULYviqiF6Ez/FugTuH2E1TYpiuVFtf455GlRWIhyaPC6XdGc5KAtBzC8SehWOiZ3Cwf6PPEIhDsDsWvRVajjsx9wTp5XL2C7+LoKtftHUikOZic6jr62cnr1wAieOk=',
        )),
        'assert_func' => 'assertTrue',
      ),
      array(
        'label' => t('Wrong signed query (w/ clean URLs).'),
        'query' => drupal_http_build_query(array(
          'txnid' => '61',
          'error' => '00004',
          'sig' => 'NOT A VALID SIGNATURE',
        )),
        'assert_func' => 'assertFalse',
      ),
      array(
        'label' => t('Wrong signed query (w/o clean URLs).'),
        'query' => drupal_http_build_query(array(
          'q' => 'commerce_paybox/auto',
          'txnid' => '61',
          'error' => '00004',
          'sig' => 'NOT A VALID SIGNATURE',
        )),
        'assert_func' => 'assertFalse',
      ),
    );

    foreach ($test_cases as $test_case) {
      $this->{$test_case['assert_func']}(commerce_paybox_offsite_check_sign($test_case['query']), $test_case['label'], $group);
    }
  }

}
