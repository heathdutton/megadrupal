<?php

function tribune_nickname_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#form_id'] == '_tribune_post_form') {
    global $user;

    $node = $form['tribune']['#value'];

    $settings = variable_get('tribune_nickname_' . $node->nid,
      array('anonymous' => TRUE, 'anonymous_required' => FALSE, 'authentified' => FALSE));

    if (($settings['anonymous'] and !$user->uid) or ($settings['authentified'] and $user->uid)) {
      $form_state['no_cache'] = TRUE;

      drupal_add_css(drupal_get_path('module', 'tribune_nickname') . '/tribune_nickname.css');
      drupal_add_js(drupal_get_path('module', 'tribune_nickname') . '/tribune_nickname.js', array(
        'weight' => -1, // This has to run before the Tribune javascript
      ));
      $form['palmipede']['nickname'] = array(
        '#type' => 'textfield',
        '#title' => '',
        '#weight' => -1,
        '#size' => 8,
        '#required' => (!$user->uid and $settings['anonymous_required']),
        '#attributes' => array(
          'placeholder' => t('Nickname'),
        ),
      );
      if ((!$user->uid and $settings['anonymous_required'])) {
        $form['palmipede']['nickname']['#attributes']['required'] = 'required';
      }
    }
  }
}

function tribune_nickname_tribune_before_post($node, $message, &$user, $timestamp, &$info) {
  $settings = variable_get('tribune_nickname_' . $node->nid,
    array('anonymous' => TRUE, 'anonymous_required' => FALSE, 'authentified' => FALSE));

  if (($settings['anonymous'] and !$GLOBALS['user']->uid) or ($settings['authentified'] and $GLOBALS['user']->uid)) {
    if (!empty($_REQUEST['nickname'])) {
      $info = $_REQUEST['nickname'];
      $user = user_load(0);
    } elseif (!$GLOBALS['user']->uid and $settings['anonymous_required']) {
      return FALSE;
    } elseif ($node->tribune_type == 'remote' and $user->uid) {
      $result = db_select('tribune_remote_user_auth')
        ->condition('tribune_remote_user_auth.nid', $node->nid)
        ->condition('tribune_remote_user_auth.uid', $user->uid)
        ->fields('tribune_remote_user_auth')
        ->execute()
        ->fetchAssoc();

      if ($result['username']) {
        $info = $result['username'];
      }
    }
  }
}

/**
 * Implements hook_tribune_form().
 */
function tribune_nickname_tribune_form($node, $form_state) {
  return _tribune_nickname_settings_form($node, $form_state);
}

/**
 * Implements hook_tribune_multi_form().
 */
function tribune_nickname_tribune_multi_form($node, $form_state) {
  return _tribune_nickname_settings_form($node, $form_state);
}

function _tribune_nickname_settings_form($node, $form_state) {
  $nickname_settings = array(
    'anonymous' => TRUE,
    'anonymous_required' => FALSE,
    'authentified' => FALSE,
  );
  if (!empty($node->nid)) {
    $nickname_settings = variable_get('tribune_nickname_' . $node->nid, $nickname_settings);
  }

  return array(
    'tribune_nickname_details' => array(
      '#weight' => 10,
      '#type' => 'fieldset',
      '#title' => t('Nicknames'),

      'tribune_nickname_anonymous' => array(
        '#type' => 'checkbox',
        '#title' => t('Enable nicknames for anonymous users'),
        '#default_value' => $nickname_settings['anonymous'],
      ),

      'tribune_nickname_anonymous_required' => array(
        '#type' => 'checkbox',
        '#title' => t('Require nicknames for anonymous users'),
        '#default_value' => $nickname_settings['anonymous_required'],
      ),

      'tribune_nickname_authentified' => array(
        '#type' => 'checkbox',
        '#title' => t('Enable nicknames for authentified users'),
        '#default_value' => $nickname_settings['authentified'],
      ),
    ),
  );
}

/**
 * Implements hook_node_update().
 */
function tribune_nickname_node_update($node) {
  if ($node->type == 'tribune' or $node->type == 'tribune_multi') {
    $nickname_settings = array(
      'anonymous' => $node->tribune_nickname_anonymous,
      'anonymous_required' => $node->tribune_nickname_anonymous_required,
      'authentified' => $node->tribune_nickname_authentified,
    );
    variable_set('tribune_nickname_' . $node->nid, $nickname_settings);
  }
}

/**
 * Implements hook_node_insert().
 */
function tribune_nickname_node_insert($node) {
  if ($node->type == 'tribune' or $node->type == 'tribune_multi') {
    $nickname_settings = array(
      'anonymous' => $node->tribune_nickname_anonymous,
      'anonymous_required' => $node->tribune_nickname_anonymous_required,
      'authentified' => $node->tribune_nickname_authentified,
    );
    variable_set('tribune_nickname_' . $node->nid, $nickname_settings);
  }
}

/**
 * Implements hook_node_delete().
 */
function tribune_nickname_node_delete($node) {
  if ($node->type == 'tribune' or $node->type == 'tribune_multi') {
    variable_del('tribune_nickname_' . $node->nid);
  }
}



