<?php

/**
 * Implements hook_tribune_post().
 */
function tribune_nodejs_tribune_after_post($node, $post) {
  if ($node->tribune_type == 'local') {
    $post_html = theme('tribune_post', array('post' => $post, 'node' => $node));

    $message = (object) array(
      'broadcast' => TRUE,
      'data' => (object) array(
        'post_html' => $post_html,
        'post_id' => $post['post_id'],
        'tribune' => $node->nid,
      ),
      'callback' => 'tribune_new_post',
    );

    nodejs_enqueue_message($message);
  }
}

/**
 * Implements hook_tribune_deleted_post().
 */
function tribune_nodejs_tribune_deleted_post($node, $post_id) {
  // We just need to kick the user here, since he will not be
  // able to authentify back when trying to join again the tribune.
  if ($node->tribune_type == 'local') {
    $message = (object) array(
      'broadcast' => TRUE,
      'data' => (object) array(
        'post_id' => $post_id,
        'tribune' => $node->nid,
      ),
      'callback' => 'tribune_delete_post',
    );

    nodejs_enqueue_message($message);
  }
}

/**
 * Implements hook_tribune_ban().
 * TODO: The nodejs module doesn't seem to provide a way to kick a user from its IP.
 */
function tribune_nodejs_tribune_ban($node, $ban) {
}

/**
 * Implements hook_node_view_alter().
 */
function tribune_nodejs_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'tribune' and $node->tribune_type == 'local') {
    drupal_add_js(drupal_get_path('module', 'tribune_nodejs') . '/tribune_nodejs.js', array('weight' => 10));
  }
}

/**
 * Implements hook_module_implements_alter().
 * Reorders module so that tribune_nodejs is last
 */
function tribune_nodejs_module_implements_alter(&$module_list, $context) {
  if ($context == 'tribune_after_post') {
    $nodejs = $module_list['tribune_nodejs'];
    unset($module_list['tribune_nodejs']);
    $module_list['tribune_nodejs'] = $nodejs;
  }
}

