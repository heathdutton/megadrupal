<?php

/**
 * Implements hook_tribune_form().
 */
function tribune_geoflags_tribune_form($node, $form_state) {
  $default_value = 'FALSE';
  if (!empty($node->nid)) {
    $default_value = variable_get('tribune_geoflags_' . $node->nid, FALSE);
  }

  return array(
    'tribune_geoflags_details' => array(
      '#weight' => 10,
      '#type' => 'fieldset',
      '#title' => t('Geo flags'),

      'tribune_geoflags_enabled' => array(
        '#type' => 'checkbox',
        '#title' => t('Enable geo flags'),
        '#default_value' => $default_value,
      ),
    ),
  );
}

/**
 * Implements hook_node_update().
 */
function tribune_geoflags_node_update($node) {
  if ($node->type == 'tribune' and isset($node->tribune_geoflags_enabled)) {
    variable_set('tribune_geoflags_' . $node->nid, $node->tribune_geoflags_enabled);
  }
}

/**
 * Implements hook_node_insert().
 */
function tribune_geoflags_node_insert($node) {
  if ($node->type == 'tribune' and isset($node->tribune_geoflags_enabled)) {
    variable_set('tribune_geoflags_' . $node->nid, $node->tribune_geoflags_enabled);
  }
}

/**
 * Implements hook_node_delete().
 */
function tribune_geoflags_node_delete($node) {
  if ($node->type == 'tribune') {
    variable_del('tribune_geoflags_' . $node->nid);
  }
}

/**
 * Implements hook_tribune_after_post().
 */
function tribune_geoflags_tribune_after_post($node, &$post) {
  // No need to do anything if we can't store which post this is
  if (variable_get('tribune_geoflags_' . $node->nid, FALSE) and isset($post['post_id'])) {
    if (extension_loaded('geoip')) {
      $country_code = geoip_country_code_by_name($_SERVER['REMOTE_ADDR']) ?: 'XX';
    } else if (module_exists('geoip')) {
      $country_code = geoip_country_code($_SERVER['REMOTE_ADDR']) ?: 'XX';
    } else {
      $country_code = 'XX';
    }
    $post['tribune_geoflags_country_code'] = $country_code;

    db_insert('tribune_posts_geoflags')
      ->fields(array(
        'nid' => $node->nid,
        'post_id' => $post['post_id'],
        'country_code' => $country_code,
      ))
      ->execute();
  }
}

/**
 * Implements hook_tribune_posts_alter().
 */
function tribune_geoflags_tribune_posts_alter($node, &$posts) {
  if (variable_get('tribune_geoflags_' . $node->nid, FALSE) and !empty($posts)) {
    $post_ids = array_keys($posts);

    $countries = db_select('tribune_posts_geoflags')
      ->fields('tribune_posts_geoflags', array('post_id', 'country_code'))
      ->condition('nid', $node->nid, '=')
      ->condition('post_id', $post_ids, 'IN')
      ->execute()
      ->fetchAllKeyed();

    foreach ($countries as $post_id => $country_code) {
      $posts[$post_id]->tribune_geoflags_country_code = $country_code;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function tribune_geoflags_preprocess_tribune_post(&$variables) {
  if (variable_get('tribune_geoflags_' . $variables['post']['tribune']->nid, FALSE)) {
    $countries = country_get_list();

    $country_code = isset($variables['post']['tribune_geoflags_country_code']) ? $variables['post']['tribune_geoflags_country_code'] : 'XX';
    $country = htmlspecialchars(isset($countries[$country_code]) ? $countries[$country_code] : t('Unknown'));

    $image_file = drupal_get_path('module', 'tribune_geoflags') . '/flags/' . strtolower($country_code) . '.png';
    if (!file_exists($image_file)) {
      $image_file = drupal_get_path('module', 'tribune_geoflags') . '/flags/xx.png';
    }
    $img_src = file_create_url($image_file);
    $img = '<img alt="' . $country . '" title="' . $country . '" src="' . $img_src . '" />';
    $variables['post']['prefix'] .= '<span class="tribune-geoflag" data-geoflag="' . $country_code . '">' . $img . '</span>';
  }
}

/**
 * Implements hook_tribune_posts_xml_alter().
 * Adds a "geoloc" tag for each post in the backend
 */
function tribune_geoflags_tribune_posts_xml_alter($node, &$xml_tree) {
  if (isset($xml_tree[0]['value']) and is_array($xml_tree[0]['value'])) foreach ($xml_tree[0]['value'] as &$xml_post) {
    if (isset($xml_post['#post']['tribune_geoflags_country_code'])) {
      $xml_post['value'][] = array(
        'key' => 'ext',
        'value' => array(
          array(
            'key' => 'geoloc',
            'attributes' => array(
              'country' => $xml_post['#post']['tribune_geoflags_country_code'],
            ),
          ),
        ),
      );
    }
  }
}

function tribune_geoflags_form_tribune_local_stats_form_alter(&$form, &$form_state, $form_id) {
  $node = $form['node']['#value'];

  drupal_add_js('http://d3js.org/topojson.v0.js', 'external');
  drupal_add_js('http://d3js.org/d3.geo.projection.v0.min.js', 'external');
  drupal_add_js(drupal_get_path('module', 'tribune_geoflags') . '/cartogram.js', 'file');
  drupal_add_js(drupal_get_path('module', 'tribune_geoflags') . '/tribune-geoflags-stats.js', 'file');
  drupal_add_js(array(
    'tribune_stats' => array(
      'countries' => tribune_geoflags_stats_countries($node),
    ),
  ), 'setting');

  $form['countries'] = array(
    '#type' => 'fieldset',
    '#title' => t('Countries'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    'content' => array(
      '#markup' => '<div id="tribune-stats-countries"></div>',
    )
  );
}

function tribune_geoflags_stats_countries($node) {
  $query = db_select('tribune_posts_geoflags', 't');
  $query->addExpression('COUNT(*)', 'count');
  $query->fields('t', array('country_code'));
  $query->groupBy('t.country_code');
  $query->condition('t.nid', $node->nid);
  $counts = $query->execute()->fetchAllKeyed(0, 1);

  foreach ($counts as &$count) {
    $count = (int)$count;
  }

  return array(
    'counts' => $counts,
    'data' => url(drupal_get_path('module', 'tribune_geoflags') . '/countries.json', array('absolute' => TRUE)),
  );
}

