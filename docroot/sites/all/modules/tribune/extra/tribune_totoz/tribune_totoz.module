<?php

/**
 * Implements hook_tribune_post_alter().
 */
function tribune_totoz_tribune_post_alter($node, &$post) {
  drupal_add_css(drupal_get_path('module', 'tribune_totoz') . '/tribune_totoz.css');

  $server = variable_get('tribune_totoz_server_' . $node->nid, 'NULL');

  if ($server and $server != 'NULL') {
    $post['text'] = preg_replace_callback("/(\[:((\w| |_|-)+)\])/",
      function(&$matches) use($server) {
        $totoz_text = $matches[1];
        $totoz_name = $matches[2];
        $text = $totoz_text . '<img src="'. $server . '/' . $totoz_name . '.gif" alt="' . $totoz_name . '" />';
        return l($text, $server . '/' . $totoz_name . '.gif', array('html' => TRUE, 'attributes' => array('class' => array('tribune-totoz'))));
      },
      $post['text']
    );
  }
}

/**
 * Implements hook_tribune_form().
 */
function tribune_totoz_tribune_form($node, $form_state) {
  $default_value = 'NULL';
  if (!empty($node->nid)) {
    $default_value = variable_get('tribune_totoz_server_' . $node->nid, 'NULL');
  }

  return array(
    'tribune_totoz_details' => array(
      '#weight' => 10,
      '#type' => 'fieldset',
      '#title' => t('Totoz server'),

      'tribune_totoz_server' => array(
        '#type' => 'select',
        '#title' => t('Server'),
        '#description' => t('Where to get the images from.'),
        '#default_value' => $default_value,
        '#options' => array(
          'NULL' => t('Disabled'),
          'https://totoz.eu' => t('Totoz.eu (safe for work only)'),
          'http://nsfw.totoz.eu' => t('Totoz.eu (not safe for work)'),
          'http://forum.hardware.fr/images/perso' => t('Hardware.fr (moderated)'),
        ),
      ),
    ),
  );
}

/**
 * Implements hook_node_update().
 */
function tribune_totoz_node_update($node) {
  if ($node->type == 'tribune' and isset($node->tribune_totoz_server)) {
    variable_set('tribune_totoz_server_' . $node->nid, $node->tribune_totoz_server);
  }
}

/**
 * Implements hook_node_insert().
 */
function tribune_totoz_node_insert($node) {
  if ($node->type == 'tribune' and isset($node->tribune_totoz_server)) {
    variable_set('tribune_totoz_server_' . $node->nid, $node->tribune_totoz_server);
  }
}

/**
 * Implements hook_node_delete().
 */
function tribune_totoz_node_delete($node) {
  if ($node->type == 'tribune') {
    variable_del('tribune_totoz_server_' . $node->nid);
  }
}

/**
 * Adds totoz search form to tribune form
 */
function tribune_totoz_preprocess_tribune(&$variables) {
  $node = $variables['node'];
  if (strpos(variable_get('tribune_totoz_server_' . $node->nid, 'NULL'), 'totoz.eu') !== NULL) {
    // Let's add our own upload and post form here.
    $form = drupal_get_form('_tribune_totoz_search_form', $node);
    $variables['form'] .= drupal_render($form);
  }
}

/**
 * Totoz search form
 */
function _tribune_totoz_search_form($form, $form_state, $node) {
  drupal_add_js(drupal_get_path('module', 'tribune_totoz') . '/tribune_totoz.js');
  $form['totoz_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Totoz search'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#submit' => '_tribune_totoz_search_form_submit',
    '#prefix' => '<div id="tribune-totoz-search-ajax-wrapper">',
    '#suffix' => '</div>',
    '#attributes' => array(
      'class' => array('container-inline'),
    ),
    'tribune-totoz-search' => array(
      '#title' => t('Totoz'),
      '#title_display' => 'invisible',
      '#type' => 'textfield',
      '#size' => 45,
      '#autocomplete_path' => 'node/' . $node->nid . '/tribune-totoz-autocomplete',
      '#attributes' => array(
        'placeholder' => t('Enter your search terms here'),
      ),
    ),
  );

  return $form;
}

function tribune_totoz_menu() {
  return array(
    'node/%tribune_menu/tribune-totoz-autocomplete' => array(
      'type' => MENU_CALLBACK,
      'page callback' => 'tribune_totoz_search_autocomplete',
      'page arguments' => array(1, 3),
      'access callback' => 'tribune_access',
      'access arguments' => array('read tribune', 1),
    ),
  );
}

function tribune_totoz_search_autocomplete($node, $string = '') {
  $matches = array();

  $server = variable_get('tribune_totoz_server_' . $node->nid, 'NULL');
  if (strpos($server, 'totoz.eu') !== NULL) {
    $search_url = $server . '/search.json?terms=' . urlencode($string);
    $result = drupal_http_request($search_url);
    if (!isset($result->error) and $data = drupal_json_decode($result->data) and count($data['totozes'])) {
      foreach ($data['totozes'] as $i => $totoz) {
        $matches[$totoz['name']] = '<span class="totoz-autocomplete-result ' . ($i%2 ? 'even' : 'odd') . '" data-totoz="' . $totoz['name'] . '"><span class="totoz-autocomplete-name">' . $totoz['name'] .'</span><img class="totoz-autocomplete-image" src="' . $totoz['url'] . '" title="' . $totoz['name'] . '" /></span>';
      }
    }
  }

  drupal_json_output($matches);
}

