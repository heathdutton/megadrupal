<?php

/**
 * @file
 * Install, update and uninstall functions for the galerie_remote module.
 */

/**
 * Implements hook_schema().
 */
function tribune_remote_schema() {
  return array(
    'tribune_remote' => array(
      'description' => 'The table for remote tribunes.',
      'fields' => array(
        'nid' => array(
          'description' => 'The nid of the tribune node.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'post_url' => array(
          'description' => 'The URL to which new posts are sent. Empty if tribune is read-only.',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'post_template' => array(
          'description' => 'Template for POST data.',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'xml_url' => array(
          'description' => 'The URL from which to access this tribune posts.',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'anonymous_allowed' => array(
          'description' => 'Whether this tribune allows posts by anonymous users or not',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'max_length' => array(
          'description' => 'Maximum length of posts.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'backend_type' => array(
          'description' => 'How the backend is encoded.',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'reload_rate' => array(
          'description' => 'Seconds between page reloading.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('nid'),
      'foreign keys' => array('tribunes' => 'nid'),
    ),
    'tribune_remote_cache' => array(
      'description' => 'The table for temporarily storing remote tribune posts',
      'fields' => array(
        'xml_url' => array(
          'description' => 'The URL from which results are cached.',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'backend' => array(
          'description' => 'Verbatim XML backend',
          'type' => 'blob',
          'not null' => TRUE,
        ),
        'posts' => array(
          'description' => 'Serialized array of cached posts',
          'type' => 'blob',
          'not null' => TRUE,
        ),
        'time' => array(
          'description' => 'Unix timestamp when this cache entry was set.',
          'type' => 'int',
          'length' => 10,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'indexes' => array(
        'xml_url' => array(
          'xml_url' => array('xml_url', 16)
        )
      ),
    ),
    'tribune_remote_user_auth' => array(
      'description' => 'The table for storing remote tribune auth information.',
      'fields' => array(
        'nid' => array(
          'description' => 'The nid of the tribune node.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'uid' => array(
          'description' => 'The uid of the user.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'cookie' => array(
          'description' => 'Value of the cookie to be sent to the remote server.',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'username' => array(
          'description' => 'Username to be used for remote server login',
          'type' => 'text',
          'not null' => TRUE,
        ),
        'password' => array(
          'description' => 'Password to be used for remote server login',
          'type' => 'text',
          'not null' => TRUE,
        ),
      ),
      'primary key' => array('nid', 'uid'),
      'foreign keys' => array('tribunes' => 'nid', 'user' => 'uid'),
    ),
  );
}

