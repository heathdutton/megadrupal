<?php

/* API functions */
require_once 'includes/reasons_bounce.api.inc';

//Variables name
define('BOUNCE_FORM_CONTAIN_NIDS', 'reasons_bounce_form_contain_nids');
define('BOUNCE_FORM_PHP_FILTER', 2);

/**
 * Imlements hook_menu().
 */
function reasons_bounce_menu() {
  $items = array();
  
  $items['node/%reasons_bounce_webform_menu/reasons_bounce'] = array(
    'title' => 'Bounce settings',
    'load arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reasons_bounce_admin_settings_form', 1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'file' => 'includes/reasons_bounce.form.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['reasons_bounce/%ctools_js/%reasons_bounce_webform_menu'] = array(
    'title callback' => 'node_page_title',
    'title arguments' => array(2),
    'page callback' => 'reasons_bounce_webform_popup_content',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
    'file' => 'includes/reasons_bounce.page.inc',
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Menu loader callback. 
 */
function reasons_bounce_webform_menu_load($nid) {
  if (reasons_bounce_check_bounce_form($nid)) {
    $node = node_load($nid);
    return $node;
  }
  return FALSE;
}

/**
 * Implements hook_admin_paths(). 
 */
function reasons_bounce_admin_paths() {
  if (variable_get('node_admin_theme')) {
    return array(
      'node/*/reasons_bounce' => TRUE,
    );
  }  
}

/**
 * Implements hook_node_delete().
 */
function reasons_bounce_node_delete($node) {
  $is_template = reasons_bounce_check_bounce_form($node->nid);
  if ($is_template) {
    reasons_bounce_delete_bounce_form($node->nid);
  }
}

/**
 * Implements hook_form_alter().
 */
function reasons_bounce_form_alter(&$form, &$form_state, $form_id) {
  // Altering node form
  if (isset($form_state['node'])) {
    $node = $form_state['node'];
    $type_node_form = $node->type . '_node_form';
    // if it is node form
    if ($type_node_form == $form_id) {
      $webform_enabled_types = webform_variable_get('webform_node_types');
      if (in_array($node->type, $webform_enabled_types)) {
        form_load_include($form_state, 'inc', 'reasons_bounce', 'includes/reasons_bounce.form');
        $form['bounce'] = array(
          '#type' => 'fieldset',
          '#title' => t('Bounce reasons'),
          '#collapsible' => TRUE,
          '#collapsed' => TRUE,
          '#group' => 'additional_settings',
          '#tree' => TRUE,
          '#attributes' => array(
            'class' => array('node-form-responce-bounce'),
          ),
          '#attached' => array(
            'js' => array(drupal_get_path('module', 'reasons_bounce') . '/includes/js/reasons_bounce.admin.js'),
          ),
        );
        $form['bounce']['responce_bounce_enabled'] = array(
          '#type' => 'checkbox',
          '#title' => t('Use as form for bounce'),
        );
        if (isset($node->nid)) {
          $form['bounce']['responce_bounce_enabled']['#default_value'] =
            reasons_bounce_check_bounce_form($node->nid);
        }
        $form['actions']['submit']['#submit'][] = 'reasons_bounce_node_form_submit';
      }
    }
  }
  
  $nid = str_replace('webform_client_form_', '', $form_id);
  $templates = reasons_bounce_get_templates();
  if (!empty($templates) && isset($templates[$nid])) {
    form_load_include($form_state, 'inc', 'reasons_bounce', 'includes/reasons_bounce.form');
    $form['#submit'][] = 'reasons_bounce_webform_submit';
  }
}

/**
 * Implements hook_preprocess_HOOK(). (HOOK = page)
 */
function reasons_bounce_preprocess_page($vars) {
  $node = isset($vars['node']) ? $vars['node'] : NULL;
  reasons_bounce_enable_tracking($node);
}