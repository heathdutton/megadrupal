<?php

/**
 * @file
 * bitly node module file.
 */

/**
 * Implements hook_node_insert().
 */
function bitly_node_node_insert($node) {
  bitly_node_bitlink_insert($node->nid);
}

/**
 * Implements hook_node_update().
 */
function bitly_node_node_update($node) {
  bitly_node_bitlink_delete($node->nid);
  bitly_node_bitlink_insert($node->nid);
}

/**
 * Implements hook_node_delete().
 */
function bitly_node_node_delete($node) {
  bitly_node_bitlink_delete($node->nid);
}

/**
 * Creates bitlink for the given nid.
 *
 * @param int $nid
 *   Node ID.
 *
 * @return string
 *   bitlink of the node.
 */
function bitly_node_bitlink_insert($nid) {
  _bitly_inc();
  $url = url("node/$nid", array('absolute' => TRUE, 'alias' => TRUE));
  $response = bitly_v3_shorten($url, variable_get('bitly_custom_url', 'bit.ly'));
  db_insert('bitly_node')
    ->fields(array(
      'nid' => $nid,
      'bitlink' => $response['url'],
    ))
    ->execute();
  return db_query("SELECT bitlink FROM {bitly_node} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
}

/**
 * Removes bitlink for the given nid.
 *
 * @param int $nid
 *   Node ID.
 */
function bitly_node_bitlink_delete($nid) {
  db_delete('bitly_node')
    ->condition('nid', $nid)
    ->execute();
}

/**
 * Implements hook_node_view().
 */
function bitly_node_node_view($node, $view_mode, $langcode) {
  $node->bitlink = bitly_node_get_bitlink($node->nid);
}
/**
 * Gets bitlink for the given nid.
 *
 * @param int $nid
 *   Node ID.
 *
 * @return string
 *   bitlink of the node.
 */
function bitly_node_get_bitlink($nid) {
  $bitlink = '';
  if (!$bitlink = db_query("SELECT bitlink FROM {bitly_node} WHERE nid = :nid", array(':nid' => $nid))->fetchField()) {
    $bitlink = bitly_node_bitlink_insert($nid);
  }
  return $bitlink;
}
