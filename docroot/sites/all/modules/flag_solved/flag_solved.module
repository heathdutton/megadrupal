<?php

function _flag_solved_create_flag_action() {
  $flag_node = flag_get_flag('solved_node');
  $flag_comment = flag_get_flag('solved_comment');
  if ($flag_node && $flag_comment) {
    $flag_actions = flag_actions_get_actions('solved_comment');
    if (empty ($flag_actions)) {
      $aids = array();
      $aids[] = flag_actions_insert_action($flag_comment->fid, 'flag', 1, 0, 'flag_solved_node_solved_action', array());
      $aids[] = flag_actions_insert_action($flag_comment->fid, 'unflag', 1, 0, 'flag_solved_node_unsolved_action', array());
      variable_set('flag_solved_flag_actions', $aids);
    }
  }
}

function _flag_solved_advforum_enable()
{
  static $enable;

  if (!isset ($enable))
  {
    $enable = false;
    if (module_exists('advanced_forum')) {
      $node_type = variable_get('advanced_forum_styled_node_types', array('forum'));
      if (array_key_exists('forum', $node_type)) {
        $enable = true;
      }
    }
  }
  return $enable;
}

function _flag_solved_add_solved_class(&$variables)
{
  if (isset($variables['classes'])) {
    $variables['classes'] .= ' solved';
  }
  else {
    $variables['classes'] = 'solved';
  }
}

/**
 * Implementation of hook_init().
 */
function flag_solved_init() {
  _flag_solved_create_flag_action();

  $path = drupal_get_path('module', 'flag_solved');
  drupal_add_css($path . '/theme/flag_solved.css', 'module', 'all', FALSE);
  if (_flag_solved_advforum_enable()) {
    drupal_add_js($path . '/theme/flag_solved.js', 'module', 'header', TRUE);
  }
}

/**
 * Implementation of hook_flag_default_flags().
 */
function flag_solved_flag_default_flags() {
  $link_type = _flag_solved_advforum_enable() ? 'toggle' : 'normal';
  return array(
    'solved_node' => array(
      'content_type' => 'node',
      'title' => 'Node solved',
      'roles' => array(
        'flag' => array('2'),
        'unflag' => array('2'),
      ),
      'global' => TRUE,
      'flag_short' => 'Flag as solved',
      'flag_long' => 'Flag this node as solved.',
      'flag_confirmation' => '',
      'unflag_short' => 'Flag as non-solved',
      'unflag_long' => 'Flag this node as non-solved.',
      'unflag_confirmation' => '',
      'types' => array('forum'),
      'status' => FALSE,
      'show_on_teaser' => FALSE,
      'show_on_page' => FALSE,
      'show_on_form' => FALSE,
      'link_type' => $link_type,
      'locked' => array('name', 'global'),
      'module' => 'flag_solved',
      'api_version' => 2,
    ),
    'solved_comment' => array(
      'content_type' => 'comment',
      'title' => 'Comment solved',
      'roles' => array(
        'flag' => array('2'),
        'unflag' => array('2'),
      ),
      'global' => TRUE,
      'flag_short' => 'Accept this response',
      'flag_long' => 'Accept this response.',
      'flag_confirmation' => '',
      'unflag_short' => 'Don\'t accept this response',
      'unflag_long' => 'Don\'t accept this response.',
      'unflag_confirmation' => '',
      'types' => array('forum'),
      'status' => FALSE,
      'link_type' => $link_type,
      'locked' => array('name', 'global'),
      'module' => 'flag_solved',
      'api_version' => 2,
    ),
  );
}

/**
 * Implementation of hook_action_info().
 */
function flag_solved_action_info() {
  return array(
    'flag_solved_node_solved_action' => array(
      'label' => t('Solved'),
      'description' => t('Solved'),
      'type' => 'comment',
      'configurable' => FALSE,
      'hooks' => array('any' => TRUE)
    ),
    'flag_solved_node_unsolved_action' => array(
      'label' => t('Unsolved'),
      'description' => t('Unsolved'),
      'type' => 'comment',
      'configurable' => FALSE,
      'hooks' => array('any' => TRUE)
    )
  );
}

/**
 * Implementation of a Drupal action.
 * Solved action
 */
function flag_solved_node_solved_action(&$object, $context = array()) {
  $flag = flag_get_flag('solved_node');
  $flag->flag('flag', $object->nid);
}

/**
 * Implementation of a Drupal action.
 * Unsolved action
 */
function flag_solved_node_unsolved_action(&$object, $context = array()) {
  $flag = flag_get_flag('solved_node');
  $flag->flag('unflag', $object->nid);
}

function flag_solved_preprocess_flag(&$variables) {
  $flag = $variables['flag'];

  if ($flag->name == 'solved_comment') {
    global $user;

    /* Only the author of the topic and administrator nodes can use this flag */
    $comment = $flag->fetch_content($variables['content_id']);
    $node = node_load($comment->nid);
    if ($node->uid != $user->uid && !user_access('administer nodes')) {
      $variables = array();
    }
    else {
      /* Only one comment marked as solved per node, http://drupal.org/node/930606 */
      $flag_node = flag_get_flag('solved_node');
      if($flag_node && $flag_node->is_flagged($node->nid)
          && !$flag->is_flagged($comment->cid)) {
        $variables = array();
      }
    }
  }
}

function flag_solved_preprocess_node(&$variables) {
  $flag = flag_get_flag('solved_node');
  if ($flag && $flag->is_flagged($variables['node']->nid)) {
    if (_flag_solved_advforum_enable()) {
        _flag_solved_add_solved_class($variables);
    }
    else {
      $variables['submitted'] = '<span class="forum-topic-title solved"></span>' . $variables['submitted'];
    }
  }
}

function flag_solved_preprocess_comment(&$variables) {
  if (_flag_solved_advforum_enable()) {
    /* @see http://drupal.org/node/755940 */
    $variables['css_id'] = 'reply-' . $variables['comment']->cid;
  }

  $flag = flag_get_flag('solved_comment');
  if ($flag && $flag->is_flagged($variables['comment']->cid)) {
    if (_flag_solved_advforum_enable()) {
        _flag_solved_add_solved_class($variables);
    }
    else {
      $variables['classes_array'][] = ' solved';
    }
  }
}

function flag_solved_preprocess_forum_topic_list(&$variables) {
  foreach($variables['topics'] as $topic) {
    if(_flag_solved_topic_is_solved($topic->nid)) {
      $topic->zebra .= ' solved';
    }
  }
}

function flag_solved_preprocess_advanced_forum_topic_list_view(&$variables) {
  foreach($variables['view']->result as $num => $topic) {
    if(_flag_solved_topic_is_solved($topic->nid)) {
      $variables['row_classes'][$num][] = 'solved';
    }
  }
}

function _flag_solved_topic_is_solved($topic_id) {
  $solved = false;

  $topic = node_load($topic_id);
  if($topic->comment_count > 0) {
    $cids = comment_get_thread($topic, COMMENT_MODE_FLAT, $topic->comment_count);
    $flag = flag_get_flag('solved_comment');
    if ($flag) {
      foreach($cids as $cid) {
        if($flag->is_flagged($cid)) {
          $solved = true;
          break;
        }
      }
    }
  }
  return $solved;
}
