<?php
/**
 * @file pchart.module
 * Primarily Drupal hooks and global API functions for pChart integration.
 * http://www.pchart.net/
 */

/**
 * Get the location of the pChart library.
 *
 * @param $type
 *   The path type to get, default to 'class'.
 *   Other valid types are 'fonts', 'data', 'palettes'.
 *
 * @return
 *   The location of the library, or FALSE if the library isn't installed.
 */
function pchart_get_path($type='class') {
  $pchart_path = FALSE;
  $valid_types = array('class', 'fonts', 'data', 'palettes');
  if (!in_array($type, $valid_types)) {
    $type = '';
  }

  if (module_exists('libraries')) {
    // Support Libraries API - http://drupal.org/project/libraries
    $pchart_path = libraries_get_path('pchart');
  }
  else {
    $pchart_path = './' . drupal_get_path('module', 'pchart') . '/pchart';
  }

  if ($pchart_path && !empty($type)) {
    $pchart_path = $pchart_path . '/' . $type . '/';
  }

  return $pchart_path;
}

/**
 * Load needed files.
 *
 * @param $additional
 *   Additional class name or an array of classes to load.
 *   e.g. pchart_add('pScatter') or pchart_add(array('pRadar', 'pScatter', 'pSplit'))
 *
 * @see http://wiki.pchart.net/doc.introduction.html
 */
function pchart_add($additional=NULL) {
  $pchart_path = pchart_get_path();

  // Include pChart if it exists.
  if ($pchart_path && file_exists($pchart_path . 'pData.class.php') && file_exists($pchart_path . 'pDraw.class.php') && file_exists($pchart_path . 'pImage.class.php')) {
    include_once $pchart_path . 'pData.class.php';
    include_once $pchart_path . 'pDraw.class.php';
    include_once $pchart_path . 'pImage.class.php';

    if (!is_null($additional)) {
      if (!is_array($additional)) {
        $additional = array($additional);
      }

      foreach ($additional as $class) {
        if (file_exists($pchart_path . $class . '.class.php')) {
          include_once $pchart_path . $class . '.class.php';
        }
      }
    }
  }
}

/**
 * Get font properties for pChart setFontProperties().
 *
 * @param $font
 *   The font name with extension, default to 'GeosansLight.ttf'
 * @param $size
 *   The font size, default to 12
 * @param $format
 *   Additional properties to pass to setFontProperties()
 *
 * @return
 *   The array of font properties.
 */
function pchart_get_font_properties($font='GeosansLight.ttf', $size=12, $format=NULL) {
  $font_properties = array();
  // imagettftext requires leading '/'
  $pchart_path = pchart_get_path('fonts');

  if ($pchart_path && file_exists($pchart_path . $font)) {
    $font_properties = array(
      'FontName' => $pchart_path . $font,
      'FontSize' => $size,
    );
  }
  else {
    // fail safe in case font not found
    $font_properties = array(
      'FontName' => $pchart_path . 'GeosansLight.ttf',
      'FontSize' => $size,
    );
  }

  if (isset($format) && is_array($format)) {
    $font_properties = array_merge($font_properties, $format);
  }

  return $font_properties;
}

