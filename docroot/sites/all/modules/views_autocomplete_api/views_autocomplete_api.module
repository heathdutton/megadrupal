<?php

/**
 *  Implements hook_menu().
 */
function views_autocomplete_api_menu() {
  $items = array();
  $items['views_autocomplete_api'] = array(
    'page callback'    => 'views_autocomplete_api_autocomplete',
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
    'file'             => 'views_autocomplete_api.inc',
  );
  return $items;
}

/**
 * Implements hook_element_info_alter().
 */
function views_autocomplete_api_element_info_alter(&$type) {
  // Add a prerender function for textfield to add js when needed.
  $type['textfield']['#pre_render'][] = 'views_autocomplete_api_autocomplete_pre_render';
}

function views_autocomplete_api_autocomplete_pre_render($element) {
  // If textfield has a views autocomplete api, add needed javascripts files & settings.
	if (!empty($element['#autocomplete_path'])) {
    $path = $element['#autocomplete_path'];
    $arg = explode('/', $path);
    $prefix = array_shift($arg);
    if ($prefix == 'views_autocomplete_api') { // @todo : use ['#attached']['js'] if ok to attach js to the form element (see form API).
      drupal_add_library('views_autocomplete_api', 'views_autocomplete_api');
      drupal_add_js(array('views_autocomplete_api' => array('views' => $arg)), 'setting');
    }
  }

  return $element;
}

/**
 * Implement hook_library().
 * @return array
 */
function views_autocomplete_api_library() {
  // Define library to add little js allowing to alter drupal autocomplete system.
  $libraries['views_autocomplete_api'] = array(
    'title'   => 'Autocomplete library',
    'version' => '1.1',
    'js'      => array(
      drupal_get_path('module', 'views_autocomplete_api') . '/js/in_array.js'     => array('weight' => 100),
      drupal_get_path('module', 'views_autocomplete_api') . '/js/empty.js'        => array('weight' => 100),
      drupal_get_path('module', 'views_autocomplete_api') . '/js/autocomplete.js' => array('weight' => 100, 'scope' => 'footer', 'preprocess' => FALSE),
    ),
  );
  return $libraries;
}

/**
 *  Implements hook_form_ID_alter(). @TODO : create an exemple module.
 *
function views_autocomplete_api_form_search_block_form_alter(&$form, &$form_state, $form_id) {
  $form['search_block_form']['#autocomplete_path'] = 'views_autocomplete_api/search_autocomplete';	
}
*/
