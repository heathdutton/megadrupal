<?php

/**
 * @file
 * Main file for the Yourse Search module.
 */

/**
 * Implements hook_init().
 */
function yourse_search_init() {
  // Add css.
  drupal_add_css(drupal_get_path('module', 'yourse_search') . '/css/yourse_search.css');
}

/**
 * Implements hook_block_info().
 */
function yourse_search_block_info() {
  $blocks['yourse_search_block'] = array(
    'info' => t('Yourse search'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function yourse_search_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'yourse_search_block':
      $block['subject'] = t('Yourse search');
      $block['content'] = drupal_get_form('yourse_search_form');
      break;

  }
  return $block;
}

/**
 * Implements hook_menu().
 */
function yourse_search_menu() {

  // Admin settings.
  $items['admin/config/search/yourse-search'] = array(
    'title'            => st('Yourse search settings'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('yourse_search_admin'),
    'access arguments' => array('administer site configuration'),
    'type'             => MENU_NORMAL_ITEM,
  );

  // Yourse search.
  $items['yourse-search'] = array(
    'title'            => st('Yourse search'),
    'page callback'    => 'yourse_search_page',
    'access callback' => TRUE,
    'type'             => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Settings form.
 *
 * @param $form
 *   Form.
 * @param $form_state
 *   Form state.
 *
 * @return array
 *   Settings form.
 */
function yourse_search_admin($form, &$form_state) {

  // Unique id.
  $form['yourse_search_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Yourse search unique ID'),
    '#default_value' => variable_get('yourse_search_id', ''),
    '#description' => t('Unique ID for this site. Get your id here :here', array(':here' => 'http://www.yourse.gr/yourse-api-keys/')),
    '#required' => TRUE,
  );

  // Open links in new tab or not.
  $form['yourse_search_new_tab'] = array(
    '#type' => 'checkbox',
    '#title' => t('Open links in new tab'),
    '#default_value' => variable_get('yourse_search_new_tab', TRUE),
    '#description' => t('Open links in new tab (target = _blank).'),
  );

  // Results per page.
  $form['yourse_search_rsp'] = array(
    '#type' => 'textfield',
    '#title' => t('Results per page'),
    '#default_value' => variable_get('yourse_search_rsp', 10),
    '#description' => t('Number of search results to show per page.'),
    '#element_validate' => array('element_validate_integer_positive'),
  );

  // Results per page.
  $form['yourse_search_action'] = array(
    '#type' => 'select',
    '#title' => t('Sort by'),
    '#options' => array(
      'LatestJobsSimple' => t('Latest'),
      'JobSearchSimple' => t('Similar'),
    ),
    '#default_value' => variable_get('yourse_search_action', 'LatestJobsSimple'),
    '#description' => t('Sort results by date or similarity.'),
  );

  return system_settings_form($form);
}

/**
 * Main page.
 *
 * @return array
 *   Search form.
 */
function yourse_search_page() {

  // Yourse form.
  $yourse_form = drupal_get_form('yourse_search_form');

  // Results.
  $results = _yourse_search_get_search_results();

  $yourse_form['results'] = array(
    '#type' => 'markup',
    '#markup' => theme('yourse_search_results', array('results' => $results['data'])),
  );

  // Initialize the pager.
  $current_page = pager_default_initialize($results['attributes']['total'], $results['attributes']['rsp']);

  // Pagination.
  $yourse_form['pagination'] = array(
    '#type' => 'markup',
    '#markup' => theme('pager', array('quantity', $results['attributes']['total'])),
  );

  return $yourse_form;
}

/**
 * Main search form.
 *
 * @param $form
 *   Form.
 * @param $form_state
 *   Form state.
 *
 * @return array
 *   Search form.
 */
function yourse_search_form($form, &$form_state) {

  $form = array();

  $form['search'] = array(
    '#type' => 'fieldset',
    '#title' => t('Search'),
    '#attributes' => array('class' => array('yourse-search-form')),
  );

  $form['search']['what'] = array(
    '#type' => 'textfield',
    '#title' => t('What'),
    '#default_value' => filter_input(INPUT_GET, 'what', FILTER_SANITIZE_ENCODED) ?
      urldecode(filter_input(INPUT_GET, 'what', FILTER_SANITIZE_ENCODED)) : '',
    '#description' => t('E.g. programmer'),
  );

  $form['search']['where'] = array(
    '#type' => 'textfield',
    '#title' => t('Where'),
    '#default_value' => filter_input(INPUT_GET, 'where', FILTER_SANITIZE_ENCODED) ?
      urldecode(filter_input(INPUT_GET, 'where', FILTER_SANITIZE_ENCODED)) : '',
    '#description' => t('E.g. Athens'),
  );

  $form['search']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
    '#weight' => 5,
    '#submit' => array('yourse_search_form_submit'),
  );

  return $form;
}

/**
 * Submit for yourse_search_form.
 *
 * @param $form
 *   Form.
 * @param $form_state
 *   Form state.
 */
function yourse_search_form_submit($form, &$form_state) {

  $params = array();
  $params['what'] = $form_state['values']['what'];
  $params['where'] = $form_state['values']['where'];

  if (count($params) > 0) {
    drupal_goto('yourse-search', array('query' => array($params)));
  }
}

/**
 * Get search results.
 *
 * @return object
 *   Search results.
 */
function _yourse_search_get_search_results() {

  // Get parematers.
  $yourse_id = variable_get('yourse_search_id', '');
  $what = filter_input(INPUT_GET, 'what', FILTER_SANITIZE_ENCODED) ?
    urldecode(filter_input(INPUT_GET, 'what', FILTER_SANITIZE_ENCODED)) : '';
  $where = filter_input(INPUT_GET, 'where', FILTER_SANITIZE_ENCODED) ?
    urldecode(filter_input(INPUT_GET, 'where', FILTER_SANITIZE_ENCODED)) : '';
  $page = filter_input(INPUT_GET, 'page', FILTER_SANITIZE_ENCODED) ?
    urldecode(filter_input(INPUT_GET, 'page', FILTER_SANITIZE_ENCODED)) : 0;
  $rsp = variable_get('yourse_search_rsp', '') == 0 ? 10 : variable_get('yourse_search_rsp', '');

  // If text and location are both null. Add a space to get some results.
  if ($what == '' && $where == '') {
    $what = ' ';
    $where = ' ';
  }

  if ($yourse_id != '') {
    $url = 'http://www.yourse.gr/rest-api/';
    $data = array(
      'action' => variable_get('yourse_search_action', 'LatestJobsSimple'),
      'api_key' => $yourse_id,
      'text' => $what,
      'loc' => $where,
      'page' => $page,
      'rsp' => $rsp,
    );

    $full_url = url($url, array('query' => $data));
    $result = drupal_http_request($full_url);

    // On successful response.
    if ($result->code == '200') {
      $results = array();

      // Get XML.
      $xml = simplexml_load_string($result->data);

      // Get total.
      $attributes = $xml->results->attributes();
      $total = (int) $attributes['total'];

      // Get results.
      foreach ($xml->results->result as $result) {
        $results['data'][] = array(
          'traffic_tracker' => (string) $result->traffic_tracker,
          'link' => (string) $result->link,
          'title' => (string) $result->title,
          'desc' => (string) $result->desc,
          'company' => (string) $result->company,
          'location' => (string) $result->location,
          'date_found' => (string) $result->date_found,
        );
      }

      // Other attributes. Mainly used for pagination.
      $results['attributes'] = array(
        'total' => $total,
        'rsp' => $rsp,
        'page' => $page,
      );

      // Set title.
      $title_parameters = array();
      if ($what != ' ' && $what != '') {
        $title_parameters[] = $what;
      }
      if ($where != ' ' && $where != '') {
        $title_parameters[] = $where;
      }
      if (count($title_parameters) > 0) {
        $title_parameters = implode(', ', $title_parameters);
        drupal_set_title(t('Yourse search') . ' ' . $title_parameters);
      }

      return $results;
    }
    else if ($result->code == '401') {
      // On unauthorized access.
      drupal_set_message(t('Unauthorized access. Check your key.'));
    }
    else {
      // On connection error.
      drupal_set_message(t('Connection error.'));
    }
  }
  else {
    drupal_set_message(t('Wrong key.'));
  }

  return '';
}

/**
 * Implements hook_theme().
 */
function yourse_search_theme() {
  return array(
    'yourse_search_results' => array(
      'variables' => array('results' => NULL),
    ),
  );
}

/**
 * Theme search results.
 *
 * @param $variables
 *   Theme variables.
 *
 * @return string
 *   Themed search results.
 */
function theme_yourse_search_results($variables) {
  $results = $variables['results'];
  $return_value = '';

  // Get target.
  $target = variable_get('yourse_search_new_tab', TRUE) ? '_blank' : '_self';

  foreach ($results as $r) {
    // Title.
    $item = '<h3 class="title">' . l($r['title'], $r['traffic_tracker'], array('attributes' => array('target' => $target))) . '</h3>';

    // Location.
    $item .= '<span class="location">' . $r['location'] . '</span>';

    // Description.
    $item .= '<span class="description">' . $r['desc'] . '</span>';

    // Link.
    $link_start = mb_strpos($r['link'], '//');
    $link_start = $link_start === FALSE ? 0 : $link_start + 2;
    $link_start = mb_substr($r['link'], $link_start, mb_strpos($r['link'], '/', 8) - $link_start);
    $item .= '<span class="link">' . $link_start . '</span>';

    $item = '<li class="item">' . $item . '</li>';
    $return_value .= $item;

  }

  $return_value = '<ul class="yourse-results">' . $return_value . '</ul>';

  return $return_value;
}
