<?php

/**
 * Schema for Dynamic fieldable content.
 */
function dynamic_fieldable_content_schema() {
  return dynamic_fieldable_content_schema_1();
}

function dynamic_fieldable_content_schema_1() {
  $schema = array();

  $schema['dynamic_fieldable_content'] = array(
    'description' => 'Contains exportable customized content for this site.',
    'export' => array(
      'identifier' => 'content',
      'bulk export' => TRUE,
      'primary key' => 'cid',
      'api' => array(
        'owner' => 'dynamic_fieldable_content',
        'api' => 'dynamic_content',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
      'create callback' => 'dynamic_content_type_new',
    ),
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this content. Used to identify it programmatically.',
      ),
      'admin_title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative title for this content.',
      ),
      'admin_description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative description for this content.',
        'object default' => '',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative category for this content.',
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the actual content to be used',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('cid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function dynamic_fieldable_content_install() {
  module_load_include('inc', 'ctools', 'includes/export');
  $import_code = file_get_contents(drupal_get_path('module', 'dynamic_fieldable_content')."/css_blinky_image.txt");
  $item = ctools_export_crud_import('dynamic_fieldable_content', $import_code);
  ctools_export_crud_save('dynamic_fieldable_content', $item);
}

/**
 * Implements hook_enable().
 */
function dynamic_fieldable_content_enable() {
  $format_exists = (bool) db_query_range('SELECT 1 FROM {filter_format} WHERE name = :name', 0, 1, array(':name' => 'Addon code'))->fetchField();
  // Add a Addon code text format, if it does not exist. Do this only for the
  // first install (or if the format has been manually deleted) as there is no
  // reliable method to identify the format in an uninstall hook or in
  // subsequent clean installs.
  if (!$format_exists) {
    $addon_format = array(
        'format' => 'addon_code',
        'name' => 'Addon code',

        // 'Plain text' format is installed with a weight of 10 by default. Use a
        // higher weight here to ensure that this format will not be the default
        // format for anyone.
        'weight' => 15,
        'filters' => array(
        ),
    );
    $addon_format = (object) $addon_format;
    filter_format_save($addon_format);

    drupal_set_message(t('A <a href="@addon-code">Addon code</a> text format has been created.', array('@addon-code' => url('admin/config/content/formats/' . $addon_format->format))));
  }
}
