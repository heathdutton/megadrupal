<?php
/**
 * @file
 * Create a information page about all blocks used in contexts.
 */

/*******************************************************************************
 * Drupal Hooks
 ******************************************************************************/

/**
 * Implements hook_menu().
 */
function context_block_info_menu() {
  $items = array();
  $items['admin/structure/context/blocks'] = array(
    'title' => 'Blocks information',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'context_block_info_page',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 *
 * Fixes issue when saving context and looking on context_block_info page
 * and no changes can be seen.
 */
function context_block_info_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'ctools_export_ui_edit_item_form':
      if ($form['#theme'] == 'context_ui_form') {

        $form['#submit'][] = 'context_invalidate_cache';
      }
      break;

    default:
      break;
  }
}

/**
 * Implements hook_theme().
 */
function context_block_info_theme() {
  return array(
    'context_block_info_row' => array(
      'file' => 'includes/context_block_info.theme.inc',
      'variables' => array('context' => NULL, 'blocks' => NULL),
    ),
    'context_block_info_blocks' => array(
      'file' => 'includes/context_block_info.theme.inc',
      'variables' => array(
        'regions' => NULL,
        'context_list' => NULL,
        'context' => NULL,
      ),
    ),
    'context_block_info_related_contexts' => array(
      'file' => 'includes/context_block_info.theme.inc',
      'variables' => array('related_contexts' => NULL),
    ),
  );
}

/*******************************************************************************
 * Module Functions
 ******************************************************************************/

/**
 * Provides content for blocks info page.
 */
function context_block_info_page() {
  drupal_add_css(drupal_get_path('module', 'context_block_info') . '/context_block_info.css');
  drupal_add_css(drupal_get_path('module', 'context_ui') . '/context_ui.css');

  $context_list = _context_block_info_sorted_contexts();
  $rows = array();

  // Iterate through contexts and list all blocks.
  foreach ($context_list as $tag => $context_list_tagged) {
    $rows[] = array(drupal_placeholder($tag), '');

    // Now iterate through blocks in with particular tag (or no tag).
    foreach ($context_list_tagged as $context_name => $context) {
      $blocks_output = '';
      // Check if there are any blocks available.
      if (isset($context->reactions['block'])) {
        $blocks = $context->reactions['block']['blocks'];

        // Sort all blocks by regions.
        $regions = _context_block_info_blocks_by_region($blocks);

        // Generate output of all blocks in particular context.
        $blocks_output = theme('context_block_info_blocks', array(
          'regions' => $regions,
          'context_list' => $context_list,
          'context' => $context,
        ));
      }
      // Generate row.
      $rows[] = theme('context_block_info_row', array(
        'context' => $context,
        'blocks' => $blocks_output,
      ));

    }
  }

  // Return content as table.
  return array(
    '#theme' => 'table',
    '#header' => array(t('Name'), t('Blocks')),
    '#rows' => $rows,
    '#attributes' => array(
      'id' => 'context-block-info',
      'class' => 'context-admin',
    ),
    '#empty' => t('No blocks.'),
    '#caption' => '',
    '#colgroups' => array(),
    '#sticky' => '',
  );
}

/**
 * Returns sorted contexts by tags.
 */
function _context_block_info_sorted_contexts() {
  $context_list = context_load();
  $untagged = array();
  $tagged = array();
  foreach ($context_list as $context) {
    if ($context->tag == '') {
      $tag = '<' . t('Untagged') . '>';
      $untagged[$tag][$context->name] = $context;
    }
    else {
      $tag = $context->tag;
      $tagged[$tag][$context->name] = $context;
    }
  }

  return array_merge($untagged, $tagged);
}

/**
 * Returns sorted blocks by region.
 */
function _context_block_info_blocks_by_region($blocks) {
  $blocks_by_tags = array();
  foreach ($blocks as $block_name => $block) {
    $blocks_by_tags[$block['region']][$block_name] = $block;
  }
  return $blocks_by_tags;
}
