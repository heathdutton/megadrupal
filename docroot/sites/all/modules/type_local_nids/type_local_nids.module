<?php


function _type_local_nids_generate_lnid($node) {

  $txn = db_transaction();
  
  $node->lnid = db_select('node_lnid_next')
    ->fields('node_lnid_next', array('next_lnid'))
    ->condition('type', $node->type)
    ->execute()
    ->fetchField();

	if($node->lnid) {

    db_update('node_lnid_next')
      ->fields(array(
        'next_lnid' => $node->lnid + 1
      ))
      ->condition('type', $node->type)
      ->execute();
	}
	else {

    $node_lnid_next = array(
	    'type' => $node->type,
	    'next_lnid' => 2
	  );
	  
	  drupal_write_record('node_lnid_next', $node_lnid_next);
		
		$node->lnid = 1;
	}
	
	drupal_write_record('node_lnid', $node);
}


/**
 * Implement hook_node_insert() .
 */
function type_local_nids_node_insert($node) {

  _type_local_nids_generate_lnid($node);
}


/**
 * Implement hook_node_load() .
 */
function type_local_nids_node_load($nodes, $types) {

  $result = db_select('node_lnid', NULL, array('fetch' => PDO::FETCH_ASSOC))
    ->fields('node_lnid')
    ->condition('nid', array_keys($nodes), 'IN')
    ->execute();

  foreach($result as $record) {
    
    if($record['lnid'])
      $nodes[$record['nid']]->lnid = $record['lnid'];
    else
  		_type_local_nids_generate_lnid($nodes[$record['nid']]);
  }
}


/**
 * Implement hook_node_delete() .
 */
function type_local_nids_node_delete($node) {

  db_delete('node_lnid')
    ->condition('nid', $node->nid)
    ->execute();
}


/**
 * Implement hook_node_type_update() .
 */
function type_local_nids_node_type_update($info) {

	if(!empty($info->old_type) && $info->old_type != $info->type) {
	
    db_update('node_lnid_next')
      ->fields(array(
        'type' => $info->type
      ))
      ->condition('type', $info->old_type)
      ->execute();
	}
}


/**
 * Implement hook_node_type_delete() .
 */
function type_local_nids_node_type_delete($info) {

  db_delete('node_lnid_next')
    ->condition('type', $info->type)
    ->execute();
}


/**
 * Implement hook_token_values() .
 */
function type_local_nids_token_values($type, $object = NULL, $options = array()) {

  if($type == 'node') {
    $tokens['lnid'] = $object->lnid;
    return $tokens;
  }
}


/**
 * Implement hook_token_list() .
 */
function type_local_nids_token_list($type = 'all') {

  if($type == 'node' || $type == 'all') {
    $tokens['node']['lnid'] = t("The type-local nid.");
    return $tokens;
  }
}

