<?php
/**
 * @file
 * Installation file for openadstream module.
 */

/**
 * Implements hook_schema().
 */
function openadstream_schema() {
  $schema = array();

  $schema['openadstream_tags'] = array(
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'tags' => array(
        'type' => 'varchar',
        'length' => 100,
        'default' => '',
      ),
    ),
    'primary key' => array('vid'),
  );

  $schema['openadstream_positions'] = array(
    'fields' => array(
      'position_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 75,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of name value pairs that are related to the position. Any form values posted during position edit are stored and are loaded into the $position object.',
      ),
    ),
    'primary key' => array('position_id'),
    'indexes' => array('name' => array('name')),
  );

  $schema['openadstream_node_pagenames'] = array(
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'pagename' => array(
        'type' => 'varchar',
        'length' => 75,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array('pagename' => array('pagename')),
  );

  $schema['openadstream_pagenames'] = array(
    'fields' => array(
      'pagename_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'pagename' => array(
        'type' => 'varchar',
        'length' => 75,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('pagename_id'),
  );

  return $schema;
}
/**
 * Implements hook_uninstall().
 */
function openadstream_uninstall() {
  _block_rehash();

  // Delete variables.
  $variables = db_select('variable', 'v')
    ->fields('v', array(
      'name',
    ))
    ->condition('v.name', db_like('openadstream') . '%', 'LIKE')
    ->execute()
    ->fetchCol();

  foreach ($variables as $variable) {
    variable_del($variable);
  }

  db_drop_table('openadstream_tags');
  db_drop_table('openadstream_positions');
  db_drop_table('openadstream_node_pagenames');
  db_drop_table('openadstream_pagenames');
  db_drop_table('openadstream_gutters');
}
/**
 * Drops the openadstream_gutters table from the database.
 *
 * No "Gutter Ads" are supported for the first official 7.x release. Instead,
 users should rely on basic theme region and block assignments if needed.
 */
function openadstream_update_7101(&$sandbox) {
  db_drop_table('openadstream_gutters');
  variable_del('openadstream_defaults_installed');

}
/**
 * Adds data column to openadstream_positions in order to support DX tags.
 */
function openadstream_update_7103(&$sandbox) {
  db_add_field('openadstream_positions', 'data', array(
    'type' => 'blob',
    'not null' => FALSE,
    'size' => 'big',
    'serialize' => TRUE,
    'description' => 'A serialized array of name value pairs that are related to the position. Any form values posted during position edit are stored and are loaded into the $position object.',
    )
  );
}
