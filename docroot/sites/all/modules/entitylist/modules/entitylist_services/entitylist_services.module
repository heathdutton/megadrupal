<?php

/**
 * Implements hook_services_resources().
 */
function entitylist_services_services_resources() {
  $resources = array();
  $resources['entitylist'] = array(
    'retrieve' => array(
      'callback' => 'entitylist_services_list_retrieve',
      'args' => array(
        array(
          'name' => 'name',
          'optional' => FALSE,
          'source' => array('path' => 0),
          'type' => 'string',
          'description' => 'The name of the entity list.',
        ),
      ),
      'access callback' => 'entitylist_list_access',
      'access arguments' => array('view'),
      'access arguments append' => TRUE,
    ),
    'index' => array(
      'callback' => 'entitylist_services_list_index',
      'access arguments' => array('access content'),
    ),
  );
  return $resources;
}

/**
 * Retrieve callback.
 *
 * @todo
 *   If UUID module is installed we need to transform all entities to UUID
 *   entities.
 */
function entitylist_services_list_retrieve($name) {
  $list = entitylist_list_load($name);
  $offset = !empty($_GET['offset']) ? $_GET['offset'] : NULL;
  $limit = !empty($_GET['limit']) ? $_GET['limit'] : NULL;
  $arguments = !empty($_GET['arguments']) ? $_GET['arguments'] : array();

  $list->setRange($offset, $limit);
  $list->setArguments($arguments);

  $entity_type = $list->entityType();
  $entities = $list->execute();

  $odata = FALSE;
  if (module_exists('odata_entity')) {
    $odata = TRUE;
  }

  $cachetags = FALSE;
  if (module_exists('cachetags') && function_exists('cache_add_request_tags')) {
    $cachetags = TRUE;
  }
  foreach ($entities as &$entity) {
    if ($odata) {
      $entity = odata_entity_format($entity_type, $entity, ODATA_ENTITY_FORMAT_PHP);
    }
    if ($cachetags) {
      list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
      cache_add_request_tags(array($entity_type => $id));
    }
  }
  // Set the re-formatted entities.
  $list->entities = $entities;

  // For security.
  unset($list->handler_plugin);
  unset($list->handler_config);

  return $list;
}

/**
 * Index callback.
 */
function entitylist_services_list_index() {
  $foo = new stdClass;
  $foo->foo = 'bar';
  return $foo;
}
