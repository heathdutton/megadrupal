<?php

/**
 * @file
 * Provides settings for delimiter on multi-value fields.
 *
 */

/**
 * Implements hook_field_formatter_info_alter().
 */
function field_delimiter_field_formatter_info_alter(&$info) {
  // added to ALL formatters...
  foreach ($info as $formatter_key => &$formatter) {
    $formatter['settings']['field_delimiter'] = '';
  }
}

/**
 * Implements hook_field_formatter_settings_summary_alter().
 */
function field_delimiter_field_formatter_settings_summary_alter(&$summary, $context) {

  if (!isset($context['field']['cardinality']) || $context['field']['cardinality'] == 1 ) {
    return; // do nothing, not a multivalue field
  }

  $display = $context['instance']['display'][$context['view_mode']];
  $settings = $display['settings'];

  if (!empty($summary)) {
    $summary .= '<br />';
  }

  $delimiter = isset($settings['field_delimiter']) ? filter_xss($settings['field_delimiter'], array('br', 'hr', 'span', 'img', 'wbr')) : FALSE;

  if (!empty($delimiter)) {
    $summary .= t('Delimited by @delimiter', array('@delimiter' => $delimiter));
  }
  else {
    $summary .= t('No Delimiter');
  }
}

/**
 * Implements hook_field_formatter_settings_form_alter().
 */
function field_delimiter_field_formatter_settings_form_alter(&$settings_form, $context) {

  if ($context['field']['cardinality'] == 1 ) {
    return; // do nothing, not a multivalue field
  }

  $display = $context['instance']['display'][$context['view_mode']];
  $settings = $display['settings'];

  $settings_form['field_delimiter'] = array(
    '#type' => 'textfield',
    '#size' => 5,
    '#title' => t('Field Delimiter'),
    '#default_value' => filter_xss($settings['field_delimiter'], array('br', 'hr', 'span', 'img', 'wbr')),
  );
}

/**
 * Implements hook_field_attach_view_alter().
 *
 * add a delimiter after every field value...
 */
function field_delimiter_field_attach_view_alter(&$output, $context) {

  foreach (element_children($output) as $field_name) {

    if (count($output[$field_name]['#items']) < 2) {
      continue; // do nothing, no need for delimiter
    }

    $element = &$output[$field_name];

    $info = field_formatter_settings_get_instance_display_settings($element['#entity_type'], $field_name, $element['#bundle'], $element['#view_mode']);

    if (!empty($info['field_delimiter'])) {
      foreach ($element['#items'] as $delta => $item ) {
        if ($delta + 1 < count($element['#items'])) {
          $element[$delta]['#suffix'] = filter_xss($info['field_delimiter'], array('br', 'hr', 'span', 'img', 'wbr'));
        }
      }
    }
  }
}
