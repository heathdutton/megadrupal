<?php

/**
 * @file
 * Install, update and uninstall functions for the Update Rules module.
 */

/**
 * Implements hook_uninstall().
 */
function update_rules_uninstall() {
  variable_del('update_rules_release_ids');
  variable_del('update_rules_already_processed_1');
  variable_del('update_rules_already_processed_2');
  variable_del('update_rules_already_processed_3');
  variable_del('update_rules_already_processed_4');
  variable_del('update_rules_already_processed_5');
}

/**
 * Implements hook_schema().
 */
function update_rules_schema() {
  $schema = array();

  $schema['update_rules_release_ids'] = array(
    'description'  => 'Stores guid values for each project release',
    'fields'       => array(
      'project_release' => array(
        'type'        => 'varchar',
        'size'        => 'normal',
        'length'      => 100,
        'not null' => TRUE,
        'description' => 'Project machine name and release',
      ),
      'guid' => array(
        'type'        => 'varchar',
        'size'        => 'normal',
        'length'      => 50,
        'not null' => TRUE,
        'description' => 'Unique identifier for this module (for use when disclosing module name is not advisable)',
      ),
    ),
    'primary key'  => array('project_release'),
    'unique keys'  => array(
      // project_release already unique
      'guid' => array('guid'),
    ),
  );

  return $schema;
}

/**
 * Replaces the update_rules_release_ids variable with a db table of the same name
 */
function update_rules_update_7100() {
  // We must define the whole schema. Read https://www.drupal.org/node/150220.
  $schema['update_rules_release_ids'] = array(
    'description'  => 'Stores guid values for each project release',
    'fields'       => array(
      'project_release' => array(
        'type'        => 'varchar',
        'size'        => 'normal',
        'length'      => 100,
        'not null' => TRUE,
        'description' => 'Project machine name and release',
      ),
      'guid' => array(
        'type'        => 'varchar',
        'size'        => 'normal',
        'length'      => 50,
        'not null' => TRUE,
        'description' => 'Unique identifier for this module (for use when disclosing module name is not advisable)',
      ),
    ),
    'primary key'  => array('project_release'),
    'unique keys'  => array(
      // project_release already unique
      'guid' => array('guid'),
    ),
  );

  // Create the new table
  db_create_table('update_rules_release_ids', $schema['update_rules_release_ids']);

  // Move data from the deprecated "update_rules_release_ids" variable (variable table)
  // into the new dedicated table.

  // Unfortunately we need to maintain any of the "old" uniqid-based guid values in case
  // people are using them. We're moving to using a safer unique ID as generated by
  // update_rules_uuid_generate() for all uuid's moving forward.
  $release_ids = variable_get('update_rules_release_ids', array());
  if (!empty($release_ids)) {
    $records = array();
    foreach ($release_ids as $release => $guid) {
      $records[] = array('project_release' => $release, 'guid' => $guid);
    }

    $query = db_insert('update_rules_release_ids')->fields(array('project_release', 'guid'));
    foreach ($records as $record) {
      $query->values($record);
    }
    $query->execute();

  }

  // Delete the old variable
  variable_del('update_rules_release_ids');

  return t('Moved project release information into its own table.');
}