<?php

/**
 * @file
 */

/**
 * Implements hook_schema().
 *
 * Build the secure notes tables.
 */
function secure_notes_schema() {
  $schema = array();
  $schema['secure_notes_create'] = array(
    'description' => 'Stores access tokens and node types for secure note creation.',
    'fields' => array(
      'token'  => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Token for access to node creation.',
      ),
      'email'  => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The email address of the intended note creator.',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The type of node that will be created.',
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The {users}.uid that creted the invitation.',
      ),
      'expires' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The Unix timestamp after which this invitation will expire.',
      ),
    ),
    'primary key' => array('token'),
    'indexes' => array(
      'expires'    => array('expires'),
    ),
  );

  $schema['secure_notes_view'] = array(
    'description' => 'Stores access tokens and node types for secure note viewing.',
    'fields' => array(
      'token'  => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Token for access to node creation.',
      ),
      'email'  => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The email address of the intended note viewer.',
      ),
      'nid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The {node}.nid of node that will be viewed.',
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The {users}.uid that creted the invitation.',
      ),
      'expires' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The Unix timestamp after which this invitation will expire.',
      ),
    ),
    'primary key' => array('token'),
    'indexes' => array(
      'nid' => array('nid'),
      'expires'    => array('expires'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 *
 * Create a new content type as the default storage mechanism for secure notes.
 */
function secure_notes_install() {
  module_load_include('inc', 'node', 'content_types');

  $type = array(
    'type' => 'secure_note',
    'name' => st('Secure Note'),
    'base' => 'node_content',
    'description' => st('Content meant to be a secure exchange between a user of the site and a non-user of the site.'),
    'custom' => TRUE,
    'locked' => FALSE,
  );

  $type = node_type_set_defaults($type);
  node_type_save($type);
  node_add_body_field($type);
  $options = array(
    'comment' => '0',
    'menu_options' => array(),
    'node_preview' => '0',
    'node_submitted' => 0,
    'node_options' => array('status'),
  );
  foreach ($options as $option => $value) {
    variable_set($option . '_secure_note', $value);
  }
}

/**
 * Implements hook_uninstall().
 *
 * Remove variables and data.
 */
function secure_notes_uninstall() {
  // We don't clean up the secure notes node variables because the content type
  // may persist even after the module is removed.
  variable_del('secure_notes_types');
}
