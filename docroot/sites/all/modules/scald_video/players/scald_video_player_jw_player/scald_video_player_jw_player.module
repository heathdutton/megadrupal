<?php
/**
 * @file
 * The main file of the module.
 */

/**
 * Implements hook_scald_player().
 */
function scald_video_player_jw_player_scald_player() {
  return array(
    'jwplayer' => array(
      'name' => 'JW Player',
      'description' => 'Use the JW Player to view video file.',
      'type' => array('video'),
      'settings' => array(
        'preset' => '',
      ),
    ),
  );
}

/**
 * Implements hook_scald_player_settings_form().
 */
function scald_video_player_jw_player_scald_player_settings_form($form, &$form_state) {

  // Create the element array.
  $element = array();

  // Add configuration only if the JW Player exists.
  if (module_exists('jw_player')) {

    // Get all existing presets.
    $presets = jw_player_preset_load();

    // Initialize the items array.
    $items = array();

    // Create a more simple array of JW presets representation.
    foreach ($presets as $machine_name => $item) {
      $items[$machine_name] = $item['preset_name'];
    }

    $element['preset'] = array(
      '#type' => 'select',
      '#options' => $items,
      '#title' => t('JW Preset'),
      '#description' => t('Choose the preset that will be used for render the video through the JW Player.'),
      '#default_value' => $form['#scald']['player_settings']['preset'],
    );
  }

  return $element;
}

/**
 * Implements hook_scald_prerender().
 */
function scald_video_player_jw_player_scald_prerender($atom, $context, $options, $mode) {
  if ($mode == 'player') {

    // Get the context config which must be used to render the video.
    $config = scald_context_config_load($context);

    // Get the preset selected.
    $preset = '';
    if (isset($config->player['video']['settings']['preset'])) {
      $preset = $config->player['video']['settings']['preset'];
    }

    // JW Player version 2
    $sources = array();
    $sources[] = array('uri' => $atom->data['video_file']);
    if (isset($atom->data['alternative_video_sources'])) {
      foreach ($atom->data['alternative_video_sources'] as $source) {
        $sources[] = array('uri' => $source->uri);
      }
    }
    $scald_atom_defaults = variable_get('scald_atom_defaults');
    $thumbnail = $scald_atom_defaults['video']->thumbnail_source;
    if (isset($atom->scald_thumbnail[LANGUAGE_NONE][0])) {
      $thumbnail = $atom->scald_thumbnail[LANGUAGE_NONE][0]['uri'];
    }
    $atom->rendered->player = theme('jw_player', array(
        'sources' => $sources,
        'image' => array('uri' => $thumbnail),
        'file_object' => $atom->base_entity,
        'preset' => $preset,
        'file_url' => file_create_url($atom->file_source),
        'file_mime' => file_get_mimetype($atom->file_source),
        'poster' => file_create_url($thumbnail),
      )
    );
  }
}
