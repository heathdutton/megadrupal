<?php
/**
 * @file
 * Installation tasks for Path Revisions.
 */

/**
 * Implements hook_schema().
 */
function pathrevisions_schema() {
  $schema['path_revisions'] = array(
    'description' => 'Table with path aliases for node revisions.',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a node.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ), 
      'vid' => array(
        'description' => 'The {node_revision}.vid version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'alias' => array(
        'description' => 'The alias for this revision of this node; e.g. title-of-the-story.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => "The language this alias is for; if 'und', the alias will be used for unknown languages. Each Drupal path can have an alias for each supported language.",
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'timestamp' => array(
        'description' => 'A Unix timestamp indicating when this version was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid', 'vid'),
    'indexes' => array(
      'timestamp' => array('timestamp'),
      'alias_language' => array('alias', 'language'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function pathrevisions_install() {
  // Set the weight to 2, so we always run AFTER pathauto. This is required to
  // find and save auto-generated path aliases for updated nodes.
  db_update('system')
    ->fields(array('weight' => 2))
    ->condition('type', 'module')
    ->condition('name', 'pathrevisions')
    ->execute();

  // Populate the {path_revisions} table with current node paths.
  $paths = db_select('url_alias')
    ->fields('url_alias')
    ->condition('source', 'node/%', 'LIKE')
    ->execute()
    ->fetchAllAssoc('pid');

  foreach ($paths as $path) {
    $path = (array)$path;
    if (preg_match('/^node\/(\d+)$/', $path['source'], $match)) {
      // Get current vid for this node.
      $nid = $match[1];
      $vid = db_select('node')
        ->fields('node', array('vid'))
        ->condition('nid', $nid, '=')
        ->execute()
        ->fetchField();

      unset($path['pid']);
      unset($path['source']);

      $path += array('nid' => $nid, 'vid' => $vid);

      // And save it.
      pathrevisions_save($path, FALSE);
    }
  }
}
