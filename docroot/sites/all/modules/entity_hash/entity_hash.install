<?php


module_load_include('inc', 'entity_hash');

module_load_include('module', 'entity_hash');

function entity_hash_schema_field_definition() {
  return array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
    'description' => 'Hash Value',
  );
}

/**
 * Implements of hook_schema_alter().
 */
function entity_hash_schema_alter(&$schema = array()) {
  $field = entity_hash_schema_field_definition();
  foreach (entity_hash_get_supported_entity_info() as $entity_type => $info) {
    $schema[$info['base table']]['fields'][$info['entity keys']['hash']] = $field;
    if (!empty($info['revision table']) && !empty($info['entity keys']['hash'])) {
      $schema[$info['revision table']]['fields'][$info['entity keys']['hash']] = $field;
    }
  }
}


/**
 * Implements hook_install().
 */
function entity_hash_install() {
    db_update('system')
    ->fields(array('weight' => 20))
    ->condition('name', 'entity_hash', '=')
    ->execute();
  _entity_hash_install_hash_fields();
}

function _entity_hash_install_hash_fields() {
    $field = entity_hash_schema_field_definition();
  foreach (entity_hash_get_supported_entity_info() as $entity_type => $info) {
    if (!db_field_exists($info['base table'], $info['entity keys']['hash'])) {
      db_add_field($info['base table'], $info['entity keys']['hash'], $field);
      db_add_index($info['base table'], $info['entity keys']['hash'], array($info['entity keys']['hash']));
    }
    if (!empty($info['revision table']) && !empty($info['entity keys']['hash'])) {
      if (!db_field_exists($info['revision table'], $info['entity keys']['hash'])) {
        db_add_field($info['revision table'], $info['entity keys']['hash'], $field);
        db_add_index($info['revision table'], $info['entity keys']['hash'], array($info['entity keys']['hash']));
      }
    }
    entity_hash_queue_prepare($entity_type);
  }
}

/**
 * Implements hook_uninstall().
 */
function entity_hash_uninstall() {
  foreach (entity_hash_get_supported_entity_info() as $entity_type => $info) {
    if (db_field_exists($info['base table'], $info['entity keys']['hash'])) {
      db_drop_field($info['base table'], $info['entity keys']['hash']);
      db_drop_index($info['base table'], $info['entity keys']['hash']);
    }
    if (!empty($info['revision table']) && !empty($info['entity keys']['hash'])) {
      if (db_field_exists($info['revision table'], $info['entity keys']['hash'])) {
        db_drop_field($info['revision table'], $info['entity keys']['hash']);
        db_drop_index($info['revision table'], $info['entity keys']['hash']);
      }
    }
  }
  //clean up any entries left in queue
  $queue = DrupalQueue::get("entity_hash");
  $queue->deleteQueue();
}

/**
 * Implements hook_modules_installed().
 */
function entity_hash_modules_installed($modules) {
  // Run the installation hook. This makes sure that the schema for all
  // supported core entity types is set correct.
  entity_hash_install();
}
