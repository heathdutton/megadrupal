<?php
/**
 * @file
 * Permalink Block module.
 */

/**
 * Implements hook_help().
 */
function permalink_block_help($path, $arg) {
  switch ($path) {
    case 'admin/help#permalink_block':
      // Return a line-break version of the README.txt.
      return _filter_autop(file_get_contents(dirname(__FILE__) . '/README.txt'));
  }
}

/**
 * Implements hook_block_info().
 *
 * This hook declares the blocks that contains the permalink.
 */
function permalink_block_block_info() {
  $blocks['permalink'] = array(
    'info' => t('Permalink'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
    'weight' => 10,
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => 'admin
admin/*
user
user/*/*
node/*/*
contact
search404',
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function permalink_block_block_configure($delta = '') {
  $form['permalink_block_show'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Display'),
    '#default_value' => variable_get('permalink_block_show', array(
      'html' => 0,
      'link' => 'link',
    )),
    '#options' => array(
      'html' => t('HTML'),
      'link' => t('Link'),
    ),
    '#description' => t("Use the <em>'HTML'</em> snippet for non tech savvy visitors or for convenience. The <em>'link'</em> is for an audience that prefers writing their own HTML."),
    '#element_validate' => array('permalink_block_display_validate'),
  );
  if (!module_exists('popup') && !module_exists('beautytips')) {
    drupal_set_message(t('The !beautytips or !popup module offer a less instrusive Permalink Block that shows only on hover.<br />Once enabled it will automatically be used.', array(
        '!beautytips' => l(t('BeautyTips'), 'https://drupal.org/project/beautytips', array(
          'attributes' => array('target' => '_blank'),
        )),
        '!popup' => l(t('Popup'), 'https://drupal.org/project/popup', array(
          'attributes' => array('target' => '_blank'),
        )),
      )
    ));
    $form['permalink_block_suppress_copybox'] = array(
      '#type' => 'checkbox',
      '#title' => t('No copybox'),
      '#default_value' => variable_get('permalink_block_suppress_copybox', 0),
      '#description' => t("Permalink only. If selected the display settings above are ignored."),
    );
  }
  elseif (module_exists('popup') || module_exists('beautytips')) {
    $form['permalink_block_popup_width'] = array(
      '#type' => 'textfield',
      '#title' => t('Popup width'),
      '#required' => TRUE,
      '#default_value' => variable_get('permalink_block_popup_width', '500'),
      '#element_validate' => array('permalink_block_width_validate'),
      '#field_suffix' => t('px'),
      '#size' => 3,
      '#maxlength' => 3,
    );
    if (module_exists('popup') && !module_exists('beautytips')) {
      $form['permalink_block_activate'] = array(
        '#type' => 'radios',
        '#title' => t('Open popup on..'),
        '#default_value' => variable_get('permalink_block_activate', 'hover'),
        '#options' => array(
          'hover' => t('..hover (mouseover)'),
          'click' => t('..click'),
        ),
      );
    }
  }
  return $form;
}

/**
 * Validate user input on 'Display' to make sure at least one checkbox is set.
 */
function permalink_block_display_validate($element) {
  if (empty($element['#value'])) {
    form_set_error('permalink_block_show', t("<strong><em>Display</em></strong>: Select at least one checkbox."));
  }
}

/**
 * Validate user input on 'Popup width'.
 */
function permalink_block_width_validate($element) {
  // Validate the minimum width to suppress title caption.
  $limit = trim($element['#value']);
  if (!is_numeric($limit) || $limit < 100) {
    form_set_error('permalink_block_popup_width', t('<strong><em>Popup width</em></strong>: Set a width from 100 to 999 px.'));
  }
}

/**
 * Implements hook_block_save().
 */
function permalink_block_block_save($delta = '', $edit = array()) {
  variable_set('permalink_block_show', $edit['permalink_block_show']);
  if (!module_exists('popup') && !module_exists('beautytips')) {
    variable_set('permalink_block_suppress_copybox', $edit['permalink_block_suppress_copybox']);
  }
  if (module_exists('popup') || module_exists('beautytips')) {
    variable_set('permalink_block_popup_width', $edit['permalink_block_popup_width']);
  }
  if (module_exists('popup') && !module_exists('beautytips')) {
    variable_set('permalink_block_activate', $edit['permalink_block_activate']);
  }
}

/**
 * Implements hook_block_view().
 */
function permalink_block_block_view($delta = '') {
  $block['subject'] = NULL;
  // The content of the block is typically generated by calling a custom
  // function.
  $block['content'] = permalink_block_contents();
  return $block;
}

/**
 * A module-defined block content function.
 */
function permalink_block_contents() {
  // We use permalink_block_code.tpl.php to make it easier to override by
  // copying it to the theme's template folder.
  drupal_add_css(drupal_get_path('module', 'permalink_block') . '/permalink_block.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
  drupal_add_js(drupal_get_path('module', 'permalink_block') . '/selecttext.js', 'file');
  $results = array(
    'module_path' => drupal_get_path('module', 'permalink_block'),
  );
  return theme('permalink_block', array('results' => $results));
}

/**
 * Implements hook theme().
 */
function permalink_block_theme(&$existing, &$type, &$theme, &$path) {
  return array(
    'permalink_block' => array(
      'results' => array(),
      'template' => 'permalink_block',
    ),
  );
}
