<?php

/**
 * @file
 * Adds Facebook's "Subscribe" button to each selected node type.
 * Adds a block with a global static value where users can "subscribe" to your facebook account.
 */

/**
 * Implements of hook_menu().
 */
function facebook_subscribe_menu() {
  $items['admin/config/facebook-subscribe'] = array(
    'title' => 'Facebook Subscribe Button',
    'description' => 'Configure the Facebook Subscribe button',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer fbsubscribe'),
    'position' => 'right',
    'weight' => -30,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/facebook-subscribe/general'] = array(
    'title' => 'General settings',
    'description' => 'Configure the settings for the subscribe button as it appears on individual nodes.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fbsubscribe_admin_settings'),
    'access arguments' => array('administer fbsubscribe'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'fbsubscribe.admin.inc',
    'weight' => 0,
  );
  $items['admin/config/facebook-subscribe/block'] = array(
    'title' => 'Block settings',
    'description' => 'Configure the settings for the subscribe button as it appears in the block.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fbsubscribe_block_settings'),
    'access arguments' => array('administer fbsubscribe block'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'fbsubscribe.admin.inc',
    'weight' => 1,
  );
  return $items;
}

/**
 * Implements of hook_node_view().
 */
function facebook_subscribe_node_view($node, $view_mode) {
  global $user;
  $types = variable_get('fbsubscribe_node_types', array());
  $showonteasers = variable_get('fbsubscribe_showonteasers', 0);
  $full = ($view_mode == 'full') ? TRUE : FALSE;
  $show = ( ! empty($types[$node->type]) && user_access('access fbsubscribe'));
  $profile_url = variable_get('fbsubscribe_profile_url', 'https://www.facebook.com/zuck');
  $subscribebutton_weight = variable_get('fbsubscribe_weight', '0');
  $conf = array(
    'layout' => variable_get('fbsubscribe_layout', 'standard'),
    'color_scheme' => variable_get('fbsubscribe_color_scheme', 'light'),
    'show_faces' => variable_get('fbsubscribe_show_faces', 'true'),
    'font' => variable_get('fbsubscribe_font', 'arial'),
    'height' => variable_get('fbsubscribe_iframe_height', '80'),
    'width' => variable_get('fbsubscribe_iframe_width', '450'),
    'other_css' => variable_get('fbsubscribe_iframe_css', ''),
  );
  if ($show) {
    if ($showonteasers == 0) {
      if ($view_mode == 'teaser') {
        $node->content['fbsubscribe_field'] = NULL;
      }
      if ($view_mode == 'full') {
        $node->content['fbsubscribe_field'] = array(
          '#markup' => _fbsubscribe_field($profile_url, $conf),
          '#weight' => $subscribebutton_weight,
        );
      }
    }
    elseif ($showonteasers == 1) {
      if ($view_mode == 'teaser' || $view_mode == 'full') {
        $node->content['fbsubscribe_field'] = array(
         '#markup' => _fbsubscribe_field($profile_url, $conf),
         '#weight' => $subscribebutton_weight,
        );
      }
    }
  }
}

/**
 * Implements of hook_permission().
 */
function facebook_subscribe_permission() {
  return array(
    'administer fbsubscribe' => array(
      'title' => t('Administer Facebook subscribe button'),
      'description' => t('Perform administration tasks for Facebook subscribe button')
    ),
    'administer fbsubscribe block' => array(
      'title' => t('Administer Facebook subscribe button block'),
      'description' => t('Perform administration tasks for Facebook subscribe button block')
    ),
    'access fbsubscribe' => array(
      'title' => t('Access Facebook subscribe button'),
    ),
  );
}

/**
 * Implementation of hook_block_info()
 */
function facebook_subscribe_block_info() {
  $blocks['fbsubscribe_block'] = array(
    'info' => t('Facebook subscribe button'),
  );
  return $blocks;
}

/**
 * Implementation of hook_block_configure()
 */
function facebook_subscribe_block_configure($delta = '') {
  $form = array();
  if ($delta == 'fbsubscribe_block') {
    $form['fbsubscribe_bl_profile_url'] = array(
      '#type' => 'textfield',
      '#title' => t('Profile URL'),
      '#default_value' => variable_get('fbsubscribe_bl_profile_url', 'https://www.facebook.com/zuck'),
      '#description' => t('Profile URL of the user to subscribe to. <em>Note: This must be a facebook.com profile URL. </em> <br/> Facebook users must enable "Subscribe" button on their profile by visiting <a href="http://www.facebook.com/about/subscribe">Facebook\'s subscription page</a>, then clicking "Allow subscriptions"'),
    );
    $form['block'] = array(
      '#type' => 'fieldset',
      '#collapsible' => FALSE,
      '#collapsed' => FALSE,
      '#title' => t('Options'),
      '#description' => '',
    );
    $form['block']['fbsubscribe_bl_layout'] = array(
      '#type' => 'select',
      '#title' => t('Layout style'),
      '#options' => array('standard' => t('Standard'), 'box_count' => t('Box Count'), 'button_count' => t('Button Count')),
      '#default_value' => variable_get('fbsubscribe_bl_layout', 'standard'),
      '#description' => t('Determines the size and amount of social context next to the button'),
    );
    $form['block']['fbsubscribe_bl_show_faces'] = array(
      '#type' => 'select',
      '#title' => t('Display faces in the box'),
      '#options' => array('show' => t('Show faces'), 'hide' => t('Do not show faces')),
      '#default_value' => variable_get('fbsubscribe_bl_show_faces', 'show'),
      '#description' => t('Show profile pictures below the button. Only works with Standard layout'),
    );
    $form['block']['fbsubscribe_bl_font'] = array(
      '#type' => 'select',
      '#title' => t('Font'),
      '#options' => array('arial' => 'Arial',
                  'lucida+grande' => 'Lucida Grande',
                  'segoe+ui' => 'Segoe UI',
                  'tahoma' => 'Tahoma',
                  'trebuchet+ms' => 'Trebuchet MS',
                  'verdana' => 'Verdana'),
      '#default_value' => variable_get('fbsubscribe_bl_font', 'arial'),
      '#description' => t('The font to display in the button'),
    );
    $form['block']['fbsubscribe_bl_color_scheme'] = array(
      '#type' => 'select',
      '#title' => t('Color scheme'),
      '#options' => array('light' => t('Light'), 'dark' => t('Dark')),
      '#default_value' => variable_get('fbsubscribe_bl_color_scheme', 'light'),
      '#description' => t('The color scheme of box environtment'),
    );
    $form['block']['fbsubscribe_bl_iframe_width'] = array(
      '#type' => 'textfield',
      '#title' => t('Width of the iframe (px)'),
      '#default_value' => variable_get('fbsubscribe_bl_iframe_width', '450'),
      '#description' => t('Width of the iframe, in pixels. Default is 450. <em>Note: lower values may crop the output.</em>'),
    );
    $form['block']['fbsubscribe_bl_iframe_height'] = array(
      '#type' => 'textfield',
      '#title' => t('Height of the iframe (px)'),
      '#default_value' => variable_get('fbsubscribe_bl_iframe_height', '80'),
      '#description' => t('Height of the iframe, in pixels. Default is 80. <em>Note: lower values may crop the output.</em>'),
    );
    $form['block']['fbsubscribe_bl_iframe_css'] = array(
      '#type' => 'textfield',
      '#title' => t('Extra css styling needed'),
      '#default_value' => variable_get('fbsubscribe_bl_iframe_css', ''),
      '#description' => t('Extra css attributes needed to make the iframe behave for your specific requirements. Will not necessarily overwrite existing styling. To alter the dimensions of the iframe, use the height and width fields found above.<br/>Example: <em>float: right; padding: 5px;</em>'),
    );
  }
  return $form;
}

/**
 * Implementation of hook_block_save()
 */
function facebook_subscribe_block_save($delta = '', $edit = array()) {
  if ($delta == 'fbsubscribe_block') {
    variable_set('fbsubscribe_bl_profile_url', $edit['fbsubscribe_bl_profile_url']);
    variable_set('fbsubscribe_bl_layout', $edit['fbsubscribe_bl_layout']);
    variable_set('fbsubscribe_bl_show_faces', $edit['fbsubscribe_bl_show_faces']);
    variable_set('fbsubscribe_bl_font', $edit['fbsubscribe_bl_font']);
    variable_set('fbsubscribe_bl_color_scheme', $edit['fbsubscribe_bl_color_scheme']);
    variable_set('fbsubscribe_bl_iframe_width', $edit['fbsubscribe_bl_iframe_width']);
    variable_set('fbsubscribe_bl_iframe_height', $edit['fbsubscribe_bl_iframe_height']);
    variable_set('fbsubscribe_bl_iframe_css', $edit['fbsubscribe_bl_iframe_css']);
  }
}

/**
 * Implementation of hook_block_view()
 */
function facebook_subscribe_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'fbsubscribe_block':
    default:
      $profile_url = variable_get('fbsubscribe_bl_profile_url', 'https://www.facebook.com/zuck');
      $conf = array(
        'layout' => variable_get('fbsubscribe_bl_layout', "standard"),
        'color_scheme' => variable_get('fbsubscribe_bl_color_scheme', "light"),
        'show_faces' => variable_get('fbsubscribe_bl_show_faces', "false"),
        'font' => variable_get('fbsubscribe_bl_font', "arial"),
        'height' => variable_get('fbsubscribe_bl_iframe_height', '80'),
        'width' => variable_get('fbsubscribe_bl_iframe_width', '450'),
        'other_css' => variable_get('fbsubscribe_bl_iframe_css', ''),
      );
      $block['content'] = _fbsubscribe_field($profile_url, $conf);
  }
  return $block;
}

function _fbsubscribe_field($profile_url, $conf) {
  $profile_url = urlencode($profile_url);
  $width = $conf['width'];
  $height = $conf['height'];
  $layout = $conf['layout'];
  $colorscheme = $conf['color_scheme'];
  $show_faces = $conf['show_faces'];
  $font = $conf['font'];
  $other_css = $conf['other_css'];
  $params = "href={$profile_url}&layout={$layout}&show_faces={$show_faces}&width={$width}px&font={$font}&height={$height}px&colorscheme={$colorscheme}";
  $src = htmlentities($params);
  $output = '<iframe src="https://www.facebook.com/plugins/subscribe.php?' . $src . '" scrolling="no" frameborder="0" style="border: none; overflow: hidden; width: ' . $width . 'px; height: ' . $height . 'px;' . $other_css . '" allowTransparency="true"></iframe>';
  return $output;
}