<?php

/**
 * @file
 * Define functions to create and use the paresdown filter
 */

/**
 * Implements hook_filter_info().
 *
 * Return the parsedown filter.
 */
function parsedown_filter_info() {
  $filters = array();

  $filters['parsedown'] = array(
    'title' => t('Parsedown'),
    'description' => t('Make more out of your text with markdown.'),
    'tips callback' => 'parsedown_filter_tips',
    'process callback' => 'parsedown_filter_process',
  );

  return $filters;
}


/**
 * Return the filter tip text.
 *
 * @param object $filter
 *   An object representing the filter.
 * @param object $format
 *   An object representing the text format the filter is contained in.
 * @param bool $long
 *   Whether this callback should return a short tip to display in a
 *   form (FALSE), or whether a more elaborate filter tips should be returned
 *   for theme_filter_tips() (TRUE).
 *
 * @return string
 *   Translated text to display as a tip.
 */
function parsedown_filter_tips($filter, $format, $long) {
  $args = array(
    '@markdown' => 'http://daringfireball.net/projects/markdown/syntax',
    '@gfm' => 'https://help.github.com/articles/github-flavored-markdown',
  );

  return t('Enter your text with <a href="@markdown">Markdown</a> styling. It will be automatically parsed into HTML and also supports <a href="@gfm">Github Flavoured Markdown</a>', $args);
}

/**
 * Process the text to filter with 'Parsedown' if itÂ´s available.
 *
 * @param string $text
 *   The text string to be filtered.
 * @param object $filter
 *   The filter object containing settings for the given format.
 * @param object $format
 *   The text format object assigned to the text to be filtered.
 * @param object $langcode
 *   The language code of the text to be filtered.
 * @param bool $cache
 *   A Boolean indicating whether the filtered text is going to be cached in
 *   {cache_filter}.
 * @param int $cache_id
 *   The ID of the filtered text in {cache_filter}, if $cache is TRUE.
 *
 * @return string
 *   The filtered text.
 */
function parsedown_filter_process($text, $filter, $format, $langcode, $cache, $cache_id) {
  composer_manager_register_autoloader();

  $parsedown = new Parsedown();
  return $parsedown->text($text);
}
