<?php

/**
 * @file
 * Features Utils module hooks.
 */

/**
 * Implements hook_features_api().
 */
function features_utils_features_api() {

  $components = array();

  // components for required modules, so we know they will exist
  $components['role_permissions'] = array(
    'name' => t('Role Permissions'),
    'default_hook' => 'role_permissions_defaults',
    'default_file' => FEATURES_DEFAULTS_INCLUDED,
    'features_source' => TRUE,
    'file' => drupal_get_path('module', 'features_utils') . '/components/role_permissions.features.inc',
  );

  $components['site_permissions'] = array(
    'name' => t('Features Utils'),
    'default_hook' => 'site_permissions_defaults',
    'default_file' => FEATURES_DEFAULTS_INCLUDED,
    'features_source' => TRUE,
    'file' => drupal_get_path('module', 'features_utils') . '/components/site_permissions.features.inc',
  );

  $components['custom_menus'] = array(
    'name' => t('Features Utils'),
    'default_hook' => 'custom_menus_defaults',
    'default_file' => FEATURES_DEFAULTS_INCLUDED,
    'features_source' => TRUE,
    'file' => drupal_get_path('module', 'features_utils') . '/components/custom_menus.features.inc',
  );

  // non-requried modules, check to ensure module is installed before offering component for feature-izing
  if (module_exists('block')) {
    $components['block_assignments'] = array(
      'name' => t('Features Utils'),
      'default_hook' => 'block_assignments_defaults',
      'default_file' => FEATURES_DEFAULTS_INCLUDED,
      'features_source' => TRUE,
      'file' => drupal_get_path('module', 'features_utils') . '/components/block_assignments.features.inc',
    );
    $components['custom_blocks'] = array(
      'name' => t('Features Utils'),
      'default_hook' => 'custom_blocks_defaults',
      'default_file' => FEATURES_DEFAULTS_INCLUDED,
      'features_source' => TRUE,
      'file' => drupal_get_path('module', 'features_utils') . '/components/custom_blocks.features.inc',
    );
  }

  return $components;
}