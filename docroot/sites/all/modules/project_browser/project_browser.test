<?php
/**
* Administration tests for Project Browser.
*/
class ProjectBrowserAdministrationTestCase extends DrupalWebTestCase {
  protected $privileged_user;

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array (
      'name' => t('Project Browser Install Project Test'),
      'description' => t('Attempts to install a project.'),
      'group' => t('Project Browser'),
    );
  }

  public function setUp() {
    parent::setUp('project_browser', 'project_browser_test');  // Enable any modules required for the test

    // Set the default server variable
    $server_url = url('project_browser_test/query', array('absolute' => TRUE));
    variable_set('project_browser_default_server', array(
      $server_url => array(
        'name' => 'Test Server',
        'method' => 'json',
      ),
    ));

    // Create and log in our privileged user.
    $this->privileged_user = $this->drupalCreateUser(array(
      'use project browser',
    ));
    $this->drupalLogin($this->privileged_user);
  }

  public function testProjectBrowserSearchViews() {
    // Create node to edit.
    $edit = array();
    $edit['search_text'] = 'views';
    $this->drupalPost('admin/modules/project-browser/modules', $edit, t('Filter'));
    $this->assertText('Showing 1 to');
  }

  public function testProjectBrowserGetProjects() {
    // Attempt to fetch the default projects
    $edit = array();
    $edit['search_text'] = '';
    $this->drupalPost('admin/modules/project-browser/modules', $edit, t('Filter'));
    $this->assertText('Showing 1 to');
  }

  public function testProjectBrowserProjectEnabled() {
    // Make sure project enabled detection works
    module_load_include('inc', 'project_browser', 'project_browser');
    $this->assertTrue(_project_browser_is_project_enabled('module', 'project_browser'), t('Make sure project enabled detection works.'));
  }

  public function testProjectBrowserAddRemoveQueue() {
    // Refresh the page
    $this->drupalGet('admin/modules/project-browser/modules');

    // Simulate adding a project to the install queue
    $this->drupalGet('admin/project-browser/nojs/install-queue/add/views', array('query' => array('destination' => 'admin/modules/project-browser')));
    $this->assertNoText('Install queue is empty.');
    $this->assertNoText('Error: The project was not found.');

    // Simulate removing a project from the install queue
    $this->drupalGet('admin/project-browser/nojs/install-queue/remove/views', array('query' => array('destination' => 'admin/modules/project-browser')));
    $this->assertText('Install queue is empty.');
    $this->assertNoText('Error: The project was not found.');
  }
}
?>