<?php
/**
 * @file
 * Install file for noty notifications
 */

/**
 * Implementation of hook_schema();
 */
function noty_notifications_schema() {
  $schema = array();

  $schema['noty_notifications'] = array(
    'description' => 'Stores notifications for users.',
    'fields' => array(
      'nid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Notification ID.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'User ID for which is a notification addressed.',
      ),
      'noty_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => 'none',
        'description' => 'Notification type.',
      ),
      'noty_message' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Message.',
      ),
      'variables' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Message variables.',
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Related entity type.',
      ),
      'entity_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Related entity ID.',
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Boolean indicate status of notification (0 = unseen, 1 = seen).',
      ),
      'removable' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
        'description' => 'Boolean indicate if notification is removable after reading (0 = not removable, 1 = removable).',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The Unix timestamp when the notification was created.',
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'nid_uid_created' => array('nid', 'uid', 'created'),
      'uid_created' => array('uid', 'created'),
      'uid' => array('uid'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function noty_notifications_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $t = get_t();
    // Check for the Noty js library.
    if (file_exists(libraries_get_path('noty') . '/js/noty/jquery.noty.js')) {
      $requirements['noty_notifications_js'] = array(
        'value' => $t('Installed'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['noty_notifications_js'] = array(
        'value' => $t('Missing!'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('Please download the !url and place it in the libraries/noty directory. So that jquery.noty.js file is located in libraries/noty/js/noty/jquery.noty.js', array('!url' => l($t('Noty Library'), 'https://github.com/needim/noty/'))),
      );
    }
    $requirements['noty_notifications_js']['title'] = $t('Noty.js library');
    return $requirements;
  }
}
