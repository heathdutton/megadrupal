<?php

/**
 * @file
 * Tests for adinsight_clarity.module.
 */
class AdInsightClarityBasicTest extends DrupalWebTestCase {

  /**
   * Overrides DrupalWebTestCase::getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'AdInsight Clarity basic tests',
      'description' => 'Test basic functionality of AdInsight Clarity module.',
      'group' => 'AdInsightClarity',
    );
  }

  /**
   * Overrides DrupalWebTestCase::setUp().
   */
  function setUp() {
    parent::setUp('adinsight_clarity');

    $permissions = array(
      'access administration pages',
      'administer adinsight clarity',
    );

    // Create and login user.
    $this->admin_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->admin_user);

  }

  /**
   * Test the AdInsight script output.
   *
   * We can only test for script output in the automated tests since the service
   * requires a paid subscription and there are no test accounts as far as I can
   * acertain.
   */
  function testAdInsightClarityTrackingCode() {

    $account = '0000';
    $base_phone = '0800 000 000';
    $pool = '0000';

    variable_set('adinsight_clarity_account', $account);
    variable_set('adinsight_clarity_base_phone', $base_phone);
    variable_set('adinsight_clarity_pool', $pool);

    // Check whether the tracking code URI has been output.
    $this->drupalGet('');
    $this->assertRaw('static.adinsight.com/static/scripts/adiTrack.min.js', '[testAdInsightClarityTrackingCode]: Tracking code output');

    // Check whether the tracking code URI has been output for authenticated users.
    $this->drupalLogin($this->admin_user);

    $this->drupalGet('admin');
    $this->assertRaw('static.adinsight.com/static/scripts/adiTrack.min.js', '[testAdInsightClarityTrackingCode]: Tracking code output for authenticated users');

  }

}
