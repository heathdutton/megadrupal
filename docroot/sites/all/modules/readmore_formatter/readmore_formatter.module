<?php
/**
 * @file
 * Field formatter to expand and collapse text of a field.
 * This is based on readmorejs jquery plugin
 */

/**
 * Implement hook_field_formatter_info().
 */
function readmore_formatter_field_formatter_info() {
  return array(
    'readmore_formatter' => array(
      'label' => t('Read more formatter'),
      'field types' => array('text', 'text_long', 'text_with_summary'),
      'settings' => array(
        // Add default settings with text, so we can wrap them in t().
        'speed' => 100, // in milliseconds
        'collapsedHeight' => 75,
        'heightMargin' => 16, // in pixel
        'moreLink' => '<a href="#">' . t('Read more') . '</a>', 
        'lessLink' => '<a href="#">' . t('Close') . '</a>', 
        'embedCSS' => 1,
        'sectionCSS' => 'display: block; width: 100%;',
        'startOpen' => 0,
        'expandedClass' => 'readmore-js-expanded',
        'collapsedClass' => 'readmore-js-collapsed',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function readmore_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();
  $element['speed'] = array(
    '#type' => 'textfield',
    '#title' => t('Speed'),
    '#description' => t('Speed for show / hide read more.'),
    '#default_value' => $settings['speed'],
    '#element_validate' => array('_element_validate_integer_positive'),
  );

  $element['collapsedHeight'] = array(
    '#type' => 'textfield',
    '#title' => t('Collapsed Height'),
    '#description' => t('Height after which readmore will be added.'),
    '#default_value' => $settings['collapsedHeight'],
    '#element_validate' => array('_element_validate_integer_positive'),
  );

  $element['heightMargin'] = array(
    '#type' => 'textfield',
    '#title' => t('Height margin'),
    '#description' => t('Avoids collapsing blocks that are only slightly larger than maxHeight.'),
    '#default_value' => $settings['heightMargin'],
    '#element_validate' => array('_element_validate_integer_positive'),
  );

  $element['moreLink'] = array(
    '#type' => 'textfield',
    '#title' => t('More link'),
    '#description' => t('Link for more.'),
    '#default_value' => $settings['moreLink'],
  );
  
  $element['lessLink'] = array(
    '#type' => 'textfield',
    '#title' => t('Less link'),
    '#description' => t('Link for less.'),
    '#default_value' => $settings['lessLink'],
  );

  $element['embedCSS'] = array(
    '#type' => 'select',
    '#title' => t('Embed CSS'),
    '#description' => t('Insert required CSS dynamically, set this to false if you include the necessary CSS in a stylesheet.'),
    '#default_value' => $settings['embedCSS'],
    '#options' => array(
      1  => 'Yes',
      0 => 'No',
    ),
  );

  $element['sectionCSS'] = array(
    '#type' => 'textfield',
    '#title' => t('Section styling)'),
    '#description' => t('Sets the styling of the blocks, ignored if embedCSS is false).'),
    '#default_value' => $settings['sectionCSS'],
  );

  $element['startOpen'] = array(
    '#type' => 'select',
    '#title' => t('Start open'),
    '#description' => t('Do not immediately truncate, start in the fully opened position.'),
    '#default_value' => $settings['startOpen'],
    '#options' => array(
      1  => 'Yes',
      0 => 'No',
    ),
  );
  
  $element['expandedClass'] = array(
    '#type' => 'textfield',
    '#title' => t('Expanded class'),
    '#description' => t('Class added to expanded blocks.'),
    '#default_value' => $settings['expandedClass'],
  );

  $element['collapsedClass'] = array(
    '#type' => 'textfield',
    '#title' => t('Collapsed class'),
    '#description' => t('Class added to collapsed blocks.'),
    '#default_value' => $settings['collapsedClass'],
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function readmore_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Read more configuration');
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function readmore_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  static $delta = array();
  $settings = $display['settings'];

  // hack to prevent integer to string field conversion
  $integer_fields = array(
    'speed',
    'collapsedHeight',
    'heightMargin',
    'embedCSS',
    'startOpen',
  );

  foreach ($integer_fields as $field) {
    $settings[$field] = (int)$settings[$field];
  }

  foreach ($items as $delta => $item) {
    $output = _text_sanitize($instance, $langcode, $item, 'value');
    $element[$delta] = array(
      '#markup' => $output,
      '#prefix' => '<div class="field-readmore field-readmore-' . $delta . '">',
      '#suffix' => '</div>'
    );
    $element[$delta]['#attached']['js'] = array(
      drupal_get_path('module', 'readmore_formatter') . '/js/readmore_formatter.js' => array('type' => 'file'),
      libraries_get_path('readmore_formatter') . '/readmore.min.js' => array('type' => 'file'),
      array('data' => array('readmoreSettings' => array($delta => $settings)), 'type' => 'setting'),
    );
    ++$delta;
  }

  return $element;
}

