<?php

/**
 * @file
 * A functional test case for Context Bean configuration.
 */

class ContextBeanTestCase extends DrupalWebTestCase {
  protected $privileged_user;

  public static function getInfo() {
    return array(
      'name' => 'Context Bean',
      'description' => 'Ensure that the context_bean block type functions properly.',
      'group' => 'Bean',
    );
  }

  public function setUp() {
    parent::setUp('context_bean', 'bean_admin_ui', 'bean', 'context', 'ctools', 'entity', 'block');
    $this->privileged_user = $this->drupalCreateUser(
      array(
        'administer bean types',
        'administer beans',
        'edit bean view mode',
        'view bean page',
        'create any context_bean bean',
        'edit any context_bean bean',
        'view any context_bean bean',
        'delete any context_bean bean',
      )
    );
    $this->drupalLogin($this->privileged_user);
  }

  public function testContextBeanCreate() {
    $edit = array();
    $edit['label'] = $this->randomName(8);
    $edit['title'] = $this->randomName(16);
    $edit['view_mode'] = 'default';
    // Create context_bean entity.
    $this->drupalPost('block/add/context-bean', $edit, t('Save'));
    // Read initial output of entity after creation.
    $this->assertText(t('Context Bean @label has been created.', array('@label' => $edit['label'])));
    $edit['title'] = $this->randomName(16);
    // Update title of new context_bean entity.
    $this->drupalPost('block/' . $edit['label']  . '/edit', $edit, t('Save'));
    $this->assertText(t('Context Bean @label has been updated.', array('@label' => $edit['label'])));
    // Delete the context_bean entity.
    $this->drupalPost('block/' . $edit['label']  . '/edit', $edit, t('Delete'));
    // Confirm decision to delete context_bean entity.
    $this->assertText(t('Are you sure you want to delete @label?', array('@label' => $edit['label'])));
    $post = 'block/' . $edit['label']  . '/delete';
    $this->drupalPost($post, array(), t('Delete'));
    // The context_bean entity has been deleted.
    $this->assertText(t('Context Bean @label has been deleted.', array('@label' => $edit['label'])));
  }

}

