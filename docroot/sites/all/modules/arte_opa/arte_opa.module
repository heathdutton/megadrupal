<?php

/**
 * Implements hook_menu().
 */
function arte_opa_menu() {
  $items['admin/config/services/opa'] = array(
    'title' => 'ARTE Open API',
    'page callback' => 'arte_opa_query_page',
    'access arguments' => array('query opa'),
    'file' => 'arte_opa.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/services/opa/query'] = array(
    'title' => 'ARTE Open API',
    'page callback' => 'arte_opa_settings',
    'access arguments' => array('query opa'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'arte_opa.admin.inc',
    'weight' => -20,
  );
  $items['admin/config/services/opa/config'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('arte_opa_admin_settings'),
    'access arguments' => array('administer opa'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'arte_opa.admin.inc',
    'weight' => -15,
  );
  return $items;
}

/**
 * Wrapper around the API constructor
 *
 * @return OPA
 *   Returns an OPA class object.
 */
function arte_opa_get_api() {
  return new OPA(
    variable_get('arte_opa_client_id', ''),
    variable_get('arte_opa_client_secret', ''),
    variable_get('arte_opa_token_never_expire', FALSE)
  );
}

/**
 * The list of supported platforms for OPA calls.
 *
 * @return [type] [description]
 */
function arte_opa_platforms() {
  return array(
    'ALW' => t('Concert'),
    'CINEMA' => t('Cinema'),
    'ARTEPLUS7' => t('Arte+7'),
    'CREATIVE' => t('Creative'),
    'FUTURE' => t('Future'),
    'INFO' => t('Info'),
    'OPERA' => t('Opera'),
  );
}

/**
 * The list of languages to check for OPA calls.
 *
 * @return [type] [description]
 */
function arte_opa_languages() {
  $languages = variable_get('arte_opa_languages', array());
  $languages_ret = array();

  // Filter out any language that isn't set so we create a clean array of enabled languages
  foreach ($languages as $key => $value) {
    if ($value) {
      $languages_ret[] = $key;
    }
  }

  return $languages_ret;
}

/**
 * A list of officially supported languages in OPA.
 *
 * @return [type] [description]
 */
function arte_opa_supported_languages() {
  return array('fr', 'de', 'en', 'es');
}
