<?php

/**
 * @file
 * Creates a new kind of payment method.
 *
 * User can directly purchase products through this new payment method
 * without putting their card details.
 * This payment method works on balance points provided by
 * balance_tracker module.
 * Once admin credit points regarding users, then that user can
 * purchase products basis on those credit points and can
 * checkout through system without go to any other payment gateway.
 */

/**
 * Implements hook_help().
 */
function uc_ebalance_payment_help($path, $arg) {
  switch ($path) {
    case 'admin/help#uc_ebalance_payment':

      return '<pre>' . file_get_contents(dirname(__FILE__) . '/README.txt') . '</pre>';
  }
}


/**
 * Implements hook_uc_payment_gateway().
 */
function uc_ebalance_payment_uc_payment_gateway() {
  $gateways['ebalance_gateway'] = array(
    'title' => t('E-balance Payment Gateway'),
    'description' => t('Process payments through E-balance payment gateway'),
  );

  return $gateways;
}


/**
 * Implements hook_uc_payment_method().
 */
function uc_ebalance_payment_uc_payment_method() {
  $methods[] = array(
    'id' => 'ebalance_payment_gateway',
    'name' => t('E-balance Payment Gateway'),
    'title' => t('E-balance: Pay with your e-balance.'),
    'desc' => t('Pay through E-balance payment gateway'),
    'callback' => 'uc_ebalance_payment_method',
    'weight' => 1,
    'checkout' => TRUE,
  );

  return $methods;
}


/**
 * Callback function for uc_ebalance_payment_method().
 */
function uc_ebalance_payment_method($op, &$order, $form = NULL, &$form_state = NULL) {
  switch ($op) {
    case 'cart-details':
      $details = uc_ebalance_payment_detail_form(array(), $form_state, $order);
      return $details;

    case 'cart-process':
      global $user;
      $total_amount = round($order->order_total);
      $bal_amount = balance_tracker_get_balance($user->uid);
      if ($total_amount > $bal_amount) {
        form_set_error('panes][payment][payment_method][details][[ebalance_payment_policy', t('You do not have sufficient e-balance for process payment.'));
      }
  }
}


/**
 * Function to check E-Balance details of user on cart-details page.
 *
 * @return array $form
 *   Return the E-Balance details of current user.
 */
function uc_ebalance_payment_detail_form($form, &$form_state, $order) {
  global $user;
  $bal_amount = balance_tracker_get_balance($user->uid);
  $form['ebalance_payment_policy'] = array(
    '#markup' => t('<p>You have: <span>@bal_amount</span> E-Balance <a href="@base_urluser/@userid/balance">Check it here.</a>.', array(
      '@bal_amount' => uc_currency_format($bal_amount),
      '@base_url' => url(),
      '@userid' => $user->uid,
    )),
  );

  return $form;
}


/**
 * Implements hook_uc_order().
 */
function uc_ebalance_payment_uc_order($op, $order, $arg2) {
  switch ($op) {
    case 'submit':
      if (isset($order->payment_method) && $order->payment_method == 'ebalance_payment_gateway') {
        $pass = uc_payment_enter($order->order_id, 'ebalance_payment_gateway', $order->order_total, $order->uid, NULL, 'E-balance charged', REQUEST_TIME);
        if (!$pass) {
          $message = t('We were unable to process your e-balance payment. Please verify your e-balance and try again. If the problem persists, contact us to complete your order.');
          return array(array('pass' => FALSE, 'message' => $message));
        }
        else {
          $message = 'Used for Order #' . $order->order_id;
          balance_tracker_debit_account($order->uid, $order->order_total, $message);
        }
      }
      break;
  }
}
