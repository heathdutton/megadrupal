restmini 7.x-1.x, 2015-03-25
----------------------------
- Client PUT now sends 'Content-Length: 0' header if no POST/body parameters.
- Service example test first step (deleting all) shan't 'stop_on_failure'.
- Release 7.x-1.6.

restmini 7.x-1.x, 2015-03-24
----------------------------
- Client now supports sending (POST/PUT) request body JSON-formatted; using new
  option 'content_type' ('application/json[; charset=some-charset]');
- Service now supports receiving (POST/PUT) request body JSON-formatted.
- Service: non-empty POST/body data must be array; otherwise 400 Bad Request.

restmini 7.x-1.x, 2015-03-13
----------------------------
- Client now supports NTLM authentication. New option 'auth'; allowed values
  ''|'basic'|'ntlm'.

restmini 7.x-1.x, 2014-12-18
----------------------------
* Release 7.x-1.5.

restmini 7.x-1.x, 2014-12-17
----------------------------
* Service: responder 'resource' and 'name' are now double-underscore delimited; single underscore makes it uncertain whether a name fragment belongs to the service or endpoint part.
* Example: service url patterns .yaml.

restmini 7.x-1.x, 2014-12-16
----------------------------
* Test: hook_restmini_service_test() 'assert_status' flag; previously named 'success'.
* Test: better result reporting.

restmini 7.x-1.x, 2014-12-14
----------------------------
* Validation patterns no longer support 'required' rule (only 'optional').
* Validation pattern 'enum' cannot be combined with neither 'check' nor 'regex'.
* Validation pattern checks are now all performed in ::validationPattern() instead of runtime in ::validate().
* RestMiniService::importArguments() replaces ::importValidateArguments(), and custom runtime parameters definition no longer supported.

restmini 7.x-1.x, 2014-12-13
----------------------------
* New hook_restmini_validation_patterns() API replaces declaring overriding RestMini::validationPattern() method.
* RestMini::validationPattern() now handles all pattern manipulations and checks (and thus 'cleaner' validate() and service importValidateArguments()).
* Service registry builder now checks and 'pre-compiles' parameter validation patterns using ::validationPattern().
* Fixed wrong name of validation pattern 'ascii_multiline' (was 'ascii_printable').
* Fixed two very bad bugs in restmini_validation_check().
* Removed restmini_service_flush_caches(), because menu_rebuild() rebuilds the service registry anyway (via restmini_service_menu() -> ::router()).
* Removed conf variable 'restmini_service_base_routes_unpacked'; was never set, and using it would be hazardous.

restmini 7.x-1.x, 2014-12-12
----------------------------
* Client: include content type and length in log entry when status >= 500.

restmini 7.x-1.x, 2014-12-01
----------------------------
* Validation pattern rule 'except' renamed to 'except_value', and rule 'except_type' implemented.
* RestMini::validate() now secures that all rules of a supplied pattern are supported, to prevent (silent) insufficient validation.
* RestMini::validate() now allows pattern rules 'required' and 'optional'; the most restrictive of them 'wins'. And the default is now required:true.
* Release 7.x-1.4.

restmini 7.x-1.x, 2014-11-30
----------------------------
* The service registry is now stored in cache instead of a conf variable.
* Validation, including patterns and checks, done, except for backend GUI overview.
* Service test endpoints now declare their parameters and use the built-in validation.

restmini 7.x-1.x, 2014-11-28
----------------------------
* Service: extendable validation patterns. And importValidateArguments() now defaults to not collapse all values into shallow array.

restmini 7.x-1.x, 2014-11-27
----------------------------
* Client: new option 'status_vain_result_void', which flags that result() must return empty string if status code >=300.
* Service: importValidateArguments() use validation patterns (predefined rule sets), not simply predefined regexes.

restmini 7.x-1.x, 2014-11-26
----------------------------
* Client must send Content-Length header for method POST, even when no POST vars, otherwise servers may respond with 413 Request Entity Too Large status.

restmini 7.x-1.x, 2014-11-24
----------------------------
* Client: Fixed missing slash in common CA certs file path when that path contains 'private://'.
* Client: Added custom CA cert file option 'ssl_cacert_file'.
* Client: Check that option 'pass' is set and non-empty, when option 'user' is non-empty.
* Client: Fail if passed an unsupported option.
* Client: Whether to SSL verify peer by default is now overridable by variable 'restmini_client_sslverifydefnot' as well as class constant SSL_VERIFY_DEFAULT.
* Client now increases PHP execution timeout when request timeout (+10%) exceeds PHP timeout.
* Release 7.x-1.3.

restmini 7.x-1.x, 2014-11-21
----------------------------
* Client record request duration as integer, getting microseconds is redundant.

restmini 7.x-1.x, 2014-11-20
----------------------------
* Client now records request duration, in duration attribute retrivable via ::info().

restmini 7.x-1.x, 2014-11-16
----------------------------
* Release 7.x-1.2.

restmini 7.x-1.x, 2014-11-15
----------------------------
* Service Test: better messages handling and limitation of inspection outputs.

restmini 7.x-1.x, 2014-11-14
----------------------------
* Service now sends 'X-Rest-Service-Response-Info-Wrapper' header if it does wrap result in a response info wrapper.
* Test: changed inspect depth algo, to reflect whether the service sent a X-Rest-Service-Response-Info-Wrapper header.
* Service support status 415 'Unsupported Media Type', for POST and PUT when Content-Type header isn't 'application/x-www-form-urlencoded'.
* Service support status 410 'Gone' and 406 'Not Acceptable'.
* New help page which lists all supported request methods and status codes.

restmini 7.x-1.x, 2014-11-13
----------------------------
* The service example module now implements hook_restmini_service_test() directly; removed separate restmini_service_example_test module.
* Support status 504 Gateway Timeout.

restmini 7.x-1.x, 2014-11-09
----------------------------
* Client now supports common SSL CA certificates, and new certificate bundle may be downloaded by cron.

restmini 7.x-1.x, 2014-11-08
----------------------------
* Client: warn if the PHP cUrl extension isn't available, when enabling the client module.
* Client: reduced default timeouts to connect:5 and response:20 seconds.
* Client: renamed response_timeout to request_timeout.
* Client: check that protocol is http/https.
* Client: dedicated error codes for common cURL errors.
* Service test modules: restmini_service_test dependency implicit; turn all testing on/off by enabling/disabling restmini_service_test only.
* Reorganised admin pages and their routes.

restmini 7.x-1.x, 2014-11-07
----------------------------
* Client: default connect and response timeouts are now configurable by Drupal variables.
* Service Test: support connect and response timeout options, and renamed 'arguments' to 'parameters' to comply with client terminology.

restmini 7.x-1.x, 2014-11-06
----------------------------
* Service Test: better handling of selected tests versus available tests.

restmini 7.x-1.x, 2014-11-05
----------------------------
* Service Test: reduce inspection depth according to content length received by client.

restmini 7.x-1.x, 2014-11-04
----------------------------
* Reverted status 304 for POST (rubbish), and fixed that POST allows 204.
* Service: set empty Content-Type header for status 204 and 304, to override web server sending default (usually text/html) Content-Type header.
* Client: an empty response Content-Type header must be null (not false); and added response content length attribute; and do reset those content attributes.
* Service test framework works, but it's output needs a touch.

restmini 7.x-1.x, 2014-11-03
----------------------------
* Client request() is now public and chainable (returns $this, not boolean).
* Client must return result:null on parse error, result:false on request error, and info() must not return a response bucket.

restmini 7.x-1.x, 2014-11-01
----------------------------
* Use status 304 for POST when a creation get's rejected because the entity already exists (~ on duplicate key).

restmini 7.x-1.x, 2014-10-31
----------------------------
* Service: new requestHeaders() method. And PUT now only populates POST if empty and the received Content-Type is application/x-www-form-urlencoded.

restmini 7.x-1.x, 2014-10-30
----------------------------
* Service: isRouter() method tells if current request was routed by the restmini_service module.
* Service: currentResponder() now accepts a property(name) argument, to return single responder property - including new derivative prpperties 'resource' and (qualified)'name'.
* Service: the respond() and error() methods works even if current request wasn't routed by the restmini_service module.

restmini 7.x-1.x, 2014-10-29
----------------------------
* Service: currentResponder array now includes resource and operation names.
* Service: restmini_service_base_routes() now builds a cached array version of the restmini_service_base_routes setting.

restmini 7.x-1.x, 2014-10-27
----------------------------
* Client shan't use CURLOPT_PUT, because that makes cUrl send 'Tranfer-Encoding: chunked' (which is no good unless uploading a file; and file uploading is not within the scope of the client module).
* Service: save Drupal's 'q' GET var (the request path) in the currentResponder array, and remove 'q' from $_GET to make $_GET reflect net GET arguments sent by the client.
* Service: populate $_POST from input stream when HTTP method is PUT (currently disregarding Content-Type; however that must be solved by implementing a received-headers method).
* Service: renamed currentResponder 'route' bucket to 'base_route'.
* Service example test drush script: added --restart option.

restmini 7.x-1.x, 2014-10-25
----------------------------
* Client: Constructor $server now defaults to empty string.
* Client: Fixed wrong url-encoding of POST vars.
* Client: Fixed that delete() actually sent GET.
* Client: New method info().
* Service: Renamed the example's Thingie retrieval method to retrieve (was get).
* Service example create and update shan't accept JSON-serialized GET var instead of POST var, because may result in status 413 error (despite actually working; the instance does get created/updated???).
* The service example module now contains a test sub module usable via drush.

restmini 7.x-1.x, 2014-10-22
----------------------------
* Fixed that router didn't detect non-existent callback, because call_user_func[_array]() - contrary to documentation - doesn't return boolean false when the callback isn't callable (issue #2361459).
* Client shan't attempt to autoload a class (via class_exists() default truthy [ugly, defaults should always be falsy] 'attempt autoload' parameter), because autoloading doesn't work in D7 anyway.

restmini 7.x-1.x, 2014-10-09
----------------------------
* Release 7.x-1.0.

restmini 7.x-1.x, 2014-10-08
----------------------------
* Service example module seemingly ready (at least for testing).
* Error code offsets raised to 1xxx, to get out the HTTP status code range; could potentially be very confusing.
* Eradicated (custom) $status_text parameter for respond() and error().
* Service respond: fixed that 204 is for PUT|DELETE not POST|PUT, and that error must be true when success is false.

restmini 7.x-1.x, 2014-10-07
----------------------------
* Variable 'restmini_service_base_routes' must default to empty except on admin page.
* Added function for adding/updating service base routes.
* Added status 405 to service respond().
* Added service example module, but don't like it yet.

restmini 7.x-1.x, 2014-10-06
----------------------------
* Service now supports multiple base paths.
* Various fixes.
* Enabled HEAD support.
* Service admin page now lists registered service endpoint methods.

restmini 7.x-1.x, 2014-10-02
----------------------------
* Rigorous checks in service registry method.
* Service supports HEAD, though not enabled yet (because not tested).

restmini 7.x-1.x, 2014-09-29
----------------------------
* Support multiple base routes API-wise; support for _defining_ multiple base routes still missing, but that's primarily an admin page issue (except variables must be updated too).
* Escape messages by removing html, instead of html encode.
* Responder var memorizes base route name and method too.
* Include status and status_text in service response info.

restmini 7.x-1.x, 2014-09-28
----------------------------
* Service module refactored to OOP, to support overridding error code offset (and other future properties).
* Service check if suggest route (service base path) matches an admin page.
* Client save last requested URL.
* More self::|static:: corrections.

restmini_client 7.x-1.x, 2014-09-27
-----------------------------------
* reset() return self; chainable.
* Support other parsers than JSON.
* Remove payload method, and add it's ability - recursing into result via a keypath - to the result method.
* Support requesting response info wrapper from service.
* Content type matching, and options ignore_status and ignore_content_type.

restmini_service 7.x-1.x, 2014-09-27
------------------------------------
* Log inappropriate status code use as warning; optionally turn that logging off using variable 'restmini_service_log_irregular_response'.
* Use the module's error codes.
* Send Content-Type and Content-Length headers.
* Memorize current responder info for logging/debugging.
* List supported status codes to HTTP request methods.
* Lots of fixes and checks to status code handling.
* Don't send response info wrapper unless error or explicitly asked for.

restmini_client 7.x-1.x, 2014-09-26
-----------------------------------
* Get actual payload bucket of JSON-decoded response, by recursing into result via a keypath.

restmini_service 7.x-1.x, 2014-09-26
------------------------------------
* Delegated service endpoint declaration; one module on behalf of other modules.
* Don't send response info wrapper unless error or explicitly asked for.

restmini_service 7.x-1.x, 2014-09-25
------------------------------------
* Permission checking, file include capability, and admin page that can clear relevant caches.
* Log 403 access denied.
* Admin page field for setting base path (route).

restmini_client 7.x-1.x, 2014-09-24
------------------------------------
* Client class with chainable methods.

restmini_service 7.x-1.x, 2014-09-24
------------------------------------
* 'Service Unavailable'-like routing errors results in status 503, not 404.
* Added optional message parameter to the respond function.
* Callback execution in try-catch. Error codes.

restmini_service 7.x-1.x, 2014-09-23
------------------------------------
* Service list API, router and error handler implemented.
* Non-error response handler implemented.

restmini_client 7.x-1.x, 2014-09-22
-----------------------------------
* Initial.
