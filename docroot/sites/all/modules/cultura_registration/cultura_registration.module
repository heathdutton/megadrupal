<?php

/**
 * @file
 * Cultura registration
 */

/**
 * Define a constant for the registration tokens variable name.
 */
define('CULTURA_REGISTRATION_TOKENS', 'cultura_registration_tokens');

/**
 * Implements hook_menu_alter().
 */
function cultura_registration_menu_alter(&$items) {
  $items['user/register']['access callback'] = 'cultura_registration_access';
  $items['user/register']['access arguments'] = array(2);
}

/**
 * Implements hook_form_FORM_ID_alter() for user_login_block().
 */
function cultura_registration_form_user_login_block_alter(&$form, &$form_state) {
  $items[] = l(t('Request new password'), 'user/password', array('attributes' => array('title' => t('Request new password via e-mail.'))));
  $form['links'] = array('#markup' => theme('item_list', array('items' => $items)));
}

/**
 * Implements hook_block_info().
 */
function cultura_registration_block_info() {
  $blocks = array();

  $blocks['tokens'] = array(
    'info' => t('Registration tokens'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function cultura_registration_block_view($delta) {
  switch ($delta) {
    case 'tokens':
      return cultura_registration_tokens_block();
  }
}

/**
 * Checks whether a valid token is provided.
 *
 * @return bool
 *   Returns TRUE if the token is valid, FALSE otherwise.
 */
function cultura_registration_access($token) {
  return in_array($token, variable_get(CULTURA_REGISTRATION_TOKENS, array()));
}

/**
 * Returns registration token block for instructors.
 */
function cultura_registration_tokens_block() {
  $block['subject'] = t('Registration tokens');

  $tokens = variable_get(CULTURA_REGISTRATION_TOKENS, array());

  if (!empty($tokens)) {
    $block['content']['#markup'] = '<dl>';

    // Hide the primary language registration link from secondary instructors.
    $secondary = user_role_load_by_name('guest instructor');
    if ($secondary && array_key_exists($secondary->rid, $GLOBALS['user']->roles)) {
      array_shift($tokens);
    }

    foreach ($tokens as $language => $token) {
      $link = url("user/register/$token", array('absolute' => TRUE));
      $block['content']['#markup'] .= "<dt>$language</dt><dd>$link</dd>";
    }

    $block['content']['#markup'] .= '</dl>';
    $block['content']['#markup'] .= '<p class="description">Distribute these links to the students who will be responding to questionnaires in the respective languages.</p>';
  }
  else {
    $block['content'] = drupal_get_form('cultura_registration_tokens_form');
  }

  return $block;
}

/**
 * Form constructor for the registration tokens form.
 *
 * @see cultura_registration_tokens_form_validate()
 * @see cultura_registration_tokens_form_submit()
 *
 * @ingroup forms
 */
function cultura_registration_tokens_form() {
  $form = array();

  $form['#description'] = t('Generate registration tokens for students');
  $form['primary'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Host language'),
  );
  $form['secondary'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Guest language'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generate'),
  );

  return $form;
}

/**
 * Form submission handler for cultura_registration_tokens_form().
 *
 * @see cultura_registration_tokens_form()
 */
function cultura_registration_tokens_form_submit($form, &$form_state) {
  $tokens = array(
    $form_state['values']['primary'] => cultura_registration_token($form_state['values']['primary']),
    $form_state['values']['secondary'] => cultura_registration_token($form_state['values']['secondary']),
  );
  variable_set(CULTURA_REGISTRATION_TOKENS, $tokens);
  drupal_set_message(t('Your registration links have been generated.'));
}

/**
 * Form validation handler for cultura_registration_tokens_form().
 *
 * @see cultura_registration_tokens_form()
 */
function cultura_registration_tokens_form_validate($form, &$form_state) {
  if ($form_state['values']['primary'] == $form_state['values']['secondary']) {
    form_set_error('secondary', t('You must choose two different languages.'));
  }
}

/**
 * Returns token for registration.
 */
function cultura_registration_token($language) {
  return drupal_hmac_base64($language, drupal_get_hash_salt());
}
