<?php

/**
 * @file
 * Code file for Image 360 Degree View module..
 * @auther : Abhijeet Kalsi.
 */


/**
 * Implements hook_menu().
 */
function image_360_degree_view_menu() {

  $menu['admin/config/media/image_360_degree_view'] = array(
    'title' => 'Image 360 Degree View',
    'description' => 'Manage images display format.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_image_360_degree_view_admin_settings'),
    'access arguments' => array('administer Image 360 degree'),
    'file' => 'image_360_degree_view.admin.inc',
  );
  return $menu;
}

/**
 * Implements hook_help().
 */
function image_360_degree_view_help($path) {
  if ($path == 'admin/help#image_360_degree_view') {
    $help = '<p>' . t('This module allows you to use series of real photographs taken at fixed intervals in the right sequence around the object and combine them for a single interactive image. The image can auto rotate, and the user can "grab" the image and rotate the product to any angle.') . '<br /><br />' . t('This is a perfect solution for online retailers or manufacturers to take their online shopping experience to the next level by bringing their online catalog to life with 360° product views and providing a virtual tour of products. The module is also a great option for online galleries/museums or auction houses where they can provide their visitors a full 360° view of any object. ') . '</p>';
    return $help;
  }
}

/**
 * Implements hook_permission().
 */
function image_360_degree_view_permission() {
  return array(
    'administer Image 360 degree' => array(
      'title' => t('Administer Image 360 Degree View'),
      'description' => t('Perform maintenance tasks for Image 360 Degree View'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function image_360_degree_view_field_formatter_info() {
  return array(
    'images_360_render' => array(
      'label' => t('Image 360 Degree View'),
      'description' => t('Rotations of images into 360 degree view'),
      'field types' => array('image'),
      'settings' => array('image_view_mode' => 'default'),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function image_360_degree_view_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();

  if ($display['type'] == 'images_360_render') {
    $element['image_view_mode'] = array(
      '#title'   => t('View mode'),
      '#type'    => 'select',
      '#options' => _image_360_degree_view_entity_view_mode_labels(),
      '#default_value' => $settings['image_view_mode'],
    );
  }
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function image_360_degree_view_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Image style: @size', array(
    '@size' => $settings['image_view_mode'],
  ));
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function image_360_degree_view_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  $path = drupal_get_path('module', 'image_360_degree_view');
  $d_path = base_path() . $path;
  $width = NULL;

  // Initialize the var.
  $element = array();
  // Get the settings.
  $settings = $display['settings'];
  // The Size setting selected in the settings form.
  $size = $settings['image_view_mode'];

  // Create the image.
  $style_load = image_style_load($size);

  if (isset($items['0'])) {

    if (is_null($width)) {
      $width = $items['0']['width'];
      $height = $items['0']['height'];
    }
    else {
      foreach ($style_load as $key => $values) {
        if (is_array($values) && count($values) > 0) {
          foreach ($values as $key_n => $values_n) {
            $width = $values_n['data']['width'];
            $height = $values_n['data']['height'];
          }
        }
      }
    }

    $settings = $display['settings'];
    $element = array();
    if ($display['type'] == 'images_360_render') {
      $element[0]['#type'] = 'markup';
      $element[0]['#prefix'] = '<div class="PIC360"><ul>';
      $element[0]['#suffix'] = '</ul></div>';
      $link_element = '';

      foreach ($items as $delta => $item) {
        if ($size == 'default') {
          $link_element .= '<li><img src="' . file_create_url($item['uri']) . '" width="' . $width . '" height="' . $height . '" /></li>';
        }
        else {
          $link_element .= "<li>" . theme(
            'image_style',
            array(
              'style_name' => $size,
              'path' => $item['uri'],
              'getsize' => TRUE,
              'attributes' => array('class' => 'thumb'),
              'width' => $width,
              'height' => $height,
            )
          ) . "</li>";
        }
      }
      $element[0]['#markup'] = $link_element;
    }
    return $element;
  }
}

/**
 * Return an array of available view modes for file entities.
 */
function _image_360_degree_view_entity_view_mode_labels() {
  $labels = array();
  $style_optiions = image_styles();
  foreach ($style_optiions as $key => $values) {
    $labels[$key] = $values['name'];
  }
  return $labels;
}


/**
 * Implements hook_block_info().
 */
function image_360_degree_view_block_info() {
  $block['image_360_degree_view'] = array(
    'info' => t('Image 360 Degree View'),
  );
  return $block;
}

/**
 * Implements hook_block_view().
 */
function image_360_degree_view_block_view($data = '') {
  $block = array();
  if ($data == 'image_360_degree_view') {
    $block['subject'] = t('Image 360 Degree View');
    $block['content'] = _image_360_degree_view_image_view();
  }
  return $block;
}

/**
 * Get the image from node content and display 360 image view.
 */
function _image_360_degree_view_image_view() {
  $html = NULL;
  if (!$fileslist = variable_get('image_360_degree_view_image_files', FALSE)) {
    $fileslist = array(
      'files' => array(),
      'count' => 0,
    );
  }

  if ($fileslist['count'] != 0) {
    $filecount = 0;
    $html .= '<div class="PIC360"><ul>';

    foreach ($fileslist['files'] as $key => $value) {
      $image = file_load($fileslist['files'][$key]);
      if (is_object($image)) {
        $image->status = FILE_STATUS_PERMANENT;
        file_save($image);
        file_usage_add($image, 'image_360_degree_view', 'image', $fileslist['files'][$key]);
        $image_path = file_create_url($image->uri);
      }
      $width = variable_get('image_360_degree_view_image_width', '300');
      $height = variable_get('image_360_degree_view_image_height', '200');
      $html .= '<li><img src = "' . $image_path . '" width = "' . $width . '" height="' . $height . '" /></li>';
      $filecount++;
    }
    $html .= '</ul></div>';
    return $html;
  }
  else {
    return t('No 360 image to view.');
  }
}
