<?php

/**
 * @file
 * Install hooks for the Dropbox module.
 */

/**
 * Implementation of hook_uninstall().
 */
function dropbox_uninstall() {
  db_query("DELETE FROM {variable} WHERE name LIKE 'dropbox_%'");
}

/**
 * Implementation of hook_schema().
 *
 * @return
 *   The schema array for the Dropbox module.
 */
function dropbox_schema() {
  $schema = array();
  $schema['dropbox_user'] = array(
    'description' => 'Stores Dropbox settings for users.',
    'fields' => array(
      'uid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
      'mail' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'default' => '', 'description' => "User's email address associated with Dropbox."),
      'pass' => array('type' => 'varchar', 'length' => 64, 'not null' => FALSE, 'default' => '', 'description' => "User's Dropbox account password."),
      'flood' => array('type' => 'int', 'unsigned' => TRUE),
      'roles' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE),
    ),
    'primary key' => array(
      'uid',
    ),
  );
  return $schema;
}

/**
 * Implementation of hook_requirements().
 */
function dropbox_requirements($phase) {
  switch ($phase) {
    case 'runtime':
      return _dropbox_requirements_runtime();
  }
}

/**
 * Determine runtime requirements for the Dropbox module.
 *
 * @return
 *   An array of requirements with their associated states.
 */
function _dropbox_requirements_runtime() {
  $requirements = array(
    'class_exists' => array(
      'title' => t('DropboxUploader class is available'),
      'value' => t('Available'),
    ),
    'ssl' => array(
      'title' => t('SSL access for secure Dropbox configuration'),
      'value' => t('Available'),
    ),
    'curl' => array(
      'title' => t('PHP cURL extension is installed'),
      'value' => t('Installed'),
    ),
  );
  // Ensure that DropboxUploader exists.
  if (!file_exists(drupal_get_path('module', 'dropbox') . '/DropboxUploader.php')) {
    $requirements['class_exists']['description'] = t('The DropboxUploader.php file must exist in the Dropbox module directory for the Dropbox module to work properly.');
    $requirements['class_exists']['value'] = t('Not found');
    $requirements['class_exists']['severity'] = REQUIREMENT_ERROR;
  }
  // Ensure that SSL is available. We can't be sure in this test, so only set a
  // warning.
  if (FALSE) {
    $requirements['ssl']['description'] = t('SSL does not appear to be available for this address. For users to configure Dropbox integration, they must provide a private Host ID. Anyone with posession of this key can access the associated Dropbox account. SSL must be enabled for this domain, or you must access this site with another address which does have SSL enabled to allow users to configure Dropbox integration.');
    $requirements['ssl']['value'] = t('Not available');
    $requirements['ssl']['severity'] = REQUIREMENT_WARNING;
  }
  // Ensure that the cURL PHP extension is installed.
  if (!in_array('curl', get_loaded_extensions())) {
    $requirements['curl']['description'] = t('The PHP cURL extension is not installed. This extension is required for Dropbox Integration to function. Please install this extension, or contact your hosting provider to have it installed.');
    $requirements['curl']['value'] = t('Not installed');
    $requirements['curl']['severity'] = REQUIREMENT_ERROR;
  }
  return $requirements;
}

