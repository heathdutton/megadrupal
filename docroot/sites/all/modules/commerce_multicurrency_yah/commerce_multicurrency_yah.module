<?php

/**
 * @file
 *
 * The module file for the Yahoo Finance support for the commerce multicurrency.
 */

/**
 * Implements hook_help().
 */
function commerce_multicurrency_yah_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module.
    case 'admin/help#commerce_multicurrency_yah':
      $output = '';
      $output .= '<h3>' . t('About Yahoo Finance for Commerce Multicurrency
      .') . '</h3>';
      $output .= t('This module provides the currency sync provider for commerce multicurrency module.');
      $output .= t('To enable the Yahoo Finance, you can go to the
        <a href="!settings-page">settings page</a> of the module and check the "Yahoo Finance for Multicurrency" checkbox and click "Save Settings"
        button.', array(
          '!settings-page' => url('admin/commerce/config/yahoo-finance'),
        )
      );
      $output .= '<br />' . t('You can also select the "Yahoo Finance" as the currency sync provider in the "Service to fetch exchange rates from:" field to synchronize the currency rates with the Yahoo Finance. You can find the setting at
        <a href="!url">Commerce Multicurrency settings page</a>.', array(
          '!url' => url('admin/commerce/config/currency/conversion'),
        )
      );
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function commerce_multicurrency_yah_menu() {
  $items = array();
  $items['admin/commerce/config/yahoo-finance'] = array(
    'title' => 'Commerce Multicurrency for Yahoo Finance',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_multicurrency_yah_settings_form'),
    'access arguments' => array('configure commerce multicurrency for yahoo finance'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/commerce_multicurrency_yah.admin.inc',
    'weight' => 1,
  );
  $items['admin/commerce/config/yahoo-finance/settings'] = array(
    'title' => 'Yahoo Finance Settings',
    'access arguments' => array('configure commerce multicurrency for yahoo finance'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/commerce/config/yahoo-finance/conversion'] = array(
    'title' => 'Currency conversion',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_multicurrency_yah_form'),
    'access arguments' => array('use commerce multicurrency for yahoo finance'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );

  return $items;
}


/**
 * Implements hook_permission().
 */
function commerce_multicurrency_yah_permission() {
  $perms = array(
    'use commerce multicurrency for yahoo finance' => array(
      'title' => t('Use Yahoo Finance Currency Converter for Commerce.'),
      'description' => t('Use the features of the Yahoo Finance module.'),
    ),
    'configure commerce multicurrency for yahoo finance' => array(
      'title' => t('Configure Yahoo Finance Commerce Currency Converter.'),
      'description' => t('Configure the settings of the Yahoo Finance module.'),
    ),
  );

  return $perms;
}

/**
 * Implements hook_theme().
 */
function commerce_multicurrency_yah_theme($existing, $type, $theme, $path) {
  return array(
    'commerce_multicurrency_yah_currency' => array(
      'variables' => array(
        'src_currency' => NULL,
        'dest_currency' => NULL,
        'amount' => NULL,
      ),
    ),
    'commerce_multicurrency_yah_link' => array(
      'variables' => array(
        'src_currency' => NULL,
        'dest_currency' => NULL,
      ),
    ),
  );
}

/**
 * Theme implementation for currency exchange result.
 */
function theme_commerce_multicurrency_yah_currency($variables) {
  $output = '';
  $converted_amount = '';

  $src_currency = $variables['src_currency'];
  $dest_currency = $variables['dest_currency'];
  $amount = $variables['amount'];

  $rate = commerce_multicurrency_yah_getrate($src_currency, $dest_currency);

  // The variable containing the converted amount.
  $converted_amount = $amount * $rate;

  if (!isset($converted_amount) || empty($converted_amount)) {
    $output .= t('Currency exchange error.');
  }
  else {
    $output .= '<p class="commerce-multicurrency-yah-result">';
    $output .= t('@amount @from = @value @to', array(
      '@amount' => $amount,
      '@from' => $src_currency,
      '@value' => $converted_amount,
      '@to' => $dest_currency)
    );
    $output .= '</p>';
  }

  $output = '<div class="commerce-multicurrency-yah-rate">' . $output . '</div>';

  return $output;
}

/**
 * Theme implementation for the link to yahoo finance.
 */
function theme_commerce_multicurrency_yah_link($variables) {
  $output = '';

  $src_currency = $variables['src_currency'];
  $dest_currency = $variables['dest_currency'];

  $output = l(t('Click Here'), 'http://finance.yahoo.com/q', array(
    'query' => array(
      's' => $src_currency . $dest_currency . '=X',
    ),
    'attributes' => array(
      'target' => '_blank',
    ),
  ));

  return $output;
}

/**
 * Defines currency exchange rate sync providers from Yahoo Finance!.
 *
 * @return array
 *   An array of information about the callback.
 *   The array contains a sub-array for each callback, with a machine name
 *   as the key.
 */
function commerce_multicurrency_yah_commerce_multicurrency_exchange_rate_sync_provider_info() {
  return array(
    'yahoo_finance' => array(
      'title' => t('Yahoo Finance'),
      'callback' => 'commerce_multicurrency_yah_exchange_rate_sync_provider',
      'file' => drupal_get_path('module', 'commerce_multicurrency_yah') .
      '/includes/commerce_multicurrency_yah.finance.inc',
    ),
  );
}

/**
 * Admin can calculate the rate for the specific currencies.
 */
function commerce_multicurrency_yah_form($form, &$form_state) {
  $active_currencies_all = commerce_currencies();
  $enabled_currencies = commerce_currencies(TRUE, FALSE);
  if (count($active_currencies_all) > 1) {
    foreach ($active_currencies_all as $currency) {
      $active_currencies[$currency['code']] = $currency['name'] . '(' .
        $currency['code'] . ')';
    }
  }

  if (count($enabled_currencies) > 1) {
    foreach ($enabled_currencies as $currency) {
      $enabled_currencies[$currency['code']] = $currency['name'] . '(' .
        $currency['code'] . ')';
    }
  }

  foreach ($enabled_currencies as $active_currency_code => $active_currency) {
    if ($active_currency_code != commerce_multicurrency_get_user_currency_code()) {
      $default_to_currency = $active_currency_code;
      break;
    }
  }

  if (isset($form_state['storage']['amount']) && isset
    ($form_state['storage']['src_currency']) && $form_state['storage']['dest_currency']) {
    // Get the saved data from the previous form submission.
    $amount = $form_state['storage']['amount'];
    $from = $form_state['storage']['src_currency'];
    $to = $form_state['storage']['dest_currency'];
    $vars = array(
      'src_currency' => $from,
      'dest_currency' => $to,
      'amount' => $amount,
    );

    $form['converted_currency'] = array(
      '#markup' => theme('commerce_multicurrency_yah_currency', $vars),
      '#weight' => 5,
      '#suffix' => '<p class="yahoo-currency-details">To check the statistics and history for the above currencies at Yahoo Finance, ' . theme('commerce_multicurrency_yah_link', $vars) . '</p>',
    );
  }

  $form['amount'] = array(
    '#type' => 'textfield',
    '#title' => t('Amount'),
    '#default_value' => isset($form_state['storage']['amount']) ? $form_state['storage']['amount'] : 1,
    '#size' => 9,
    '#maxlength' => 9,
    '#description' => t('Enter amount to be converted.'),
  );

  $form['src_currency'] = array(
    '#type' => 'select',
    '#title' => t('From'),
    '#default_value' => isset($form_state['storage']['src_currency']) ? $form_state['storage']['src_currency'] : commerce_multicurrency_get_user_currency_code(),
    '#options' => $active_currencies,
  );

  $form['dest_currency'] = array(
    '#type' => 'select',
    '#title' => t('To'),
    '#default_value' => isset($form_state['storage']['dest_currency']) ? $form_state['storage']['dest_currency'] : $default_to_currency,
    '#options' => $active_currencies,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Convert'),
    '#weight' => 10,
  );

  return $form;
}

/**
 * Validate handler for the currency exchange form.
 */
function commerce_multicurrency_yah_form_validate($form, &$form_state) {
  if (!$form_state['values']['amount']) {
    form_set_error('commerce_multicurrency_yah', t('The Amount field is required.'));
  }

  if (!is_numeric($form_state['values']['amount'])) {
    form_set_error('commerce_multicurrency_yah', t('The Amount field should be numeric.'));
  }
}

/**
 * Submit handler for the currency exchange form.
 */
function commerce_multicurrency_yah_form_submit($form, &$form_state) {
  $form_state['storage']['amount'] = $form_state['values']['amount'];
  $form_state['storage']['src_currency'] = $form_state['values']['src_currency'];
  $form_state['storage']['dest_currency'] = $form_state['values']['dest_currency'];
  $form_state['rebuild'] = TRUE;
}

/**
 * The function that returns the converted rate from yahoo finance.
 *
 * @param string $currency_code
 *   Contains the source currency code.
 * @param string $target_currency_code
 *   Contains the code the amount is to be converted.
 *
 * @return float $rate
 *   Contains the conversion exchange rate.
 */
function commerce_multicurrency_yah_getrate($currency_code, $target_currency_code) {
  $record = '';
  $quote_url = 'http://download.finance.yahoo.com/d/quotes.csv';
  $query_parameters = array(
    'e' => '.csv',
    'f' => 'sl1d1t1',
    's' => $currency_code . $target_currency_code . '=X',
  );

  /* $url = $quote_url . drupal_http_build_query($query_parameters); */
  $url = url($quote_url, array('query' => $query_parameters));
  $http_result = drupal_http_request($url);

  if ($http_result->code != 200) {
    $msg = t('Yahoo Finance: There is an error in request code 200: @code',
    array('@code' => $http_result->code));
    watchdog('commerce_multicurrency_yah', $msg, WATCHDOG_ERROR);
    return FALSE;
  }

  if (isset($http_result->data)) {
    $record = $http_result->data;
  }

  if (!$record) {
    $msg = t('Yahoo Finance: The host is not available.');
    watchdog('commerce_multicurrency_yah', $msg, WATCHDOG_ERROR);
    return FALSE;
  }

  $currency_data = explode(',', $record);
  $rate = $currency_data[1];
  // $date = $currency_data[2];
  // $time = $currency_data[3]; // To generate the timestamp.
  // Declaring the $timestamp variable as the data is received in the request
  // Can be used in future.
  /* $timestamp = strtotime(str_replace('"', '', $date) . ' ' . str_replace
  ('"', '', $time)); */

  return $rate;
}

/**
 * Displays the currency exchange rates between the site's currencies.
 *
 * @param bool $enabled
 *   Indicate whether to display only the enabled currencies or all.
 *
 * @return string $output
 *   Return the renderable array of currencies in tabular format.
 */
function commerce_multicurrency_yah_display_rates($enabled = FALSE) {
  $site_default_currency = commerce_default_currency();
  $exchange_rates = array();
  $headers = array(
    t('Currency'),
    t('Exchange Rate'),
    t('Link to Yahoo Finance stats.'),
  );

  if ($enabled) {
    $active_currencies_all = commerce_currencies(TRUE);
  }
  else {
    $active_currencies_all = commerce_currencies(FALSE);
  }

  if (count($active_currencies_all) > 1) {
    foreach ($active_currencies_all as $currency) {
      $active_currencies[$currency['code']] = $currency['name'] . '(' .
      $currency['code'] . ')';
    }
  }
  foreach ($active_currencies as $code => $active_currency) {
    if ($code == $site_default_currency) {
      $site_default_currency_name = $active_currency;
      continue;
    }

    $vars = array(
      'src_currency' => $site_default_currency,
      'dest_currency' => $code,
      'amount' => '1',
    );

    $exchange_rates[] = array(
      array('data' => check_plain($active_currency)),
      array('data' => theme('commerce_multicurrency_yah_currency', $vars)),
      array('data' => theme('commerce_multicurrency_yah_link', $vars)),
    );
  }

  $caption = t("Store's default currency: @name", array('@name' => $site_default_currency_name));
  $output = theme('table', array(
    'header' => $headers,
    'rows' => $exchange_rates,
    'caption' => $caption,
    )
  );

  return $output;
}
