<?php
/**
 * @file
 * All functionality of email_login module.
 */

/**
 * Implements hook_menu().
 */
function email_login_menu() {
  $items = array();
  $items['admin/config/people/email_login'] = array(
    'title' => 'Email Login',
    'description' => 'Configuration settings for Email Login',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('email_login_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'email_login.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements hook_block_info().
 */
function email_login_block_info() {
  $blocks = array();
  $blocks['email_login'] = array(
    'info' => t('Email login Block'),
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function email_login_block_view($delta = '') {
  $block = array();
  global $user;
  switch ($delta) {
    case 'email_login':
      if (!$user->uid && !(arg(0) == 'user' && !is_numeric(arg(1)))) {
        $block['content'] = drupal_get_form('email_login_form');
      }
      break;
  }

  return $block;
}

/**
 * Form constructor for Email Login form.
 *
 * @see email_login_form_validate()
 * @see email_login_form_submit()
 */
function email_login_form($form, &$form_state) {

  $form['mail'] = array(
    '#title' => 'Email',
    '#description' => t('Enter a valid email address'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#placeholder' => 'Email',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Log in'),
  );
  return $form;
}

/**
 * Form validation handler for email_login_form().
 *
 * @see email_login_form_submit()
 */
function email_login_form_validate($form, &$form_state) {
  if (!valid_email_address($form_state['values']['mail'])) {
    form_set_error('mail', t('Please enter a valid email address.'));
  }
}

/**
 * Form submission handler for email_login_form().
 *
 * @see email_login_form_validate()
 */
function email_login_form_submit($form, &$form_state) {

  $mail = $form_state['values']['mail'];
  $query = db_select('users', 'u');
  $uid = $query->fields('u', array('uid'))->condition('u.mail', $mail)->execute()->fetchField();
  if (is_numeric($uid) && $uid > 1) {
    global $user;
    $user = user_load($uid);
    if ($user->status != 1) {
      drupal_set_message(t('Your account has not been activated or is blocked.'), 'error');
    }
    elseif (email_login_verify_user_roles($user->roles)) {
      user_login_finalize();
      drupal_set_message(t('You are now logged in.'));
    }
    else {
      drupal_set_message(t("Login failed."), 'error');
    }
  }
  else {
    drupal_set_message(t('Sorry, unrecognized email address.'), 'error');
  }
}

/**
 * Function to verify user role.
 */
function email_login_verify_user_roles($user_roles) {
  $email_login_roles = array();
  if (is_array(variable_get('email_login_roles'))) {
    $email_login_roles = array_filter(variable_get('email_login_roles'));
  }
  unset($user_roles[2]);
  if (count(array_diff_key($user_roles, $email_login_roles)) || empty($user_roles) || empty($email_login_roles)) {
    return FALSE;
  }
  else {
    return TRUE;
  }
}

/**
 * Implements hook_help().
 */
function email_login_help($path, $arg) {
  switch ($path) {
    case 'admin/help#email_login':
      return nl2br(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}
