<?php

/**
 * @file
 * Test product capibilities.
 */

class ecProductCreate extends DrupalWebTestCase {
  function getInfo() {
    return array(
      'name' => t('Product Creation'),
      'description' => t('Test product creation without any another modules required.'),
      'group' => t('e-Commerce'),
    );
  }

  function setUp() {
    parent::setUp('ec_common', 'ec_product', 'ctools');
    variable_set('ec_default_currency', 'USD');
  }

  function testCreateProduct() {
    $account = $this->drupalCreateUser(array('create product content', 'administer products'));
    $this->drupalLogin($account);

    $edit = array(
      'title' => $this->randomString(20),
      'body[und][0][value]' => $this->randomString(50),
      'price' => format_currency(rand(1, 100000) / 100),
    );

    $this->drupalPost('node/add/product/generic', $edit, t('Save'));
  }
}

class ecProductTypeCreate extends DrupalWebTestCase {
  function getInfo() {
    return array(
      'name' => t('Product Type Creation'),
      'description' => t('Create, Edit and Delete a product type'),
      'group' => t('e-Commerce'),
    );
  }

  function setUp() {
    parent::setUp('ec_common', 'ec_product', 'ctools');
    variable_set('ec_default_currency', 'USD');
  }

  function testCreateProductType() {
    $account = $this->drupalCreateUser(array('create product content', 'administer products'));
    $this->drupalLogin($account);

    $edit = array(
      'name' => $this->randomName(),
      'ptype' => $this->randomName(),
      'description' => $this->randomString(255),
    );

    $this->drupalPost('admin/config/store/products/types/add', $edit, t('Submit product type'));

    $this->assertText('New product type ', t('New product type created'));

    $this->clickLink($edit['name']);

    $edit['description'] = $this->randomName(255);
    $this->drupalPost(NULL, $edit, t('Submit product type'));

    $this->assertText('Product type', t('Check for update text'));
  }
}
