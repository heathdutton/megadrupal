<?php

/**
 * @file
 * Install and uninstall routines, incremental database updates and database
 * schema.
 */

/**
 * Implements hook_requirements().
 */
function ec_customer_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    $requirements['ec_customer_types'] = array(
      'title' => t('Customer types'),
      'description' => t('Customer types are ways of defining different customers such as anonymous, users, etc.'),
    );
    if ($ctypes = ec_customer_get_types('names')) {
      if (count($ctypes) == 1 && isset($ctypes['anonymous'])) {
        $requirements['ec_customer_types'] += array(
          'value' => t('Only anonymous customers can be sold to. You will need to enable another customer module to enable be able to sell to other customer types.'),
          'severity' => REQUIREMENT_WARNING,
        );
      }
      else {
        $requirements['ec_customer_types'] += array(
          'value' => t('Enabled customer types: @customer_type', array('@customer_type' => implode(', ', $ctypes))),
          'severity' => REQUIREMENT_OK,
        );
      }
    }
    else {
      $requirements['ec_customer_types'] += array(
        'value' => t('There are currently no customer types enables.'),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_schema().
 */
function ec_customer_schema() {
  $schema = array();

  $schema['ec_customer'] = array(
    'fields' => array(
      'ecid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'exid' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'User ID.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'token' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('ecid'),
    'unique keys' => array(
      'type' => array('type', 'exid'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function ec_customer_update_last_removed() {
  return 6403;
}

/**
* Extend the length of exid to accommodate anonymous users.
*/
function ec_customer_update_7401() {
  db_change_field('ec_customer', 'exid', 'exid', array(
    'type' => 'varchar',
    'length' => '64',
    'not null' => TRUE,
    'default' => '',
  ));
  db_change_field('ec_customer', 'token', 'token', array(
    'type' => 'varchar',
    'length' => '64',
    'not null' => TRUE,
    'default' => '',
  ));
}
