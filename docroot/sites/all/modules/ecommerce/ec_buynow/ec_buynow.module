<?php

/**
 * @file
 * Provide single click purchasing of products.
 */

/**
 * Implements hook_menu().
 */
function ec_buynow_menu() {
  $items = array();

  $items['node/%node/checkout'] = array(
    'title' => 'Checkout',
    'page callback' => 'ec_buynow_checkout',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'secure' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_node_view().
 */
function ec_buynow_node_view($node, $view_mode, $langcode) {
  if (variable_get('ec_product_cart_addition_by_link', TRUE) && (($view_mode == 'teaser' && variable_get('ec_product_cart_on_teaser', 1)) || !$view_mode != 'teaser') && ($links = ec_buynow_build_link($node))) {
    $node->content['links']['ec_buynow'] = array(
      '#theme' => 'links__ecommerce__buynow',
      '#links' => $links,
    );
  }
}

/**
 * Implements hook_link().
 */
function ec_buynow_link($type, $node = NULL, $teaser = FALSE) {
  $l = array();
  switch ($type) {
    case 'checkout':
      $l = ec_buynow_build_link($node);

      // If there is no links add a link to the node.
      if (empty($l) && ec_product_can_purchase($node, 'ec_buynow') && !$node->hide_buynow_link) {
        $l['ec_buynow'] = array(
          'title' => t('Buy now'),
          'href' => 'node/' . $node->nid,
          'attributes' => array(
            'title' => t('Buy "!title" now', array('!title' => $node->title))
          ),
        );
      }
      break;
  }

  return $l;
}

/**
 * Implements hook_form_alter().
 */
function ec_buynow_form_node_form_alter(&$form, &$form_state, $form_id) {
  $node = & $form['#node'];
  if (ec_product_can_be_converted($form['#node']->type, TRUE)) {
    if (empty($form['product']['special_options'])) {
      if (empty($form['product'])) {
        $form['product'] = array();
      }
      $form['product']['special_options'] = array();
    }

    $form['product']['special_options']['hide_buynow_link'] = array(
      '#type' => 'radios',
      '#title' => t('"Buy now" link'),
      '#default_value' => isset($node->hide_buynow_link) ? $node->hide_buynow_link : 0,
      '#options' => array(t('Visible'), t('Hidden')),
      '#description' => t('Choose whether or not you want the "Buy now" link visible for this product.'),
      '#weight' => -5,
    );
  }
}

/**
 * Implements hook_form_alter().
 */
function ec_buynow_form_ec_checkout_product_form_alter(&$form, &$form_state) {
  $nids = element_children($form['products']);
  $nid = reset($nids);
  $node =& $form['products'][$nid]['#node'];

  if (ec_product_attributes_get($node, 'no_buynow') !== TRUE && ec_product_can_purchase($node, 'ec_buynow')) {
    $form['submit']['buy-now'] = array(
      '#type' => 'submit',
      '#value' => ec_product_get_final_price($node, 'ec_buynow') > 0 ? t('Buy now') : t('Apply now'),
      '#submit' => array('ec_buynow_checkout_submit'),
    );
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function ec_buynow_checkout_submit(&$form, &$form_state) {
  $txn = new stdClass();
  $txn->type = 'ec_buynow';
  $txn->items = array();
  
  foreach ($form_state['values']['products'] as $nid => $item) {
    $node = node_load($nid);
    $qty = isset($item['qty']) ? $item['qty'] : NULL;
    $data = isset($item['data']) ? $item['data'] : NULL;
    if (ec_checkout_validate_item($node, 'ec_buynow', $qty, $data, EC_VALIDATE_ITEM_SEVERITY_HIGH)) {
      if ($data) {
        foreach ($data as $key => $value) {
          if (!empty($key) && !isset($item[$key])) {
            $item[$key] = $value;
          }
        }
      }
      
      foreach ($item as $key => $value) {
        $node->{$key} = $value;
      }
    }
    
    $txn->items[$nid] = $node;
  }

  ec_checkout_initialize('ec_buynow', $txn);

  $form_state['redirect'] = 'checkout';
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function ec_buynow_checkout($node) {
  $qty = 1;
  $data = array();
  if (ec_checkout_validate_item($node, 'ec_buynow', $qty, $data, EC_VALIDATE_ITEM_SEVERITY_HIGH)) {
    $node->qty = $qty;
    $node->data = $data;

    $txn = new stdClass();
    $txn->type = 'ec_buynow';
    $txn->items[$node->nid] = $node;

    ec_checkout_initialize('ec_buynow', $txn);
    drupal_goto('checkout');
  }
  drupal_goto();
}

/**
 * Build links for checkout
 */
function ec_buynow_build_link($node) {
  $l = array();
  if (isset($node->ptype) && !ec_product_attributes_get($node, 'no_buynow') &&
    ec_product_attributes_get($node, 'no_buynow') !== TRUE &&
    ec_product_can_purchase($node, 'ec_buynow') &&
    ec_product_attributes_get($node, 'use_product_cart_form') !== TRUE &&
    !$node->hide_buynow_link) {
    $l['ec_buynow'] = array(
      'title' => ec_product_get_final_price($node, 'ec_buynow') > 0 ? t('Buy now') : t('Apply now'),
      'href' => 'node/' . $node->nid . '/checkout',
      'attributes' => array('title' => t('Buy "!title" now', array('!title' => $node->title))),
    );
  }

  return $l;
}

/**
 * Implements hook_views_api().
 */
function ec_buynow_views_api() {
  return array('api' => 2.0);
}

/**
 * Implements hook_feature_info().
 */
function ec_buynow_feature_info() {
  return array(
    'no_buynow_check' => array(
      'name' => t('Exclude this product from being purchased via the cart'),
      'description' => t('This feature will be automatically loaded when any other feature sets the no_cart attribute'),
      'module' => 'ec_buynow_no_buynow',
      'hidden' => TRUE,
    ),
  );
}

/**
 * Implements hook_ec_checkout_validate_item().
 */
function ec_buynow_no_buynow_ec_checkout_validate_item($node, $type, $qty, $data, $severity, $return) {
  if ($qty && $type == 'ec_buynow' && ec_product_attributes_get($node, 'no_buynow') === TRUE) {
    if ($severity >= EC_VALIDATE_ITEM_SEVERITY_MEDIUM) {
      drupal_set_message(t('%title can not be purchased via buy now.', array('%title' => check_plain($node->title))));
    }
    return FALSE;
  }
  return $return;
}

/**
 * Implements hook_ec_ptypes_alter().
 */
function ec_buynow_ec_ptypes_alter(&$ptypes) {
  $feature = ec_product_feature_get('type', 'no_buynow_check');
  foreach ($ptypes as $type => $ptype) {
    if (ec_product_attributes_get($type, 'no_buynow') === TRUE) {
      $feature->ptype = $type;
      $ptypes[$type]->features[$feature->ftype] = $feature;
    }
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function ec_buynow_ec_transaction_types() {
  return array('ec_buynow' => t('Buy now'));
}