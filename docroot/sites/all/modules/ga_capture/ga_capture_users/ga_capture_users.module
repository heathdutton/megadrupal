<?php
/**
 * Implement hook_user_view().
 */
function ga_capture_users_user_view($account) {
  // If user does not have rights to view ga_capture fields, return.
  if (!user_access('view ga_capture fields')) 
  {
    return $account;
  }

  // Get data from ga_capture
  $ga_capture_data = _ga_capture_get_data("users", $account->uid);

  // Get a list of fields to display
  $fields_to_display = variable_get('ga_capture_display_fields');
  if (!isset($fields_to_display)) 
  {
    $fields_to_display = array();
  }
  
  if (!isset($account->content['ga_capture'])) {
    $account->content['ga_capture'] = array();
  }

  $account->content['ga_capture'] += array(
    '#type' => 'user_profile_category',
    '#weight' => 10,
    '#title' => t('Google Analytics Data'),
  );

  // if no GA Capture Data can be found, return a message explaining why. Otherwise, display data.
  if ($ga_capture_data == '') 
  { 
    $account->content['ga_capture']['ga_not_found'] = array(
      '#type' => 'user_profile_item',
      '#title' => NULL,
      '#markup' => t('No data found.  This user was either created before we captured Google Analytics data, or cookies have been disabled.'),
    );   
  } 
  else 
  {
    $account->content['ga_capture']['ga_source'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Source'),
      '#markup' => $ga_capture_data['ga_source'],
    );
  
    $account->content['ga_capture']['ga_campaign'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Campaign'),
      '#markup' => $ga_capture_data['ga_campaign'],
    );

    $account->content['ga_capture']['ga_medium'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Medium'),
      '#markup' => $ga_capture_data['ga_medium'],
    );
  
    $account->content['ga_capture']['ga_content'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Content'),
      '#markup' => $ga_capture_data['ga_content'],
    );

    $account->content['ga_capture']['ga_term'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Term'),
      '#markup' => $ga_capture_data['ga_term'],
    );

    $account->content['ga_capture']['ga_first_visit'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA First Visit Timestamp'),
      '#markup' => format_date($ga_capture_data['ga_first_visit'],'long'),
    );

    $account->content['ga_capture']['ga_previous_visit'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Previous Visit Timestamp'),
      '#markup' => format_date($ga_capture_data['ga_previous_visit'],'long'),
    );

    $account->content['ga_capture']['ga_current_visit'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Current Visit Timestamp'),
      '#markup' => format_date($ga_capture_data['ga_current_visit'],'long'),
    );

    $account->content['ga_capture']['ga_times_visited'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GA Times Visited'),
      '#markup' => $ga_capture_data['ga_times_visited'],
    );

    $account->content['ga_capture']['gat_first_referrer'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GAT First Referrer'),
      '#markup' => $ga_capture_data['gat_first_referrer'],
    );

    $account->content['ga_capture']['gat_first_landing'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GAT First Landing Page'),
      '#markup' => $ga_capture_data['gat_first_landing'],
    );

    $account->content['ga_capture']['gat_cur_referrer'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GAT Current Referrer Page'),
      '#markup' => $ga_capture_data['gat_cur_referrer'],
    );

    $account->content['ga_capture']['gat_cur_landing'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GAT Current Landing Page'),
      '#markup' => $ga_capture_data['gat_cur_landing'],
    );

    $account->content['ga_capture']['gat_recent_referrer'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GAT Most Recent Referrer'),
      '#markup' => $ga_capture_data['gat_recent_referrer'],
    );

    $account->content['ga_capture']['gat_recent_landing'] = array(
      '#type' => 'user_profile_item',
      '#title' => t('GAT Most Recent Page (Current Page)'),
      '#markup' => $ga_capture_data['gat_recent_landing'],
    );
  }
  // Remove fields that should not be displayed.
  foreach ($fields_to_display as $key => $item) {
    if ($fields_to_display[$key] == '0')
    {
      unset($account->content['ga_capture'][$key]);
    }
  }

}

/**
 * Implement hook_user_insert().
 */
function ga_capture_users_user_insert(&$edit, $account, $category) {
  _ga_capture_insert_data('users', $account->uid);
}

/**
 * Implement hook_user_delete().
 */
function ga_capture_user_delete($account) {
  _ga_capture_delete_data('users', $account->uid);
}


/**
 * Implement hook_views_api().
 */
function ga_capture_users_views_api() {
  return array(
    'api' => 3,
  );
}


/**
 * Implements hook_views_data_alter().
 */
function ga_capture_users_views_data_alter(&$data) {

      $data['ga_capture_data']['table']['join']['users'] = array(
            'table' => 'ga_capture_data',
            'left_field' => 'uid',
            'field' => 'oid',
            'extra' => array(array('field' => 'object_type', 'value' => 'users', 'operator' => '='))
        );
}