<?php
/**
 * Create an array of fields with properties.
 * TODO: Expand property list for each field and use those properties in Views and sub-modules.
 */
function _ga_capture_fields() 
{
  $data = array();
  $data['ga_source'] = array(
      'title' => t('GA Source'),
  );
  $data['ga_campaign'] = array(
      'title' => t('GA Campaign'),
  );
  $data['ga_medium'] = array(
      'title' => t('GA Medium'),
  );  
  $data['ga_content'] = array(
      'title' => t('GA Content'),
  );
  $data['ga_term'] = array(
      'title' => t('GA Term'),
  ); 
  $data['ga_first_visit'] = array(
      'title' => t('GA First Visit Timestamp'),
  ); 
  $data['ga_previous_visit'] = array(
      'title' => t('GA Previous Visit Timestamp'),
  ); 
  $data['ga_current_visit'] = array(
      'title' => t('GA Current Visit Timestamp'),
  ); 
  $data['ga_times_visited'] = array(
      'title' => t('GA Times Visited'),
  ); 
  $data['gat_first_referrer'] = array(
      'title' => t('GAT First Referrer to Site'),
  ); 
  $data['gat_first_landing'] = array(
      'title' => t('GAT First Landing Page on Site'),
  ); 
  $data['gat_cur_referrer'] = array(
      'title' => t('GAT Current Referrer to Site'),
  ); 
  $data['gat_cur_landing'] = array(
      'title' => t('GAT Current Landing Page on Site'),
  ); 
  $data['gat_recent_referrer'] = array(
      'title' => t('GAT Most Recent Referrer to Page'),
  ); 
  $data['gat_recent_landing'] = array(
      'title' => t('GAT Most Recent Landing Page (Current Page)'),
  ); 
  return $data;
}

/**
 * Implements hook_menu().
 */
function ga_capture_menu() {
  $items['admin/config/system/ga_capture'] = array(
    'title' => 'Google Analytics Display and Capture',
    'description' => 'Configure Google Analytics Display and Capture module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ga_capture_admin_settings_form'),
    'access arguments' => array('administer ga_capture'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_admin_settings() for module settings configuration.
 */
function ga_capture_admin_settings_form($form_state) {
  // Field set.
  $form['general'] = array(
    '#type' => 'fieldset',
    '#title' => t('General Settings'),
  );
  
  // get the field list.
  $fields = _ga_capture_fields();
  $display_field_options = array();
  
  // build a key/value array.
  foreach ($fields as $key => $item) {
    $key = $key;
    $value = $item['title'];
    $display_field_options[$key] = $value;
  }
  
  // Populate the checkboxes using the array.  If variable has not been used, default all of them to checked in the form.
  $form['general']['ga_capture_display_fields'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Fields to Display'),
    '#default_value' => variable_get('ga_capture_display_fields', array_keys($display_field_options)),
    '#options' => $display_field_options,
    '#description' => t('If no fields are selected, none will be displayed.'),
  );
  
  return system_settings_form($form);
}


/**
 * Retrieve data from ga_capture_data table using object_type and object id.
 */
function _ga_capture_get_data($object_type, $oid)
{
  $result = db_select('ga_capture_data', 'gac')
    ->condition('object_type', $object_type,'=')
    ->condition('oid', $oid,'=')
    ->fields('gac')
    ->execute()
    ->fetchAssoc();  
  return $result;
}


/**
 * Insert data into ga_capture_data table using object_type, object id, and tokens.
 */
function _ga_capture_insert_data($object_type, $oid)
{
  // If the ga-first-visit token is empty, the Google cookie was not set (browser is likely rejecting all cookies).
  // Exit the insert function.
  if(token_replace('[ga_tokenizer:ga-first-visit]') == "") {return;}

  $ga_first_visit = strtotime(token_replace('[ga_tokenizer:ga-first-visit]'));
  $ga_previous_visit = strtotime(token_replace('[ga_tokenizer:ga-previous-visit]'));  
  $ga_current_visit = strtotime(token_replace('[ga_tokenizer:ga-current-visit]'));
  $ga_times_visited = token_replace('[ga_tokenizer:ga-times-visited]');
  
  $gat_first_referrer = token_replace('[analytics_tracking:gat-first-referrer]');
  $gat_cur_referrer = token_replace('[analytics_tracking:gat-cur-referrer]');
  $gat_recent_referrer = token_replace('[analytics_tracking:gat-recent-referrer]');

  db_insert('ga_capture_data')->fields(array(
    'oid' => $oid,
    'object_type' => $object_type,
    'ga_source' => token_replace('[ga_tokenizer:ga-source]'),
    'ga_campaign' => token_replace('[ga_tokenizer:ga-campaign]'),
    'ga_medium' => token_replace('[ga_tokenizer:ga-medium]'),
    'ga_content' => token_replace('[ga_tokenizer:ga-content]'),
    'ga_term' => token_replace('[ga_tokenizer:ga-term]'),

    'ga_first_visit' => $ga_first_visit,
    'ga_previous_visit' => $ga_previous_visit,
    'ga_current_visit' => $ga_current_visit,
    'ga_times_visited' => $ga_times_visited,
     
    'gat_first_referrer' => ($gat_first_referrer == "") ? "(direct)" : $gat_first_referrer,
    'gat_first_landing' => token_replace('[analytics_tracking:gat-first-landing]'),
    
    'gat_cur_referrer' => ($gat_cur_referrer == "") ? "(direct)" : $gat_cur_referrer,
    'gat_cur_landing' => token_replace('[analytics_tracking:gat-cur-landing]'),
     
    'gat_recent_referrer' => ($gat_recent_referrer == "") ? "(direct)" : $gat_recent_referrer,
    'gat_recent_landing' => token_replace('[analytics_tracking:gat-recent-landing]'),
  ))->execute();

  watchdog('ga_capture', t('oid: !oid, object_type: !object_type was inserted to ga_capture_data.', array('!oid' => $oid, '!object_type' => $object_type)));
}
        
          
/**
 * Delete data from ga_capture_data table using object_type and object id.
 */
function _ga_capture_delete_data($object_type, $oid) 
{
  $num_deleted = db_delete('ga_capture_data')
    ->condition('object_type', $object_type,'=')
    ->condition('oid', $oid,'=')
    ->execute();
  if ($num_deleted > 0) 
  {
	watchdog('ga_capture', t('oid: !oid, object_type: !object_type was also deleted from ga_capture_data.', array('!oid' => $oid, '!object_type' => $object_type)));
  }  
}


/**
 * Implements hook_permission().
 */
function ga_capture_permission() {
  return array(
    'administer ga_capture' => array(
      'title' => t('Administer module settings'), 
      'description' => t('Perform administrative functions.'),
      'restrict access' => TRUE,
    ),
    'view ga_capture fields' => array(
      'title' => t('View captured data'), 
      'description' => t('View the information collected by Google Analytics.'),
      'restrict access' => TRUE,
    ),
  );
}



/**
 * Generates a generic form for displaying Google Analytics Data.
 */
function _ga_capture_view_form($form, &$form_state, $ga_capture_data)
{
  
  // if no GA Capture Data can be found, return.
  if ($ga_capture_data == '') 
    {
      $form['ga_capture']['not_found'] = array(
        '#type' => 'item',
        '#markup' => t('No Google Analytics Data was captured.'),
      );
      return $form;
    }

    
  // Get a list of fields to display
  $fields_to_display = variable_get('ga_capture_display_fields');
  if (!isset($fields_to_display)) 
  {
    $fields_to_display = array();
  }
  
  if (!isset($form['ga_capture'])) {
    $form['ga_capture'] = array(
      '#type' => 'fieldset', 
      '#title' => t('Google Analytics Data'), 
      '#weight' => 10,
      '#collapsible' => FALSE, 
      '#collapsed' => FALSE,
    );
  }
  
  $form['ga_capture']['ga_source'] = array(
    '#type' => 'item',
    '#title' => t('GA Source'),
    '#markup' => $ga_capture_data['ga_source'],
  );

  $form['ga_capture']['ga_campaign'] = array(
    '#type' => 'item',
    '#title' => t('GA Campaign'),
    '#markup' => $ga_capture_data['ga_campaign'],
  );
  
  $form['ga_capture']['ga_medium'] = array(
    '#type' => 'item',
    '#title' => t('GA Medium'),
    '#markup' => $ga_capture_data['ga_medium'],
  );

  $form['ga_capture']['ga_content'] = array(
    '#type' => 'item',
    '#title' => t('GA Content'),
    '#markup' => $ga_capture_data['ga_content'],
  );

  $form['ga_capture']['ga_term'] = array(
    '#type' => 'item',
    '#title' => t('GA Term'),
    '#markup' => $ga_capture_data['ga_term'],
  );

  $form['ga_capture']['ga_first_visit'] = array(
    '#type' => 'item',
    '#title' => t('GA First Visit Timestamp'),
    '#markup' => format_date($ga_capture_data['ga_first_visit'],'long'),
  );

  $form['ga_capture']['ga_previous_visit'] = array(
    '#type' => 'item',
    '#title' => t('GA Previous Visit Timestamp'),
    '#markup' => format_date($ga_capture_data['ga_previous_visit'],'long'),
  );

  $form['ga_capture']['ga_current_visit'] = array(
    '#type' => 'item',
    '#title' => t('GA Current Visit Timestamp'),
    '#markup' => format_date($ga_capture_data['ga_current_visit'],'long'),
  );

  $form['ga_capture']['ga_times_visited'] = array(
    '#type' => 'item',
    '#title' => t('GA Times Visited'),
    '#markup' => $ga_capture_data['ga_times_visited'],
  );
  
  $form['ga_capture']['gat_first_referrer'] = array(
    '#type' => 'item',
    '#title' => t('GA First Referrer Page'),
    '#markup' => $ga_capture_data['gat_first_referrer'],
  );

  $form['ga_capture']['gat_first_landing'] = array(
    '#type' => 'item',
    '#title' => t('GA First Landing Page'),
    '#markup' => $ga_capture_data['gat_first_landing'],
  );

  $form['ga_capture']['gat_cur_referrer'] = array(
    '#type' => 'item',
    '#title' => t('GA Current Referrer Page'),
    '#markup' => $ga_capture_data['gat_cur_referrer'],
  );

  $form['ga_capture']['gat_cur_landing'] = array(
    '#type' => 'item',
    '#title' => t('GA Current Landing Page'),
    '#markup' => $ga_capture_data['gat_cur_landing'],
  );

  $form['ga_capture']['gat_recent_referrer'] = array(
    '#type' => 'item',
    '#title' => t('GA Most Recent Referrer Page'),
    '#markup' => $ga_capture_data['gat_recent_referrer'],
  );

  $form['ga_capture']['gat_recent_landing'] = array(
    '#type' => 'item',
    '#title' => t('GA Most Recent Page (Current Page)'),
    '#markup' => $ga_capture_data['gat_recent_landing'],
  );
  
  
  // Remove fields that should not be displayed.
  foreach ($fields_to_display as $key => $item) {
    if ($fields_to_display[$key] == '0')
    {
      unset($form['ga_capture'][$key]);
    }
  }  
  return $form;
}



/**
 * Implement hook_views_api().
 */
function ga_capture_views_api() {
  return array(
    'api' => 3,
  );
}


/**
 * Implements hook_views_data().
 */
function ga_capture_views_data()
{
  $data = array();
  $data['ga_capture_data']['table']['group'] = t('GA Capture');

  //$data['ga_capture_data']['table']['base'] = array(
  //  'field' => 'oid',
  //  'title' => t('GA Capture'),
  //  'help' => t('All Google Analytics data captured.'),
  //);

  $data['ga_capture_data']['ga_source'] = array(
      'title' => t('GA Source'),
      'help' => t('Google Analytics Source.'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  );
  $data['ga_capture_data']['ga_campaign'] = array(
      'title' => t('GA Campaign'),
      'help' => t('Google Analytics Campaign.'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  );
  $data['ga_capture_data']['ga_medium'] = array(
      'title' => t('GA Medium'),
      'help' => t('Google Analytics Medium'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  );
  $data['ga_capture_data']['ga_content'] = array(
      'title' => t('GA Content'),
      'help' => t('Google Analytics Content'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  );
  $data['ga_capture_data']['ga_term'] = array(
      'title' => t('GA Term'),
      'help' => t('Google Analytics Term.'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  );
  
  $data['ga_capture_data']['ga_first_visit'] = array(
      'title' => t('GA First Visit Timestamp'),
      'help' => t('Google Analytics First Visit Timestamp'),
      'field' => array(
        'handler' => 'views_handler_field_date', 
        'click sortable' => TRUE,
      ), 
      'sort' => array(
        'handler' => 'views_handler_sort_date',
      ), 
      'filter' => array(
        'handler' => 'views_handler_filter_date',
      ),
  ); 
  $data['ga_capture_data']['ga_previous_visit'] = array(
      'title' => t('GA Previous Visit Timestamp'),
      'help' => t('Google Analytics Previous Visit Timestamp'),
      'field' => array(
        'handler' => 'views_handler_field_date', 
        'click sortable' => TRUE,
      ), 
      'sort' => array(
        'handler' => 'views_handler_sort_date',
      ), 
      'filter' => array(
        'handler' => 'views_handler_filter_date',
      ),
  ); 
  $data['ga_capture_data']['ga_current_visit'] = array(
      'title' => t('GA Current Visit Timestamp'),
      'help' => t('Google Analytics Current Visit Timestamp'),
      'field' => array(
        'handler' => 'views_handler_field_date', 
        'click sortable' => TRUE,
      ), 
      'sort' => array(
        'handler' => 'views_handler_sort_date',
      ), 
      'filter' => array(
        'handler' => 'views_handler_filter_date',
      ),
  ); 
  $data['ga_capture_data']['ga_times_visited'] = array(
      'title' => t('GA Times Visited'),
      'help' => t('Google Analytics Times Visited'),
      'field' => array(
        'handler' => 'views_handler_field_numeric',
        'click sortable' => TRUE,
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
  ); 
  $data['ga_capture_data']['gat_first_referrer'] = array(
      'title' => t('GAT First Referrer to Site'),
      'help' => t('Google Analytics Tokenizer First Referrer to Site'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  ); 
  $data['ga_capture_data']['gat_first_landing'] = array(
      'title' => t('GAT First Landing Page on Site'),
      'help' => t('Google Analytics Tokenizer First Landing Page on Site'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  ); 
  $data['ga_capture_data']['gat_cur_referrer'] = array(
      'title' => t('GAT Current Referrer to Site'),
      'help' => t('Google Analytics Tokenizer Current Referrer to Site'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  ); 
  $data['ga_capture_data']['gat_cur_landing'] = array(
      'title' => t('GAT Current Landing Page on Site'),
      'help' => t('Google Analytics Tokenizer Current Landing Page on Site'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  ); 
  $data['ga_capture_data']['gat_recent_referrer'] = array(
      'title' => t('GAT Most Recent Referrer to Page'),
      'help' => t('Google Analytics Tokenizer Most Recent Referrer to Page'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  ); 
  $data['ga_capture_data']['gat_recent_landing'] = array(
      'title' => t('GAT Most Recent Landing Page (Current Page)'),
      'help' => t('Google Analytics Tokenizer Most Recent Landing Page (Current Page)'),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE,
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument',
      ),
  );   
  return $data;  
  
}