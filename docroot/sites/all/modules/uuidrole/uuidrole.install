<?php

/**
 * @file
 * Install tasks for uuidrole
 */

/**
 * Implements hook_install().
 */
function uuidrole_install() {
  module_load_include('install', 'uuid');

  if (!db_field_exists('role', 'uuid')) {
    db_add_field('role', 'uuid', uuid_schema_field_definition());
  }

  _uuidrole_bulk_update_roles();

  db_add_unique_key('role', 'uuid', array('uuid'));
}

/**
 * Implements hook_uninstall().
 */
function uuidrole_uninstall() {
  db_drop_unique_key('role', 'uuid');
  db_drop_field('role', 'uuid');
}

/**
 * Implements hook_schema_alter().
 */
function uuidrole_schema_alter(&$schema) {
  module_load_include('install', 'uuid');
  // Add field to existing schema.
  $schema['role']['fields']['uuid'] = uuid_schema_field_definition();
  $schema['role']['unique keys']['uuid'] = array('uuid');
}

/**
 *  Bulk add UUIDs to all roles.
 */
function _uuidrole_bulk_update_roles() {
  module_load_include('inc', 'uuid');

  // Resave all roles to generate the UUID as required
  $roles = user_roles();
  foreach ($roles as $key => $role) {
    // Reload the role to include all fields
    $role = user_role_load($key);
    if (empty($role->uuid)) {
      if ($role->rid == DRUPAL_ANONYMOUS_RID) {
        $role->uuid = 'eb3c0c14-76c1-42a5-92de-1a563a27c55f';
      } elseif ($role->rid == DRUPAL_AUTHENTICATED_RID) {
        $role->uuid = '7e8f1b8f-ab12-4e14-a93a-910f18d18717';
      } else {
        $role->uuid = uuid_generate();
        user_role_save($role);
      }
      user_role_save($role);
    }
  }
}
