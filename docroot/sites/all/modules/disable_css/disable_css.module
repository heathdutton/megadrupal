<?php

/**
 * Implements hook_css_alter().
 */
function disable_css_css_alter(&$css) {
  global $theme;

  $disable_files = array();

  // remove all css files from contrib and core modules
  if ( variable_get('disable_css_' . $theme . '_all', FALSE) ) {
    $disable_files = disable_css_get_css_list();
  }
  // remove selected css files
  else {
    if ( $modules = variable_get('disable_css_' . $theme . '_modules', array()) ) {
      $disable_files = array_merge($disable_files, disable_css_get_css_list($modules));
    }

    if ( $files = variable_get('disable_css_' . $theme . '_files', array()) ) {
      $disable_files = array_merge($disable_files, $files);
    }
  }

  $css = array_diff_key($css, $disable_files);
}

/**
 * Implements hook_form_alter().
 */
function disable_css_form_system_theme_settings_alter(&$form, &$form_state, $form_id) {
  if (isset($form_state['build_info']['args'][0]) && ($theme = $form_state['build_info']['args'][0])) {
    $form['disablecss'] = array(
      '#type' => 'fieldset',
      '#title' => t('Disable css files'),
    );

    $form['disablecss']['disable_css_theme'] = array(
      '#type' => 'value',
      '#value' => $theme,
    );

    $form['disablecss']['disable_css_' . $theme . '_all'] = array(
      '#type' => 'checkbox',
      '#title' => t('Disable all css files from core and contrib modules.'),
      '#default_value' => variable_get('disable_css_' . $theme . '_all', FALSE),
    );

    $form['disablecss']['modules'] = array(
      '#type' => 'fieldset',
      '#title' => t('Per module'),
      '#description' => t('Disable all css files from selected modules.'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

    $form['disablecss']['modules']['disable_css_' . $theme . '_modules'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Modules'),
      '#options' => disable_css_get_modules_list(),
      '#default_value' => variable_get('disable_css_' . $theme . '_modules', array()),
    );

    $form['disablecss']['files'] = array(
      '#type' => 'fieldset',
      '#title' => t('Specific css files'),
      '#description' => t('Per file.'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

    $form['disablecss']['files']['disable_css_' . $theme . '_files'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Disable specific css files.'),
      '#options' => disable_css_get_css_list(),
      '#default_value' => variable_get('disable_css_' . $theme . '_files', array()),
    );

    $form['#submit'][] = 'disable_css_form_submit';
  }
}

function disable_css_form_submit($form, &$form_state) {
  $theme = $form_state['values']['disable_css_theme'];

  //all files
  variable_set('disable_css_' . $theme . '_all', $form_state['values']['disable_css_' . $theme . '_all']);

  //modules
  $modules = array_filter($form_state['values']['disable_css_' . $theme . '_modules']);
  variable_set('disable_css_' . $theme . '_modules', $modules);

  //files
  $files = array_filter($form_state['values']['disable_css_' . $theme . '_files']);
  variable_set('disable_css_' . $theme . '_files', $files);
}

function disable_css_get_modules_list($options = FALSE) {
  $modules = $options ? system_list('module_enabled') : module_list();
  asort($modules);

  return $modules;
}

function disable_css_get_css_list($filter = array()) {
  $files = array();
  $enabled_modules = disable_css_get_modules_list(TRUE);

  if (count($filter)) {
    $filter = array_combine($filter, $filter);
    $modules = array_intersect_key($enabled_modules, $filter);
  }
  else {
    $modules = $enabled_modules;
  }

  foreach ($modules as $name => $module) {
    $module_path = pathinfo($module->filename, PATHINFO_DIRNAME);
    $module_css_files = file_scan_directory($module_path, '/.*\.css$/');
    foreach ($module_css_files as $path => $file) {
      $files[$path] = $path;
    }
  }

  return $files;
}
