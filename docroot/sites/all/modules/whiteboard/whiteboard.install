<?php

/**
 * @file
 * Install whiteboard module
 */


/**
 * Implements hook_requirements
 * 
 */
function whiteboard_requirements($phase) {
  if($phase == 'runtime') {
    if (!file_exists($_SERVER['DOCUMENT_ROOT'] . base_path() . '/' . variable_get('whiteboard_js2d_path', NULL))) {
      $requirements['whiteboard_js2d_path'] = array(
        'title' => t('jsDraw2D Library'),
        'value' => t('Not Found'),
        'severity' => REQUIREMENT_WARNING,
        'description' => t('The Whiteboard module requires jsDraw2D library, which can be set in the <a href="!url">whiteboard administration settings</a>.', array('!url' => url('admin/config/media/whiteboard'))),
      );
    }
    else {
      $requirements['whiteboard_js2d_path'] = array(
        'title' => t('jsDraw2D Library'),
        'value' => t('Found'),
        'severity' => REQUIREMENT_OK,
      );
    }
  return $requirements;
  }
}

/**
 * Implements hook_schema().
 */
function whiteboard_schema() {
  $schema['whiteboard'] = array(
    'description' => 'Stores uploaded whiteboards to the database.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'description' => 'The {node}.nid associated with the uploaded whiteboard.',
      ),
      'marks' => array(
        'type' => 'text',
        'size' => 'big',
      ),
    ),
    'primary key' => array('nid'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function whiteboard_install() {
  drupal_set_message(t('Whiteboard installed. Please adjust permissions and the <a href="!url">jsDraw2D library path</a>.', array('!url' => url('admin/config/media/whiteboard'))));
  variable_set('whiteboard_js2d_path', 'sites/all/libraries/jsDraw2D/jsDraw2D.js');
  variable_set('whiteboard_size', 0);
}

/**
 * Implements hook_uninstall().
 */
function whiteboard_uninstall() {
  variable_del('whiteboard_js2d_path');
  variable_del('whiteboard_size');

  $node_type = 'whiteboard';

  $result = db_select('node', 'n')
          ->fields('n', array('nid'))
          ->condition('type', $node_type, '=')
          ->execute();

  foreach ($result as $record) {
    node_delete($record->nid);
  }  
}

