<?php

/**
 * @file
 * Whiteboard module file
 */

module_load_include('inc', 'whiteboard', 'whiteboard.forms');
module_load_include('inc', 'whiteboard', 'whiteboard.theme');

function whiteboard_init() {
  drupal_add_css(drupal_get_path('module', 'whiteboard') . '/whiteboard.css');
  if (!file_exists($_SERVER['DOCUMENT_ROOT'] . base_path() . '/' . variable_get('whiteboard_js2d_path', NULL))) {
      drupal_set_message('jsDraw2D library not found', 'warning', TRUE);
  }
  drupal_add_js(variable_get('whiteboard_js2d_path', 'sites/all/libraries/jsDraw2D/jsDraw2D.js'));
  drupal_add_js(drupal_get_path('module', 'whiteboard') . '/whiteboard.js');
}

/**
 * Implements hook_menu().
 */
function whiteboard_menu() {
  $items['admin/config/media/whiteboard'] = array(
    'title' => 'Whiteboard',
    'description' => 'Control how whiteboards may be attached to content.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('whiteboard_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'whiteboard.admin.inc',
  );

  $items['whiteboard/post'] = array(
    'page callback' => 'whiteboard_post_message',
    'page arguments' => array(),
    'access callback' => TRUE,
    'access arguments' => array(),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_node_info().
 */
function whiteboard_node_info() {
  return array(
    'whiteboard' => array(
      'name' => t('Whiteboard'),
      'base' => 'whiteboard',
      'description' => t('Create and save sketches as nodes'),
    ),
  );
}

function whiteboard_insert($node) {
  $whiteboard = array(
    'nid' => $node->nid,
    'marks' => '',
  );
  drupal_write_record('whiteboard', $whiteboard);

  $format = array(
    'entity_type' => 'node',
    'bundle' => 'whiteboard',
    'deleted' => 0,
    'entity_id' => $node->nid,
    'revision_id' => $node->vid,
    'language' => 'und',
    'delta' => 0,
    'body_value' => '',
    'body_format' => $node->body['body_filter']['format'],
  );
  drupal_write_record('field_data_body', $format);
}



/**
 * Implementation of hook_update().
 */
function whiteboard_update($node) {

  db_update('field_data_body')
    ->fields(array(
      'entity_type' => 'node',
      'bundle' => 'whiteboard',
      'deleted' => 0,
      'entity_id' => $node->nid,
      'revision_id' => $node->vid,
      'language' => 'und',
      'delta' => 0,
      'body_value' => '',
      'body_format' => $node->body['body_filter'],
  ))
  ->condition('entity_id', $node->nid, '=')
  ->execute();
}

function whiteboard_post($node) {
    if (strlen($node->marks) > variable_get('whiteboard_size', 0)) {
      $node->marks = '';
    }
    $whiteboard = array(
      'nid' => $node->nid,
      'marks' => $node->marks,
    );
    drupal_write_record('whiteboard', $whiteboard);
}

/**
 * Implements hook_delete().
 */
function whiteboard_delete(&$node) {
    db_query('DELETE FROM {whiteboard} WHERE nid = :nid', array(':nid' => $node->nid));
    db_delete('field_data_body')->condition('entity_id', $node->nid, '=')->execute();
}

/**
 * Implements hook_view().
 */
function whiteboard_view(&$node, $view_mode) {

    $content = theme('whiteboard_board');

    $result = db_select("whiteboard", 'w')
                    ->fields('w')
                    ->condition('nid', $node->nid, '=')
                    ->execute()
                    ->fetchAssoc();

    $js = array(
      'nodeId' => (int) $node->nid,
      'load_marks' => $result['marks'],
    );

    drupal_add_js(array('whiteboard' => $js), array('type' => 'setting', 'scope' => JS_DEFAULT));

    $filter = db_select("field_data_body", 'f')
                    ->fields('f')
                    ->condition('entity_id', $node->nid, '=')
                    ->execute()
                    ->fetchAssoc();

    if ($result['marks']) {
      $content =  str_replace('<div id="whiteboard">', '<div  id="whiteboard">' . check_markup($result['marks'], $filter['body_format'], 'und'), $content);
    }
    $node->content['whiteboard_board'] = array('#markup' => $content);

    return $node;
}

/**
 * Posted messages are handled here.
 *
 * @return void
 */
function whiteboard_post_message() {
  global $user;
  $result = db_select('node', 'n')
		->fields('n')
		->condition('nid', $_POST['nodeId'], '=')
		->execute()
		->fetchAssoc();
  if(user_access('edit any whiteboard content') || (user_access('edit own whiteboard content') && $user->uid == $result['uid'])) {
    $message = array(
      'nid' => $_POST['nodeId'],
      'marks' => $_POST['message'],
    );
    if (strlen($message['marks']) > variable_get('whiteboard_size', 0)) {
      $message['marks'] = '';
    }

    $save_is_success = whiteboard_save_message($message);

    if ($save_is_success) {
      return TRUE;
    }
    else {
      return FALSE;
    }
  } else {
    return FALSE;
  }
}

/**
 * Write a message to DB
 *
 * @param array $message
 * @return boolean
 */
function whiteboard_save_message($message) {

  # replace extraneous divs
  $message['marks'] = preg_replace("/<div>\n<\/div>/U", '', $message['marks']);
  $message['marks'] = preg_replace("/<div><\/div>/U", '', $message['marks']);
  $message['marks'] = preg_replace("/\n/U", '', $message['marks']);

  $updated = db_update('whiteboard')
               ->fields(array('marks' => $message['marks']))
               ->condition('nid', $message['nid'], '=')
               ->execute();  
  if($updated)
    return TRUE;
  else
    return FALSE;
  
} 

