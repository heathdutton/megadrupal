<?php

/**
 * Implements hook_menu(). Registers callbacks for the app and a configuration
 * page.
 */
function pixgather_menu() {
  $items = array();

  $items['pixgather-photo-upload'] = array(
    'page callback' => 'pixgather_upload_photo',
    'access callback' => true,
    'title' => t('Photo Upload'),
    'page arguments' => array(1),
    'file' => 'pixgather.callbacks.inc',
    'type' => MENU_CALLBACK,
  );

  $items['pixgather-photo-view/%'] = array(
    'page callback' => 'pixgather_view_photos',
    'page arguments' => array(1),
    'title' => t('Photo View'),
    'access callback' => true,
    'file' => 'pixgather.callbacks.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/media/pixgather'] = array(
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('pixgather_upload_settings_form'),
    'title' => t('PixGather Configuration'),
    'description' => t('Set the secret code for photo uploads'),
    'file' => 'pixgather.callbacks.inc'
  );

  return $items;
}

/*
 * Register the upload event for rules.
 */
function pixgather_rules_event_info() {
  return array(
    'pixgather_photo_uploaded' => array(
      'label' => t('A photo was uploaded'),
      'group' => t('PixGather'),
      'module' => 'pixgather',
      'variables' => array(
        'file' => array(
          'type' => 'file',
          'label' => t('The file that was uploaded.'),
        ),
        'name' => array(
          'type' => 'text',
          'label' => t('The attributed name for the photo.'),
        ),
      ),
    ),
  );
}

/**
 * Implements hook_image_default_styles().
 *
 * Defines a pixgather image style for display on the phone.
 */
function pixgather_image_default_styles() {
  $styles = array();

 $styles['pixgather_phone_image'] = array(
    'effects' => array(
      array(
        'name' => 'image_scale', 
        'data' => array(
          'width' => 400,
          'height' => 400,
          'upscale' => 1,
        ), 
        'weight' => 0,
      ),
    ),
  ); 

  return $styles;
}
