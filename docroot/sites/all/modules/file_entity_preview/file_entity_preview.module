<?php
/**
 * @file
 * File Entity preview module.
 */

/**
 * Implements hook_field_widget_info().
 */
function file_entity_preview_field_widget_info() {
  return array(
    'file_entity_preview' => array(
      'label' => t('File entity preview'),
      'field types' => array('file'),
      'settings' => array(
        'progress_indicator' => 'throbber',
      ),
      'behaviors' => array(
        'multiple values' => FIELD_BEHAVIOR_CUSTOM,
        'default value' => FIELD_BEHAVIOR_NONE,
      ),
    ),
  );
}

/**
 * Implements hook_field_widget_settings_form().
 */
function file_entity_preview_field_widget_settings_form($field, $instance) {
  // Get default file widget settings form.
  $form = file_field_widget_settings_form($field, $instance);
  return $form;
}

/**
 * Implements hook_field_widget_form().
 */
function file_entity_preview_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  // Get default file widget form.
  $elements = file_field_widget_form($form, $form_state, $field, $instance, $langcode, $items, $delta, $element);

  // Alter process callbacks.
  $element_info = element_info('managed_file');
  foreach (element_children($elements) as $delta) {
    $elements[$delta]['#process'] = array_merge($element_info['#process'], array('file_entity_preview_field_widget_process'));
  }

  return $elements;
}

/**
 * An element #process callback for the file_generic field type.
 *
 * Expands the file_generic type to include the description and display fields.
 */
function file_entity_preview_field_widget_process($element, &$form_state, $form) {
  // Apply default file widget processing.
  $element = file_field_widget_process($element, $form_state, $form);

  if ($element['fid']['#value'] && $element['#file']) {
    // Add preview to render array.
    $element['preview'] = file_view($element['#file'], 'preview');
    $element['preview']['#prefix'] = '<div class="file-entity-preview">';
    $element['preview']['#suffix'] = '</div>';
    $element['preview']['#weight'] = -15;
  }

  return $element;
}
