<?php
// $Id$
/**
 * @file
 * Install, update and uninstall functions for the oauth_test module.
 */

module_load_include('install', 'oauth');

/**
 * Implements hook_install().
 */
function oauth_provider_install() {

}

/**
 * Implements hook_uninstall().
 */
function oauth_provider_uninstall() {
  oauth_cleanup('oauth_test');
}

/**
 * Implements hook_schema().
 */
function oauth_provider_schema() {
  $schema = array();

  $schema['oauth_consumer'] = array(
    'description' => 'Consumer table.',
    'fields'      => array(
      'id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique consumer ID.',
        'default' => 0,
      ),
      'consumer_key' => array(
        'type'        => 'varchar',
        'length'      => 250,
        'not null'    => TRUE,
        'default' => '',
        'description' => 'Consumer key.',
      ),
      'consumer_secret' => array(
        'type'        => 'varchar',
        'length'      => 250,
        'not null'    => TRUE,
        'default' => '',
        'description' => 'Consumer secret.',
      ),
      'active' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Boolean indicating whether or not the consumer is available.',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['oauth_consumer_nonce'] = array(
    'description' => 'Consumer nonce table.',
    'fields'      => array(
      'id' => array(
      	'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique request ID.',
        'default' => 0,
      ),
      'consumer_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'References {consumer}.id.',
        'default' => 0,
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp of the request.',
      ),
      'nonce' => array(
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
        'description' => "Random string, uniquely generated for each request.",
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'consumer_id' => array(
        'table' => 'consumer',
        'columns' => array('consumer_id' => 'id'),
      ),
    ),
  );

  $schema['oauth_token'] = array(
    'description' => 'Consumer nonce table.',
    'fields'      => array(
      'id' => array(
      	'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique request ID.',
        'default' => 0,
      ),
      'type' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Type of token: Request (1) or Access (2).',
        'default' => 1,
      ),
      'consumer_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'References {consumer}.id.',
        'default' => 0,
      ),
      'token' => array(
        'type'        => 'varchar',
        'length'      => 250,
        'not null'    => TRUE,
        'default' => '',
        'description' => 'Token.',
      ),
      'token_secret' => array(
        'type'        => 'varchar',
        'length'      => 250,
        'not null'    => TRUE,
        'default' => '',
        'description' => 'Token secret.',
      ),
      'callback_url' => array(
        'type'        => 'varchar',
        'length'      => 250,
        'not null'    => TRUE,
        'default' => '',
        'description' => 'Callback URL.',
      ),
      'verifier' => array(
        'type'        => 'varchar',
        'length'      => 250,
        'not null'    => TRUE,
        'default' => '',
        'description' => 'Verifier.',
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'consumer_id' => array(
        'table' => 'consumer',
        'columns' => array('consumer_id' => 'id'),
      ),
    ),
  );

  return $schema;
}