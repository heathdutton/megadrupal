<?php
/**
 * @file
 * Module file for the extra_siteinfo module.
 */

/**
 * Implements hook_help().
 */
function extra_siteinfo_help($path) {
  $output = '';
  switch ($path) {
    case 'admin/help#extra_siteinfo':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Extra Site Information module provides Drush commands and UI level view to see the count of Nodes, Content types, Users, Roles existing in the site.') . '<br/>';
      $output .= t('This module also provides the information about Currently loggedin users in your site.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<p>' . t('Visit "admin/reports/extra-siteinfo" for UI level view of data.') . '</p>';
      $output .= '<dl>';
      $output .= '<dt>' . t('"nodetypecount" command will return the number of Content Types present in the site, you can use command in following ways.') . '</dt>';
      $output .= '<dt>' . t('drush nodetypecount --help') . '</dt>';
      $output .= '<dt>' . t('drush nodetypecount') . '</dt>';
      $output .= '</dl>';
      $output .= '<dl>';
      $output .= '<dt>' . t('"nodecount" command will return the number of Nodes present in the site, you can use command in following ways.') . '</dt>';
      $output .= '<dt>' . t('drush nodecount --help') . '</dt>';
      $output .= '<dt>' . t('drush nodecount') . '</dt>';
      $output .= '<dt>' . t('drush nodecount < content-type-names >') . '</dt>';
      $output .= '<dt>' . t('drush nodecount page article') . '</dt>';
      $output .= '</dl>';
      $output .= '<dl>';
      $output .= '<dt>' . t('"rolecount" command will return the number of Roles present in the site, you can use command in following ways.') . '</dt>';
      $output .= '<dt>' . t('drush rolecount --help') . '</dt>';
      $output .= '<dt>' . t('drush rolecount') . '</dt>';
      $output .= '</dl>';
      $output .= '<dl>';
      $output .= '<dt>' . t('"usercount" command will return the number of Users existing in the site, you can use command in following ways.') . '</dt>';
      $output .= '<dt>' . t('drush usercount --help') . '</dt>';
      $output .= '<dt>' . t('drush usercount') . '</dt>';
      $output .= '<dt>' . t('drush usercount < role-ids >') . '</dt>';
      $output .= '<dt>' . t('drush usercount 3 4') . '</dt>';
      $output .= '</dl>';
      $output .= '<div>' . t('For Currently loggedin users in your site.') . '</div>';
      $output .= '<div>' . t('Visit "admin/reports/extra-siteinfo/currently-loggedin-users".') . '</div>';
      $output .= '<div>' . t('You can end the session of any user by clicking "end session" button.') . '</div>';
  }
  return $output;
}

/**
 * Implements hook_permission().
 */
function extra_siteinfo_permission() {
  return array(
    'administer extra site info' => array(
      'title' => t('Administer Extra Siteinfo'),
      'description' => t('Access Extra Site Info page'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function extra_siteinfo_menu() {
  $items['admin/reports/extra-siteinfo'] = array(
    'title' => 'Extra Site Information',
    'description' => 'Site information includes content, content type, users, roles.',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer extra site info'),
    'page callback' => 'extra_siteinfo_page',
  );
  $items['admin/reports/extra-siteinfo/currently-loggedin-users'] = array(
    'title' => 'Currently Loggedin Users',
    'description' => 'Lists the users who are currently loggedin.',
    'file' => 'extra_siteinfo.inc',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer extra site info'),
    'page callback' => 'extra_siteinfo_currently_loggedin_users_page',
  );
  $items['admin/reports/extra-siteinfo/currently-loggedin-users/end-session/%'] = array(
    'title' => 'Currently Loggedin Users',
    'description' => 'Lists the users who are currently loggedin.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extra_siteinfo_currently_loggedin_users_page_end_session', 5),
    'access arguments' => array('administer extra site info'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'extra_siteinfo.inc',
  );
  $items['extra-siteinfo'] = array(
    'file' => 'extra_siteinfo.inc',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer extra site info'),
    'page callback' => 'extra_siteinfo_filters',
  );
  return $items;
}

/**
 * Callback function, which returns extra information of site.
 */
function extra_siteinfo_page() {
  $output = array(
    'title' => array(
      '#markup' => t('This Extra Site Information contains sites details like numbers of nodes, types, users, roles exist in this site.'),
    ),
    'content' => array(
      '#title' => 'Content',
      '#items' => extra_siteinfo_get_node_data(),
      '#theme' => 'item_list',
    ),
    'content_type' => array(
      '#title' => 'Content Type',
      '#items' => extra_siteinfo_get_node_type_data(),
      '#theme' => 'item_list',
    ),
    'users' => array(
      '#title' => 'Users',
      '#theme' => 'item_list',
      '#items' => extra_siteinfo_get_users_data(),
    ),
    'roles' => array(
      '#title' => 'Users Role',
      '#theme' => 'item_list',
      '#items' => extra_siteinfo_get_users_role_data(),
    ),
    'currently_logged_in_users' => array(
      '#title' => 'Currently Logged In Users',
      '#theme' => 'item_list',
      '#items' => extra_siteinfo_get_currently_loggedin_users_data(),
    ),
  );
  return $output;
}

/**
 * Function displays content information.
 *
 * @return array
 *   A form array gets the node data.
 */
function extra_siteinfo_get_node_data() {
  global $base_url;
  return array(
    t('Total Number of Nodes : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('node', 'EMTPY', 'NULL'),
        '@cd' => $base_url . '/extra-siteinfo/nodes/all',
      )
    ),
    t('Number of Published nodes : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('node', '1', 'NULL'),
        '@cd' => $base_url . '/extra-siteinfo/nodes/status/status-1',
      )
    ),
    t('Number of Unpublished nodes : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('node', '0', 'NULL'),
        '@cd' => $base_url . '/extra-siteinfo/nodes/status/status-0',
      )
    ),
  );
}

/**
 * Function returns content type data.
 *
 * @return array
 *   A form array gets the content type data.
 */
function extra_siteinfo_get_node_type_data() {
  global $base_url;
  $nodes_of_types = array(
    t('Total Number of Content Types : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('node_type', 'EMTPY', 'NULL'),
        '@cd' => $base_url . '/admin/structure/types',
      )
    ),
  );
  $nodes_of_type = extra_siteinfo_get_data('node', 'EMTPY', 'TYPE');
  foreach ($nodes_of_type as $node_type) {
    $nodes_of_types[] = $node_type;
  }
  return $nodes_of_types;
}

/**
 * Function display users data.
 *
 * @return array
 *   A form array gets the users data.
 */
function extra_siteinfo_get_users_data() {
  global $base_url;
  return array(
    t('Total Number of Users : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('users', 'EMTPY', 'NULL'),
        '@cd' => $base_url . '/extra-siteinfo/users/all',
      )
    ),
    t('Number of Active Users : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('users', '1', 'NULL'),
        '@cd' => $base_url . '/extra-siteinfo/users/status/1',
      )
    ),
    t('Number of Blocked Users : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('users', '0', 'NULL'),
        '@cd' => $base_url . '/extra-siteinfo/users/status/0',
      )
    ),
  );
}

/**
 * Function returns users role data.
 *
 * @return array
 *   A form array gets users role data.
 */
function extra_siteinfo_get_users_role_data() {
  global $base_url;
  $users_role_data = array(
    t('Total Number of Roles : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => extra_siteinfo_get_data('role', 'EMTPY', 'NULL'),
        '@cd' => $base_url . '/admin/people/permissions/roles',
      )
    ),
  );
  $user_role_data = extra_siteinfo_get_data('users_roles', 'EMTPY', 'ROLE');
  foreach ($user_role_data as $user_role) {
    $users_role_data[] = $user_role;
  }
  return $users_role_data;
}

/**
 * Function returns currently logged in users.
 *
 * @return array
 *   A form array gets the currently logged in users data.
 */
function extra_siteinfo_get_currently_loggedin_users_data() {
  global $base_url;
  $num_of_currently_loggedin_users = db_select('sessions', 's')
    ->fields('s', array('uid'))
    ->distinct()
    ->execute()
    ->rowCount();
  return array(
    // If showing "1", then you are the only one user who is currently loggedin.
    t('Currently logged-in users : @ex_get_data (<a href ="@cd">click here for details</a>)',
      array(
        '@ex_get_data' => $num_of_currently_loggedin_users,
        '@cd' => $base_url . '/admin/reports/extra-siteinfo/currently-loggedin-users',
      )
    ),
  );
}

/**
 * Function returns the data, based on particular conditions.
 *
 * @return array
 *   A array of data fetched from database to the required function.
 */
function extra_siteinfo_get_data($table, $status, $type) {
  global $base_url;
  if ($status == 'EMTPY') {
    $output = array();
    if ($type == 'TYPE') {
      $type_result = db_select('node_type', 't')
        ->fields('t', array('type', 'name'))
        ->execute();
      while ($type_record = $type_result->fetchAssoc()) {
        $node_result = db_select($table, 't')
          ->fields('t')
          ->condition('type', $type_record['type'], '=')
          ->execute();
        $output[$type_record['name']] = t(
          'Number of @ex_name type nodes : @ex_count (<a href ="@cd">click here for details</a>)',
          array(
            '@ex_name' => $type_record['name'],
            '@ex_count' => $node_result->rowCount(),
            '@cd' => $base_url . '/extra-siteinfo/nodes/type/' . $type_record['type'],
          )
        );
      }
      return $output;
    }
    elseif ($type == 'ROLE') {
      $count = '';
      $type_result = db_select('role', 'u')
        ->fields('u', array('rid', 'name'))
        ->execute();
      while ($type_record = $type_result->fetchAssoc()) {
        if ($type_record['rid'] != 1 && $type_record['rid'] != 2) {
          $node_result = db_select($table, 't')
            ->fields('t')
            ->condition('rid', $type_record['rid'], '=')
            ->execute();
          $output[$type_record['name']] = t(
            'Number of @ex_name Users : @ex_count (<a href ="@cd">click here for details</a>)',
            array(
              '@ex_name' => $type_record['name'],
              '@ex_count' => $node_result->rowCount(),
              '@cd' => $base_url . '/extra-siteinfo/users/role/' . $type_record["rid"],
            )
          );
          $count = $count + $node_result->rowCount();
        }
      }
      $count_total = db_select('users', 't')
        ->fields('t')
        ->execute()
        ->rowCount();
      $output['total'] = t(
        'Their are total @ex_count_total "authenticated role" users, in those  @ex_get_data_count users do not have any roles assigned, these users are just Authenticated user',
        array(
          '@ex_count_total' => $count_total,
          '@ex_get_data_count' => $count_total - $count,
        )
      );
      return $output;
    }
    else {
      return db_select($table, 't')
        ->fields('t')
        ->execute()
        ->rowCount();
    }
  }
  else {
    return db_select($table, 't')
      ->fields('t')
      ->condition('status', $status, '=')
      ->execute()
      ->rowCount();
  }
}
