<?php

/**
 * @file
 * Install file for taxonomy module.
 */

/**
 * Implements hook_install().
 */
function private_taxonomy_install() {
  // Make all existing vocabularies non-private by default.
  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vocabulary) {
    $sql = 'INSERT INTO {private_vocabularies} VALUES (:vid, 0)';
    db_query($sql, array(':vid' => $vocabulary->vid));
  }
}

/**
 * Implements hook_uninstall().
 */
function private_taxonomy_uninstall() {
  drupal_load('module', 'private_taxonomy');
  $vocabularies = private_taxonomy_get_private_vocabularies();
  $names = array();
  foreach ($vocabularies as $vocabulary) {
    $names[] = $vocabulary->name;
  }
  if (count($names)) {
    drupal_set_message(t("The following private vocabularies have been made public; you may want to delete them: @vocabs", array("@vocabs" => implode(', ', $names))), 'warning');
  }
}

/**
 * Implements hook_schema().
 */
function private_taxonomy_schema() {
  $schema = array();
  $schema['user_term'] = array(
    'description' => 'A table to link terms to users.',
    'fields' => array(
      'uid' => array(
        'description' => 'The primary identifier for a user.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'tid' => array(
        'description' => 'The primary identifier for a term.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('uid', 'tid'),
  );

  $schema['private_vocabularies'] = array(
    'description' => 'Stores information about private vocabularies.',
    'fields' => array(
      'vid' => array(
        'description' => 'The primary identifier for a vocabulary.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'private' => array(
        'description' => 'Set the vocabulary to private.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('vid'),
  );
  return $schema;
}

/**
 * Implements hook_field_schema().
 */
function private_taxonomy_field_schema($field) {
  $columns = array(
    'tid' => array(
      'type' => 'int',
      'length' => 10,
      'unsigned' => TRUE,
    ),
  );

  return array(
    'columns' => $columns,
    'indexes' => array(),
  );
}
