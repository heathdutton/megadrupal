<?php

/**
 * @file
 * Module of pusher API
 */

/**
 * Implements hook_library().
 */
function pusher_api_library() {
  $libraries['pusher-api'] = array(
    'title' => 'Pusher API',
    'version' => '1.0', // TODO is this correct?
    'js' => array(
      'http://js.pusher.com/1.11/pusher.min.js' => array(
        'type' => 'external',
        'group' => JS_LIBRARY,
      ),
      array(
        'type' => 'setting',
        'data' => array('pusher_api' => array('appkey' => variable_get('pusher_api_appkey', '')))
      ),
    ),
  );

  $script = '<script src="http://js.pusher.com/1.11/pusher.min.js" type="text/javascript"></script>';

  return $libraries;
}

/**
 * Implements hook_init().
 */
function pusher_api_init() {
  if (user_access('access pusher api')) {
    _pusher_api_check_forlib(); // TODO Every page load is a bit overkill?
    drupal_add_library('pusher_api', 'pusher-api');
  }
}

/**
 * Implements hook_permission().
 */
function pusher_api_permission() {
  return array(
    'administer pusher api' => array(
      'title' => t('administer pusher api'),
      'description' => t('TODO Add a description for \'administer pusher api\''),
    ),
    'access pusher api' => array(
      'title' => t('Access Pusher API'),
      'description' => t('Enable this to allow users to make use of the Pusher API'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function pusher_api_menu() {
  $items['admin/config/services/pusher_api'] = array(
    'title' => 'Pusher api',
    'description' => 'Pusher API settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pusher_api_settings'),
    'access arguments' => array('administer pusher api'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of the settings page form.
 */
function pusher_api_settings() {
  $form = array();
  $form['pusher_api_appid'] = array(
    '#title' => t('Pusher API app id'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => variable_get('pusher_api_appid', ''),
  );
  $form['pusher_api_appkey'] = array(
    '#title' => t('Pusher API app key'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => variable_get('pusher_api_appkey', ''),
  );
  $form['pusher_api_appsecret'] = array(
    '#title' => t('Pusher API app secret'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#default_value' => variable_get('pusher_api_appsecret', ''),
  );
  return system_settings_form($form);
}

/**
 * Check if Pusher library is installed
 */
function _pusher_api_check_forlib() {
  $name = 'pusher_api';
  $exist = FALSE;
  if ($path = libraries_get_path($name)) {
    $exist = TRUE;
    if (!file_exists($path . '/Pusher.php')) {
      $exist = FALSE;
    }
  }
  if (!$exist) {
    drupal_set_message(t('Pusher API installed, but missing Pusher.php library. Please make sure Pusher.php library is available at sites/all/libraries/pusher_api/Pusher.php. The library can be downloaded from https://github.com/squeeks/Pusher-PHP'), 'error');
  }
}

/**
 * Include the Pusher library
 */
function _pusher_api_require() {
  $name = 'pusher_api';
  if ($path = libraries_get_path($name)) {
    if (file_exists($path . '/Pusher.php')) {
      require DRUPAL_ROOT . '/' . $path . '/Pusher.php'; // TODO Why?
    }
  }
}

/**
 * Push some data to Pusher
 */
function pusher_api_push($channel, $eventname, $data = FALSE, $module = FALSE) {
  if (!empty($data)) {
    _pusher_api_require();
    $keys = pusher_api_get_keys($module);

    $pusher = new Pusher($keys['appkey'], $keys['appsecret'], $keys['appid']);
    $pusher->trigger($channel, $eventname, $data);
  }
}

/**
 * Function to retrieve the keys used to communicate with Pusher.
 */
function pusher_api_get_keys($module = FALSE) {
  $keys = array();
  if ($module) {
    $appid = variable_get($module . '_pusher_api_appid', '');
    $appkey = variable_get($module . '_pusher_api_appkey', '');
    $appsecret = variable_get($module . '_pusher_api_appsecret', '');

    if (!empty($appid)) {
      $keys['appid'] = $appid;
    }
    else {
      $keys['appid'] = variable_get('pusher_api_appid', '');
    }

    if (!empty($appkey)) {
      $keys['appkey'] = $appkey;
    }
    else {
      $keys['appkey'] = variable_get('pusher_api_appkey', '');
    }

    if (!empty($appsecret)) {
      $keys['appsecret'] = $appsecret;
    }
    else {
      $keys['appsecret'] = variable_get('pusher_api_appsecret', '');
    }
  }
  else {
    $keys['appid'] = variable_get('pusher_api_appid', '');
    $keys['appkey'] = variable_get('pusher_api_appkey', '');
    $keys['appsecret'] = variable_get('pusher_api_appsecret', '');
  }

  return $keys;
}
