<?php

/**
 * @file
 * Single User Role module file.
 *
 * It contains alterations to restric particular user role to authenticated or
 * any other role.
 */

/**
 * Implements hook_form_alter().
 */
function single_user_role_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_register_form' || $form_id == 'user_profile_form') {
    // Set user role field name.
    $role_field_name = 'roles';
    if (module_exists('role_delegation')) {
      if (!user_access('administer permissions')) {
        $role_field_name = 'roles_change';
      }
    }
    // Change role field type from checkbox to select or radio field.
    $form['account'][$role_field_name]['#type'] = variable_get('single_user_role_field_type', 'select');
    $form['account'][$role_field_name]['#multiple'] = FALSE;
    // Set role field helptext.
    $form['account'][$role_field_name]['#description'] = variable_get('single_user_role_field_desc', '');
    // Set role field title singular.
    $form['account'][$role_field_name]['#title'] = t('Role');
    // Remove authenticated user checkbox.
    $form['account'][$role_field_name][2]['#access'] = FALSE;
    // Set default role.
    foreach($form['account'][$role_field_name]['#default_value'] as $key => $value){
      if($value != 2){
		// Set first assigned role as default.
        $form['account'][$role_field_name]['#default_value'] = $value;
        break;
      }
    }
    $form['account'][$role_field_name][2]['#access'] = FALSE;
  }
}

/**
 * Implements hook_menu().
 */
function single_user_role_menu() {
  // Single user role configuration form callback.
  $items['admin/config/people/single-user-role'] = array(
    'title' => 'Single role Settings',
    'description' => 'Manage Single User Role configurations',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('single_user_role_config_form'),
    'access arguments' => array('single user role config'),
    'file' => 'single_user_role.admin.inc',
    'type' => MENU_CALLBACK,
    'weight' => 10,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function single_user_role_permission() {
  // Set permission for managing module configurations.
  return array(
    'single user role config' => array(
      'title' => t('Perform administration tasks for single user role.'),
    ),
  );
}

/**
 * Implements hook_user_presave().
 */
function single_user_role_user_presave(&$edit, $account, $category) {
  if (!is_array($edit['roles'])) {
    // Set authenticated user role with single role selected.
    $edit['roles'] = array(
      $edit['roles'] => $edit['roles'],
      2 => '1',
    );
  }
}

/**
 * Implements hook_help().
 */
function single_user_role_help($path, $arg) {
  switch ($path) {
    case 'admin/config/people/single-user-role':
      return '<p>' . t("This page allows to administer single user role module's configuration settings.") . '</p>';
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function single_user_role_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    if (module_exists('role_delegation')) {
      // Rearrange form alter to run after role delegation.
      $single_user_role = $implementations['single_user_role'];
      unset($implementations['single_user_role']);
      $role_delegation = $implementations['role_delegation'];
      unset($implementations['role_delegation']);
      $implementations['role_delegation'] = $role_delegation;
      $implementations['single_user_role'] = $single_user_role;
    }
  }
}
