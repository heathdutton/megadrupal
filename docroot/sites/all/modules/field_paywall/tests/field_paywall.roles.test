<?php

/**
 * @file
 * Tests for role activation of Paywall field.
 *
 * Uses Field API field_test helpers.
 */

/**
 * Tests for Paywall field role conditions.
 */
class FieldPaywallRolesTestCase extends NodeWebTestCase {
  protected $field;
  protected $instance;
  protected $webUser;

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name'  => 'Paywall field',
      'description'  => 'Test whether the Paywall field is only visible for given roles.',
      'group' => 'Paywall field',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp('field_paywall');
    $this->webUser = $this->drupalCreateUser(array('create page content', 'edit own page content'));
    $this->drupalLogin($this->webUser);
  }

  /**
   * Test role based Paywall field activation.
   */
  protected function testPaywallRoles() {
    $default_message = 'Default message';
    $body_field_text = 'Body field text';

    // Create a field with settings to validate.
    $this->field = array(
      'field_name' => drupal_strtolower($this->randomName()),
      'type' => 'field_paywall',
      'settings' => array(),
    );
    field_create_field($this->field);
    $this->instance = array(
      'field_name' => $this->field['field_name'],
      'entity_type' => 'node',
      'bundle' => 'page',
      'widget' => array(
        'type' => 'field_paywall_widget',
      ),
      'display' => array(
        'default' => array(
          'type' => 'field_paywall_default',
        ),
      ),
      'default_value' => array(
        0 => array(
          'message' => $default_message,
          'roles' => array(
            1 => 1,
          ),
          'fields_hidden' => array(
            'body',
          ),
        ),
      ),
    );
    field_create_instance($this->instance);

    // Display creation form.
    $this->drupalGet('node/add/page');
    $langcode = LANGUAGE_NONE;

    // Set the test message.
    $edit = array(
      'title' => drupal_strtolower($this->randomName()),
      'body[und][0][value]' => $body_field_text,
      "{$this->field['field_name']}[$langcode][paywall][enabled]" => 'checked',
    );
    $this->drupalPost(NULL, $edit, t('Save'));

    $this->assertNoRaw($default_message, 'Paywall message is not displayed for authenticated role.');
    $this->assertRaw($body_field_text, 'Body field text is shown for authenticated role.');
    $node_url = $this->getUrl();

    $this->drupalLogout();
    $this->drupalGet($node_url);
    $this->assertRaw($default_message, 'Paywall message is displayed for anonymous role.');
    $this->assertNoRaw($body_field_text, 'Body field text is hidden for anonymous role.');
  }
}
