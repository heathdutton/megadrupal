<?php

/**
 * @file
 *   Add ability to set image field link to an image preset
 *
 * Developed by Gabor Szanto.
 *  hello@szantogabor.com
 *  http://szantogabor.com
 */

/**
 * Implements hook_field_formatter_settings_form_alter().
 */
function img_link_to_preset_field_formatter_settings_form_alter(array &$settings_form, array $context) {
  $display = $context['instance']['display'][$context['view_mode']];
  $image_styles = _img_link_to_preset_build_image_style_array();

  if ($display['type'] == 'image') {
    $settings_form['image_link']['#options'] += $image_styles;
  }
}

/**
 * Implements hook_field_formatter_settings_summary_alter().
 */
function img_link_to_preset_field_formatter_settings_summary_alter(&$summary, array $context) { 
  if ($context['field']['type'] != "image") {
    return; // do nothing, not an image field
  }

  $display = $context['instance']['display'][$context['view_mode']];
  $settings = $display['settings'];
  $image_styles_read = _img_link_to_preset_build_image_style_array();
  $summary = array();

  // This part of code is based on original core's
  // hook_field_formatter_settings_summary implementation.
  $image_styles = image_style_options(FALSE);
  // Unset possible 'No defined styles' option.
  unset($image_styles['']);
  // Styles could be lost because of enabled/disabled modules that defines
  // their styles in code.
  if (isset($image_styles[$settings['image_style']])) {
    $summary[] = t('Image style: @style', array('@style' => $image_styles[$settings['image_style']]));
  }
  else {
    $summary[] = t('Original image');
  }

  $link_types = array(
    'content' => t('Linked to content'),
    'file' => t('Linked to file'),
  );

  // Display this setting only if image is linked to an original core's part.
  if (isset($link_types[$settings['image_link']])) {
    $summary[] = $link_types[$settings['image_link']];
  }

  // Display this setting only if image is linked to to an image preset.
  if (isset($image_styles_read[$settings['image_link']])) {
    $summary[] = t('Linked to @style', array('@style' => $image_styles_read[$settings['image_link']]));
  }

  $summary = implode('<br />', $summary);
}

/**
 * Implements hook_field_attach_view_alter().
 */
function img_link_to_preset_field_attach_view_alter(&$output, $context) {
  foreach (element_children($output) as $field_name) {
    $image_styles = image_style_options(FALSE);
    $element = $output[$field_name];
    $instance = field_info_instance($element['#entity_type'], $field_name, $element['#bundle']);
    $display = isset($instance['display'][$context['view_mode']]) ? $instance['display'][$context['view_mode']] : $instance['display']['default'];

    // It seems, it is necessary to render views formatters as well.
    $settings = isset($context['display']['settings']) ? $context['display']['settings'] : $display['settings'];

    // Continue when no linked field settings were found.
    if (!isset($settings['image_link']) || !in_array($settings['image_link'], $image_styles)) {
      continue;
    }

    foreach (element_children($element) as $item) {
      if ($element[$item]['#path'] === '') {
        $element[$item]['#path']['path'] = image_style_url($settings['image_link'], $element[$item]['#item']['uri']);
        // This is set because php notice on theme_image_formatter(). @todo: what does it do exactly?
        $element[$item]['#path']['options'] = array();
        $output[$field_name] = $element;
      }
    }
  }
}

/**
 * Helper function to build user friendly names for image presets
 *
 * @return array
 *   keyed by image style machine name, add text Image style: as value.
 */
function _img_link_to_preset_build_image_style_array() {
  $image_styles = image_style_options(FALSE);

  foreach ($image_styles as &$style) {
    $style = t('Image style: @style', array('@style' => $style));
  }

  return $image_styles;
}

