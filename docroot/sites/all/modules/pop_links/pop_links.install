<?php

/**
 * @file
 * Contains install for pop_links
 */

/**
 * Implementation of hook_install().
 */
function pop_links_install() {
  if (!db_table_exists('pop_links_stats')) {
    drupal_install_schema('pop_links');
  }
}

/**
 * Implementation of hook_schema().
 */
function pop_links_schema() {
  $schema['pop_links_stats'] = array(
    'fields' => array(
      'cid' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'nid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'url' => array('type' => 'varchar', 'length' => 255, 'not null' => FALSE),
      'uid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'hostname' => array('type' => 'varchar', 'length' => 128, 'not null' => FALSE),
      'timestamp' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    ),
    'primary key' => array('cid'),
    'indexes' => array(
      'nid' => array('nid'),
    ),
  );
  return $schema;
}

/**
 * Implementation of hook_uninstall().
 */
function pop_links_uninstall() {
  drupal_uninstall_schema('pop_links');

  variable_del('pop_links_vote_life');
  variable_del('pop_links_stats_life');
  variable_del('pop_links_node_types');
  variable_del('pop_links_track_roles');
  
  db_delete('votingapi_vote')
    ->condition('tag', 'pop_links')
    ->execute();
  db_delete('votingapi_cache')
    ->condition('tag', 'pop_links')
    ->execute();
}