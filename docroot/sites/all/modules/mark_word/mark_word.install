<?php

/**
 * The installer file for quiz words.
 * @file
 */

/**
 * Implementation of hook_install().
 */
function mark_word_install() {
  // Add body field to quiz words node
  quiz_question_add_body_field('mark_word');
  variable_set('node_options_mark_word', array('status'));
  cache_clear_all('autoload:', 'cache');

  $machine_name = 'mark_word_type';
  $query = db_select('taxonomy_vocabulary', 'n')
      ->fields('n', array('vid'))
      ->condition('n.machine_name', $machine_name, '=')
      ->execute();
  $data = $query->fetchObject();
  if (!isset($data->vid)) {
    // Create a default vocabulary named "Mark the words type".
    $vocabulary = (object) array(
      'name' => st('Mark the words type'),
      'description' => st('Vocabulary used with question type Mark the words.'),
      'machine_name' => 'mark_word_type',
      'help' => st('Enter the terms that you would like to use in Mark the words question'),
    );
    taxonomy_vocabulary_save($vocabulary);
    $vid = $vocabulary->vid;
    $terms = array(
      array(
        'name' => 'Noun',
        'description' => '',
        'parent' => array(0),
        'vid' => $vid,
      ),
      array(
        'name' => 'Verb',
        'description' => '',
        'parent' => array(0),
        'vid' => $vid,
      ),
      array(
        'name' => 'Adjective',
        'description' => '',
        'parent' => array(0),
        'vid' => $vid,
      ),
    );
    foreach ($terms as $term) {
      $term = (object) $term;
      taxonomy_term_save($term);
    }
  }

  $instance = array();
  // Add field_mark_word_type field
  if (!field_info_field('field_mark_word_type')) {
    $field = array(
      'field_name' => 'field_mark_word_type',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          ),
        ),
      ),
    );

    field_create_field($field);
    $url = url('admin/structure/taxonomy/mark_word_type/add', array('absolute' => TRUE));
    $instance['field_mark_word_type'] = array(
        'field_name' => 'field_mark_word_type',
        'entity_type' => 'node',
        'label' => 'Category',
        'description' => 'Select the category of words that user need to identify. More terms can be added to this list from taxonomy <a href="'. $url .'">admin page</a>.',
        'bundle' => 'mark_word',
        'required' => TRUE,
        'widget' => array(
            'type' => 'options_select'
        ),
        'display' => array(
            'default' => array('type' => 'hidden'),
            'teaser' => array('type' => 'hidden')
        )
    );
  }

  // Add Answer field
  if (!field_info_field('field_mark_word_answer')) {
    # Create the field singleton
    $field = array(
      'field_name' => 'field_mark_word_answer',
      'type' => 'text',
    );
    $field = field_create_field($field);

    # Create the instance on the bundle.
    $instance['field_mark_word_answer'] = array(
      'field_name' => 'field_mark_word_answer',
      'entity_type' => 'node',
      'bundle' => 'mark_word',
      'label' => 'Answer',
      'required' => FALSE,
      'settings' => array(
        'user_register_form' => 1,
      ),
      'widget' => array(
        'type' => 'textfield',
      ),
      'display' => array(
        'default' => array('label' => 'hidden'),
      ),
    );
  }

  if (!empty($instance)) {
    foreach ($instance as $instance_field) {
      field_create_instance($instance_field);
    }
  }
}


/**
 * Implementation of hook_schema().
 */
function mark_word_schema() {
  // User answers go in here.
  $schema['mark_word_user_answers'] = array(
    'fields' => array(
      'answer_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'question_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'question_vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'result_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'score' => array(
        'type' => 'float',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'answer' => array(
        'type' => 'text'
      ),
    ),
    'primary key' => array('answer_id'),
    'unique keys' => array(
      'ids' => array('result_id', 'question_nid', 'question_vid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function mark_word_uninstall() {
  // delete vocabulary mark_word_type
  $mark_word_type = taxonomy_vocabulary_machine_name_load('mark_word_type');
  $vid = $mark_word_type->vid;
  taxonomy_vocabulary_delete($vid);

  // delete field and instance field_mark_word_type
  $instance = field_info_instance('node', 'field_mark_word_type', 'mark_word');
  field_delete_instance($instance);
  field_delete_field('field_mark_word_type');

  // delete field & instance field_mark_word_answer
  $instance = field_info_instance('node', 'field_mark_word_answer', 'mark_word');
  field_delete_instance($instance);
  field_delete_field('field_mark_word_answer');
  $t = get_t();
  drupal_set_message($t("The Mark Word module has been uninstalled. Mark Word nodes may still exist, but they will not function properly."));
}
