<?php

/**
 * @file
 * Chained selects form API that uses "Chained Selects jQuery Plugin".
 *
 * jQuery plugin: http://www.appelsiini.net/2010/jquery-chained-selects
 * @code
 * $options = array(
 *   'bmw' => t('BMW'),
 *   'audi' => t('Audi'),
 * );
 *
 * $form['mark'] = array(
 *   '#type' => 'select',
 *   '#title' => t('Select 1'),
 *   '#options' => $options,
 *   '#attributes' => array('id' => 'chained-selects-mark'),
 *   '#default_value' => 'audi',
 * );
 *
 * $options = array(
 *   'series-3' => t('3 series'),
 *   'series-5' => t('5 series'),
 *  'series-6' => t('6 series'),
 *
 *   'a3' => t('A3'),
 *   'a4' => t('A4'),
 *   'a5' => t('A5'),
 * );
 *
 * $options_attributes = array(
 *   'series-3' => array('class' => 'bmw'),
 *   'series-5' => array('class' => 'bmw'),
 *   'series-6' => array('class' => 'bmw'),
 *
 *    'a3' => array('class' => 'audi'),
 *   'a4' => array('class' => 'audi'),
 *   'a5' => array('class' => 'audi'),
 * );
 *
 * $form['series'] = array(
 *   '#type' => 'select',
 *   '#title' => t('Select 2'),
 *   '#options' => $options,
 *   '#options_attributes' => $options_attributes,
 *   '#attributes' => array('id' => 'chained-selects-series'),
 *   '#chained_selects' => array(
 *     'parent' => 'chained-selects-mark',
 *     'child' => 'chained-selects-series',
 *   ),
 * );
 * @endcode
 */

/**
 * Implements hook_element_info_alter().
 */
function chained_selects_element_info_alter(&$type) {
  // Add prerender function to select list.
  $type['select']['#pre_render'][] = 'chained_selects_pre_render';
}

/**
 * Pre-render; Add chained selects.
 */
function chained_selects_pre_render($element) {
  if (empty($element['#chained_selects'])) {
    return $element;
  }

  $element['#attached']['js'][] = drupal_get_path('module', 'chained_selects') . '/js/chained_selects.js';
  $element['#attached']['js'][] = libraries_get_path('jquery_chained') . '/jquery.chained.js';

  $settings = array(
    'chainedSelects' => array(
      array(
        'parent' => $element['#chained_selects']['parent'],
        'child' => $element['#chained_selects']['child'],
      )
    ),
  );
  $element['#attached']['js'][] = array(
    'type' => 'setting',
    'data' => $settings,
  );

  return $element;
}


/**
 * Implements hook_theme_registry_alter().
 */
function chained_selects_theme_registry_alter(&$theme_registry) {
  if (!empty($theme_registry['select'])) {
    $theme_registry['select']['function'] = 'chained_selects_select';
  }
}

/**
 * Theme function override for theme_select().
 */
function chained_selects_select($variables) {
  $element = $variables['element'];
  element_set_attributes($element, array('id', 'name', 'size'));
  _form_set_class($element, array('form-select'));

  return '<select' . drupal_attributes($element['#attributes']) . '>' . chained_selects_form_select_options($element) . '</select>';
}

/**
 * Converts a select form element's options array into an HTML.
 *
 * Based on http://drupal.org/node/414562#comment-2017766
 * @see form_select_options().
 */
function chained_selects_form_select_options($element, $choices = NULL) {
  if (!isset($choices)) {
    $choices = $element['#options'];
  }
  // array_key_exists() accommodates the rare event where $element['#value'] is NULL.
  // isset() fails in this situation.
  $value_valid = isset($element['#value']) || array_key_exists('#value', $element);
  $value_is_array = $value_valid && is_array($element['#value']);
  $options = '';
  foreach ($choices as $key => $choice) {
    if (is_array($choice)) {
      $options .= '<optgroup label="' . $key . '">';
      $options .= form_select_options($element, $choice);
      $options .= '</optgroup>';
    }
    elseif (is_object($choice)) {
      $options .= form_select_options($element, $choice->option);
    }
    else {
      $key = (string) $key;
      if ($value_valid && (!$value_is_array && (string) $element['#value'] === $key || ($value_is_array && in_array($key, $element['#value'])))) {
        $selected = ' selected="selected"';
      }
      else {
        $selected = '';
      }

      // Add option attributes.
      $options_attributes = '';
      if (!empty($element['#options_attributes'][$key])) {
        $options_attributes = drupal_attributes($element['#options_attributes'][$key]);
      }
      $options .= '<option value="' . check_plain($key) . '"' . $selected . $options_attributes . '>' . check_plain($choice) . '</option>';
    }
  }
  return $options;
}
