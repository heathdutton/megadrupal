<?php

/**
 * Implements hook_library().
 */
function jquery_tmpl_library() {
  return array(
    'jquery-tmpl' => array(
      'title' => 'jQuery Templates',
      'website' => 'https://github.com/jquery/jquery-tmpl',
      'version' => '1.0.0',
      'js' => array(
        drupal_get_path('module', 'jquery_tmpl') . '/jquery.tmpl.min.js' => array(),
      ),
    ),
  );
}

/**
 * Adds the jQuery TMPL library to the page.
 */
function jquery_tmpl_include_library() {
   drupal_add_library('jquery_tmpl', 'jquery-tmpl');
}

/**
 * Adds a template with name $name to a page from a file/string
 * @param name -      the name to be used as the identifier of this template.
*                     this is added to window[] and Drupal.templates objects
 * @param input -     the string (or file to load as string) to be used as
 *                    the template.
 * @param is_file -   boolean indicating whether $input is the name of a file.
 *                    if true then the file will attempt to be loaded (via include)
 *                    or set an error message if the file doesn't exist. *
 * @param variables - variables to make available to the template file if $input is
 *                    a file. these variables will only be available as the template
 *                    is being loaded for addition to the page, not during client-side
 *                    compilation/execution.
 *
 * Usage 1: add a file
 *    jquery_tmpl_add_template('my_template', drupal_get_path('module', 'my_module') . '/templates/my_template.tpl.js');
 *
 * Usage 2: add a string
 *    jquery_tmpl_add_template('my_template', '<div>{title}</div>', FALSE);
 *
 * In both cases the template can be used by calling:
 *    $.tmpl('my_template', some_data)
 *      OR
 *    $.tmpl(Drupal.templates.my_template, some_data)
 */
function jquery_tmpl_add_template($name, $input, $is_file = TRUE, $variables = array()) {
  $templates = &drupal_static('jquery_tmpl');

  if ($is_file && file_exists($input)) {
    ob_start();
      extract($variables);
      include ($input);
      $input = ob_get_contents();
    ob_end_clean();
  }
  else if ($is_file) {
    drupal_set_message('jQuery TMPL - unable to load file ' . $input, 'error');
  }

  $templates[$name] = $input;
}

/**
 * Implements hook_js_alter().
 */
function jquery_tmpl_js_alter(&$javascript) {
  $templates = drupal_static('jquery_tmpl');

  if (count($templates)) {
    jquery_tmpl_include_library();

    $output = array('jQuery(function($) {');
    $output[] = 'Drupal.templates = {}';
    foreach($templates as $name => $template) {
      $output[] = preg_replace("/[^a-z0-9_]+/", "_", $name) . ' =Drupal.templates["' . $name . '"] = $.template("' . $name . '", ' . json_encode($template) . ');';
    }
    $output[] = '})';

    $javascript['jquery_templates'] = array(
      'type' => 'inline',
      'group' => JS_LIBRARY,
      'weight' => 0,
      'every_page' => FALSE,
      'scope' => 'header',
      'cache' => FALSE,
      'defer' => TRUE,
      'preprocess' => FALSE,
      'data' => implode("\n", $output),
    );
  }
}