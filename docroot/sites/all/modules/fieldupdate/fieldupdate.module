<?php

/**
 * @file
 * Fieldupdate primary module file.
 *
 * It updates default value for existing nodes.
 */

/**
 * Implements hook_form_field_ui_field_edit_form_alter().
 */
function fieldupdate_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
  $allow_update = array('number', 'taxonomy', 'list', 'text');
  if (in_array($form['#field']['module'], $allow_update)) {
    // Add checkbox to under field default value.
    $form['instance']['default_value_widget']['update-default'] = array(
      '#title' => t('Update this with default value.'),
      '#type' => 'checkbox',
      '#default_value' => FALSE,
    );
    // Add new submit handler.
    $form['#submit'][] = '_fieldupdate_submit_handler';
  }
}

/**
 * Perform batch update operation.
 */
function _fieldupdate_submit_handler($form, &$form_state) {
  // If check box is enable this will perfor update operation
  // To avoid unnecessary update even risk purpuse this value is not saved in
  // our system.
  if ($form_state['values']['update-default']) {
    $bundle = $form['#instance']['bundle'];
    $field_name = $form_state['values']['instance']['field_name'];
    // Get field details using field_info_field.
    $field = field_info_field($field_name);
    $field_info = current($field['storage']['details']['sql']['FIELD_LOAD_CURRENT']);
    $field_key = key($field_info);
    $table_col_name = reset($field_info);

    $field_defaul_value = $form_state['values']["$field_name"][LANGUAGE_NONE][0]["$field_key"];
    $table_name = 'field_data_' . $field_name;
    // Query to get all node ids those have to default value.
    $query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->fields('ta', array($table_col_name));
    $query->leftJoin($table_name, 'ta', 'n.nid=ta.entity_id');
    $query->condition('n.type', $bundle);
    $query->isNull($table_col_name);
    $results = $query->execute();

    $operations = array();
    // Add batch operations.
    while ($record = $results->fetchAssoc()) {
      $process_data = array(
        'nid' => $record['nid'],
        'field_name' => $field_name,
        'default' => $field_defaul_value,
        'key' => $field_key,
      );
      $operations[] = array('_fieldupdate_update_default_value_process', array($process_data));
    }
    $batch = array(
      'title' => t('Batch operation process'),
      'operations' => $operations,
      'finished' => '_fieldupdate_update_default_value_process_finish',
      'init_message' => t('Initializing...'),
      'progress_message' => t('Opertation @current out of @total.'),
      'error_message' => t('Found some error here.'),
    );
    batch_set($batch);
  }
}

/**
 * Start batch operation for each row.
 */
function _fieldupdate_update_default_value_process($row, &$context) {
  drupal_set_message(t('Updated node : @nid', array('@nid' => $row['nid'])));
  $node = node_load($row['nid']);
  // Set node object to save this value.
  $node->{$row['field_name']}[$node->language][0][$row['key']] = $row['default'];
  // Update node with new default value.
  field_attach_update('node', $node);
  $context['results'][] = $row['nid'];
}

/**
 * Batch finish function.
 */
function _fieldupdate_update_default_value_process_finish($success, $results, $operations) {
  if ($success) {
    drupal_set_message(t('Total updates: @count.', array('@count' => count($results))));
  }
  else {
    $error_operation = reset($operations);
    drupal_set_message(t('An error occurred while processing @operation with arguments : @args', array(
      '@operation' => $error_operation[0],
      '@args' => print_r($error_operation[0], TRUE),
    )));
  }
}

/**
 * Implements hook_help().
 */
function fieldupdate_help($path, $arg) {
  switch ($path) {
    case 'admin/help#fieldupdate':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module allow to update default value for all old/existing field without updating node publish/last change date. For now this is not compatible with   date, image and file type fields.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<p>' . t('I have a problem with one of my live project, where we need to add new field in our existing content type having lots of existing node. Client want to update this field with a default value for all old/existing nodes.') . '</p>';
      return $output;
  }
}
