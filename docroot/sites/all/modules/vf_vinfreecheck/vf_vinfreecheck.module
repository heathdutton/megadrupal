<?php
/**
 * @file
 *
 * VIN lookup provider module for VinFreeCheck.com
 */

/**
 * Implements hook_libraries_info
 */
function vf_vinfreecheck_libraries_info() {
  $libraries['unirest-php'] = array(
    'name' => 'Unirest for PHP',
    'vendor url' => 'http://unirest.io/php',
    'download url' => 'https://github.com/Mashape/unirest-php',
    'version' => '1.2.1',
    'files' => array(
      'php' => array(
        'lib/Unirest.php',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_vinfield_provider_info
 */
function vf_vinfreecheck_vinfield_provider_info() {
  $items = array();

  $items['vf_vinfreecheck'] = array(
    'title' => 'VinFreeCheck.com',
    'description' => 'VIN lookup provider module for VinFreeCheck.com',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vf_vinfreecheck_settings'),
    'query callback' => 'vf_vinfreecheck_provider_query',
  );

  return $items;
}

/**
 * Settings callback
 */
function vf_vinfreecheck_settings($form, &$form_state) {
  $form['vf_vinfreecheck_x_mashape_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Mashape API Key'),
    '#description' => t('Use of this API requires a Mashape API key which can be created by going to !link', array('!link' => l('https://www.mashape.com/vinfreecheck/vin-decoder', 'https://www.mashape.com/vinfreecheck/vin-decoder', array('attributes' => array('target' => '_blank'))))),
    '#required' => TRUE,
    '#default_value' => variable_get('vf_vinfreecheck_x_mashape_key', ''),
  );

  return system_settings_form($form);
}

/**
 * Implements provider query callback
 *
 * Leverages public API documented here:
 * https://www.mashape.com/vinfreecheck/vin-decoder
 */
function vf_vinfreecheck_provider_query($vin) {
  if (($library = libraries_load('unirest-php')) && !empty($library['loaded'])) {
    $response = Unirest::get("https://vindecoder.p.mashape.com/decode_vin?vin={$vin}",
      array(
        "X-Mashape-Key" => variable_get('vf_vinfreecheck_x_mashape_key', '')
      )
    );
    if ($response->body->success) {
      $spec = $response->body->specification;
      $retval['year'] = $spec->year;
      $retval['make'] = $spec->make;
      $retval['model'] = $spec->model;
      $retval['trim'] = $spec->trim_level;
      $retval['extra'] = (array) $spec;
    }
    else {
      $retval = array(
        '#error' => array(
          'message' => t('Lookup failed'),
        ),
      );
    }
  }
  else {
    $retval = array(
      '#error' => array(
        'message' => t('Required library missing'),
      ),
    );
  }

  return $retval;
}
