<?php

define('NODE_COMMENT_MODERATE_FLAG', 'node_comment_moderate');

/**
 * Implements hook_comment_presave().
 */
function node_comment_moderate_comment_presave($comment) {
  // Skip admin users
  if (!user_access('administer comments')) {
    // Only act on new comments
    if (!isset($comment->cid) || ($comment->cid === NULL)) {
      // Load the flag
      if ($flag = flag_get_flag(NODE_COMMENT_MODERATE_FLAG)) {
        // Load the node
        if ($node = node_load($comment->nid)) {
          // Make sure this flag is attached to this node type
          if (in_array($node->type, $flag->types)) {
            // See if the node has been flagged
            if ($flag->get_count($comment->nid)) {
              // Set this comment as unpublished
              $comment->status = COMMENT_NOT_PUBLISHED;
            }
            else {
              // Set this comment as published
              $comment->status = COMMENT_PUBLISHED;
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_flag_default_flags().
 */
function node_comment_moderate_flag_default_flags() {
  $flags = array();
  $flags[NODE_COMMENT_MODERATE_FLAG] = array(
    'content_type' => 'node',
    'title' => 'Comment per-node moderation',
    'global' => '1',
    'types' => array(),
    'flag_short' => 'Enable comment moderation',
    'flag_long' => 'Force all comments to be approved on this node before being published',
    'flag_message' => 'Comments will now have to be approved before being published',
    'unflag_short' => 'Disable comment moderation',
    'unflag_long' => 'Allow comments to be published on this node without approval',
    'unflag_message' => 'Comments will no longer have to be approved before being published',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => array(),
    'show_on_page' => 1,
    'show_on_teaser' => 0,
    'show_on_form' => 0,
    'access_author' => '',
    'i18n' => 0,
    'module' => 'node_comment_moderate',
    'locked' => array(
      0 => 'name',
    ),
    'api_version' => 2,
  );
  return $flags;
}
