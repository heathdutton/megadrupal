<?php

/**
 * @file
 *  Actions to perform when the module is installed or uninstalled.
 */

/**
 * Implements hook_schema().
 */
function update_trigger_build_jenkins_schema() {

  // @see JenkinsCIServerType
  $schema['update_trigger_build_jenkins_ci_server'] = array(
    'description' => 'The base table for the Jenkins CI Server entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the Jenkins CI Server entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Jenkins CI Server name.',
        'type' => 'varchar',
        'length' => 510,
        'not null' => FALSE,
      ),
      'label' => array(
        'description' => 'Jenkins CI Server label.',
        'type' => 'varchar',
        'length' => 510,
        'not null' => FALSE,
      ),
      'description' => array(
        'description' => 'Jenkins CI Server description.',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'host' => array(
        'description' => 'The Jenkins CI Server host name or IP.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}

function update_trigger_build_install() {
  // Create a bundle on the CI Server entity.
  $bundles = field_info_bundles('ci_server');
  
  if (empty($bundles['ci_server_jenkins'])) {
    // Attach the bundle to the entity.
    $bundle = new stdClass();
    $bundle->type = 'ci_server_jenkins';
    $bundle->label = t('Jenkins CI Server');
    $bundle->is_new = true;
    $bundle->description = t("A Jenkins Continuous Integration Server.");
  
    $controller = new CIServerEntityController('ci_server');
    $controller->save($bundle);
  }
}

/**
 * Implements hook_uninstall().
 */
function update_trigger_build_jenkins_uninstall() {
  drupal_uninstall_schema('update_trigger_build_jenkins');
  field_attach_delete_bundle('ci_server', 'ci_server_jenkins');
}
