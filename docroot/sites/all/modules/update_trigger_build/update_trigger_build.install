<?php

/**
 * @file
 *  Actions to take when this module is installed.
 */

/**
 * Implements hook_schema().
 */
function update_trigger_build_schema() {
  
  $schema = array();
  
  // @see CIBuildScheduleEntity
  $schema['update_trigger_build_ci_build_schedule'] = array(
  	'description' => 'The base table for the CI Build Schedule entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the CI Build Schedule entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'CI Build Schedule machine name.',
        'type' => 'varchar',
        'length' => 510,
        'not null' => FALSE,
      ),
      'label' => array(
        'description' => 'CI Build Schedule label.',
        'type' => 'varchar',
        'length' =>510,
        'not null' => FALSE,
      ),
      'description' => array(
        'description' => 'CI Build Schedule description.',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'default' => NULL
      ),
      'ci_server' => array(
        'description' => 'A reference to the Continuous Integration server entity via its Id.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'ci_job' => array(
        'description' => 'A reference to the CI Job entity via its Id.',
        'type' => 'varchar',
        'length' => 1024,
        'not null' => FALSE,
      ),
      'last_run' => array(
        'description' => 'The last time this build schedule was run.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => '0',
      ),
      'frequency' => array(
        'description' => 'The frequency that this build schedule should be run.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => '0',
      ),
      'trigger_core' => array(
        'description' => 'The core update status that will trigger the build.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'trigger_module' => array(
        'description' => 'The module update status that will trigger the build.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'trigger_theme' => array(
        'description' => 'The theme update status that will trigger the build.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'parameters' => array(
        'description' => 'This can be used to specify which parameters should be passed to the CI Server.',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  
  // @see CIServerEntity
  $schema['update_trigger_build_ci_server'] = array(
    'description' => 'The base table for the CI Server entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the CI Server entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'CI Server machine name.',
        'type' => 'varchar',
        'length' => 510,
        'not null' => FALSE,
      ),
      'label' => array(
        'description' => 'CI Server label.',
        'type' => 'varchar',
        'length' => 510,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function update_trigger_build_uninstall() {
  drupal_uninstall_schema('update_trigger_build');
}

/**
 * Add a field to the database for storing build parameters.
 */
function update_trigger_build_update_7100() {
  $spec = array(
    'description' => 'This can be used to specify which parameters should be passed to the CI Server.',
    'type' => 'text',
    'size' => 'big',
    'not null' => FALSE,
    'default' => NULL,
  );
  db_add_field('update_trigger_build_ci_build_schedule', 'parameters', $spec);
}
