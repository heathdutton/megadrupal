<?php
/**
 * @file
 * Adds tab to the node view/edit form to link to content type edit form.
 */

/**
 * Implements hook_menu().
 */
function edit_content_type_tab_menu() {
  $items['node/%node/edit_content_type_tab/%edit_content_type_tab'] = array(
    'title' => 'Edit content type',
    'title callback' => 'edit_content_type_tab_create_title',
    'title arguments' => array(1),
    'page callback' => 'edit_content_type_tab_goto',
    'page arguments' => array(1, 3),
    'access arguments' => array('administer content types'),
    'weight' => 90,
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
* Implements hook_admin_paths().
*
* Add the edit content type tab to the admin path so we get the
* fancy overlay.
*
* @return string
*   The array of paths to add to the admin path.
*/
function edit_content_type_tab_admin_paths() {
  $paths = array(
    'node/*/edit_content_type_tab/*' => TRUE,
  );
  return $paths;
}

/**
 * Implements hook_to_arg().
 *
 * Dynamically create a parameter on the menu link that stores the
 * URL to the current page.
 *
 * @return string
 *   The de-slashed path to the current URL.
 */
function edit_content_type_tab_to_arg() {
  // Get the current path.
  $path = drupal_get_normal_path($_GET['q']);

  // Translate it into a useable arg format.
  return urlencode($path);
}

/**
 * Title callback: Dynamically creates the tab title.
 *
 * Path: node/%node/edit_content_type_tab/%edit_content_type_tab
 *
 * @param object $node
 *   The full node, preloaded by _load.
 *
 * @return string
 *   The text for the tab.
 */
function edit_content_type_tab_create_title($node) {
  // If we ever wanted to use content type name instead we could use:
  // $typeName = node_type_get_types('name', $node);
  // Might be slow though, as hits all modules and database.
  $type = $node->type;

  // Parameterize content type name for check_plain
  return t("Edit '@content-type' type", array('@content-type' => $type));
}

/**
 * Page callback: Takes the user to the content type edit page for
 * a given node.
 *
 * Path: node/%node/edit_content_type_tab/%edit_content_type_tab
 *
 * @param object $node
 *   The full node, preloaded by _load.
 *
 * @param string $return_path
 *   A de-slashed path that the user was on when they clicked the tab.
 */
function edit_content_type_tab_goto($node, $return_path) {
  // Turn the return path string back into a proper path.
  $destination = array('destination' => urldecode($return_path));
  $query = array('query' => $destination);

  $type = str_replace('_', '-', $node->type);
  drupal_goto('admin/structure/types/manage/' . $type, $query);
}
