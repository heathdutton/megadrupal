<?php

// @todo - libraries integration could be done a little more flexibly/properly, this is quick and dirty.
define('RIVETED_LOCAL_JS', 'sites/all/libraries/riveted/riveted.min.js');

/**
 * Implements hook_page_build
 */
function riveted_page_build(&$page) {
  // Don't do anything for admin paths
  if(path_is_admin(current_path())) {
    return;
  }

  // Add the Riveted JS library from either the libraries folder or directly from github
  if(file_exists(RIVETED_LOCAL_JS)) {
    drupal_add_js(RIVETED_LOCAL_JS);
  }
  else {
    drupal_add_js('https://raw.github.com/robflaherty/riveted/master/riveted.min.js', 'external');
  }

  // Get settings
  $reportInterval = variable_get('riveted_report_interval', 5);
  $idleTimeout = variable_get('riveted_idle_timeout', 30);
  $nonInteraction = variable_get('riveted_non_interaction', true);

  // Inject inline javascript that initializes riveted on document.ready
  $inline_js = <<<EOF
  (function ($, Drupal, window, document, undefined) {
    $(document).ready(function () {
      riveted.init({
        reportInterval: $reportInterval,   // Default: 5
        idleTimeout: $idleTimeout,      // Default: 30
        nonInteraction: $nonInteraction  // Default: true
      });
    }); //END - document.ready
  })(jQuery, Drupal, this, this.document); //END - Closure
EOF;
  drupal_add_js($inline_js, 'inline');
}

/**
 * Implements hook_menu().
 */
function riveted_menu() {
  $items = array();

  $items['admin/config/services/riveted'] = array(
    'title' => 'Riveted',
    'description' => t('Settings for the Riveted module'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('riveted_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Form callback for main settings form
 */
function riveted_settings($form, $form_state) {
  if(file_exists(RIVETED_LOCAL_JS)) {
    drupal_set_message('The Riveted javascript library exists in sites/all/libraries/riveted/riveted.min.js and will be loaded locally.');
  }
  else {
    drupal_set_message('The Riveted javascript library will be loaded from github (https://raw.github.com/robflaherty/riveted/master/riveted.min.js). If
    you prefer to load a local copy, place it in your libraries folder: ' . RIVETED_LOCAL_JS);
  }

  $form['riveted_report_interval'] = array(
    '#type' => 'textfield',
    '#title' => 'Report Interval',
    '#description' => 'This number, in seconds, determines both the increment of reporting and the frequency of pinging. The default is 5 seconds.',
    '#default_value' => variable_get('riveted_report_interval', 5),
  );

  $form['riveted_idle_timeout'] = array(
    '#type' => 'textfield',
    '#title' => 'Idle Timeout',
    '#description' => 'This number determines how long a user can go without triggering an event before we consider them inactive. The default is 30 seconds.',
    '#default_value' => variable_get('riveted_idle_timeout', 30),
  );

  $form['riveted_non_interaction'] = array(
    '#type' => 'select',
    '#title' => 'Non-interaction',
    '#description' => "By default, GA Events are sent with the Non-interaction option set to true. This keeps the event from impacting the bounce rate and visit duration. Caution: If you set this to false, the bounce rate will drop to near zero and the visit duration may leap. Make sure you know what you're doing before using this option.",
    '#options' => array(true => 'True', false => 'False'),
    '#default_value' => variable_get('riveted_non_interaction', true),
  );

  return system_settings_form($form);
}