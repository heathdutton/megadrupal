<?php
/**
 * @file
 *   Taskbar module installation.
 */

/**
 * Implements hook_schema().
 */
function taskbar_schema() {
  $schema = array();
  $schema['taskbar_region'] = array(
    'description' => 'Regions in taskbar',
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The machine name of the region',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The title (friendly name) of the region',
      ),
      'weight' => array(
        'type' => 'int',
        'size' => 'small',
        'description' => 'The region weight',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('name'),
  );
  $schema['taskbar_item'] = array(
    'description' => 'Items in taskbar',
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The machine name of the item',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The title (friendly name) of the item',
      ),
      'provider' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The item provider',
      ),
      'region' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The region of the item',
      ),
      'status' => array(
        'type' => 'int',
        'size' => 'tiny',
        'description' => 'The status of the item (1 = enabled)',
        'not null' => TRUE,
        'default' => 0,
      ),
      'weight' => array(
        'type' => 'int',
        'size' => 'small',
        'description' => 'The weight of the item',
        'not null' => TRUE,
        'default' => 0,
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'The settings of the item',
        'not null' => TRUE,
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('name'),
  );
  $schema['taskbar_update'] = array(
    'description' => 'Update status for taskbar item',
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'description' => 'The machine name of the item',
        'length' => 32,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'description' => 'The uid of the user.',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'type' => 'int',
        'description' => 'The time when this update was recorded.',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'name' => array('name'),
      'uid' => array('uid'),
      'created' => array('created'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function taskbar_install() {
  taskbar_install_sample_data();
}

/**
 * Implements hook_uninstall().
 */
function taskbar_uninstall() {
  db_delete('variable')
  ->condition('name', 'taskbar_block_display_%%', 'LIKE')
  ->execute();
  variable_del('taskbar_autoclose');
  variable_del('taskbar_provide_sample_items');
  variable_del('taskbar_style');
  variable_del('taskbar_time');
  variable_del('taskbar_titlebar');
  variable_del('taskbar_update');
  variable_del('taskbar_update_method');
}

/**
 * Inserts sample data
 */
function taskbar_install_sample_data() {
  $regions = array(
    'left' => 'Left region',
    'center' => 'Center region',
    'right' => 'Right region',
  );
  $weight = 0;
  foreach ($regions as $name => $title) {
    $id = db_insert('taskbar_region')
    ->fields(array(
      'name' => $name,
      'title' => $title,
      'weight' => $weight++,
    ))
    ->execute();
  }
}

