<?php
/**
 * @file
 * Install and uninstall functions for the Watchdog Notifier module.
 */

/**
 * Implements hook_install().
 */
function watchdog_notifier_install() {
  // Setting this variable prevents this module from attempting to fire off a
  // million emails the first time it's run.
  variable_set('watchdog_notifier_last_run', time());

  // Setting this variable makes this module use cron to scan the watchdog log.
  variable_set('watchdog_notifier_use_cron', 'run_with_cron');

  // The following settings are defaults for the 'Unix-style cron' scheduling
  // option.  They only take effect when 'Unix-style cron' scheduling is
  // selected on the configuration page.
  // This default is for once a day at midnight.
  variable_set('watchdog_notifier_unix_cron_min', '0');
  variable_set('watchdog_notifier_unix_cron_hour', '0');
  variable_set('watchdog_notifier_unix_cron_day_month', '*');
  variable_set('watchdog_notifier_unix_cron_month', '*');
  variable_set('watchdog_notifier_unix_cron_day_week', '*');

  // Job Scheduler job ID for 'Unix-style cron' scheduling.
  variable_set('watchdog_notifier_unix_cron_job_id', 271828);
}


/**
 * Implements hook_uninstall().
 */
function watchdog_notifier_uninstall() {
  // If we're uninstalling while the 'Unix-style cron' configuration is in
  // use, then let's make sure we completely clean up after ourselves.
  if (variable_get('watchdog_notifier_use_cron') == 'run_with_scheduler') {
    $min       = variable_get('watchdog_notifier_unix_cron_min');
    $hour      = variable_get('watchdog_notifier_unix_cron_hour');
    $day_month = variable_get('watchdog_notifier_unix_cron_day_month');
    $month     = variable_get('watchdog_notifier_unix_cron_month');
    $day_week  = variable_get('watchdog_notifier_unix_cron_day_week');
    $crontab = $min . ' ' . $hour . ' ' . $day_month . ' ' . $month . ' ' . $day_week;

    $job = array(
      'type'     => 'watchdog_notifier',
      'id'       => variable_get('watchdog_notifier_unix_cron_job_id'),
      'periodic' => TRUE,
      'crontab'  => $crontab,
    );
    JobScheduler::get('watchdog_notifier_do_that_thing')->remove($job);
  }

  // Now get on with deleting everything else.
  variable_del('watchdog_notifier_unix_cron_min');
  variable_del('watchdog_notifier_unix_cron_hour');
  variable_del('watchdog_notifier_unix_cron_day_month');
  variable_del('watchdog_notifier_unix_cron_month');
  variable_del('watchdog_notifier_unix_cron_day_week');

  variable_del('watchdog_notifier_unix_cron_job_id');

  variable_del('watchdog_notifier_use_cron');
  variable_del('watchdog_notifier_last_run');
}


/**
 * Implements hook_schema().
 */
function watchdog_notifier_schema() {
  $schema['watchdog_notifier'] = array(
    'description' => 'The base table for monitoring the watchdog log for specific events.',
    'fields'    => array(
      'wn_id' => array(
        'description' => 'The primary identifier for a watchdog watchlist.',
        'type'        => 'serial',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ),
      'email' => array(
        'description' => 'The email address for the recipient of a particular watchdog type/severity.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
        'default'     => '',
      ),
      'type' => array(
        'description' => 'The type of watchdog log message to scan for.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
        'default'     => '',
      ),
      'severity' => array(
        'description' => 'The severity of the type of watchdog log message to scan for.',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
        'default'     => '',
      ),
      'created' => array(
        'description' => 'The UNIX timestamp for when this entry was added to the watchlist.',
        'type'        => 'int',
        'not null'    => TRUE,
        'unsigned'    => TRUE,
        'default'     => 0,
      ),
    ),
    'primary key' => array('wn_id'),
  );

  return $schema;
}
