<?php
/**
 * @file
 * Drawing Field module.
 */

/**
 * Includes INC files required to create field element.
 */
require_once dirname(__FILE__) . "/includes/drawingfield.field.inc";
require_once dirname(__FILE__) . "/includes/drawingfield.system.inc";

define('DEFAULT_DRAWING_WIDTH', 700);
define('DEFAULT_DRAWING_HEIGHT', 500);

/**
 * Implements hook_help().
 */
function drawingfield_help($path, $arg) {
  switch ($path) {
    case 'admin/help#drawingfield':
      return '<p>' . t('Drawingfield provides a field type to create HTML5 based drawing.
        More details can be found at <strong>readme.txt</strong>.') . '</p>';
  }
}

/**
 * A helper function which converts base64 data into image.
 *
 * @param object $edit
 *   Canvas raw data to convert into image.
 *
 * @return serialized array()
 *   serialized array of image path, json and base64.
 */
function drawingfield_base64_to_image($edit) {
  $dir = drupal_realpath(file_default_scheme() . '://drawingfield');
  if (is_string($edit)) {
    $json_base64 = $edit;
    list($json, $edit) = explode('JSON', $edit);
    list(, $edit) = explode(';', $edit);
    list(, $edit) = explode(',', $edit);
    if (file_prepare_directory($dir, FILE_CREATE_DIRECTORY)) {
      $image_path = "{$dir}/" . time() . rand(1000, 9999) . '.png';
      $img_data = file_put_contents($image_path, base64_decode($edit));
      if (!empty($img_data)) {
        return serialize(
          array(
            'json_base64' => $json_base64,
            'image_path' => str_replace($dir, file_default_scheme() . '://drawingfield/', $image_path),
            'json' => $json,
          )
        );
      }
    }
    return FALSE;
  }
}
