<?php

/**
 * @file
 * File contains JS float block initialization.
 *
 * The module loads all needed libraries for initializing jQuery UI dialog
 * library as well as jQuery.cookies plugin to remember the block position.
 */

/**
 * Implements hook_menu().
 */
function masquerade_float_block_menu() {
  $items = array();
  $masquerade_menu = masquerade_menu();
  $admin_item = $masquerade_menu['admin/config/people/masquerade'];
  // Use the same permissions as for Masquerade module configuration.
  $items['admin/config/people/masquerade/float-block'] = array(
    'title'            => 'Float block',
    'description'      => 'Enable/disable Masquerade float block',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('masquerade_float_block_admin_page_form'),
    'type'             => MENU_LOCAL_TASK,
    'access arguments' => $admin_item['access arguments'],
    'file'             => 'masquerade_float_block.admin.inc',
    'weight'           => 1,
  );
  $items['admin/config/people/masquerade/settings'] = array(
    'title'       => 'Masquerade settings',
    'description' => 'Enable/disable Masquerade float block',
    'type'        => MENU_DEFAULT_LOCAL_TASK,
    'weight'      => 0,
  );

  return $items;
}

/**
 * Implements hook_page_alter().
 */
function masquerade_float_block_page_alter(&$page) {
  $get = drupal_get_query_parameters();
  if (isset($get['mfb_show'])) {
    if (in_array($get['mfb_show'], array(1, 0))) {
      variable_set('masquerade_float_block_visible', $get['mfb_show']);
    }
    else {
      drupal_set_message(t('Incorrect mfb_show parameter value: only 1 or 0 possible.'));
    }
  }

  $masquerade_float_block_visible = variable_get('masquerade_float_block_visible', 1);

  if ($masquerade_float_block_visible) {
    $block = module_invoke('masquerade', 'block_view', 'masquerade');
    if (!empty($block)) {
      // Since ['content']['system_main']['main'] sometimes available on later
      // stage of page build, we use #pre_render function to add a JS.
      $page['#pre_render'][] = 'masquerade_float_block_add_page_js';
      $page['#masquerade_float_block'] = $block;
    }
  }
}

/**
 * Prerender function implementation for hook_page_alter().
 */
function masquerade_float_block_add_page_js($element) {
  // Get the "Masquerade" form errors.
  $form_errors = form_get_errors();
  $errors = '';
  if (isset($form_errors['masquerade_user_field'])) {
    // Clean up the messages from the main screen and add them to the block.
    form_clear_error();
    drupal_get_messages('error');
    $errors = '<div class="messages error">' . $form_errors['masquerade_user_field'] . '</div>';
  }

  $block_content = $element['#masquerade_float_block'];

  $block_content['content'] = drupal_render($block_content['content']);

  $block_content['content'] = $errors . $block_content['content'];

  $data = array(
    'masquerade_float_block' => array('block' => $block_content),
  );

  $main = & $element['content']['system_main']['main'];
  $main['#attached']['library'][] = array('system', 'ui.dialog');
  $main['#attached']['library'][] = array('system', 'effects');
  $main['#attached']['library'][] = array('system', 'jquery.cookie');
  $main['#attached']['js'][] = array('data' => $data, 'type' => 'setting');
  $js_path = drupal_get_path('module', 'masquerade_float_block') . '/masquerade_float_block.js';
  $main['#attached']['js'][$js_path] = array();

  return $element;
}

/**
 * Implements hook_help().
 */
function masquerade_float_block_help($path, $arg) {
  switch ($path) {
    case 'admin/help#masquerade_float_block':
      $output = file_get_contents(drupal_get_path('module', 'masquerade_float_block') . '/README.txt');

      return '<pre>' . check_plain($output) . '</pre>';
  }
}
