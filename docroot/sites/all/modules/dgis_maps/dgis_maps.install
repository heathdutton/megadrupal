<?php

/**
 * @file
 * Provides functions for install and uninstall operations.
 */

/**
 * Implements hook_field_schema().
 */
function dgis_maps_field_schema($field) {
  $columns = array(
    'settings' => array(
      'type' => 'text',
      'size' => 'big',
    ),
  );
  return array(
    'columns' => $columns,
  );
}

/**
 * Implements hook_uninstall().
 */
function dgis_maps_uninstall() {
  variable_delete('dgis_maps_blocks_amount');

  $query = db_select('variable', 'v');
  $query->addField('v', 'name');
  $query->condition('name', 'dgis_block_%_settings', 'LIKE');
  $vars = $query->execute()->fetchCol();

  if (!empty($vars)) {
    foreach ($vars as $var) {
      variable_delete($var);
    }
  }
}

/**
 * Implements hook_update_N().
 * Convert variables dgis_block_N_settings into the new format.
 */
function dgis_maps_update_7001() {
  $query = db_select('variable', 'v');
  $query->addField('v', 'name');
  $query->condition('name', 'dgis_block_%_settings', 'LIKE');
  $vars = $query->execute()->fetchCol();

  // Load variables and save them as JSON.
  if (!empty($vars)) {
    foreach ($vars as $var_name) {
      if ($var_value = variable_get($var_name)) {
        $new_var_value = array(
          'center' => $var_value['center'],
          'zoom' => $var_value['zoom'],
          'markers' => $var_value['markers'],
        );
        variable_set($var_name, json_encode($new_var_value));
      }
    }
  }
}
