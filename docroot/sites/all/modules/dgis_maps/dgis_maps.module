<?php

/**
 * @file
 * 2gis Maps module main file.
 */

define('DGIS_DEFAULT_BLOCK_DELTA', 'dgis_block');

/**
 * Implements hook_library().
 */
function dgis_maps_library() {

  $module_path = drupal_get_path('module', 'dgis_maps');
  $libraries['2gis_maps'] = array(
    'title' => '2GIS maps',
    'version' => '2.0',
    'js' => array(
      'http://maps.api.2gis.ru/2.0/loader.js?pkg=full' => array(
        'type' => 'external',
        'scope' => 'footer',
        'weight' => 10,
      ),
      "/$module_path/misc/2gis.js" => array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => 11,
      )
    )
  );

  $libraries['2gis_maps_block_admin'] = array(
    'title' => '2GIS maps block admin',
    'version' => '2.0',
    'js' => array(
      'http://maps.api.2gis.ru/2.0/loader.js?pkg=full' => array(
        'type' => 'external',
        'scope' => 'header',
        'weight' => 10,
      ),
      "$module_path/misc/2gis_block_admin.js" => array(
        'type' => 'file',
        'scope' => 'header',
        'weight' => 11,
      )
    ),
    'css' => array(
      "$module_path/misc/2gis_block_admin.css" => array(
        'type' => 'file',
        'media' => 'screen',
      ),
    )
  );
  return $libraries;
}

/**
 * Implements hook_block_info().
 */
function dgis_maps_block_info() {
  $count = variable_get('dgis_maps_blocks_amount', 1);

  for ($num = 1; $num <= $count; $num++) {
    $blocks[DGIS_DEFAULT_BLOCK_DELTA . '_' . $num] = array(
      'info' => t('2GIS Map #!block_number', array('!block_number' => $num)),
      'cache' => DRUPAL_NO_CACHE,
    );
  }

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function dgis_maps_block_configure($delta = '') {
  $form = array();

  if (strpos($delta, DGIS_DEFAULT_BLOCK_DELTA) === 0) {
    $settings = dgis_maps_get_map_data($delta);

    $form['center'] = array(
      '#title' => t('Center'),
      '#type' => 'textfield',
      '#default_value' => $settings['center'],
    );

    $form['zoom'] = array(
      '#title' => t('Zoom'),
      '#type' => 'textfield',
      '#default_value' => $settings['zoom'],
    );

    $form['markers'] = array(
      '#type' => 'hidden',
      '#default_value' => $settings['markers'],
    );

    // Load library.
    $form['#attached']['library'][] = array('dgis_maps', '2gis_maps_block_admin');

    $form['map'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => ' ',
      '#attributes' => array(
        'id' => drupal_html_id('map'),
        'style' => 'width:' . 500 . 'px; height:' . 400 . 'px; clear: both;',
      ),
      '#weight' => -20,
    );

    $maps_data = dgis_maps_get_map_data($delta);
    if (!empty($maps_data)) {
      $form['#attached']['js'][] = array(
        'data' => array('dgis_map_data' => $maps_data),
        'type' => 'setting',
      );
    }
  }

  return $form;
}

/**
 * Implements hook_block_save().
 */
function dgis_maps_block_save($delta = '', $edit = array()) {
  if (strpos($delta, DGIS_DEFAULT_BLOCK_DELTA) === 0) {
    variable_set($delta . '_settings', $edit);
  }
}

/**
 * Implements hook_block_view().
 */
function dgis_maps_block_view($delta) {
  $block['subject'] = t('2GIS Map');
  $block['content'] = dgis_maps_block_content($delta);

  return $block;
}

/**
 * Returns block content.
 */
function dgis_maps_block_content($delta) {

  $map_id = drupal_html_id('map');

  $block_output['map'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#attributes' => array(
      'id' => $map_id,
      'style' => 'width:' . 500 . 'px; height:' . 400 . 'px;',
    ),
    '#value' => '',
  );

  $block_output['#attached']['library'][] = array('dgis_maps', '2gis_maps');

  $maps_data[$delta] = dgis_maps_get_map_data($delta);
  $maps_data[$delta]['mapId'] = $map_id;
  if (!empty($maps_data)) {
    $block_output['#attached']['js'][] = array(
      'data' => array('dgis_map_data' => $maps_data),
      'type' => 'setting',
    );
  }

  return $block_output;
}

/**
 * Preprocess for html_tag.
 */
function dgis_maps_preprocess_html_tag(&$vars) {
  // Add attribute for tag "script"
  if ($vars['element']['#tag'] == 'script') {
    if (!empty($vars['element']['#attributes']['src'])
      && $vars['element']['#attributes']['src'] == 'http://maps.api.2gis.ru/2.0/loader.js?pkg=full') {
      $vars['element']['#attributes']['data-id'] = 'dgLoader';
    }
  }
}

/**
 * Return default map data.
 */
function dgis_maps_get_map_data($delta) {
  $settings = variable_get($delta . '_settings', array(
    'center' => '54.98,82.89',
    'zoom' => '10',
    'markers' => '',
  ));

  $settings['center'] = empty($settings['center']) ? : explode(',', $settings['center']);

  return $settings;
}
