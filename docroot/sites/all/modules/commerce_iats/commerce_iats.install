<?php

/**
 * @file
 * Validates requirements for payment processing using this module.
 */

/**
 * Implements hook_requirements().
 */
function commerce_iats_requirements($phase) {
  $t = get_t();

  $has_soap = class_exists('SoapClient');
  $has_openssl = defined('OPENSSL_VERSION_TEXT');

  $requirements['commerce_iats_soap'] = array(
    'title' => $t('SOAP'),
    'value' => $has_soap ? $t('Enabled') : $t('Not found'),
  );

  if (!$has_soap) {
    $requirements['commerce_iats_soap'] += array(
      'severity' => REQUIREMENT_ERROR,
      'description' => $t('iATS requires the PHP !soap_url.', array('!soap_url' => l($t('SOAP extension'), 'http://php.net/manual/en/book.soap.php'))),
    );
  }

  $requirements['commerce_iats_openssl'] = array(
    'title' => $t('OpenSSL'),
    'value' => $has_openssl ? $t('Enabled (@version)', array('@version' => OPENSSL_VERSION_TEXT)) : $t('Not found'),
  );

  if (!$has_openssl) {
    $requirements['commerce_iats_openssl'] += array(
      'severity' => REQUIREMENT_ERROR,
      'description' => $t('iATS requires the PHP !openssl_url.', array('!openssl_url' => l($t('OpenSSL extension'), 'http://php.net/manual/en/book.openssl.php'))),
    );
  }

  if (in_array($phase, array('runtime', 'update'))) {
    $library = libraries_detect('iatspayments');
    $requirements['iatspayments'] = array(
      'title' => $t('iATS Payments'),
    );

    if ($library['installed']) {
      $requirements['iatspayments'] += array(
        'value' => $library['version'],
        'description' => $t('The iATS Payments PHP API wrapper is installed correctly.'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['iatspayments'] += array(
        'value' => $library['error'],
        'description' => $library['error message'],
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}
