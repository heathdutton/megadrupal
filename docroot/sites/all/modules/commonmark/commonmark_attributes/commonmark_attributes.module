<?php
/**
 * @file
 * CommonMark Attributes Extension module file.
 *
 * @todo Implement tips for this extension.
 */

/**
 * Implements hook_commonmark_extension_info().
 */
function commonmark_attributes_commonmark_extension_info() {
  $extensions['commonmark_attributes'] = [
    'title' => t('CommonMark Attributes'),
    'description' => t('Adds syntax to define attributes on various elements inside a CommonMark markdown document.'),
    'url' => 'https://github.com/webuni/commonmark-attributes-extension',
    'class' => '\Webuni\CommonMark\AttributesExtension\AttributesExtension',
  ];
  return $extensions;
}

/**
 * Implements hook_registry_autoload_registry_alter().
 */
function commonmark_attributes_registry_autoload_registry_alter(array &$registry) {
  if (($library_path = commonmark_get_library_path('webuni', 'commonmark-attributes-extension', FALSE)) && file_exists("$library_path/src")) {
    $autoload_searcher = new RegistryAutoloadSearcher(registry_get_parsed_files());
    $module = (object) db_select('system', 's')->fields('s')->condition('name', 'commonmark_attributes')->execute()->fetchAssoc();
    $class_files = $autoload_searcher->findClassFiles("$library_path/src", 'PSR-4/absolute');
    $registry = array_merge($registry, $autoload_searcher->processFiles($class_files, $module));
  }
}

/**
 * Implements hook_xautoload().
 */
function commonmark_attributes_xautoload($adapter) {
  if (($library_path = commonmark_get_library_path('webuni', 'commonmark-attributes-extension')) && file_exists("$library_path/composer.json")) {
    /** @var \Drupal\xautoload\Adapter\LocalDirectoryAdapter $adapter */
    $adapter->absolute()->composerJson("$library_path/composer.json");
  }
}
