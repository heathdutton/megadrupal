<?php
/**
 * @file
 * Install, update and uninstall functions for the dailytwitter module.
 *
 */

/**
 * @file
 * Database setup and handling for Daily Twitter.
 */
function dailytwitter_schema() {
  $schema['dailytwitter'] = array(
    'description' => "Stores mapping of drupal user to twitter user and last check status.",
    'fields' => array(
      'uid' => array(
        'description' => "The Drupal ID of the user account associated with th
e Twitter account.",
        'type' => 'int',
        'not null' => TRUE,
      ),
      'screen_name' => array(
        'description' => "The unique login name for the Twitter account.",
        'type' => 'varchar',
        'length' => 255,
      ),
      'last_update' => array(
        'description' => "UNIX timestamp of the last time this account was updated.",
        'type' => 'int',
      ),
      'last_id' => array(
        'description' => "ID of last twitter post we used.",
        'type' => 'int',
      ),
      'when_to_post' => array(
        'description' => "Seconds since beginning of day representation of what time to post the twitter posts at.",
        'type' => 'int',
      ),
      'password' => array(
        'description' => "Password used to authenticate for private posts, optional.",
        'type' => 'varchar',
        'length' => 255,
      ),
      'tags' => array(
        'description' => "Comma separated list of tags to apply to posts, optional.",
        'type' => 'varchar',
        'length' => 255,
      ),
    ),
    'primary key' => array('uid'),
  );

  return $schema;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function dailytwitter_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();

  switch ($phase) {
    case 'runtime':
      if (!(bool) ini_get('allow_url_fopen')) {
        $requirements['php_allow_url_fopen'] = array(
          'title' => $t('Daily Twitter requirements'),
          'value' => $t('Daily Twitter requires that allow_url_fopen be enabled in your PHP configuration.  Please contact your system administrator for more information.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      break;
    case 'install':
      if (!(bool) ini_get('allow_url_fopen')) {
        $requirements['php_allow_url_fopen'] = array(
          'title' => $t('Daily Twitter requirements'),
          'value' => $t('Daily Twitter requires that allow_url_fopen be enabled in your PHP configuration.  Please contact your system administrator for more information.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      break;
  }
  return $requirements;
}

/**
 * Updates the database schema for addition of new fields.
 */
function dailytwitter_update_1() {
  $ret = array();

  $attributes = array(
    'description' => t("UNIX timestamp of the last time this account was updated."),
  );
  db_add_column($ret, 'dailytwitter', 'last_update', 'int', $attributes);

  $attributes = array(
    'description' => t("ID of last twitter post we used."),
  );
  db_add_column($ret, 'dailytwitter', 'last_id', 'int', $attributes);

  $attributes = array(
    'description' => t("Seconds since beginning of day representation of what time to post the twitter posts at."),
  );
  db_add_column($ret, 'dailytwitter', 'when_to_post', 'int', $attributes);

  return t('Added timestamp and post id fields.');
}

/**
 * Adds fields for stored password and optional tags to filter on.
 */
function dailytwitter_update_2() {
  $ret = array();

  $attributes = array(
    'description' => t("Password used to authenticate for private posts, optional."),
  );
  db_add_column($ret, 'dailytwitter', 'password', 'varchar(255)', $attributes);

  $attributes = array(
    'description' => t("Comma separated list of tags to apply to posts, optional."),
  );
  db_add_column($ret, 'dailytwitter', 'tags', 'varchar(255)', $attributes);

  return t('Added password and tags fields.');
}
