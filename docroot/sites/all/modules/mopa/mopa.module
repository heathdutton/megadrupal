<?php
// $Id: mopa.module,v 1.1.4.8 2010/08/01 01:26:57 kiam Exp $

/**
 * @file
 * Renames the categories used to group the modules in the modules page.
 */

/**
 * Implements hook_menu().
 */
function mopa_menu() {
  $items['admin/modules/mopa'] = array(
    'title' => 'Module categories',
    'description' => 'Change the category associated with Drupal modules.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mopa_categories_overview'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  $items['admin/modules/mopa/add'] = array(
    'title' => 'Add category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mopa_categories_edit'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_ACTION,
  );

  $items['admin/modules/mopa/%/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mopa_categories_delete_confirm', 4),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/modules/mopa/%mopa_category/edit'] = array(
    'title' => 'Edit category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mopa_categories_edit', 4),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_system_info_alter().
 */
function mopa_system_info_alter(&$info, $file) {
  // Check if the informations passed are for a module, and exit in the case
  // they are not.
  if (empty($file->type) || $file->type != 'module') {
    return;
  }

  // Return if the category is the one used by the core modules.
  if ($info['package'] == 'Core - optional' || $info['package'] == 'Core - required') {
    return;
  }

  foreach (_mopa_get_categories() as $id => $row) {
    if (in_array($file->name, $row->modules)) {
      if ($row->identifier == '*') {
        $info['package'] = 'Other';
      }
      else {
        $info['package'] = $row->identifier;
      }
      break;
    }
  }

}

/**
 * Implements hook_theme().
 */
function mopa_theme() {
  return array(
    'mopa_categories_overview' => array(
      'arguments' => array('form' => array()),
    )
  );
}

/**
 * Load the category with the passed ID.
 * @param $cid
 *   The ID of the category to load from the database.
 * @return
 *   A module category object, or FALSE.
 */
function mopa_category_load($cid) {
  if (($category = db_fetch_object(db_query_range("SELECT * FROM {mopa} WHERE cid = :cid", array(':cid' => $cid))) == FALSE) {
    return FALSE;
  }

  $category->modules = explode(', ', $category->modules);

  return $category;
}

/**
 * Return the list of all module categories defined from the module.
 */
function _mopa_get_categories() {
  static $categories;

  if (!isset($categories)) {
    $categories = array();
    $result = db_query("SELECT * FROM {mopa} ORDER BY cid ASC");
    foreach ($result as $category) {
      $category->modules = explode(', ', $category->modules);
      $categories[$category->cid] = $category;
    }
  }

  return $categories;
}
