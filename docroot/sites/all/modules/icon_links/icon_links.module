<?php
/**
 * Implements hook_block_info().
 */
function icon_links_block_info() { 
  $blocks['icon-links'] = array(
    // info: The name of the block.
    'info' => t('Icon Links'),
  );   

  return $blocks;
}

/**
 * Implements hook_block_view().
 */

function icon_links_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'icon-links':
        global $base_path;
        $location = drupal_get_path('module', 'icon_links');
        $block_content = '';
        $result = db_query('SELECT * FROM {icon_links}');
        $result_content = $result->fetchAll();
        $row_count = $result->rowCount();
        foreach($result_content as $key => $value){
          if($value->url){
            if (strpos($value->url, 'node') === 0) {
              global $base_path;
              $icon_url = $base_path.$value->url;
            }
            else{
              $icon_url = $value->url;
            }
            $block_content .= '<li class="icon"><a href="'.$value->url.'"><img src="'.$base_path.$location.'/icons/'.$value->icons.'" height="40px" /></a></li>';
          }
        }
        drupal_add_css(drupal_get_path('module', 'icon_links') . '/css/icon_links.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
        $block['subject'] = t('Icon Links');
        $block['content'] = '<ul class="icon_links">'.$block_content.'</ul><div style="clear:both;"></div>';
    break;
  }

  return $block;
}

/**
 * Creates a form for additional information.
 */
function icon_links_myform($form, $form_state) {
  global $base_path;
  $location = drupal_get_path('module', 'icon_links');
  $dir = $location.'/icons';
  $icons = scandir($dir);
  foreach($icons as $key => $value){
    if($value == '.' || $value == '..'){
    }
    else{
      $key = $key-1;
      $existing_item = db_query("SELECT url FROM {icon_links} WHERE icon_id = :icon_id", array(':icon_id' => $key))->fetchAssoc();
      $form['show_icon'.$key] = array(
        '#markup' => variable_get('icon',
        t('<img src="'.$base_path.$location.'/icons/'.$value.'" height="40px" />')),
      );
      $form['icon'.$key] = array(
        '#type' => 'hidden',
        '#title' => t('icon'),
        '#default_value' => $value,
      );
      $form['url'.$key] = array(
        '#type' => 'textfield',
        '#title' => t($value.' URL'),
        '#tree' => TRUE,
        '#default_value' => $existing_item,
        '#description' => 'Add a link using http:// or node/#',
       );
    }
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  return $form;
}

/**
 * @Implements hook_myform_submit().
 * 
 */
function icon_links_myform_submit($form, &$form_state) {
  drupal_set_message(t('Your form has been saved.'));
  $n = 0;
    foreach($form as $value){
    $n++; 
    if( isset($form['url'.$n]['#value']) ){
      $icon_url = $form['url'.$n]['#value'];
      if($icon_url != ''){
        if (strpos($icon_url, 'node') === 0) {
          global $base_path;
          $icon_url = 'http://'.$_SERVER['HTTP_HOST'].$base_path.$icon_url;
        }
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $icon_url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
        $curlresult=curl_exec ($ch);
          curl_close ($ch);
        if (preg_match("/OK/i", $curlresult)) {
          $icon_url = $form['url'.$n]['#value'];
        } else {
          drupal_set_message(t("Your URL doesn't resolve for ".$form['icon'.$n]['#default_value']));
          $icon_url = '';
        }
      }

      $num_updated = db_update('icon_links')
      ->fields(array(
        'url' => $icon_url,
      ))
      ->condition('icons', $form['icon'.$n]['#value'], '=')
      ->execute();
    }
  }
}

/**
 * @Implements hook_permission().
 * 
 */
function icon_links_permission() {
  return array(
    'administer icon links' => array(
      'title' => t('Access icon links configuration page'), 
      'description' => t('Allows a user to setup links for the icons for the icon links block.'),
    ),
  );
}

/**
 * @Implements hook_menu().
 * 
 */
function icon_links_menu() {
  $items['admin/config/system/icon_links'] = array(
    'title' => 'Icon Links',
    'description' => 'Configure the links for each icon.',
    'page callback' => 'icon_links_view',
    'access callback' => 'icon_links_access',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function icon_links_access() {
  return user_access('administer icon links');
}

/**
 * @Implements hook_view().
 * 
 */
function icon_links_view() {
  return drupal_render(drupal_get_form('icon_links_myform'));
}
