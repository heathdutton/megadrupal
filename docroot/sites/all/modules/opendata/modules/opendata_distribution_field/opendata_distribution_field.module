<?php
/**
 * @file opendata_distribution_field.module
 */

/**
 * Implements hook_field_info().
 */
function opendata_distribution_field_field_info() {
  return array(
    'opendata_distribution' => array(
      'label' => t('Project Open Data Download URL Field'),
      'description' => t('This field pairs formats (e.g. json, csv) with accessUrl data.'),
      'settings' => array(),
      'instance_settings' => array(),
      'default_widget' => 'opendata_distribution',
      'default_formatter' => 'opendata_distribution_default',
    ),
  );
}

/**
 * Implements magic callback / psuedo-hook mymodule_field_schema().
 */
function opendata_distribution_field_field_schema($field) {
  if ($field['type'] == 'opendata_distribution') {
    $schema['columns']['access_url'] = array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
    );
    $schema['columns']['format'] = array(
      'type' => 'varchar',
      'length' => 10,
      'not null' => FALSE,
    );
    $schema['columns']['size'] = array(
      'type' => 'varchar',
      'length' => 10,
      'not null' => FALSE,
    );
    $schema['indexes'] = array(
      'access_url' => array('access_url'),
      'format' => array('format'),
      'size' => array('size'),
    );

    return $schema;
  }
}

/**
 * Implements magic callback / psuedo-hook mymodule_field_is_empty().
 */
function opendata_distribution_field_field_is_empty($item, $field) {
  if ($field['type'] == 'opendata_distribution') {
    if (empty($item['access_url']) || empty($item['format'])) {
      return TRUE;
    }
    else {
      return FALSE;
    }
  }
}

/**
 * Implements magic callback / psuedo-hook mymodule_field_settings_form().
 */
function opendata_distribution_field_settings_form($field, $instance, $has_data) {
  if ($field['type'] == 'opendata_distribution') {
    $settings = $field['setings'];
    $form = '';
    return $form;
  }
}

/**
 * Implements hook_field_validate().
 */
function opendata_distribution_field_field_validate($obj_type, $object, $field, $instance, $langcode, &$items, &$errors) {
  if ($field['type'] == 'opendata_distribution') {
    foreach ($items as $delta => $item) {
      // Test URL.
      if (!empty($item['access_url'])) {
        // If URL isn't empty, we need a format.
        if (empty($item['format'])) {
          $errors[$field['field_name']][$langcode][$delta][] = array(
            'error' => 'opendata_distribution_format',
            'message' => t('Please provide a format type (e.g. csv, xlsx, json) for the access URL: !url', array('!url' => $item['access_url'])),
          );
        }
      }
      // URL field is empty. Set everything else to empty.
      else {
        unset($items);
      }
    }
  }
}


/**
 * Implements hook_field_widget_info().
 */
function opendata_distribution_field_field_widget_info() {
  return array(
    'opendata_distribution' => array(
      'label' => t('Project Open Data Download URL'),
      'field types' => array('opendata_distribution'),
      'description' => t('URL providing direct access to the downloadable '
                       . 'distribution of a dataset, along with file format '
                       . 'or API type of the distribution.'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function opendata_distribution_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $base = $element;

  if ($instance['widget']['type'] == 'opendata_distribution') {
    $element['access_url'] = array(
      '#type' => 'textfield',
      '#title' => t('Download URL'),
      '#default_value' => isset($items[$delta]['access_url']) ?
                          $items[$delta]['access_url'] : NULL,
      '#weight' => 0,
      ) + $base;
    $element['format'] = array(
      '#type' => 'textfield',
      '#title' => t('Format'),
      '#default_value' => isset($items[$delta]['format']) ?
                          $items[$delta]['format'] : NULL,
      '#weight' => 1,
      ) + $base;
    $element['size'] = array(
      '#type' => 'textfield',
      '#title' => t('Size'),
      '#default_value' => isset($items[$delta]['size']) ?
                          $items[$delta]['size'] : NULL,
      '#weight' => 1,
      ) + $base;
  }
  return $element;
}

/**
 * Implements hook_field_formatter_info().
 */
function opendata_distribution_field_field_formatter_info() {
  return array(
    'opendata_distribution_default' => array(
      'label' => t('Project Open Data Download URL'),
      'field types' => array('opendata_distribution'),
    ),
  );
}

/**
 * Implements hook_field_load().
 */
/*
function opendata_distribution_field_field_load($entity_type, $entities, $field, $instances, $langcode, &$items) {
}
*/

/**
 * Implements hook_field_formatter_view().
 */
function opendata_distribution_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  if ($display['type'] == 'opendata_distribution_default') {
    foreach ($items as $delta => $item) {
      $access_url = $item['access_url'];
      $format = $item['format'];
      $size = $item['size'];
      $element[$delta] = array(
        '#theme' => 'item_list',
        '#title' => strtoupper($format),
        '#type' => 'ul',
        '#attributes' => array(),
        '#items' => array(
          'Download URL: ' . l($access_url, $access_url),
          'Format: ' . $format,
          'Size: ' . $size,
        ),
      );
    }
  }

  return $element;
}

