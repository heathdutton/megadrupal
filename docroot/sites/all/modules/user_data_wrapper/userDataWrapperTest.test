<?php
/**
 * @file
 * Simple test for the User data wrapper module.
 */

/**
 * Simple test for the user data wrapper module.
 *
 * @see DrupalWebTestCase
 * @see UserDataWrapperTestCase
 *
 * @ingroup User
 */
class UserDataWrapperTestCase extends DrupalWebTestCase {

  protected $privilegedUser;

  /**
   * Provide test information.
   */
  public static function getInfo() {
    return array(
      'name' => 'User data wrapper',
      'description' => 'Ensure that the UserDataWrapper class functions properly.',
      'group' => 'User',
    );
  }

  /**
   * Set up the test environment.
   */
  public function setUp() {
    parent::setUp('user_data_wrapper', 'user_data_wrapper_test', 'entity');
    $this->privilegedUser = $this->drupalCreateUser();
    $this->drupalLogin($this->privilegedUser);
  }

  /**
   * Test the class with two data types.
   */
  public function testUserDataWrapperClass() {
    // Test for storing text data type.
    $user_wrapper = entity_metadata_wrapper('user', $this->privilegedUser);
    $value = 'TEST TEXT';
    $user_wrapper->property_one->set($value);
    $data = $user_wrapper->property_one->value();
    $this->assertEqual($data, $value, "Test if text values are stored correctly");

    // Test if $value is stored in the right location.
    $account = user_load($this->privilegedUser->uid);
    $this->assertEqual($account->data['user_data']['property_one'], $value, "Test if property one is in the right place in the data array");

    // Test for storing array data type.
    $value = array('TEST' => 'ARRAY');
    $user_wrapper->property_two->set($value);
    $data = $user_wrapper->property_two->value();
    $this->assertEqual($data, $value, "Test if array values are stored correctly");


    // Test for storing FALSE value
    $value = FALSE;
    $user_wrapper->property_three->set($value);
    $data = $user_wrapper->property_three->value();
    $this->assertEqual($data, $value, "Test if FALSE is stored correctly");
  }

}
