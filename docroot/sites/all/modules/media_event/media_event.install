<?php

/**
 * Implements hook_install().
 */
function media_event_install() {
  media_event_add_fields();
}

/**
 * Implements hook_uninstall().
 */
function media_event_uninstall() {
  
  field_delete_instance('field_media_event_title');
  field_delete_instance('field_media_event_type');
  field_delete_instance('field_media_event_start');
  field_delete_instance('field_media_event_end');
  field_delete_instance('field_media_event_text');
  
  field_delete_field('field_media_event_title');
  field_delete_field('field_media_event_type');
  field_delete_field('field_media_event_start');
  field_delete_field('field_media_event_end');
  field_delete_field('field_media_event_text');
  
  // Loop over any field instances attached to the airing
  // entity type and delete them individually.
  // http://api.drupal.org/api/function/field_delete_field/7
  $instances = field_info_instances('media_event', 'media_event');
  
  //why isn't this working?
  //dsm($instances);
  
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Remove all cm_airing variables.
  $variables = db_query("SELECT name FROM {variable} WHERE name LIKE 'cm_airing_%'");
  foreach ($variables as $variable) {
    variable_del($variable->name);
  }
  
  $entities = db_query("SELECT media_event_id FROM {media_event}")->fetchAll();
    
  // Delete all the airings at once
  if (count($entities)) {
    entity_delete_multiple('media_event', $entities);
  }
}

function media_event_add_fields() {
  
  // Exported field: 'media_event-media_event-field_media_event_end'.
  $fields['media_event-media_event-field_media_event_end'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_media_event_end',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'hms_field',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'hms_field',
    ),
    'field_instance' => array(
      'bundle' => 'media_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'hms_field',
          'settings' => array(
            'format' => 'h:mm',
            'leading_zero' => TRUE,
          ),
          'type' => 'hms_default_formatter',
          'weight' => 1,
        ),
      ),
      'entity_type' => 'media_event',
      'field_name' => 'field_media_event_end',
      'label' => 'End',
      'required' => 1,
      'settings' => array(
        'default_description' => 1,
        'format' => 'h:mm:ss',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 0,
        'module' => 'hms_field',
        'settings' => array(),
        'type' => 'hms_default_widget',
        'weight' => '4',
      ),
    ),
  );

  // Exported field: 'media_event-media_event-field_media_event_media_ref'.
  $fields['media_event-media_event-field_media_event_media_ref'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_media_event_media_ref',
      'foreign keys' => array(
        'node' => array(
          'columns' => array(
            'target_id' => 'nid',
          ),
          'table' => 'node',
        ),
      ),
      'indexes' => array(
        'target_id' => array(
          0 => 'target_id',
        ),
      ),
      'locked' => '0',
      'module' => 'entityreference',
      'settings' => array(
        'handler' => 'base',
        'handler_settings' => array(
          'behaviors' => array(
            'views-select-list' => array(
              'status' => 0,
            ),
          ),
          'sort' => array(
            'direction' => 'ASC',
            'property' => 'filename',
            'type' => 'property',
          ),
          'target_bundles' => array(
            'audio' => 'audio',
            'video' => 'video',
          ),
        ),
        'profile2_private' => FALSE,
        'target_type' => 'file',
      ),
      'translatable' => '0',
      'type' => 'entityreference',
    ),
    'field_instance' => array(
      'bundle' => 'media_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'entityreference',
          'settings' => array(
            'link' => FALSE,
          ),
          'type' => 'entityreference_label',
          'weight' => 2,
        ),
      ),
      'entity_type' => 'media_event',
      'field_name' => 'field_media_event_media_ref',
      'label' => 'Media',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'entityreference',
        'settings' => array(
          'match_operator' => 'CONTAINS',
          'path' => '',
          'size' => '60',
        ),
        'type' => 'entityreference_autocomplete',
        'weight' => '2',
      ),
    ),
  );

  // Exported field: 'media_event-media_event-field_media_event_start'.
  $fields['media_event-media_event-field_media_event_start'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_media_event_start',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'hms_field',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'hms_field',
    ),
    'field_instance' => array(
      'bundle' => 'media_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'hms_field',
          'settings' => array(
            'format' => 'h:mm',
            'leading_zero' => TRUE,
          ),
          'type' => 'hms_default_formatter',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'media_event',
      'field_name' => 'field_media_event_start',
      'label' => 'Start',
      'required' => 0,
      'settings' => array(
        'default_description' => 1,
        'format' => 'h:mm:ss',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 0,
        'module' => 'hms_field',
        'settings' => array(),
        'type' => 'hms_default_widget',
        'weight' => '3',
      ),
    ),
  );

  // Exported field: 'media_event-media_event-field_media_event_text'.
  $fields['media_event-media_event-field_media_event_text'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_media_event_text',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => '0',
      'module' => 'text',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'text',
    ),
    'field_instance' => array(
      'bundle' => 'media_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 3,
        ),
      ),
      'entity_type' => 'media_event',
      'field_name' => 'field_media_event_text',
      'label' => 'Text',
      'required' => 0,
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => '5',
      ),
    ),
  );

  // Exported field: 'media_event-media_event-field_media_event_title'.
  $fields['media_event-media_event-field_media_event_title'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_media_event_title',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => '0',
      'module' => 'text',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'text',
    ),
    'field_instance' => array(
      'bundle' => 'media_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 4,
        ),
      ),
      'entity_type' => 'media_event',
      'field_name' => 'field_media_event_title',
      'label' => 'Title',
      'required' => 1,
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => '0',
      ),
    ),
  );
  
  // Exported field: 'media_event-media_event-field_media_event_type'.
  $fields['media_event-media_event-field_media_event_type'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_media_event_type',
      'foreign keys' => array(),
      'indexes' => array(
        'value' => array(
          0 => 'value',
        ),
      ),
      'locked' => '0',
      'module' => 'list',
      'settings' => array(
        'allowed_values' => array(),
        'allowed_values_function' => '',
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'list_text',
    ),
    'field_instance' => array(
      'bundle' => 'media_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(),
          'type' => 'list_default',
          'weight' => 5,
        ),
      ),
      'entity_type' => 'media_event',
      'field_name' => 'field_media_event_type',
      'label' => 'Type',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_select',
        'weight' => '1',
      ),
    ),
  );
  
  if (!field_info_field('field_media_event_title')) {
    field_create_field($fields['media_event-media_event-field_media_event_title']['field_config']);
  }  
  field_create_instance($fields['media_event-media_event-field_media_event_title']['field_instance']);
  
  if (!field_info_field('field_media_event_media_ref')) {
    field_create_field($fields['media_event-media_event-field_media_event_media_ref']['field_config']);
  }  
  field_create_instance($fields['media_event-media_event-field_media_event_media_ref']['field_instance']);
    
  if (!field_info_field('field_media_event_type')) {
    field_create_field($fields['media_event-media_event-field_media_event_type']['field_config']);
  }
  field_create_instance($fields['media_event-media_event-field_media_event_type']['field_instance']);
  
  if (!field_info_field('field_media_event_start')) {
    field_create_field($fields['media_event-media_event-field_media_event_start']['field_config']);
  }
  field_create_instance($fields['media_event-media_event-field_media_event_start']['field_instance']);
  
  if (!field_info_field('field_media_event_end')) {
    field_create_field($fields['media_event-media_event-field_media_event_end']['field_config']);
  }
  field_create_instance($fields['media_event-media_event-field_media_event_end']['field_instance']);
  
  if (!field_info_field('field_media_event_text')) {
    field_create_field($fields['media_event-media_event-field_media_event_text']['field_config']);
  }
  field_create_instance($fields['media_event-media_event-field_media_event_text']['field_instance']);

}
 
/**
 * Implements hook_schema().
 */
function media_event_schema() {
  $schema = array();

  $schema['media_event'] = array(
    'description' => 'The base table for media_events.',
    'fields' => array(
      'media_event_id' => array(
        'description' => 'The primary identifier for the media event.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the media event was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the media event was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('media_event_id'),
  );

 
  return $schema;
}
