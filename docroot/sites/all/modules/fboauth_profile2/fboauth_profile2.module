<?php

/**
 * @file
 * Integrates Facebook OAuth with the Profile2 module.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fboauth_profile2_form_fboauth_settings_form_alter(&$form, &$form_state, $form_id) {
  // Create a container for the Profile2 settings.
  $form['fboauth_profile2_fields'] = array(
    '#type' => 'fieldset',
    '#title' => t('Profile2 field mapping'),
    '#description' => t('Each of your Profile2 fields are listed below. Map each one you would like to import into your site to a Facebook data source. <strong>Note that only profiles configured to show on the user registration form may be imported!</strong>'),
    '#tree' => TRUE,
    '#weight' => 5,
  );

  // Each field type can only map to certain Facebook properties. Build a list
  // for each type that includes reasonable options.
  $properties = fboauth_user_properties(TRUE);
  $property_options = array();
  foreach ($properties as $property => $property_info) {
    if (isset($property_info['field_types'])) {
      foreach ($property_info['field_types'] as $field_type) {
        $property_options[$field_type][$property] = '[' . $property . '] ' . $property_info['label'];
      }
    }
  }

  // Create a fieldset for each profile that is shown during user account
  // registration and collect its fields.
  $instances = array();
  foreach (profile2_get_types() as $type_name => $profile_type) {
    if (!empty($profile_type->data['registration']) && $profile_fields = field_info_instances('profile2', $type_name)) {
      $instances += $profile_fields;
      $form['fboauth_profile2_fields'][$type_name] = array(
        '#type' => 'fieldset',
        '#title' => $profile_type->label,
        '#tree' => TRUE,
        '#collapsible' => TRUE,
      );
    }
  }

  // Add the fields to the form.
  $field_defaults = variable_get('fboauth_profile2_fields', array());
  foreach ($instances as $field_name => $instance) {
    $field = field_info_field($instance['field_name']);
    if (isset($property_options[$field['type']])) {
      $options = array_merge(array('' => t('- Do not import -')), $property_options[$field['type']]);
      $form['fboauth_profile2_fields'][$instance['bundle']][$field_name] = array(
        '#title' => t($instance['label']),
        '#type' => 'select',
        '#options' => $options,
        '#default_value' => isset($field_defaults[$field_name]) ? $field_defaults[$field_name] : '',
      );
    }
    else {
      $form['fboauth_profile2_fields'][$instance['bundle']][$field_name] = array(
        '#title' => t($instance['label']),
        '#type' => 'form_element',
        '#children' => '<em>' . t('No mappable Facebook properties.') . '</em>',
        '#theme_wrappers' => array('form_element'),
      );
    }
  }

  $form['#submit'][] = 'fboauth_profile2_settings_form_submit';
}

/**
 * Submit handler for fboauth_profile2_form_fboauth_settings_form_alter().
 */
function fboauth_profile2_settings_form_submit($form, &$form_state) {
  // Retrieve the field settings from all profiles and save them in a variable.
  $settings = array();
  foreach ($form_state['values']['fboauth_profile2_fields'] as $profile) {
    $settings += $profile;
  }
  variable_set('fboauth_profile2_fields', $settings);
}

/**
 * Implements hook_fboauth_user_save().
 */
function fboauth_profile2_fboauth_user_save($account, $fbuser) {
  $field_map = variable_get('fboauth_profile2_fields', array());
  $field_convert_info = fboauth_field_convert_info();

  foreach (profile2_get_types() as $type_name => $profile_type) {
    // Only save profiles that are shown during user registration.
    if (!empty($profile_type->data['registration'])) {
      // Create an empty profile and populate its fields.
      $profile = profile_create(array('type' => $type_name, 'uid' => $account->uid));
      foreach (field_info_instances('profile2', $type_name) as $field_name => $instance) {
        $field = field_info_field($instance['field_name']);
        if (!empty($field_map[$field_name]) && isset($field_convert_info[$field['type']]['callback'])) {
          $callback = $field_convert_info[$field['type']]['callback'];
          $facebook_property_name = $field_map[$field_name];
          if ($value = $callback($facebook_property_name, $fbuser, $field, $instance)) {
            $profile->{$field_name}[LANGUAGE_NONE][0] = $value;
          }
        }
      }
      profile2_save($profile);
    }
  }
}
