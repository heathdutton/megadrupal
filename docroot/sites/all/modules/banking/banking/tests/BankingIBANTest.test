<?php

/**
 * @file
 * Contains class BankingIBANTest.
 */

/**
 * Tests BankingIBAN.
 */
class BankingIBANTest extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'name' => 'BankingIBAN',
      'group' => 'Banking',
      'dependencies' => array('banking'),
    );
  }

  function setUp(array $modules = array()) {
    parent::setUp(array_merge($modules, array('banking')));
  }

  /**
   * Tests getFormats().
   */
  function testGetFormats() {
    $formats = BankingIBAN::getFormats();
    $this->assertTrue(is_array($formats));
    if (is_array($formats)) {
      foreach ($formats as $format) {
        $this->assertTrue($format instanceof BankingIBANFormat);
      }
    }
  }

  /**
   * Tests validate().
   */
  function testValidate() {
    $ibans_valid = array('NL91ABNA0417164300', 'GB82WEST12345698765432');
    foreach ($ibans_valid as $iban) {
      $iban = new BankingIBAN($iban);
      $this->assertTrue($iban->validate());
    }
    $ibans_invalid = array('XX00h48F93KJ30FG37vn10GOC93hMcaAlR', 'NL91ABNA0417164301', 'GB82WEST12345698765433');
    foreach ($ibans_invalid as $iban) {
      $iban = new BankingIBAN($iban);
      $this->assertFalse($iban->validateChecksum());
    }
  }

  /**
   * Tests validateChecksum().
   */
  function testValidateChecksum() {
    $ibans_valid = array('NL91ABNA0417164300', 'GB82WEST12345698765432');
    foreach ($ibans_valid as $iban) {
      $iban = new BankingIBAN($iban);
      $this->assertTrue($iban->validateChecksum());
    }
    $ibans_invalid = array('NL91ABNA0417164301', 'GB82WEST12345698765433');
    foreach ($ibans_invalid as $iban) {
      $iban = new BankingIBAN($iban);
      $this->assertFalse($iban->validateChecksum());
    }
  }
}
