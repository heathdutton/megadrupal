<?php
/**
 * @file: Time Entry Repeat.
 */

/**
 * Implements hook_form_FORM_ID_alter() for time_entry_type_form.
 */
function time_entry_repeat_form_time_entry_type_form_alter(&$form, $form_state) {
  $form['time_entry_repeat'] = array(
    '#type' => 'fieldset',
    '#title' => t('Repeat settings'),
  );

  module_load_include('inc', 'time_entry_repeat', 'time_entry_repeat.api');
  $variable = "time_entry_repeat_{$form['type']['#default_value']}";
  $repeat = variable_get($variable, array());

  $form['time_entry_repeat']['time_entry_repeat'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Allow repetitions for this Time Entry type:'),
    '#options' => array_merge(time_entry_repeat_get_options(), array('all' => t('All'))),
    '#default_value' => $repeat,
    '#attached' => array(
      'js' => array(
        drupal_get_path('module', 'time_entry_repeat') . '/js/time_entry_repeat.time_entry_type_form.js',
      ),
    ),
  );

  $form['#submit'][] = 'time_entry_repeat_form_time_entry_type_form_submit';
}

/**
 * Save repeat settings.
 */
function time_entry_repeat_form_time_entry_type_form_submit($form, $form_state) {
  $variable = "time_entry_repeat_{$form['type']['#default_value']}";
  $repeat = $form_state['values']['time_entry_repeat'];

  if ($repeat['all']) {
    variable_set($variable, array('all'));
  }
  else {
    unset($repeat['all']);
    if (implode($repeat)) {
      variable_set($variable, $repeat);
    }
    else {
      variable_del($variable);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for time_entry_form.
 */
function time_entry_repeat_form_time_entry_form_alter(&$form, $form_state) {
  module_load_include('inc', 'time_entry_repeat', 'time_entry_repeat.api');
  $variable = "time_entry_repeat_{$form['type']['#default_value']}";
  $repeat_setting = variable_get($variable, FALSE);
  $options = time_entry_repeat_get_options();

  if ($repeat_setting) {
    if (!in_array('all', $repeat_setting, TRUE)) {
      $options = array_intersect_key($options, array_flip(array_values($repeat_setting)));
    }

    $form['repeat'] = array(
      '#type' => 'select',
      '#title' => t('Repeat'),
      '#options' => array_merge(array('no' => t('No repeat')), $options),
    );
  }
}

/**
 * Implements hook_entity_insert().
 */
function time_entry_repeat_entity_insert($entity, $type) {
  if (isset($entity->repeat)) {
    module_load_include('inc', 'time_entry_repeat', 'time_entry_repeat.api');
    time_entry_repeat_save($entity);
  }
}

/**
 * Implements hook_entity_update().
 */
function time_entry_repeat_entity_update($entity, $type) {
  if (isset($entity->repeat)) {
    module_load_include('inc', 'time_entry_repeat', 'time_entry_repeat.api');
    time_entry_repeat_save($entity);
  }
}

/**
 * Implements hook_entity_delete().
 */
function time_entry_repeat_entity_delete($entity, $type) {
  if (isset($entity->repeat)) {
    module_load_include('inc', 'time_entry_repeat', 'time_entry_repeat.api');
    time_entry_repeat_delete($entity);
  }
}

/**
 * Implements hook_entity_load().
 */
function time_entry_repeat_entity_load($entities, $type) {
  if ($type == 'time_entry') {
    module_load_include('inc', 'time_entry_repeat', 'time_entry_repeat.api');
    foreach ($entities as $entity) {
      if ($repeat = time_entry_repeat_load($entity)) {
        $entity->repeat = $repeat;
      }
    }
  }
}
