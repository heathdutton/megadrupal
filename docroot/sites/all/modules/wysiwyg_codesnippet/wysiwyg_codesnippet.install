<?php

/**
 * Implements hook_requirements().
 * @param $phase
 * @return array
 */
function wysiwyg_codesnippet_requirements($phase) {
  $t = get_t();
  $requirements = array();

  switch ($phase) {
    case 'runtime':
    case 'install':
      $ckeditor_path = libraries_get_path('ckeditor');

      if (!$ckeditor_path) {
        $requirements['wysiwyg_codesnippet'] = array(
          'title' => $t('WYSIWYG CodeSnippet'),
          'description' => $t('CKEditor library could not be detected.'),
          'severity' => REQUIREMENT_ERROR,
          'value' => $t('Not Detected'),
        );

        break;
      }

      $plugin_path = $ckeditor_path . '/plugins/codesnippet';
      $codesnippet_detect = file_exists($plugin_path . '/dialogs/codesnippet.js');

      if ($ckeditor_path && !$codesnippet_detect) {
        $requirements['wysiwyg_codesnippet'] = array(
          'title' => $t('WYSIWYG CodeSnippet'),
          'description' => $t('CodeSnippet plugin not found. Please download the plugin from the CKEditor website and place it in "@path".', array('@path' => $ckeditor_path . '/plugins/codesnippet')),
          'severity' => REQUIREMENT_ERROR,
          'value' => $t('Not Detected'),
        );

        break;
      }

      if ($ckeditor_path && $codesnippet_detect) {
        $requirements['wysiwyg_codesnippet'] = array(
          'title' => $t('WYSIWYG CodeSnippet'),
          'description' => $t('CodeSnippet plugin detected in "@path".', array('@path' => $plugin_path)),
          'severity' => REQUIREMENT_OK,
          'value' => $t('Detected'),
        );

        break;
      }

      break;
  }

  return $requirements;
}