<?php

/**
 * Implements hook_theme().
 */
function v3dm_hop_theme() {
  $hooks = array();
  $hooks['hop'] = array(
    'render element' => 'element',
  );
  return $hooks;
}

/**
 * Implements of hook_field_formatter_info().
 */
function v3dm_hop_field_formatter_info() {
  $info = array();
  $info['hop'] = array(
    'label' => t('3DHOP'),
    'field types' => array('3dmodel'),
    'description' => t('Render 3D model with 3DHOP.'),
    'settings' => array(
      'width' => V3DM_CONTAINER_WIDTH,
      'height' => V3DM_CONTAINER_HEIGHT,
    ),
  );
  return $info;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function v3dm_hop_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();
  $element['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Container width'),
    '#description' => t('Width of the container, in pixels.'),
    '#default_value' => $settings['width'],
  );
  $element['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Container height'),
    '#description' => t('Height of the container, in pixels.'),
    '#default_value' => $settings['height'],
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function v3dm_hop_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();
  $summary[] = t('@widthx@height px', array('@width' => $settings['width'], '@height' => $settings['height']));

  return implode('<br/>', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function v3dm_hop_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];

  $element = array();

  $js = array();
  $js['files'] = array();

  foreach ($items as $delta => $item) {
    $id = $field['field_name'] . '-' . $delta;
    $element[$delta] = array(
      '#theme' => 'hop',
      '#attributes' => array(
        'id' => $id,
        'class' => array('hop'),
        'width' => $settings['width'],
        'height' => $settings['height'],
      ),
    );
    $js['files'][$id] = file_create_url($item['uri']);
  }

  $hop = v3dm_path_to_library('3dhop') . '/js';
  drupal_add_js($hop . '/spidergl.js');
  drupal_add_js($hop . '/presenter.js');
  drupal_add_js($hop . '/nexus.js');
  drupal_add_js($hop . '/ply.js');
  drupal_add_js($hop . '/trackball_sphere.js');
  drupal_add_js($hop . '/trackball_turntable.js');
  drupal_add_js($hop . '/trackball_pantilt.js');
  drupal_add_js(drupal_get_path('module', 'v3dm_hop') . '/v3dm_hop.js');
  drupal_add_js(array('v3dm_hop' => $js), 'setting');

  return $element;
}

/**
 * Returns HTML canvas.
 */
function theme_hop($variables) {
  $element = $variables['element'];
  return '<canvas '. drupal_attributes($element['#attributes']) .'></canvas>';
}

