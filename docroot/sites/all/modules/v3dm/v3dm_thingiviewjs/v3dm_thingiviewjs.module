<?php

/**
 * Implements of hook_field_formatter_info().
 */
function v3dm_thingiviewjs_field_formatter_info() {
  $info = array();
  $info['thingiviewjs'] = array(
    'label' => t('Thingiview.js'),
    'field types' => array('3dmodel'),
    'description' => t('Render 3D model with thingiview.js.'),
    'settings' => array(
      'width' => V3DM_CONTAINER_WIDTH,
      'height' => V3DM_CONTAINER_HEIGHT,
      'objectColor' => '#C0D8F0',
      'objectMaterial' => 'solid',
      'backgroundColor' => '#AAAAAA',
      'showPlane' => 'yes',
      'rotation' => 'yes',
      'cameraView' => 'top',
      'cameraZoom' => 5,
    ),
  );

  return $info;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function v3dm_thingiviewjs_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();
  $element['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Container width'),
    '#description' => t('Width of the container, in pixels.'),
    '#default_value' => $settings['width'],
  );
  $element['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Container height'),
    '#description' => t('Height of the container, in pixels.'),
    '#default_value' => $settings['height'],
  );
  $element['objectColor'] = array(
    '#type' => 'textfield',
    '#title' => t('Object color'),
    '#description' => t('Color of the object, in hexadecimal.'),
    '#default_value' => $settings['objectColor'],
  );
  $element['objectMaterial'] = array(
    '#type' => 'radios',
    '#title' => t("Object's material"),
    '#options' => drupal_map_assoc(array('solid', 'wireframe')),
    '#default_value' => $settings['objectMaterial'],
  );
  $element['backgroundColor'] = array(
    '#type' => 'textfield',
    '#title' => t('Background color'),
    '#description' => t("Background color of the viewer's container, in hexadecimal"),
    '#default_value' => $settings['backgroundColor'],
  );
  $bool_options = drupal_map_assoc(array('yes', 'no'));
  $element['showPlane'] = array(
    '#type' => 'radios',
    '#options' => $bool_options,
    '#title' => t('Show the 100x100px grid plane under the object'),
    '#description' => t("NOTE: there's a bug upstream in ThingiView and this option doesn't work."),
    '#default_value' => $settings['showPlane'],
    '#disabled' => TRUE,
  );
  $element['rotation'] = array(
    '#type' => 'radios',
    '#options' => $bool_options,
    '#title' => t('Automatically rotate the object around the z axis'),
    '#description' => t("NOTE: there's a bug upstream in ThingiView and this option doesn't work. See <a href='@url'>@url</a>", array('@url' => 'https://github.com/tbuser/thingiview.js/issues/12')),
    '#default_value' => $settings['rotation'],
    '#disabled' => TRUE,
  );
  $element['cameraView'] = array(
    '#type' => 'radios',
    '#options' => drupal_map_assoc(array('top', 'side', 'bottom', 'diagonal')),
    '#title' => t('Select an angle for the camera view.'),
    '#default_value' => $settings['cameraView'],
  );
  $element['cameraZoom'] = array(
    '#type' => 'textfield',
    '#title' => t('Pass a positive number to zoom the camera in or a negative number to zoom out'),
    '#default_value' => $settings['cameraZoom'],
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function v3dm_thingiviewjs_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();
  $summary[] = t('@widthx@height px', array('@width' => $settings['width'], '@height' => $settings['height']));
  $summary[] = t('Object color: @value', array('@value' => $settings['objectColor']));
  $summary[] = t('Object material: @value', array('@value' => $settings['objectMaterial']));
  $summary[] = t('Background color: @value', array('@value' => $settings['backgroundColor']));
  $summary[] = t('Show plane: @value', array('@value' => $settings['showPlane']));
  $summary[] = t('Rotation: @value', array('@value' => $settings['rotation']));
  $summary[] = t('Camera view: @value', array('@value' => $settings['cameraView']));
  $summary[] = t('Camera zoom: @value', array('@value' => $settings['cameraZoom']));

  return implode('<br/>', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function v3dm_thingiviewjs_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];

  $element = array();

  $path = v3dm_path_to_library('thingiview.js') . '/javascripts';

  $js = array();
  $js['path'] = '/' . $path;
  $js['files'] = array();

  // Copy parameters to the javscript array.
  $keys = array('objectColor', 'objectMaterial', 'backgroundColor', 'cameraView', 'cameraZoom');
  foreach ($keys as $key) {
    $js[$key] = $settings[$key];
  }
  // Booleans must be converted from yes/no to true/false.
  $bools = array('showPlane', 'rotation');
  foreach ($bools as $bool) {
    $js[$bool] = $settings[$bool] == 'yes'?true:false;
  }

  foreach ($items as $delta => $item) {
    $id = drupal_html_id($field['field_name'] . '-' . $delta);
    $element[$delta] = array(
      '#type' => 'container',
      '#attributes' => array(
        'id' => $id,
        'class' => array('thingiview'),
        'style' => 'width:' . $settings['width'] . 'px;height:' . $settings['height'] . 'px',
      ),
    );
    $js['files'][$id] = file_create_url($item['uri']);
  }

  drupal_add_js($path . '/three.min.js');
  drupal_add_js($path . '/thingiview.js');
  drupal_add_js(drupal_get_path('module', 'v3dm_thingiviewjs') . '/v3dm_thingiviewjs.js');
  drupal_add_js(array('v3dm_thingiviewjs' => $js), 'setting');

  return $element;
}
