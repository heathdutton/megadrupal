<?php
// $Id: domain_admin.module,v 1.16 2010/08/05 16:23:12 nirbhasa Exp $

/**
 * @file
 * domain_admin_user module: Show all users on form, add user to a domain.
 */

/**
 * implement hook_domainadminperms()
 */
function domain_admin_user_domainadminperms() {
    
    $perms = array();
    
      $perms['view users on own domain'] = array(
        'title' => t('View users on own domain'),
        'description' => t('Users can can see users and their respective roles on domains they are assigned to'),
      );
      $perms['add users to own domain'] = array(
        'title' => t('Add users to own domain'),
        'description' => t('Note that you will also need to have the <em>view user profiles</em> permission to select users via autocomplete'),
      ); 
      
      return $perms; 
}

/**
 * Implements hook_menu().
 * Menu listing of users on domain
 */
function domain_admin_user_menu() {
  $items = array();
  $items['admin/structure/domain/users/%domain'] = array(
    'title' => 'Domain users',
    'type' => MENU_CALLBACK,
    'access callback' => '_domain_admin_user_access',
    'access arguments' => array('view users on own domain'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('domain_admin_user_form'),
  );
  return $items;
}

/*
 * Implementation of hook_domainlinks().
 * Add link to user page
 */
function domain_admin_user_domainlinks($domain) {
  static $extra;
  if (!isset($extra)) {
    $extra = domain_conf_api();
  }
  if ($domain['domain_id'] > 0 || !empty($extra)) {
    $links[] = array(
      'title' => t('users'),
      'path' => 'admin/structure/domain/users/' . $domain['domain_id'],
    );
    return $links;
  }
  return FALSE;
}



function _domain_admin_user_access($perm) {
  global $_domain;
 
  return user_access('administer domains') || user_access('assign domain editors') || user_access('set domain access') || _domain_admin_access($perm, $_domain['domain_id']);
}

/*
 * Generate list of all users in domain
 */
/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function domain_admin_user_form($form, &$form_state) {

  $domain_id = arg(4);

  $form['adduser'] = array(
    '#type' => 'fieldset',
    '#title' => t('Add user to domain'),
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>',
  );

  $form['adduser']['user'] = array(
    '#type' => 'textfield',
    '#title' => t('User name'),
    '#maxlength' => 60,
    '#autocomplete_path' => 'user/autocomplete',
    '#weight' => -1,
    '#required' => TRUE,
  );

  $form['adduser']['domain_id'] = array(
    '#type' => 'value',
    '#value' => $domain_id,
  );

  $form['adduser']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add user'),
  );


 $header = array(
    'username' => array('data' => t('Username'), 'field' => 'u.name'),
    'status' => array('data' => t('Status'), 'field' => 'u.status'),
    'roles' => array('data' => t('Roles')),
    'member_for' => array('data' => t('Member for'), 'field' => 'u.created', 'sort' => 'desc'),
    'access' => array('data' => t('Last access'), 'field' => 'u.access'),
    'operations' => array('data' => t('Operations')),
  );

  $query = db_select('users', 'u')
            ->condition('u.uid', '0', '<>');
   $query->join('domain_editor', 'de', 'u.uid = de.uid AND de.domain_id = :domain_id', array(':domain_id' => $domain_id));

  user_build_filter_query($query);

  $count_query = clone $query;
  $count_query->addExpression('COUNT(u.uid)');

  $query = $query->extend('PagerDefault')->extend('TableSort');
  $query
    ->fields('u', array('uid', 'name', 'status', 'created', 'access'))
    ->limit(50)
    ->orderByHeader($header)
    ->setCountQuery($count_query);
  $result = $query->execute();

  $destination = drupal_get_destination();

  $status = array(t('blocked'), t('active'));
  $roles = array_map('check_plain', user_roles(TRUE));
  $accounts = array();
  foreach ($result as $account) {
    $users_roles = array();
    $roles_result = db_query('SELECT rid FROM {users_roles} WHERE uid = :uid', array(':uid' => $account->uid));
    foreach ($roles_result as $user_role) {
      $users_roles[] = $roles[$user_role->rid];
    }
    asort($users_roles);

    $options[$account->uid] = array(
      'username' => theme('username', array('account' => $account)),
      'status' =>  $status[$account->status],
      'roles' => theme('item_list', array('items' => $users_roles)),
      'member_for' => format_interval(REQUEST_TIME - $account->created),
      'access' =>  $account->access ? t('@time ago', array('@time' => format_interval(REQUEST_TIME - $account->access))) : t('never'),
      'operations' => array('data' => 
        array('#type' => 'link', '#title' => t('edit'), '#href' => "user/$account->uid/edit", '#options' => array('query' => $destination)),
      ),
    );
  }

  $form['accounts'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#empty' => t('No people available.'),
  );
  $form['pager'] = array('#markup' => theme('pager'));


  return $form;
}

/**
 * Submit the user update form.
 */
function domain_admin_user_form_submit($form, &$form_state) {

  $username = $form_state['values']['user'];
  $domain_id = arg(4);

  if (!empty($username)) {

    $uid = db_query("SELECT uid FROM {users} WHERE name = :name", array(':name' => $username))->fetchField();
    domain_admin_user_assign_domain($uid, $domain_id);

  }
}

/**
 * Assign user to doman
 */
function domain_admin_user_assign_domain($uid, $domain_id) {
    $editor = db_query('SELECT uid FROM {domain_editor} WHERE uid = :uid AND domain_id = :domain_id', array(':uid' => $uid, ':domain_id' => $domain_id))->fetchField();

    if (empty($editor)) {
      $domain_editor = new stdClass;
      $domain_editor->uid = $uid;
      $domain_editor->domain_id = $domain_id;
      drupal_write_record('domain_editor', $domain_editor);
      drupal_set_message(t('User ' . $username . ' has been added to the domain'));
    }
}    

/** 
 *  Implementation of hook_domainlinks().
 *  This places a link to domain user page into the domain admin block
 */
function domain_admin_user_domainadminlinks() {
  $links = array();
  global $_domain;

  if (_domain_admin_user_access('view users on own domain')) {
    $links['domadm_user'] = array(
      'title' => t('View domain users'),
      'href' => 'admin/structure/domain/users/' . $_domain['domain_id'],
      'weight' => -5,
    );
  }
  return $links;

}



