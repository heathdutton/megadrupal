<?php

/**
 * Implements hook_permission().
 */
function arbitrary_content_permission() {
  return array(
    'administer arbitrary content' => array(
      'title' => t('Administer Arbitrary Content'),
      'description' => t('Administer and configure pieces of arbitrary content'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function arbitrary_content_menu() {
  $items['admin/structure/ac'] = array(
    'title' => 'Arbitrary Content',
    'description' => 'Administer and configure arbitrary page and block content for your site.',
    'page callback' => 'arbitrary_content_administer',
    'access arguments' => array('administer arbitrary content'),
    'file' => 'arbitrary_content.admin.inc',
  );

  $items['admin/structure/ac/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/structure/ac/add'] = array(
    'title' => 'Add',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('arbitrary_content_add_form'),
    'access arguments' => array('administer arbitrary content'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'arbitrary_content.admin.inc',
  );

  $items['admin/structure/ac/manage/%arbitrary_content'] = array(
    'title' => 'Edit Arbitrary Content',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('arbitrary_content_edit_form', 4),
    'access arguments' => array('administer arbitrary content'),
    'file' => 'arbitrary_content.admin.inc',
  );

  $items['admin/structure/ac/manage/%arbitrary_content/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/structure/ac/manage/%arbitrary_content/edit_field_data'] = array(
    'title' => 'Edit Field Data',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('arbitrary_content_edit_field_data_form', 4),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer arbitrary content'),
    'file' => 'arbitrary_content.admin.inc',
  );

  $items['admin/structure/ac/manage/%arbitrary_content/delete'] = array(
    'title' => 'Delete content',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('arbitrary_content_delete_confirm', 4),
    'type' => MENU_CALLBACK,
    'access arguments' => array('administer arbitrary content'),
    'file' => 'arbitrary_content.admin.inc',
  );

  $items['ac/%arbitrary_content'] = array(
    'title callback' => 'arbitrary_content_page_title',
    'title arguments' => array(1),
    'page callback' => 'arbitrary_content_page',
    'page arguments' => array(1),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implements hook_entity_info().
 */
function arbitrary_content_entity_info() {
  $info['arbitrary_content'] = array(
    'label' => t('Arbitrary Content'),
    'entity class' => 'ArbitraryContent',
    'controller class' => 'EntityAPIControllerExportable',
    'base table' => 'arbitrary_content',
    'entity keys' => array(
      'id' => 'acid',
      'name' => 'name',
      'bundle' => 'name',
      'label' => 'name',
    ),
    'bundle keys' => array(
      'bundle' => 'name',
    ),
    'bundles' => array(),
    'view modes' => array(
      'full' => array(
        'label' => t('Full content'),
        'custom settings' => FALSE,
      ),
    ),
    'exportable' => TRUE,
    'fieldable' => TRUE,
  );

  foreach (arbitrary_content_load_names() as $type => $ac) {
    $info['arbitrary_content']['bundles'][$type] = array(
      'label' => $ac->name,
      'admin' => array(
        'path' => 'admin/structure/ac/manage/%arbitrary_content',
        'real path' => 'admin/structure/ac/manage/' . $ac->name,
        'bundle argument' => 4,
        'access arguments' => array('administer arbitrary content'),
      ),
    );
  }

  return $info;
}

/**
 * Main class for Arbitrary Content entities.
 */
class ArbitraryContent extends Entity {
  public function identifier() {
    return $this->acid;
  }
}

/**
 * Implements hook_block_info().
 */
function arbitrary_content_block_info() {
  $blocks = array();
  $ac_blocks = arbitrary_content_load_all('block');
  foreach ($ac_blocks as $acb) {
    $blocks[$acb->name] = array(
      'info' => t($acb->description),
      'cache' => FALSE
    );
  }
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function arbitrary_content_block_view($delta = '') {
  $block = array();

  $ac = arbitrary_content_load($delta);

  if ($ac != NULL) {
    $block['subject'] = t($ac->data['title']);
    $elements = $ac->view('full');

    $block['content'] = $elements;

    return $block;
  }
}

/**
 * Load arbitrary content block/page by AC ID
 *
 * @param $acid
 *   The ID of an arbitrary content block/page
 * @return
 *   An object containing the arbitrary content
 */
function arbitrary_content_load($name) {
  $query = new EntityFieldQuery();

  $query
    ->entityCondition('entity_type', 'arbitrary_content')
    ->propertyCondition('name', $name, '=');

  $result = $query->execute();

  if (isset($result['arbitrary_content'])) {
    $ac = entity_load('arbitrary_content', array_keys($result['arbitrary_content']));

    return array_pop($ac);
  }
}

/**
 * Update or Insert arbtrary content block/page
 *
 * @param $content
 *   An ac object to be inserted/updated
 */
function arbitrary_content_save_content(&$content) {
  entity_save('arbitrary_content', $content);
}

function arbitrary_content_load_names() {
  $names = db_query('SELECT name FROM {arbitrary_content}')->fetchAllAssoc('name');

  return $names;
}

/**
 * Load all arbitrary content by type
 *
 * @param $type
 *   The type of the arbitrary content (page,block)
 * @return
 *   An array containing multiple arbitrary content items.
 */
function arbitrary_content_load_all($ac_type = NULL) {
  $acs = array();

  $query = new EntityFieldQuery();

  if (!$ac_type) {
    $query
      ->entityCondition('entity_type', 'arbitrary_content');
  }
  else {
    $query
      ->entityCondition('entity_type', 'arbitrary_content')
      ->propertyCondition('ac_type', $ac_type, '=');
  }

  $result = $query->execute();

  if (isset($result['arbitrary_content'])) {
    $acs = entity_load('arbitrary_content', array_keys($result['arbitrary_content']));
  }

  foreach ($acs as $ac) {
    $acs[$ac->name] = $ac;
  }

  return $acs;
}

/**
 * Title callback function providing titles for AC pages
 *
 * @param $ac
 *   An Arbitrary Content Object
 */
function arbitrary_content_page_title($ac) {
  return t($ac->data['title']);
}

/**
 * Page callback functions for exposing arbitrary content as a page.
 *
 * @param $ac
 *   An Arbitrary Content Object.
 */
function arbitrary_content_page($ac) {
  return theme('ac_view', array('ac' => $ac));
}

