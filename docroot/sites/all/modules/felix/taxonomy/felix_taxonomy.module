<?php

/**
 * Implements hook_felix_hash().
 */
function felix_taxonomy_felix_hash($parts, $path, $config) {
  $output = array();

  // Build hash for taxonomy pages.
  if (arg(0) == 'taxonomy' && arg(1) == 'term' && is_numeric(arg(2)) && ($term = taxonomy_term_load(arg(2)))) {
    $fields = db_select('field_config', 'fc')
      ->fields('fc', array('field_name', 'data'))
      ->condition('fc.module', 'taxonomy')
      ->execute()
      ->fetchAll();
    foreach ($fields as $field) {
      $data = unserialize($field->data);
      foreach ($data['settings']['allowed_values'] as $vocab) {
        if ($vocab['vocabulary'] == $term->vocabulary_machine_name && in_array('taxonomy_' . $field->field_name, $parts)) {
          $output['taxonomy_' . $field->field_name] = array((int) $term->tid);
        }
      }
    }
  }

  // Determine which entity is displayed on the given $path.
  $entity = null;
  $entity_type = null;
  foreach (entity_get_info() as $type => $info) {
    $load_hook = $info['load hook'];
    if ($info['fieldable'] && arg(0, $path) == $type && is_numeric(arg(1, $path)) && function_exists($load_hook)) {
      $entity = $load_hook(arg(1, $path));
      $entity_type = $type;
    }
  }

  // If an entity is displayed, loop though all the parts to find taxonomy fields.
  if ($entity) {
    foreach ($parts as $part) {
      if (substr($part, 0, 9) == 'taxonomy_') {
        $config = isset($config[$part]) ? $config[$part] : array();
        $config += array(
          'depth' => 0,
        );
        $field_name = substr($part, 9);
        $tids = array();
        if ($items = field_get_items($entity_type, $entity, $field_name)) {
          foreach ($items as $item) {
            if ($config['depth'] > 0) {
              // Only tags with a specified depth may be used.
              // Build a query with one join per level to check this.
              $last = 'h0';
              $select = db_select('taxonomy_term_hierarchy', 'h0')->fields('h0');
              for ($i = 1; $i < (int) $config['depth']; ++$i) {
                $select->join('taxonomy_term_hierarchy', "h$i", "$last.parent = h$i.tid");
                $last = "h$i";
              }
              $select->condition("$last.parent", 0);
              $select->condition('h0.tid', $item['tid']);
              if ($select->execute()->fetchObject()) {
                // The condition that the last parent must be 0 means that we have
                // the correct depth when we get a result.
                $tids[] = (int) $item['tid'];
              }
            }
            else {
              $tids[] = (int) $item['tid'];
            }
          }
        }
        $output[$part] = $tids;
      }
    }
  }

  return $output;
}

/**
 * Implements hook_felix_hash_options().
 */
function felix_taxonomy_felix_hash_options() {
  $options = array();
  $query = db_select('field_config', 'fc')
    ->fields('fc', array('field_name'))
    ->condition('fc.module', 'taxonomy');
  $fci = $query->join('field_config_instance', 'fci', 'fc.field_name = fci.field_name');
  $fields = $query->fields('fci', array('data'))->groupBy('fc.field_name')->execute();
  foreach ($fields as $field) {
    $data = unserialize($field->data);
    $options['taxonomy_' . $field->field_name] = t('Taxonomy field %field', array(
      '%field' => $data['label'],
    ));
  }
  return $options;
}

/**
 * Implements hook_felix_hash_config().
 */
function felix_taxonomy_felix_hash_config($option, $values) {
  if (substr($option, 0, 15) == 'taxonomy_field_') {
    return array(
      'depth' => array(
        '#type' => 'select',
        '#title' => t('Depth'),
        '#options' => array(0 => t('Any'), 1 => t('Root'), 2 => 2, 3 => 3, 4 => 4, 5 => 5),
        '#default_value' => isset($values['depth']) ? $values['depth'] : 0,
        '#description' => t('Only use terms with the specified depth.'),
      ),
    );
  }
}
