<?php

/**
 * @file raygun.module
 *
 * Integrates Drupal with raygun.io for error tracking and alerting.
 */

/**
 * Retrieves the path to the PHP library for Raygun.io.
 */
function _raygun_get_library_path() {
  return DRUPAL_ROOT . '/sites/all/libraries/raygun/RaygunClient.php';
}

/**
 * Implements hook_help().
 */
function raygun_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/config/development/raygun' :
      $output .= '<p>' . t('Integrates Drupal with <a href="!url">Raygun.io</a> for error tracking and alerting.', array(
        '!url' => 'http://raygun.io/',
      )) . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_permission().
 */
function raygun_permission() {
  return array(
    'administer raygun' => array(
      'title' => t('Administer Raygun.io settings'),
      'description' => t('Configure the settings needed to integrate with Raygun.io.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function raygun_menu() {
  $items = array();
  $items['admin/config/development/raygun'] = array(
    'title' => 'Raygun.io settings',
    'description' => 'Make changes to your Raygun.io settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('raygun_admin_form'),
    'access arguments' => array('administer raygun'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'raygun.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_boot().
 */
function raygun_boot() {
  $apikey = trim(variable_get('raygun_apikey', ''));
  if (file_exists(_raygun_get_library_path()) && !empty($apikey)) {
    global $user;
    global $raygun_client;

    require_once _raygun_get_library_path();
    $raygun_client = new \Raygun4php\RaygunClient(variable_get('raygun_apikey', ''), (bool) variable_get('raygun_async_sending', 1));
    if (variable_get('raygun_send_version', 1) && variable_get('raygun_application_version', '') != '') {
      $raygun_client->SetVersion(variable_get('raygun_application_version', ''));
    }
    if (variable_get('raygun_send_email', 1) && $user->uid) {
      $raygun_client->SetUser($user->mail);
    }
    if (variable_get('raygun_exceptions', 1)) {
      set_exception_handler('raygun_exception_handler');
    }
    if (variable_get('raygun_error_handling', 1)) {
      set_error_handler('raygun_error_handler');
    }
  }
}

/**
 * Error handler for Raygun.io.
 */
function raygun_error_handler($errno, $errstr, $errfile, $errline ) {
  global $raygun_client;
  $raygun_client->SendError($errno, $errstr, $errfile, $errline);
}

/**
 * Exception handler for Raygun.io.
 */
function raygun_exception_handler($exception) {
  global $raygun_client;
  $raygun_client->SendException($exception);
}
