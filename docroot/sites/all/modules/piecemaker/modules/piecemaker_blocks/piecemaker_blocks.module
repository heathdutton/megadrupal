<?php
/**
 * @file
 *   Core and Contrib hooks for the Piecemaker Blocks module
 */

/**
* Implements hook_menu().
*/
function piecemaker_blocks_menu() { 
  $items['admin/structure/block/piecemaker/add'] = array(
    'title' => 'Add Piecemaker block',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('piecemaker_add_block_form'),
    'access arguments' => array('administer blocks'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'piecemaker_blocks.admin.inc',
  );
  $items['admin/structure/block/piecemaker/edit/%'] = array(
    'title' => 'Configure Block',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('piecemaker_add_block_form', 5),
    'access arguments' => array('administer blocks'),
    'file' => 'piecemaker_blocks.admin.inc',
  );
  $items['admin/structure/block/piecemaker/edit/%/configure'] = array(
    'title' => 'Configure block',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
  );
  return $items;
}

/**
 * Implements hook_piecemaker_handler()
 */
function piecemaker_blocks_piecemaker_handler() {
  return array(
    'piecemaker_blocks' => array(
      'callback' => 'piecemaker_blocks_xml_build',
      'access' => 'piecemaker_blocks_access',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function piecemaker_blocks_block_info() {
  $blocks = array();

  $result = db_query('SELECT bid, info FROM {piecemaker_blocks} ORDER BY info');
  foreach ($result as $block) {
    $blocks[$block->bid]['info'] = t('Piecemaker: ') . $block->info;
    // Not worth caching.
    $blocks[$block->bid]['cache'] = DRUPAL_NO_CACHE;
  }
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function piecemaker_blocks_block_configure($delta = 0) {
  if ($delta) {
    $custom_block = piecemaker_blocks_block_get($delta);
  }
  else {
    $custom_block = array();
  }
  module_load_include('inc', 'piecemaker_blocks', 'piecemaker_blocks.admin');
  return piecemaker_blocks_block_form($custom_block);
}

/**
 * Implements hook_block_save().
 */
function piecemaker_blocks_block_save($delta = 0, $edit = array()) {
  module_load_include('inc', 'piecemaker_blocks', 'piecemaker_blocks.admin');
  piecemaker_save_block_form_submit($delta, $edit);
}

/**
 * Implements hook_block_view().
 *
 * Generates the administrator-defined blocks for display.
 */
function piecemaker_blocks_block_view($delta = '') {
  $block = piecemaker_blocks_block_get($delta);
  $profile = piecemaker_profile_load($block['pid']);
  $vars = array(
    'handler' => 'piecemaker_blocks',
    'key' => $delta,
    'profile' => $profile,
  );
  $data['subject'] = NULL;
  $data['content'] = theme('piecemaker', $vars);
  return $data;
}

/**
 * Implements hook_theme()
 */
function piecemaker_blocks_theme() {
  $path = drupal_get_path('module', 'piecemaker_blocks');
  return array(
    'piecemaker_blocks_files' => array(
      'render element' => 'form',
      'path' => $path,
      'file' => 'piecemaker_blocks.admin.inc',
    ),
  );
}

/**
 * Gets the block elements for a piecemaker Block
 */
function piecemaker_blocks_block_get($delta) {
  $blocks = &drupal_static(__FUNCTION__, array());
  if (!empty($blocks[$delta])) {
    return $blocks[$delta];
  }
  $edit = db_query('SELECT * FROM {piecemaker_blocks} WHERE bid = :bid', array(':bid' => $delta))
    ->fetchAssoc();
  $edit['files'] = db_query('SELECT * FROM {piecemaker_blocks_files} WHERE bid = :bid ORDER BY weight ASC', array(':bid' => $delta))
    ->fetchAllAssoc('weight');
  foreach ($edit['files'] as $key => $file) {
    $file = (array)$file;
    $file['options'] = unserialize($file['data']);
    unset($file['data']);
    $file['media']['fid'] = $file['fid'];
    $edit['files'][$key] = $file;
  }
  $blocks[$delta] = $edit;
  return $blocks[$delta];
}
/**
 * Ajax callback for block files
 */
function piecemaker_blocks_file_ajax(&$form, &$form_state) {
  return $form['settings']['file']; 
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function piecemaker_blocks_form_block_admin_display_form_alter(&$form, &$form_state) {
  foreach ($form['blocks'] as $key => $block) {
    if ($block['module']['#value'] == 'piecemaker_blocks') {
      $form['blocks'][$key]['configure']['#href'] = 'admin/structure/block/piecemaker/edit/' . $block['delta']['#value'];
    }
  }
}

/**
 * Builds the array that will be handed off to the Piecemaker XML file
 * 
 * @return
 *   A Piecemaker XML array
 */
function piecemaker_blocks_xml_build($delta) {
  module_load_include('inc', 'piecemaker_blocks', 'piecemaker_blocks.xml');
  return _piecemaker_blocks_xml($delta);
}