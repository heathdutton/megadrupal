<?php

/**
 * Implements hook_help().
 */
function easy_currency_con_help($path, $arg) {
  switch ($path) {
    case 'admin/help#easy_currency_con':
      return '<p>' . t('Easy Currency Converter is a simple module for currency translation. It uses Yahoo api for currency translation.') . '</p>';
  }
}

/**
 * Implements hook_menu().
 */
function easy_currency_con_menu() {
  $items['easy_currency_con/list'] = array(
    'page callback' => 'easy_currency_con_list_ajax_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * @desc List of currencies.
 */
function easy_currency_con_currency_list() {
  $currency_list = array(
    'USD' => 'USD (America)',
    'JPY' => 'JPY (Japan)',
    'INR' => 'INR (India)',
    'CNY' => 'CNY (China)',
    'EUR' => 'EUR (Euro)',
    'BGN' => 'BGN (Bulgaria)',
    'CZK' => 'CZK (Czech Republic)',
    'DKK' => 'DKK (Denmark)',
    'GBP' => 'GBP (Great Britain - UK)',
    'HUF' => 'HUF (Hungary)',
    'LTL' => 'LTL (Lithuania)',
    'PLN' => 'PLN (Poland)',
    'RON' => 'RON (Romania)',
    'SEK' => 'SEK (Sweden)',
    'CHF' => 'CHF (Switzerland)',
    'NOK' => 'NOK (Bouvet Island)',
    'HRK' => 'HRK (Croatia)',
    'RUB' => 'RUB (Russian Federation)',
    'TRY' => 'TRY (Turkey)',
    'AUD' => 'AUD (Australia)',
    'BRL' => 'BRL (Brazil)',
    'CAD' => 'CAD (Canada)',
    'HKD' => 'HKD (Hong Kong)',
    'IDR' => 'IDR (Indonesia)',
    'ILS' => 'ILS (Israel)',
    'KRW' => 'KRW (South Korea)',
    'MXN' => 'MXN (Mexico)',
    'MYR' => 'MYR (Malaysia)',
    'NZD' => 'NZD (New Zealand)',
    'PHP' => 'PHP (Philippines)',
    'SGD' => 'SGD (Singapore)',
    'THB' => 'THB (Thailand)',
    'ZAR' => 'ZAR (South Africa)',
    'ISK' => 'ISK (Iceland)',
  );

  return $currency_list;
}

/**
 * Implements hook_block_info().
 */
function easy_currency_con_block_info() {
  $blocks['easy_currency_con'] = array(
    'info' => t('Currency converter'),
    'cache' => DRUPAL_NO_CACHE
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function easy_currency_con_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'easy_currency_con':
      $block['subject'] = t('Currency Converter');
      $block['content'] = drupal_get_form('easy_currency_con_form');
    break;
  }
  return $block;
}

/**
 * @desc Form for currency conversion.
 */
function easy_currency_con_form() {
  $form = array();
  global $base_path;
  $module_path = drupal_get_path('module', 'easy_currency_con');
  $form['#attached']['js'][] = $module_path . '/js/easy_currency_con.js';
  $form['#attached']['css'][] = $module_path . '/css/easy_currency_con.css';
  $form['#prefix'] = '<div id="converter-wrapper">';
  $form['amount'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class' => array('easy-currency-con-amount')),
    '#size' => 30,
    '#default_value' => 1,
    '#element_validate' => array('element_validate_integer_positive'),
  );
  $form['from_input'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class' => array('easy-currency-con-from-input')),
    '#maxlength' => 10,
    '#size' => 30,
    '#autocomplete_path' => 'easy_currency_con/list',
  );
  $img_path = $base_path . $module_path . '/images/conversion_icon.png';
  $form['inverse_input'] = array(
    '#type' => 'markup',
    '#markup' => l("<img src=$img_path>", 'javascript:void(0)',  array('html' => TRUE, 'external' => TRUE, 'attributes' => array('class' => array('easy-currency-con-inverse-input')))),
  );
  $form['to_input'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class' => array('easy-currency-con-to-input')),
    '#maxlength' => 10,
    '#size' => 30,
    '#autocomplete_path' => 'easy_currency_con/list',
  );
  $form['rate'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class' => array('easy-currency-con-rate'), 'disabled' => 'disabled'),
    '#size' => 30,
  );
  $form['#suffix'] = '</div>';
  return $form;
}

/**
 * @desc AJAX callback for autocomplete functionality.
 */
function easy_currency_con_list_ajax_callback($searchstring) {
  // Get the list of currencies.
  $currency_list = easy_currency_con_currency_list();
  $list = array();

  foreach($currency_list as $key => $string) {
    if(stripos($string, $searchstring) !== false) {
      $list[$key] = $string;
    }
  }

  // Return the result to the form in json.
  drupal_json_output($list);
}
