<?php
/**
 * @file field_formatter_value_link.module
 * Provides a field formatter that outputs a field as a local link whose path
 * consists of a base path + the value of the field. In other words, ideal
 * for linking to a View set up to use an argument.
 * This provides the equivalent functionality of linking field in Core Profile
 * module to lists of other users with the same value in that field.
 *
 * @todo:
 *  - UI improvements, see comments in code.
 *  - add a formatter or an option to use the entity ID for reference fields.
 */

/**
 * Implements hook_field_formatter_info().
 */
function field_formatter_value_link_field_formatter_info() {
  return array(
    'value_link' => array(
      'label' => t('Value link'),
      'field types' => array('text', 'number'),
      'settings' => array(
        'base_path' => '',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function field_formatter_value_link_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();

  if ($display['type'] == 'value_link') {
    $element['base_path'] = array(
      '#title' => t('Base path'),
      // TODO: description with the usual stuff about how to enter a path -- follow UI in menu.module
      '#type' => 'textfield',
      '#default_value' => $settings['base_path'],
      // TODO: validate base path exists on the site. Use something from menu module?
      //'#element_validate' => array('element_validate_integer_positive'),
      '#required' => TRUE,
    );
  }

  return $element;

}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function field_formatter_value_link_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = '';

  if ($display['type'] == 'value_link') {
    $summary = t('Linked to base path %path', array('%path' => $settings['base_path']));
  }

  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function field_formatter_value_link_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];

  switch ($display['type']) {
    case 'value_link':
      foreach ($items as $delta => $item) {
        // Safe value is safe, right? Because I'm sure I saw in CCK 6 that wasn't the case.
        $element[$delta] = array('#markup' => l($item['safe_value'], $settings['base_path'] . '/' . $item['safe_value']));
      }
      break;
  }

  return $element;
}
