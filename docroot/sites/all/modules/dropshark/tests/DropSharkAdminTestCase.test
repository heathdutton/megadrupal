<?php

/**
 * Class DropSharkAdminTestCase.
 */
class DropSharkAdminTestCase extends DrupalWebTestCase {

  protected $adminUser;

  public static function getInfo() {
    return array(
      'name' => 'DropShark admin',
      'description' => 'Tests administrative functionality.',
      'group' => 'DropShark',
    );
  }

  function setUp() {
    parent::setUp('dropshark');
    variable_set('dropshark_request_class', 'DropSharkRequestTest');
    $this->adminUser = $this->drupalCreateUser(array('administer site configuration'));
  }

  function testConfigScreen() {
    $initial_help_text = 'In order to register your site with the DropShark service, you\'ll need to enter your credentials and site identifier.';
    $configured_help_text = 'Your site is registered and will send data to DropShark. Log in to DropShark to analyze your data.';

    // Initial configuration.
    $this->drupalLogin($this->adminUser);
    $this->drupalGet('admin/config/services/dropshark');
    $this->assertText($initial_help_text);

    // Submit bad configs.
    $edit['email'] = 'test_user';
    $edit['password'] = 'pwd';
    $edit['site_id'] = '0bb250ce-ffd5-4563-81fa-c8a165cd6af8';
    $this->drupalPost('admin/config/services/dropshark', $edit, t('Register site'));
    $this->assertText('Unable to register your site');
    $this->assertNoText('Your site has been registered with DropShark');

    // Submit valid configs.
    $edit['password'] = 'password';
    $this->drupalPost('admin/config/services/dropshark', $edit, t('Register site'));
    $this->assertText('Your site has been registered with DropShark');
    $this->assertNoText('Unable to register your site');
    $this->assertNoText($initial_help_text);
    $this->assertText($configured_help_text);
    $this->assertText('0bb250ce-ffd5-4563-81fa-c8a165cd6af8');

    // Perform test connection.
    $edit = array();
    $this->drupalPost('admin/config/services/dropshark', $edit, t('Check'));
    $this->assertText('Connection successfully verified');
    $this->assertNoText('Unable to verify the site connection');

    // Use a garbage token, test connection (expected to fail).
    variable_set('dropshark_site_token', 'invalid_token');
    $this->drupalPost('admin/config/services/dropshark', $edit, t('Check'));
    $this->assertText('Unable to verify the site connection');
    $this->assertNoText('Connection successfully verified');

    // Perform reset.
    $this->drupalPost('admin/config/services/dropshark', $edit, t('Reset'));
    $this->assertText($initial_help_text);
  }

  function testRequirements() {
    $reg_text = 'Information collected from your site cannot be submitted to DropShark. Please register your site to utilize DropShark.';
    $conn_text = 'Information collected from your site cannot be submitted to DropShark. Please check your DropShark configuration.';
    $ok_text = '<td class="status-title">DropShark</td>';

    // Un-registered.
    $this->drupalLogin($this->adminUser);
    $this->drupalGet('admin/reports/status');
    $this->assertText($reg_text);
    $this->assertNoText($conn_text);
    $this->assertNoRaw($ok_text);

    // Registered, but unable to connect.
    variable_set('dropshark_site_token', 'invalid_token');
    $this->drupalGet('admin/reports/status');
    $this->assertNoText($reg_text);
    $this->assertText($conn_text);
    $this->assertNoRaw($ok_text);

    // Successful connection.
    variable_set('dropshark_site_token', 'valid_token');
    $this->drupalGet('admin/reports/status');
    $this->assertNoText($reg_text);
    $this->assertNoText($conn_text);
    $this->assertRaw($ok_text);
  }

}