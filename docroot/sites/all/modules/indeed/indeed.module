<?php

/**
 * @file
 * The Indeed module that displays search results and a search block
 */

/**
 * Implementation of hook_menu().
 */

function indeed_menu() {
  $items = array();
   
   $items['admin/config/indeed'] = array(
    'title' => 'Indeed',
    'description' => 'Settings for Indeed',
    'position' => 'left',
    'weight' => -5,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
   
  $items['admin/config/indeed/settings'] = array(
    'title' => 'Indeed settings',
    'description' => 'Settings for Indeed',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('indeed_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'indeed.admin.inc',
  );
  
  return $items;  
}

/**
 * Implementation of hook_block_info().
 */

function indeed_block_info() {
  $blocks['indeed_xml'] = array(
    'info' => t('Indeed XML'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_GLOBAL, //Default
  );
  
  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function indeed_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'indeed_xml':
      $block['subject'] = t('Indeed Search');
      $block['content'] = indeed_xml();
      break;
  }
  return $block;
}

function indeed_xml() {
  $array = indeed_xml2array();

  $list = '<ul class="indeed_list">'; 
  foreach ($array->results->result as $value) {
    $list .= '<li><a href="' . $value->url . '">' . $value->jobtitle . '</a></li>';
    $list .= '<ul class="indeed_list_inner">';
    $list .= '<li>' . $value->company . '</li>';
    $list .= '<li>' . $value->formattedLocation . '</li>';
    $list .= '<li>' . $value->formattedRelativeTime . '</li>';
    $list .= '</ul>';
  }
  $list .= '</ul>';

  return $list;
}

/**
 * Sets array as variable from Indeed XML
 */
function indeed_xml2array() {
  $url = "http://api.indeed.com/ads/apisearch?publisher=";
  $url .= variable_get('indeed_pubid');
  $url .= "&q=";
  $url .= preg_replace('/\s+/', '%20', variable_get('indeed_q'));
  $url .= "&l=";
  $url .= preg_replace('/\s+/', '%20', variable_get('indeed_l'));
  $url .= "&v=2&radius=";
  $url .= preg_replace('/\s+/', '', variable_get('indeed_radius'));
  $url .= "&sort=";
  $url .= variable_get('indeed_sort');
  $url .= "&limit=";
  $url .= preg_replace('/\s+/', '', variable_get('indeed_limit'));
  $url .= "&co=";
  $url .= variable_get('indeed_country');
  $url .= "&useragent=";
  $url .= $_SERVER['HTTP_USER_AGENT'];

  $xml = indeed_download_page($url);

  $array = simplexml_load_string($xml);
      
  return $array;
}

/**
 * Fetches xml data from Indeed servers
 */
function indeed_download_page($path) {
  if (function_exists('curl_init')) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $path);
    curl_setopt($ch, CURLOPT_FAILONERROR, 1);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_TIMEOUT, 15);
    $ret_value = curl_exec($ch);
    curl_close($ch);
    return $ret_value;
  } else {
    drupal_set_message(t('Error: PHP Curl is required for the Indeed module.'), 'error');

  }
}
