<?php

/**
 * @file
 * Adds a hashtag formatter for taxonomy terms.
 */

/**
 * Implements hook_field_formatter_info().
 */
function hashtag_taxonomy_formatter_field_formatter_info() {

  /*
   *  Explanation of settings:
   *   - only_latin : Keep only latin characters in the hashtag.
   *   - transliterate : Transliterate non latin characters.
   *   - twitter_link : Make the hashtags as links to twitter search.
   *   - twitter_link_blank : Set the link to twitter to open in new window.
   */

  return array(
    'taxonomy_term_reference_hashtag' => array(
      'label' => t('Hashtag'),
      'field types' => array('taxonomy_term_reference'),
      'settings'  => array(
        'only_latin' => FALSE,
        'transliterate' => FALSE,
        'link' => FALSE,
        'twitter_link' => FALSE,
        'twitter_link_blank' => FALSE,
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function hashtag_taxonomy_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  // Initialize array.
  $element = array();

  // Remove non latin characters.
  $element['only_latin'] = array(
    '#title' => t('Remove non latin characters'),
    '#type' => 'checkbox',
    '#default_value' => $settings['only_latin'],
  );

  // Check if transliteration module is installed and enabled.
  $transliteration_available = module_exists('transliteration');

  // Transliterate term name.
  $element['transliterate'] = array(
    '#title' => t('Transliterate non latin characters(Transliteration module required.)'),
    '#type' => 'checkbox',
    '#default_value' => $settings['transliterate'] && $transliteration_available,
    '#disabled' => !$transliteration_available,
    '#states' => array(
      // Disable option when only_latin is checked.
      'disabled' => array(
        ':input[name="fields[' . $field['field_name'] . '][settings_edit_form][settings][only_latin]"]' => array('checked' => TRUE),
      ),
    ),
  );

  // Show the hashtags as links to twitter search.
  $element['link'] = array(
    '#title' => t('Show hashtags as links'),
    '#type' => 'checkbox',
    '#default_value' => $settings['link'],
  );

  // Show the hashtags as links to twitter search.
  $element['twitter_link'] = array(
    '#title' => t('Show hashtags as links to twitter search'),
    '#type' => 'checkbox',
    '#default_value' => $settings['twitter_link'],
    '#states' => array(
      // Disable option when twitter_link is unchecked.
      'disabled' => array(
        ':input[name="fields[' . $field['field_name'] . '][settings_edit_form][settings][link]"]' => array('checked' => FALSE),
      ),
    ),
  );

  // Twitter link target(_blank or self).
  $element['twitter_link_blank'] = array(
    '#title' => t('Open twitter links in new tab'),
    '#type' => 'checkbox',
    '#default_value' => $settings['twitter_link_blank'],
    '#states' => array(
      // Disable option when twitter_link is unchecked.
      'disabled' => array(
        ':input[name="fields[' . $field['field_name'] . '][settings_edit_form][settings][twitter_link]"]' => array('checked' => FALSE),
      ),
    ),
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function hashtag_taxonomy_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  // Initialize array.
  $summary = array();

  // Latin characters option.
  if ($settings['only_latin']) {
    $summary[] = t('Remove non latin characters.');
  }
  else {
    $summary[] = t('Keep non latin characters.');
  }

  // Check if transliteration module is installed and enabled.
  $transliteration_available = module_exists('transliteration');

  // Transliteration option.
  if ($settings['transliterate'] && $transliteration_available) {
    $summary[] = t('Transliterate non latin characters.');
  }

  // Show as link.
  if ($settings['link']) {
    $summary[] = t('Show hashtags as links.');
    // Twitter links option.
    if ($settings['twitter_link']) {
      $summary[] = t('Show hashtags as links to twitter search.');

      // If twitter links are enabled, check for twitter link target option.
      if ($settings['twitter_link_blank']) {
        $summary[] = t('Open twitter links in new tab.');
      }
    }
  }

  return implode('<br />', $summary);
}


/**
 * Implements hook_field_formatter_view().
 */
function hashtag_taxonomy_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];

  // Initialize array.
  $element = array();

  foreach ($items as $delta => $item) {
    $tid = $item['tid'];
    $term[] = $tid;
    $full_term = entity_load('taxonomy_term', $term);
    if (isset($full_term[$tid])) {
      // Based on settings, convert term name to a social-safe-hashtag value.
      $hashtagged_string = _hashtag_taxonomy_formatter_convert_hashtag($full_term[$tid], $settings);

      // Check if hashtag actually exists.
      if (!empty($hashtagged_string)) {
        $element[$delta] = array(
          '#markup' => $hashtagged_string,
        );
      }
    }
  }

  return $element;
}

/**
 * Make the string hashtag safe.
 */
function _hashtag_taxonomy_formatter_convert_hashtag($term, $settings) {
  // Capitalize first letter of each word.
  $hashtag = mb_convert_case($term->name, MB_CASE_TITLE, 'UTF-8');

  // Keep only letters and numbers.
  if (!$settings['only_latin']) {
    // Keep latin, non latin characters and numbers.
    $hashtag = preg_replace('/[\p{P}+\s]/u', '', $hashtag);
  }
  else {
    // Keep only latin characters and numbers.
    $hashtag = preg_replace('/[^A-Za-z0-9]/', '', $hashtag);
  }

  // For all the remaining actions, we check if there are available characters.
  if (!empty($hashtag)) {

    // Check if transliteration module is installed and enabled.
    $transliteration_available = module_exists('transliteration');

    // Transliterate text if enabled.
    if ($settings['transliterate'] && $transliteration_available) {
      $hashtag = transliteration_get($hashtag, '');
    }

    // Add hash.
    $hashtag = '#' . $hashtag;

    // Get link settings.
    if ($settings['link']) {
      // Show hashtag as link to twitter search.
      if ($settings['link'] && $settings['twitter_link']) {
        // Get target.
        $settings['twitter_link_blank'] ? $target = '_blank' : $target = '_self';

        // Create link.
        $hashtag = l($hashtag, 'https://twitter.com/search',
          array(
            'attributes' => array(
              'target' => $target,
            ),
            'query' => array(
              'q' => $hashtag,
            ),
          )
        );
      }
      else if ($settings['link'] && !$settings['twitter_link']) {
        // Link inside drupal site.
        $hashtag = l($hashtag, drupal_get_path_alias('taxonomy/term/' . $term->tid));
      }
    }
  }

  // Sanitize string, just in case.
  $hashtag = filter_xss($hashtag, array('a'));

  return $hashtag;
}
