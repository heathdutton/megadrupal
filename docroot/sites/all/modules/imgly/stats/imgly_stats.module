<?php

/**
 * @file
 * Imgly Statistics module.
 */
/**
 * Define constants for imgly_stats action types.
 */
define('IMGLY_VIEW', 0);
define('IMGLY_DOWNLOAD', 1);

/**
 * Implements hook_permission().
 */
function imgly_stats_permission() {
  return array(
    'administer imgly_stats' => array(
      'title' => t('Administer Imgly Statistics settings'),
    ),
    'access imgly_stats reports' => array(
      'title' => t('Access Imgly Statistics reports'),
    ),
    'view imgly_stats' => array(
      'title' => t('View Imgly Statistics on node pages'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function imgly_stats_menu() {
  return array(
    // AJAX callback.
    'js/imgly' => array(
      'page callback' => '_imgly_stats_ajax',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    ),
    // Admin settings page.
    'admin/config/media/imgly/stats' => array(
      'title' => 'Statistics',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('imgly_stats_settings_form'),
      'access arguments' => array('administer imgly_stats'),
      'file' => 'includes/imgly_stats.admin.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => 1,
    ),
    // Statistics report.
    'admin/reports/imgly' => array(
      'title' => 'Imgly',
      'page callback' => 'imgly_stats_report',
      'access arguments' => array('access imgly_stats reports'),
      'file' => 'includes/imgly_stats.admin.inc',
    ),
    // Default reports local task.
    'admin/reports/imgly/view' => array(
      'title' => 'Statistics',
      'type' => MENU_DEFAULT_LOCAL_TASK,
    ),
    // Accesslog report.
    'admin/reports/imgly/log' => array(
      'title' => 'Access Log',
      'page callback' => 'imgly_stats_accesslog',
      'access arguments' => array('access imgly_stats reports'),
      'file' => 'includes/imgly_stats.admin.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => 1,
    ),
  );
}

/**
 * Implements template_preprocess_node().
 *
 * Generate token and set javascript settings.
 */
function imgly_stats_preprocess_node(&$variables) {
  if ($variables['type'] === 'imgly' && !$variables['teaser']) {
    // If user is anonymous, figure out what to do.
    if (user_is_anonymous()) {
      // Start session for anonymous users.
      if (variable_get('imgly_stats_anonymous_token', 0)) {
        drupal_session_start();
      }
    }

    $token = drupal_get_token('imgly_stats');
    drupal_add_js(array('imgly' => array('nid' => $variables['nid'], 'token' => $token)), 'setting');
    drupal_add_js(drupal_get_path('module', 'imgly_stats') . '/js/imgly_stats.js');
  }
}

/**
 * Page callback.
 *
 * Logs an event to the imgly_stats table.
 *
 * @see imgly_stats_menu().
 */
function _imgly_stats_ajax($ajax = TRUE, $action = IMGLY_VIEW, $nid = NULL) {
  if (!isset($nid)) {
    $nid = isset($_POST['nid']) ? filter_xss($_POST['nid']) : NULL;
  }

  if ($ajax) {
    $token = isset($_POST['token']) ? filter_xss($_POST['token']) : NULL;

    // If users are anonymous and we aren't creating sessions for them, skip token validation.
    $skip_anonymous = user_is_anonymous() ? !(bool) variable_get('imgly_stats_anonymous_token', 0) : FALSE;

    if (!isset($nid) || !isset($token)) {
      drupal_json_output(array('ok' => FALSE, 'msg' => 'params'));
      exit;
    }
    else if (!drupal_valid_token($token, 'imgly_stats', $skip_anonymous)) {
      drupal_json_output(array('ok' => FALSE, 'msg' => 'token'));
      exit;
    }
  }

  $object = (object) array(
      'nid' => $nid,
      'action' => $action,
      'timestamp' => time(),
      'ip' => ip_address(),
      'uid' => $GLOBALS['user']->uid,
  );

  $ok = (bool) drupal_write_record('imgly_stats', $object);

  if ($ajax) {
    $json = array('ok' => $ok);

    // When logging a view action (on page load) we return the total number of views and downloads.
    if ($action === IMGLY_VIEW && user_access('view imgly_stats')) {
      $json['stats'] = array(
        'views' => array('label' => 'Views', 'count' => imgly_stats_get_views($nid)),
        'downloads' => array('label' => 'Downloads', 'count' => imgly_stats_get_downloads($nid)),
      );
    }

    drupal_json_output($json);
  }
  else {
    return $ok;
  }
}

/**
 * Return number of views for an imgly node.
 *
 * @param int $nid
 * @return int
 */
function imgly_stats_get_views($nid) {
  $query = db_select('imgly_stats')->condition('nid', $nid, '=')->condition('action', IMGLY_VIEW, '=');
  $query->addExpression('COUNT(*)', 'count');
  return $query->execute()->fetchField();
}

/**
 * Return number of downloads for an imgly node.
 *
 * @param int $nid
 * @return int
 */
function imgly_stats_get_downloads($nid) {
  $query = db_select('imgly_stats')->condition('nid', $nid, '=')->condition('action', IMGLY_DOWNLOAD, '=');
  $query->addExpression('COUNT(*)', 'count');
  return $query->execute()->fetchField();
}