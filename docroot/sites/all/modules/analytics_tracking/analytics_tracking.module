<?php
/**
 * @file
 * Define tokens based on the parsing of cookie.
 */
module_load_include('php', 'analytics_tracking', 'class.gatparse');

/**
 * Implements hook_permission().
 */
function analytics_tracking_permission() {
  return array(
    'administer analytics_tracking' => array(
      'title' => t('Administer Analytics Tracking'),
      'description' => t('Perform maintenance tasks for Analytics Tracking module.'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function analytics_tracking_menu() {
  $items['admin/config/system/analytics_tracking'] = array(
    'title' => 'Analytics Tracking',
    'description' => 'Configure Analytics Tracking module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('analytics_tracking_admin_settings_form'),
    'access arguments' => array('administer analytics_tracking'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements hook_admin_settings() for module settings configuration.
 */
function analytics_tracking_admin_settings_form($form_state) {
  // Link specific configurations.
  $form['general'] = array(
    '#type' => 'fieldset',
    '#title' => t('General Settings'),
  );
  $form['general']['analytics_tracking_enable_js_ext'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Javascript extension to capture Analytics data (such as referrer and landing pages).'),
    '#default_value' => variable_get('analytics_tracking_enable_js_ext', 1),
  );
  return system_settings_form($form);
}

/**
 * Implements _form_validate().
 */
function analytics_tracking_admin_settings_form_validate($form, &$form_state) {
  // Nothing to validate, yet.
}


/**
 * Implements hook_page_alter() to insert JavaScript to the appropriate scope/region of the page.
 */
function analytics_tracking_page_alter(&$page) {
  if ($enable_js_ext = variable_get('analytics_tracking_enable_js_ext', 1)) {
    drupal_add_js(drupal_get_path('module', 'analytics_tracking') . '/gat.js');

    // capture the extended information from the cookies.
    $script = 'gatCapture();';
    
    drupal_add_js($script, array('scope' => 'footer', 'type' => 'inline'));  
  }
}


/**
 * Implements hook_tokens().
 */
function analytics_tracking_tokens($type, $tokens, array $data = array(), array $options = array()){
  $replacements = array();
  $sanitize = !empty($options['sanitize']);

  if ($type == 'analytics_tracking') {
    $gat_parse = new GAT_Parse($_COOKIE);
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'gat-first-referrer':
          $replacements[$original] = $sanitize ? check_plain($gat_parse->first_referrer) : $gat_parse->first_referrer;
          break;
        case 'gat-first-landing':
          $replacements[$original] = $sanitize ? check_plain($gat_parse->first_landing) : $gat_parse->first_landing;
          break;
        case 'gat-cur-referrer':
          $replacements[$original] = $sanitize ? check_plain($gat_parse->cur_referrer) : $gat_parse->cur_referrer;
          break;
        case 'gat-cur-landing':
          $replacements[$original] = $sanitize ? check_plain($gat_parse->cur_landing) : $gat_parse->cur_landing;
          break;
        case 'gat-recent-referrer':
          $replacements[$original] = $sanitize ? check_plain($gat_parse->recent_referrer) : $gat_parse->recent_referrer;
          break;
        case 'gat-recent-landing':
          $replacements[$original] = $sanitize ? check_plain($gat_parse->recent_landing) : $gat_parse->recent_landing;
          break;
      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_token_info().
 */
function analytics_tracking_token_info() {
  $types = array(
    'analytics_tracking' => array(
      'name' =>  t('Analytics Tracking tokens.'),
      'description' => t('Tokens related with Analytics that are collected by javascript, cookies, and other means.'),
    ),
  );
  $analytics_tracking['gat-first-referrer'] = array(
    'name' => t('First Referrer'),
    'description' => t('The URL of the page that first referrered the visitor.'),
  );
  $analytics_tracking['gat-first-landing'] = array(
    'name' => t('First Landing Page'),
    'description' => t('The Landing Page from the first Referrer site.'),
  );
  $analytics_tracking['gat-cur-referrer'] = array(
    'name' => t('Current Referrer'),
    'description' => t('The URL of the page that currently referrered the visitor to the site.'),
  );
  $analytics_tracking['gat-cur-landing'] = array(
    'name' => t('Current Landing Page'),
    'description' => t('The Landing Page from the the current referrer site.'),
  );
  $analytics_tracking['gat-recent-referrer'] = array(
    'name' => t('Most Recent Referrer'),
    'description' => t('The URL of the page that most recently referrered the visitor to the present page.'),
  );
  $analytics_tracking['gat-recent-landing'] = array(
    'name' => t('Most Recent Landing Page'),
    'description' => t('The present page.'),
  );

  return array(
    'types' => $types,
    'tokens' => array(
      'analytics_tracking' => $analytics_tracking,
    ),
  );
}
