<?php

/**
 * Implements hook_menu().
 */
function cinc_yaml_export_menu() {

  $items = array();

  $items['admin/config/cinc_yaml_export'] = array(
    'title' => 'CINC YAML Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cinc_yaml_export_form'),
    'access arguments' => array('export cinc yaml'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}

/**
 * Creates a tar file.
 * Directly copied from features_tar_create().
 */
function cinc_yaml_export_create_tar($name, $contents) {
  /* http://www.mkssoftware.com/docs/man4/tar.4.asp */
  /* http://www.phpclasses.org/browse/file/21200.html */
  $tar = '';
  $bigheader = $header = '';
  if (strlen($name) > 100) {
    $bigheader = pack("a100a8a8a8a12a12a8a1a100a6a2a32a32a8a8a155a12",
        '././@LongLink', '0000000', '0000000', '0000000',
        sprintf("%011o", strlen($name)), '00000000000',
        '        ', 'L', '', 'ustar ', '0',
        '', '', '', '', '', '');

    $bigheader .= str_pad($name, floor((strlen($name) + 512 - 1) / 512) * 512, "\0");

    $checksum = 0;
    for ($i = 0; $i < 512; $i++) {
      $checksum += ord(substr($bigheader, $i, 1));
    }
    $bigheader = substr_replace($bigheader, sprintf("%06o", $checksum)."\0 ", 148, 8);
  }
 $header = pack("a100a8a8a8a12a12a8a1a100a6a2a32a32a8a8a155a12", // book the memorie area
    substr($name,0,100),  //  0     100     File name
    '100644 ',            // File permissions
    '   765 ',            // UID,
    '   765 ',            // GID,
    sprintf("%11s ", decoct(strlen($contents))), // Filesize,
    sprintf("%11s", decoct(REQUEST_TIME)),       // Creation time
    '        ',        // 148     8         Check sum for header block
    '',                // 156     1         Link indicator / ustar Type flag
    '',                // 157     100     Name of linked file
    'ustar ',          // 257     6         USTAR indicator "ustar"
    ' ',               // 263     2         USTAR version "00"
    '',                // 265     32         Owner user name
    '',                // 297     32         Owner group name
    '',                // 329     8         Device major number
    '',                // 337     8         Device minor number
    '',                // 345     155     Filename prefix
    '');               // 500     12         ??

  $checksum = 0;
  for ($i = 0; $i < 512; $i++) {
    $checksum += ord(substr($header, $i, 1));
  }
  $header = substr_replace($header, sprintf("%06o", $checksum)."\0 ", 148, 8);
  $tar = $bigheader.$header;

  $buffer = str_split($contents, 512);
  foreach ($buffer as $item) {
    $tar .= pack("a512", $item);
  }
  return $tar;
}

/**
 * Creates YAML export form.
 */
function cinc_yaml_export_form($form, &$form_state) {

  $form = array();

  $classes = cinc_available_classes();
  $form_state['classes'] = array();

  foreach ($classes as $class) {

    // Ensure all module dependencies are enabled to prevent fatal errors
    $dependency_flag = FALSE;
    if (isset($class::$dependencies) && is_array($class::$dependencies)) {
      foreach ($class::$dependencies as $dependency) {
        if (!module_exists($dependency)) {
          $dependency_flag = TRUE;
        }
      }
    }

    if (
      (method_exists($class, 'read_list')) &&
      (
        (!$parent = get_parent_class($class)) ||
        (!method_exists($parent, 'read_list'))
      ) &&
      !$dependency_flag
    ) {

      $form_state['classes'][] = $class;

      $form['set-' . $class] = array(
        '#type' => 'fieldset',
        '#title' => str_replace('CINC_', '', $class),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );

      $list = $class::read_list();

      foreach ($list as $machine_name => $item) {

        $checkbox =& $form['set-' . $class][$class . '--' . $machine_name];

        $checkbox = array(
          '#type' => 'checkbox',
          '#title' => $item['display'],
        );

        if ($item['display'] != $machine_name) {
          $checkbox['#title'] .= ' <i>(' . $machine_name . ')</i>';
        }

      }

    }

  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Export'),
  );

  return $form;

}

/**
 * Handles YAML export submission.
 */
function cinc_yaml_export_form_submit($form, &$form_state) {

  $filename = 'cinc_yaml_export.tar';

  drupal_add_http_header('Content-type', 'application/x-tar');
  drupal_add_http_header('Content-Disposition', 'attachment; filename="' . $filename . '"');
  drupal_send_headers();

  foreach ($form_state['classes'] as $class) {

    $list = $class::read_list();

    foreach ($list as $machine_name => $item) {

      if ($form_state['values'][$class . '--' . $machine_name] == 1) {

        $object = new $class();
        $object->machine_name($machine_name)->read();
        print cinc_yaml_export_create_tar($object->yaml_filename(), $object->yaml());

      }

    }

  }

  print pack('a1024', '');
  exit;

}


/**
 * Implements hook_permission().
 */
function cinc_yaml_export_permission() {

  return array(
    'export cinc yaml' => array(
      'title' => t('Export CINC YAML'),
      'description' => t('Export any configuration to YAML.'),
    ),
  );

}