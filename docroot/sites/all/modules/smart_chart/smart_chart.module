<?php

/**
 * @file
 * Module file for Smart Chart module.
 */

/**
 * Implements hook_views_api().
 */
function smart_chart_views_api() {
  return array(
    'api' => '3.0',
    'path' => drupal_get_path('module', 'smart_chart') . '/includes',
  );
}

/**
 * Implements hook_menu().
 */
function smart_chart_menu() {

  // Chart Settings main.
  $items['admin/config/content/smart-suite'] = array(
    'title' => 'Smart Suite',
    'type' => MENU_NORMAL_ITEM,
    'description' => 'Content types that will be used in a chart.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smart_chart_settings_form'),
    'access arguments' => array('administer smart chart'),
    'file' => 'includes/smart_chart.admin.inc',
  );

  // Chart view.
  $items['node/%node/chart'] = array(
    'title' => 'Smart Chart',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smart_chart_form', 1),
    'access callback' => 'smart_chart_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/smart_chart.page.inc',
  );
  $items['chart/%node'] = array(
    'title' => 'Smart Chart',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smart_chart_form', 1),
    'access callback' => 'smart_chart_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'includes/smart_chart.page.inc',
  );

  // Chart Settings as tab.
  $items['admin/config/content/smart-suite/chart'] = array(
    'title' => 'Smart Chart',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );

  // Add/New node page view.
  $items['chart/select/%ctools_js/%/%'] = array(
    'title' => 'Select node',
    'page arguments' => array(2, 3, 4),
    'page callback' => 'smart_chart_item_select_callback',
    'access arguments' => array('add smart chart item'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/smart_chart.crud.inc',
  );

  // Add Node callback.
  $items['chart/add/%ctools_js/%/%/%'] = array(
    'title' => 'Add node',
    'page arguments' => array(2, 3, 4, 5),
    'page callback' => 'smart_chart_item_add_callback',
    'access arguments' => array('add smart chart item'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/smart_chart.crud.inc',
  );

  // New Node callback.
  $items['chart/new/%ctools_js/%/%'] = array(
    'title' => 'New node',
    'page arguments' => array(2, 3, 4),
    'page callback' => 'smart_chart_item_new_callback',
    'access arguments' => array('new smart chart item'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/smart_chart.crud.inc',
  );

  // Delete Node callback.
  $items['chart/delete/%ctools_js/%/%'] = array(
    'title' => 'Delete node',
    'page arguments' => array(2, 3, 4),
    'page callback' => 'smart_chart_item_delete_callback',
    'access arguments' => array('delete smart chart item'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/smart_chart.crud.inc',
  );

  // Break Node callback.
  $items['chart/break/%ctools_js/%/%'] = array(
    'title' => 'Break node',
    'page arguments' => array(2, 3, 4),
    'page callback' => 'smart_chart_item_break_callback',
    'access arguments' => array('break smart chart item'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/smart_chart.crud.inc',
  );

  // Verify Node callback.
  $items['chart/confirm/%ctools_js/%/%/%'] = array(
    'title' => 'Confirm action',
    'page arguments' => array(2, 3, 4, 5),
    'page callback' => 'smart_chart_item_confirm',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/smart_chart.crud.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function smart_chart_permission() {
  return array(
    'administer smart chart' => array(
      'title' => t('Administer Smart Chart'),
      'description' => t('Smart Chart settings.'),
    ),
    'add smart chart item' => array(
      'title' => t('Add a Smart Chart item'),
      'description' => t('Add an item to a Smart Chart.'),
    ),
    'new smart chart item' => array(
      'title' => t('New Smart Chart item'),
      'description' => t('Create a new Smart Chart item.'),
    ),
    'break smart chart item' => array(
      'title' => t('Break a Smart Chart node'),
      'description' => t('Break an item from a Smart Chart.'),
    ),
    'delete smart chart item' => array(
      'title' => t('Delete a Smart Chart item'),
      'description' => t('Delete an item.'),
    ),
  );
}

/**
 * Check access to chart.
 *
 * @param $node
 *   Smart Chart node.
 *
 * @return bool
 *   TRUE or FALSE.
 */
function smart_chart_access($node) {

  // Only for Smart Chart.
  if ($node->type == 'smart_chart') {
    $chart_nid = $node->nid;

    global $user;

    // Creating hook check access to chart.
    $access = module_invoke_all('sc_chart_access', $chart_nid, $user->uid);

    return is_bool($access) ? $access : TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_init().
 */
function smart_chart_init() {
  // Add modal style.
  $custom_modal_style = array(
    'common-modal-style' => array(
      'modalSize' => array(
        'type' => variable_get('modal_forms_popup_medium_type', 'fixed'),
        'width' => floatval(variable_get('modal_forms_popup_medium_width', 550)),
        'height' => floatval(variable_get('modal_forms_popup_medium_height', 450)),
      ),
      'modalOptions' => array(
        'opacity' => floatval(variable_get('modal_forms_opacity', 0.85)),
        'background' => variable_get('modal_forms_background_color', '#000'),
      ),
      'animation' => 'fadeIn',
      'modalTheme' => 'ModalFormsPopup',
      'closeText' => t('Close'),
    ),
  );
  drupal_add_js($custom_modal_style, 'setting');

  // Add file js.
  drupal_add_js(drupal_get_path('module', 'smart_chart') . '/js/smart_chart.js');

  // Add CSS.
  drupal_add_css(drupal_get_path('module', 'smart_chart') . '/css/smart_chart.css');
}
