<?php

/**
 * @file
 *
 * Implements Zoomify support for the core Image module
 */

/**
 * Implements hook_zoomify_images().
 *
 * Creates zoomify tiles for all image fields
 */
function zoomify_image_zoomify_images($node) {
  $images = array();
  $field_info = field_info_instances('node', $node->type);
  if ($field_info) {
    foreach ($field_info as $field_name => $field) {
      $fielddata = array();
      if ($field['widget']['type'] == "image_image") {
        if (isset($node->{$field_name}[$node->language])) {
          foreach ($node->{$field_name}[$node->language] as $field_entry) {
            $fielddata[] = $field_entry;
          }
        }
        elseif (isset($node->{$field_name}[LANGUAGE_NONE])) {
          foreach ($node->{$field_name}[LANGUAGE_NONE] as $field_entry) {
            $fielddata[] = $field_entry;
          }
        }
      }

      if ($fielddata) {
        foreach ($fielddata as $fieldinfo) {
          $fid = $fieldinfo['fid'];
          $file = file_load($fid);
          $images[$fid] = $file->uri;
        }
      }
    }
  }
  return $images;
}

/**
 * Implements hook_field_formatter_info().
 */
function zoomify_image_field_formatter_info() {
  return array(
    'zoomify' => array(
      'label' => 'Image in Zoomify viewer',
      'description' => t('Displays the image in a Zoomify viewer.'),
      'field types' => array('image'),
    ),
    'zoomify_link' => array(
      'label' => 'Image linked to Zoomify viewer page',
      'description' => t('Displays an image linked to a Zoomify viewer detail page'),
      'field types' => array('image'),
      'settings' => array('image_style' => ''),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function zoomify_image_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  if ($display['type'] == "zoomify_link") {
    $image_styles = image_style_options(FALSE);
    $element['image_style'] = array(
      '#title' => t('Image style'),
      '#type' => 'select',
      '#default_value' => $settings['image_style'],
      '#empty_option' => t('None (original image)'),
      '#options' => $image_styles,
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function zoomify_image_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  if ($display['type'] == "zoomify_link") {
    $image_styles = image_style_options(FALSE);
    // Unset possible 'No defined styles' option.
    unset($image_styles['']);
    // Styles could be lost because of enabled/disabled modules that defines
    // their styles in code.
    if (isset($image_styles[$settings['image_style']])) {
      $summary[] = t('Image style: @style', array('@style' => $image_styles[$settings['image_style']]));
    }
    else {
      $summary[] = t('Original image');
    }
  }

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function zoomify_image_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  $uri = entity_uri($entity_type, $entity);
  $uri['path'] = $uri['path'] . '/zoomify';

  foreach ($items as $delta => $item) {
    switch ($display['type']) {
      case 'zoomify':
        $element[$delta] = array(
          '#theme' => 'zoomify',
          '#node' => $entity,
          '#fid' => $item['fid'],
          '#filepath' => drupal_realpath($item['uri']),
        );
        break;
      case 'zoomify_link':
        $element[$delta] = array(
          '#theme' => 'image_formatter',
          '#item' => $item,
          '#image_style' => $display['settings']['image_style'],
          '#path' => $uri,
        );
        break;
    }
  }

  return $element;
}