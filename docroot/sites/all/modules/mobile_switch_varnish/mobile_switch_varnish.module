<?php
/**
 * @file
 * Adds options for mobile theme switching == should only be used
 * together with the appropriate Varnish configuration which should
 * populate $_SERVER['HTTP_X_DEVICE'].
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add some mobile theme switching settings to the main theme admin page.
 */
function mobile_switch_varnish_form_system_themes_admin_form_alter(&$form, &$form_state) {
  $themes = array();
  foreach (list_themes() as $theme_name => $theme_info) {
    $themes[$theme_name] = check_plain($theme_info->info['name']);
  }
  $form['mobile_switch_varnish'] = array(
    '#type' => 'fieldset',
    '#title' => t('Mobile theme settings'),
    '#description' => t('Options for when a mobile device detected.
      Please ensure the Varnish configuration is correct and is adding the user agent to the hash.'
    ),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#weight' => -2,
  );
  // Set a default (fallback) mobile theme.
  $form['mobile_switch_varnish']['mobile_switch_varnish_theme_default'] = array(
    '#type' => 'select',
    '#title' => t('Default mobile theme'),
    '#description' => t('Select the default theme to use when a mobile device is detected.'),
    '#options' => $themes,
    '#default_value' => variable_get('mobile_switch_varnish_theme_default', 'mobile_jquery'),
  );
  // Provides an option to mobile switch on admin pages.
  $form['mobile_switch_varnish']['mobile_switch_varnish_use_on_admin_pages'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use on admin pages'),
    '#description' => t('Use a mobile theme when using administration pages.'),
    '#default_value' => variable_get('mobile_switch_varnish_use_on_admin_pages', FALSE),
  );
  // Optionally allow to switch theme per device.
  foreach (variable_get('mobile_switch_varnish_devices', array('smart', 'tablet', 'other')) as $device_type) {
    $form['mobile_switch_varnish']['devices']['mobile_switch_varnish_theme_' . $device_type] = array(
      '#type' => 'select',
      '#title' => t('Mobile theme for: "@type"', array('@type' => $device_type)),
      '#options' => array('default' => t('Default')) + $themes,
      '#default_value' => variable_get('mobile_switch_varnish_theme_' . $device_type, 'default'),
    );
  }
  // Wrap it in a neat fieldset if devices isn't empty.
  if (!empty($form['mobile_switch_varnish']['devices'])) {
    $form['mobile_switch_varnish']['devices'] += array(
      '#type' => 'fieldset',
      '#title' => t('Per device settings'),
      '#description' => t('Choose a different theme per device if required'),
      '#collapsible' => FALSE,
      '#collapsed' => FALSE,
    );
  }
  $form['#submit'][] = 'mobile_switch_varnish_settings_form_submit';
}

/**
 * Submit function for mobile_switch_varnish_form_system_themes_admin_form_alter.
 */
function mobile_switch_varnish_settings_form_submit($form, &$form_state) {
  variable_set('mobile_switch_varnish_theme_default', $form_state['values']['mobile_switch_varnish_theme_default']);
  variable_set('mobile_switch_varnish_use_on_admin_pages', $form_state['values']['mobile_switch_varnish_use_on_admin_pages']);
  foreach (variable_get('mobile_switch_varnish_devices', array('smart', 'tablet', 'other')) as $device_type) {
    variable_set('mobile_switch_varnish_theme_' . $device_type, $form_state['values']['mobile_switch_varnish_theme_' . $device_type]);
  }
}

/**
 * Implements hook_custom_theme().
 */
function mobile_switch_varnish_custom_theme() {
  // Detect if this is a mobile device.
  if (isset($_SERVER['HTTP_X_DEVICE']) && strstr($_SERVER['HTTP_X_DEVICE'], 'mobile')) {
    // Bail if this is an admin page and we don't respect admin pages.
    if (path_is_admin(current_path()) && !variable_get('mobile_switch_varnish_use_on_admin_pages', FALSE)) {
      return;
    }
    // Fetch the device type from the server variable.
    $device_type = substr($_SERVER['HTTP_X_DEVICE'], 7);
    // If the mobile theme for device is empty (unlikely) or set to 'default' then return the default mobile theme.
    if (!variable_get('mobile_switch_varnish_theme_' . $device_type, 'default') || variable_get('mobile_switch_varnish_theme_' . $device_type, 'default') == 'default') {
      return variable_get('mobile_switch_varnish_theme_default', 'mobile_jquery');
    }
    // Else it's been set specifically; use this theme setting instead.
    else {
      return variable_get('mobile_switch_varnish_theme_' . $device_type, 'default');
    }
  }
}
