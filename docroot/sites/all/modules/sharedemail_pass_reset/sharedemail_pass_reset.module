<?php

/**
 *  Implementation of hook_form_alter().
 */
function sharedemail_pass_reset_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == "user_pass") { 
  	 	
    $form['email'] = array(
      '#type' => 'textfield',
      '#title' => t('User Email'),
      '#required' => 1,
      '#weight' => -1,
    );
    
    $form['name']['#title'] = t('User Name');
    
    unset($form['#validate']);
    $form['#validate'][] = '_sharedemail_pass_reset_user_pass_validate';
    
    unset($form['#submit']);
    $form['#submit'][] = '_sharedemail_pass_reset_submit';
  }
}

/**
 *  Form validate handler defined in form alter section
 */
function _sharedemail_pass_reset_user_pass_validate($form, &$form_state) {
  $name = trim($form_state['values']['name']);
  $email = trim($form_state['values']['email']);

  // Load a user object.
  $account = db_select('users', 'u')
    ->condition('u.name', $name)
    ->condition('u.mail', $email)
    ->fields('u')
    ->execute()
    ->fetchObject();

  // Checks if user and email exist.
  if (!$account) {
    form_set_error('name', t('Sorry, %name is not recognized as a user name registered with %email.', array('%name' => $name, '%email' => $email)));
  }

  // Blocked accounts cannot request a new password,
  // check provided username and email against access rules.
  if ($account && $account->status == 0) {
    form_set_error('name', t('%name is not allowed to request a new password.', array('%name' => $name)));
  }

  form_set_value(array('#parents' => array('account')), $account, $form_state);
}

/**
 *  Form submit handler defined in form alter section
 */
function _sharedemail_pass_reset_submit($form, &$form_state) {
  // Mail login URL and instructions.
  $account = $form_state['values']['account'];
  _sharedemail_pass_reset_send_mail($account);
}

/*
 * Implements hook_mail().
 */
function sharedemail_pass_reset_mail($key, &$message, $params) {
  $language = $message['language'];
  #user_mail_tokens($variables, array('user' => $params['account']));
  switch ($key) {
    case 'password_reset':
    $message['subject'] = _user_mail_text($key.'_subject', $language);
    $message['body'][] = _user_mail_text($key.'_body', $language, array('user' => $params['account']));
    break;
  }
}

/**
 *  Send mail function called in form submit handler
 */
function _sharedemail_pass_reset_send_mail($account) {
  $params['account'] = $account;
  $language = user_preferred_language($account);
  $mail_success = drupal_mail('sharedemail_pass_reset', 'password_reset', $account->mail, $language, $params, variable_get('site_mail', ini_get('sendmail_from')));
  if ($mail_success) {
   watchdog('user', t('Password reset instructions mailed to %name at %email.', array('%name' => $account->name, '%email' => $account->mail)));
   drupal_set_message(t('Further instructions have been sent to your e-mail address.'));
  }
  else {
   watchdog('user', t('Error mailing password reset instructions to %name at %email.', array('%name' => $account->name, '%email' => $account->mail)), WATCHDOG_ERROR);
   drupal_set_message(t('Unable to send mail. Please contact the site admin.'));
  }
}

