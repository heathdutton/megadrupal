<?php
/**
 * @file
 * Test the "MIME Info" module functionality.
 */

/**
 * Class MimeInfoTestCase.
 */
class MimeInfoTestCase extends \DrupalWebTestCase {
  const MODULE = 'mimeinfo';

  private $file = '';

  /**
   * Give display information to the SimpleTest system.
   *
   * @return array
   *   Keyed array with information for SimpleTest.
   */
  public static function getInfo() {
    return array(
      'name' => 'MIME Info',
      'group' => 'File',
      'description' => 'Testing the MIME type detection by FileInfo extension or by command line utility.',
    );
  }

  /**
   * Setup the test environment.
   */
  public function setUp() {
    parent::setUp(self::MODULE);

    $this->file = drupal_get_path('module', self::MODULE) . '/test/textual.png';
    $this->drupalLogin($this->drupalCreateUser(array_keys(module_invoke_all('permission'))));
  }

  /**
   * Test "public://" stream wrapper.
   *
   * @param string $type
   *   Stream wrapper type.
   */
  public function testStreamWrapper($type = 'public') {
    $this->drupalPost('admin/config/media/file-system', array('mimeinfo_wrappers[]' => array($type)), t('Save configuration'));
    $this->assertResponse(200);
    $this->assertText(t('The configuration options have been saved.'));
    // Reset the previously determined wrappers.
    drupal_static_reset('file_get_stream_wrappers');

    $file = file_unmanaged_copy($this->file, "$type://", FILE_EXISTS_REPLACE);

    $this->assertTrue($file, 'Prepare file.');
    $this->assertEqual('text/plain', file_get_mimetype($file));
    $this->assertTrue(file_unmanaged_delete($file), 'Remove file.');
  }

  /**
   * Test "temporary://" stream wrapper.
   */
  public function testTemporaryStreamWrapper() {
    $this->testStreamWrapper('temporary');
  }

}
