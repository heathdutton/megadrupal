<?php

/**
 * @file
 * Themer View Modes module.
 */

/**
 * Implements hook_entity_info_alter().
 */
function themer_view_modes_entity_info_alter(&$entity_info) {
  // Grab a list of all Drupal's themes
  $themes = list_themes();

  foreach ($themes as $theme) {
    // Skip disabled themes
    if (!$theme->status) {
      continue;
    }

    // Check this theme info for view mode information
    if (!empty($theme->info) && !empty($theme->info['viewmodes'])) {
      // We have view modes, iterate through each and add them
      foreach ($theme->info['viewmodes'] as $key => $mode) {
        // Numeric keys indicate a view mode for a node with an auto machine name
        if (is_numeric($key)) {
          themer_view_modes_add_view_mode($mode, $entity_info);
        }
        else {
          // In this scenario, mode is an array with a single item - entity type is the key, label is the value.
          $entity_type = key($mode);
          $label = reset($mode);
          themer_view_modes_add_view_mode($label, $entity_info, $entity_type, $key);
        }
      }
    };
  }
}

/**
 * Helper function to add a custom view mode. Should be called from hook_entity_info_alter
 * @param $label
 * - Human readable label
 * @param $entity_info
 * - From hook_entity_info_alter
 * @param $entity_type
 * - Defaults to 'node'
 * @param string $machine_name
 * - If $machine_name is omitted, it will be derived from label
 *
 */
function themer_view_modes_add_view_mode($label, &$entity_info, $entity_type = 'node', $machine_name = '') {
  if (empty($machine_name)) {
    // Remove characters not valid in function names.
    $machine_name = str_replace(' ', '_', drupal_strtolower($label));
    $machine_name = preg_replace('/[^a-z0-9_]/', '', $machine_name);
  }

  // Add into entity info
  $entity_info[$entity_type]['view modes'][$machine_name] = array(
    'label'           => t($label),
    'custom settings' => FALSE,
  );
}
