<?php
/**
 * @file
 * Code for the Lightroom feature.
 */

include_once 'lightroom.features.inc';

/**
 * Implements hook_services_resources()
 */
function lightroom_services_resources() {
  $resource = array(
    'collection' => array(
      'actions' => array(
        'types' => array(
          'help'   => t('Returns info about collection content types'),
          'access callback' => 'lightroom_node_types_access',
          'callback' => 'lightroom_node_types',
        )
      )
    ),
    'file' => array(
      'targeted_actions' => array(
        'metadata' => array(
          'help' => t('Update file metadata'),
          'access callback' => '_file_resource_access',
          // Drupal doesn't allow replacing files, but we can update the file entity.
          // @todo Find a better access callback
          'access arguments' => array('create'),
          'access arguments append' => TRUE,
          'callback' => '_lightroom_file_update_metadata',
          'args' => array(
            array(
              'name' => 'fid',
              'type' => 'int',
              'description' => 'The fid of the file to retrieve.',
              'source' => array('path' => '0'),
              'optional' => FALSE,
            ),
            array(
              'name' => 'data',
              'optional' => FALSE,
              'source' => 'data',
              'description' => 'The metadata to update',
              'type' => 'array',
            ),
          ),
        ),
      ),
    ),
  );
  return $resource;
}

function lightroom_node_types_access() {

  // Check if there are any node_types they can access
  // Basically, get the node types here, cache them for later
  $types = lightroom_node_types();
  return !empty($types);

}

function lightroom_node_types() {

  static $types;

  if (!isset($types)) {

    $types = array();

    // Get node types with field_collection_images
    $instances = field_read_instances(array('entity_type' => 'node', 'field_name' => 'field_collection_images'));
    foreach ($instances as $instance) {
      $bundle = $instance['bundle'];
      // Check that this user has permission to create this type of node
      if (node_access('create', $bundle)) {
        $types[] = node_type_get_type($bundle);
      }
    }
  }

  return $types;

}

function _lightroom_file_update_metadata($fid, $data) {

  $file = file_load($fid);
  foreach ($data as $key => $value) {
    $file->{$key} = $value;
  }
  file_save($file);

  return $file;

}