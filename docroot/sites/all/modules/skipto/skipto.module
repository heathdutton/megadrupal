<?php
/**
 * @file
 * A module that provides a menu of headings and ARIA landmarks on a page.
 */

/**
 * Implements hook_init().
 */
function skipto_init() {
  $menu_builder_config = array(
    'skipto_headings_array' => variable_get('skipto_headings_array', 'none'),
    'skipto_headings' => variable_get('skipto_headings', 'none'),
    'skipto_landmarks_array' => variable_get('skipto_landmarks_array', 'none'),
    'skipto_landmarks' => variable_get('skipto_landmarks', 'none'),
    'skipto_accessKey' => variable_get('skipto_accessKey', '0'),
    'skipto_wrap' => variable_get('skipto_wrap', "true"),
    'skipto_ids'  => variable_get('skipto_ids', "true"),
    'skipto_customClass'  => variable_get('skipto_customClass', "true"),
    'skipto_attachElement'  => variable_get('skipto_attachElement', "true")
  );

  $skipto_loaded = libraries_get_path('skipto');
  if ($skipto_loaded === FALSE) {
    drupal_set_message(t('Please make sure the SkipTo library is installed. See the <a href="@helpLink">help page</a> for more information.',
      array(
        '@helpLink' => url('admin/help/skipto'),
      )
    ), "error");
  }
  else {
    drupal_add_library('skipto', 'skipto');
  }

}

/**
 * Implements hook_library().
 */
function skipto_library() {
  $skipto_jspath = libraries_get_path('skipto');

  $items = array();
  $items['skipto'] = array(
    'title' => t('SkipTo'),
    'version' => '1.0',
    'js' => array(
      $skipto_jspath . '/SkipTo.min.js' => array('scope' => 'footer'),
    ),
  );
  return $items;
}

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 */
function skipto_help($path, $arg) {
  switch ($path) {
    case "admin/help#skipto":
      return '<p>' .
        t('<p>Make certain that you install SkipTo.min.js into libraries/skipto. For more information, please see info on our <a href="@github">GitHub page</a>. You can also <a href="@jslink">download the version we use on that page</a>.</p>',
            array(
              '@jslink' => url('http://paypal.github.io/skipto/downloads/js/SkipTo.min.js'),
              '@github' => url('http://paypal.github.io/skipto/')));
  }
}

/**
 * Implements hook_menu().
 */
function skipto_menu() {
  $items = array();
  $items['admin/config/user-interface/skipto'] = array(
    'title' => 'SkipTo',
    'description' => 'Configuration for SkipTo module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('skipto_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Page callback: Skip Menu settings.
 *
 * @see skipto_menu()
 */
function skipto_form($form, &$form_state) {
  $form['intro'] = array(
    '#markup' => t('<p>Make certain that you install SkipTo.min.js into libraries/skipto. For more information, please see info on our <a href="@github">GitHub page</a>. You can also <a href="@jslink">download the version we use on that page</a>.</p>',
            array(
              '@jslink' => url('http://paypal.github.io/skipto/downloads/js/SkipTo.min.js'),
              '@github' => url('http://paypal.github.io/skipto/'))),
  );

  $form['skipto_headings_array'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Headings to aggregate'),
    '#default_value' => variable_get('skipto_headings_array', 'h1, h2'),
    '#options' => array(
      "h1" => "h1",
      "h2" => "h2",
      "h3" => "h3",
      "h4" => "h4",
      "h5" => "h5",
    ),
    '#description' => t('The level of headings to make the menu from (Default is h1, h2).'),
    '#required' => TRUE,
  );
  $form['skipto_headings'] = array(
    '#type' => 'hidden',
    '#value' => variable_get('skipto_headings', 'h1, h2'),
  );
  $form['skipto_landmarks_array'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Landmark roles to aggregate'),
    '#default_value' => variable_get('skipto_landmarks_array',
                                      '[role="contentinfo"],
                                       [role="main"],
                                       [role="navigation"],
                                       [role="search"]'),
    '#options' => array(
      "contentinfo" => "contentinfo",
      "main" => "main",
      "navigation" => "navigation",
      "search" => "search",
    ),
    '#description' => t('The types of landmark roles to use. Defaults to: contentinfo, main, navigation, search.'),
    '#required' => TRUE,
  );
  $form['skipto_landmarks'] = array(
    '#type' => 'hidden',
    '#value' => variable_get('skipto_landmarks',
                              '[role="contentinfo"],
                               [role="main"],
                               [role="navigation"],
                               [role="search"]'),
  );
  $form['skipto_accessKey'] = array(
    '#type' => 'textfield',
    '#title' => t('Access Key'),
    '#default_value' => variable_get('skipto_accessKey', "0"),
    '#description' => t('Set a custom access key for the menu'),
    '#required' => TRUE,
  );
  $form['skipto_wrap'] = array(
    '#type' => 'radios',
    '#title' => t('Wrap Menu'),
    '#default_value' => variable_get('skipto_wrap', 'true'),
    '#description' => t('When you tab to the last item in the menu, should it wrap to the first? Defaults to wrapping.'),
    '#options' => array("true" => 'Wrap', "false" => 'Do not Wrap'),
    '#required' => FALSE,
  );
  $form['skipto_ids'] = array(
    '#type' => 'textfield',
    '#title' => t('Ids and classes'),
    '#default_value' => variable_get('skipto_ids', "#SkipToA1, #SkipToA2, .skipClass"),
    '#description' => t('List of Ids and class names to scan'),
    '#required' => FALSE,
  );
  $form['skipto_customClass'] = array(
    '#type' => 'textfield',
    '#title' => t('custom class'),
    '#default_value' => variable_get('skipto_customClass', "MyClass"),
    '#description' => t('Custom class which overrides SkipTo class'),
    '#required' => FALSE,
  );
  $form['skipto_attachElement'] = array(
    '#type' => 'textfield',
    '#title' => t('custom class'),
    '#default_value' => variable_get('skipto_attachElement', ".navigation"),
    '#description' => t('Where this skipto menu should be attached'),
    '#required' => FALSE,
  );
  $form['#submit'][] = 'skipto_form_submit';

  return system_settings_form($form);
}

/**
 * Implements form_submit().
 */
function skipto_form_submit($form, &$form_state) {
  form_state_values_clean($form_state);

  $skipto_headings_array = $form['skipto_headings_array']['#value'];
  $heading_string = "";
  $skipto_landmarks_array = $form['skipto_landmarks_array']['#value'];
  $landmark_string = "";
  $landmark_string_for_messaging = "";

  foreach ($skipto_headings_array as $key) {
    $heading_string .= $key;
    if (end($skipto_headings_array) !== $key) {
      $heading_string .= ', ';
    }
  }

  foreach ($skipto_landmarks_array as $key) {
    $landmark_string .= '[role="' . $key . '"]';
  }

  form_set_value($form['skipto_headings'], $heading_string, $form_state);
  form_set_value($form['skipto_landmarks'], $landmark_string, $form_state);
}
