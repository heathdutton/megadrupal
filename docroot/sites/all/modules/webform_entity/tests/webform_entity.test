<?php
class WebformEntityTestCase extends DrupalWebTestCase {
  /**
   * Returns information about this test case.
   *
   * @return
   *   An array of information about this test case
   */
  public static function getInfo() {
    return array(
      'name' => 'Webform Entity',
      'description' => 'Ensure that Webform Entity functions correctly.',
      'group' => 'Webform',
    );
  }

  /**
   * @see ServicesWebTestCase::setUp()
   */
  /* Restore this commenting-out to test using local db (a bit faster that way).
  public function setUp() {
    parent::setUp('webform_entity');
  }
  // */ public function setUp() { $this->setup = TRUE; } public function tearDown()  {}

  public function testSubmissionCRUD() {
    $node = $this->createWebform();
    $data = array(
      'nid' => $node->nid,
      'bundle' => 'webform',
      'data' => array(
        1 => array($this->randomName(8)),
        2 => array($this->randomName(8)),
      ),
    );
    $submission = entity_create('webform_submission_entity', $data);
    entity_save('webform_submission_entity', $submission);
    $this->assertTrue($submission->sid, 'The saved submission has a submission id');
    // @todo - more tests. This is merely meant to illustrate a specific bug.
  }

  /**
   * Creates a webform node for testing.
   *
   * @return array
   *   A webform.
   *
   * @author chriso
   */
  protected function createWebform() {
    $values = array(
      'title' => $this->randomName(8),
      'status' => '1',
      'type' => 'webform',
      'webform' => array(
        'confirmation' => '',
        'confirmation_format' => NULL,
        'redirect_url' => '<confirmation>',
        'status' => '1',
        'block' => '0',
        'teaser' => '0',
        'allow_draft' => '0',
        'auto_save' => '0',
        'submit_notice' => '1',
        'submit_text' => '',
        'submit_limit' => '-1',
        'submit_interval' => '-1',
        'total_submit_limit' => '-1',
        'total_submit_interval' => '-1',
        'record_exists' => TRUE,
        'roles' => array(
          DRUPAL_AUTHENTICATED_RID,
        ),
        'emails' => array(),
        'components' => array(
          1 => array(
            'cid' => '1',
            'pid' => '0',
            'form_key' => $this->randomName(8),
            'name' => $this->randomName(32),
            'type' => 'textfield',
            'value' => '',
            'extra' => array(
              'title_display' => 'before',
              'private' => 0,
              'width' => '',
              'maxlength' => '',
              'field_prefix' => '',
              'field_suffix' => '',
              'disabled' => 0,
              'unique' => 0,
              'description' => '',
              'placeholder' => '',
              'attributes' => array(),
            ),
            'required' => '0',
            'weight' => '1',
            'page_num' => 1,
          ),
          2 => array(
            'cid' => '2',
            'pid' => '0',
            'form_key' => $this->randomName(8),
            'name' => $this->randomName(32),
            'type' => 'textfield',
            'value' => '',
            'extra' => array(
              'title_display' => 'before',
              'private' => 0,
              'width' => '',
              'maxlength' => '',
              'field_prefix' => '',
              'field_suffix' => '',
              'disabled' => 0,
              'unique' => 0,
              'description' => '',
              'placeholder' => '',
              'attributes' => array(),
            ),
            'required' => '0',
            'weight' => '2',
            'page_num' => 1,
          ),
        ),
        'conditionals' => array(),
      ),
    );
    $node = $this->drupalCreateNode($values);
    return $node;
  }

}