<?php

/**
 * @file
 * Dataseed integration core settings and functionalities.
 */

define('DATASEED_TOKEN_LEN', 64);

/**
 * Implements hook_menu().
 */
function dataseed_menu() {
  $items                          = array();
  $items['admin/config/system/dataseed'] = array(

    'title'            => 'Dataseed',
    'access arguments' => array('administer site configuration'),
    'type'             => MENU_NORMAL_ITEM,
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('dataseed_settings_form'),
  );

  return $items;
}

/**
 * Dataseed settings form callback.
 */
function dataseed_settings_form() {
  $form = array();

  $form['dataseed_scheme'] = array(
    '#type'          => 'select',
    '#title'         => t('HTTP protocol'),
    '#description'   => t(
      'Use HTTPS if you\'re not running a custom Dataseed server.'
    ),
    '#default_value' => variable_get('dataseed_scheme', 'https'),
    '#options'       => array(
      'http'  => 'http',
      'https' => 'https',
    ),
  );

  $form['dataseed_host'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Dataseed host'),
    '#description'   => t(
      'Use <code>dataseedapp.com</code> if you\'re not running a custom Dataseed server.'
    ),
    '#default_value' => variable_get('dataseed_host', 'dataseedapp.com'),
    '#required'      => TRUE,
  );

  $form['dataseed_port'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Dataseed port'),
    '#description'   => t('Use 443 if you\'re not running a custom Dataseed server.'),
    '#default_value' => variable_get('dataseed_port', 443),
    '#required'      => TRUE,
  );

  $form['dataseed_path'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Dataseed path'),
    '#description'   => t(
      'Use <code>/</code> if you\'re not running a custom Dataseed server.'
    ),
    '#required'      => TRUE,
    '#default_value' => variable_get('dataseed_path', '/'),
  );

  $form['dataseed_auth'] = array(
    '#type'  => 'fieldset',
    '#title' => t('Dataseed authentication credentials'),
  );

  $form['dataseed_auth']['dataseed_user'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Username'),
    '#default_value' => variable_get('dataseed_user'),
    '#required'      => TRUE,
  );

  $form['dataseed_auth']['dataseed_pass'] = array(
    '#type'        => 'password',
    '#title'       => t('Password'),
    '#description' => t(
      'If this field is left blank and the HTTP username is
       filled out, the current password will not be changed.'
    ),
  );

  $form['dataseed_auth_vis'] = array(
    '#type'  => 'fieldset',
    '#title' => t('Dataseed private visualisation authentication'),
    '#description' => t(
      'This is only required if you are embedding private Dataseed visualisations within Drupal.'
    ),
  );

  $form['dataseed_auth_vis']['dataseed_user_token'] = array(
    '#type'          => 'textfield',
    '#title'         => t('User Token'),
    '#default_value' => variable_get('dataseed_user_token'),
  );

  $form['dataseed_auth_vis']['dataseed_user_key'] = array(
    '#type'        => 'textfield',
    '#title'       => t('Private Key'),
    '#default_value' => variable_get('dataseed_user_key'),
  );

  $form['#validate'][] = 'dataseed_settings_form_validate';
  $form['#submit'][]   = 'dataseed_settings_form_submit';

  return system_settings_form($form);
}

/**
 * Form validator for dataseed_settings_form.
 */
function dataseed_settings_form_validate($form, &$form_state) {
  $values = $form_state['values'];

  if (isset($values['dataseed_port']) && (
      !is_numeric($values['dataseed_port'])
      || $values['dataseed_port'] < 0
      || $values['dataseed_port'] > 65535
    )
  ) {
    form_error(
      $form['dataseed_port'],
      t('The port has to be an integer between 0 and 65535.')
    );
  }

  if (!empty($values['dataseed_user_token']) || !empty($values['dataseed_user_key'])) {

    if (!isset($values['dataseed_user_token']) || strlen($values['dataseed_user_token']) != DATASEED_TOKEN_LEN) {
      form_error(
        $form['dataseed_auth_vis']['dataseed_user_token'],
        t('Invalid user token, must be !num characters', array('!num' => DATASEED_TOKEN_LEN))
      );
    }

    if (!isset($values['dataseed_user_key']) || strlen($values['dataseed_user_key']) != DATASEED_TOKEN_LEN) {
      form_error(
        $form['dataseed_auth_vis']['dataseed_user_key'],
        t('Invalid private key, must be !num characters', array('!num' => DATASEED_TOKEN_LEN))
      );
    }

  }
}

/**
 * Submit handler for dataseed_settings_form.
 */
function dataseed_settings_form_submit($form, &$form_state) {

  $values = $form_state['values'];
  $dataseed_user_unchanged = (strlen(variable_get('dataseed_user')) && $values['dataseed_user'] === variable_get('dataseed_user'));

  // For password fields, there is no default value, they're empty by default.
  // Therefore we ignore empty submissions if the user didn't change either.
  if ($values['dataseed_pass'] === '' &&  $dataseed_user_unchanged) {
    $form_state['values']['dataseed_pass'] = variable_get('dataseed_pass');
  }
}

/**
 * Helper function. Gets all the dataseed module settings.
 */
function dataseed_get_settings() {
  return array(
    'scheme'    => variable_get('dataseed_scheme'),
    'host'      => variable_get('dataseed_host'),
    'port'      => variable_get('dataseed_port'),
    'path'      => variable_get('dataseed_path'),
    'http_user' => variable_get('dataseed_user'),
    'http_pass' => variable_get('dataseed_pass'),
  );
}
