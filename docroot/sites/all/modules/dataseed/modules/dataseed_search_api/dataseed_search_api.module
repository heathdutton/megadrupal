<?php
/**
 * @file
 * Provides a Dataseed-based service class for the Search API.
 */

define('DATASEED_SEARCH_API_SERVICE_ID', 'dataseed');

/**
 * Implements hook_search_api_service_info().
 */
function dataseed_search_api_search_api_service_info() {
  $services[DATASEED_SEARCH_API_SERVICE_ID] = array(
    'name'        => t('Dataseed service'),
    'description' => t(
      '<p>Index items using Dataseed.</p>
       <p><small>Your Dataseed credentials can be set on the
       !dataseed_settings_url.</small></p>',
      array(
        '!dataseed_settings_url' => l(
          t('Dataseed module settings page'),
          'admin/config/system/dataseed'
        ),
      )
    ),
    'class'       => 'DataseedService',
  );
  return $services;
}


/**
 * Implements hook_form_alter().
 *
 * We need to alter the index_edit and add_index form in order to handle
 * settings specific for Dataseed indexes.
 *
 * The injected Dataseed option will be stored in $index->options
 *
 */
function dataseed_search_api_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'search_api_admin_index_edit' || $form_id == 'search_api_admin_add_index') {
    $index = isset($form_state['index']) ? $form_state['index'] : NULL;

    if (!is_null($index) && isset($index->options['dataseed_search_api'])) {
      $form_state['dataseed_search_api_original_privacy'] = $index->options['dataseed_search_api']['dataseed_search_api_privacy'];
      $form_state['dataseed_search_api_original_visualisations'] = $index->options['dataseed_search_api']['dataseed_search_api_visualisations'];
    }

    $form['options']['dataseed_search_api'] = array(
      '#type'   => 'fieldset',
      '#title'  => t('Dataseed settings'),
      /*
       * Set this element visible if and only if we are creating an index for a
       * Dataseed service class
       */
      '#states' => array(
        'visible' => array(
          ':input[name="server"]' => array('value' => DATASEED_SEARCH_API_SERVICE_ID),
        ),
      ),
    );

    // Privacy
    $privacy_default_value = 'private';
    if (isset($form_state['values']['options']['dataseed_search_api']['dataseed_search_api_privacy'])) {
      $privacy_default_value = $form_state['values']['options']['dataseed_search_api']['dataseed_search_api_privacy'];
    }
    elseif (isset($form_state['dataseed_search_api_original_privacy'])) {
      $privacy_default_value = $form_state['dataseed_search_api_original_privacy'];
    }

    $form['options']['dataseed_search_api']['dataseed_search_api_privacy'] = array(
      '#type'          => 'radios',
      '#title'         => t('Privacy'),
      '#default_value' => $privacy_default_value,
      '#options'       => array(
        'public'  => t('Public - Anyone can view visualisations of your dataset and download the source data.'),
        'private' => t('Private - Only you will be able to view visualisations of your dataset'),
      ),
      '#description'   => t('Set the privacy of the Dataseed dataset that will be created for this index.'),
    );

    // Default visualisation JSON
    if (isset($form_state['values']['options']['dataseed_search_api']['dataseed_search_api_visualisations'])) {
      //$default_visualisations = $form_state['values']['options']['dataseed_search_api']['dataseed_search_api_visualisations'];
    }
    elseif (isset($form_state['dataseed_search_api_original_visualisations'])) {
      $default_visualisations = $form_state['dataseed_search_api_original_visualisations'];
    }
    else {
      $default_visualisations = '[{"id": "1", "label": "My Visualisation"}]';
    }
    $form['options']['dataseed_search_api']['dataseed_search_api_visualisations'] = array(
      '#type'          => 'textarea',
      '#title'         => t('Default visualisations'),
      '#description'   => t(
        'This should be a JSON array of visualisation model objects. For further information, see the !dataseed_doc_url.',
        array(
          '!dataseed_doc_url' => l(
            t('Dataseed documentation'),
            'https://dataseedapp.com/documentation'
          ),
        )
      ),
      '#default_value' => $default_visualisations,
      '#rows'          => 10,
      '#required'      => FALSE,
      '#element_validate' => array('dataseed_search_api_visualisations_validate'),
    );

  }

  if ($form_id == 'search_api_admin_index_edit') {
    // When we edit an already existing index we may need to recreate the
    // Dataseed dataset.
    $form['#submit'][] = 'dataseed_search_api_admin_index_edit_submit';
  }

}

/**
 * Validate default visualisations JSON
 */
function dataseed_search_api_visualisations_validate($element, &$form_state, $form) {
  if (!empty($element['#value']) && drupal_json_decode($element['#value']) === NULL) {
    form_error($element, t('Invalid JSON supplied for default visualisations.'));
  }
}

/**
 * Form submit callback.
 *
 * It handles all the Dataseed index settings injected in
 * dataseed_search_api_form_alter
 */
function dataseed_search_api_admin_index_edit_submit($form, &$form_state) {
  $index = $form_state['index'];

  /*
   * we need to use the form value rather than $index->server()->class : the
   * user may have changed server type.
   */
  $server  = $form_state['values']['server'];
  $privacy = $form_state['values']['options']['dataseed_search_api']['dataseed_search_api_privacy'];
  $default_visualisations = $form_state['values']['options']['dataseed_search_api']['dataseed_search_api_visualisations'];

  if ($server == DATASEED_SEARCH_API_SERVICE_ID) {

    /*
     * if the privacy or default visualisations have been changed then we
     * need to recreate the dataset because the Dataseed model is changed.
     */
    $recreate_index = FALSE;
    if (isset($form_state['dataseed_search_api_original_privacy'])) {
      $recreate_index = ($form_state['dataseed_search_api_original_privacy'] != $privacy);
    }

    if (!$recreate_index && isset($form_state['dataseed_search_api_original_visualisations'])) {
      $recreate_index = ($default_visualisations !== $form_state['dataseed_search_api_original_visualisations']);
    }

    if ($recreate_index) {
      /*
       * We need to load the service class. We can't use $index->server()
       * because it refers to the $index before the form has been submitted so
       * it may refer to a server different from the one chosen on this submit
       * (i.e. different from dataseed)
       */
      $search_api_server = search_api_server_load($server);

      try {
        // We pass TRUE as second argument: a re-index will be scheduled.
        $search_api_server->recreateIndex($index, TRUE);
        drupal_set_message(t('The index was cleared and will have to be re-indexed with the new settings.'));
      }
      catch (SearchApiException $e) {
        drupal_set_message(
          t("Something went wrong with the Dataseed Server: the dataset
              might have not been properly updated on Dataseed . Check logs for
              details"),
          'warning'
        );
        watchdog_exception(
          'dataseed_search_api',
          $e,
          "%type Dataset creation failed during a fields update for a Dataseed
          index: !message in %function
          (line %line of %file)."
        );
      }
    }

  }
}

