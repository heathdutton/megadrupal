<?php

/**
 * @file
 * Contains tests for Shared Content UI.
 */

class SharedcontentUiTestCase extends DrupalWebTestCase {

  /**
   * The profile to install as a basis for testing.
   *
   * @var string
   */
  protected $profile = 'testing';

  /**
   * List of linkable nodes.
   *
   * @var array
   */
  protected $nodes_linkable = array();

  /**
   * List of all nodes.
   *
   * @var array
   */
  protected $nodes_all = array();

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'Shared Content UI tests',
      'description' => 'UI tests for Shared Content',
      'group' => 'Shared Content',
      'dependencies' => array('search_api_db', 'panels'),
    );
  }

  /**
   * Overrides DrupalWebTestCase::setUp()
   */
  public function setUp() {
    // Given all modules for a Shared Content client are enabled.
    parent::setUp(array(
      'search_api_db',
      'sharedcontent_template_ui',
      'block'
    ));

    $server = entity_create('search_api_server', array(
      'name' => 'DB',
      'machine_name' => 'db',
      'class' => 'search_api_db_service',
      'options' => array(
        'min_chars' => 1,
        'database' => 'default:default',
      ),
    ));
    $server->save();

    // And the sharedcontent search index is enabled and uses "db".
    $search_index = search_api_index_load('sharedcontent');
    $search_index->server = 'db';
    $search_index->enabled = 1;
    $search_index->save();

    // And we have two content types.
    $type_a = $this->drupalCreateContentType();
    $type_b = $this->drupalCreateContentType();

    // And this content types are indexed.
    variable_set('sharedcontent_indexed_entities', array(
      'node' => array(
        $type_a->type => $type_a->type,
        $type_b->type => $type_b->type,
      ),
    ));

    // And one content type is linkable.
    $field_name = sharedcontent_client_get_default_shared_content_field_name();
    module_load_include('inc', 'sharedcontent_client', 'includes/sharedcontent_client.admin');
    sharedcontent_client_attach_shared_content_field($field_name, 'node', $type_a->type);

    // And there are three linkable content.
    $all = array();
    for ($i = 0; $i < 3; $i++) {
      $node = $this->drupalCreateNode(array('type' => $type_a->type));
      $this->nodes_linkable[$node->nid] = $node;
    }

    // And five non linkable content.
    $this->nodes_all = $this->nodes_linkable;
    for ($i = 0; $i < 5; $i++) {
      $node = $this->drupalCreateNode(array('type' => $type_b->type));
      $this->nodes_all[$node->nid] = $node;
    }

    // And the seach index is up to date.
    $this->cronRun();

    // And an editor user.
    $editor = $this->drupalCreateUser(array(
      'access content overview',
      'access sharedcontent ui',
    ));

    // And this user is loged in.
    $this->drupalLogin($editor);
  }


  /**
   * Test the listing of linkable content.
   */
  function testLinkableListing() {
    // Preparing node labels for easy assertion.
    $linkables = array();
    $all = array();
    foreach ($this->nodes_all as $nid => $node) {
      $all[$nid] = $node->title;
      if (array_key_exists($nid, $this->nodes_linkable)) {
        $linkables[$nid] = $node->title;
      }
    }

    // When I visit the ShareBoard.
    $this->drupalGet('admin/content/sharedcontent');

    // Then I should see three records on the local side.
    $local = $this->xpath("//div[contains(@class, 'pane-sharedcontent-local-content-all')]//article[contains(@class, 'entity-sharedcontent-index')]/header/h2/a");
    $this->assertEqual(count($this->nodes_linkable), count($local));
    foreach ($local as $name) {
      $this->assertTrue(in_array($name, $linkables));
    }

    // And eight records on the remote side.
    $remote = $this->xpath("//div[contains(@class, 'pane-sharedcontent-remote-content-all')]//article[contains(@class, 'entity-sharedcontent-index')]/header/h2/a");
    $this->assertEqual(count($this->nodes_all), count($remote));
    foreach ($remote as $name) {
      $this->assertTrue(in_array($name, $all));
    }
  }

  /**
   * Test the display of the current select content.
   */
  public function testCurrentSelectedContent() {
    // When I visit the ShareBoard.
    $this->drupalGet('admin/content/sharedcontent');

    // Then I see the ShareBoard.
    $this->assertText('ShareBoard');
    // And I do not see the region for the current selected content.
    $this->assertNoText('Selected local content');
    $this->assertNoText('References');
    $pane_selected = $this->xpath("//div[contains(@class, 'pane-sharedcontent-local-content-selected')]");
    $this->assertFalse($pane_selected);
    $pane_referenced = $this->xpath("//div[contains(@class, 'pane-sharedcontent-references-current')]");
    $this->assertFalse($pane_referenced);

    // When I select an existing local content.
    $this->drupalGet('admin/content/sharedcontent/dashboard/1');

    // Then I still see the ShareBoard.
    $this->assertText('ShareBoard');
    // And I see the content appears as the current selected local content.
    $this->assertText('Selected local content');
    $this->assertText('References');
    $pane_selected = $this->xpath("//div[contains(@class, 'pane-sharedcontent-local-content-selected')]");
    $this->assertTrue($pane_selected);
    $pane_referenced = $this->xpath("//div[contains(@class, 'pane-sharedcontent-references-current')]");
    $this->assertTrue($pane_referenced);

    // When I select a non existing local content.
    $this->drupalGet('admin/content/sharedcontent/dashboard/invalid');

    // Then I still see the ShareBoard.
    $this->assertText('ShareBoard');
    // And I do not see a selected local content.
    $this->assertNoText('Selected local content');
    $this->assertNoText('References');
    $pane_selected = $this->xpath("//div[contains(@class, 'pane-sharedcontent-local-content-selected')]");
    $this->assertFalse($pane_selected);
    $pane_referenced = $this->xpath("//div[contains(@class, 'pane-sharedcontent-references-current')]");
    $this->assertFalse($pane_referenced);
  }
}
