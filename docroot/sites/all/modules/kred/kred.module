<?php

/**
 * @file
 * The Kred module interact with Kred using Drupal.
 */

/**
 * Implements hook_permission().
 */
function kred_permission() {
  return array(
    'configure kred' => array(
      'title' => t('Configure Kred'),
      'description' => t('Settings to communicate with Kred.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function kred_menu() {

  $items['admin/config/services/kred'] = array(
    'title' => 'Kred settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kred_configuration_form'),
    'access arguments' => array('configure kred'),
    'type' => MENU_NORMAL_ITEM,
    'description' => 'Settings to communicate with Kred',
    'file' => 'kred.admin.inc',
  );
  return $items;
}

/**
 * Get API credentials.
 *
 * @return array
 *   Associative array with API credentials.
 *   Keys: app_id, app_key and source.
 */
function kred_get_api_credentials() {

  $credentials = array();

  $app_id = variable_get('kred_app_id');
  $app_key = variable_get('kred_app_key');
  $source = variable_get('kred_source');

  if (empty($app_id) || empty($app_key) || empty($source)) {
    return array();
  }

  $credentials['app_id'] = $app_id;
  $credentials['app_key'] = $app_key;
  $credentials['source'] = $source;

  return $credentials;
}

/**
 * Connects to Kred and fecth Kred Score information.
 *
 * @param string $action
 *   One of the following action to execute:
 *    - 'kred_score'
 *    - 'kred_community_score'
 *    - 'kredentials'
 *
 * @param array $users
 *   An array of account IDs.
 *
 * @return array
 *   Array with Kred information.
 */
function kred_get_users_information($action, $users) {
  $result = array();

  // At least we need one user on array.
  if (!is_array($users) || empty($users)) {
    return $result;
  }

  // Get API credentials.
  $credentials = kred_get_api_credentials();

  if (empty($credentials)) {
    drupal_set_message(t("In order to use Kred's API, complete required information on !link", array('!link' => l(t('here.'), 'admin/config/services/kred'))), 'status', FALSE);
    return $result;
  }

  $kred = new Kred($credentials['app_id'], $credentials['app_key'], $credentials['source']);

  switch ($action) {
    case 'kred_score':
      $result = $kred->getKredScore($users);
      break;

    case 'kred_community_score':
      $result = $kred->getKredCommunityScore($users);
      break;

    case 'kredentials':
      $result = $kred->getKredentials($users);
      break;
  }

  return $result;
}
