<?php
/**
 * @file
 * Contains install, update and uninstall functions for Nodemaker Announcements.
 */

/**
 * Implements hook_install().
 */
function nm_announcements_install() {
  //separate into steps
  nm_announcements_install_vocab();
  $vid = nm_announcements_install_terms();
  $plid = nm_announcements_install_set_parent_menu_item();
  nm_announcements_install_child_menu_items($vid, $plid);
  drupal_set_message(t('NodeMaker Announcements has been installed.'));
}


/**
 *  Helper function for install
 */
function nm_announcements_install_vocab() {
  //create the vocab
  $vocab = new StdClass;
  $vocab->name = 'Announcement Categories';
  $vocab->machine_name = 'nm_announcement_category';
  $vocab->description = 'Categories for Announcement Posts';
  taxonomy_vocabulary_save($vocab);

  //set the alias pattern (features is strongarming it too)
  variable_set('pathauto_taxonomy_term_nm_announcement_category_pattern', 'announcements/[term:name]');
  drupal_set_message(t('Announcement Categories vocabulary created.'));
}


/**
 *  Helper function for install
 */
function nm_announcements_install_terms() {
 //array of default terms to create
  $terms = array(
    'Breaking News', 'Press Release', 'Jobs', 'General'
  );

  //get the vid for nm_announcement_category vocab
  $vocabs = taxonomy_vocabulary_get_names();
  $vid = $vocabs['nm_announcement_category']->vid;

  foreach ($terms as $term) {
    $termdata = array(
      'vid' => $vid,
      'name' => $term,
      'description' => t('A sample taxonomy term created during installation to apply to default content items and demonstrate announcement categories and nested menus.'),
      'vocabulary_machine_name' => 'nm_announcement_category',
    );

    $saveterm = (object) $termdata;
    taxonomy_term_save($saveterm);
  }
  drupal_set_message(t('Announcement "sample" terms created.'));
  return $vid;
}


/**
 *  Helper function for install
 */
function nm_announcements_install_set_parent_menu_item() {
  menu_cache_clear_all();

  //get parent menu item
  $mlid = db_select('menu_links', 'l')
    ->fields('l', array('mlid'))
    ->condition('menu_name', 'main-menu')
    ->condition('link_path', 'announcements')
    ->execute()->fetch();
  $plid = $mlid->mlid;

  //set parent as expanded
  db_update('menu_links')
    ->fields(array('expanded' => 1))
    ->condition('mlid', $plid)
    ->execute();

  menu_cache_clear_all();
  drupal_set_message(t('Announcements parent menu item set.'));
  return $plid;
}


/**
 *  Helper function for install
 */
function nm_announcements_install_child_menu_items($vid, $plid) {
  //get the tids of the terms we just saved
  $terms = db_select('taxonomy_term_data', 't')
    ->fields('t', array('tid', 'name'))
    ->condition('vid', $vid)
    ->execute()->fetchAll();

  //save the menu items
  foreach ($terms as $term) {
    $item = array(
      'link_path' => drupal_get_normal_path('taxonomy/term/' . $term->tid),
      'link_title' => $term->name,
      'menu_name' => 'main-menu',
      'plid' => $plid,
    );
    menu_link_save($item);
  }
  menu_cache_clear_all();
  drupal_set_message(t('Announcement child menu items created.'));
}


/**
 * Implements hook_disable().
 */
function nm_announcements_disable() {
  nm_announcements_disable_menu_items();

  //get dependencies
  $info = db_select('system', 's')
    ->fields('s', array('info'))
    ->condition('name', 'nm_announcements')
    ->execute()->fetch();
  $info = unserialize($info->info);

  $dependencies = array();
  foreach ($info['dependencies'] as $project) {
    //get module name
    $data = db_select('system', 's')
      ->fields('s', array('info'))
      ->condition('name', $project)
      ->execute()->fetch();
    $data = unserialize($data->info);
    $dependencies[] = $data['name'];
  }


  //notify which mods may be able to be disabled too
  drupal_set_message(t('NodeMaker Announcements has been disabled.  To remove vocabularies and terms, you must also <u>uninstall</u> NodeMaker Announcements.'));
  drupal_set_message(t('You may now also be able to disable !modules.', array('!modules' => implode(', ', $dependencies))));
}


/**
 *  Helper function for disable
 */
function nm_announcements_disable_menu_items() {
  //get the vid for forum vocab
  $vocabs = taxonomy_vocabulary_get_names();
  $vid = $vocabs['nm_announcement_category']->vid;

  //get the tids of the terms
  $terms = db_select('taxonomy_term_data', 't')
    ->fields('t', array('tid', 'name'))
    ->condition('vid', $vid)
    ->execute()->fetchAll();

  //delete each menu item
  foreach ($terms as $term) {
    menu_link_delete(NULL, 'taxonomy/term/' . $term->tid);
  }
}


/**
 * Implements hook_uninstall().
 */
function nm_announcements_uninstall() {
  //get the vid for nm_announcement_category vocab
  $vocabs = taxonomy_vocabulary_get_names();
  $vid = $vocabs['nm_announcement_category']->vid;
  nm_announcements_uninstall_terms($vid);
  nm_announcements_uninstall_vocab($vid);
  drupal_set_message(t('NodeMaker Announcements has been uninstalled.'));
}


/**
 *  Helper function for uninstall
 */
function nm_announcements_uninstall_terms($vid) {

  //get the tids of the terms
  $terms = db_select('taxonomy_term_data', 't')
    ->fields('t', array('tid', 'name'))
    ->condition('vid', $vid)
    ->execute()->fetchAll();

  //delete each term
  foreach ($terms as $term) {
    taxonomy_term_delete($term->tid);
  }
  drupal_set_message(t('Announcement terms removed.'));
}



/**
 *  Helper function for uninstall
 */
function nm_announcements_uninstall_vocab($vid) {
  taxonomy_vocabulary_delete($vid);
  drupal_set_message(t('Announcement Categories vocabulary removed.'));
}