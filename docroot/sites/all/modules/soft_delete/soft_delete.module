<?php

function soft_delete_permission() {
  $types = node_type_get_types();
  $names = node_type_get_names();

   $permissions = array();

  foreach ($names as $key => $name) {
    $type = $types[$key];

    $permissions['soft delete ' . $type->type] = array(
      'title' => t('Soft delete any !type', array('!type' => $name)),
      'description' => t('Soft delete content of type !type.', array('!type' => $name)),
      'restrict access' => TRUE,
    );

    $permissions['soft delete own ' . $type->type] = array(
      'title' => t('Soft delete own !type', array('!type' => $name)),
      'description' => t('Soft delete own content of type !type.', array('!type' => $name)),
      'restrict access' => TRUE,
    );
  }

  return $permissions;
}

function soft_delete_menu() {
  $items = array();

  $items['node/%node/remove'] = array(
    'title' => 'Remove',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('soft_delete_delete_node_confirm', 1),
    'access callback' => 'soft_delete_access',
    'access arguments' => array(1),
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  return $items;
}

function soft_delete_access($node) {
  global $user;

  if (user_access('soft delete ' . $node->type)) {
    return TRUE;
  }

  if ($node->uid == $user->uid && user_access('soft delete own ' . $node->type)) {
    return TRUE;
  }

  return FALSE;
}

function soft_delete_delete_node_confirm($form, &$form_state, $node) {
  $form['#node'] = $node;
  $form['nid'] = array(
    '#type' => 'value',
    '#value' => $node->nid,
  );
  return confirm_form($form,
    t('Are you sure you want to remove the node %title?', array('%title' => $node->title)),
    'node/' . $node->nid,
    t('This action cannot be undone.'),
    t('Remove node'),
    t('Cancel')
  );
}

function soft_delete_delete_node_confirm_submit($form, &$form_state) {
  global $user;

  if ($form_state['values']['confirm']) {
    $node = node_load($form_state['values']['nid']);
    $node->status = 0;
    node_save($node);

    watchdog('soft delete', 'Node !node was soft deleted by !user.', array('!node' => l($node->title, 'node/' . $node->nid), '!user' => l($user->name, 'user/' . $user->uid)));
    drupal_set_message(t('The node !node was deleted.', array('!node' => $node->title)));
  }

  $form_state['redirect'] = '<front>';
}
