<?php
/**
 * @file loginza.module
 *    Main module routines.
 */

/**
 * Implements hook_init().
 */
function loginza_init() {
  module_load_include('routines.inc', 'loginza', 'inc/loginza');
}

/**
 * Implements hook_menu().
 */
function loginza_menu() {
  $items = array();

  $items['admin/config/people/loginza'] = array(
    'title' => 'Loginza',
    'description' => 'Manage Loginza settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('loginza_config_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'inc/loginza.admin.inc',
  );

  $items['loginza/token_url'] = array(
    'access callback' => TRUE,
    'page callback' => 'loginza_callback',
    'type' => MENU_CALLBACK,
    'file' => 'inc/loginza.pages.inc',
  );

  $items['user/%user/loginza'] = array(
    'title' => 'Loginza identities',
    'page callback' => 'loginza_user_identities',
    'page arguments' => array(1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'inc/loginza.pages.inc',
  );
  $items['user/%user/loginza/delete'] = array(
    'title' => 'Delete Loginza identity',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('loginza_user_delete_form', 1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'file' => 'inc/loginza.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function loginza_theme($existing, $type, $theme, $path) {
  return array(
    'loginza_iframe' => array(
      'variables' => array('token_url' => NULL, 'providers_set' => NULL, 'provider' => NULL, 'lang' => NULL),
      'file' => 'inc/loginza.theme.inc',
    ),
    'loginza_button' => array(
      'variables' => array('token_url' => NULL, 'caption' => NULL, 'providers_set' => NULL, 'provider' => NULL,
        'lang' => NULL, 'image' => NULL),
      'file' => 'inc/loginza.theme.inc',
    ),
    'loginza_icons' => array(
      'variables' => array('token_url' => NULL, 'caption' => NULL, 'providers_set' => NULL, 'provider' => NULL,
        'lang' => NULL, 'icons' => NULL),
      'file' => 'inc/loginza.theme.inc',
    ),
    'loginza_string' => array(
      'variables' => array('token_url' => NULL, 'caption' => NULL, 'providers_set' => NULL, 'provider' => NULL,
        'lang' => NULL),
      'file' => 'inc/loginza.theme.inc',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function loginza_form_user_login_block_alter(&$form, &$form_state) {
  if (variable_get('loginza_integrate_login_button', TRUE)) {
    $form['actions']['#weight'] = 5;

    $form['loginza_user_login_block_button'] = array(
      '#prefix' => '<div>',
      '#markup' => theme('loginza_button'),
      '#suffix' => '</div>',
      '#weight' => 6,
    );
  } elseif (variable_get('loginza_integrate_login_string', FALSE)) {
    $form['actions']['#weight'] = 5;

    $form['loginza_user_login_block_string'] = array(
      '#prefix' => '<div>',
      '#markup' => theme('loginza_string'),
      '#suffix' => '</div>',
      '#weight' => 6,
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function loginza_form_comment_form_alter(&$form, &$form_state) {
  if (user_is_anonymous() && variable_get('loginza_integrate_comment_icons', TRUE)) {
    $form['loginza_comment_form_icons'] = array(
      '#prefix' => '<div>',
      '#markup' => theme('loginza_icons'),
      '#suffix' => '</div>',
      '#weight' => -100,
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function loginza_form_user_register_form_alter(&$form, &$form_state) {
  if (isset($_SESSION['loginza']['data'])) {
    $data = $_SESSION['loginza']['data'];

    $form['account']['name']['#default_value'] = _loginza_username($data);

    if (!empty($data['email'])) {
      $form['account']['mail']['#default_value'] = $data['email'];
    }
    elseif (variable_get('loginza_allow_email_bypass', FALSE)) {
      $form['account']['mail']['#default_value'] = _loginza_fake_email();
    }

    // If user_email_verification is off, hide the password field and just fill
    // with random password to avoid confusion.
    if (!variable_get('user_email_verification', TRUE)) {
      $form['account']['pass']['#type'] = 'hidden';
      $form['account']['pass']['#value'] = user_password();
    }

    $form['loginza_identity'] = array(
      '#type' => 'value',
      '#default_value' => $data['identity'],
    );
    $form['loginza_display'] = array(
      '#type' => 'item',
      '#title' => t('Your Loginza Identity'),
      '#description' => t('This Identity will be attached to your account after registration.'),
      '#markup' => check_plain($data['identity']),
    );
  }
  elseif (variable_get('loginza_integrate_register_iframe', TRUE)) {
    $form['actions']['#weight'] = 5;

    $form['loginza_user_register_form_iframe'] = array(
      '#type' => 'item',
      '#title' => t('Or log in using of the following services'),
      '#markup' => theme('loginza_iframe'),
      '#weight' => 6,
    );
  }
}

/**
 * Implements hook_user_insert().
 */
function loginza_user_insert(&$edit, $account, $category) {
  if (!empty($edit['loginza_identity'])) {
    // The user has registered after trying to log in via Loginza.
    if (variable_get('user_email_verification', TRUE)) {
      drupal_set_message(t('Once you have verified your e-mail address, you may log in via Loginza.'));
    }
    user_set_authmaps($account, array('authname_loginza' => $edit['loginza_identity']));
    unset($_SESSION['loginza']);
    unset($edit['loginza_identity']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function loginza_form_user_login_alter(&$form, &$form_state) {
  if (variable_get('loginza_integrate_login_iframe', TRUE)) {
    $form['actions']['#weight'] = 5;

    $form['loginza_user_login_iframe'] = array(
      '#type' => 'item',
      '#title' => t('Or log in using of the following services'),
      '#markup' => theme('loginza_iframe'),
      '#weight' => 6,
    );
  }
}

function loginza_block_info() {
  return array(
    'loginza_login_button' => array(
      'info' => t('Loginza: log in button'),
    ),
  );
}

function loginza_block_view($delta = '') {
  if (user_is_anonymous()) {
    if ($delta == 'loginza_login_button') {
      return array(
        'subject' => t('Log in as user of'),
        'content' => theme('loginza_button'),
      );
    }
  }
}
