<?php

/**
 * D.A.I.L.
 * Drupal Aritificial Intelligence Libraries
 *
 * Included libraries:
 *  - bayesian.inc: a basic bayesian logic class
 */

/**
 * Load the appropriate libraries.
 * TODO: Remove me?  Libraries now have their own module, and thus can include
 *       files themselves.
 */
function dail_init() {
  static $initialized = FALSE;
  $enabled = variable_get('dail_enable_libs', array());
  if (is_array($enabled) && !empty($enabled)) {
    foreach ($enabled as $library) {
      if (!$initialized) {
        // Include parent class before including any children classes.
        include_once(drupal_get_path('module', 'dail') . "/dail.inc");
        $initialized;
      }
      //include_once(drupal_get_path('module', 'dail') . "/includes/$library.inc");
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function dail_menu() {
  $items = array();
  $items['admin/config/development/dail'] = array(
    'title' => t('D.A.I.L. settings'),
    'description' => 'Enable and configure Drupal Artifical Intelligence Libraries',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dail_admin_settings'),
    'access arguments' => array('administer dail'),
  );
  return $items;
}

/**
 * Implementation of hook_permission().
 */
function dail_permission() {
  return array(
    'administer dail' => array(
      'title' => t('Administer DAIL'),
    ),
  );
}

function dail_admin_settings() {
  $form = array();
  $classes = array();

  $includes = drupal_get_path('module', 'dail') . '/includes';
  $files = file_scan_directory($includes, '/.inc$/');
  foreach ($files as $file) {
    include_once($file->uri);
    $function = "{$file->name}_dail_class";
    if (function_exists($function)) {
      $classes[] = $function();
    }
  }

  $header = array(
    'class' => array('data' => t('Class')),
    'options' => array('data' => t('Options')),
  );
  $options = array();
  foreach ($classes as $class) {
    if (is_array($class->requires)) {
      foreach ($class->requires as $required) {
        require_once($required);
      }
    }
    $options[$class->name] = array(
      'class' => "class $class->class<br />$class->description",
      'options' => t('Enable'),
    );
  }
  $form['classes'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#empty' => t('No classes available.'),
  );

  return $form;
}

