<?php
class FlattrTestCase extends DrupalWebTestCase {
  protected $admin_user;

  public static function getInfo() {
    return array(
      'name' => 'Flattr test',
      'description' => 'Ensures that the Flattr module generates a correct embed string.',
      'group' => 'Flattr',
    );
  }

  public function setUp() {
    parent::setUp('flattr');

    // @todo Reduce the number of permissions to only those necessary
    $this->admin_user = $this->drupalCreateUser(array('access content', 'access administration pages', 'administer site configuration', 'administer content types', 'administer nodes', 'create article content', 'edit any article content', 'delete any article content'));
    $this->drupalLogin($this->admin_user);
  }


  /* Copied from the imagefield tests */
  function createFlattrField($name, $type_name, $field_settings = array(), $instance_settings = array(), $widget_settings = array()) {
    $field = array(
      'field_name' => $name,
      'type' => 'flattr_button',
      'settings' => array(),
      'cardinality' => 1,
    );
    $field['settings'] = array_merge($field['settings'], $field_settings);
    field_create_field($field);

    $instance = array(
      'field_name' => $field['field_name'],
      'entity_type' => 'node',
      'label' => $name,
      'bundle' => $type_name,
      'required' => !empty($instance_settings['required']),
      'settings' => array(),
      'widget' => array(
        'type' => 'flattr_checkbox',
        'settings' => array(),
      ),
    );
    $instance['settings'] = array_merge($instance['settings'], $instance_settings);
    $instance['widget']['settings'] = array_merge($instance['widget']['settings'], $widget_settings);
    return field_create_instance($instance);
  }

  public function testFlattrEmbed() {
    $field_name = drupal_strtolower($this->randomName());
    /*$widget_settings = array(
      'preview_image_style' => 'medium',
    );*/
    $this->createFlattrField($field_name, 'article');
    $instance = field_info_instance('node', $field_name, 'article');

    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertText(t('Button size is'), t('Make sure the field was created successfully by verifying it shows a button size setting.'));
    $this->assertText(t('The description field is '), t('Make sure the field was created successfully by verifying it show a <None> field setting by default'));

    // @todo Test a rendering here

    $edit = array('fields[field_blogpost_flattr][settings_edit_form][settings][flattr_description_field]' => 'body');
    $this->drupalPost('admin/structure/types/manage/article/display', $edit, t('Set the flattr description field to body'));

    $embedString = '';
  }
}
