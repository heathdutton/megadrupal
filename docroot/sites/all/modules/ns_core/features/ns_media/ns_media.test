<?php
/**
 * @file
 * Tests for media.
 */

/**
 * Basic test for the file entities, and the fields that are
 * added by ns_media.
 */
class NSMediaTestCase extends NSContentProviderTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Media',
      'description' => 'Test media functionality.',
      'group' => 'NodeStream'
    );
  }
  /**
   * Test some basic functionality.
   */
  function testBasic() {
    $fields = array(
      'field_ns_media_caption',
      'field_ns_media_category',
      'field_ns_media_tag',
    );
    $vocabularies = taxonomy_vocabulary_get_names();
    $this->assertTrue(isset($vocabularies['ns_media_file_category']), t('The file category vocabulary exists.'));
    $this->assertTrue(isset($vocabularies['ns_media_tag']), t('The tag vocabulary exists'));
    $this->assertFieldsExisting($fields);
  }

  /**
   * Test the media form.
   */
  function testMediaForm() {
    // Create a test image. Creating an image through the media module is not possible
    // without javascript, so let's skip that.
    $test_image = $this->createTestFile('image');
    $user = $this->drupalCreateUser(array('administer files', 'view file', 'edit file'));
    $this->drupalLogin($user);
    $vocabularies = taxonomy_vocabulary_get_names();

    $category_term = new stdClass;
    $category_term->vid = $vocabularies['ns_media_file_category']->vid;
    $category_term->name = "Sample category";
    taxonomy_term_save($category_term);

    $this->drupalGet('file/' . $test_image->fid . '/edit');
    $this->assertField('field_ns_media_caption[und][0][value]');
    $this->assertField('field_ns_media_category[und]');
    // The credit field should only be available when we have enabled the contributor extension.
    $this->assertNoField('field_ns_media_credit[und][0][entity_id]');
    $this->assertField('field_ns_media_tag[und]');
    $name = 'test';
    $caption = 'test';
    $values = array(
      'filename' => $name,
      'field_ns_media_caption[und][0][value]' => $caption,
      'field_ns_media_category[und]' => $category_term->tid,
      'field_ns_media_tag[und]' => 'example tag',
    );
    $this->drupalPost(NULL, $values, t('Save'));
    $this->drupalGet('file/' . $test_image->fid . '/edit');
    foreach ($values as $key => $value) {
      $this->assertFieldByName($key, $value);
    }
  }

  function setUp() {
    parent::setUp('ns_media');
  }
}

class NSMediaCreditTestCase extends NSContentProviderTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Media credit',
      'description' => 'Test attaching contributors to media.',
      'group' => 'NodeStream'
    );
  }

  function setUp() {
    parent::setUp('ns_media', 'ns_contributor', 'references_dialog');
  }

  function testMediaCredit() {
    // Enable the credit extension.
    $components = defaultconfig_get_components();
    $optional = new stdClass();
    $optional->export_type = 0;
    $optional->name = 'field_default_fields:file-image-field_ns_media_credit';
    $optional->status = 1;
    ctools_export_crud_save('defaultconfig_optionals', $optional);
    defaultconfig_component_rebuild($components['field_default_fields'], 'ns_media');
    $contributor = $this->drupalCreateNode(array('type' => 'ns_contributor'));
    $permissions = array(
      'access content',
      'create ns_contributor content',
      'edit own ns_contributor content',
      'access content overview',
      'administer files',
      'view file',
      'edit file',
    );
    $test_image = $this->createTestFile('image');
    $user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($user);
    $this->drupalGet('file/' . $test_image->fid . '/edit');
    $this->assertField('field_ns_media_credit[und][0][target_id]');
    $this->assertLink(t('Create Contributor'));
    $this->assertLink(t('Search'));
    $credit_value = "{$contributor->title} ({$contributor->nid})";
    $values = array(
      'filename' => $test_image->filename,
      'field_ns_media_credit[und][0][target_id]' => $credit_value,
    );
    $this->drupalPost(NULL, $values, t('Save'));
    $this->drupalGet('file/' . $test_image->fid . '/edit');
    $this->assertFieldByName('field_ns_media_credit[und][0][target_id]', $credit_value);
  }
}