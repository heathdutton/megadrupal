<?php

function node_update_from_url_menu() {
  $items = array();

  $items['node_update_from_url/%node/%'] = array(
      'title' => 'Node Update from Url',
      'description' => 'Fill and update Node from url',
      'page callback' => 'node_update_from_url_save_destination',
      'page arguments' => array(1, 2),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );

  return $items;
}

function node_update_from_url_save_destination($node, $url) {
  if (node_access('update', $node)) {
    $_SESSION['node_update_from_url_destination'] = $_SERVER['HTTP_REFERER'];
    return drupal_get_form('node_update_from_url_confirm', $node, $url);
  }
  else {
    drupal_access_denied();
  }
}

function node_update_from_url_confirm($form, $form_state, $node, $url) {
  $form['#node'] = $node;
  $form['#url'] = $url;
  return confirm_form($form, t('Are you sure you want to update %node-title?', array('%node-title' => $node->title)), $_SESSION['node_update_from_url_destination'], t(''), t('Update'), t('Cancel'));
}

function node_update_from_url_confirm_submit($form, &$form_state) {
  $node = $form['#node'];
  $url_params = explode('|', $form['#url']);
  if ($form_state['values']['confirm']) {
    foreach ($url_params as $param) {
      $parts = explode('=', $param);
      if (!empty($parts)) {
        $key = trim($parts[0]);
        $value = trim($parts[1]);
        if (is_numeric($value))
          $value = intval($value);
        if (is_array($node->$key)) {
          $lang = $node->language;
          $node->$key = array($lang => array(0 => array('value' => $value)));
        }
        else {
          $node->$key = $value;
        }
      }
    }
    node_save($node);
  }

  drupal_goto('<front>');
}