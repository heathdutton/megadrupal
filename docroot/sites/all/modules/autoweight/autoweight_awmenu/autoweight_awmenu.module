<?php
/**
 * @file
 * Set automatic weights for menu items.
 */
/**
 * Implements hook_form_alter().
 */
function autoweight_awmenu_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    // Add pattern fields to menu settings
    case 'menu_edit_menu':
      if (empty($form['old_name']['#value'])) {
        $form['autoweight'] = array(
          '#type' => 'markup',
          '#markup' => t("Auto-weight options will be available after the menu has been created."),
        );
        return;
      }

      $menu_name = $form_state['build_info']['args'][1]['menu_name'];
      $autoweight = (array) autoweight_get_setting('autoweight_awmenu', $menu_name);

      // Provide additional tokens.
      $token_types = array();
      $token_types[] = 'term';
      $token_types[] = 'vocabulary';
      $token_types[] = 'node';
      $token_types[] = 'user';

      autoweight_add_collection_form($form, $form_state, $autoweight, 'autoweight_awmenu', $menu_name, $token_types);
      break;

    // Adjust weight field on menu item form
    case 'menu_edit_item':
      $menu = $form_state['build_info']['args'][1]['menu_name'];
      if ($autoweight = autoweight_get_setting('autoweight_awmenu', $menu)) {
        $form['weight']['#delta'] = max(50, $form['weight']['#default_value']);
        $form['weight']['#description'] .= '<br />' . t('Weights for this menu are being generated by the !link setting %label.', array('!link' => l(t('Auto Weight'), "admin/structure/menu/manage/$menu/edit", array('query' => drupal_get_destination())), '%label' => $autoweight['label']));
      }
      break;

    // Adjust weight fields on the overview form (drag-n-drop table)
    case 'menu_overview_form':
      if ($autoweight = autoweight_get_setting('autoweight_awmenu', $form['#menu']['menu_name'])) {
        foreach (element_children($form) as $child) {
          if (isset($form[$child]['mlid'])) {
            $form[$child]['weight']['#delta'] = max(50, $form[$child]['weight']['#default_value']);
          }
        }

        autoweight_add_sort_button($form, $form_state, $autoweight);
      }
      break;
  }
}

/**
 * Sort menu items by calculating and storing custom weights.
 */
function autoweight_awmenu_autoweight_sort($autoweight) {
  $name = $autoweight['name'];
  $type = 'menu';

  // Get all menu items.
  $menu_items = menu_load_links($name);

  // Allow modules to alter the lis tof items we are re-weighting if they need
  // to filter out certain items.
  drupal_alter('autoweight_items', $menu_items, $type, $name);

  foreach ($menu_items as &$item) {
    $data = array();
    $parts = explode('/', $item['link_path']);

    // Load entities for token replacement
    // @todo Expand this to include all entities
    switch ($item['router_path']) {
      // Taxonomy Terms and Vocabs
      case 'taxonomy/term/%':
        $term = taxonomy_term_load($parts[2]);

        // If there is no term for this tid, this is a broken link and the
        // menu_links table needs to be cleaned out. Skip to the next item.
        if (!is_object($term)) {
          continue;
        }

        $data['term'] = $term;
        $data['vocab'] = taxonomy_vocabulary_load($term->vid);
        break;

      // Nodes
      case 'node/%':
        $node = node_load($parts[1]);
        if (!is_object($node)) {
          continue;
        }
        $data['node'] = $node;
        break;

      // Users
      case 'user/%':
        $user = user_load($parts[1]);
        if (!is_object($user)) {
          continue;
        }
        $data['user'] = $user;
        break;
    }

    // Create a record with the new weight and replace the DB value.
    $record = array(
      'mlid' => $item['mlid'],
      'weight' => autoweight_process_weight($autoweight, $data, $item['weight']),
    );
    drupal_write_record('menu_links', $record, 'mlid');
  }

  drupal_set_message(t('Menu items for %menu have been sorted by %sort.', array('%menu' => $name, '%sort' => $autoweight['label'])));
}
