<?php

/**
 * hook_menu implementation
 * 
 * Provide settings form.
 * 
 * @return $items Menu items
 */
function domain_content_types_menu() {
  $items['admin/structure/domain/view/%domain/content-types'] = array(
    'title' => 'Content Types',
    'type' => MENU_LOCAL_TASK,
    'description' => 'Select content types for each domain.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('domain_content_types_form', 4),
    'access arguments' => array('administer domains'),
  );
  return $items;
}


/**
 * Menu alter for node add forms
 * 
 * Add access control to node/add/<content-types> menu items  
 * 
 * @param array &$items Menu items
 * 
 */
function domain_content_types_menu_alter(&$items) {
  foreach (node_type_get_types('types', NULL, TRUE) as $type) {
    $url_string = str_replace('_', '-', $type->type);
    $items['node/add/' . $url_string]['access callback'] = 'domain_content_types_access';
    $items['node/add/' . $url_string]['access arguments'] = array($type->type);
  }
}


/**
 * Access callback for node add forms.
 * 
 * @param string $type access type
 * 
 * @return TRUE/FALSE whether user is authorized to create such node
 */
function domain_content_types_access($type) {
  // Check default access for node add form.
  if (!node_access('create', $type)) {
    return FALSE;
  }
  global $_domain;
  $types = variable_get('domain_content_types_' . $_domain['domain_id'], array());
  // Grant all if no node types are selected for this domain.
  if (empty($types)) {
    return TRUE;
  }
  elseif (in_array('all', $types, TRUE)) {
    return FALSE;
  }
   return in_array($type, array_values($types), TRUE);
}


/**
 *  Do not allow administrators cross publish content types to affiliate sites.
 *  
 *  @param array &$form contains the form
 *  @param array &$form_state contais the state of the form
 *  @param string $form_id form type identification
 *  
 */
function domain_content_types_form_alter(&$form, &$form_state, $form_id) {
  if (array_key_exists('type', $form)) { // do we have form['type']
    if (array_key_exists('#value', $form['type'])) { // do we have form['type']['#value']
      $node_form_id = $form['type']['#value'] .'_node_form';
        if (isset($form['type']) && isset($form['#node']) && $node_form_id == $form_id) {
          foreach (domain_domains() as $domain) {
            $domain_id = $domain['domain_id'];
            $types = variable_get('domain_content_types_' . $domain_id, array());
            if (empty($types)) {
              continue;
            }
            elseif (in_array('all', $types, TRUE) || !in_array($form['type']['#value'], $types, TRUE)) {
              $domain_id = ($domain_id == 0) ? -1 : $domain_id;
              unset($form['domain']['domains']['#options'][$domain_id]);
            }
          }
        }
      }
   }
}


/**
 * hook_domainlinks THIS IS NO LONGER SUPPORTED
 * 
 * Add a content type link to the domain settings page.
 */
function domain_content_types_domainlinks($domain) {
  // These actions do not apply to the primary domain.
  $links[] = array(
    'title' => t('content types'),
    'path' => 'admin/structure/domain/view/' . $domain['domain_id'] . '/content-types',
  );
  return $links;
}

/**
 * Create form for selecting content types.
 * 
 *  @param array $form contains the form
 *  @param array $form_state contais the state of the form
 *  @param string $domain which domain's settings we are editing
 *  
 *  @return array $form contains the form
 *  
 */
function domain_content_types_form($form, $form_state, $domain) {
  $domain_id = $domain['domain_id'];
  $options['all'] = t('Restrict all content types.');
  // Get content types 
  foreach (node_type_get_types() as $type) {
    $options[$type->type] = t($type->name);
  }
  $form['domain_content_types'] = array(
    '#title' => t('Select content types for %name (%domain).', array('%name' => $domain['sitename'], '%domain' => $domain['path'])),
    '#type' => 'checkboxes',
    '#options' => $options,
    '#default_value' => variable_get('domain_content_types_' . $domain_id, array()),
    '#description' => t('All content types will be available to this domain if none are selected above.'),
  );
  $form['domain_id'] = array(
    '#type' => 'value',
    '#value' => $domain_id,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}


/**
 * Submit handler for domain_content_types_form
 * 
 *  @param array &$form contains the form
 *  @param array &$form_state contais the state of the form
 */
function domain_content_types_form_submit(&$form, &$form_state) {
  $values = $form_state['values'];
  $selected = 0;
  foreach ($values['domain_content_types'] as $value) {
    if ($value) {
      $selected = 1;
    }
  }
  if ($selected) { //we have some settings to save
    variable_set('domain_content_types_' . $values['domain_id'], $values['domain_content_types']);
  }
  else { // when nothing is selected, delete the variable
    variable_del('domain_content_types_' . $values['domain_id']);
  }
  drupal_set_message(t('The settings have been saved.'));
  cache_clear_all();
}