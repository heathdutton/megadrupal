<?php

/**
 * Test class for long answer.
 */
class LongAnswerTestCase extends QuizTestCase {

  protected $questionHandlers = array('long_answer');
  protected $extraModules = array('quizz_text');
  protected $extraAdminPermissions = array('score any quiz');

  public static function getInfo() {
    return array(
        'name'        => 'Long answer',
        'description' => 'Test cases for Long answers question type.',
        'group'       => 'Quiz question',
    );
  }

  /**
   * Test adding and taking a truefalse question.
   */
  private function createQuizQuestion($settings = NULL) {
    if (!$settings) {
      $settings = array('rubric' => 'LA 1 rubric.');
    }

    return $this->drupalCreateQuestion(array(
          'type'  => 'long_answer',
          'title' => 'LA 1 title',
          'body'  => 'LA 1 body text.',
        ) + $settings);
  }

  public function testWrapper() {
    $this->checkGradeAnswerManualFeedback();

    // Just make sure there's no warnings
    $this->drupalLogin($this->admin);
    $this->drupalGet('admin/quizz/reports/score-long-answer');
    $this->assertText('Score long answer questions');
  }

  /**
   * Test manually graded questions. Also test feedback here instead of its own
   * test case.
   *
   * Note: we use two questions here to make sure the grading form is handled
   * correctly.
   */
  private function checkGradeAnswerManualFeedback() {
    $question_1 = $this->createQuizQuestion();
    $question_2 = $this->createQuizQuestion();
    $quiz = $this->linkQuestionToQuiz($question_1);
    $this->linkQuestionToQuiz($question_2, $quiz);

    // Test correct.
    $this->drupalLogin($this->user);
    $this->drupalGet("quiz/$quiz->qid/take");
    $this->drupalPost(NULL, array("question[$question_1->qid][answer]" => 'the answer is the zero one infinity rule'), t('Next'));
    $this->drupalPost(NULL, array("question[$question_2->qid][answer]" => 'the number two really is ridiculous'), t('Finish'));
    $this->assertText('Your score: 0%');

    // Strange behavior - extra spacing in the HTML.
    // $this->assertText('Score ? of 10');
    $this->assertText('This answer has not yet been scored.');
    $this->assertNoFieldByName('0[score]');
    $this->assertNoFieldByName('1[score]');
    $result_url = $this->getUrl();

    // Test grading the question.
    $this->drupalLogin($this->admin);
    $this->drupalGet($result_url);
    $this->drupalPost(NULL, array(
        "0[score]"                   => 3,
        "1[score]"                   => 7,
        "0[answer_feedback][value]"  => 'Feedback for answer 1.',
        "1[answer_feedback][value]"  => 'Feedback for answer 2.',
        "0[answer_feedback][format]" => 'filtered_html',
        "1[answer_feedback][format]" => 'filtered_html'), t('Save score'));
    $this->assertText('The scoring data you provided has been saved.');

    // Test the score and feedback are visible to the user.
    $this->drupalLogin($this->user);
    $this->drupalGet($result_url);
    $this->assertText('You got 10 of 20 possible points.');
    $this->assertText('Your score: 50%');

    // Strange behavior - extra spacing in the HTML.
    $this->assertText('Feedback for answer 1.');
    $this->assertText('Feedback for answer 2.');
  }

}
