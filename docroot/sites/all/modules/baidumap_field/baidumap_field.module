<?php

/**
 * @file
 * This file defines all the necessary hooks and functions to create
 * a Baidu Map Field field type
 */

/**
 * Implements hook_help().
 */
function baidumap_field_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/help#baidumap_field':
      $output = t('Add Baidu Map type fields to content types.');
  }
  return $output;
}

/**
 * Implements hook_init().
 */
function baidumap_field_init() {
  baidumap_field_add_maps_api();
  drupal_add_js(drupal_get_path('module', 'baidumap_field') . '/js/baidumap_field_node_display.js', 'file');
}

/**
 * Implements hook_menu().
 */
function baidumap_field_menu() {
  $items = array();

  $items['admin/config/services/baidu-map-field-apikey'] = array(
    'title' => 'Baidu Map Field API Key',
    'description' => 'Set your Baidu Maps API key.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('baidumap_field_apikey_settings_form'),
    'file' => 'includes/baidumap_field.admin.inc',
    'access arguments' => array('access administration pages'),
  );

  return $items;
}

/**
 * Implements hook_field_info().
 */
function baidumap_field_field_info() {
  return array(
    'baidumap_field' => array(
      'label' => t('Baidu Map Field'),
      'description' => t('This field stores and renders Baidu Maps.'),
      'instance_settings' => array(
        'cardinality' => 1,
      ),
      'default_widget' => 'baidumap_field_widget',
      'default_formatter' => 'baidumap_field_formatter_default',
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function baidumap_field_field_widget_info() {
  return array(
    'baidumap_field_widget' => array(
      'label' => t('Map'),
      'field types' => array('baidumap_field'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function baidumap_field_field_formatter_info() {
  $formats = array(
    'baidumap_field_formatter_default' => array(
      'label' => t('Map'),
      'description' => t('Default display for Baidu map field.'),
      'field types' => array('baidumap_field'),
    ),
  );
  return $formats;
}

/**
 * Implements hook_field_widget_error().
 */
function baidumap_field_field_widget_error($element, $error, $form, &$form_state) {
  form_error($element, $error['message']);
}

/**
 * Implements hook_field_is_empty().
 */
function baidumap_field_field_is_empty($item, $field) {
  if (empty($item['lat']) || empty($item['lng'])) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_formatter_view().
 */
function baidumap_field_field_formatter_view($object_type, $object, $field, $instance, $langcode, $items, $display) {
  drupal_add_css(drupal_get_path('module', 'baidumap_field') . '/css/baidumap_field.css');
  $element = array();

  switch ($display['type']) {
    case 'baidumap_field_formatter_default':
      foreach ($items as $delta => $item) {
        $element[$delta] = baidumap_field_format_field($item, $delta, $display);
      }
      break;
  }

  return $element;
}

/**
 * This function formats the baidu map field for display,
 * called by baidumap_field_field_formatter_view().
 */
function baidumap_field_format_field($item, $delta, $display) {
  $map_id = uniqid();

  // Get the map details and place in an array to pass to Drupal.settings.
  $settings = array(
    'gmf_node_display' => array(
      'baidumap_field_' . $map_id => array(
        'lat' => $item['lat'],
        'lng' => $item['lng'],
        'zoom' => $item['zoom'],
      ),
    ),
  );

  $element = array(
    '#type' => 'container',
    '#attributes' => array('class' => array('field-item')),
  );
  $element['baidumap_field'] = array(
    'item' => array(
      '#type' => 'container',
      '#attributes' => array('class' => array('field-item')),
      'text' => array(
        '#markup' => theme('baidumap_field', array(
          'name' => check_plain($item['name']),
          'map_id' => $map_id,
        )),
      ),
    ),
  );
  drupal_add_js($settings, 'setting');
  return $element;
}

/**
 * Implements hook_field_widget_form().
 */
function baidumap_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {

  $fname = str_replace('_', '-', $element['#field_name']);
  $element['#title'] = t('Baidu Map Field Settings');
  $element['#description'] = '<p>' . t('To set a location for the map, use the controls to zoom in or out and drag the map to find the correct area. Once you have found the correct location click that point to set the map.') . '</p>';

  $element += array(
    '#type' => 'fieldset',
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#attached' => array(
      'js' => array(
        drupal_get_path('module', 'baidumap_field') . '/js/baidumap_field_widget_form.js',
      ),
      'css' => array(
        drupal_get_path('module', 'baidumap_field') . '/css/baidumap_field.css',
      ),
    ),
    '#fname' => $fname,
  );

  $element['fname'] = array(
    '#type' => 'hidden',
    '#value' => $fname,
  );
  $element['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Map Name'),
    '#default_value' => isset($items[$delta]['name']) ? $items[$delta]['name'] : NULL,
    '#prefix' => '<div><div class="clearfix"><div class="baidumap_field_left40pc">',
  );
  $element['lat'] = array(
    '#type' => 'textfield',
    '#title' => t('Latitude'),
    '#required' => $instance['required'],
    '#element_validate' => array('baidumap_field_latlng_validate'),
    '#default_value' => isset($items[$delta]['lat']) ? $items[$delta]['lat'] : 39.911126,
  );
  $element['lng'] = array(
    '#type' => 'textfield',
    '#title' => t('Longitude'),
    '#required' => $instance['required'],
    '#element_validate' => array('baidumap_field_latlng_validate'),
    '#default_value' => isset($items[$delta]['lng']) ? $items[$delta]['lng'] : 119.545212,
  );
  $element['zoom'] = array(
    '#type' => 'textfield',
    '#title' => t('Zoom'),
    '#default_value' => isset($items[$delta]['zoom']) ? $items[$delta]['zoom'] : 9,
    '#attributes' => array('readonly' => 'readonly'),
    '#suffix' => '</div>',
  );
/*  $element['center_on'] = array(
    '#type' => 'textfield',
    '#title' => t('Center On'),
    '#description' => t('To center the map on an approximate location, enter the location in the box above, e.g. "London, UK" or "1 Southwark Street, London, UK" and click \'center\''),
  );
  $element['do_center'] = array(
    '#type' => 'button',
    '#value' => t('center'),
    '#attributes' => array('onclick' => 'return baidumap_field_doCenter();'),
    '#suffix' => '</div>',
  );*/
  $element['map'] = array(
    '#markup' => theme('baidumap_field_map_picker'),
    '#prefix' => '<div class="baidumap_field_left60pc">',
    '#suffix' => '</div></div></div>',
  );

  $settings = array(
      'lat' => $element['lat']['#default_value'],
      'lng' => $element['lng']['#default_value'],
      'zoom' => $element['zoom']['#default_value'],
      'fname' => $fname,
  );

  $form['#attached']['js'][] = array(
    'data' => array('gmf_widget_form' => $settings),
    'type' => 'setting',
  );

  return $element;
}

/**
 * Custom validation function for latitude/longitude fields.
 */
function baidumap_field_latlng_validate($element, $form, &$form_state) {
  if (!is_numeric($element['#value']) && !empty($element['#value'])) {
    $field = implode('][', $element['#array_parents']);
    form_set_error($field, t('Invalid value - @title', array('@title' => $element['#title'])));
  }
}

/**
 * Implements hook_theme().
 */
function baidumap_field_theme($existing, $type, $theme, $path) {
  if ($type == 'module') {
    return array(
      'baidumap_field' => array(
        'variables' => array(
          'name' => NULL,
          'map_id' => NULL,
        ),
        'template' => 'baidumap-field',
        'path' => drupal_get_path('module', 'baidumap_field') . '/theme',
      ),
      'baidumap_field_map_picker' => array(
        'render_element' => 'element',
      ),
    );
  }
  return array();
}

/**
 * Implements form_field_ui_field_edit_form_alter().
 */
function baidumap_field_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  if ($form['#field']['type'] == 'baidumap_field') {
    drupal_add_css(drupal_get_path('module', 'baidumap_field') . '/css/baidumap_field.css');
    $form['field']['cardinality']['#default_value'] = 1;
    $form['field']['#access'] = FALSE;
  }
}

/**
 *  Theme function to return map picker div on node edit form.
 */
function theme_baidumap_field_map_picker($variables) {
  return '<div id="baidumap_picker"></div>';
}

/**
 * Helper function to add the Baidu Maps API.
 */
function baidumap_field_add_maps_api() {
  if (variable_get('baidumap_field_apikey', '') != '') {
    $element = array(
      '#type' => 'markup',
      '#markup' => '<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=' . variable_get('baidumap_field_apikey', '') . '"></script>',
    );
    drupal_add_html_head($element, 'baidumaps_api');
  }
  else {
    drupal_add_js('http://api.map.baidu.com/api?v=2.0', 'external');
  }
}

/**
 * Helper function to return all fields created on the system
 * of the baidu map field type.
 */
function baidumap_field_get_fields() {
  $types = array_keys(baidumap_field_field_info());
  $fields = array();
  foreach (field_info_fields() as $field) {
    if (in_array($field['type'], $types)) {
      $fields[] = $field;
    }
  }
  return $fields;
}
