<?php

/**
 * @file uc_eway.install
 * The installation file for the uc_eway module
 */

/**
 * Implements hook_requirements().
 */
function uc_eway_requirements($phase) {
  $t = get_t();

  // Make sure we have curl.
  $has_curl = function_exists('curl_init');
  $requirements['curl'] = array(
    'title' => $t('cURL'),
    'value' => $has_curl ? $t('Enabled') : $t('Not found'),
  );
  if (!$has_curl) {
    $requirements['curl']['severity'] = REQUIREMENT_ERROR;
    $requirements['curl']['description'] = $t("Eway requires the PHP <a href='!curl_url'>cURL</a> library.", array('!curl_url' => 'http://php.net/manual/en/curl.setup.php'));
  }

  // Make sure we have simplexml.
  $has_simplexml = function_exists('simplexml_load_string');
  $requirements['simplexml'] = array(
    'title' => $t('SimpleXML'),
    'value' => $has_simplexml ? $t('Enabled') : $t('Not found'),
  );
  if (!$has_simplexml) {
    $requirements['simplexml']['severity'] = REQUIREMENT_ERROR;
    $requirements['simplexml']['description'] = $t("Eway requires the SimpleXML library.");
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function uc_eway_uninstall() {
  variable_del('uc_eway_customer_id');
  variable_del('uc_eway_email_address');
  variable_del('uc_eway_password');
  variable_del('uc_eway_mode');
  variable_del('uc_eway_change_order_status');
  variable_del('uc_eway_show_fail_message');
  variable_del('uc_eway_logo');
  variable_del('uc_eway_recurring_enabled');
  variable_del('uc_eway_recurring_nusoap_path');
  variable_del('uc_eway_test_mode');
  variable_del('uc_eway_test_approve_anyway');
  variable_del('uc_eway_block_powered_by_size');
  variable_del('uc_eway_block_powered_by_colour');
  variable_del('uc_pg_eway_cc_txn_type');
}

/**
 * Implements hook_update_N().
 */
function uc_eway_update_6100() {
  // Migrate eway_customer_id variable
  variable_set('uc_eway_customer_id', variable_get('eway_customer_id', UC_EWAY_CUSTOMER_ID_DEFAULT));
  variable_del('eway_customer_id');

  // Convert the mode and the cvn variables to the new mode and testing variables
  if (variable_get('eway_mode', UC_EWAY_MODE_DEFAULT) == 'test') {
    variable_set('uc_eway_test_mode', 1);
  }
  variable_set('uc_eway_mode', (variable_get('eway_cvn', 'yes') == 'yes') ? 'cvn_xml' : 'merchant_xml');
  variable_del('eway_mode');
  variable_del('eway_cvn');

  // Migrate the change_order_status variable
  variable_set('uc_eway_change_order_status', variable_get('change_order_status', UC_EWAY_CHANGE_ORDER_STATUS_DEFAULT));
  variable_del('change_order_status');

  // Migrate the eway_logo variable
  variable_set('uc_eway_logo', variable_get('eway_logo', UC_EWAY_LOGO_DEFAULT));
  variable_del('eway_logo');

  // Migrate the test_approve_anyway variable
  variable_set('uc_eway_test_approve_anyway', variable_get('test_approve_anyway', UC_EWAY_TEST_APPROVE_ANYWAY_DEFAULT));
  variable_del('test_approve_anyway');

  return t('Updated variables to new variable definitions');
}

/**
 * Set the default recurring method to rebill for anyone upgrading.
 */
function uc_eway_update_6201() {
  // If there is no recurring do nothing.
  if (!db_table_exists('uc_recurring_users')) {
    return;
  }

  variable_set('uc_eway_recurring_method', 'eway_rebill');

  db_update('uc_recurring_users')
  ->fields(array(
    'fee_handler' => 'eway_rebill',
  ))
  ->condition('fee_handler', 'eway')
  ->execute();

  return t('Set the default eway recurring method to rebill for anyone upgrading');
}

/**
 * Set the default recurring method back to eway as there is only one
 * recurring payment system again (eWAY token payments).
 */
function uc_eway_update_6202() {
  variable_del('uc_eway_recurring_method');

  // If there is no recurring do nothing else.
  if (!db_table_exists('uc_recurring_users')) {
    return;
  }

  db_update('uc_recurring_users')
  ->fields(array(
    'fee_handler' => 'eway',
  ))
  ->condition('fee_handler', array('eway_rebill', 'eway_token'), 'IN')
  ->execute();


  return t('Set the default recurring method back to eway as there is only one recurring payment system again (eWAY token payments).');
}

/**
 * Update from drupal 6 to 7.
 *
 * Update hard coded numeric block deltas.
 */
function uc_eway_update_7000(&$sandbox) {
  // Update block deltas.
  $renamed_deltas = array(
    'uc_eway' => array(
      '0' => 'eway_powered',
    ),
  );
  update_fix_d7_block_deltas($sandbox, $renamed_deltas);
}
