<?php
/**
 * @file
 * Create (manually or scheduled) and restore backups of your Drupal MySQL
 * database using the Rackspace CLoudfiles service
 */

/**
 * Implementation of hook_backup_migrate_destination_types().
 */
function backup_migrate_opencloud_backup_migrate_destination_types() {
  return array(
    'opencloud' => array(
      'description' => t('Save the backup files to an OpenCloud server.'),
      'file' => drupal_get_path('module', 'backup_migrate_opencloud') . '/destinations.opencloud.inc',
      'class' => 'backup_migrate_destination_opencloud',
      'type_name' => 'OpenCloud',
      'can_create' => TRUE,
    ),
  );
}

/**
 * Implements hook_libraries_info
 */
function backup_migrate_opencloud_libraries_info() {
  $libs = array();

  $libs['php-opencloud'] = array(
    'name' => 'PHP SDK for OpenStack/Rackspace APIs',
    'vendor url' => 'https://github.com/rackspace/php-opencloud',
    'download url' => 'https://github.com/rackspace/php-opencloud',
    'version arguments' => array(
      'file' => 'README.md',
      'pattern' => '/\*\*(php-opencloud)\*\*/',
    ),
    'files' => array(
      'php' => array('lib/php-opencloud.php'),
    ),
  );

  return $libs;
}

/**
 * Generates a watchdog log entry during debugging; when debugging is disabled, nothing happens.
 * 
 * Set the config variable backup_migrate_opencloud_debug = TRUE to generate log output
 */
function _backup_migrate_opencloud_dbg($msg, $vars = array(), $severity = WATCHDOG_DEBUG, $link = NULL) {
  if (variable_get('backup_migrate_opencloud_debug', FALSE)) {
    watchdog('backup_migrate_opencloud', (is_array($msg) || is_object($msg)) ? '<pre>' . print_r($msg, TRUE) . '</pre>' : $msg, $vars, $severity, $link);
    if (function_exists('dpm')) {
      dpm((is_array($msg) || is_object($msg)) ? $msg : t($msg, $vars));
    }
  }
}

/**
 * Generates a watchdog log entry during execution of module
 */
function _backup_migrate_opencloud_log($msg, $vars = array(), $severity = WATCHDOG_INFO, $link = NULL) {
  // Catch passed-in objects or arrays and dump them accordingly
  if (is_array($msg) || is_object($msg)) {
    $msg = print_r($msg, TRUE);
  }
  watchdog('backup_migrate_opencloud', $msg, $vars, $severity, $link);
}
