<?php
/**
 * @file
 * Allows full searching of all user profile fields for Drupal 7
 *
 * @author Muhammad Qandeel Aslam <me@qandeelaslam.com>
 */


/**
 * Implements hook_help().
 */
function profileplus_help($path, $arg) {
  switch ($path) {
    case 'admin/modules#description':
      return t('Makes user profiles searchable');
  }
}


/**
 * Implements hook_permission().
 */
function profileplus_permission() {
  return array(
    'search user profiles' => array(
      'title' => t('Search User Profile Fields'),
      'description' => t('Allow users to search keywords in user profile fields.'),
    ),
  );
}


/**
 * Implements hook_search_info().
 *
 * @see hook_search_info()
 */
function profileplus_search_info() {
  return array(
    'title' => 'User Profiles',
  );
}


/**
 * Implements hook_search_access().
 */
function profileplus_search_access() {
  return user_access('search user profiles');
}


/**
 * Implements hook_search_execute().
 *
 * @see hook_search_execute()
 */
function profileplus_search_execute($keys = NULL, $conditions = NULL) {

  $find = array();
  // Replace wildcards with MySQL/PostgreSQL wildcards.
  $keys = preg_replace('!\*+!', '%', $keys);

  $query = db_select('users', 'u')->extend('PagerDefault')->limit(15);
  $query->distinct();
  $query->fields('u', array('uid'));
  $query->join('profile_value', 'pv', 'pv.uid = u.uid');
  $query->join('profile_field', 'pf', 'pv.fid = pf.fid');

  if (user_access('administer users')) {
    // Administrators can also search in the otherwise private email field.
    $query->condition(db_or()->
      condition('u.name', '%' . db_like($keys) . '%', 'LIKE')->
      condition('u.mail', '%' . db_like($keys) . '%', 'LIKE')->
      condition('pv.value', '%' . db_like($keys) . '%', 'LIKE'));
  }
  else {
    $query->condition(db_or()->
      condition('u.name', '%' . db_like($keys) . '%', 'LIKE')->
      condition('pv.value', '%' . db_like($keys) . '%', 'LIKE'));
  }

  $uids = $query
    ->execute()
    ->fetchcol();
  $accounts = user_load_multiple($uids);

  $results = array();
  foreach ($accounts as $account) {
    // create the profile fields array
    // Show private fields to administrators and people viewing their own account.
    if (user_access('administer users') || $GLOBALS['user']->uid == $account->uid) {
      $result = db_query('SELECT * FROM {profile_field} WHERE visibility <> :vis ORDER BY category, weight', array(':vis' => PROFILE_HIDDEN));
    }
    else {
      if (module_exists('profile_privacy')) {  //GMM: honor profile_privacy user settings and display only public fields
        $result = db_query('SELECT * FROM {profile_field} pf LEFT OUTER JOIN profile_privacy_values ppv ON ppv.uid = :uid AND ppv.fid = pf.fid WHERE pf.visibility <> :visp AND pf.visibility <> :vish AND (ppv.private IS NULL OR ppv.private = :pri) ORDER BY category, weight', array(':uid' => $user->uid, ':visp' => PROFILE_PRIVATE, ':vish' => PROFILE_HIDDEN, ':pri' => 0));
      }
      else {
        $result = db_query('SELECT * FROM {profile_field} WHERE visibility <> :visp AND visibility <> :vish ORDER BY category, weight', array(':visp' => PROFILE_PRIVATE, ':vish' => PROFILE_HIDDEN));
      }
    }

    $profile_fields = array();
    foreach ($result as $field) {
      if ($value = profile_view_field($account, $field)) {
        $title = ($field->type != 'checkbox') ? check_plain($field->title) : NULL;
        $item = array(
          'title' => $title,
          'value' => $value,
          'class' => $field->name,
        );
        $profile_fields[$field->category][$field->name] = $item;
      }
    }

    $entry = array();
    foreach ($profile_fields as $category => $fields) {
      foreach ($fields as $field) {
        $entry[] = $field['value'];
      }
      $view = implode(' | ', $entry);
    }

    $result = array(
      'title' => format_username($account),
      'link' => url('user/' . $account->uid, array('absolute' => TRUE)),
    );

    if (user_access('administer users')) {
      $result['title'] .= ' (' . $account->mail . ')';
    }
    if ($account->picture->uri) {
      $result['extra'] = file_create_url($account->picture->uri);
    }
    else {
      $result['extra'] = file_create_url(variable_get('user_picture_default'));
    }
    $result['snippet'] = search_excerpt($keys, $view);
    $results[] = $result;
  }

  return $results;
}