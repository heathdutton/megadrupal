<?php
/**
 * @file
 * Install, uninstall and update the Services Log module.
 */

/**
 * Implementation of hook_schema().
 */
function services_log_schema() {
  $schema = array();

  $schema['services_log'] = array(
    'description' => 'Stores logs for services',
    'fields' => array(
      'entry_id' => array(
        'type'        => 'serial',
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ),
      'http_status' => array(
        'description' => 'numeric http status code',
        'type'        => 'int',
        'not null'    => TRUE,
      ),
      'http_reason_phrase' => array(
        'description' => 'human-readable explanation of the http status code',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
      ),
      'http_method' => array(
        'description' => 'http method used to make this request',
        'type' => 'text',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'endpoint_name' => array(
        'description' => 'machine name of the active endpoint',
        'type'        => 'text',
        'size'        => 'small',
        'not null'    => TRUE,
      ),
      'http_headers' => array(
        'description' => 'http headers, as a serialized php array',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'http_cookies' => array(
        'description' => 'http cookie data, as a serialized php array',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'http_payload' => array(
        'description' => 'http POST or PUT data',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'request_content_type' => array(
        'description' => 'content-type of request data',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
      ),
      'request_uri' => array(
        'description' => 'full uri hit by this api call',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'resource_args' => array(
        'description' => 'how the REST server interprets its arguments',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'resource_result' => array(
        'description' => 'what the REST server returned',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'resource_errors' => array(
        'description' => 'what errors the request produced, if any',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'resource_callback' => array(
        'description' => 'what callback the REST server used',
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "uid of the user who made the request",
      ),
      'hostname' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'hostname or ip address that made the request',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'unix timestamp when the request occurred',
      ),
      'timing' => array(
        'type' => 'text',
        'size' => 'small',
        'not null' => TRUE,
        'description' => "serialized array of timing of phases of the request",
      ),
    ),
    'primary key' => array('entry_id'),
  );

  return $schema;
}


/**
 * Implementation of hook_uninstall().
 */
function services_log_uninstall() {
  variable_del('services_log_max_entries');
  variable_del('services_log_enable');
  variable_del('services_log_sanitize');
  variable_del('services_log_page_size');
  variable_del('services_log_default_endpoint_callback');
}

/**
 * Update 7001 adds a separate db field for the HTTP reason phrase.
 */
function services_log_update_7001() {
  if (!db_field_exists('services_log', 'http_reason_phrase')) {
    $http_reason_phrase = array(
      'description' => 'human-readable explanation of the http status code',
      'type' => 'text',
      'size' => 'small',
      'not null' => TRUE,
      'initial' => '',
    );
    $reason_phrase_field['initial'] = '';
    db_add_field('services_log', 'http_reason_phrase', $http_reason_phrase);

    $select_query = db_select('services_log', 'sl');
    $select_result = $select_query
      ->fields('sl', array('entry_id', 'http_headers'))
      ->execute()
      ->fetchAllAssoc('entry_id');

    foreach ($select_result as $entry_id => $entry_data) {
      $headers = @unserialize($entry_data->http_headers);
      if (is_array($headers)) {
        list($http_status, $http_reason_phrase) = _services_log_get_http_status($headers);
        $update_query = db_update('services_log');
        $update_query
          ->condition('entry_id', $entry_id)
          ->fields(array('http_reason_phrase' => $http_reason_phrase))
          ->execute();
        unset($update_query);
      }
    }
  }
}

/**
 * Update 7002 updates the db schema to better deal with large responses
 */
function services_log_update_7002() {
  $schemata = services_log_schema();
  $slog_fields = $schemata['services_log']['fields'];
  $slog_fields['resource_result']['size'] = 'medium';
  db_change_field('services_log', 'resource_result', 'resource_result', $slog_fields['resource_result']);
  $slog_fields['http_payload']['size'] = 'medium';
  db_change_field('services_log', 'http_payload', 'http_payload', $slog_fields['http_payload']);
}


/**
 * Update 7003 updates the db schema to better deal with larger responses
 */
function services_log_update_7003() {
  $schemata = services_log_schema();
  $slog_fields = $schemata['services_log']['fields'];
  $slog_fields['resource_args']['size'] = 'big';
  db_change_field('services_log', 'resource_args', 'resource_args', $slog_fields['resource_args']);
  $slog_fields['resource_result']['size'] = 'big';
  db_change_field('services_log', 'resource_result', 'resource_result', $slog_fields['resource_result']);

  $slog_fields['request_uri']['size'] = 'normal';
  db_change_field('services_log', 'request_uri', 'request_uri', $slog_fields['request_uri']);
}

# vim: expandtab shiftwidth=2 shiftwidth=2 ft=php:
