<?php

/**
 * @file
 * Salvattore module install file.
 */

/**
 * Implements hook_install().
 */
function salvattore_install() {
  variable_set('salvattore_use_min_js','1');
  variable_set('salvattore_load_default_css','0');
}

/**
 * Implements hook_uninstall().
 */
function salvattore_uninstall() {
  variable_del('salvattore_use_min_js');
  variable_del('salvattore_load_default_css');
}

/**
 * Implements hook_requirements().
 *
 * Changes its status based on ability to locate JS library.
 * Changes its instructions based on Libraries API being enabled.
 */
function salvattore_requirements($phase) {
  $requirements = array();

  switch ($phase) {
    case 'runtime':

      /*
       * Test for conditions
       */

      // Test if Libraries module is being used.
      if (module_exists('libraries')) {
        $path = libraries_get_path('salvattore');
        $using_libraries = TRUE;
        $version = salvattore_get_version();
      }
      else {
        $using_libraries = FALSE;
      }

      /*
       * Generate status message and severity
       */

      // Salvattore / Libraries API installed and working correctly.
      // Do the Drupal happy dance!
      if ($path && $using_libraries) {
        $description = FALSE;
        $severity = REQUIREMENT_OK;
      }
      // Salvattore installed, but Libraries API not installed. Still acceptable, but nudge them.
      elseif ($path && !$using_libraries) {
        $description = t('Salvattore JS library is installed but you aren\'t using !libraries-api. You should use it.',
          array(
            '!libraries-api' => l(t('Libraries API'), 'http://drupal.org/project/libraries'),
          )
        );
        $severity = REQUIREMENT_WARNING;
      }
      // Salvattore not installed, Libraries API is installed.
      // Supply instructions recommending Libraries module.
      elseif (!$path && module_exists('libraries')) {
        $description = t('Salvattore JS library cannot be found. Download it from !salvattore-site, copy it into !path and rename it to salvattore.min.js.',
          array(
            '!salvattore-site' => l(t('salvattore.com'), 'http://salvattore.com/'),
            // !path has a hardcoded default because the libraries_get_path() function might not return
            // the correct path when conditions lead to this block of code being executed
            '!path' => 'sites/all/libraries/salvattore/dist',
          )
        );
        $severity = REQUIREMENT_ERROR;
      }
      // Salvattore not installed, Libraries API not installed.
      // Supply generic instructions
      else {
        $description = t('Salvattore and Libraries API cannot be found. Download Salvattore from !salvattore-site, copy it into !path and rename it to salvattore.min.js. You should also use the !libraries-api by installing from drupal.org.',
          array(
            '!salvattore-site' => l(t('salvattore.com'), 'http://salvattore.com/download/'),
            '!path' => 'sites/all/libraries/salvattore/dist',
            '!libraries-api' => l(t('Libraries API'), 'http://drupal.org/project/libraries'),
          )
        );
        $severity = REQUIREMENT_ERROR;
      }

      /*
       * Declare requirement to Drupal
       */
      $requirements[] = array(
        'title' => t('Salvattore'),
        'value' => $version ? $version : t('Not installed'),
        'description' => $description,
        'severity' => $severity,
      );
      break;
  }

  return $requirements;
}

