<?php
/**
 * @file
 * Module functions for pictaculous.
 */

/**
 * Returns pictaculous API class.
 *
 * @return object
 *   Return initiated pictaculous class object.
 */
function pictaculous_client() {
  module_load_include('inc', 'pictaculous', 'includes/pictaculous.class');
  return drupal_static(__FUNCTION__, new Pictaculous(variable_get('pictaculous_api_url')));
}

/*
 * Admin form for Pictaculous API.
 */
function pictaculous_admin() {
  $form = array();

  // $form['pictaculous_api_version'] = array(
  //     '#type' => 'select',
  //     '#title' => t('Pictaculous API Version'),
  //     '#description' => t('The current Pictaculous API version, in case this changes in the future.'),
  //     '#default_value' => variable_get('pictaculous_api_version'),
  //     '#required' => TRUE,
  //     '#disabled' => TRUE,
  //     '#options' => array(
  //         '1.0',
  //     ),
  // );

  $form['pictaculous'] = array(
    '#type' => 'managed_file',
    '#name' => 'pictaculous_image',
    '#title' => t('Pictaculous Image'),
    '#default_value' => variable_get('pictaculous', ''),
    '#description' => t("Upload an image to be processed."),
    '#required' => FALSE,
    '#upload_location' => 'public://pictaculous/'
  );

  // Demo information and content.
  $form['pictaculous_demo'] = array(
    '#type' => 'fieldset',
    '#weight' => 4,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['pictaculous_demo']['pictaculous_demo'] = array(
    '#markup' => theme('pictaculous_demo', array('object' => variable_get('pictaculous_object', NULL))),
  );

  $form['#submit'][] = 'pictaculous_form_submit';

  return system_settings_form($form);
}

/*
 * Submit form handler for saving images.
 */
function pictaculous_form_submit($form, $form_state) {

  // Check if file exists.
  if ($form['pictaculous']['#value']['fid'] > 0) {

    // Check to see if this file has already been processed.
    $pictaculous_object = variable_get('pictaculous_object', NULL);
    if (!empty($pictaculous_object['fid']) && $form['pictaculous']['#value']['fid'] == $pictaculous_object['fid']) {
      return;
    }

    // Set file to permanent, save file.
    $form['pictaculous']['#file']->status = FILE_STATUS_PERMANENT;
    file_save($form['pictaculous']['#file']);

    // Add file usage for later referencing.
    file_usage_add($form['pictaculous']['#file'], 'pictaculous', 'module', $form['pictaculous']['#file']->fid);
    $file_path = drupal_http_request(file_create_url($form['pictaculous']['#file']->uri));

    // Setup data array for Pictaculous call.
    $data =  array(
      'image' => $file_path->data,
    );

    // Call Pictaculous API on image.
    $pictaculous = pictaculous_client()->api($data);

    // Convert object to array for saving to variable.
    $pictaculous_arr = get_object_vars($pictaculous);

    // Assign returned data FID/Title to reduce API calls for same image.
    $pictaculous_arr['fid'] = $form['pictaculous']['#file']->fid;
    $pictaculous_arr['title'] = $form['pictaculous']['#file']->filename;
    variable_set('pictaculous_object', $pictaculous_arr);

  } else {
    variable_set('pictaculous_object', NULL);
  }
}

/*
 * Implements hook_menu().
 */
function pictaculous_menu() {

  $items = array();

  $items['admin/config/media/pictaculous'] = array(
    'title' => 'Pictaculous',
    'description' => 'Generate color palette based on image.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pictaculous_admin'),
    'access arguments' => array('administer pictaculous settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function pictaculous_permission() {
  return array(
    'administer pictaculous settings' => array(
      'title' => t('Administer pictaculous module'),
      'description' => t('Update settings for the Pictaculous module.'),
    ),
  );
}

/**
 * Implementation of hook_theme().
 */
function pictaculous_theme($existing, $type, $theme, $path) {
  return array(
    'pictaculous_demo' => array(
      'variables' => array('object' => NULL),
      'template' => 'templates/pictaculous-demo',
    ),
  );
}
