<?php

/**
 * @defgroup baseperf_ctools Baseperf ctools plugin type.
 * @{
 */

/**
 * Implements hook_ctools_plugin_type().
 */
function baseperf_ctools_plugin_type() {
  $plugins['test'] = array(
    'use hooks' => FALSE,
    'defaults' => array(
      'description' => '',
    ),
  );
  return $plugins;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function baseperf_ctools_plugin_directory($module, $plugin) {
  if (($module == 'baseperf') && ($plugin == 'test')) {
    return 'plugins/baseperf';
  }
}

/**
 * Returns instance of a test plugin.
 */
function baseperf_get_test_instance($plugin) {
  if (is_string($plugin)) {
    ctools_include('plugins');
    $plugin = ctools_get_plugins('baseperf', 'test', $plugin);
  }
  $class = ctools_plugin_get_class($plugin, 'handler');
  $instance = new $class($plugin);
  if (!is_subclass_of($instance, 'BasePerf')) {
    trigger_error('Baseline Performace test plugins must inherit Baseperf class.');
  }

  return $instance;
}

/**
 * @} End of "defgroup baseperf_ctools".
 */

/**
 * @defgroup baseperf_drupal_hooks Baseperf Drupal hooks.
 * @{
 */

/**
 * Implements hook_permission().
 */
function baseperf_permission() {
  $perms = array();
  $perms['access baseperf'] = array(
    'title' => t('Can access baseperf pages'),
    'description' => t('User can access Baseline Performance pages and run performance tests.'),
  );
  return $perms;
}

/**
 * Implements hook_menu().
 */
function baseperf_menu() {
  $items = array();
  $items['admin/config/development/baseperf'] = array(
    'title' => 'Baseline Performance',
    'description' => 'Run baseline performance tests.',
    'page callback' => 'baseperf_page',
    'access arguments' => array('access baseperf'),
  );
  return $items;
}

/**
 * Implements hook_forms().
 */
function baseperf_forms() {
  $forms = array();
  ctools_include('plugins');
  $plugins = ctools_get_plugins('baseperf', 'test');
  foreach ($plugins as $id => $plugin) {
    $forms['baseperf_' . $id . '_test_form']['callback'] = 'baseperf_test_form';
  }
  return $forms;
}

/**
 * @} End of "defgroup baseperf_drupal_hooks".
 */

/**
 * @defgroup baseperf_ui Baseperf user interface.
 * @{
 */

/**
 * Menu callback for admin/config/development/baseperf.
 *
 * @see https://drupal.org/node/857124
 */
function baseperf_page() {
  $build['tests'] = array(
    '#type' => 'vertical_tabs',
    '#theme_wrappers' => array('vertical_tabs'),
    '#attached' => array(
      'js' => array(
        'misc/form.js',
        'misc/collapse.js',
        'misc/vertical-tabs.js',
      ),
      'css' => array(
        'misc/vertical-tabs.css',
      ),
    ),
  );

  ctools_include('plugins');
  $plugins = ctools_get_plugins('baseperf', 'test');
  foreach ($plugins as $id => $plugin) {
    $build['tests'][$id] = array(
      '#type' => 'fieldset',
      '#group' => 'tests',
      '#title' => $plugin['label'],
      '#attributes' => array(
        'class' => array('tabs', 'collapsible', 'collapsed'),
      ),
      'content' => drupal_get_form('baseperf_' . $id . '_test_form', $plugin),
    );
  }

  return $build;
}

/**
 * Form builder for baseperf tests.
 */
function baseperf_test_form($form, &$form_state, $plugin) {
  $form = array();

  $test = baseperf_get_test_instance($plugin);
  if (!$test) {
    $form['message'] = array(
      '#markup' => t('Plugin not available.'),
    );
    return $form;
  }
  if ($requirements = $test->requirements()) {
    $form['requirements'] = array(
      '#markup' => theme('status_report', array('requirements' => $requirements)),
    );
    return $form;
  }

  $form['#plugin-instance'] = $test;

  $form['description'] = array(
    '#markup' => $test->getDescription(),
  );

  $form[$test->getName()] = $test->configForm() + array('#tree' => TRUE);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Run !test test', array('!test' => $test->getName())),
  );

  return $form;
}

/**
 * Form validation handler for baseperf tests.
 */
function baseperf_test_form_validate($form, &$form_state) {
  $test = $form['#plugin-instance'];
  $name = $test->getName();
  $test->configFormValidate($form[$name], $form_state['values'][$name]);
}

/**
 * Form submission handler for baseperf tests.
 */
function baseperf_test_form_submit($form, &$form_state) {
  $test = $form['#plugin-instance'];
  $name = $test->getName();
  $test->configFormSubmit($form[$name], $form_state['values'][$name]);

  list($time, $memory_t0, $memory_t1, $memory_peak) = $test->getResults();

  drupal_set_message(t('Test run: <strong>@name</strong>.', array('@name' => $name)));
  drupal_set_message(t('Execution time: <strong>@time</strong> ms.', array('@time' => $time)));
  $args = array('@memory_t0' => round($memory_t0 / 1024 / 1024, 2), '@memory_t1' => round($memory_t1 / 1024 / 1024, 2), '@memory_peak' => round($memory_peak / 1024 / 1024, 2));
  drupal_set_message(t('Memory usage: Before: <strong>@memory_t0</strong> MB; After: <strong>@memory_t1</strong> MB; PHP peak=<strong>@memory_peak</strong> MB. </span>', $args));
}

/**
 * @} End of "defgroup baseperf_ui".
 */
