<?php
/**
 * @file
 * Install, update and uninstall functions for the millennium module.
 *
 */


/**
 * Implements hook_schema().
 */
function millennium_auth_schema() {
  $schema['millennium_auth_users'] = array(
    'description' => t('TODO'),
    'fields' => array(
      'uid' => array(
        'description' => t('Drupal user id'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'lastname' => array(
        'description' => t('User last name, if needed by WebOPAC'),
        'type' => 'char',
        'length' => 50,
        'not null' => FALSE,
      ),
      'name' => array(
        'description' => t('The user name. Initially this is the same as the Drupal username'),
        'type' => 'char',
        'length' => 50,
        'not null' => FALSE,
      ),
      'pin' => array(
        'description' => t('PIN number'),
        'type' => 'char',
        'length' => 50,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );

  return $schema;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function millennium_auth_uninstall() {
  variable_del('millennium_auth_default_base_url');
  variable_del('millennium_auth_use_https');
  variable_del('millennium_auth_id_message');
  variable_del('millennium_auth_pin_message');
}

/**
 * Encrypt stored PINs
 */
function millennium_auth_update_6001() {
  $result = db_query("SELECT * FROM {millennium_auth_users}");
  foreach ($result as $data) {
    $newpin = _millennium_auth_encrypt($data->pin);
    $newlastame = _millennium_auth_encrypt($data->lastname);
    db_update('millennium_auth_users')
    ->fields(array(
      'pin' => $newpin,
      'lastname' => $newlastame,
    ))
    ->condition('uid', $data->uid)
    ->execute();
  }
}
