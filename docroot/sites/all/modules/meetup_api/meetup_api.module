<?php
define('MUAPILOC', libraries_get_path('meetup_api'));
define('MUAPIKEY', variable_get('meetup_api_key', ''));
define('MUAPIKEYNOTSET', t('You have not entered your Meetup API key. Click <a href="!mus">here</a> to enter it. You will not be able to use any modules requiring the Meetup API until you do so.', array('!mus' => url('admin/config/system/meetup_api'))));
define('MUAPIMETHODS', serialize(array('base', 'groups', 'members', 'comments', 'events', 'profilesv2', 'rsvps')));

/**
 * meetup_api_init
 * Implementation of hook_init().
 */
function meetup_api_init() {
  //Warn if API key not set (and we're not on the Meetup API page itself)
  if (arg(0) == 'admin' && (arg(1) != 'settings' || arg(2) != 'meetup_api')) {
    _meetup_api_key_complain();
  }
  //Load the wrapper files (actual calls to the functions will load the relevant API classes)
  foreach (unserialize(MUAPIMETHODS) as $method) {
    module_load_include('inc', 'meetup_api', "includes/meetup_api.$method");
  }
}

function _meetup_api_key_complain() {
  if (MUAPIKEY == '' && !variable_get('meetup_api_key_nowarn', FALSE)) {
    drupal_set_message(MUAPIKEYNOTSET, 'error');
  }
}

/**
 * meetup_api_requirements
 * Implementation of hook_requirements().
 */
function meetup_api_requirements($phase) {
  $requirements = array();
  
  switch ($phase) {
    case 'runtime':
      // Check cURL library.
      if (function_exists('curl_init')) {
        // Use "curl_" (not "curl") because simpletest module provides "curl" also.
        $requirements['curl_']['severity'] = REQUIREMENT_OK;
        $info = curl_version();
        // libcurlemu provides libraries that implement curl_version() as a function that returns version string.
        $requirements['curl_']['value'] = is_array($info) ? $info['version'] : $info;
      }
      else {
        $requirements['curl_'] = array(
          'value' => t('Not installed'),
          'severity' => REQUIREMENT_ERROR,
          'description' => t('The cURL library for PHP is missing or outdated. Please check the <a href="@url">PHP cURL documentation</a> for information on how to correct this.', array('@url' => 'http://www.php.net/manual/en/ref.curl.php')),
        );
      }
      $requirements['curl_']['title'] = t('cURL library');

      if (!file_exists(MUAPILOC)) {
        $requirements['meetup api client'] = array(
          'title' => t('Meetup API Client Library'),
          //@todo: using target="_blank" here isn't cool. I guess I should use Javascript to do it, but it's not the Admin area needs to validate exactly. Still, if someone wants to fix this...go for it.
          'description' => t('The Meetup API PHP client libraries have not been installed. You can download them from !muapi_url. Unpack them into the %directory directory.', 
                              array(
                                '!muapi_url' => l(t('here'), 'http://github.com/wizonesolutions/meetup_api/downloads', array('attributes' => array('target' => '_blank'))),
                                '%directory' => MUAPILOC
                              )),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      break;
  }
  return $requirements;
}

/**
 * meetup_api_menu
 * Implementation of hook_menu().
 */
function meetup_api_menu() {
  $items['admin/config/system/meetup_api'] = array(
    'title' => 'Meetup API Settings',
    'type' => MENU_NORMAL_ITEM,
    'description' => 'Configure settings necessary to access the Meetup API.',
    'access arguments' => array('administer meetup api'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('meetup_api_settings'),
  );
  return $items;
}

function meetup_api_settings($form, &$form_state) {
  //Only show the message once
  if (empty($form_state['post'])) {
    _meetup_api_key_complain();
  }
  $form['meetup_api_key'] = array(
    '#title' => t('API key'),
    '#description' => t('Enter your Meetup API key. Click <a href="@api_key_url">here</a> to find it.', array('@api_key_url' => 'http://www.meetup.com/account/oauth_apps/')),
    '#type' => 'textfield',
    '#default_value' => variable_get('meetup_api_key', ''),
  );
  $form['meetup_api_key_nowarn'] = array(
    '#title' => t('Suppress warning'),
    '#description' => t("Check this box to hide the warning when your API key is not set. Maybe useful in some cases? Well, the option's there at least if you want to use it."),
    '#type' => 'checkbox',
    '#default_value' => variable_get('meetup_api_key_nowarn', ''),
  );
  return system_settings_form($form);
}

/**
 * _meetup_api_error
 * Return a standardized array containing error information.
 * @param mixed $error_message
 */
function _meetup_api_error($error_message) {
  return array('#success' => FALSE, '#error' => $error_message);
}

/**
 * meetup_api_perm
 * Implementation of hook_permission().
 */
function meetup_api_permission() {
  return array(
    'administer meetup api' => array(
      'title' => 'Administer Meetup API',
      'description' => 'Configure settings for using the Meetup API.'
    ), 
    'use meetup api' => array(
      'title' => 'Use Meetup API',
      'description' => 'Use the Meetup API.'
    ),
  );
}

