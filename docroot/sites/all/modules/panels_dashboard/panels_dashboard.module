<?php

/*
 * @file
 * Module file. Allows users to locally rearrange and roll up panes on the panel and save state per account
 */

/**
 * Implementation of hook menu
 */
function panels_dashboard_menu() {
  $items['js/panels-dashboard/set/%'] = array(
    'page callback' => 'panels_dashboard_set_data',
    'page arguments' => array(3),
    'access arguments' => array('maintain dashboard'),
    'type' => MENU_CALLBACK,
  );
  $items['js/panels-dashboard/get/%'] = array(
    'page callback' => 'panels_dashboard_get_data',
    'page arguments' => array(3),
    'access arguments' => array('maintain dashboard'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_ctools_plugin_directory().
 */
function panels_dashboard_ctools_plugin_directory($module, $plugin) {
  if ($module == 'panels' && $plugin == 'display_renderers') {
    return 'plugins/' . $plugin;
  }
}


/**
 * Implementation of hook_ctools_plugin_api().
 */
function panels_dashboard_ctools_plugin_api($owner, $api) {
  if ($owner == 'panels' && $api == 'pipelines') {
    return array(
      'version' => 1,
      'path' => drupal_get_path('module', 'panels_dashboard') . '/includes',
    );
  }
}

/**
 * Implementation of hook_permission
 */
function panels_dashboard_permission() {
  return array(
    'maintain dashboard' => array(
      'title' => t('Maintain Panels Dashboard'),
      'description' => t('Provide access to a customizable panels dashboard'),
    ),
  );
}

/**
 * Saves JSON data in database for certain user and display
 *
 * @global <type> $user
 * @param <type> $did
 */
function panels_dashboard_set_data($did) {
  global $user;

  if (user_is_logged_in() && $_POST['panels_dashboard_data']) {
    $data = new stdClass();
    $data->did = $did;
    $data->uid = $user->uid;
    $data->data = $_POST['panels_dashboard_data'];
    $data->pdlid = db_result(db_query("SELECT pdlid FROM {panels_dashboard_layouts} WHERE did=%d AND uid=%d", $did, $user->uid));

    drupal_write_record("panels_dashboard_layouts", $data, $data->pdlid?"pdlid":array());
    print drupal_json(array("status" => "success"));
  } else {
    print drupal_json(array("status" => "failure"));
  }

  exit;
}

/**
 * Retrieves data from user object
 *
 * @global <type> $user
 * @param <type> $did
 */
function panels_dashboard_get_data($did) {
  global $user;

  if (user_is_logged_in() && $data = db_result(db_query("SELECT data FROM {panels_dashboard_layouts} WHERE did=%d AND uid=%d", $did, $user->uid))) {
    print drupal_json(array("status" => "success", "data" => json_decode($data)));
  } else {
    print drupal_json(array("status" => "failure"));
  }

  exit;
}
