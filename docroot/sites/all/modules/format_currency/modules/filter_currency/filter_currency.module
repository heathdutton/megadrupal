<?php
/**
 * @file
 */

/**
 * Implements hook_filter_info().
 */
function filter_currency_filter_info() {
  $filters['filter_format_currency'] = array(
    'title' => t('Currency filter'),
    'description' => t('Substitutes [currency: PRICE, CURRENCYCODE] eg. [currency: 123.45, GBP] with a correctly formatted price.'),
    'process callback' => '_filter_currency_process_filter',
    'tips callback'  => '_filter_currency_filter_tips'
  );
  return $filters;
}

/**
 * Filter tips callback for filter_currency filter.
 */
function _filter_currency_filter_tips($filter, $format, $long = FALSE) {
  $output = t('Allows display of correctly formatted currency, use [currency: PRICE, CURRENCYCODE] eg. [currency: 123.45, GBP].');
  if (!$long) {
    return $output;
  }
  if (module_exists('currency_api')) {
    $output .= '<p>' . t('Optionally, to see how many GBP you will have from USD $100, use [currency: PRICE, CURRENCYCODE, BASECURRENCYCODE] eg. [currency: 100, GBP, USD].') . '</p>';
  }

  return $output;
}

/**
 * Helper function for input filter processing.
 */
function _filter_currency_process_filter($text) {
  if (preg_match_all("/\[\s*currency\s*:\s*(.+?)\s*,\s*(\w+)\s*,?\s*(\w*)\s*\]/i", $text, $matches)) {
    foreach ($matches[0] as $key => $match) {
      $text = str_replace($match, theme('format_currency', array('price' => $matches[1][$key], 'param' => $matches[2][$key], 'base' => $matches[3][$key])), $text);
    }
  }

  return $text;
}