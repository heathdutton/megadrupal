<?php

/**
 * @file
 * Module file for traceview_early module
 */

/**
 * Implements hook_boot().
 */
function traceview_early_boot() {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_oboe_log('drupal_hook_boot', 'entry', array());
  }
}

/**
 * Implements hook_init().
 */
function traceview_early_init() {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_oboe_log('drupal_hook_init', 'entry', array());
  }
}

/**
 * Implements hook_menu_site_status_alter().
 */
function traceview_early_menu_site_status_alter($page_callback_result, $read_only_path) {
  if (variable_get('traceview_layers', FALSE)) {
    $router_item = menu_get_item($read_only_path);
    $callback_function = $router_item['page_callback'];
    traceview_early_page_callback(TRUE, $callback_function);
  }
}

/**
 * Implements hook_form_alter().
 *
 * @param array $form
 * @param array $form_state
 * @param string $form_id
 */
function traceview_early_form_alter(&$form, &$form_state, $form_id) {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_oboe_log('drupal_hook_form_alter', 'entry', array('Form-ID' => $form_id));
  }
}

/**
 * Implements hook_views_pre_view().
 *
 * @param object $view
 * @param string $display_id
 * @param array $args
 */
function traceview_early_views_pre_view(&$view, &$display_id, &$args) {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_oboe_log('drupal_views', 'entry', array('View-Name' => $view->name, 'View-Display-ID' => $display_id));
  }
}

/**
 * Implements hook_panels_pre_render().
 *
 * @param object $display
 * @param object $renderer
 */
function traceview_early_panels_pre_render($display, $renderer) {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_oboe_log('drupal_panels', 'entry', array('Panel-Renderer' => $display->renderer, 'Panel-Layout' => $display->layout));
    if (variable_get('traceview_profile_panels', FALSE)) {
      traceview_oboe_log('drupal_panels', 'profile_entry', array('ProfileName' => 'pre_render'));
    }
  }
}

/**
 * Implements hook_panels_post_render().
 *
 * @param object $display
 * @param object $renderer
 */
function traceview_early_panels_post_render($display, $renderer) {
  if (variable_get('traceview_layers', FALSE) && variable_get('traceview_profile_panels', FALSE)) {
    traceview_oboe_log('drupal_panels', 'profile_entry', array('ProfileName' => 'post_render'));
  }
}

/**
 * Implements hook_views_pre_build().
 *
 * @param object $view
 */
function traceview_early_views_pre_build(&$view) {
  if (variable_get('traceview_layers', FALSE) && variable_get('traceview_profile_views', FALSE)) {
    traceview_oboe_log('drupal_views', 'profile_entry', array('ProfileName' => 'pre_build'));
  }
}

/**
 * Implements hook_views_post_build().
 *
 * @param object $view
 */
function traceview_early_views_post_build(&$view) {
  if (variable_get('traceview_layers', FALSE) && variable_get('traceview_profile_views', FALSE)) {
    traceview_oboe_log('drupal_views', 'profile_exit', array('ProfileName' => 'build'));
    traceview_oboe_log('drupal_views', 'profile_entry', array('ProfileName' => 'post_build'));
  }
}

/**
 * Implements hook_views_pre_execute().
 *
 * @param object $view
 */
function traceview_early_views_pre_execute(&$view) {
  if (variable_get('traceview_layers', FALSE) && variable_get('traceview_profile_views', FALSE)) {
    traceview_oboe_log('drupal_views', 'profile_entry', array('ProfileName' => 'pre_execute'));
  }
}

/**
 * Implements hook_views_post_execute().
 *
 * @param object $view
 */
function traceview_early_views_post_execute(&$view) {
  if (variable_get('traceview_layers', FALSE) && variable_get('traceview_profile_views', FALSE)) {
    traceview_oboe_log('drupal_views', 'profile_exit', array('ProfileName' => 'execute'));
    traceview_oboe_log('drupal_views', 'profile_entry', array('ProfileName' => 'post_execute'));
  }
}

/**
 * Implements hook_views_pre_render().
 *
 * @param object $view
 */
function traceview_early_views_pre_render(&$view) {
  if (variable_get('traceview_layers', FALSE) && variable_get('traceview_profile_views', FALSE)) {
    traceview_oboe_log('drupal_views', 'profile_entry', array('ProfileName' => 'pre_render'));
  }
}

/**
 * Implements hook_views_post_render().
 *
 * @param object $view
 * @param string $output
 * @param object $cache
 */
function traceview_early_views_post_render(&$view, &$output, &$cache) {
  if (variable_get('traceview_layers', FALSE) && variable_get('traceview_profile_views', FALSE)) {
    traceview_oboe_log('drupal_views', 'profile_exit', array('ProfileName' => 'render'));
    traceview_oboe_log('drupal_views', 'profile_entry', array('ProfileName' => 'post_render'));
  }
}

/**
 * Implements hook_node_load().
 *
 * @param object $nodes
 * @param array $types
 */
function traceview_early_node_load($nodes, $types) {
  if (variable_get('traceview_layers', FALSE)) {
    $nids = array();
    foreach($nodes as $node) {
      $nids[] = $node->nid;
    }
    traceview_oboe_log('drupal_hook_node_load', 'entry', array('Node-NIDs' => implode(',', $nids), 'Node-Types' => implode(',', $types)));
  }
}

/**
 * Implements hook_watchdog().
 *
 * @param array $log_entry
 */
function traceview_early_watchdog($log_entry) {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_oboe_log('drupal_hook_watchdog', 'entry', array());
  }
}

/**
 * Implements hook_page_delivery_callback_alter().
 *
 * @param array $callback
 */
function traceview_early_page_delivery_callback_alter(&$callback) {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_early_page_callback(FALSE, $callback);
  }
}

/**
 * Implements hook_page_build().
 *
 * @param array $page
 */
function traceview_early_page_build(&$page) {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_early_page_callback(FALSE, 'drupal_render_page');
  }
}

/**
 * Implements hook_exit().
 */
function traceview_early_exit() {
  if (variable_get('traceview_layers', FALSE)) {
    traceview_early_page_callback(FALSE, 'none');
    traceview_oboe_log('drupal_hook_exit', 'entry', array());
  }
}

/**
 * Helper function to register entry/exit of the drupal_page_callback layer.
 *
 * @param bool $entry
 */
function traceview_early_page_callback($entry = TRUE, $callback_function = NULL) {
  static $menu_layer_active = FALSE;

  if ($menu_layer_active == FALSE && $entry) {
    traceview_oboe_log('drupal_page_callback', 'entry', array('Page-Callback' => $callback_function));
    $menu_layer_active = TRUE;
  }
  // In contrast to most other layers, we register the exit in traceview_early
  // because this exit is logged after the active handler returns.
  elseif ($menu_layer_active == TRUE) {
    traceview_oboe_log('drupal_page_callback', 'exit', array('Delivery-Callback' => $callback_function));
    $menu_layer_active = FALSE;
  }
}
