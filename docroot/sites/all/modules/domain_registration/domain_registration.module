<?php
/**
 * @file
 * Domain Registration module file.
 */

/**
 * Implements hook_menu().
 */
function domain_registration_menu() {
  $items['admin/config/system/domain_register'] = array(
    'title' => 'Domain registration',
    'description' => 'Set domains for registration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('domain_registration_admin_form'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Administration form for domain registration.
 */
function domain_registration_admin_form($form, &$form_state) {
  $options = array(
    0 => t('Allow only domains listed below to register'),
    1 => t('Prevent domains listed below from registering'),
  );
  $form['domain_registration_method'] = array(
    '#type' => 'radios',
    '#required' => TRUE,
    '#options' => $options,
    '#title' => t('Restriction Type'),
    '#default_value' => variable_get('domain_registration_method', 0),
    '#description' => t('Choose which method you would like the domains list to operate. Only allow domains listed to register, or prevent domains listed from registering.'),
  );
  $form['domain_registration'] = array(
    '#type' => 'textarea',
    '#required' => TRUE,
    '#title' => t('Email domains'),
    '#default_value' => variable_get('domain_registration'),
    '#description' => t('Enter the domains you wish to restrict registration. One entry per line in the format (e.g. something.com)'),
  );
  $form['domain_registration_message'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Error message'),
    '#default_value' => variable_get('domain_registration_message', t('You are not allowed to register for this site.')),
    '#description' => t('Enter the error message you want the user to see if the email address does not validate.'),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_form_form_id_form_alter().
 */
function domain_registration_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'domain_registration_user_register_validate';
}

/**
 * Custom validation function.
 * 
 * Checks if the domain in the email address is on a list of allowed domains.
 */
function domain_registration_user_register_validate(&$form, &$form_state) {
  $default_message = t('You are not allowed to register for an account on this site.');
  $mail = explode('@', $form_state['values']['mail']);
  $domains = variable_get('domain_registration', array());
  $domains = explode("\r\n", $domains);
  if (!empty($domains)) {
    switch (variable_get('domain_registration_method', 0)) {
      // Allow only domains listed to register.
      case 0:
        if (!in_array($mail[1], $domains)) {
          form_set_error('account', variable_get('domain_registration_message', $default_message));
        }
        break;

      // Prevent domains listed from registering.
      case 1:
        if (in_array($mail[1], $domains)) {
          form_set_error('account', variable_get('domain_registration_message', $default_message));
        }
        break;
    }
  }
}
