<?php

/**
 * @file
 * Contains test suite for cacheflush ui module.
 */

/**
 * Defines a test for cacheflush ui module CRUD access.
 */
class CacheFlushUICRUDAccessTest extends DrupalWebTestCase {

  /**
   * Profile to use.
   */
  protected $profile = 'testing';

  /**
   * User of test.
   */
  protected $testUser;

  /**
   * Modules to enable.
   *
   * @var array
   */
  public static $modules = array(
    'cacheflush_ui',
    'cacheflush',
    'cacheflush_entity',
    'entity',
  );

  /**
   * CRUD urls.
   *
   * @var array
   */
  protected $urls = array(
    'admin' => 'admin/structure/cacheflush',
    'new' => 'admin/structure/cacheflush/add',
    'clear' => 'admin/cacheflush/clear/',
    'view' => 'cacheflush/[ID]/view',
    'edit' => 'cacheflush/[ID]/edit',
    'delete' => 'cacheflush/[ID]/delete',
  );

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Cacheflush UI',
      'description' => 'Test cacheflush UI.',
      'group' => 'CacheFlush',
    );
  }

  /**
   * Sets up the test.
   */
  public function setUp() {
    parent::setUp('cacheflush_ui');

    $role1 = array(
      'cacheflush administer',
      'cacheflush clear any',
      'cacheflush create new',
      'cacheflush view any',
      'cacheflush edit any',
      'cacheflush delete any',
    );
    $this->admin_user = $this->drupalCreateUser($role1);

    $role2 = array(
      'cacheflush clear own',
      'cacheflush create new',
      'cacheflush view own',
      'cacheflush edit own',
      'cacheflush delete own',
    );
    $this->logged_user = $this->drupalCreateUser($role2);

    $this->anonymous_user = drupal_anonymous_user();
    $this->createTestEntitys();
  }

  /**
   * Test the access for user with no permissions.
   */
  public function testAccessAnonymous() {
    // Access to administration page.
    $this->cacheflushUrlAccess($this->urls['admin'], 403);
    // Access to new entity create.
    $this->cacheflushUrlAccess($this->urls['new'], 403);
    // Access to cache clear.
    $this->cacheflushUrlAccess($this->urls['clear'] . '1', 403);
    $this->cacheflushUrlAccess($this->urls['clear'] . '2', 403);
    // Access to CRUD.
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['view']), 403);
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['edit']), 403);
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['delete']), 403);
  }

  /**
   * Test the access for user with permissions for own content.
   */
  public function testAccessLogged() {

    $this->drupalLogin($this->logged_user);

    // Access to administration page.
    $this->cacheflushUrlAccess($this->urls['admin'], 403);
    // Access to new entity create.
    $this->cacheflushUrlAccess($this->urls['new'], 200);
    // Access to cache clear.
    $this->cacheflushUrlAccess($this->urls['clear'] . '1', 200);
    $this->cacheflushUrlAccess($this->urls['clear'] . '2', 403);
    // Access to CRUD for own entity.
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['view']), 200);
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['edit']), 200);
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['delete']), 200);
    // Access to CRUD for other user created entity.
    $this->cacheflushUrlAccess(str_replace("[ID]", 2, $this->urls['view']), 403);
    $this->cacheflushUrlAccess(str_replace("[ID]", 2, $this->urls['edit']), 403);
    $this->cacheflushUrlAccess(str_replace("[ID]", 2, $this->urls['delete']), 403);

    $this->drupalLogout();
  }

  /**
   * Test the access for user with permissions to all content (full CRUD).
   */
  public function testAccessAdmin() {

    $this->drupalLogin($this->admin_user);

    // Access to administration page.
    $this->cacheflushUrlAccess($this->urls['admin'], 200);
    // Access to new entity create.
    $this->cacheflushUrlAccess($this->urls['new'], 200);
    // Access to cache clear.
    $this->cacheflushUrlAccess($this->urls['clear'] . '1', 200);
    $this->cacheflushUrlAccess($this->urls['clear'] . '2', 200);
    // Access to CRUD for own entity.
    $this->cacheflushUrlAccess(str_replace("[ID]", 2, $this->urls['view']), 200);
    $this->cacheflushUrlAccess(str_replace("[ID]", 2, $this->urls['edit']), 200);
    $this->cacheflushUrlAccess(str_replace("[ID]", 2, $this->urls['delete']), 200);
    // Access to CRUD for other user created entity.
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['view']), 200);
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['edit']), 200);
    $this->cacheflushUrlAccess(str_replace("[ID]", 1, $this->urls['delete']), 200);

    $this->drupalLogout();
  }

  /**
   * Check access of URL.
   *
   * @param string $url
   *   URL to check access.
   * @param int $code
   *   HTTP response.
   */
  public function cacheflushUrlAccess($url, $code) {
    $this->drupalGet($url);
    $this->assertResponse($code);
  }

  /**
   * Create cacheflush test entities.
   */
  public function createTestEntitys() {
    $options = _cacheflush_get_option_list();

    $data = array();
    $data['cache']['functions'] = $options['cache']['functions'];
    $data['cache_menu']['functions'] = $options['cache_menu']['functions'];
    $data['css']['functions'] = $options['css']['functions'];
    $data = serialize($data);

    $entity = entity_create('cacheflush', array(
      'title' => 'LoggedUser',
      'status' => 1,
      'menu' => 1,
      'data' => $data,
      'uid' => $this->logged_user->uid,
        )
    );
    $entity->save();

    $entity = entity_create('cacheflush', array(
      'title' => 'AdminUser',
      'status' => 1,
      'menu' => 1,
      'data' => $data,
      'uid' => $this->admin_user->uid,
        )
    );
    $entity->save();

    // Clear menu cache to rebuild the Cacheflush clear menus.
    menu_rebuild();
  }

}
