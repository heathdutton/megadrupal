<?php

/**
 * @file
 * Integrates verge.js into drupal.
 */

define('VERGE_LIB_GIT_REPO', 'http://github.com/ryanve/verge');

/**
 * Implements hook_help().
 */
function verge_lib_help($path, $arg) {
  switch ($path) {
    case 'admin/help#verge_lib':
      // Return a line-break version of the module README.txt
      return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}

/**
 * Implements hook_libraries_info().
 *
 * Feed libraries array with verge.js.
 */
function verge_lib_libraries_info() {
  $libraries['verge'] = array(
    'name' => 'verge',
    'vendor url' => 'http://verge.airve.com/',
    'download url' => VERGE_LIB_GIT_REPO,
    'version arguments' => array(
      'file' => 'verge.min.js',
      'pattern' => '/verge (\d\.\d\.\d)/',
    ),
    'files' => array(
      'js' => array(
        'verge.min.js',
      ),
    ),
    'variants' => array(
      'source' => array(
        'files' => array(
          'js' => array(
            'verge.js',
          ),
        ),
      ),
    ),
  );
  return $libraries;
}

/**
 * Check if the verge library is installed.
 *
 * @return bool
 *   Boolean indicating the library's installed status.
 */
function verge_lib_installed() {
  if (($library = libraries_detect('verge')) && !empty($library['installed'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Check if the verge library has been loaded.
 *
 * @return bool
 *   Boolean indicating the library's loaded status.
 */
function verge_lib_loaded() {
  if (($library = libraries_load('verge')) && !empty($library['loaded'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}
