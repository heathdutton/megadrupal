<?php
/**
 * @file
 * Dream comments module.
 */

 /**
  * Implements hook_form_alter().
  */
function dream_comments_form_comment_form_alter(&$form, &$form_state) {
  global $user;
  $node = $form['#node'];

  // Fetch a rendered comment with placeholders.
  $comment_template = _dream_comments_render_placeholder_comment($node, $user);

  // Add class to form for javascript.
  if (!isset($form['#attributes']['class'])) {
    $form['#attributes']['class'] = array();
  }
  $form['#attributes']['class'][] = 'dream-comments--form';

  // Add template to output.
  $form['comment_template'] = array(
    '#type' => 'item',
    '#markup' => '<div class="dream-comments--template">' . $comment_template . '</div>',
  );

  // Attach our libraries.
  $form['#attached']['css'][] = drupal_get_path('module', 'dream_comments') . '/dream_comments.css';
  $form['#attached']['js'][] = drupal_get_path('module', 'dream_comments') . '/dream_comments.js';
};

/**
 * Render a comment with placeholders.
 */
function _dream_comments_render_placeholder_comment($node, $account = NULL) {
  global $language;
  $formats = filter_formats($account);

  // Add support for fields, multilingual.
  $comment = (object) array(
    'cid' => '{cid}',
    'nid' => $node->nid,
    'node_type' => $node->type,
    'pid' => 0,
    'new' => TRUE,
    'status' => COMMENT_PUBLISHED,
    'subject' => '{Subject}',
    'hostname' => ip_address(),
    'language' => $language->language,
    'comment_body' => array(
      LANGUAGE_NONE => array(
        0 => array(
          'value' => '{Body}',
          'format' => reset(array_keys($formats)),
        ),
      ),
    ),
    'node_type' => 'comment_node_' . $node->type,
    'created' => REQUEST_TIME,
  );

  if ($account && $account->uid) {
    $comment->uid = $account->uid;
    $comment->name = $account->name;
  }
  else {
    $comment->mail = '{Mail}';
    $comment->name = '{Name}';
  }

  $render = comment_view($comment, $node);
  $html = drupal_render($render);

  return $html;
}
