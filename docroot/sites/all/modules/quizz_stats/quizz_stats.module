<?php

use Drupal\quizz\Entity\QuizEntity;

/**
 * @file
 * Quiz stats
 *
 * Module creates a report to analyse and compare the results of quiz attendees.
 */

/**
 * Implements hook_help().
 */
function quizz_stats_help($path, $arg) {
  if ($path == 'admin/help#quizz_stats') {
    return '<p>' . t('Module creates a report to analyse and compare the results of quiz attendees. The reports will be displayed visually using goolge chart API.') . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function quizz_stats_permission() {
  $permission = array(
      'access user stats'   => array('title' => t('access user stats')),
      'access author stats' => array('title' => t('access author stats')),
  );
  return $permission;
}

/**
 * Implements hook_menu().
 */
function quizz_stats_menu() {
  $items['admin/quizz/reports/stats/creator'] = array(
      'title'            => 'Quiz Statistics',
      'description'      => 'Generates a report on quiz results for quiz creators.',
      'file'             => 'quizz_stats.admin.inc',
      'page callback'    => 'quizz_stats_get_basic_stats',
      'access arguments' => array('access author stats'),
      'type'             => MENU_NORMAL_ITEM,
  );
  $items['quiz/%quizz/statistics'] = array(
      'title'            => 'Statistics',
      'description'      => 'Generates a report on quiz results for quiz creators.',
      'file'             => 'quizz_stats.admin.inc',
      'page callback'    => 'quizz_stats_page',
      'page arguments'   => array(1),
      'access callback'  => 'quizz_type_confirm',
      'access arguments' => array(1, 'access user stats'),
      'type'             => MENU_LOCAL_TASK,
      'weight'           => 4,
  );
  $items['quiz/%quizz/statistics/%'] = array(
      'title'            => 'Statistics',
      'description'      => 'Generates a report on quiz results for quiz creators.',
      'file'             => 'quizz_stats.admin.inc',
      'page callback'    => 'quizz_stats_revision_page',
      'page arguments'   => array(3),
      'access callback'  => 'quizz_stats_validate_vid',
      'access arguments' => array(1, 3),
      'type'             => MENU_CALLBACK,
      'weight'           => 4,
  );
  $items['user/%/stats'] = array(
      'title'            => 'Result Statistics',
      'description'      => 'Generates a report on quiz results for quiz creators.',
      'file'             => 'quizz_stats.admin.inc',
      'page callback'    => 'quizz_stats_get_basic_stats',
      'page arguments'   => array(1),
      'access arguments' => array('access user stats'),
      'type'             => MENU_LOCAL_TASK,
  );
  $items['user/%/stats/%/view'] = array(
      'title'            => 'Result Statistics',
      'file'             => 'quizz_stats.admin.inc',
      'page callback'    => 'quizz_stats_get_adv_stats',
      'page arguments'   => array(3, 1),
      'access arguments' => array('access user stats'),
      'type'             => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function quizz_stats_theme() {
  $path = drupal_get_path('module', 'quizz_stats') . '/theme';
  return array(
      'quizz_stats_get_basic_stats'   => array(
          'variables' => array('results' => NULL),
          'file'      => 'quizz_stats.admin.inc',
      ),
      'date_vs_takeup_count'         => array(
          'variables' => array('takeup' => NULL),
          'file'      => 'quizz_stats.admin.inc',
      ),
      'get_quiz_status_chart'        => array(
          'variables' => array('quiz' => NULL),
          'file'      => 'quizz_stats.admin.inc',
      ),
      'quiz_top_scorers'             => array(
          'variables' => array('scorer' => NULL),
          'file'      => 'quizz_stats.admin.inc',
      ),
      'quiz_grade_range'             => array(
          'variables' => array('range' => NULL),
          'file'      => 'quizz_stats.admin.inc',
      ),
      'quizz_stats_revision_selector' => array(
          'variables' => array('content' => NULL),
          'path'      => $path,
          'template'  => 'quizz_stats_revision_selector',
      ),
      'quizz_stats_charts'            => array(
          'variables' => array('charts' => NULL),
          'path'      => $path,
          'template'  => 'quizz_stats_charts',
      ),
  );
}

/**
 * Validate that a node is of type quiz, and that the user has access to it, and
 * that the vid is a vid of that quiz.
 *
 * @param QuizEntity $quiz
 * @param int $quiz_vid
 * @return bool
 *  TRUE if user has access
 */
function quizz_stats_validate_vid(QuizEntity $quiz, $quiz_vid) {
  if (!user_access('access author stats')) {
    return FALSE;
  }

  if (!$revision = quizz_load(NULL, $quiz_vid)) {
    return FALSE;
  }

  return $quiz->qid == $revision->qid;
}
