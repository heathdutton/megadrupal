<?php

/**
 * @file
 * Ubercart Gharpay module.
 * Integrates Gharpay payment system with Ubercart.
 */

/**
 * Implements hook_uc_payment_method().
 */
function uc_gharpay_uc_payment_method() {
  $methods['gharpay'] = array(
    'name' => t('Gharpay'), 
    'title' => t('Pay using Gharpay'), 
    'desc' => variable_get('gharpay_description', ''), 
    'callback' => 'uc_gharpay_uc_payment_method_callback', 
    'weight' => 1, 
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );
  return $methods;
}

/**
 * Callback for uc_gharpay_uc_payment_method().
 */
function uc_gharpay_uc_payment_method_callback($op, &$order, $form = NULL, &$form_state = NULL) {
  
  switch ($op) {
    case 'cart-details':
      // Display description about Gharpay.
      $form['gharpay_description'] = array(
          '#markup' => variable_get('gharpay_description', ''),
        );

      return $form['gharpay_description'];
      break;

    case 'cart-process':
      if ($order->payment_method == 'gharpay') {
        // There are some mandatory fields requested by Gharpay API.
        // Validate.
        // Can not make them mandatory through hook_form_alter() as there might be some other payment
        // methods those do not require them.

        $gharpay = new GpGharpayAPI();

        // Get city. Mandatory.
        $city = !empty($order->delivery_city) ? ($gharpay->isCityPresent($order->delivery_city) == 1 ? $order->delivery_city : NULL) : NULL;
        // Get pincode. Mandatory.
        $pincode = !empty($order->delivery_postal_code) ? ($gharpay->isPincodePresent($order->delivery_postal_code) == 1 ? $order->delivery_postal_code : NULL) : NULL;
        // Get first name. Mandatory.
        $first_name = !empty($order->delivery_first_name) ? $order->delivery_first_name : NULL;
        // Get contact number. Mandatory.
        $contact_no = !empty($order->delivery_phone) ? $order->delivery_phone : NULL;
        // Get address. Mandatory.
        $address = !empty($order->delivery_street1) ? $order->delivery_street1 : NULL;
        // Get country code. Mandatory.
        $country = !empty($order->delivery_country) ? $order->delivery_country : '';
        // Get delivery date.
        $delivery_date = !empty($form_state['values']['panes']['payment']['details']['0']) ? $form_state['values']['panes']['payment']['details']['0'] : NULL;

        // Check if pincode or city are left out or
        // Gharpay does not have service in that area.
        if ($pincode == NULL || $city == NULL) {
          // Set message.
          drupal_set_message(
            t("Gharpay doesn't provide its services in selected city. Kindly select another city or see the list of available cities !here.",
            array(
              "!here" => l("here", "gharpay/services/cities", array("attributes" => array("target" => "_blank")))
              )
            ),
            "error"
            );
          // Defer submit.
          return FALSE;
        }

        // India's country code is 356 in Ubercart list.
        // Deny checkout if Pay only in India option is set in Ghrapay configuration.
        if ($country != '356' && variable_get('gharpay_allow_only_in_india', 0) == '1') {
          drupal_set_message(t("Gharpay transactions are limited to India."), "error");
          return FALSE;
        }

        // Validate first name is filled.
        if ($first_name == NULL) {
          drupal_set_message(t("Gharpay transactions require delivery name."), "error");
          return FALSE;
        }

        // Validate contact number is filled.
        if ($contact_no == NULL) {
          drupal_set_message(t("Gharpay transactions require delivery contact number."), "error");
          return FALSE;
        }

        // Validate address is filled.
        if ($address == NULL) {
          drupal_set_message(t("Gharpay transactions require delivery address."), "error");
          return FALSE;
        }

      }
      break;
  }
}

/**
 * Implements hook_uc_order().
 */
function uc_gharpay_uc_order($op, $order, $arg2) {
  switch ($op) {
    case 'submit':
      $gharpay = new GpGharpayAPI();

      // Get array of customer details.
      $customer_details = gharpay_create_order_client_details($order);

      // Get array of order details.
      $order_details = gharpay_create_order_order_details($order);

      // Get array of product details.
      $product_details = gharpay_create_order_product_details($order);

      // Do the transaction.
      $create_order = $gharpay->createOrder($customer_details, $order_details, $product_details);
      drupal_set_message(t("Your Gharpay order id is @orderid", array("@orderid" => $create_order['gharpayOrderId'])), "status");
      break;
  }
}