<?php

/**
 * @file
 * OOP Example 10 module.
 *
 * Interface Inheritance.
 */

// Declare class usage.
use Drupal\adapter_oop_design_pattern\Module\Log\Log;
use Drupal\adapter_oop_design_pattern\Module\Wrappers\PaymentWrapper1;
use Drupal\adapter_oop_design_pattern\Module\Wrappers\PaymentWrapper2;
use Drupal\adapter_oop_design_pattern\Module\Wrappers\PaymentWrapper3;

/**
 * Implements hook_menu().
 */
function adapter_oop_design_pattern_menu() {
  return array(
    'oop-design-patterns/adapter_oop-design-pattern' => array(
      'title' => 'Adapter OOP Design Pattern',
      'page callback' => 'adapter_oop_design_pattern_page',
      'access callback' => TRUE,
    ),
  );
}

/**
 * Page callback.
 */
function adapter_oop_design_pattern_page() {

  $message = 'Start';
  $message .= '<br>';

  Log::start();
  // Just add one more line.
  Log::write('');

  $wrapper1 = new PaymentWrapper1();
  $wrapper1->doPayment('5454545454545454', '12/18', '123');
  // Just add one more line.
  Log::write('');

  $wrapper2 = new PaymentWrapper2();
  $wrapper2->doPayment('5454545454545454', '12/18', '123');
  // Just add one more line.
  Log::write('');

  $wrapper3 = new PaymentWrapper3();
  $wrapper3->doPayment('5454545454545454', '12/18', '123');
  // Just add one more line.
  Log::write('');

  $message .= Log::flush();

  return array(
    '#type' => 'markup',
    '#markup' => $message,
  );
}
