<?php
/**
 * @file
 * Provides simple Lyris subscribe and unsubscribe forms that do not rely on
 * API connections.
 */

define('LYRIS_SIMPLE_SUBSCRIBE', 1);
define('LYRIS_SIMPLE_UNSUBSCRIBE', 0);

// Request member name status
define('LYRIS_SIMPLE_NAME_OPTIONAL', 0);
define('LYRIS_SIMPLE_NAME_NONE', 1);
define('LYRIS_SIMPLE_NAME_REQUIRED', 2);

// Default messages
define('LYRIS_SIMPLE_SUBSCRIBE_PENDING_MESSAGE', 'Thanks for subscribing! We sent you a confirmation email. Check your inbox to finish the process.');
define('LYRIS_SIMPLE_SUBSCRIBE_SUCCESS_MESSAGE', 'Thanks for subscribing! %email has been added to our mailing list!');
define('LYRIS_SIMPLE_SUBSCRIBE_FAILURE_MESSAGE', 'Oops! Looks like there was an problem subscribing you.');
define('LYRIS_SIMPLE_UNSUBSCRIBE_SUCCESS_MESSAGE', 'Sorry to see you go.  %email will be removed from the mailing list.');
define('LYRIS_SIMPLE_UNSUBSCRIBE_FAILURE_MESSAGE', 'Oops! Looks like there was an problem unsubscribing you.  Please contact an administrator and we\'ll get you taken care of.');

// Flood values
define('LYRIS_SIMPLE_FLOOD_DEFAULT_THRESHOLD', 5);
define('LYRIS_SIMPLE_FLOOD_DEFAULT_WINDOW', 3600);

// Lyris return statuses
define('LYRIS_SIMPLE_INVALID_EMAIL', 'invalid');
define('LYRIS_SIMPLE_SUBSCRIBE_SUCCESS', 'normal');
define('LYRIS_SIMPLE_SUBSCRIBE_ALREADY_SUBSCRIBED', 'exists');
define('LYRIS_SIMPLE_SUBSCRIBE_PENDING', 'pending');
define('LYRIS_SIMPLE_UNSUBSCRIBE_SUCCESS', 'unsub');

include_once __DIR__ . '/includes/lyris_simple.inc';
include_once __DIR__ . '/includes/lyris_simple.forms.inc';

/**
 *  Implements hook_block_info().
 */
function lyris_simple_block_info() {
  $blocks = array();

  $blocks['subscribe'] = array(
    'info' => t('Lyris Simple Subscribe Form'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );

  $blocks['unsubscribe'] = array(
    'info' => t('Lyris Simple Unsubscribe Form'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );

  return $blocks;
}

/**
 *  Implements hook_block_view().
 */
function lyris_simple_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'subscribe':
      $block['subject'] = t('Subscribe');
      $block['content'] = drupal_get_form('lyris_simple_subscribe_form');
      break;

    case 'unsubscribe':
      $block['subject'] = t('Unsubscribe');
      $block['content'] = drupal_get_form('lyris_simple_unsubscribe_form');
      break;
  }

  return $block;
}

/**
 *  Implements hook_block_configure().
 */
function lyris_simple_block_configure($delta = '') {
  $form = array();
  $protocol = !empty($_SERVER["HTTPS"]) ? 'https://' : 'http://';
  $sub_vals = t('The following replacement values may be used: %email, %name, %list');
  $unsub_vals = t('The following replacement values may be used: %email, %list');

  switch ($delta) {
    case 'subscribe':
      $form['subscribe'] = array(
        '#type' => 'fieldset',
        '#title' => t('Subscribe'),
        '#group' => 'tabs',
        '#collapsible' => TRUE,
        '#tree' => TRUE,
      );
      $form['subscribe']['lyris_simple_member_name'] = array(
        '#type' => 'select',
        '#title' => t('Member Name'),
        '#description' => t('Ask subscribers for their name?'),
        '#options' => array(
          LYRIS_SIMPLE_NAME_REQUIRED => t('Member name is required'),
          LYRIS_SIMPLE_NAME_OPTIONAL => t('Member name is optional'),
          LYRIS_SIMPLE_NAME_NONE => t('Do not ask for member name'),
        ),
        '#default_value' => variable_get('lyris_simple_member_name', LYRIS_SIMPLE_NAME_OPTIONAL),
      );
      $form['subscribe']['lyris_simple_subscribe_redirect'] = array(
        '#type' => 'textfield',
        '#title' => t('Redirect Path'),
        '#field_prefix' => $protocol . $_SERVER['HTTP_HOST'] . '/',
        '#description' => t('Redirect the user to this path after subscribing.') . '<br />' . t('Leave blank to reload the current page.  Use &lt;front&gt; for the home page.'),
        '#default_value' => variable_get('lyris_simple_subscribe_redirect', ''),
      );
      $form['subscribe']['lyris_simple_subscribe_confirm'] = array(
        '#type' => 'select',
        '#title' => t('Confirmation & Welcome Email'),
        '#description' => t('Members can be sent a confirmation email they\'ll need to respond to in order to subscribe, and/or a welcome email once they have subscribed.'),
        '#options' => array(
          'one' => t('Send one confirmation message'),
          'one_hello' => t('Do not confirm and send only one hello'),
          'many_hello' => t('Do not confirm and send a hello message for each list'),
          'none' => t('Do not confirm and do not send a hello message'),
        ),
        '#default_value' => variable_get('lyris_simple_subscribe_confirm', 'none'),
      );
      $form['subscribe']['lyris_simple_subscribe_pending_message'] = array(
        '#type' => 'textarea',
        '#title' => t('Pending Confirmation Message'),
        '#description' => $sub_vals,
        '#rows' => 3,
        '#default_value' => variable_get('lyris_simple_subscribe_pending_message', LYRIS_SIMPLE_SUBSCRIBE_PENDING_MESSAGE),
        '#states' => array(
          'visible' => array(
            ':input[name="lyris_simple_subscribe_confirm"]' => array('value' => 'one'),
          ),
        ),
      );
      $form['subscribe']['lyris_simple_subscribe_success_message'] = array(
        '#type' => 'textarea',
        '#title' => t('Success Message'),
        '#description' => $sub_vals,
        '#rows' => 3,
        '#default_value' => variable_get('lyris_simple_subscribe_success_message', LYRIS_SIMPLE_SUBSCRIBE_SUCCESS_MESSAGE),
      );
      $form['subscribe']['lyris_simple_subscribe_failure_message'] = array(
        '#type' => 'textarea',
        '#title' => t('Error Message'),
        '#description' => $sub_vals,
        '#rows' => 3,
        '#default_value' => variable_get('lyris_simple_subscribe_failure_message', LYRIS_SIMPLE_SUBSCRIBE_FAILURE_MESSAGE),
      );
      break;

    case 'unsubscribe':
      $form['unsubscribe'] = array(
        '#type' => 'fieldset',
        '#title' => t('Unsubscribe'),
        '#group' => 'tabs',
        '#collapsible' => TRUE,
        '#tree' => TRUE,
      );
      $form['unsubscribe']['lyris_simple_unsubscribe_email_notify'] = array(
        '#type' => 'checkbox',
        '#title' => t('Email Notification'),
        '#description' => t('Have Lyris send a notification email after the member unsubscribes.'),
        '#default_value' => variable_get('lyris_simple_unsubscribe_email_notify', 0),
      );
      $form['unsubscribe']['lyris_simple_unsubscribe_redirect'] = array(
        '#type' => 'textfield',
        '#title' => t('Redirect Path'),
        '#field_prefix' => $protocol . $_SERVER['HTTP_HOST'] . '/',
        '#description' => t('Redirect the user to this path after unsubscribing.') . '<br />' . t('Leave blank to reload the current page.  Use &lt;front&gt; for the home page.'),
        '#default_value' => variable_get('lyris_simple_unsubscribe_redirect', ''),
      );
      $form['unsubscribe']['lyris_simple_unsubscribe_success_message'] = array(
        '#type' => 'textarea',
        '#title' => t('Success Message'),
        '#description' => $unsub_vals,
        '#rows' => 3,
        '#default_value' => variable_get('lyris_simple_unsubscribe_success_message', LYRIS_SIMPLE_UNSUBSCRIBE_SUCCESS_MESSAGE),
      );
      $form['unsubscribe']['lyris_simple_unsubscribe_failure_message'] = array(
        '#type' => 'textarea',
        '#title' => t('Error Message'),
        '#description' => $unsub_vals,
        '#rows' => 3,
        '#default_value' => variable_get('lyris_simple_unsubscribe_failure_message', LYRIS_SIMPLE_UNSUBSCRIBE_FAILURE_MESSAGE),
      );
      break;
  }

  return $form;
}

/**
 *  Implements hook_block_save().
 */
function lyris_simple_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'subscribe':
      foreach ($edit['subscribe'] as $field => $value) {
        variable_set($field, $value);
      }
      break;

    case 'unsubscribe':
      foreach ($edit['unsubscribe'] as $field => $value) {
        variable_set($field, $value);
      }
      break;
  }
}

/**
 *  Implements hook_menu().
 */
function lyris_simple_menu() {
  $items['admin/config/services/lyris-simple'] = array(
    'title' => 'Lyris Simple Forms',
    'description' => 'Configure the simple lyris subscriptions forms.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lyris_simple_settings_form'),
    'access arguments' => array('administer lyris simple'),
    'file' => 'includes/lyris_simple.admin.inc',
  );

  return $items;
}

/**
 *  Implements hook_permission().
 */
function lyris_simple_permission() {
  return array(
    'administer lyris simple' => array(
      'title' => t('Administer Settings'),
      'description' => t('Configure Lyris Simple settings.'),
    ),
    'lyris simple bypass flood control' => array(
      'title' => t('Bypass Flood Control'),
      'description' => t('Users will be allowed to (un)subscribe as many times as they want.'),
    ),
  );
}
