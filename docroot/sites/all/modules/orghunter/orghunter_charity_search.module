<?php
/**
 * @file
 * Code for the OrgHunter Charity Search module.
 */
define('ORGHUNTER_CHARITY_SEARCH_API_URL_DEFAULT', 'http://data.orghunter.com/v1');
define('ORGHUNTER_CHARITY_SEARCH_API_ROWS_DEFAULT', '10');
define('ORGHUNTER_CHARITY_SEARCH_CATEGORIES_CACHE_EXPIRE', 60 * 60 * 24 * 7);
define('ORGHUNTER_CHARITY_SEARCH_RESULTS_CACHE_EXPIRE', 60 * 60 * 24);

/**
 * Implements hook_menu().
 */
function orghunter_charity_search_menu() {
  $menu = array();

  $menu['orghunter/charitysearch'] = array(
    'title' => 'OrgHunter Charity Search',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('use orghunter charity search'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('orghunter_charity_search_form'),
    'file' => 'orghunter_charity_search.forms.inc'
  );

  $menu['orghunter/charitysearch/results'] = array(
    'title' => 'OrgHunter Charity Search',
    'type' => MENU_CALLBACK,
    'access arguments' => array('use orghunter charity search'),
    'page callback' => 'orghunter_charity_search_results_page',
    'file' => 'orghunter_charity_search.pages.inc'
  );

  $menu['admin/config/services/orghunter'] = array(
    'title' => 'OrgHunter Charity Search',
    'description' => 'Configure settings for OrgHunter Charity Search.',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer orghunter charity search'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('orghunter_charity_search_settings_form'),
    'file' => 'orghunter_charity_search.forms.inc'
  );

  return $menu;
}

/**
 * Implements hook_permission().
 */
function orghunter_charity_search_permission() {
  return array(
    'administer orghunter charity search' => array(
      'title' => t('Administer OrgHunter Charity Search'),
    ),
    'use orghunter charity search' => array(
      'title' => t('Use OrgHunter Charity Search'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function orghunter_charity_search_theme($existing, $type, $theme, $path) {
  $path = drupal_get_path('module', 'orghunter_charity_search');

  return array(
    'orghunter_charity_search_results' => array(
      'path' => $path . '/theme',
      'template' => 'orghunter-charity-search-results',
      'variables' => array(
        'results' => NULL,
        'pager' => NULL,
      ),
    ),
    'orghunter_charity_search_result_charity' => array(
      'path' => $path . '/theme',
      'template' => 'orghunter-charity-search-result-charity',
      'variables' => array(
        'ein' => NULL,
        'name' => NULL,
        'title' => NULL,
        'url' => NULL,
        'category' => NULL,
        'city' => NULL,
        'state' => NULL,
        'zip' => NULL,
        'deductibility' => NULL,
        'eligible' => NULL,
        'status' => NULL,
        'donation' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function orghunter_charity_search_block_info() {
  $blocks = array();

  $blocks['search_form'] = array(
    'info' => t('OrgHunter Charity Search')
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function orghunter_charity_search_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'search_form':
      if (user_access('use orghunter charity search')) {
        module_load_include('inc', 'orghunter_charity_search', 'orghunter_charity_search.forms');
        $block['subject'] = t('OrgHunter Charity Search');
        $block['content'] = drupal_get_form('orghunter_charity_search_form');

        $path = drupal_get_path('module', 'orghunter_charity_search');
        $block['content']['#attached']['css'] = array(
          $path . '/css/orghunter_charity_search.block.css',
        );

        $block['content']['poweredby'] = orghunter_charity_search_poweredby();
      }
      break;
  }

  return $block;
}

/**
 * Implements hook_requirements().
 */
function orghunter_charity_search_requirements($phase) {
  $t = get_t();

  switch ($phase) {
    case 'runtime':
      if (!variable_get('orghunter_charity_search_api_key', '')) {
        return array(
          'orghunter_charity_search_api_key' => array(
            'title' => $t('OrgHunter API Key not provided'),
            'description' => $t('OrgHunter Charity Search requires a valid API key to work correctly.'),
            'severity' => REQUIREMENT_ERROR,
          ),
        );
      }
      break;
  }
}

/**
 * Implements hook_flush_caches().
 */
function orghunter_charity_search_flush_caches() {
  return array('cache_orghunter_charity_search_results');
}

/**
 * Implements hook_preprocess_THEME for theme_orghunter_charity_search_result_charity().
 */
function orghunter_charity_search_preprocess_orghunter_charity_search_result_charity(&$variables) {
  $variables['deductible'] = '';
  if ($variables['eligible']) {
    $variables['deductible'] = t('Contributions Are Deductible');
    if ($aid = variable_get('orghunter_charity_search_affiliate_id', '')) {
      $variables['donation'] .= (strpos('?', $variables['donation']) ? '&a=' . $aid : '?a=' . $aid);
    }
    $variables['donation_link'] = l(t('Donate Now'), $variables['donation']);
  }

  if ($variables['status'] == 4) {
    $variables['status'] = 'revoked';
    $variables['status_message'] = t('Status Revoked');
  }
}

/**
 * Implements hook_process_THEME for theme_orghunter_charity_search_results().
 */
function orghunter_charity_search_process_orghunter_charity_search_results(&$variables) {
  $variables['results'] = render($variables['results']);
  $variables['pager'] = render($variables['pager']);
}

/**
 * Implements hook_preprocess_THEME for theme_page().
 */
function orghunter_charity_search_preprocess_page(&$variables) {
  $q = explode('/', current_path());
  if ($q[0] == 'orghunter') {
    $variables['page']['content']['orghunter_poweredby'] = orghunter_charity_search_poweredby();
  }
}

/**
 * Returns the API URL.
 *
 * @return
 *   String with the API URL value, or the default value if it's not set.
 */
function orghunter_charity_search_api_url() {
  $url = variable_get('orghunter_charity_search_api_url', '');

  return $url ? $url : ORGHUNTER_CHARITY_SEARCH_API_URL_DEFAULT;
}

/**
 * Returns the API key.
 *
 * @return
 *   String with the API Key value, or an empty string if it's not set.
 */
function orghunter_charity_search_api_key() {
  $key = variable_get('orghunter_charity_search_api_key', '');

  if (!$key) {
    drupal_set_message(t('The OrgHunter API key is unset.'), 'error');
  }

  return $key;
}

/**
 * Charity Search categories load.
 */
function orghunter_charity_search_categories() {
  $categories_cache = cache_get('orghunter_charity_search:categories', 'cache');
  $categories = array();

  if ($categories_cache && $categories_cache->created + $categories_cache->expire > REQUEST_TIME) {
    $categories = $categories_cache->data;
  }
  else {
    $url = orghunter_charity_search_api_url();
    $key = orghunter_charity_search_api_key();
    $path = 'categories';
    $query = drupal_http_build_query(array(
      'user_key'   => $key,
    ));

    $request = drupal_http_request($url . '/' . $path . '?' . $query);
    $data = drupal_json_decode($request->data);

    switch ($request->code) {
      case '200':
        foreach ($data['data'] as $category) {
          if (isset($category['categoryId']) && $category['categoryDesc']) {
            $categories[$category['categoryId']] = $category['categoryDesc'];
          }
        }
        cache_set('orghunter_charity_search:categories', $categories, 'cache', ORGHUNTER_CHARITY_SEARCH_CATEGORIES_CACHE_EXPIRE);
        break;
      default:
        if (user_access('administer orghunter charity search')) {
          drupal_set_message(t('API server returned error: @error_code @error_msg', array(
            '@error_code' => $data['code'],
            '@error_msg' => $data['msg'],
          )), 'error');
        }
        break;
    }
  }

  return $categories;
}

/**
 * Charity Search search results load.
 */
function orghunter_charity_search_results($search) {
  $search_id = implode(':', array(
    $search['search_term'],
    $search['ein'],
    $search['state'],
    $search['city'],
    $search['zip_code'],
    $search['category'],
    $search['eligible'],
    $search['start'],
    $search['rows'],
  ));
  $cache_cid = 'orghunter_charity_search:results:' . $search_id;

  $results_cache = cache_get($cache_cid, 'cache_orghunter_charity_search_results');
  $results = array();

  if ($results_cache && $results_cache->created + $results_cache->expire > REQUEST_TIME) {
    $results = $results_cache->data;
  }
  else {
    $url = orghunter_charity_search_api_url();
    $key = orghunter_charity_search_api_key();
    $path = 'charitysearch';

    $query = drupal_http_build_query(array(
      'user_key'   => $key,
      'searchTerm' => $search['search_term'],
      'ein'        => $search['ein'],
      'state'      => $search['state'],
      'city'       => $search['city'],
      'zipCode'    => $search['zip_code'],
      'category'   => $search['category'],
      'eligible'   => $search['eligible'],
      'start'      => isset($search['start']) ? $search['start'] : 0,
      'rows'       => $search['rows'],
    ));

    $request = drupal_http_request($url . '/' . $path . '?' . $query);
    $data = drupal_json_decode($request->data);

    if (isset($data['data'])) {
      $results = $data['data'];
    }

    switch ($request->code) {
      case '200':
        cache_set($cache_cid, $results, 'cache_orghunter_charity_search_results', ORGHUNTER_CHARITY_SEARCH_RESULTS_CACHE_EXPIRE);
        break;
      default:
        if (user_access('administer orghunter charity search')) {
          drupal_set_message(t('API server returned error: @error_code @error_msg', array(
            '@error_code' => $data['code'],
            '@error_msg' => $data['msg'],
          )), 'error');
        }
        break;
    }
  }

  return $results;
}

/**
 * Returns "powered by" link.
 */
function orghunter_charity_search_poweredby() {
  return array(
    '#theme' => 'html_tag',
    '#tag' => 'div',
    '#attributes' => array(
      'class' => 'orghunter-charity-search-powered-by',
    ),
    '#value' => t('Powered by <a href="@url" title="@title">OrgHunter</a>', array(
      '@url' => 'http://www.orghunter.com',
      '@title' => t('OrgHunter.com is the number one destination for online charity and donor matching services.'),
    )),
  );
}
