<?php
/*
 * @file
 * This module provides a way to automatically close a webform when a specified date/time
 * has been reached.
 */

/*
 * Implements hook_form_alter().
 * Add date part to webform settings
 */
function webform_limit_submissions_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'webform_configure_form') {
    // Cut-off date (use Webform date component generator).
    module_load_include('inc', 'webform', 'components/date');
    $component = _webform_defaults_date();
    $component['name'] = 'Close the form submissions on the following date';
    $component['weight'] = 1;
    $component['mandatory'] = FALSE;
    $component['value'] = _webform_limit_submissions_close_on_date_value(arg(1), 'close_on_date');
    $component['extra']['year_start'] = date('Y');
    $component['extra']['year_end'] = date('Y') +5;
    $component['extra']['year_textfield'] = FALSE;
    $component['extra']['datepicker'] = FALSE;
    
    // User or site default timezone (snipped from date_api: date_default_timezone_name,
    if (variable_get('configurable_timezones', 1) && !empty($user->timezone_name)) {
      $component['extra']['timezone'] = $user->timezone_name;
    }
    else {
      $default = variable_get('date_default_timezone_name', '');
      $component['extra']['timezone'] = empty($default) ? 'UTC' : $default;
    }
    // Let Webform date component build the element.
    $form['submission']['close_date'] = _webform_render_date($component, $component['value'], FALSE);
    
    // Add extra submit function for the date part
    $form['#submit'][] = 'webform_limit_submissions_form_submit';
  }
}

/*
 * Submit function for the close on date option
 */
function webform_limit_submissions_form_submit($form, &$form_state) {
  $nid = $form['nid']['#value'];
  if (!empty($form['submission']['close_date']['#value']['day']) && !empty($form['submission']['close_date']['#value']['month']) && !empty($form['submission']['close_date']['#value']['year'])) {
    $submission_limit = $form['submission']['close_date']['#value'];
    // Delete old record for this node
    db_delete('webform_limit_submissions')
      ->condition('nid', (int) $nid)
      ->execute();
    // Add the new settings
    db_insert('webform_limit_submissions')
      ->fields(array(
        'nid' => (int) $nid,
        'sid' => 0,
        'value' => serialize($submission_limit),
      ))
      ->execute();
    
    if ($form['submission']['status']['#value'] == 0) {
      drupal_set_message(t('The close date has been set, but the form is still closed.'), 'warning');
    }
  }
}

/**
 * Implements hook_node_load().
 */
function webform_limit_submissions_node_load($nodes, $types) {
  $types = webform_variable_get('webform_node_types');
  foreach ($nodes as $node) {
    if (in_array($node->type, $types)) {
    // Set form status.
    _webform_limit_submissions_limits_exceeded($node->nid);
    }  
  }
}

/**
 * Implements hook_node_delete().
 */
function webform_limit_submissions_node_delete($node) {
  $types = webform_variable_get('webform_node_types');
  if (in_array($node->type, $types)) {
    // If the node is being deleted, remove the record from the limit submissions table.
    db_delete('webform_limit_submissions')
      ->condition('nid', $node->nid)
      ->execute();
  }
}

/**
 * Determines whether this Webform should be closed (true) or open (false).
 *
 * @param $nid
 *   The current node id.
 *
 */
function _webform_limit_submissions_limits_exceeded($nid) {
  // Flag cutoff date.
  $max_date = _webform_limit_submissions_close_on_date_value($nid, 'close_on_date');
  $cutoff = FALSE;
  if (isset($max_date['year']) && trim($max_date['year']) != '') {
    $lim_time = mktime(0, 0, 0, $max_date['month'], $max_date['day'], $max_date['year']);
    // time() is UTC by default and $max_date is stored as UTC.
    if ($lim_time <= time()) {
      db_update('webform')
        ->fields(array(
          'status' => 0,
      ))
        ->condition('nid', (int) $nid)
        ->execute();
      return FALSE;
    }
    else {
      return TRUE;
    }
  }
}

/*
 * Function to get submission limit value for node
 * @param Node ID of the form
 * @param Field value sought
 * @return Limit submissions value
 */
function _webform_limit_submissions_close_on_date_value($nid, $field = 'close_on_date') {
  // Retrieve required value.
  switch ($field) {
    case 'close_on_date':
      $result = db_query("SELECT value FROM {webform_limit_submissions} WHERE nid = :nid", array(':nid' => (int) $nid))->fetchField();

      if ($result === FALSE) {
        $value = FALSE;
      }
      else{
        $value = unserialize($result);
      }
    break;
  }

  return $value;
}
