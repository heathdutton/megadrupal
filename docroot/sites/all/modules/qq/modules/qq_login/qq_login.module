<?php

/**
 * @file
 * Allows users use the QQ account login.
 */

/**
 * Implements hook_menu().
 */
function qq_login_menu() {
  $items['admin/config/services/qq_login'] = array(
    'title' => 'qq login',
    'description' => 'qq login openapi config.',
    'access arguments' => array('access administration pages'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('qq_login_setting'),
    'file' => 'qq_login.admin.inc',
  );
  // Openaip response.
  $items['qq_login/response'] = array(
    'page callback' => 'qq_login_response',
    'access callback' => TRUE,
    'file' => 'qq_login.pages.inc',
    'type' => MENU_CALLBACK,
  );
  // Openaip callback.
  $items['qq_login/callback'] = array(
    'page callback' => 'qq_login_callback_page',
    'access callback' => 'user_register_access',
    'file' => 'qq_login.pages.inc',
    'type' => MENU_CALLBACK,
  );
  // Bind user.
  $items['qq_login/bind/new'] = array(
    'title' => 'Create new account bundled with QQ account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_register_form'),
    'access callback' => 'user_register_access',
    'type' => MENU_CALLBACK,
  );
  $items['qq_login/bind/exist'] = array(
    'title' => 'Bundled the account with QQ account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_login'),
    'access callback' => 'user_register_access',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function qq_login_form_alter(&$form, $form_state, $form_id) {
  if (($form_id == 'user_login' || $form_id == 'user_login_block') && arg(0) != 'qq_login') {
    $form['qq_login'] = array(
      '#type' => 'item',
      '#description' => l(theme('image', array('path' => drupal_get_path('module', 'qq_login') . '/img/qq_login.png')), 'qq_login/response', array('html' => TRUE)),
    );
  }

  if ($form_id == 'user_register_form' || $form_id = 'user_login') {
    if (isset($_SESSION['openid']) && arg(0) == 'qq_login') {
      $form['qq_login_openid'] = array(
        '#type' => 'value',
        '#value' => $_SESSION['openid'],
      );
    }

    // Sign.
    if (arg(2) == 'new') {
      $form['qq_login_new'] = array(
        '#type' => 'value',
        '#value' => TRUE,
      );
    }
    elseif (arg(2) == 'exist') {
      $form['qq_login_exist'] = array(
        '#type' => 'value',
        '#value' => TRUE,
      );
    }
  }

  if ($form_id == 'user_register_form' && arg(0) == 'qq_login' && arg(2) == 'new') {
    $form['qq_login'] = array(
      '#type' => 'item',
      '#description' => '<b style="color:red;">' . l(t('Bundling existing account.'), 'qq_login/bind/exist') . '</b>',
    );
  }
}

/**
 * Implements hook_user_insert().
 */
function qq_login_user_insert(&$edit, $account, $category) {
  if (isset($edit['qq_login_new'])) {
    // Insert new.
    db_insert('qq_login')
      ->fields(array(
        'uid' => $account->uid,
        'openid' => $edit['qq_login_openid'] ? $edit['qq_login_openid'] : 0,
      ))
      ->execute();
  }
}

/**
 * Implements hook_user_login().
 */
function qq_login_user_login(&$edit, $account) {
  if (isset($edit['values']['qq_login_exist'])) {
    // Insert new.
    db_insert('qq_login')
      ->fields(array(
        'uid' => $account->uid,
        'openid' => $edit['values']['qq_login_openid'] ? $edit['values']['qq_login_openid'] : 0,
      ))
      ->execute();
  }
}

/**
 * Implements hook_user_view().
 */
function qq_login_user_view($account) {
  global $user;

  if ($user->uid == $account->uid) {
    if (isset($_SESSION['access_token']) && isset($_SESSION['openid'])) {
      $user_info_url = "https://graph.qq.com/user/get_user_info?access_token=" . $_SESSION['access_token']
        . "&oauth_consumer_key=" . variable_get('appid', '222222')
        . "&openid=" . $_SESSION['openid']
        . "&format=json";

      $response = drupal_http_request($user_info_url);
      if (!isset($response->error) && $response->code == 200) {
        $info = drupal_json_decode($response->data);

        $account->content['summary']['blog'] = array(
          '#type' => 'user_profile_item',
          '#title' => t('QQ account'),
          '#markup' => theme('image', array('path' => $info['figureurl'])) . '&nbsp;' . t('Nickname') . ':' . $info['nickname'],
          '#attributes' => array('class' => array('qq')),
        );
      }
    }
  }
}

/**
 * Implements hook_user_delete().
 */
function qq_login_user_delete($account) {
  db_delete('qq_login')
    ->condition('uid', $account->uid)
    ->execute();
}
