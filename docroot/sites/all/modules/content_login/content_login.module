<?php

/**
 * @file
 * This is the file description for Content Login module.
 *
 * This module provides facility to login into the applcation using encrypted
 * url which is generated by content login module.
 */

/**
 * Implements hook_menu().
 */
function content_login_menu() {
  $items = array();
  $items['admin/structure/contentlogin'] = array(
    'title' => 'Content Login',
    'description' => "Authenticates the page without user login",
    'page callback' => 'content_login_listing',
    'access callback' => 'user_access',
    'access arguments' => array('administer users'),
  );
  $items['admin/structure/contentlogin/delete/%'] = array(
    'page callback' => 'content_login_delete',
    'access callback' => 'user_access',
    'access arguments' => array('administer users'),
    'type' => MENU_CALLBACK,
  );
  $items['content/access/%'] = array(
    'page callback' => 'content_login',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['admin/structure/contentlogin/list'] = array(
    'title' => 'List Pages',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/structure/contentlogin/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('content_login_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Authenticates page without user login.
 */
function content_login() {
  $enc_node_id = arg(2);
  $nid = content_login_decrypt_string($enc_node_id);
  $node_load = node_load($nid);

  $already_existing_data = db_query("select count(id) as count from {content_login_details} where nid = :nid", array('nid' => $nid));
  $data = $already_existing_data->fetchObject();
  $validate_page = $data->count;

  if ($validate_page > 0) {
    if (is_object($node_load)) {
      if (variable_get('content_login_settings', NULL) == 1) {
        $load_user = user_load_by_name(variable_get('content_login_username', NULL));
        global $user;
        $user = user_load($load_user->uid);
        drupal_session_regenerate();
      }
      else {
        return drupal_not_found();
      }
      $node_path = isset($node_load->path) ? $node_load->path : '';
      if ($node_path != NULL && $node_path != '') {
        drupal_goto($node_path);
      }
      else {
        drupal_goto("node/" . $nid);
      }
    }
  }
  else {
    return drupal_not_found();
  }
}

/**
 * Listing authenticated pages without user login into the application.
 */
function content_login_listing() {
  drupal_add_css(drupal_get_path('module', "content_login") . "/content_login.css");
  global $base_url;
  $output = '';
  $header = array(
    array('data' => t('Node ID'), 'field' => 'nid'),
    array('data' => t('Title')),
    array('data' => t('Encrypted Url'), 'field' => 'url'),
    array('data' => t('Actions')),
  );

  $query = db_select("content_login_details", "c");
  $query->leftJoin('node', 'n', 'c.nid = n.nid');
  $query->fields('c', array('id', 'nid', 'url'));
  $query->fields('n', array('title'));
  $query = $query->extend('TableSort')->extend('PagerDefault')->limit(10);
  $query->orderByHeader($header);
  $result = $query->execute();

  $rows = array();
  while ($record = $result->fetchObject()) {
    $nid = $record->nid;
    $node_title = $record->title;
    $link_title = l($node_title, "node/$nid");
    $delete_link = l(t('Delete'), "admin/structure/contentlogin/delete/$nid");

    $rows[] = array(
      $nid,
      $link_title,
      $base_url . "/content/access/" . $record->url,
      $delete_link,
    );
  }

  $output .= theme('table',
    array(
      'header' => $header,
      'rows' => $rows,
      'attributes' => array(),
      'sticky' => TRUE,
      'caption' => '',
      'colgroups' => array(),
      'empty' => t("No Records Found."),
    )
  ) . theme('pager');

  $build['content'] = array(
    'form' => drupal_get_form('content_login_form'),
    'output' => array('#markup' => $output),
  );
  return $build;
}

/**
 * Content Login form.
 */
function content_login_form() {
  $form = array();
  $form['node_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter Node Id'),
    '#maxlength' => 11,
    '#size' => 11,
    '#required' => TRUE,
    '#prefix' => "<div id='content_login_node_id'>",
    '#suffix' => "</div>",
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#prefix' => "<div id='content_login_form_submit'>",
    '#suffix' => "</div>",
  );
  return $form;
}
/**
 * Validating content login form.
 */
function content_login_form_validate($form, &$form_state) {
  $node_id = trim($form_state['values']['node_id']);
  if (!is_numeric($node_id)) {
    form_set_error('node_id', t('Node id should be numeric.'));
  }
  else {
    $node_exist = node_load($node_id);
    if (!is_object($node_exist)) {
      form_set_error('node_id', t('Node id does not exist in database.'));
    }
  }
}

/**
 * Submitting content login form.
 */
function content_login_form_submit($form, &$form_state) {

  $node_id = trim($form_state['values']['node_id']);
  $already_existing_data = db_query("select count(id) as count from {content_login_details} where nid = :nid", array('nid' => $node_id));
  $data = $already_existing_data->fetchObject();
  $count_nodes = $data->count;

  /* Loading node for status details */
  $node_load = node_load($node_id);
  $status = $node_load->status;

  if ($status) {
    if ($count_nodes >= 1) {
      drupal_set_message(t("Node is already white listed."), "error");
    }
    else {
      db_insert('content_login_details')
        ->fields(array(
        'nid' => $node_id,
        'url' => content_login_encrypt_string($node_id),
      ))
        ->execute();
      drupal_set_message(t("Node is white listed successfully."));
    }
  }
  else {
    drupal_set_message(t("Content Login needs publish content. The mentioned node is unpublished."), "error");
  }
}

/**
 * Delete function to delete a page from Content Login module.
 */
function content_login_delete() {
  $node_id = arg(4);
  if (!is_numeric($node_id)) {
    drupal_set_message(t("Something seems to be wrong with the URL."), "error");
  }
  else {
    db_delete('content_login_details')->condition('nid', $node_id)->execute();
    drupal_set_message(t("Record deleted successfully from Content Login."));
    drupal_goto('admin/structure/contentlogin');
  }
}

/**
 * Content Login settings form.
 */
function content_login_settings_form() {

  $form = array();
  $form['content_login_settings'] = array(
    '#type' => 'radios',
    '#title' => t('Enable/disable Content Login'),
    '#description' => t('Content Login module  will function as per above configurations'),
    '#options' => array('1' => t('Enable Content Login'), '0' => t('Disable Content Login')),
    '#default_value' => variable_get('content_login_settings', NULL),
    '#required' => TRUE,
  );
  $form['username'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#description' => t('Please provide the user name under whom page will be authenticated.'),
    '#maxlength' => 100,
    '#size' => 50,
    '#default_value' => variable_get('content_login_username', NULL),
    '#required' => TRUE,
  );
  $form['userpass'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#description' => t('Please provide the user password under whom page will be authenticated.'),
    '#maxlength' => 100,
    '#size' => 50,
    '#default_value' => variable_get('content_login_userpass', NULL),
    '#required' => TRUE,
  );
  $form['note'] = array(
    '#type' => 'markup',
    '#value' => "<b>" . t('Note: Please make sure that above user  exists and activated. We recommend to provide a test user credentials.') . "<b><br/>",
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Save',
  );
  return $form;
}

/**
 * Submitting content login settings form.
 */
function content_login_settings_form_submit($form, &$form_state) {
  $settings = $form_state['values']['content_login_settings'];
  $user_name = $form_state['values']['username'];
  $user_pass = $form_state['values']['userpass'];
  variable_set('content_login_settings', $settings);
  variable_set('content_login_username', $user_name);
  variable_set('content_login_userpass', $user_pass);
  drupal_set_message(t("Configuration saved successfully."));
}

/**
 * Encryption function.
 */
function content_login_encrypt_string($id) {
  $key = md5('crypto key...', TRUE);
  $id = base_convert($id, 10, 36);
  $data = mcrypt_encrypt(MCRYPT_BLOWFISH, $key, $id, 'ecb');
  $data = bin2hex($data);
  return $data;
}

/**
 * Decryption function.
 */
function content_login_decrypt_string($encrypted_id) {
  $key = md5('crypto key...', TRUE);
  $data = pack('H*', $encrypted_id);
  $data = mcrypt_decrypt(MCRYPT_BLOWFISH, $key, $data, 'ecb');
  $data = base_convert($data, 36, 10);
  return $data;
}
