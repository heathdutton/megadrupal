<?php

/**
 * @file
 * enhances the messages with extra css and js
 * @version 7.x-1.x
 */

/**
 * Implements hook_init().
 */
function timed_messages_init() {
  if (!module_exists('libraries')) {
    if (current_path() == "admin/config/user-interface/timed_messages") {
      drupal_set_message(t('Please enable libraries module to be able to use JQuery Pause.'), 'warning');
    }
  }
  elseif (($library = libraries_detect('pause')) && !empty($library['installed'])) {
    // The library is installed. Awesome!
    libraries_load('pause');
  }
  else {
    // Something went wrong.
    // This contains a detailed (localized) error message.
    // $error_message = $library['error message'];
    if (current_path() == "admin/config/user-interface/timed_messages") {
      drupal_set_message(t('Please place pause/jquery.pause.min.js in a libraries folder.'), 'warning');
    }
  }

  $variables = variable_get('timed_messages');
  $js_settings = array(
    'messages_class' => isset($variables['generalset']['messages_class']) ?
        $variables['generalset']['messages_class'] : 'messages',
    'hide_with_krumo' => isset($variables['generalset']['hide_with_krumo']) ?
        $variables['generalset']['hide_with_krumo'] : FALSE,
    'status_class' => isset($variables['statusset']['status_container']['status_class']) ?
        $variables['statusset']['status_container']['status_class'] : 'status',
    'warning_class' => isset($variables['warningset']['warning_container']['warning_class']) ?
        $variables['warningset']['warning_container']['warning_class'] : 'warning',
    'error_class' => isset($variables['errorset']['error_container']['error_class']) ?
        $variables['errorset']['error_container']['error_class'] : 'error',
    'hide_status' => isset($variables['statusset']['hide_status']) ?
        $variables['statusset']['hide_status'] : TRUE,
    'hide_warning' => isset($variables['statusset']['hide_status']) ?
        $variables['statusset']['hide_status'] : TRUE,
    'hide_error' => isset($variables['errorset']['hide_error']) ?
        $variables['errorset']['hide_error'] : TRUE,
    'status_time' => isset($variables['statusset']['status_container']['status_time']) ?
        $variables['statusset']['status_container']['status_time'] : 5000,
    'warning_time' => isset($variables['warningset']['warning_container']['warning_time']) ?
        $variables['warningset']['warning_container']['warning_time'] : 10000,
    'error_time' => isset($variables['errorset']['error_container']['error_time']) ?
        $variables['errorset']['error_container']['error_time'] : 15000,
  );
//  dpm($js_settings, 'js settings');
  drupal_add_js(array('timed_messages' => $js_settings), 'setting');
}

/**
 * Implements hook_libraries_info().
 * @note : Libraries 2.x
 */
function timed_messages_libraries_info() {

  return array(
    'pause' => array(
      'name' => 'Pause (A jQuery plugin to pause and resume animations)',
      'vendor url' => 'http://tobia.github.com/Pause/',
      'download url' => 'http://github.com/tobia/Pause/raw/master/jquery.pause.min.js',
      'version arguments' => array(
        'file' => 'jquery.pause.min.js',
        'pattern' => '/Pause\sjQuery\s+plugin\s+v?([0-9\.]+)/',
        'lines' => 2,
      ),
      'files' => array(
        'js' => array('jquery.pause.min.js'),
      ),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function timed_messages_menu() {

  return array(
    'admin/config/user-interface/timed_messages' => array(
      'title' => 'Timed Messages',
      'description' => 'Settings to control timed messages',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('timed_messages_admin'),
      'access arguments' => array('administer timed messages'),
      'file' => 'timed_messages.admin.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
  );
}

/**
 * Implements hook_permission()
 * @return @see hook_permission
 */
function timed_messages_permission() {
  return array(
    'administer timed messages' => array(
      'title' => t('Administer timed messages'),
      'description' => t('Administer classes, timers for the timed messages.'),
    ),
  );
}