<?php

/**
 * @file
 * Integrates Wallet One payment service.
 */

/**
 * Implements hook_menu().
 */
function uc_w1_menu() {
  $items['uc_w1/done'] = array(
    'page callback' => 'uc_w1_payment_check',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'uc_w1.pages.inc',
  );
  $items['uc_w1/success'] = array(
    'title' => 'W1 success url',
    'page callback' => 'uc_w1_payment_end',
    'page arguments' => array('success'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'uc_w1.pages.inc',
  );
  $items['uc_w1/fail'] = array(
    'title' => 'W1 fail url',
    'page callback' => 'uc_w1_payment_end',
    'page arguments' => array('fail'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'uc_w1.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_uc_payment_method().
 *
 * @see uc_w1_payment_method()
 */
function uc_w1_uc_payment_method() {
  $methods['uc_w1'] = array(
    'id' => 'uc_w1',
    'name' => t('Wallet One'),
    'title' => variable_get('uc_w1_title', t('Wallet One')),
    'desc' => t('Pay with Wallet One payment aggregator'),
    'callback' => 'uc_w1_payment_method',
    'redirect' => 'uc_w1_form',
    'weight' => 1,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );
  return $methods;
}

/**
 * Adds Wallet One settings to the payment method settings form.
 *
 * @see uc_w1_uc_payment_method()
 */
function uc_w1_payment_method($op, &$order, $form = NULL, &$form_state = NULL) {
  $parse_methods = drupal_parse_info_file(drupal_get_path('module', 'uc_w1') . '/' . 'payment_methods.ini');
  switch ($op) {
    case 'cart-details':
      $output = '';
      if (variable_get('uc_w1_sposobi_oplati_enable') && in_array(TRUE, variable_get('uc_w1_sposobi_oplati_enable_list'))) {
        $uc_w1_payment_methods = array_intersect_key($parse_methods, array_flip(variable_get('uc_w1_sposobi_oplati_enable_list')));
        $output = array(
          'methods' => array(
            '#title' => check_plain(variable_get('uc_w1_description', '')),
            '#type' => variable_get('uc_w1_theme_list', 'select'),
            '#options' => $uc_w1_payment_methods,
          ),
        );
        if (isset($_SESSION['uc_w1_payment_method'])) {
          unset($_SESSION['uc_w1_payment_method']);
        }
      }
      else {
        $output = array(
          'methods' => array(
            '#description' => variable_get('uc_w1_description', ''),
            '#type' => 'item',
          ),
        );
      }
      return $output;

    case 'cart-process':
      if (variable_get('uc_w1_sposobi_oplati_enable')) {
        // If customer select Wallet One payment method
        // (e.g., credit cart,webmoney or something else),
        // it will be shown in order on admin pages.
        $_SESSION['uc_w1_payment_method'] = $form_state['values']['panes']['payment']['details']['methods'];
      }
      return TRUE;

    case 'settings':

      $form['uc_w1']['uc_w1_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Title for customer.'),
        '#default_value' => variable_get('uc_w1_title', t('Wallet One')),
      );
      $form['uc_w1']['uc_w1_description'] = array(
        '#type' => 'textfield',
        '#title' => t('Description for customer on checkout page.'),
        '#default_value' => variable_get('uc_w1_description', ''),
      );
      $form['uc_w1']['uc_w1_merchant_id'] = array(
        '#type' => 'textfield',
        '#title' => t('Wallet One ID'),
        '#description' => t('Enter your valid wallet one id.You can copy it from your setting here <a href="https://www.walletone.com/merchant/client" target="_blank">https://www.walletone.com/merchant/client</a>'),
        '#default_value' => variable_get('uc_w1_merchant_id', ''),
        '#required' => TRUE,
        '#size' => 50,
        '#maxlength' => 60,
      );
      $form['uc_w1']['uc_w1_secret_key'] = array(
        '#type' => 'textfield',
        '#title' => t('Wallet One Secret Key'),
        '#description' => t('Enter your valid wallet one secret key.You can copy it from your setting here <a href="https://www.walletone.com/merchant/client" target="_blank">https://www.walletone.com/merchant/client</a>'),
        '#default_value' => variable_get('uc_w1_secret_key', ''),
        '#required' => TRUE,
        '#size' => 50,
        '#maxlength' => 60,
      );
      $form['uc_w1']['uc_w1_signature_type'] = array(
        '#type' => 'select',
        '#title' => t('Signature type'),
        '#description' => t('Signature type - MD5 or SHA1. It must be equal with you setting.You can see it here <a href="https://www.walletone.com/merchant/client" target="_blank">https://www.walletone.com/merchant/client</a>'),
        '#default_value' => variable_get('uc_w1_signature_type', 'MD5'),
        '#required' => TRUE,
        '#options' => array(
          'MD5' => t('MD5'),
          'SHA1' => t('SHA1'),
        ),
      );
      $form['uc_w1']['uc_w1_currency'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter currency code (ISO_4217)'),
        '#description' => t('Enter currency code. Example: if yor shop uses russian ruble, enter 643.You can see this codes here <a href="http://en.wikipedia.org/wiki/ISO_4217#Active_codes" target="_blank">view codes</a>.Available codes you can see in <a href="http://www.walletone.com/ru/merchant/documentation/" target="_blank">Wallet One Api documentation</a>'),
        '#default_value' => variable_get('uc_w1_currency', 643),
        '#required' => TRUE,
        '#size' => 10,
        '#maxlength' => 10,
      );
      $form['uc_w1']['uc_w1_exp_date'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter lifetime for payment (days)'),
        '#description' => t('Enter how match days your customer can pay his order. Default: 30. Minimum: 1.'),
        '#default_value' => variable_get('uc_w1_exp_date', '30'),
        '#required' => TRUE,
        '#size' => 10,
        '#maxlength' => 10,
      );
      $form['uc_w1']['uc_w1_sposobi_oplati'] = array(
        '#type' => 'fieldset',
        '#title' => t('Payment methods settings'),
      );
      $form['uc_w1']['uc_w1_sposobi_oplati']['uc_w1_sposobi_oplati_enable'] = array(
        '#type' => 'checkbox',
        '#title' => t('Select payment method on your site.'),
        '#description' => t('If you want, customer will select payment method on your site, else on W1 site. Check this option, if you want this ability.'),
        '#default_value' => variable_get('uc_w1_sposobi_oplati_enable', FALSE),
      );
      $form['uc_w1']['uc_w1_sposobi_oplati']['uc_w1_theme_list'] = array(
        '#type' => 'select',
        '#title' => t('How to show methods for customer'),
        '#options' => array(
          'radios' => t('Radio buttons'),
          'select' => t('Select list'),
        ),
        '#states' => array(
          'visible' => array(
            'input[name="uc_w1_sposobi_oplati_enable"]' => array('checked' => TRUE),
          ),
        ),
        '#default_value' => variable_get('uc_w1_theme_list', 'select'),
      );
      $form['uc_w1']['uc_w1_sposobi_oplati']['uc_w1_sposobi_oplati_enable_container'] = array(
        '#type' => 'fieldset',
        '#title' => t('Payment methods list') . ' (' . count($parse_methods) . ')',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#states' => array(
          'visible' => array(
            'input[name="uc_w1_sposobi_oplati_enable"]' => array('checked' => TRUE),
          ),
        ),
      );
      $form['uc_w1']['uc_w1_sposobi_oplati']['uc_w1_sposobi_oplati_enable_container']['uc_w1_sposobi_oplati_enable_list'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Select which payment methods to enable for customer'),
        '#description' => t('Sometimes W1 can change list of this methods(add or remove).You can edit this in "payment_methods.ini" file in this module folder.Avaible methods, you can see here <a href="http://www.walletone.com/ru/merchant/documentation/" target="_blank">Wallet One Api documentation</a>If you want to rename title of each payment method,use second column of ini file.Also you can sort methods in this file.'),
        '#options' => $parse_methods,
        '#default_value' => variable_get('uc_w1_sposobi_oplati_enable_list', array()),
      );
      $form['uc_w1']['uc_w1_sposobi_oplati']['uc_w1_sposobi_oplati_disable'] = array(
        '#type' => 'checkbox',
        '#title' => t('Disable some payment methods.'),
        '#description' => t('You can disable some payment methods.'),
        '#default_value' => variable_get('uc_w1_sposobi_oplati_disable', FALSE),
        '#states' => array(
          'visible' => array(
            'input[name="uc_w1_sposobi_oplati_enable"]' => array('checked' => FALSE),
          ),
        ),
      );
      $form['uc_w1']['uc_w1_sposobi_oplati']['uc_w1_sposobi_oplati_disable_container'] = array(
        '#type' => 'fieldset',
        '#title' => t('Payment methods list') . ' (' . count($parse_methods) . ')',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#states' => array(
          'visible' => array(
            'input[name="uc_w1_sposobi_oplati_disable"]' => array('checked' => TRUE),
            'input[name="uc_w1_sposobi_oplati_enable"]' => array('checked' => FALSE),
          ),
        ),
      );
      $form['uc_w1']['uc_w1_sposobi_oplati']['uc_w1_sposobi_oplati_disable_container']['uc_w1_sposobi_oplati_disable_list'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Select which payment methods to disable for customer'),
        '#options' => $parse_methods,
        '#default_value' => variable_get('uc_w1_sposobi_oplati_disable_list', array()),
      );

      return $form;
  }
}

/**
 * Form to build the submission to Wallet One.
 *
 * @see uc_w1_uc_payment_method()
 *
 * @link http://www.walletone.com/ru/merchant/documentation/
 */
function uc_w1_form($form, &$form_state, $order) {
  $key = variable_get('uc_w1_secret_key', '');
  // Set default timezone for this module, Wallet One API needs this.
  date_default_timezone_set('UTC');
  $fields = array(
    'WMI_MERCHANT_ID' => variable_get('uc_w1_merchant_id', ''),
    'WMI_PAYMENT_AMOUNT' => number_format($order->order_total, 2, '.', ''),
    'WMI_EXPIRED_DATE' => str_replace('+00:00', '', date('c', mktime(date('H'), date('i'), date('s'), date('n'), date('d') + variable_get('uc_w1_exp_date', 30), date('Y')))),
    'WMI_CURRENCY_ID' => variable_get('uc_w1_currency', 643),
    'WMI_PAYMENT_NO' => $order->order_id,
    'WMI_DESCRIPTION' => 'BASE64:' . base64_encode(t('Payment for order') . ' ' . $order->order_id),
    'WMI_SUCCESS_URL' => url('uc_w1/success', array('absolute' => TRUE)),
    'WMI_FAIL_URL' => url('uc_w1/fail', array('absolute' => TRUE)),
  );
  if (variable_get('uc_w1_sposobi_oplati_enable') && in_array(TRUE, variable_get('uc_w1_sposobi_oplati_enable_list'))) {
    $fields['WMI_PTENABLED'] = $_SESSION['uc_w1_payment_method'];
  }
  elseif (variable_get('uc_w1_sposobi_oplati_disable') && in_array(TRUE, variable_get('uc_w1_sposobi_oplati_disable_list'))) {
    foreach (array_unique(variable_get('uc_w1_sposobi_oplati_disable_list')) as $method) {
      if ($method) {
        $fields['WMI_PTDISABLED'][] = $method;
      }
    }
  }
  foreach ($fields as $name => $val) {
    if (empty($val)) {
      drupal_set_message(t('An error occurred and processing did not complete. Notify the administrator about this error.'), 'error');
      return;
    }
    if (is_array($val)) {
      usort($val, 'strcasecmp');
      $fields[$name] = $val;
    }
  }
  uksort($fields, 'strcasecmp');
  $field_values = '';
  foreach ($fields as $value) {
    if (is_array($value)) {
      foreach ($value as $v) {
        $v = drupal_convert_to_utf8($v, "windows-1251");
        $field_values .= $v;
      }
    }
    else {
      $value = drupal_convert_to_utf8($value, 'windows-1251');
      $field_values .= $value;
    }
  }
  $signature = (variable_get('uc_w1_signature_type') == 'MD5') ? base64_encode(pack('H*', md5($field_values . $key))) : base64_encode(pack('H*', sha1($field_values . $key)));
  $fields['WMI_SIGNATURE'] = $signature;
  $form['#action'] = 'https://www.walletone.com/checkout/default.aspx';
  foreach ($fields as $name => $value) {
    if ($name != 'WMI_PTDISABLED') {
      $form[$name] = array(
        '#type' => 'hidden',
        '#value' => $value,
      );
    }
    else {
      foreach ($value as $val) {
        $form[] = array(
          '#type' => 'hidden',
          '#name' => 'WMI_PTDISABLED',
          '#value' => $val,
        );
      }
    }
  }

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit order'),
    '#name' => '',
  );
  $form['#after_build'][] = 'uc_w1_form_remove_id';

  return $form;
}

/**
 * Unset standart Drupal form_token, form_build_id, form_id.
 *
 * @see uc_w1_form()
 *
 * @link http://www.walletone.com/ru/merchant/documentation/
 */
function uc_w1_form_remove_id($form) {
  // It must be clean form for Wallet one API.
  unset($form['form_token'], $form['form_build_id'], $form['form_id']);

  return $form;
}
