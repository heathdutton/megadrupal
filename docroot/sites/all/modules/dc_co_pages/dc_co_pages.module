<?php
/**
 * @file
 * Custom checkout pages module for DrupalCommerce.
 *
 * Allows site administrators to easily add pages to the checkout process.
 *
 * NOTE:
 * commerce_checkout_builder_form()
 *  > commerce_checkout_pages()
 *    > $checkout_pages = module_invoke_all('commerce_checkout_page_info');
 *    > drupal_alter('commerce_checkout_page_info', $checkout_pages);
 */

/**
 * Implements hook_permission().
 */
function dc_co_pages_permission() {
  return array(
    'manage checkout pages' => array(
      'title' => t('Manage checkout pages'),
      'description' => t('Create, update, edit the checkout pages.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dc_co_pages_menu() {
  $items['admin/commerce/config/checkout/custom-pages'] = array(
    'title' => 'Checkout pages',
    'description' => 'Manage custom checkout pages',
    'access arguments' => array('manage checkout pages'),
    'file' => 'dc_co_pages.admin.inc',
    'page callback' => 'dc_co_pages_manage_callback',
    'weight' => 3,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/commerce/config/checkout/custom-pages/add'] = array(
    'title' => 'Add page',
    'access arguments' => array('manage checkout pages'),
    'file' => 'dc_co_pages.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dc_co_pages_edit_page_form'),
    'type' => MENU_LOCAL_ACTION,
  );

  $items['admin/commerce/config/checkout/custom-pages/%dc_co_pages_page/edit'] = array(
    'title' => 'Edit page',
    'access arguments' => array('manage checkout pages'),
    'file' => 'dc_co_pages.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dc_co_pages_edit_page_form', 5),
  );

  $items['admin/commerce/config/checkout/custom-pages/%dc_co_pages_page/delete'] = array(
    'title' => 'Delete page',
    'access arguments' => array('manage checkout pages'),
    'file' => 'dc_co_pages.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dc_co_pages_delete_page_form', 5),
  );

  return $items;
}

/**
 * Implements hook_commerce_checkout_page_info_alter().
 */
function dc_co_pages_commerce_checkout_page_info_alter(&$pages) {
  $custom_pages = dc_co_pages_get_pages();
  foreach (array_keys($pages) as $id) {
    if (isset($custom_pages[$id])) {
      if (!empty($custom_pages[$id]['title'])) {
        $pages[$id]['title']  = $custom_pages[$id]['title'];
      }
      $pages[$id]['weight'] = $custom_pages[$id]['weight'];
      unset($custom_pages[$id]);
    }
  }
  $pages += $custom_pages;
}

/**
 * Implements hook_theme().
 */
function dc_co_pages_theme() {
  $themes['dc_co_pages_manage_form'] = array(
    'render element' => 'form',
    'file' => 'dc_co_pages.admin.inc',
  );

  return $themes;
}

/**
 * Function to get custome pages.
 */
function dc_co_pages_get_pages() {
  static $items = array();

  if (empty($items)) {
    $q = db_select('dc_co_pages', 'dccop');
    $q->fields('dccop', array('id', 'title', 'help', 'weight', 'status_cart', 'buttons'));
    $q->orderBy('dccop.title');
    $q = $q->execute();
    while ($item = $q->fetchAssoc()) {
      $items[$item['id']] = $item + array('custom' => TRUE);
    }
  }

  return $items;
}

/**
 * Load a checkout page by ID.
 * @param string $id
 */
function dc_co_pages_page_load($id) {
  static $pages = array();

  if (!isset($pages[$id])) {
    // Get custom page properties from own table.
    $page = db_select('dc_co_pages', 'dccop');
    $page->fields('dccop', array('id', 'title', 'help', 'weight', 'status_cart', 'buttons'));
    $page->condition('id', $id);
    $page = $page->execute();
    $page = $page->fetchAssoc();
    
    // default pages
    $copages = commerce_checkout_pages();

    // the page is not in default pages, it's our custom page.
    if (!isset($copages[$id]) && !empty($page)) {
      $page['custom'] = TRUE;
    }
    // the page is not custom.
    else {
      // allow user override default-page title/help/weight.
      foreach (array('title', 'help', 'weight') as $k) {
        if (!empty($page[$k])) {
          $copages[$id][$k] = $page[$k];
        }
      }
      $page = $copages[$id];
    }
    
    // put page to static variable.
    $pages[$id] = $page;
  }

  return $pages[$id];
}

/**
 * Delete a checkout page.
 * @param array $page
 */
function dc_co_pages_page_save($page) {
  if (!isset($page['id'])) {
    $page['id'] = $page['page_id'];
  }
  $counter = db_query('SELECT 1 FROM {dc_co_pages} WHERE id = :id', array(':id' => $page['id']));
  $counter = $counter->fetchColumn();
  if ($counter) {
    return drupal_write_record('dc_co_pages', $page, array('id'));
  }

  return drupal_write_record('dc_co_pages', $page);
}

/**
 * Delete a checkout page.
 * @param array $page
 */
function dc_co_pages_page_delete($page) {
  $delete = db_delete('dc_co_pages');
  $delete->condition('id', $page['page_id']);
  $delete->execute();
}
