<?php

define('USERPOINTS_AUTOAPPROVE_PERIOD', 'userpoints_autoapprove_period');

/**
 * Implements hook_userpoints().
 */
function userpoints_autoapprove_userpoints($op, $points = 0, $uid = 0, $operation = '') {
  switch ($op) {
    case 'setting':
      $form['autoapprove'] = array(
        '#type' => 'fieldset',
        '#title' => t('Automatic approval'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#group' => 'settings_additional',
        '#weight' => 50,
      );

      $form['autoapprove'][USERPOINTS_AUTOAPPROVE_PERIOD] = array(
        '#type' => 'textfield',
        '#title' => t('Time until automatic approval'),
        '#description' => t('Specify the time duration (in hours) that must elapse before the !points transaction is automatically approved. Entering a negative number will disable auto-approval.', userpoints_translation()),
        '#default_value' => variable_get(USERPOINTS_AUTOAPPROVE_PERIOD, 0),
        '#size' => 10,
        '#maxlength' => 8,
      );

    return $form;
  }
}

/**
 * Implements hook_cron().
 */
function userpoints_autoapprove_cron() {
  if (variable_get(USERPOINTS_AUTOAPPROVE_PERIOD, 0) > 0) {
    $check_timestamp = REQUEST_TIME - (variable_get(USERPOINTS_AUTOAPPROVE_PERIOD, 0) * 60 * 60);
    $result = db_query_range("SELECT txn_id FROM {userpoints_txn} WHERE time_stamp < :timestamp AND status = :status", 0, 20, array(
      ':timestamp' => $check_timestamp,
      ':status' => USERPOINTS_TXN_STATUS_PENDING,
    ));
   foreach ($result->fetchCol() as $txn_id) {
      $params = array(
        'txn_id' => $txn_id,
        'status' => 0,
        'approver_uid' => 0
      );
      userpoints_userpointsapi($params);
    }
  }
}
