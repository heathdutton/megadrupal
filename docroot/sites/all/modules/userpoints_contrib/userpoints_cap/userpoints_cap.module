<?php

/**
 * @file
 * Userpoints Cap module.
 * Limit the number of points a user can earn.
 * @author Mike Smullin (http://www.mikesmullin.com), D6 update by fred0
 * @license GNU General Public License (http://www.gnu.org/copyleft/gpl.html)
 *
 * Updated to Drupal 7 by Bastlynn (bastlynn@gmail.com)
 */

/**
 * Implements hook_userpoints().
 */
function userpoints_cap_userpoints($op, $params = array()) {
  switch ($op) {
    case 'setting':
      $form['userpoints_cap'] = array(
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#title' => t('!Points cap', userpoints_translation()),
        '#group' => 'settings_additional',
        '#weight' => 25,
        '#attached' => array(
          'js' => array(
            'userpoints_cap' => drupal_get_path('module', 'userpoints_cap') . '/userpoints_cap.js',
          ),
        ),
      );
      $form['userpoints_cap']['userpoints_cap_enabled'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enabled by default'),
        '#default_value' => variable_get('userpoints_cap_enabled', TRUE),
        '#description' => t('If checked, all transactions will be checked for caps before awarding !points.', userpoints_translation()),
      );
      $categories = userpoints_get_categories();
      foreach ($categories as $tid => $category) {
        $form['userpoints_cap']['userpoints_cap_maximum_' . $tid] = array(
          '#type' => 'textfield',
          '#title' => t($category . ' category cap', userpoints_translation()),
          '#default_value' => variable_get('userpoints_cap_maximum_' . $tid, -1),
          '#description' =>  t('Maximum number of !points allowed for each user. Set to -1 to allow unlimted !points.', userpoints_translation()),
        );
        $form['userpoints_cap']['userpoints_cap_message_' . $tid] = array(
          '#type' => 'textarea',
          '#title' => t($category . ' category message', userpoints_translation()),
          '#default_value' => variable_get('userpoints_cap_message_' . $tid, 'You may not have more than !cap !points in the !Category category. You must use !points to earn more.'),
          '#description' => t('The message a user will see if they exceed the cap. Available replacement values include !Points, !points, !Point, !point !Category, !category, and !cap.'),
        );
      }
      return $form;
      break;
    case 'points before':
      if (variable_get('userpoints_cap_enabled', TRUE)) {
        $current_points = userpoints_get_current_points($params['uid'], $params['tid']);
        $categories = userpoints_get_categories();
        $category = $categories[$params['tid']];
        $new_points = $params['points'];
        $max_points = variable_get('userpoints_cap_maximum_' . $params['tid'], -1);
        if (($max_points != -1) && ($current_points + $new_points > $max_points)) {

          // Not using t() here is deliberate.
          // See conversation at: http://drupal.org/node/1133828
          $message = strtr(variable_get('userpoints_cap_message_' . $params['tid'], 'You may not have more than !cap !points in the !Category category. You must use !points to earn more.'),
            array_merge(userpoints_translation(), array(
              '!Category' => ucfirst($category),
              '!category' => $category,
              '!cap' => $max_points
            ))
          );
          // Do not allow the points transaction.
          drupal_set_message($message);
          return FALSE;
        }
        else {
          // OK to add points.
          return TRUE;
        }
      }
      break;
  }
}
