<?php

/**
 * @file
 * Schema definition of table that stores user login activity.
 */

/**
 * Implementation of hook_schema.
 */
function login_activity_schema() {
  $schema['login_activity'] = array(
    'description' => 'The table to store login activity of Drupal users.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for an activity (session).',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid corresponding to a session, or 0 for anonymous user.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'host_user_agent' => array(
        'description' => '$_SERVER["HOST_USER_AGENT"] string. This can be used with get_browser() in PHP.',
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
      'hostname' => array(
        'description' => 'The IP address that was used for this session.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'timestamp' => array(
        'description' => 'The UNIX timestamp when the session was started.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array(
      'aid',
    ),
    'indexes' => array(
      'aid' => array('aid'),
      'uid' => array('uid'),
      'timestamp' => array('timestamp'),
    ),
    'foreign keys' => array(
      'session_user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function login_activity_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    $requirements['login_activity_browscap'] = array(
      'title' => $t('Browscap data'),
    );
    
    if (module_exists('browscap')) {
      $requirements['login_activity_browscap']['value'] = $t('Browscap module installed');
      $requirements['login_activity_browscap']['severity'] = REQUIREMENT_OK;
    }
    else if (!ini_get('browscap')) {
      $requirements['login_activity_browscap']['value'] = $t('browscap.ini is not configured in php.ini.');
      $requirements['login_activity_browscap']['severity'] = REQUIREMENT_ERROR;
    }
    else {
      $requirements['login_activity_browscap']['value'] = $t('browscap.ini is configured in php.ini.');
      $requirements['login_activity_browscap']['severity'] = REQUIREMENT_OK;
    }
  }

  return $requirements;
}
