<?php

/**
 * Implements hook_uninstall().
 */
function video_recording_uninstall() {
  
  field_delete_instance('field_video_recording_title');
  
  field_delete_field('field_video_recording_title');

  
  // Loop over any field instances attached to the video_recording
  // entity type and delete them individually.
  // http://api.drupal.org/api/function/field_delete_field/7
  $instances = field_info_instances('video_recording', 'video_recording');
  
  //why isn't this working?
  //dsm($instances);
  
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Remove all video_recording variables.
  $variables = db_query("SELECT name FROM {variable} WHERE name LIKE 'video_recording_%'");
  foreach ($variables as $variable) {
    variable_del($variable->name);
  }
  
  $eids = array();
  $entities = db_query("SELECT video_recording_id FROM {video_recording}");
  foreach ( $entities as $entity ) {
    $eids[] = $entity->video_recording_id;
  }
  

  // Delete all the video_recordings at once
  entity_delete_multiple($eids);
}

/**
 * Implements hook_install().
 */
function video_recording_install() {
  video_recording_add_video_recording_title_field();
}


/**
 * Creates video_recording_title field if it doesn't exist
 */
function video_recording_add_video_recording_title_field() {
  
  // Create the 'field_video_recording_title' field if it doesn't already exist.
  if (!field_info_field('field_video_recording_title')) {
    $field = array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_video_recording_title',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => '1',
      'module' => 'text',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'text',
    );

     
    field_create_field($field);
    
    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_video_recording_title',
      'entity_type' => 'video_recording',
      'label' => t('Title'),
      'bundle' => 'video_recording',
      'required' => TRUE,
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => '-3',
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 1,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
    );
    field_create_instance($instance);
  } 
}



/**
 * Implements hook_schema().
 */
function video_recording_schema() {
  $schema = array();

  $schema['video_recording'] = array(
    'description' => 'The base table for video_recordings.',
    'fields' => array(
      'video_recording_id' => array(
        'description' => 'The primary identifier for the video_recording.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this video_recording.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the video_recording was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the video_recording was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'description' => array(
        'description' => 'video_recording description.',
        'type' => 'text',
      ),
    ),
    'primary key' => array('video_recording_id'),
  );

  return $schema;
}
