<?php

/**
 * @file
 * Enables the use of PHP code in menus
 */


/**
 * Implements hook_form_alter().
 */
function phpmenu_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'menu_edit_item' && user_access('execute php code in menu')) {

    $mlid = $form['mlid']['#value'];
    $phpmenu = variable_get('phpmenu', array());

    $form['menu']['phpmenu'] = array(
      '#type' => 'textarea',
      '#title' => 'PHP Code',
      '#default_value' => isset($phpmenu[$mlid]['phpmenu']) ? $phpmenu[$mlid]['phpmenu'] : '',
      '#description' => t('PHP code - <strong>do not include &lt;?php ?> tags</strong>. This code should return a value.'),
    );

    $form['menu']['phpmenu_override'] = array(
      '#type' => 'checkbox',
      '#title' => 'Override menu item',
      '#default_value' => isset($phpmenu[$mlid]['phpmenu_override']) ? $phpmenu[$mlid]['phpmenu_override'] : FALSE,
    );

    $form['menu']['phpmenu_position'] = array(
      '#type' => 'select',
      '#title' => 'Position',
      '#description' => t('Set here if PHP code should be printed before of after menu item.'),
      '#options' => array(0 => t('before'), 1 => t('after')),
      '#default_value' => isset($phpmenu[$mlid]['phpmenu_position']) ? $phpmenu[$mlid]['phpmenu_position'] : 1,
    );

    $form['#submit'][] = 'phpmenu_menu_edit_item_submit';
  }
}

/**
 * Implements hook_permission().
 */
function phpmenu_permission() {
  return array(
    'execute php code in menu' => array(
      'title' => 'execute PHP code',
      'description' => t('Allow users to run arbitrary PHP code in menus.'),
      'restrict access' => TRUE,
    )
  );
}


/**
 * Form submission handler for menu_edit_item.
 * @see phpmenu_form_alter()
 */
function phpmenu_menu_edit_item_submit($form, &$form_state) {

  $stored = variable_get('phpmenu', array());
  $mlid = $form_state['values']['mlid'];

  $stored[$mlid]['phpmenu'] = $form_state['values']['phpmenu'];
  $stored[$mlid]['phpmenu_override'] = $form_state['values']['phpmenu_override'];
  $stored[$mlid]['phpmenu_position'] = $form_state['values']['phpmenu_position'];

  variable_set('phpmenu', $stored);
}


/**
 * Implements hook_block_view_alter().
 */
function phpmenu_block_view_alter(&$data, $block) {
  if (!isset($data['content'])) {
    return;
  }
  if (is_array($data['content'])) {
    foreach ($data['content']  as $key => &$element) {
      if (is_array($element) && isset($element['#original_link'])) {

        $phpmenu = &drupal_static(__FUNCTION__);
        if (!isset($phpmenu)) {
          $phpmenu = variable_get('phpmenu', array());
        }

        if (array_key_exists($key, $phpmenu)) {
          $sub_menu = eval($phpmenu[$key]['phpmenu']);
          $sub_menu = array('#type' => 'markup', '#markup' => $sub_menu);
          $position = $phpmenu[$key]['phpmenu_position'] ? '#suffix' : '#prefix';
          if ($phpmenu[$key]['phpmenu_override']) {
            $position_children = $position == '#suffix' ? '#prefix' : '#suffix';
            $sub_menu[$position_children] = drupal_render($element['#below']);
            $element = $sub_menu;
          }
          else {
            $element[$position] = drupal_render($sub_menu);
          }

        }

      }
      if ($key == '#type' && $element == 'markup') {
        $data['content']['#markup'] = phpmenu_superfish_inject($data['content']['#markup']);
      }
    }
  }
  else {
    $data['content'] = phpmenu_superfish_inject($data['content']);
  }
}


/**
 * Inject php code in superfish html.
 */
function phpmenu_superfish_inject($content) {
  if (preg_match('/id="superfish-/', $content)) {

    $phpmenu = &drupal_static(__FUNCTION__);
    if (!isset($phpmenu)) {
      $phpmenu = variable_get('phpmenu', array());
    }

    preg_match_all('/<li id="menu-([^"]+)".+?>(.+?)<\/li>/', $content, $matches, PREG_SET_ORDER);
    foreach ($matches as $match) {
      if (strstr($match[1], '-')) {
        list($mlid, $mid) = explode('-', $match[1]);
        if (array_key_exists($mlid, $phpmenu)) {
          $sub_menu = eval($phpmenu[$mlid]['phpmenu']);
          if ($phpmenu[$mlid]['phpmenu_override']) {
            $lnk = preg_replace('/(^[^>]+>)([^<]+)(<\/a>)/', "$1$sub_menu$3", $match[2]);
            $content = str_replace($match[2], $lnk, $content);
          }
          else {
            if ($phpmenu[$mlid]['phpmenu_position']) {
              $content = str_replace($match[2], $sub_menu . $match[2], $content);
            }
            else {
              $content = str_replace($match[2], $match[2] . $sub_menu, $content);
            }
          }
        }
      }
    }
  }
  return $content;
}
