<?php

/*
 * Implement hook_install.
 */
function commerce_stock_notifications_install() {
  /*
   * Opted to use a MemoryQueue here to allow the queue to flush after each
   * execution even if there should be a failure.
   */
  variable_set('queue_class_commerce_stock_notifications', 'MemoryQueue');
}

/*
 * Implement hook_uninstall.
 */
function commerce_stock_notifications_uninstall() {
  variable_del('queue_class_commerce_stock_notifications');
  variable_del('commerce_stock_notifications');
}

/*
 * Implement hook_schema.
 */
function commerce_stock_notifications_schema(){

  $schema['commerce_stock_notifications'] = array(
    'description' => 'The base table for commerce stock notifications.',
      'fields' => array(
        'notification_id' => array(
          'description' => 'Unique identifier for notification request.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'product_id' => array(
          'description' => 'Product ID on notification request.',
          'type'  => 'int',
          'length' => 10,
        ),
        'email' => array(
          'description' => 'Email address to notify.',
          'type' => 'varchar',
          'length' => 254,
          'not null' => TRUE,
          'default' => '0',
        ),
        'context' => array(
          'description' => 'Context request was added from.',
          'type' => 'varchar',
          'length' => 60,
          'not null' => TRUE,
        ),
        'submit_time' => array(
          'description' => 'Time the notification request was submitted.',
          'type' => 'int',
          'length' => 11,
          'not null' => TRUE,
        ),
        'sent_time' => array(
          'description' => 'Time the notification was sent.',
          'type' => 'int',
          'length' => 11,
        ),
        'force_send' => array(
          'description' => 'Force notification send.',
          'type' => 'int',
          'size' => 'tiny',
          'default' => 0,
        ),
     ),
    'indexes' => array(
      'email' => array('email'),
      'product_id' => array('product_id'),
      'sent_time' => array('sent_time'),
      'force_send' => array('force_send'),
    ),
    'primary key' => array('notification_id'),
  );

  return $schema;
}

/**
 * Add force_send field to commerce_stock_notifications table.
 */
function commerce_stock_notifications_update_7100() {
  $spec = array(
    'type' => 'int',
    'size' => 'tiny',
    'description' => "Force notification send.",
    'default' => 0,
  );
  db_add_field( 'commerce_stock_notifications', 'force_send', $spec);
}
