<?php

/**
 * @file
 * Drupal module
 */

// Admin Settings and other CRUD operations URL.
define("MARK_AS_READ_ADMIN_URL", 'admin/config/user-interface/mark_as_read');

// Default marked as read class if nothing is provided on the Admin.
define("MARK_AS_READ_READ_DEFAULT_CLASS", 'marked-as-read');

// Default marked as unread class if nothing is provided on the Admin.
define("MARK_AS_READ_UNREAD_DEFAULT_CLASS", 'marked-as-unread');

// Default attribute name if nothing is provided.
define("MARK_AS_READ_DEFAULT_ATTRIBUTE_NAME", 'href');

// Load features related file if only features module exists.
if (module_exists('features')) {
  module_load_include('inc', 'mark_as_read', 'mark_as_read.features');
}

// Load DB operations file.
module_load_include('inc', 'mark_as_read', 'mark_as_read.db');

/**
 * Implements hook_menu().
 */
function mark_as_read_menu() {

  $items['mark_as_read/ajax/add/attribute'] = array(
    'page callback' => 'mark_as_read_add_attribute',
    'type' => MENU_CALLBACK,
    'access callback' => 'user_is_logged_in',
    'file' => 'mark_as_read.pages.inc',
  );

  $items[MARK_AS_READ_ADMIN_URL] = array(
    'title' => 'Mark as Read',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mark_as_read_admin_list_form'),
    'access arguments' => array('administer site configuration'),
    'description' => 'Mark as Read configuration',
    'weight' => -10,
    'file' => 'mark_as_read.admin.inc',
  );

  $items[MARK_AS_READ_ADMIN_URL . '/lists'] = array(
    'title' => 'Lists',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mark_as_read_admin_list_form'),
    'access arguments' => array('administer site configuration'),
    'description' => 'Lists all the Mark as Read List/Menu',
    'weight' => -5,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'mark_as_read.admin.inc',
  );

  $items[MARK_AS_READ_ADMIN_URL . '/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mark_as_read_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'file' => 'mark_as_read.admin.inc',
  );
  $items[MARK_AS_READ_ADMIN_URL . '/list/add'] = array(
    'title' => 'Add new List',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mark_as_read_admin_add_edit_form', NULL),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'mark_as_read.admin.inc',
  );

  $items[MARK_AS_READ_ADMIN_URL . '/list/%/delete'] = array(
    'title' => 'Delete List',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mark_as_read_delete_list_confirm', 5),
    'access arguments' => array('administer site configuration'),
    'file' => 'mark_as_read.admin.inc',
  );
  $items[MARK_AS_READ_ADMIN_URL . '/list/%/edit'] = array(
    'title' => 'Edit List',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mark_as_read_admin_add_edit_form', 5),
    'access arguments' => array('administer site configuration'),
    'file' => 'mark_as_read.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function mark_as_read_theme() {
  return array(
    'mark_as_read_lists_table' => array(
      'variables' => array('items' => NULL),
    ),
  );
}

/**
 * Load Javascript if only it needs to be, based on the admin settings.
 *
 * Implements hook_page_build().
 */
function mark_as_read_page_build() {

  if (user_is_logged_in()) {
    // Get all the list and let other modules modify.
    module_load_include('inc', 'mark_as_read', 'mark_as_read.pages');
    $lists = mark_as_read_get_lists();
    drupal_alter("mark_as_read_list", $lists);

    // Check if loading of the Javascript file is necessary.
    if (mark_as_read_is_js_required()) {
      mark_as_read_load_javascript($lists);
    }
  }
}

/**
 * Load all the required javascripts including Javasript settings.
 *
 * @param array $lists
 *   Array of list created in the Admin.
 */
function mark_as_read_load_javascript($lists) {
  drupal_add_js(drupal_get_path('module', 'mark_as_read') . '/js/mark_as_read.js');

  $admin_marked_as_read_class = variable_get('mark_as_read_read_class');
  $admin_marked_as_unread_class = variable_get('mark_as_read_unread_class');

  $marked_as_read_class = empty($admin_marked_as_read_class) ? MARK_AS_READ_READ_DEFAULT_CLASS : variable_get('mark_as_read_read_class');
  $marked_as_unread_class = empty($admin_marked_as_unread_class) ? MARK_AS_READ_UNREAD_DEFAULT_CLASS : variable_get('mark_as_read_unread_class');

  $js_settings = array(
    'allListsjson' => drupal_json_encode($lists),
    'setBold' => variable_get("mark_as_read_make_bold", 1),
    'markedAsReadClass' => $marked_as_read_class,
    'markedAsUnReadClass' => $marked_as_unread_class,
    'token' => drupal_get_token('user_token'),
  );

  drupal_add_js(array(
    'MarkAsRead' => $js_settings,
  ), 'setting');
}

/**
 * Check if JS file is required to render.
 *
 * Based on the list pages provided on the individual list and admin settings
 * decide whether to load the Javascript.
 *
 * As this is only for the optimization process. Even if javascript gets
 * loaded on every pages, it checks if any list provided on the admin exist
 * on the page or not.
 *
 * This helps in the optimization process by not loading the Javascript files
 * if its not required.
 *
 * We have 4 conditions to check the access upon. Precedence is in the same
 * order provided below.
 *  1. Hook implemented on other modules.
 *  2. User roles to list on admin(Admin Settings)
 *  3. Pages to list(Admin List Page)
 *  4. Pages to list except on listed pages(Admin settings)
 *
 * @return bool
 *   Returns boolean based on the various above conditions.
 */
function mark_as_read_is_js_required() {

  // Check if any module does not want javascript to load.
  $prevent = module_invoke_all('mark_as_read_prevent');
  // 1 means , other module does not want to load javascript.
  if (in_array("1", $prevent)) {
    return FALSE;
  }

  // Check if any user roles does not require mark_as_read behaviour.
  $roles = variable_get('mark_as_read_user_roles');
  $user_roles = array_keys($GLOBALS['user']->roles);
  if ($roles && count(array_intersect($roles, $user_roles))) {
    return FALSE;
  }

  // Get the list of pages where Js should load.
  $list_pages = variable_get('mark_as_read_list_pages');
  if (!empty($list_pages) &&  drupal_match_path($_GET['q'], $list_pages)) {
    return TRUE;
  }

  // Get the list of pages where Js should not load.
  $list_pages_except = variable_get('mark_as_read_except_pages');
  if (!empty($list_pages_except) &&  drupal_match_path($_GET['q'], $list_pages_except)) {
    return FALSE;
  }
  return TRUE;
}
