<?php
/**
 * @file
 * Verify Mark as Read behaves properly.
 */

/**
 * Class that contains all the test cases and setup.
 */
class MarkAsReadTestCase extends DrupalWebTestCase  {

  /**
   * Add the info for the test case.
   *
   * Provide the information of our test case API
   * which also gets displayed on the Test Suite.
   */
  public static function getInfo() {
    // Note: getInfo() strings are not translated with t().
    return array(
      'name' => 'Mark As Read Test Cases',
      'description' => 'Marks the link read/unread once clicked.',
      'group' => 'MarkAsRead',
    );
  }

  /**
   * Load required modules after Drupal bootstrap is created.
   *
   * @param array $modules
   *   Array of module name to enable/required.
   */
  public function setUp(array $modules = array()) {
    // Force simpletest to use existing database.
    parent::setUp('mark_as_read');
  }

  /**
   * Create and Login as Admin User.
   */
  protected function loginAsAdminUser() {
    $privileged_user = $this->drupalCreateUser(array('access administration pages'));
    return $this->drupalLogin($privileged_user);
  }

  /**
   * Creates and Logs as Authenticated User.
   */
  protected function loginAsAuthenticatedUser() {
    $privileged_user = $this->drupalCreateUser(array('access user profile'));
    $this->drupalLogin($privileged_user);
  }

  /**
   * Test add/edit on the admin.
   */
  protected function testAddEditListOnAdmin() {
    $this->loginAsAdminUser();
    $edit = array(
      'list_id' => NULL,
      'list_name' => 'Test List Name',
      'css_selector' => "Test Css Selector",
      'attribute_name' => "Test Attribute Name",
      'pages' => "Test Pages",
    );

    $this->drupalPost(MARK_AS_READ_ADMIN_URL . '/lists', $edit, t('Save'));
    $this->assertText(t("Data for <em>@name</em> successfully saved."), array('@name' => $edit['list_name']));

  }

  /**
   * Test add/edit on the admin.
   */
  protected function testAddAttributeValue() {
    // @todo test this.
  }

  /**
   * Test mark_as_read does not apply to the anonymous users.
   */
  protected function testAccess() {

  }
}
