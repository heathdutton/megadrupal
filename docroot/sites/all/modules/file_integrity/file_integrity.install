<?php
/**
 * @file
 * Schema and uninstall for the MD5 check Mk 2 module.
 */


/**
 * Implements hook_schema().
 *
 *  See issue #2556631 for why we use 255 as default for $maxpath.
 */
function file_integrity_schema() {
  $maxpath = variable_get('file_integrity_maxpath', 255);
  $schema['file_integrity_md5'] = array(
    'description' => 'Keeps track of paths and MD5 hashes.',
    'fields' => array(
      'fid' => array(
        'description' => 'The id of this fingerprint.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'path' => array(
        'description' => 'The full path of this file.',
        'type' => 'varchar',
        'length' => $maxpath,
        'not null' => FALSE,
      ),
      'md5hash' => array(
        'description' => 'The MD5 hash of this file.',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'updated' => array(
        'description' => 'The last time this file was updated.',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'cfound' => array(
        'description' => 'A boolean to indicate whether file is found during cron.',
        'type' => 'int',
        'default' => 0,
        'size' => 'tiny',
      ),
      'bfound' => array(
        'description' => 'A boolean to indicate whether file is found during batch.',
        'type' => 'int',
        'default' => 0,
        'size' => 'tiny',
      ),
    ),
    'indexes' => array(
        'path' => array('path'),
    ),
    'primary key' => array('fid'),
  );
  $schema['file_integrity_files'] = array(
    'description' => 'Keeps track of paths for cron run.',
    'fields' => array(
      'fid' => array(
        'description' => 'id of this file',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'path' => array(
        'description' => 'The full path of this file',
        'type' => 'varchar',
        'length' => '512',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('fid'),
  );
  $schema['file_integrity_log'] = array(
    'description' => 'Log messages from File integrity.',
    'fields' => array(
      'lid' => array(
        'description' => 'id of this log message',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'msg' => array(
        'description' => 'The log message',
        'type' => 'varchar',
        'length' => '512',
        'not null' => FALSE,
      ),
      'severity' => array(
        'type' => 'int',
        'default' => 0,
        'size' => 'tiny',
        'description' => 'RFC 3164 severity - same as watchdog.',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp when event occurred.',
      ),
    ),
    'primary key' => array('lid'),
  );
  return $schema;
}

/**
 * Implementation of hook_uninstall().
 */
function file_integrity_uninstall() {
  variable_del('file_integrity_masterswitch');
  variable_del('file_integrity_last');
  variable_del('file_integrity_startban');
  variable_del('file_integrity_endban');
  variable_del('file_integrity_batchsize');
  variable_del('file_integrity_filecount');
  variable_del('file_integrity_verbose');
  variable_del('file_integrity_email');
  variable_del('file_integrity_emailsent');
  variable_del('file_integrity_files');
  variable_del('file_integrity_last_fid');
}
