<?php

/**
 * @file
 * Install, and uninstall functions for the ubercart_funds module.
 */
function ubercart_funds_enable() {
  drupal_static_reset();
  /*commerce_product_configure_product_types();
  $payment_methods = commerce_payment_methods();*/
}

/**
 * Implements hook_install().
 */
function ubercart_funds_install() {
  $pcid = 'deposit';

  // Convert whitespace to underscores, and remove other non-alphanumeric characters.
  $pcid = preg_replace(array('/\s+/', '/\W/'), array('_', ''), strtolower('deposit'));

  $result = db_merge('uc_product_classes')
    ->key(array('pcid' => $pcid))
    ->fields(array(
      'name' => 'deposit',
      'description' => '',
    ))
    ->execute();

  db_update('node_type')
    ->fields(array(
      'name' => 'deposit',
      'description' => '',
    ))
    ->condition('type', $pcid)
    ->execute();

  uc_product_node_info(TRUE);

  if ($result == MergeQuery::STATUS_INSERT) {
    variable_set('node_options_' . $pcid, variable_get('node_options_product', array('status', 'promote')));

    if (module_exists('comment')) {
      variable_set('comment_' . $pcid, variable_get('comment_product', COMMENT_NODE_OPEN));
    }

    module_invoke_all('uc_product_class', $pcid, 'insert');
  }
  else {
    module_invoke_all('uc_product_class', $pcid, 'update');
  }

  node_types_rebuild();
  $type = node_type_get_type($pcid);
  node_add_body_field($type, t('Description'));
  uc_product_add_default_image_field($pcid);
  menu_rebuild();

}

/**
 * Implements hook_uninstall().
 */
function ubercart_funds_uninstall() {
  //delete the class
  $type = node_type_get_type('deposit');
  $type->base = 'node_content';
  $type->custom = 1;
  node_type_save($type);

  db_delete('uc_product_classes')
    ->condition('pcid', 'deposit')
    ->execute();
  module_invoke_all('uc_product_class', 'deposit', 'delete');
  uc_product_node_info(TRUE);
  node_types_rebuild();
  menu_rebuild();
  //delete the content type
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'deposit'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  node_type_delete('deposit');
}

/**
 * Implements hook_schema().
 */
function ubercart_funds_schema() {
  $schema['ubercart_funds_user_funds'] = array(
      'description' => 'User Funds',
      'fields' => array(
          'uid' => array(
              'description' => '',
              'type' => 'int',
              'not null' => TRUE,
              'default' => 0,
          ),
          'balance' => array(
              'description' => '',
              'type' => 'int',
              'size' => 'big',
              'not null' => TRUE,
              'default' => 0,
          ),
      ),
  );

  $schema['ubercart_funds_transactions'] = array(
      'description' => 'Transactions',
      'fields' => array(
          'transaction_id' => array(
              'description' => '',
              'type' => 'serial',
              'not null' => TRUE,
          ),
          'uid' => array(
              'description' => '',
              'type' => 'int',
              'not null' => TRUE,
              'default' => 0,
          ),
          'reference' => array(
              'description' => '',
              'type' => 'int',
              'not null' => FALSE,
              'default' => 0,
          ),
          'created' => array(
              'description' => '',
              'type' => 'int',
              'not null' => TRUE,
              'default' => 0,
          ),
          'amount' => array(
              'description' => '',
              'type' => 'int',
              'not null' => TRUE,
          ),
          'type' => array(
              'type' => 'varchar',
              'length' => 64,
              'not null' => TRUE,
              'description' => "",
          ),
          'notes' => array(
              'type' => 'varchar',
              'length' => 255,
              'not null' => TRUE,
              'description' => "",
          ),
      ),
      'primary key' => array(
          'transaction_id'
      )
  );

  $schema['ubercart_funds_withdraw_requests'] = array(
      'description' => 'Withdraw Requests',
      'fields' => array(
          'request_id' => array(
              'description' => '',
              'type' => 'serial',
              'not null' => TRUE,
          ),
          'uid' => array(
              'description' => 'the id of the user',
              'type' => 'int',
              'not null' => TRUE,
              'default' => 0,
          ),
          'created' => array(
              'description' => '',
              'type' => 'int',
              'not null' => TRUE,
              'default' => 0,
          ),
          'method' => array(
              'description' => '',
              'type' => 'varchar',
              'length' => 64,
              'not null' => TRUE,
              'description' => "",
          ),
          'amount' => array(
              'description' => 'the amount the user wants to withdraw',
              'type' => 'int',
              'not null' => TRUE,
          ),
          'status' => array(
              'description' => 'the status of the request',
              'type' => 'varchar',
              'length' => 64,
              'not null' => TRUE,
              'description' => "",
          ),
          'notes' => array(
              'description' => '',
              'type' => 'varchar',
              'length' => 255,
              'not null' => FALSE,
              'description' => "",
          ),
      ),
      'primary key' => array(
          'request_id'
      )
  );


  return $schema;
}