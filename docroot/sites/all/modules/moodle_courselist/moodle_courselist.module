<?php

/**
 * @file
 * Module for dynamic display of Moodle course memberships.
 * 
 * Note: Drupal username and Moodle username must be identical.
 */

/**
 * Query Moodle database for courses a user belongs to.
 *
 * @param string $username
 *   Drupal/Moodle user name
 *
 * @return array
 *   Array of data about each course
 */
function moodle_courselist_get_courselist($username) {

  $moodle_con = moodle_connector_connect();
  if (!$moodle_con) {
    return array();
  }

  // Get Moodle user id.
  $moodle_user_id = $moodle_con->query("SELECT id FROM {user} WHERE username = :username", array(
    ':username' => $username,
  ))->fetchField();

  // Exit if user is not available in Moodle.
  if (!$moodle_user_id) {
    return array();
  }

  // Moodle context. 50 = course.
  $moodle_context_level = 50;

  $query = "SELECT {course}.id, {course}.fullname
            FROM {course}
              INNER JOIN {context} ON {course}.id = {context}.instanceid
                AND {context}.contextlevel = :contextlevel
              INNER JOIN {role_assignments} ON {context}.id = {role_assignments}.contextid
              INNER JOIN {role} ON {role_assignments}.roleid = {role}.id
              INNER JOIN {user} ON {role_assignments}.userid = {user}.id
            WHERE {user}.id = :userid";

  $res = $moodle_con->query($query, array(
    ':contextlevel' => $moodle_context_level,
    ':userid'       => $moodle_user_id,
  ));
  if (!$res) {
    return array();
  }
  return $res->fetchAll();
}

/**
 * Implements hook_block_info().
 */
function moodle_courselist_block_info() {
  $blocks['moodle'] = array(
    'info' => t('Moodle Courses'),
  );
  return $blocks;
}

/**
 * Implements hook_permission().
 */
function moodle_courselist_permission() {
  return array(
    'view moodle courselist' => array(
      'title' => t('View Moodle course list'),
      'description' => t('View the courses of a remote Moodle installation'),
    ),
  );
}

/**
 * Sanitize an array of course data and transform IDs to URLs.
 *
 * @param array $courses
 *   Array of courses
 *
 * @return array
 *   Array of links to courses
 */
function moodle_courselist_make_links($courses) {
  $url_to_moodle = variable_get('moodle_connector_url');
  $options = array();
  $target = variable_get('moodle_courselist_target', '');
  if ($target) {
    $options = array(
      'attributes' => array(
        'target' => $target,
      ),
    );
  }

  $courses_array = array();
  if ($url_to_moodle) {
    foreach ($courses as $c) {
      $url = $url_to_moodle . "/course/view.php?id=" . $c->id;
      $courses_array[] = l($c->fullname, $url, $options);
    }
  }
  return $courses_array;
}

/**
 * Implements hook_block_view().
 */
function moodle_courselist_block_view($delta = '') {

  if (!user_access('view moodle courselist')) {
    return;
  }
  global $user;

  // If the user is unauthenticated but has the permission set, list courses
  // for the Moodle user 'Anonymous'.
  $username = $user->uid != 0 ? $user->name : 'Anonymous';

  $courses = moodle_courselist_make_links(moodle_courselist_get_courselist($username));

  $blocks['subject'] = t('Moodle Courses');
  $blocks['content'] = theme('moodle_courselist', array('courses' => $courses));

  return $blocks;
}

/**
 * Implements hook_theme().
 */
function moodle_courselist_theme() {
  return array(
    'moodle_courselist' => array(
      'variables' => array('courses' => array()),
    ),
  );
}

/**
 * Theme function for theming course list.
 *
 * @param array $variables
 *   Array of theme variables for courses.
 *
 * @return string
 *   An HTML themed list of links to the courses.
 */
function theme_moodle_courselist($variables) {

  $courses = $variables['courses'];
  if (empty($courses)) {
    return '<div class="moodle_courselist-courses moodle_courselist-courses-empty"></div>';
  }

  $output  = '<div class="moodle_courselist-courses">';
  $output .= theme('item_list', array(
    'items' => $courses,
    'type'  => 'ul',
  ));
  $output .= '</div>';

  return $output;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function moodle_courselist_form_moodle_connector_admin_settings_alter(&$form, &$form_state, $form_id) {

  // Moodle Course List default link target.
  $form['moodle_courselist_target'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Link target attribute'),
    '#default_value' => variable_get('moodle_courselist_target', ''),
    '#description'   => t("The target for links in Moodle Course List. Common values for this field are empty (default) or '_blank' (to open the course in a new window). It's also useful if using an iframe."),
    '#size'          => 20,
    '#required'      => FALSE,
  );
}
