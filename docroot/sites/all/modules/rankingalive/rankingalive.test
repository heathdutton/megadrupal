<?php

/**
 * @file
 * Test file for rankingalive module.
 */

/**
 * Test case for Rankingalive.
 */
class RankingaliveTest extends DrupalWebTestCase {
  /**
   * Ranking Alive testing ID
   *
   * @var string
   */
  protected $id = '0123456789012345678901234567890123456789';

  /**
   * Define the Js file name
   *
   * @var string
   */
  protected $jsFile = 'track.rankingalive.com/track.js';

  /**
   * Get information about the web test case.
   */
  public static function getInfo() {
    return array(
      'name' => t('Ranking Alive tests'),
      'description' => t('Test basic functionality of Ranking Alive module.'),
      'group' => 'Ranking Alive',
    );
  }

  /**
   * Enables modules and create user with specific permissions.
   */
  public function setUp() {
    parent::setUp('rankingalive');

    $permissions = array(
      'access administration pages',
      'administer rankingalive',
    );

    // Create and authenticate a user with permissions.
    $this->admin_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->admin_user);

    // Define Ranking Alive ID.
    variable_set('rankingalive_id', $this->id);
  }

  /**
   * Test the admin form settings.
   */
  public function testRankingAliveConfiguration() {
    // Check for setting page's presence.
    $this->drupalGet('admin/config/system/rankingalive');
    $this->assertRaw(t('Ranking Alive ID'), '[testRankingAliveConfiguration]: Settings page displayed');
  }

  /**
   * Test if the script is injected on all pages excepted those listed.
   */
  protected function testRankingAlivePageVisibilityAllExcepted() {
    // Show tracking on "every page except the listed pages".
    variable_set('rankingalive_visibility_pages', 0);
    // Disable tracking on "admin*" pages only.
    variable_set('rankingalive_pages', "admin\nadmin/*");

    // Test whether tracking code is included on pages.
    $this->drupalGet('');
    $this->assertRaw($this->id, '[testRankingAlivePageVisibilityAllExcepted]: Tracking code is displayed on page.');
    $this->assertRaw($this->jsFile, '[testRankingAlivePageVisibilityAllExcepted]: Tracking script is injected in the page.');

    // Test whether tracking code is not included on pages to omit.
    $this->drupalGet('admin');
    $this->assertNoRaw($this->id, '[testRankingAlivePageVisibilityAllExcepted]: Tracking code is not displayed on admin page.');
    $this->assertNoRaw($this->jsFile, '[testRankingAlivePageVisibilityAllExcepted]: Tracking script is not injected in admin page.');

    // Test whether tracking code is not included on sub-pages to omit.
    $this->drupalGet('admin/config/system');
    $this->assertNoRaw($this->id, '[testRankingAlivePageVisibilityAllExcepted]: Tracking code is not displayed on admin subpage.');
    $this->assertNoRaw($this->jsFile, '[testRankingAlivePageVisibilityAllExcepted]: Tracking script is not injected in admin subpage.');
  }

  /**
   * Test if the script is only injected on desired pages.
   */
  protected function testRankingAlivePageVisibilityListedExcepted() {
    // Show tracking on "listed pages".
    variable_set('rankingalive_visibility_pages', 1);
    // Enable tracking on "<front>*" pages only.
    variable_set('rankingalive_pages', "<front>");

    // Test whether tracking code is included on pages.
    $this->drupalGet('');
    $this->assertRaw($this->id, '[testRankingAlivePageVisibilityListedExcepted]: Tracking code is given to the script.');
    $this->assertRaw($this->jsFile, '[testRankingAlivePageVisibilityListedExcepted]: Tracking script is injected in the page.');

    // Test whether tracking code is not included on pages not listed.
    $this->drupalGet('user');
    $this->assertNoRaw($this->id, '[testRankingAlivePageVisibilityListedExcepted]: Tracking code is not displayed in users page.');
    $this->assertNoRaw($this->jsFile, '[testRankingAlivePageVisibilityListedExcepted]: Tracking script is not injected in users page.');
  }
}
