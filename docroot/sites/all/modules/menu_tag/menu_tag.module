<?php

/**
 * @file
 * This module adds menu tag for each menu item. It then allows adminisitrator 
 * to filter menu items in menu blocks and main and secondary menu.
 */

/**
 * Implements hook_menu().
 */
function menu_tag_menu() {
  $items['menu_tag/autocomplete'] = array(
    'title' => 'Menu tag autocomplete',
    'page callback' => 'menu_tag_autocomplete',
    'access callback' => 'user_access',
    'access arguments' => array('administer menu'),
    'type' => MENU_CALLBACK,
    'file' => 'menu_tag.pages.inc',
  );
  
  return $items;
}

/**
 * Implements hook_theme().
 */
function menu_tag_theme() {
  return array(
    'menu_tag_menu_overview_form' => array(
      'file' => 'menu_tag.forms.inc',
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_block_view_alter().
 */
function menu_tag_block_view_alter(&$data, $block) {
  if (empty($data['content'])) {
    return;
  }
  
  if ($block->module == 'menu' || $block->module == 'menu_block') {
    module_load_include('inc', 'menu_tag', 'menu_tag.db');
    if ($menu_tag = menu_tag_db_load_menu_tag($block->delta)) {
      // If we have defined menu tag for this menu block lets filter it.
      module_load_include('inc', 'menu_tag');
      if ($block->module == 'menu') {
        menu_tag_filter_menu_items($block->delta, $data['content'], $menu_tag);
      }
      elseif ($block->module == 'menu_block') {
        menu_tag_filter_menu_items($data['content']['#config']['menu_name'], $data['content']['#content'], $menu_tag);
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds menu tag option to the edit menu item form.
 *
 * @see menu_tag_menu_item_form_alter()
 * @see menu_tag_menu_item_form_submit()
 */
function menu_tag_form_menu_edit_item_alter(&$form, $form_state) {
  module_load_include('inc', 'menu_tag', 'menu_tag.forms');
  menu_tag_menu_item_form_alter($form);
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Adds menu tag option to the node's edit menu item form.
 *
 * @see menu_tag_menu_item_form_alter()
 */
function menu_tag_form_node_form_alter(&$form, $form_state) {
  if (isset($form['menu'])) {
    module_load_include('inc', 'menu_tag', 'menu_tag.forms');
    menu_tag_menu_item_node_form_alter($form);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Adds menu tag option to the node's edit menu item form.
 */
function menu_tag_form_menu_overview_form_alter(&$form, $form_state) {
  module_load_include('inc', 'menu_tag', 'menu_tag.forms');
  menu_tag_menu_overview_form_alter($form);
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Adds menu tag option to the menu configure form - user can define which
 * menu tags to use for main and secondary menu.
 */
function menu_tag_form_menu_configure_alter(&$form, $form_state) {
  module_load_include('inc', 'menu_tag', 'menu_tag.forms');
  menu_tag_menu_configure_form_alter($form);
}

/**
 * Implements hook_form_alter().
 */
function menu_tag_form_alter(&$form, $form_state) {
  if ($form['#form_id'] == 'block_admin_configure'
      && ($form['module']['#value'] == 'menu'
          || $form['module']['#value'] == 'menu_block')
      ) {
    module_load_include('inc', 'menu_tag', 'menu_tag.forms');
    menu_tag_menu_block_form_alter($form);
  }
}

/**
 * Implements hook_node_insert().
 * 
 * We can not add submit handler in menu_tag_menu_item_node_form_alter() becase
 * new menu item will be created in hook_node_insert, and our submit handler
 * will run before it - which means we do not have mlid.
 * 
 * @see menu_node_insert()
 */
function menu_tag_node_insert($node) {
  // First check do we have menu item defined.
  if (isset($node->menu) && $node->menu['mlid']) {
    module_load_include('inc', 'menu_tag', 'menu_tag.db');
    menu_tag_db_save_menu_item_tag($node->menu['mlid'], $node->menu['menu_tag']);
    menu_tag_db_cache_clear($node->menu['menu_name']);
  }
}

/**
 * Implements hook_node_update().
 * 
 * Same like for hook_node_insert().
 * 
 * @see menu_node_update()
 */
function menu_tag_node_update($node) {
  // First check do we have menu item defined.
  if (isset($node->menu) && $node->menu['mlid']) {
    module_load_include('inc', 'menu_tag', 'menu_tag.db');
    menu_tag_db_save_menu_item_tag($node->menu['mlid'], $node->menu['menu_tag']);
    menu_tag_db_cache_clear($node->menu['menu_name']);
  }
}

/**
 * Implements hook_menu_link_delete().
 * 
 * Delete menu tag for this link and also clears menu tag cache for this menu.
 */
function menu_tag_menu_link_delete($link) {
  module_load_include('inc', 'menu_tag', 'menu_tag.db');
  menu_tag_db_delete_menu_item_tag($link['mlid']);
  menu_tag_db_cache_clear($link['menu_name']);
}

/**
 * Implements template_preprocess_page().
 * 
 * Main and secondary menu are special case which we need to handle here.
 * 
 * @see template_preprocess_page()
 */
function menu_tag_preprocess_page(&$vars) {
  // There is no way to alter creation of main and secondary menu - we need to 
  // render it again with coresponding menu tag filter.
  if (variable_get('menu_tag_main_menu', 'main-menu') != 'no-filter') {
    module_load_include('inc', 'menu_tag');
    $vars['main_menu'] = theme_get_setting('toggle_main_menu') ? menu_tag_main_menu() : array();
  }
  if (variable_get('menu_tag_secondary_menu', 'main-menu') != 'no-filter') {
    module_load_include('inc', 'menu_tag');
    $vars['secondary_menu'] = theme_get_setting('toggle_secondary_menu') ? menu_tag_secondary_menu() : array();
  }
}

/* Helpers */


