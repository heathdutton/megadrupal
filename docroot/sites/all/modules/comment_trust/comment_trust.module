<?php

/**
 * Implements hook_menu().
 */
function comment_trust_menu() {
  $items['admin/content/comment/comment_trust'] = array(
    'title' => 'Comment Trust',
    'access arguments' => array('administer comments'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('comment_trust_settings'),
    'file' => 'comment_trust.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  return $items;
}

/**
 * Implements hook_comment_presave().
 */
function comment_trust_comment_presave($comment) {
   // Skip if editing a comment.
   if (!empty($comment->cid)) {
     return;
   }

   // Skip if permissions allow auto-approval.
   if (user_access('skip comment approval')) {
     return;
   }

   // If user is anonymous, use the comment email. Otherwise, get email from
   // user object.
   $email = user_is_anonymous() ? $comment->mail : $GLOBALS['user']->mail;

   // Skip if email isn't available.
   if (empty($email)) {
     return;
   }

   // Skip if email is excluded from auto-approval.
   $exclude = variable_get('comment_trust_exclude', '');
   if (drupal_match_path($email, $exclude)) {
     return;
   }

   // Get number of published comments for this email. If user is anonymous,
   // check email against comments table. Otherwise, check against users table.
   $query = db_select('comment', 'c')->condition('c.status', COMMENT_PUBLISHED);
   if (user_is_anonymous()) {
     $query->condition('c.mail', $email);
   }
   else {
     $query->join('users', 'u', 'c.uid = u.uid');
     $query->condition('u.mail', $email);
   }
   $num_published = $query->countQuery()->execute()->fetchField();

   // If the threshold is met, then publish the comment.
   if ($num_published >= variable_get('comment_trust_threshold', 1)) {
     $comment->status = COMMENT_PUBLISHED;
   }
 }
