<?php

/**
 * Implements hook_menu
 * @return array Menu Items
 */
function fcf_menu() {
  $items['admin/config/search/fcf'] = array(
    'title' => 'First Click Free',
    'description' => 'Configure the First Click Free role.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fcf_settings'),
    'access arguments' => array('administer users'),
  );
  return $items;
}


/**
 * Implments hook_boot.
 * @return [type] [description]
 */
function fcf_boot() {
  global $user;
  /* if user is anonymous and we are coming from Google, add to $user a special role
     to let him see the article.
     Parse referrer to check if click comes from Google.
     As per http://tinyurl.com/2jtwoc, check http://*.google.*
  */
  $host = parse_url($_SERVER['HTTP_REFERER'], PHP_URL_HOST); // subdomain.google.com
  
  $parts = array_reverse(explode('.', $host)); // (com, google, subdomain)
  // Make sure we have at least 3 parts to avoid undefined array key notices.
  while (count($parts) < 3) {
    $parts[] = '';
  }
  list($tld, $domain, $subdomain) = $parts; 
  if (variable_get('fcf_debug', 0) || $user->uid == 0 && $domain == "google" ) {
    // fetch special role using rid from settings. default to 1 = anonymous user rid. We have to query the database directly rather than using an API function because we're not yet fully bootstrapped.
    $role = db_select('role', 'r')->fields('r')->condition('rid', variable_get('fcf_rid', 1))->execute()->fetchObject();
    if ($role) { // should be always true, but we check nevertheless to avoid errors
      $user->roles[$role->rid] = $role->name;
    }
  }
}


/**
 * FCF Settings Page Callback.
 * @return form FCF Settings Form
 */
function fcf_settings() {
  $roles = user_roles(TRUE); // first argument TRUE excludes anonymous role from listing
  $form['fcf_rid'] = array(
      '#type' => 'select',
      '#title' => t('Extra Role for Referred users'),
      '#description' => t('Anonymous Users referred from Google domains will be granted this role.'),
      '#default_value' => variable_get('fcf_rid', 1),
      '#options' => $roles,
    );
  $form['fcf_debug'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable debug mode.'),
      '#description' => t('Debug mode grants the above role for all users, regardless of the referring domain.'),
      '#default_value' => variable_get('fcf_debug', 0),
    );
  return system_settings_form($form);
}

