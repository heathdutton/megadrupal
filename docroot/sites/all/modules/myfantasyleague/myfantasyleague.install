<?php

/**
 * @file
 * MyFantasy League module install/uninstall/schema hooks.
 */

/**
 * Implements hook_schema().
 */
function myfantasyleague_schema() {
  $schema['myfantasyleague_users'] = array(
    'description' => 'Stores MyFantasyLeague league information for users.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The user\'s uid.',
      ),
      'league_id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The league ID.',
      ),
      'league_year' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The league year.',
      ),
    ),
    'primary key' => array('uid'),
  );
  $schema['myfantasyleague_standings_columns'] = array(
    'description' => 'Stores MyFantasyLeague standings columns such as W-L-T, Avg PF, etc.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The user\'s uid.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The name of the column.',
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
        'size' => 'tiny',
        'description' => 'The status of the standings column.',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The weight of standings column.',
      ),
    ),
    'primary key' => array('uid', 'name'),
    'indexes' => array(
      'status_weight' => array('status', 'weight'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function myfantasyleague_install() {
  // Create a custom menu for MyFantasyLeague.
  $t = get_t();
  $id = db_insert('menu_custom')
  ->fields(array(
    'menu_name' => 'myfantasyleague',
    'title' => $t('MyFantasyLeague'),
    'description' => $t('MyFantasyLeague menu that contains links to standings and weekly results.'),
  ))
  ->execute();
}

/**
 * Implements hook_uninstall().
 */
function myfantasyleague_uninstall() {
  // Delete custom menu set by this module.
  db_delete('menu_custom')
  ->condition('menu_name', 'myfantasyleague')
  ->execute();

  // Clear everything in the cache from this module.
  cache_clear_all('myfantasyleague', 'cache', TRUE);

  // Delete database tables.
  drupal_uninstall_schema('myfantasyleague');
}

/**
 * Adds the myfantasyleague_standings_columns table and populates it.
 */
function myfantasyleague_update_7002() {
  $schema = array(
    'description' => 'Stores MyFantasyLeague standings columns such as W-L-T, Avg PF, etc.',
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Primary Key',
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
        'size' => 'tiny',
        'description' => 'The status of the standings column. (1 = enabled, 0 = disabled)',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Weight of standings column to use when listing.',
      ),
    ),
    'primary key' => array('name'),
    'indexes' => array(
      'status_weight' => array('status', 'weight'),
    ),
  );
  db_create_table('myfantasyleague_standings_columns', $schema);

  // Insert initial values to myfantasyleague_standings_columns table.
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Team', 'weight' => 0))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'W-L-T', 'weight' => 1))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Div W-L-T', 'status' => 0, 'weight' => 2))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Conf W-L-T', 'status' => 0, 'weight' => 3))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'All Play W-L-T', 'status' => 0, 'weight' => 4))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Pts For', 'weight' => 5))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Avg Pts For', 'status' => 0, 'weight' => 6))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Pts Against', 'weight' => 7))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Avg Pts Against', 'status' => 0, 'weight' => 8))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Max Pts Against', 'status' => 0, 'weight' => 9))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Min Pts Against', 'status' => 0, 'weight' => 10))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Streak', 'status' => 0, 'weight' => 11))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Potential Pts', 'status' => 0, 'weight' => 12))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Blind Bidding', 'status' => 0, 'weight' => 13))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Off Pts', 'status' => 0, 'weight' => 14))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Def Pts', 'status' => 0, 'weight' => 15))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Power Rank', 'status' => 0, 'weight' => 16))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Acct Balance', 'status' => 0, 'weight' => 17))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Salary', 'status' => 0, 'weight' => 18))
  ->execute();
  db_insert('myfantasyleague_standings_columns')
  ->fields(array('name' => 'Victory Pts', 'status' => 0, 'weight' => 19))
  ->execute();

  // Create a custom menu for MyFantasyLeague.
  if (db_table_exists('menu_custom') && !db_query("SELECT menu_name FROM {menu_custom} WHERE menu_name = :menu_name", array(':menu_name' => 'myfantasyleague'))->fetchField()) {
    $t = get_t();
    $id = db_insert('menu_custom')
    ->fields(array(
      'menu_name' => 'myfantasyleague',
      'title' => $t('MyFantasyLeague'),
      'description' => $t('MyFantasyLeague menu that contains links to standings and weekly results.'),
    ))
    ->execute();
  }
}

/**
 * Updates for version 2.0.
 */
function myfantasyleague_update_7200() {
  // Update the schema.
  db_add_field('myfantasyleague_standings_columns', 'uid', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'The user\'s uid.',
  ));
  db_drop_primary_key('myfantasyleague_standings_columns');
  db_add_primary_key('myfantasyleague_standings_columns', array('uid', 'name'));
  $schema['myfantasyleague_users'] = array(
    'description' => 'Stores MyFantasyLeague league information for users.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The user\'s uid.',
      ),
      'league_id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The league ID.',
      ),
      'league_year' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The league year.',
      ),
    ),
    'primary key' => array('uid'),
  );
  db_create_table('myfantasyleague_users', $schema['myfantasyleague_users']);

  // Copy old variables into the myfantasyleague_users table, then delete the variables.
  if (is_numeric(variable_get('myfantasyleague_league_id')) && is_numeric(variable_get('myfantasyleague_year'))) {
    db_insert('myfantasyleague_users')
    ->fields(array(
      'uid' => 0,
      'league_id' => variable_get('myfantasyleague_league_id'),
      'league_year' => variable_get('myfantasyleague_year'),
    ))
    ->execute();
    variable_del('myfantasyleague_league_id');
    variable_del('myfantasyleague_year');
  }

  // Clear everything in the cache because cache variable names are different.
  cache_clear_all('myfantasyleague', 'cache', TRUE);

  return TRUE;
}
