<?php

/**
 * Implements hook_menu()
 */
function simple_nodeblock_menu() {
  $items = array();

  $items['admin/config/content/simple_nodeblock'] = array(
    'title' => 'Simple node block',
    'description' => 'Configure simple node block module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simple_nodeblock_config_form'),
    'access arguments' => array('administer site configuration')
  );

  return $items;
}

/**
 * FAPI callback that generates configuration form
 *
 * @param array $form
 * @param array $form_state
 * @return array
 */
function simple_nodeblock_config_form(array $form, array &$form_state) {

  $types = node_type_get_names();

  $form['simple_nodeblock_type'] = array(
    '#title' => t('Node type'),
    '#description' => t('Select node type that will be turned into blocks'),
    '#type' => 'radios',
    '#options' => $types,
    '#default_value' => variable_get('simple_nodeblock_type')
  );

  return system_settings_form($form);
}

/**
 * Implements hook_block_info()
 *
 * @return array
 */
function simple_nodeblock_block_info() {
  // Make sure the node type is selected
  $type = variable_get('simple_nodeblock_type', FALSE);

  if (!$type)
    return;

  $blocks = array();

  // Get all nodes of a specified content type
  $query = $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $type);

  $result = $query->execute();

  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $nodes = entity_load('node', $nids);

    foreach($nodes as $nid => $node) {
      $blocks[$nid] = array(
        'info' => t('Simple nodeblock: @title', array('@title' => $node->title)),
      );

    }
  }

  return $blocks;
}

/**
 * Implements hook_block_view()
 *
 * @param string $delta
 * @return array
 */
function simple_nodeblock_block_view($delta = false) {
  $block = array();

  if (!$delta)
    return $block;

  $node = node_load($delta);
  if (!empty($node) && $node->status) {
    $block['content'] = node_view($node);
  }

  return $block;
}