<?php

/**
 * @file
 * Test cases for testing the Skype Status module.
 */

class SkypeStatusWebTestCase extends DrupalWebTestCase {
  protected $basic_user;
  protected $privileged_user;

  /**
   * Enable modules and create user with specific permissions.
   */
  function setUp() {
    parent::setUp('skype_status');
    $this->basic_user = $this->drupalCreateUser(array(
      'access content'
    ));
    $this->privileged_user = $this->drupalCreateUser(array(
      'access content',
      'administer users',
      'administer blocks',
      'administer skype status',
    ));
  }
}

class SkypeStatusBlockTestCase extends SkypeStatusWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Block',
      'description' => 'Test Skype status information in the provided block.',
      'group' => 'Skype Status',
    );
  }

  /**
   * Login user and test Skype status functionality in block
   * through the admin and user interfaces.
   */
  function testBlock() {
    // Login the admin user.
    $this->drupalLogin($this->privileged_user);

    // Find the block in the settings page.
    $this->drupalGet('admin/structure/block');
    $this->assertRaw(t('Skype status'), t('Block found.'));

    // Verify that block is not shown.
    $this->drupalGet('/');
    $this->assertNoRaw(t('Skype status'), t('Block not found.'));

    // Enable the block and verify.
    $this->drupalPost('admin/structure/block', array('blocks[skype_status_button][region]' => 'sidebar_first'), t('Save blocks'));
    $this->assertFieldByName('blocks[skype_status_button][region]', 'sidebar_first', t('Block is enabled in first sidebar.') );

    // Verify that image rotator JS is added to the settings page.
    $this->drupalGet('admin/structure/block/manage/skype_status/button/configure');
    $this->assertPattern('@<script type="text/javascript" src=".*/skype_status.admin.js\?.*"></script>@', 'Image rotator JS is on settings page.');

    // Verify that block settings are saved properly.
    $edit = array('skype_status_block_id' => 'example', 'skype_status_block_message' => 'Call us now!', 'skype_status_block_action' => 'chat', 'skype_status_block_style' => 'smallicon');
    $this->drupalPost('admin/structure/block/manage/skype_status/button/configure', $edit, t('Save block'));
    $result = skype_status_get_block_settings();
    $expected = array('id' => 'example', 'message' => 'Call us now!', 'action' => 'chat', 'style' => 'smallicon');
    $this->assertEqual($result, $expected, 'Block settings are saved properly.');

    // Verify that block is there.
    $this->drupalGet('/');
    $this->assertRaw(t('Skype status'), t('Block found.'));
    $this->assertRaw('<a href="skype:example?chat" class="skype-status-block-link" rel="example">', 'Status link is in the block.');
    $this->assertText('Call us now!', 'Message is in the block.');
  }
}

class SkypeStatusProfileTestCase extends SkypeStatusWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Profile',
      'description' => 'Test Skype status information in user profiles.',
      'group' => 'Skype Status',
    );
  }

  /**
   * Login user and test Skype status functionality in profile
   * through the admin and user interfaces.
   */
  function testProfile() {
    // Login the basic user.
    $this->drupalLogin($this->basic_user);

    // Try to access the settings page with the basic user.
    $this->drupalGet('admin/config/people/skype_status');
    $this->assertResponse(403, 'Access is denied on the settings page.');

    // Login the privileged user.
    $this->drupalLogout();
    $this->drupalLogin($this->privileged_user);

    // Try to access the settings page with the privileged user.
    $this->drupalGet('admin/config/people/skype_status');
    $this->assertResponse(200, 'Access is granted on the settings page.');
    $this->assertText(t('You need to create at least one textfield for storing the Skype ID!'), 'The text "You need to create at least one textfield for storing the Skype ID!" appears on the settings page.');

    // Create field in profile to store Skype ID.
    $this->drupalGet('admin/config/people/accounts/fields');
    $edit = array('fields[_add_new_field][label]' => 'Skype ID', 'fields[_add_new_field][field_name]' => 'field_skype_id', 'fields[_add_new_field][type]' => 'text', 'fields[_add_new_field][widget_type]' => 'text_textfield');
    $this->drupalPost('admin/config/people/accounts/fields', $edit, t('Save'));

    // Populate the Skype ID field.
    $edit = array('field_field_skype_id[und][0][value]' => 'example');
    $this->drupalPost('user/' . $this->privileged_user->uid . '/edit', $edit, t('Save'));

    // Verify that image rotator JS is added to the settings page.
    $this->drupalGet('admin/config/people/skype_status');
    $this->assertPattern('@<script type="text/javascript" src=".*/skype_status.admin.js\?.*"></script>@', 'Image rotator JS is on settings page.');

    // Verify that user settings are saved properly.
    $edit = array('field' => 'field_field_skype_id', 'title' => TRUE, 'action' => 'chat', 'style' => 'bigclassic');
    $this->drupalPost('admin/config/people/skype_status', $edit, t('Save configuration'));
    $result = skype_status_get_profile_settings();
    $this->assertEqual($result, $edit, 'User settings are saved properly.');

    // Verify that status information is shown in profile.
    $this->drupalGet('user');
    $this->assertText('Skype ID', 'Field title is shown.');
    $this->assertRaw('<a href="skype:example?chat" class="skype-status-profile-link" rel="example">', 'Status link to chat shown in profile.');

    // Verify that saved values are set in the setting form.
    $this->drupalGet('admin/config/people/skype_status');
    $this->assertFieldByName('field', 'field_field_skype_id', "Field is correctly set to 'field_field_skype_id'.");
    $this->assertFieldByName('action', 'chat', "Action is correctly set to 'chat'.");
    $this->assertFieldByName('title', '1', "Title is correctly set to '1'.");
    $this->assertFieldByName('style', 'bigclassic', "Style is correctly set to '1'.");

    // Hide field title and verify.
    $edit = array('title' => FALSE);
    $this->drupalPost('admin/config/people/skype_status', $edit, t('Save configuration'));
    $this->drupalGet('user');
    $this->assertNoText('Skype ID', 'Field title is not shown.');
  }
}