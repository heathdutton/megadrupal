<?php

/**
 * @file
 * Installation file for the Page break field module.
 *
 * @name Page break Field
 * @author skilip
 */

/**
 * Implements hook_schema().
 */
function page_break_field_schema() {
  $schema['page_break_field'] = array(
    'description' => t('Table that contains field page_break entries and settings.'),

    // CTools export definitions.
    'export' => array(
      'key' => 'identifier',
      'identifier' => 'page_break_field',
      'default hook' => 'page_break_field_info',
      'save callback' => 'page_break_field_save',
      'can disable' => FALSE,
      'api' => array(
        'owner' => 'page_break_field',
        'api' => 'page_break_field',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),

    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'The primary identifier for a page_break',
        'no export' => TRUE,
      ),
      'identifier' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The unique string identifier for a page_break.',
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''
      ),
      'mode' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
        'description' => 'Serialized data containing the page_break properties that do not warrant a dedicated column.',
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}
