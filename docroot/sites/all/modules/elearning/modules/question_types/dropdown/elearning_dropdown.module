<?php
/**
 * @file
 * Creates a dropdown question type.
 */

/**
 * Implements hook_elearning_question_type().
 */
function elearning_dropdown_elearning_question_type() {
  return array('elearning_dropdown' => t('Dropdown question'));
}

/**
 * Implements hook_elearning_question_form_element().
 */
function elearning_dropdown_elearning_question_form_element($question, $items) {

  $settings = unserialize($question->settings);
  $element = array();
  foreach ($items as $key => $item) {
    $options = preg_split("/\\r\\n|\\r|\\n/", $item['key']);
    foreach ($options as $option_key => $option_value) {
      $options[$option_key] = trim($option_value);
    }
    array_unshift($options, '');
    $element[$key] = array(
      '#type' => 'select',
      '#options' => $options,
    );
  }
  return $element;
}

/**
 * Implements hook_elearning_question_widget_alter().
 */
function elearning_dropdown_elearning_question_widget_alter(&$element, &$form_state, $question, $form) {
  if ($question->type == "elearning_dropdown") {
    $element['#description'] = t('Use a new line for each option in the first column and enter the correct option in the second');
    $element['#table_columns']['key'] = t('Options');
    foreach ($element['key'] as $key => $value) {
      $element['key'][$key]['#type'] = 'textarea';
      $element['key'][$key]['#rows'] = 4;
    }
  }
}

/**
 * Implements hook_elearning_answer_field_check_correct().
 */
function elearning_dropdown_elearning_question_check_correct($question, $element, $form_state, $form) {
  if ($question->type == "elearning_dropdown") {
    $question_wrapper = entity_metadata_wrapper('elearning_question', $question);
    $values = $question_wrapper->answer->value();
    $correct = TRUE;
    foreach (element_children($element) as $key) {
      $answer_key = $element[$key]['#value'];
      $answer_value = isset($element[$key]['#options'][$answer_key]) ? $element[$key]['#options'][$answer_key] : FALSE;
      $correct_value = $values[$key]['value'];
      if ($answer_value != $correct_value) {
        $correct = FALSE;
      }
    }
    return $correct;
  }
}

/**
 * Implements hook_elearning_question_given_answer().
 */
function elearning_dropdown_elearning_question_given_answer($question, $element, $form_state, $form) {
  $return = array();
  foreach (element_children($element) as $key) {
    $return[] = $element[$key]['#value'];
  }
  return $return;
}

/**
 * Implements hook_elearning_question_immediate_submit().
 */
function elearning_dropdown_elearning_question_immediate_submit($element) {

  $question = $element['element']['#question'];
  $question_wrapper = entity_metadata_wrapper('elearning_question', $question);
  $values = $question_wrapper->answer->value();
  $settings['question-' . $question->question_id] = $values;

  $question_id = $element['element']['#question']->question_id;
  foreach (element_children($element['element']) as $key) {
    $element['element'][$key]['#ajax'] = array(
      'callback' => 'elearning_dropdown_save_question_result',
    );
    $element['element'][$key]['#question_id'] = $question_id;
    $element['element']['#attached'] = array(
      'js' => array(
        drupal_get_path('module', 'elearning_dropdown') . '/js/elearning_dropdown.check.js',
        array(
          'data' => array('elearning_dropdown' => $settings),
          'type' => 'setting',
        ),
      ),
    );
  }
  return $element;
}

/**
 * Ajax callback for saving the question result.
 */
function elearning_dropdown_save_question_result($form, &$form_state) {
  $triggered_question = $form_state['triggering_element']['#parents'][1];

  // Check if all dropdowns are filled in.
  foreach ($form_state['input']['answer'][$triggered_question] as $answer_value) {
    // 0 is the first option, so it isnt filled in yet.
    if ($answer_value == 0) {
      exit;
    }
  }

  // Only save dropdown questions when all options are filled in.
  // And on the first time only.
  // Check if there is a question result already. Only the first is saved as it
  // even though the user gets the chance to get the right answer afterwards.

  $triggered_question = $form_state['triggering_element']['#parents'][1];
  $exercise_result = $form_state['build_info']['args'][2]->result_id;
  $query = new EntityFieldQuery();
  $question_result_query = $query->entityCondition('entity_type', 'elearning_question_result')
    ->propertyCondition('question_id', $triggered_question)
    ->propertyCondition('exercise_result', $exercise_result)
    ->execute();

  if (empty($question_result_query['elearning_question_result'])) {
    $triggered_question = $form_state['triggering_element']['#parents'][1];
    $question_result = $form_state['question_results'][$triggered_question];
    $question_result->exercise_result = $exercise_result;
    entity_save('elearning_question_result', $question_result);
  }
}
