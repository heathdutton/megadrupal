<?php

/**
 * @file
 * Creates the blocks and display the content on it.
 */

/**
 * Implements hook_node_info().
 */
function simple_pin_map_node_info() {
  return array(
    'simplepinitem' => array(
      'name' => t('Simple Pin Map Item'),
      'base' => 'node_content',
      'description' => t('Use this content type to create an item on the map.'),
      'has_title' => TRUE,
      'help' => t('Enter the map item info here.'),
    ),
  );
}

/**
 * Implements hook_form_ID_alter().
 *
 * Adds the form elements to set coords in the map when
 * editing/creating a simplepinitem.
 */
function simple_pin_map_form_simplepinitem_node_form_alter(&$form, &$form_state, $form_id) {
  global $base_url;
  $map_url = _simple_pin_map_get_map_url();
  $marker_url = _simple_pin_map_get_marker_url();
  $map_array = array(
    'style_name' => 'image',
    'alt' => t('Simple pin map'),
    'title' => t('Simple pin map'),
    'path' => $map_url,
    'attributes' => array('id' => 'simplepin-edit-map'),
  );
  $marker_array = array(
    'style_name' => 'image',
    'alt' => t('Edition marker'),
    'title' => t('Edition marker'),
    'path' => $marker_url,
    'attributes' => array('id' => 'simplepinmap-marker'),
  );
  $form['themap'] = array(
    '#prefix' => '<h2>' . t('Click on the map to place the pin') . '</h2>',
    '#type' => 'markup',
    '#markup' => '<div id="simplepinmap-edit-container">' . theme('image', $map_array) . theme('image', $marker_array) . '<div id="simplepinmap-edit-layer"></div></div>',
  );
  // Reorder the elements in the form to include the elements being inserted.
  $order = array(
    'title',
    'body',
    'themap',
    'simplepinitem-image',
    'simplepinitem_x',
    'simplepinitem_y',
    'submit',
  );
  foreach ($order as $key => $field) {
    $form[$field]['#weight'] = $key;
  }
  $form['#attached']['js'][] = drupal_get_path('module', 'simple_pin_map') . '/js/simplepinmap-edit.js';
  $form['#attached']['css'][] = drupal_get_path('module', 'simple_pin_map') . '/css/simplepinmap-edit.css';
}

/**
 * Implements hook_block_info().
 */
function simple_pin_map_block_info() {
  $blocks['board_block'] = array(
    'info' => t('Simple pin map block'),
    // 'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}
/**
 * Implements hook_block_view().
 */
function simple_pin_map_block_view($delta='') {
  $block = array();
  switch ($delta) {
    case 'board_block':
      drupal_add_css(drupal_get_path('module', 'simple_pin_map') . '/css/simplepinmap.css');
      drupal_add_css(drupal_get_path('module', 'simple_pin_map') . '/css/simplepinmap-custom.css');
      drupal_add_js(drupal_get_path('module', 'simple_pin_map') . '/js/simplepinmap.js');
      $block['subject'] = t('Simple pin map block');
      $block['content'] = _simple_pin_map_get_content();
      break;
  }
  return $block;
}

/**
 * Get url of the map from fid.
 */
function _simple_pin_map_get_map_url() {
  global $base_url;
  $saved_map_fid = variable_get('simple_pin_map_map');
  $map_url = $base_url . '/' . drupal_get_path('module', 'simple_pin_map') . '/simple-map.jpg';
  if ($saved_map_fid !== NULL && $saved_map_fid !== 0 && $map_file = file_load($saved_map_fid)) {
    $map_url = file_create_url($map_file->uri);
  }
  return check_url($map_url);
}

/**
 * Get url of the marker marker variable.
 */
function _simple_pin_map_get_marker_url() {
  global $base_url;
  $marker = variable_get('simple_pin_map_marker', 0);
  $marker_url = $base_url . '/' . drupal_get_path('module', 'simple_pin_map') . '/markers/marker' . $marker . '.png';
  return check_url($marker_url);
}

/**
 * Sends content to the block.
 */
function _simple_pin_map_get_content() {
  global $base_url;
  $marker_id = variable_get('simple_pin_map_marker', 0);
  $map_url = _simple_pin_map_get_map_url();
  $pin_url = _simple_pin_map_get_marker_url();
  $module_url = $base_url . '/' . drupal_get_path('module', 'simple_pin_map') . '/';

  $query = db_select('node', 'n');
  $query->addTag('node_access');
  $result = $query->fields('n', array('nid'))
    ->condition('n.type', 'simplepinitem')
    ->execute();
  $nodes_id = array();

  foreach ($result as $node) {
    $nodes_id[] = $node->nid;
  }

  $nodes = node_load_multiple($nodes_id);

  $content_html = '';
  $markers_html = '';


  $i = 0;
  foreach ($nodes as $item) {
    $node = node_load($item->nid);
    $node_url = drupal_get_path_alias('node/'.$item->nid);
    $name = check_plain($node->title);
    $field_x = field_get_items('node', $node, 'simplepinitem_x');
    $x = field_view_value('node', $node, 'simplepinitem_x', $field_x[0]);
    $x = check_plain($x['#markup']);
    $field_y = field_get_items('node', $node, 'simplepinitem_y');
    $y = field_view_value('node', $node, 'simplepinitem_y', $field_y[0]);
    $y = check_plain($y['#markup']);
    $field_body = field_get_items('node', $node, 'body');
    $body = field_view_field('node', $node, 'body');
     
    if (!empty($body)){
        $body = trim(truncate_utf8(check_plain(strip_tags($body['#items'][0]['safe_value'])), 80, TRUE, TRUE, 10));
    }

    $marker = array(
      'style_name' => 'image',
      'path' => $pin_url,
      'alt' => t($name),
      'title' => t($name),
      'attributes' => array(),
    );
    $content_html .= '<li id="simplepinmap-item-' . $i . '" class="simplepinmap-items"><h3 class="simplepin-title">' . $name . '</h3><div class="simplepinmap-item-content" id="simplepinmap-item-content-' . $i . '">' . $body . '<br/><a class="readmore" href="'.$node_url.'">read more</a></div>';

    $content_html .= '</li>';

    $markers_html .= '<li style="top:' . $y . 'px;left:' . $x . 'px" id="simplepinmap-pin-' . $i . '" class="simplepinmap-pins">' . theme('image', $marker) . '</li>';

    $i++;
  }
  $map_image = array(
    'style_name' => 'image',
    'alt' => t('Simple pin map'),
    'title' => t('Simple pin map'),
    'path' => $map_url,
    'attributes' => array('id' => 'simplepinmap-map-image'),
  );
  $html = '<div id="simplepinmap-container" class="clearfix"><div id="simplepinmap-map">' . theme('image', $map_image) . '<ul id="simplepinmap-pins-container">' . $markers_html . '</ul></div><ul id="simplepinmap-items-container">' . $content_html . '</ul></div><div id="simplepinmap-footer"></div><input id="simplepinmap-url" type="hidden" value="' . $module_url . '"/><input id="simplepinmap-marker-id" type="hidden" value="' . $marker_id . '"/>';

  return $html;
}

/*********** CONFIG PAGE FUNCTIONS ***********/

/**
 * Get valid markers.
 */
function _simple_pin_map_get_valid_markers() {
  global $base_url;
  global $base_path;
  $root_path = $_SERVER['DOCUMENT_ROOT'];
  $res = array();
  for ($i = 0; $i < 30; $i++) {
    $marker = array(
      'style_name' => 'image',
      'path' => $base_url . "/" . drupal_get_path('module', 'simple_pin_map') . '/markers/marker' . $i . '.png',
      'alt' => t('simple_pin_map marker n째!num', array('!num' => $i)),
      'title' => t('simple_pin_map marker n째!num', array('!num' => $i)),
    );
    $active_marker = array(
      'style_name' => 'image',
      'path' => $base_url . "/" . drupal_get_path('module', 'simple_pin_map') . '/markers/marker-active' . $i . '.png',
      'alt' => t('simple_pin_map active marker n째 !num', array('!num' => $i)),
      'title' => t('simple_pin_map active marker n째 !num', array('!num' => $i)),
    );
    $temp_path = $root_path . $base_path . drupal_get_path('module', 'simple_pin_map') . '/markers/marker' . $i . '.png';
    if (file_exists($temp_path)) {
      $res[$i] = theme('image', $marker) . '&nbsp;&gt;&gt;&nbsp;' . theme('image', $active_marker);
    }
  }
  return $res;
}

/**
 * Form constructor for the admin configuration form.
 *
 * @see simple_pin_map_admin_submit()
 * @ingroup forms
 */
function simple_pin_map_admin() {
  $form = array();

  $form['simple_pin_map_map'] = array(
    '#type' => 'managed_file',
    '#title' => t('Image of the map'),
    '#default_value' => variable_get('simple_pin_map_map'),
    '#description' => t("The map image."),
    '#upload_location' => 'public://simple_pin_map/',
    '#required' => FALSE,
  );
  $form['simple_pin_map_marker'] = array(
    '#type' => 'radios',
    '#title' => t('Select the marker images'),
    '#default_value' => variable_get('simple_pin_map_marker', 0),
    '#description' => t("You can add custom markers. To know how read the README file inside the module folder."),
    '#options' => _simple_pin_map_get_valid_markers(),
  );
  $form['#submit'][] = 'simple_pin_map_admin_submit';

  return system_settings_form($form);
}

/**
 * Form submission handler for simple_pin_map_admin().
 *
 * @see simple_pin_map_admin()
 */
function simple_pin_map_admin_submit($form, $form_state) {
  if (isset($form_state['values']['simple_pin_map_map']['fid']) && $file = file_load($form_state['values']['simple_pin_map_map']['fid'])) {
    variable_set('simple_pin_map_map', $form_state['values']['simple_pin_map_map']['fid']);
    // Change status to permanent.
    $file->status = FILE_STATUS_PERMANENT;

    $file = file_save($file);
    file_usage_add($file, 'simple_pin_map', 'image', $file->fid);

    drupal_set_message(t('Simple pin map saved'));
  }
}

/**
 * Implements hook_menu().
 */
function simple_pin_map_menu() {
  $items = array();

  $items['admin/simple_pin_map/customize'] = array(
    'title' => 'Customize Simple Pin Map',
    'description' => 'General settings of the module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simple_pin_map_admin'),
    'access arguments' => array('access content'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );

  return $items;

}

/**
 * Implements hook_block_configure().
 */
function simple_pin_map_block_configure($delta = '') {
  $form = array();

  $form['simple_pin_map_map_block_config'] = array(
    '#type' => 'managed_file',
    '#title' => t('Image of the map'),
    '#default_value' => variable_get('simple_pin_map_map'),
    '#description' => t("The map image."),
    '#upload_location' => 'public://simple_pin_map/',
    '#required' => FALSE,
  );
  $form['simple_pin_map_marker_block_config'] = array(
    '#type' => 'radios',
    '#title' => t('Select the marker images'),
    '#default_value' => variable_get('simple_pin_map_marker', 0),
    '#description' => t("You can add custom markers. To know how read the README file inside the module folder."),
    '#options' => _simple_pin_map_get_valid_markers(),
  );
  return $form;
}

/**
 * Implements hook_block_save().
 */
function simple_pin_map_block_save($delta = '', $edit = array()) {
  global $base_path;
  // This example comes from node.module.
  if ($delta == 'board_block' && isset($edit['simple_pin_map_map_block_config']) && $file = file_load($edit['simple_pin_map_map_block_config'])) {
    variable_set('simple_pin_map_map', $edit['simple_pin_map_map_block_config']);
    // Change status to permanent.
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    file_usage_add($file, 'simple_pin_map', 'image', $file->fid);
    drupal_set_message(t('Simple pin map saved'));
  }
  if ($delta == 'board_block'
        && isset($edit['simple_pin_map_marker_block_config'])
        && is_numeric($edit['simple_pin_map_marker_block_config'])
        && file_exists(
          $_SERVER['DOCUMENT_ROOT']
          . $base_path . drupal_get_path('module', 'simple_pin_map') 
          . '/markers/marker' . $edit['simple_pin_map_marker_block_config'] 
          . '.png')
        && file_exists(
          $_SERVER['DOCUMENT_ROOT']
          . $base_path . drupal_get_path('module', 'simple_pin_map') 
          . '/markers/marker-active' . $edit['simple_pin_map_marker_block_config'] 
          . '.png')
        ) {
    variable_set('simple_pin_map_marker', $edit['simple_pin_map_marker_block_config']);
  }
}
