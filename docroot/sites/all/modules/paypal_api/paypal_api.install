<?php
// $Id$

/**
 * Implement hook_schema().
 */
function paypal_api_schema() {
  return array(
    'paypal_api_instance' => array(
      'description' => 'Stores instance data for specific nodes.',
      'fields'	=> array(
        'nid' => array(
          'description' => 'The nid associated with this button.',
          'type'        => 'int',
          'not null'		=> TRUE
        ),
        'bundle' => array(
          'description' => 'The content type',
          'type'        => 'varchar',
          'length'			=> 255,
          'not null'		=> TRUE
        ),
        'quantity' => array(
          'description' => 'The quantity of each purchase.',
          'type'     => 'int',
    	    'not null' => TRUE,
          'default'	 => 1
    	  ),
        'button' => array(
          'description' => 'The button HTML, if Paypal has created this button',
          'type'     => 'text',
          'default'	 => NULL
        ),
        'cost' => array(
          'description' => 'If Paypal API is creating the button, the cost.',
          'type'     => 'int',
          'default'	 => NULL
        ),
        'currency' => array(
          'description' => 'If Paypal API is creating the button, the currency.',
          'type'     => 'varchar',
          'length'	 => 3,
          'default'	 => NULL
    	  ),
    	  'item_name' => array(
          'description' => 'If Paypal API is creating the button, the item name.',
          'type'     => 'varchar',
          'length'	 => 255,
          'default'	 => NULL
    	  ),
        'success' => array(
          'description' => 'If Paypal API is creating the button, the success URL.',
          'type'     => 'varchar',
          'length'	 => 255,
          'default'	 => NULL
    	  ),
        'cancel' => array(
          'description' => 'If Paypal API is creating the button, the cancel URL.',
          'type'     => 'varchar',
          'length'	 => 255,
          'default'	 => NULL
    	  )
    	),
      'primary key'	=> array('nid'),
      'indexes' => array(
        'bundle'     => array('bundle'),
        'nid_bundle' => array('nid', 'bundle')
    	)
    ),
    'paypal_api_ledger' => array(
      'description' => 'Tracks user purchases.',
      'fields'	=> array(
        'nid' => array(
          'description' => 'The nid of the purchased item.',
          'type'        => 'int',
          'default'			=> NULL
        ),
        'bundle' => array(
          'description' => 'The name of the bundle purchased',
          'type'        => 'varchar',
          'length'			=> 255,
          'not null' => TRUE
        ),
        'uid' => array(
          'description' => 'The user id.',
          'type'     => 'int',
          'not null' => TRUE
        ),
        'op' => array(
          'description' => 'The operation purchased.',
          'type'     => 'varchar',
          'not null' => TRUE,
          'length'	 => 50
        ),
        'quantity' => array(
          'description' => 'The quantity this user currently owns.',
          'type'     => 'int',
          'default'  => NULL
        )
      ),
      'indexes' => array(
        'nid' => array('nid'),
        'nid_uid' => array('nid', 'uid')
      )
    ),
    'paypal_api_transaction' => array(
      'description' => 'Records notifications from the Paypal IPN service.',
      'fields'	=> array(
        'uid' => array(
          'description' => 'The user id.',
          'type'     => 'int',
          'not null' => TRUE
        ),
        'op' => array(
          'description' => 'The operation purchased.',
          'type'     => 'varchar',
          'not null' => TRUE,
          'length'	 => 50
        ),
        'bundle' => array(
          'description' => 'The name of the bundle being purchased',
          'type'        => 'varchar',
          'length'			=> 255,
          'not null' => TRUE
        ),
    		'nid' => array(
          'description' => 'The nid of the purchased item, if present',
          'type'        => 'int',
          'default'			=> NULL
        ),
        'received_date' => array(
          'description' => 'The date and time this signal was received.',
          'type'     => 'int',
          'not null' => TRUE
        ),
        'paypal_data' => array(
          'type'	  => 'blob',
          'default'	=> NULL
        )
      ),
      'indexes' => array(
        'nid'           => array('nid'),
        'nid_uid'       => array('nid', 'uid'),
        'received_date'	=> array('received_date')
      )
    )
  );
}

/**
 * Implement hook_install()
 */
function paypal_api_install() {
}

/**
 * Implement hook_uninstall()
 */
function paypal_api_uninstall() {
  variable_del('paypal_api_settings');
}

/**
 * Increase the length of the op field in our transaction and ledger tables
 */
function paypal_api_update_7001() {
  $schema = paypal_api_schema();

  db_drop_index('paypal_api_ledger', 'nid');
  db_drop_index('paypal_api_ledger', 'nid_uid');
  db_drop_index('paypal_api_transaction', 'nid');
  db_drop_index('paypal_api_transaction', 'nid_uid');
  db_drop_index('paypal_api_transaction', 'received_date');

  db_change_field('paypal_api_transaction', 'op', 'op',
    $schema['paypal_api_transaction']['fields']['op'],
    array('indexes' => $schema['paypal_api_transaction']['indexes'])
  );
  db_change_field('paypal_api_ledger', 'op', 'op',
    $schema['paypal_api_ledger']['fields']['op'],
    array('indexes' => $schema['paypal_api_ledger']['indexes'])
  );
}

/**
 * Remove redundant index on the instance table
 */
function paypal_api_update_7002() {
  $schema = paypal_api_schema();

  db_drop_index('paypal_api_instance', 'nid');
}
