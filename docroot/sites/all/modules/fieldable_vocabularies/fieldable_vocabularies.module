<?php

/**
 * @file
 * Provides field support for vocabularies in core.
 */

/**
 * Implements hook_entity_info_alter().
 */
function fieldable_vocabularies_entity_info_alter(&$entity_info) {
  $entity_info['taxonomy_vocabulary']['fieldable'] = TRUE;
  $entity_info['taxonomy_vocabulary']['bundles']['taxonomy_vocabulary'] = array(
    'label' => t('Vocabulary'),
    'admin' => array(
      'path' => 'admin/structure/taxonomy',
      'access arguments' => array('administer taxonomy'),
    ),
  );
  $entity_info['taxonomy_vocabulary']['view modes'] = array(
    'full' => array(
      'label' => t('Full content'),
      'custom settings' => FALSE,
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fieldable_vocabularies_form_taxonomy_form_vocabulary_alter(&$form, &$form_state) {
  if (!empty($form['#id']) && $form['#id'] == 'taxonomy_vocabulary_confirm_delete') {
    return;
  }

  $vocabulary = $form_state['vocabulary'];
  field_attach_form('taxonomy_vocabulary', $vocabulary, $form, $form_state);
}

/**
 * Implements callback_ENTITY_TYPE_presave().
 */
function fieldable_vocabularies_taxonomy_vocabulary_presave($vocabulary) {
  field_attach_presave('taxonomy_vocabulary', $vocabulary);
}

/**
 * Implements callback_ENTITY_TYPE_insert().
 */
function fieldable_vocabularies_taxonomy_vocabulary_insert($vocabulary) {
  field_attach_insert('taxonomy_vocabulary', $vocabulary);
}

/**
 * Implements callback_ENTITY_TYPE_update().
 */
function fieldable_vocabularies_taxonomy_vocabulary_update($vocabulary) {
  field_attach_update('taxonomy_vocabulary', $vocabulary);
}

/**
 * Implements callback_ENTITY_TYPE_delete().
 */
function fieldable_vocabularies_taxonomy_vocabulary_delete($vocabulary) {
  field_attach_delete('taxonomy_vocabulary', $vocabulary);
}

/**
 * Implements hook_field_extra_fields().
 */
function fieldable_vocabularies_field_extra_fields() {
  $extra = array();
  $extra['taxonomy_vocabulary']['taxonomy_vocabulary'] = array(
    'form' => array(
      'name' => array(
        'label' => t('Name'),
        'description' => t('Name of the vocabulary'),
        'weight' => -5,
      ),
      'description' => array(
        'label' => t('Description'),
        'description' => t('Description of the vocabulary'),
        'weight' => 0,
      ),
    ),
    'display' => array(
      'name' => array(
        'label' => t('Name'),
        'description' => t('Name of the vocabulary'),
        'weight' => -5,
      ),
      'description' => array(
        'label' => t('Description'),
        'description' => t('Description of the vocabulary'),
        'weight' => 0,
      ),
    ),
  );
  return $extra;
}
