<?php
/**
 * @file
 * Custom formatting of menu list items for added style.
 */

/**
 * Implements hook_help().
 */
function sliding_handles_help($path, $arg) {
  switch ($path) {
    case 'admin/help#sliding_handles':{
      $ret_val = '<h3>' . t('About') . '</h3>';
      $ret_val = '<p>' . t('The sliding handles module adds a stylable span tag after the anchor in the selected menu list items.') . '</p>';
      return $ret_val;
      }
  }
}

/**
 * Implements hook_permission().
 */
function sliding_handles_permission() {
  return array(
    'administer sliding handles' => array(
      'title' => t('Administer Sliding handles'),
      'description' => t('Change Sliding handles menu'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function sliding_handles_menu() {
  $items = array();

  // Admin configuration group.
  $items['admin/config/user-interface'] = array(
    'title' => 'Sliding handles',
    'description' => 'Administer Sliding handles',
    'access arguments' => array('administer sliding handles'),
  );

  // Admin configuration - Settings.
  $items['admin/config/user-interface/sliding_handles'] = array(
    'title' => 'Sliding handles settings',
    'description' => 'Manage Sliding handles settings.',
    'access arguments' => array('administer sliding handles'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sliding_handles_admin_settings_form'),
  );

  return $items;
}
/**
 * Access admin settings.
 */
function sliding_handles_admin_settings_form($node, &$form_state) {
  $form = array();

  $form['overview'] = array(
    '#markup' => t('This interface allows administrators to change Sliding handles Settings'),
    '#prefix' => '<p>',
    '#suffix' => '</p>',
  );

  $form['sliding_handles_machine_name'] = array(
    '#title' => t('Menu machine name'),
    '#description' => t('Enter machine name'),
    '#type' => 'textfield',
    '#default_value' => variable_get('sliding_handles_machine_name'),
    '#required' => TRUE,
  );

  return system_settings_form($form);

}

/**
 * Validates Sliding handles admin settings.
 *
 * Determines if the menu machine name is valid.
 *
 */
function sliding_handles_admin_settings_form_validate($form, &$form_state) {
  $path  = 'admin/structure/menu/manage/';
  $path .= $form_state['values']['sliding_handles_machine_name'];
  $valid = drupal_valid_path($path, TRUE);

  // Validate menu machine name.
  if (!$valid) {
    form_set_error('sliding_handles_machine_name', t('Invalid menu machine name.'));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function sliding_handles_form_sliding_handle_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#validate'][] = 'sliding_handles_sliding_handle_node_form_validate';
  break;
}

/**
 * Implements hook_theme().
 */
function sliding_handles_theme($existing, $type, $theme, $path) {
  return array(
    'sliding_handles_menu_link' => array(
      'variables' => array('variables' => NULL),
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function sliding_handles_theme_registry_alter(&$theme_registry) {
  if (isset($theme_registry['menu_link'])) {
    $theme_registry['menu_link']['function'] = 'theme_sliding_handles_menu_link';
  }
}

/**
 * Overrides theme_menu_link().
 */
function theme_sliding_handles_menu_link($variables) {
  $element = $variables['element'];
  $sub_menu = '';
  $menu_selected = variable_get('sliding_handles_machine_name');
  if ($element['#below']) {
    $sub_menu = drupal_render($element['#below']);
  }
  $output = l($element['#title'], $element['#href'], $element['#localized_options']);

  if ($variables['element']['#original_link']['menu_name'] == $menu_selected) {
    $output = $output . '<span class="sliding-handle"></span>';
  }
  return '<li' . drupal_attributes($element['#attributes']) . '>' . $output . $sub_menu . "</li>\n";
}
