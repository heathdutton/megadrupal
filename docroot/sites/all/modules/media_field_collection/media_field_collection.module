<?php

/**
 * @file
 * Small tweaks to better integrate the Media and Field Collection modules.
 */

/**
 * Implements hook_preprocess_hook().
 *
 * On the file usage page convert each listings of a Field Collection usage into a listing that displays the field collection's parent entity,
 * for example field-collection/field-fc-example/6 is converted to the alias for node/3
 * which the page the field collection is displayed on.
 *
 * @param $variables
 */
function media_field_collection_preprocess_table(&$variables) {
  // Headings we expect for usage_table.
  $header = array(t('Entity'), t('Entity type'), t('Registering module'), t('Use count'));
  // Table row array keys.
  $link_key = 0;
  $entity_type_key = 1;

  // Check if this is the usage_table. Unfortunately there is no key to ckeck this with, so we need to use text comparrisons.
  if (!isset($variables['empty']) || $variables['empty'] != t('This file is not currently used.') || !isset($variables['header'])) {
    return;
  }

  // Check headings match what we expect for usage_table.
  foreach ($variables['header'] as $key => $heading) {
    if ($header[$key] != $heading['data']) {
      return;
    }
  }

  // Check each row of the table.
  foreach ($variables['rows'] as $key => $column) {
    // In some circumstances Field Collections can become disasociated from their parents.
    $parent_entity = FALSE;

    // Process only Field Collection rows.
    if ($column[1] == 'field_collection_item') {

      // Get the Field Collection ID from the link path.
      $link_parts = explode('"', $column[$link_key]);
      $path_parts = explode('/', $link_parts[1]);
      $fid        = $path_parts[3];

      // Proceed only if a number is found.
      if (is_numeric($fid)) {

        // Get the field name.
        $field_name = db_query('SELECT field_name FROM {field_collection_item} WHERE item_id = :item_id', array(':item_id' => $fid))->fetchField();

        // Get parent entity ID.
        $query = db_select('field_data_' . $field_name, 'f');
        $query->condition($field_name . '_value', $fid, '=');
        $query->fields('f', array('entity_id', 'entity_type,'));
        $query->orderBy($field_name . '_revision_id', 'DESC');
        $query->range(0, 1);
        $result = $query->execute();
        $entity = $result->fetchObject();

        // Get entity where the field is being displayed.
        $parent_entity = entity_load($entity->entity_type, array($entity->entity_id));

        // Remove table row if no match.
        if (!$parent_entity) {
          unset($variables['rows'][$key]);
        }
        else {
          $parent_entity = $parent_entity[$entity->entity_id];

          // Update the link label and path..
          $variables['rows'][$key][$link_key] = l($parent_entity->title, $entity->entity_type . '/' . $entity->entity_id);
          // Update the entity Type.
          $variables['rows'][$key][$entity_type_key] = check_plain($entity->entity_type);
        }

      }
    }
  }

}
