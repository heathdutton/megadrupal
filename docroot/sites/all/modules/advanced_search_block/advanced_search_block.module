<?php
/**
 * Implementation of hook_block_info().
 */
function advanced_search_block_block_info() {
  // Define the block.
  $blocks['advanced_search'] = array(
    'info' => t('Advanced search'),
  );
  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function advanced_search_block_block_view($delta='') {
  // Display the block.
  $block = array();
  switch ($delta) {
    case 'advanced_search':
      // Only display the block when using the node module, keywords are provided and the user has the proper permissions.
      if (arg(0) == 'search' && arg(1) == 'node' && arg(2) && user_access('use advanced search')) {

        // Get the search form the same way the form is normally added to the results page in search.pages.inc.
        $keys = filter_xss(arg(2));
        $form = drupal_get_form('search_form', NULL, $keys, 'node');

        // Get rid of the fieldset.
        $form['advanced']['#type'] = 'container';
        $form['advanced']['#theme_wrappers'] = array();

        $form['advanced']['submit']['#value'] = t('Search');

        // Prepare the default values.
        $positives = array();
        $negatives = array();
        $phrases = array();
        $types = array();

        preg_match_all('/ (-?)("[^"]+"|[^" ]+)/i', ' ' .  $keys, $keywords, PREG_SET_ORDER);
        foreach ($keywords as $match) {
          $words = search_simplify($match[2]);
          if ($match[2]{0} == '"') {
            $phrases[] = substr($match[2], 1, -1);
          }
          else if ($match[1] == '-') {
            $negatives[] = $words;
          }
          else if (empty($match[1]) && preg_match('/type\:(\w+)/', $match[0], $matches)) {
            $types[] = $matches[1];
          }
          else if ($match[2] != 'OR' && $match[2] != 'AND' &&  $match[2] != 'and') {
            $positives[] = $words;
          }
        }

        $form['advanced']['keywords']['or']['#value'] = implode(' ', $positives);
        $form['advanced']['keywords']['negative']['#value'] = implode(' ', $negatives);
        // The search system itself doesn't seem to support multiple phrases, so we're going to use only the first.
        $form['advanced']['keywords']['phrase']['#value'] = isset($phrases[0]) ? $phrases[0] : NULL;

        foreach ($types as $type) {
          $form['advanced']['type'][$type]['#checked'] = TRUE;
        }

        // Hide the basic search form.
        $form['basic']['#access'] = FALSE;
        $block['content'] = $form;
        $block['subject'] = t('Advanced Search');
      }
      break;
  }
  return $block;
}

/**
* Implementation of hook_menu_alter().
*/
function advanced_search_block_menu_alter(&$items) {
  // Override the core search_view() function so that the search form isn't prepended to the results.
  $items['search/node/%menu_tail']['page callback'] = 'advanced_search_block_search_view';
}

/**
* Override for search_view().
*
* @see
*   /modules/search/search_pages.inc
*/
function advanced_search_block_search_view($module = NULL, $keys = '') {
  // Call the core search_view() function and disable the search form it adds above the results.
  $build = search_view($module, $keys);
  $build['search_form']['#access'] = FALSE;
  return $build;
}
