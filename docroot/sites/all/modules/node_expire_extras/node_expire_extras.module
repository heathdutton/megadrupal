<?php

/**
 * @file
 * Node expire extras.
 */

use NodeExpireExtras as Ns;

/**
 * Implements hook_form_alter().
 *
 * Enable/Disable expiration feature on node types
 */
function node_expire_extras_form_node_type_form_alter(&$form, &$form_state) {
  if (user_access('administer node expire')) {
    // $ntypes = variable_get('node_expire_ntypes', array());
    $node_type  = $form['#node_type']->type;
    $handle_content_expiry = variable_get('node_expire_handle_content_expiry', 2);
    if ($handle_content_expiry != 0) {
      $config_handler = new Ns\NodeTypeConfigHandler($node_type);

      // Visibility.
      $states = array(
        'visible' => array(
          ':input[name="node_expire_enabled"]' => array('checked' => TRUE),
        ),
      );

      $form['workflow']['node_expire_container']['node_expire_update_expiry'] = array(
        '#type'  => 'fieldset',
        '#title' => t('"Update expiry date" action'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#states' => $states,
      );
      $form['workflow']['node_expire_container']['node_expire_update_expiry']['node_expire_update_expiry_start'] = array(
        '#type'          => 'radios',
        '#title'         => t('Starting value for update'),
        '#default_value' => $config_handler->getUpdateExpiryStart(),
        '#options'       => array(
          0 => t('Expiry date'),
          1 => t('Current date'),
        ),
        '#description' => t('This date plus extension will be set on action "Update expiry date".'),
        '#states' => $states,
      );
      $form['workflow']['node_expire_container']['node_expire_update_expiry']['node_expire_update_expiry_interval'] = array(
        '#type'          => 'select',
        '#title'         => t('Extension interval'),
        '#default_value' => $config_handler->getUpdateExpiryInterval(),
        '#options'       => array(
          1 => t('Day(s)'),
          2 => t('Week(s)'),
          3 => t('Month(s)'),
          4 => t('Year(s)'),
        ),
        '#description'   => t('Extension interval.'),
        '#states' => $states,
      );
      $form['workflow']['node_expire_container']['node_expire_update_expiry']['node_expire_update_expiry_multiplier'] = array(
        '#title' => t('Intervals to extend'),
        '#description' => t('Intervals to extend (multiplier)'),
        '#type' => 'textfield',
        '#size' => 60,
        '#default_value' => $config_handler->getUpdateExpiryMultiplier(),
        '#states' => $states,
      );

    }
    else {
      // Do nothing, does not work in legacy mode.
    }

    // Add special validate/submit functions
    // module_load_include('ntype.inc', 'node_expire');
    $form['#validate'][]  = '_node_expire_extras_form_node_type_form_alter_validate';
    $form['#submit'][]    = '_node_expire_extras_form_node_type_form_alter_submit';

  }
}

/**
 * Implements hook_form_alter().
 */
function _node_expire_extras_form_node_type_form_alter_validate(&$form, &$form_state) {
  $node_expire_update_multiplier = &$form_state['values']['node_expire_update_expiry_multiplier'];
  if (!empty($node_expire_update_multiplier)) {
    if (!Ns\NodeExpireDateHelper::isInteger($node_expire_update_multiplier)) {
      form_set_error('node_expire_update_expiry_multiplier',
        t('Intervals to extend should be integer.'));
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function _node_expire_extras_form_node_type_form_alter_submit(&$form, &$form_state) {
  $ntypes = variable_get('node_expire_ntypes', array());

  $handle_content_expiry = variable_get('node_expire_handle_content_expiry', 2);
  if ($handle_content_expiry != 0) {
    $ntypes[$form_state['values']['type']]['update_expiry_start']
      = $form_state['values']['node_expire_update_expiry_start'];
    $ntypes[$form_state['values']['type']]['update_expiry_interval']
      = $form_state['values']['node_expire_update_expiry_interval'];
    $ntypes[$form_state['values']['type']]['update_expiry_multiplier']
      = $form_state['values']['node_expire_update_expiry_multiplier'];
  }

  variable_set('node_expire_ntypes', $ntypes);
}

module_load_include('inc', 'node_expire_extras', 'includes/node_expire_extras');
