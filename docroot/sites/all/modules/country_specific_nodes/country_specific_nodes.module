<?php

/**
 * @file
 * This module helps to manage country specific handling of nodes.
 */

/**
 * Implements hook_help().
 */
function country_specific_nodes_help($path, $arg) {
  if ($path == 'admin/structure/csn' || $path == 'admin/structure/csn/attach_csn_field') {
    return '<p>' . t('This page provides a user to select content types to attach the country selection field to it. Country selection field will be attached to the selected content types and removed from the non selected content types.') . '</p>';
  }
  elseif ($path == 'admin/structure/csn/default_country') {
    return '<p>' . t('This page helps in setting the default/fallback country for the user if in rare cases the users IP is not detected, Please specific the default country such as India, Japan, etc.') . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function country_specific_nodes_permission() {
  return array(
    'administer country specific nodes' => array(
      'title'       => t('Administer country specific nodes settings'),
      'description' => t('Configure countries specific settings.'),
    ),
    'bypass country restriction' => array(
      'title'       => t('Bypass country specific restrictions'),
      'description' => t('Bypass country specific restrictions and administer nodes.'),
    ),
  );
}

/**
 * Implements hook_boot().
 */
function country_specific_nodes_boot() {
  if (!isset($_SESSION['ip_country_code'])) {
    // We need ip2country_get_country() so make sure it gets loaded.
    drupal_load('module', 'ip2country');

    // Create a session variable to store user country.
    $_SESSION['ip_country_code'] = '';

    // Get user IP address.
    $ip = ip_address();

    // Get country code based on user IP address.
    $country_code = ip2country_get_country($ip);

    // Set country code, if not set default.
    $_SESSION['ip_country_code'] = !empty($country_code) ? $country_code : variable_get('country_specific_nodes_def_cn', 'IN');
  }
}

/**
 * Implements hook_menu().
 */
function country_specific_nodes_menu() {
  $items = array();

  // Menu path for listing content types to attach field to.
  $items['admin/structure/csn'] = array(
    'title' => 'Country Specific Nodes',
    'description' => 'Helps to attach Country Field to Content types.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('country_specific_nodes_content_type'),
    'access arguments' => array('administer country specific nodes'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'country_specific_nodes.admin.inc',
    'file path' => drupal_get_path('module', 'country_specific_nodes') . '/inc',
  );
  $items['admin/structure/csn/attach_csn_field'] = array(
    'title' => 'Attach Country Field to Content types',
    'description' => 'Helps to attach Country Field to Content types.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/structure/csn/default_country'] = array(
    'title' => 'Set Default Country',
    'description' => 'Helps to set default country for Country Specific Nodes.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('country_specific_nodes_default_country'),
    'access arguments' => array('administer country specific nodes'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'country_specific_nodes.admin.inc',
    'file path' => drupal_get_path('module', 'country_specific_nodes') . '/inc',
  );
  return $items;
}

/**
 * Implements hook_node_access().
 */
function country_specific_nodes_node_access($node, $op, $account) {
  // Check if $node is object as in some cases it returns string.
  if (is_object($node)) {
    // Check for bypass permission.
    if (!user_access('bypass country restriction') && isset($node->field_countries_cce)) {
      $is_country_selected = FALSE;

      // Get the list of types for which the functionality is to be inverted.
      $include_list_string = variable_get('country_specific_nodes_include_list', '');
      $include_list = explode(',', $include_list_string);

      // Get user country.
      $user_country = $_SESSION['ip_country_code'];
      // Get countries selected if any.
      $filter_countries = field_get_items('node', $node, 'field_countries_cce');

      if (!empty($filter_countries)) {
        foreach ($filter_countries as $ccode) {
          if ($ccode['value'] == $user_country) {
            $is_country_selected = TRUE;
            break;
          }
        }
      }

      $is_type_included = in_array($node->type, $include_list);
      // Visible only for selected countries.
      if ($is_country_selected && $is_type_included) {
        return NODE_ACCESS_IGNORE;
      }
      // For unselected countries.
      elseif (!$is_country_selected && $is_type_included) {
        return NODE_ACCESS_DENY;
      }
      // Invisible for selected countries.
      elseif ($is_country_selected && !$is_type_included) {
        return NODE_ACCESS_DENY;
      }
    }
  }

  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}

/**
 * Implements hook_node_load().
 *
 * This function is implemented to manage the display of nodes
 * based on $node->csn_hidden value e.g. node.tpl.php.
 */
function country_specific_nodes_node_load($nodes, $types) {
  // Get user country.
  $user_country = $_SESSION['ip_country_code'];
  $bypass_permission = user_access('bypass country restriction');

  // Get the list of types for which the functionality is to be inverted.
  $include_list_string = variable_get('country_specific_nodes_include_list', '');
  $include_list = explode(',', $include_list_string);

  // Loop through node arrays.
  foreach ($nodes as &$node) {
    // Check if $node is object.
    if (is_object($node)) {
      // Set default hidden parameter in node object.
      $node->csn_hidden = 0;

      // Check for bypass permission.
      if (!$bypass_permission) {

        $is_country_selected = FALSE;
        $is_type_included = in_array($node->type, $include_list);

        // Get countries selected if any.
        $filter_countries = field_get_items('node', $node, 'field_countries_cce');

        if (!empty($filter_countries)) {
          foreach ($filter_countries as $ccode) {
            if ($ccode['value'] == $user_country) {
              $is_country_selected = TRUE;
              break;
            }
          }
        }

        // For unselected countries.
        if (!$is_country_selected && $is_type_included) {
          $node->csn_hidden = 1;
        }
        // Invisible for selected countries.
        elseif ($is_country_selected && !$is_type_included) {
          $node->csn_hidden = 1;
        }
      }
    }
  }
}
