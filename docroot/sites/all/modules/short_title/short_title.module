<?php
/**
 * @file
 * Provides a second title field when the node title is longer than max_length.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function short_title_form_node_type_form_alter(&$form, $form_state) {
  if (isset($form['type'])) {
    // Node type edit form.
    // Add checkbox to activate 'Short title' button per node type.
    $form['#submit'][] = 'short_title_form_node_type_form_submit';
    $form['short_title'] = array(
      '#title' => t('Short Title'),
      '#type' => 'fieldset',
      '#group' => 'additional_settings',
      '#tree' => FALSE,
    );
    $form['short_title']['short_title_enable'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable short title field'),
      '#weight' => 10,
      '#default_value' => variable_get('short_title_enable_' . $form['#node_type']->type, FALSE),
    );
  }
}

/**
 * Submit handler for node_type_form.
 */
function short_title_form_node_type_form_submit($form, &$form_state) {
  $enabled = $form_state['values']['short_title_enable'];
  $type = $form['#node_type']->type;
  if (empty($type) && isset($form_state['values']['type'])) {
    $type = $form_state['values']['type'];
  }
  $instance = field_info_instance('node', 'field_short_title', $type);
  if ($enabled && is_null($instance)) {
    // Create (if needed) and attach the field to the content type.
    _short_title_attach_field_to_type($type);
  }
  elseif (!$enabled && !is_null($instance)) {
    // Inform the user they will need to deal with the field manually.
    drupal_set_message(t('You will need to remove the short title field from this content type manaually'), 'warning');
  }
}

/**
 * Create and attach a short title field onto a content type.
 *
 * @param string $type
 *   Content type on which to add the field.
 */
function _short_title_attach_field_to_type($type) {
  $instance = field_info_instance('node', 'field_short_title', $type);
  if (is_null($instance)) {
    $field = field_info_field('field_short_title');
    if (empty($field)) {
      $field = array(
        'field_name' => 'field_short_title',
        'type' => 'text',
        'entity_types' => array('node'),
        'settings' => array(
          'max_length' => 60,
        ),
      );
      $field = field_create_field($field);
    }
    $instance = array(
      'field_name' => 'field_short_title',
      'entity_type' => 'node',
      'bundle' => $type,
      'label' => t('Short Title'),
      'widget' => array(
        'type' => 'text_textfield',
        'settings' => array(
          'size' => 60,
        ),
        'weight' => '-4',
      ),
      'display' => array(
        'default' => array(
          'type' => 'hidden',
        ),
        'teaser' => array(
          'type' => 'hidden',
        ),
      ),
    );
    $instance = field_create_instance($instance);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function short_title_form_node_form_alter(&$form, &$form_state, $form_id) {
  if (variable_get('short_title_enable_' . $form['type']['#value'], FALSE)) {

    // Get max length of short title. Needed for the JS.
    $settings['short_title'] = array();
    // Flag to denote if the short_title is a required field
    $settings['short_title']['required'] = 1;

    // Get title and short title defaults for JS.
    $lang = field_language('node', $form['#node'], 'field_short_title');
    $short_title = ($form['field_short_title'][$lang][0]['value']['#default_value']) ? $form['field_short_title'][$lang][0]['value']['#default_value'] : '';
    $title = $form['title']['#default_value'];
    $settings['short_title']['short_title'] = $short_title;
    $settings['short_title']['title'] = $title;

    // Title may be un-required if auto_nodetitle settings are enabled (for new nodes).
    if (empty($short_title) && module_exists('auto_nodetitle') && function_exists('auto_nodetitle_get_setting')) {
      if (auto_nodetitle_get_setting($form['#node']->type) == AUTO_NODETITLE_ENABLED) {
        // We will autogenerate the short title from the title later,
        // hide the field in the meanwhile.
        $form['field_short_title']['#value'] = 'ant';
        $form['field_short_title']['#type'] = 'value';
        $form['field_short_title']['#required'] = FALSE;
        $settings['short_title']['required'] = 0;
        // Dont attach JS or do anything
        return;
      }
      elseif (auto_nodetitle_get_setting($form['#node']->type) == AUTO_NODETITLE_OPTIONAL) {
        // Stuff temporary value to pass validation
        $form['field_short_title']['#value'] = 'ant';
        $form['field_short_title']['#type'] = 'value';
        $form['field_short_title']['#required'] = FALSE;
        $settings['short_title']['required'] = 0;
      }
    }

    // Only attach the JS if the short_title field is to be shown
    if ($settings['short_title']['required']) {
      drupal_add_js(drupal_get_path('module', 'short_title') . '/short_title.js', 'file');
    }

    $settings['short_title']['max_length'] = $form_state['field']['field_short_title'][$lang]['field']['settings']['max_length'];
    $form['max_title_length'] = array('#type' => 'value', '#value' => $settings['short_title']['max_length']);

    // Title help text.
    $form['title']['#description'] = t('Please enter a title for this node.
      A short title will be automatically generated from this field unless the character
      count exceeds %length characters.
      In this case a purposeful short title will need to be entered.',
      array('%length' => $settings['short_title']['max_length']));

    // Only attach the JS if the short_title field is to be shown
    if ($settings['short_title']['required']) {
      drupal_add_js($settings, 'setting');
    }
    drupal_add_css(drupal_get_path('module', 'short_title') . '/short_title.css', array('type' => 'file', 'group' => CSS_DEFAULT));

    if ($title == $short_title) {
      $form['field_short_title'][$lang][0]['value']['#default_value'] = '';
    }

    // Only attach the JS link if the short_title field is to be shown
    if ($settings['short_title']['required']) {
      $form['title']['#suffix'] = '<a name="show_short_title" id="show_short_title">' . t('Change short title') . '</a>';
    }
    $form['#validate'][] = 'short_title_form_validate';

    $form['field_short_title']['#weight'] = $form['title']['#weight'] + 1;

    // Annoyingly nodeformcols overrides weights completely.
    if (module_exists('nodeformcols')) {
      // Try and get the nodeformcols out of the form,
      // if not found, try the alter hook
      // and finally then use default.
      if (isset($form['#nodeformcols_variant'])) {
        $variant = $form['#nodeformcols_variant'];
      }
      else {
        $form_clone = $form;
        drupal_alter('nodeformcols_pre_placement', $form_clone);
        $variant = isset($form_clone['#nodeformcols_variant']) ? $form_clone['#nodeformcols_variant'] : '';
        unset($form_clone);
      }
      $variant = empty($variant) ? 'default' : $variant;
      $placements = nodeformscols_field_placements($form['type']['#value'], $variant);
      if (isset($placements['title']['weight'])) {
        $form['field_short_title']['#weight'] = $placements['title']['weight'] + 0.5;
      }
    }
    // Totally unset the short_title field if not required
    if (!$settings['short_title']['required']) {
      unset($form['field_short_title']);
    }
  }
}

/**
 * Validator for node_form.
 */
function short_title_form_validate($form, &$form_state) {
  $values = $form_state['values'];
  $lang = field_language('node', $form['#node'], 'field_short_title');
  $short_title_value = &$form_state['values']['field_short_title'][$lang]['0']['value'];
  $auto_title = FALSE;
  if (module_exists('auto_nodetitle') && function_exists('auto_nodetitle_get_setting')) {
    if ((auto_nodetitle_get_setting($form['#node']->type) == AUTO_NODETITLE_ENABLED) || (auto_nodetitle_get_setting($form['#node']->type) == AUTO_NODETITLE_OPTIONAL)) {
      $auto_title = TRUE;
    }
  }

  if (drupal_strlen($values['title']) > $form['max_title_length']['#value']) {
    if ($short_title_value == '' && $auto_title) {
      // Ensure the generated short_title isn't too long.
      // Actually we should be doing this on form submit, as Title field would not be ready yet
      $short_title_value = substr($values['title'], 0, (int) $form['max_title_length']['#value']);
    }
    elseif ($short_title_value == '' && !$auto_title) {
      form_set_error('field_short_title', t('You must enter a short title as the main title is over @max_length characters long.', array(
          '@max_length' => $form['max_title_length']['#value'],
        )));
    }
    elseif ((stripos($values['title'], $short_title_value) === 0) && (drupal_strlen($short_title_value) === (int) $form['max_title_length']['#value'])) {
      drupal_set_message(t('Short title is an exact truncation of main title. Please check that the short title is semantically valid.'), 'warning');
    }
  }
  // If short title is empty, use the value of Title field
  elseif ($short_title_value == '') {
    $short_title_value = $values['title'];
  }
}

/**
 * Implements hook_node_type_insert().
 */
function short_title_node_type_insert($info) {
  if (variable_get('short_title_enable_' . $info->type, FALSE)) {
    _short_title_attach_field_to_type($info->type);
  }
}

/**
 * Implements hook_node_submit().
 *
 * Generate the short title from the generated node title as soon as the form has been submitted if short title isn't
 * already populated.
 */
function short_title_node_submit($node, $form, &$form_state) {
  if (empty($node->field_short_title[$node->language])) {
    if (module_exists('auto_nodetitle') && function_exists('auto_nodetitle_get_setting')) {
      if ((auto_nodetitle_get_setting($form['#node']->type) == AUTO_NODETITLE_ENABLED) || (auto_nodetitle_get_setting($form['#node']->type) == AUTO_NODETITLE_OPTIONAL)) {
        $auto_title = TRUE;
        $setting = auto_nodetitle_get_setting($node->type);
        if ($setting == AUTO_NODETITLE_ENABLED || ($setting == AUTO_NODETITLE_OPTIONAL && empty($form_state['values']['title']))) {
          auto_nodetitle_set_title($node);
          $lang = $node->language;
          // Set short title, truncated to max length
          $node->field_short_title[$lang][0]['value'] = substr($node->title, 0, isset($form['max_title_length']['#value']) ? $form['max_title_length']['#value'] : 255);
        }
      }
    }
  }
}
