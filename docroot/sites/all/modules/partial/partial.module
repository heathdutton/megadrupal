<?php

/**
 * @file
 * Wraps theme layer to provide a generic template suggestion generator with pseudo preprocessors.
 * It favors a set of simple conventions over defining and configuring a set of specific theme functions.
 *
 * Call partial($name, $variables) the same way you would call theme().
 * Partial will look for a template file the name of which resolves to "partial__{$name}".
 *
 * Partial will also execute a pseudo preprocessor, if defined, so that variables can be further generated and manipulated.
 * Both the following patterns are valid:
 *
 *   partial_{$key}_preprocess($variables);
 *   ACTIVE_THEME_partial__{$key}_preprocess();
 *
 */

/**
 * Implements hook_theme().
 */
function partial_theme() {
  return array(
    'partial' => array(
      'variables' => array(),
      'template' => 'partial',
    ),
  );
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_partial(&$variables) {
  $partial_name = $variables['name'];
  $variables['theme_hook_suggestion'] = 'partial__' . $partial_name;

  // Execute pseudo preprocess.
  $preprocess = 'partial__' . $partial_name . '_preprocess';
  if (function_exists($preprocess)) {
    $preprocess($variables);
  }

  // Execute a theme specific pseudo preprocess.
  $theme = basename(drupal_get_path('theme', $GLOBALS['theme']));
  $theme_preprocess = $theme . '_' . $preprocess;
  if (function_exists($theme_preprocess)) {
    $theme_preprocess($variables);
  }
}

/**
 * Wraps theme().
 */
function partial($name, $variables = array()) {
  $variables['name'] = $name;
  return theme('partial', $variables);
}
