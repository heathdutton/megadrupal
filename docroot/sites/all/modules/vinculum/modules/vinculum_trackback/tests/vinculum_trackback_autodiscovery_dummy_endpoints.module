<?php
/**
 * @file
 * Provide a series of endpoints which present Trackback meta-data in a variety
 * of formats, to test the auto-detection of Trackback support.
 */

/**
 * Implements hook_menu().
 */
function vinculum_trackback_autodiscovery_dummy_endpoints_menu() {
  $items['trackback_dummy_endpoint'] = array(
    'title' => 'Dummy Trackback testing endpoint',
    'page callback' => 'vinculum_trackback_autodiscovery_dummy_endpoints_serve_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Serve a page.
 */
function vinculum_trackback_autodiscovery_dummy_endpoints_serve_page($page) {
  drupal_set_message(t('Testing scenario: @page', array('@page' => $page)));
  // Scenarios:
  // 1. URL inaccessible (e.g. 404).
  // 2. No RDF tags.
  // 3. Single RDF tag, but no trackback:ping attribute.
  // 4. Single RDF tag with trackback:ping attribute
  //    (Sample exactly matching the Trackback specification)
  // 5. Single RDF tag with ping attribute (but using an alternative prefix to
  //    'trackback' for the Trackback API namespace
  //     http://madskills.com/public/xml/rss/module/trackback/)
  // 6. Single RDF tag, wrapped in HTML comments
  // 7. Multiple RDF tags with trackback:ping attributes; single tag with a
  //    matching dc:identifier attribute.
  // 8. Multiple RDF tags with trackback:ping attributes; none with a matching
  //    dc:identifier attribute.

  $content = array();
  switch ($page) {
    case 1:
      drupal_not_found();
      return NULL;

    case 2:
      $content['text'] = t('Test - no RDF content.');
      break;

    case 3:
      $content['text'] = t('Single RDF tag with no trackback:ping attribute.');
      $content['rdf_text']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="' . url(implode('/', arg()), array('absolute' => TRUE)) . '"
              dc:title="Foo Bar" />
          </rdf:RDF>';
      break;
    
    case 4:
      $content['text']['#markup'] = t('Trackback specification RDF text (not using HTML comment tags)');
      $content['rdf_text']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="' . url(implode('/', arg()), array('absolute' => TRUE)) . '"
              dc:title="Foo Bar"
              trackback:ping="http://www.foo.com/tb.cgi/5" />
          </rdf:RDF>';
      break;

    case 5:
      $content['text']['#markup'] = t('Trackback specification RDF text, but using an alternative prefix for the trackback namespace (not using HTML comment tags)');
      $content['rdf_text']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:tb="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="' . url(implode('/', arg()), array('absolute' => TRUE)) . '"
              dc:title="Foo Bar"
              tb:ping="http://example.com/tb/5" />
          </rdf:RDF>';
      break;

    case 6:
      $content['text']['#markup'] = t('Trackback specification RDF text (wrapped in HTML comment tags)');
      $content['rdf_text']['#markup'] = '
          <!--
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="' . url(implode('/', arg()), array('absolute' => TRUE)) . '"
              dc:title="Foo Bar"
              trackback:ping="http://example.com/tb/6" />
          </rdf:RDF>
          -->';
      break;

    case 7:
      $content['text']['#markup'] = t('Multiple RDF tags with trackback:ping attributes; single tag with a matching dc:identifier attribute');
      // Incorrect trackback element.
      $content['rdf_text1']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="http://example.com/foo7a"
              dc:title="Foo Bar"
              trackback:ping="http://example.com/tb/7a" />
          </rdf:RDF>';
      // Correct trackback element.
      $content['rdf_text2']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="' . url(implode('/', arg()), array('absolute' => TRUE)) . '"
              dc:title="Foo Bar"
              trackback:ping="http://example.com/tb/7b" />
          </rdf:RDF>';
      // Incorrect trackback element.
      $content['rdf_text3']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="http://example.com/foo7c"
              dc:title="Foo Bar"
              trackback:ping="http://example.com/tb/7c" />
          </rdf:RDF>';
      break;

    case 8:
      $content['text']['#markup'] = t('Multiple RDF tags with trackback:ping attributes; none with a matching dc:identifier attribute.');
      // Incorrect trackback element.
      $content['rdf_text1']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="http://example.com/foo8a"
              dc:title="Foo Bar"
              trackback:ping="http://example.com/tb/8a" />
          </rdf:RDF>';
      // Incorrect trackback element.
      $content['rdf_text2']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="http://example.com/foo8b"
              dc:title="Foo Bar"
              trackback:ping="http://example.com/tb/8b" />
          </rdf:RDF>';
      // Incorrect trackback element.
      $content['rdf_text3']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="http://example.com/foo8c"
              dc:title="Foo Bar"
              trackback:ping="http://example.com/tb/7c" />
          </rdf:RDF>';
      break;
  }

  return $content;
}
