<?php
/**
 * @file
 * Provide a series of endpoints which present pingback metadata, either with
 * a <link> tag, a HTTP header, or both.
 */


/**
 * Implements hook_menu().
 */
function vinculum_pingback_dummy_endpoints_menu() {
  $items['pingback_dummy_endpoint'] = array(
    'title' => 'Dummy pingback testing endpoint',
    'page callback' => 'vinculum_pingback_dummy_endpoints_serve_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Serve a page.
 */
function vinculum_pingback_dummy_endpoints_serve_page($page) {
  drupal_set_message(t('Testing scenario: @page', array('@page' => $page)));

  // Scenarios:
  // 1. URL inaccessible (e.g. 404).
  // 2. Valid <link> tag.
  // 3. Valid HTTP header.
  $pingback_endpoint = $GLOBALS['base_url'] . '/xmlrpc.php';


  $content = array();
  switch ($page) {
    case 0:
      drupal_not_found();
      return NULL;

    case 1:
      $ep = $pingback_endpoint . '/link_tag';
      drupal_add_html_head_link(array('rel' => 'pingback', 'href' => $ep));
      $content['text'] = t('Test - provides link tag.');
      break;

    case 2:
    $ep = $pingback_endpoint . '/http_header';
      drupal_add_http_header('X-Pingback', $ep);
      $content['text'] = t('Test - provides HTTP header.');
      break;
    
    case 3:
      $ep = $pingback_endpoint . '/link_tag_and_http_header';
      drupal_add_html_head_link(array('rel' => 'pingback', 'href' => $ep));
      drupal_add_http_header('X-Pingback', $ep);
      $content['text'] = t('Test - provides HTTP header.');
      break;
  }

  return $content;
}
