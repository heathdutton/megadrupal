<?php
/**
 * @file
 * Provides a set of test URLs and endpoints which receive and handle pingbacks
 * and trackbacks.
 */

// Internal path to the pingback's test endpoint.
define('VINCULUM_TEST_PINGBACK_ENDPOINT', 'vinculum_dummy_endpoints/pingback_endpoint');

// Internal path to the trackback's test endpoint.
define('VINCULUM_TEST_TRACKBACK_ENDPOINT', 'vinculum_dummy_endpoints/trackback_endpoint');

/**
 * Implements hook_menu().
 */
function vinculum_dummy_endpoints_menu() {

  // Endpoint for registering test Pingbacks.
  $items[VINCULUM_TEST_PINGBACK_ENDPOINT] = array(
    'title' => 'Endpoint for receiving test pingbacks',
    'page callback' => 'vinculum_dummy_endpoints__handle_pingback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  // Endpoint for registering test Trackbacks.
  $items[VINCULUM_TEST_TRACKBACK_ENDPOINT] = array(
    'title' => 'Endpoint for receiving test pingbacks',
    'page callback' => 'vinculum_dummy_endpoints__handle_trackback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );



  $items['vinculum_dummy_endpoints/no_vinculum_support'] = array(
    'title' => 'Dummy Trackback testing endpoint',
    'page callback' => 'vinculum_dummy_endpoints_serve_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['vinculum_dummy_endpoints/pingback_only'] = array(
    'title' => 'Dummy Trackback testing endpoint',
    'page callback' => 'vinculum_dummy_endpoints_serve_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['vinculum_dummy_endpoints/trackback_only'] = array(
    'title' => 'Dummy Trackback testing endpoint',
    'page callback' => 'vinculum_dummy_endpoints_serve_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['vinculum_dummy_endpoints/pingback_and_trackback'] = array(
    'title' => 'Dummy Trackback testing endpoint',
    'page callback' => 'vinculum_dummy_endpoints_serve_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Page-handler.
 */
function vinculum_dummy_endpoints_serve_page($arg) {
  $pingback_endpoint  = url(VINCULUM_TEST_PINGBACK_ENDPOINT, array('absolute' => TRUE));
  $trackback_endpoint = url(VINCULUM_TEST_TRACKBACK_ENDPOINT, array('absolute' => TRUE));

  $content = array();
  switch ($arg) {
    case 'no_vinculum_support';
      $content['text']['#markup'] = t('No vinculum support.');
      break;

    case 'pingback_only';
      drupal_add_http_header('X-Pingback', $pingback_endpoint);
      drupal_add_html_head_link(array('rel' => 'pingback', 'href' => $pingback_endpoint));
      $content['text']['#markup'] = t('Pingback support only.');
      break;

    case 'trackback_only';
      $content['text']['#markup'] = t('Trackback support only.');
      $content['rdf_text']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="' . url(implode('/', arg()), array('absolute' => TRUE)) . '"
              dc:title="Foo Bar"
              trackback:ping="' . $trackback_endpoint . '" />
          </rdf:RDF>';
      break;

    case 'pingback_and_trackback';
      drupal_add_http_header('X-Pingback', $pingback_endpoint);
      drupal_add_html_head_link(array('rel' => 'pingback', 'href' => $pingback_endpoint));

      $content['text']['#markup'] = t('Trackback and pingback support.');
      $content['rdf_text']['#markup'] = '
          <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                   xmlns:dc="http://purl.org/dc/elements/1.1/"
                   xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
          <rdf:Description
              rdf:about="http://www.foo.com/archive.html#foo"
              dc:identifier="' . url(implode('/', arg()), array('absolute' => TRUE)) . '"
              dc:title="Foo Bar"
              trackback:ping="' . $trackback_endpoint . '" />
          </rdf:RDF>';
      break;
  }

  return $content;
}


/**
 * Endpoint for registering test Pingbacks.
 */
function vinculum_dummy_endpoints__handle_pingback() {
  // @TODO.

}

/**
 * Endpoint for registering test Trackbacks.
 */
function vinculum_dummy_endpoints__handle_trackback() {
  // Expect trackback submissions to be a POST request with the following
  // parameters:
  // - url
  // - title
  // - blog_name
  // - excerpt

  // Debug entry to watchdog.
  $params = array(
    '!request_data' => str_replace("\n", "<br />\n", var_export($_REQUEST, TRUE))
  );
  watchdog('Vinculum dummy endpoint', 'Handling trackback at endpoint with request data: !request_data', $params, WATCHDOG_DEBUG);

  // All responses are XML format.
  drupal_add_http_header('Content-Type', 'text/xml');

  // MUST provide a URL parameter, and MUST be POST.
  if ($_SERVER['REQUEST_METHOD'] != 'POST' || !isset($_REQUEST['url'])) {
    watchdog('Vinculum dummy endpoint', 'Failing trackback request.', array(), WATCHDOG_DEBUG);

    drupal_add_http_header('Status', '400 Bad Request');

    $msg = t('The Trackback could not be saved.');
    $response = array();
    $response[] = '<?xml version="1.0" encoding="utf-8"?>';
    $response[] = '<response>';
    $response[] = '<error>1</error>';
    $response[] = '<message>' . htmlentities($msg) . '</message>';
    $response[] = '</response>';
    // Add a trailing new-line.
    $response[] = '';
    $response = implode("\n", $response);

    // Provide feedback for the test script to track.
    variable_set('vinculum_testing_last_trackback', t('Trackback request failed.'));

    echo $response;
    return NULL;
  }

  $trackback = array(
    'url'       => $_REQUEST['url'],
    'title'     => isset($_REQUEST['title'])     ? $_REQUEST['title'] : NULL,
    'blog_name' => isset($_REQUEST['blog_name']) ? $_REQUEST['blog_name'] : NULL,
    'excerpt'   => isset($_REQUEST['excerpt'])   ? $_REQUEST['excerpt'] : NULL,
  );

  watchdog('Vinculum dummy endpoint', 'Passing trackback request.', array(), WATCHDOG_DEBUG);

  // Set the incoming data to a variable for the test script to check.
  variable_set('vinculum_testing_last_trackback', $trackback);

  // Report success.
  $response = array();
  $response[] = '<?xml version="1.0" encoding="utf-8"?>';
  $response[] = '<response>';
  $response[] = '<error>0</error>';
  $response[] = '</response>';
  // Add a trailing new-line.
  $response[] = '';
  $response = implode("\n", $response);

  drupal_add_http_header('Status', '202 Accepted');
  echo $response;
  return NULL;
}
