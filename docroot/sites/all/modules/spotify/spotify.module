<?php

/**
 * @file
 * Provides integration with the Spotify Metadata API.
 */

/**
 * Form for testing the API.
 */
function spotify_api_test($form, &$form_state) {
  $form['type'] = array(
    '#type' => 'select',
    '#title' => t('Type'),
    '#description' => t('The type of data to search for.'),
    '#options' => array(
      'artist' => t('Artist'),
      'album' => t('Album'),
      'track' => t('Track'),
    ),
    '#required' => TRUE,
  );

  $form['query'] = array(
    '#type' => 'textfield',
    '#title' => t('Query'),
    '#description' => t('Search string.'),
    '#required' => TRUE,
  );
  
  $form['search'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
    '#submit' => array('spotify_api_test_submit'),
    '#ajax' => array(
      'callback' => 'spotify_api_test_ajax',
      'wrapper' => 'spotify-results-wrapper',
      'method' => 'replace',
    ),
  );

  if (isset($form_state['res'])) {
    $results = $form_state['res'];
  }
  else {
    $results = t('Construct your query with the help of the form above.');
  }

  $form['results'] = array(
    '#type' => 'fieldset',
    '#title' => t('Results'),
    '#prefix' => '<div id="spotify-results-wrapper">',
    '#suffix' => '</div>',
  );

  $form['results']['data'] = array(
    '#prefix' => '<pre>',
    '#suffix' => '</pre>',
    '#markup' => $results,
  );

  return $form;
}

/**
 * Spotify API test AJAX callback.
 */
function spotify_api_test_ajax($form, $form_state) {
  return $form['results'];
}

/**
 * Spotify API test submit callback.
 */
function spotify_api_test_submit($form, &$form_state) {
  module_load_include('inc', 'spotify', 'spotify.api');
  $function = 'spotify_search_' . $form_state['values']['type'];
  if (function_exists($function)) {
    $results = $function($form_state['values']['query']);
  }
  $form_state['res'] = htmlentities($results->data);
  unset($form_state['input']['results']);
  $form_state['rebuild'] = TRUE;
}

/**
 * Implements hook_menu().
 */
function spotify_menu() {
  $items = array();
  
  $items['admin/config/media/spotify'] = array(
    'title' => 'Spotify',
    'description' => 'Configure Spotify Metadata API settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spotify_settings'),
    'access arguments' => array('administer spotify'),
    'type' => MENU_NORMAL_ITEM,
  );
  
   $items['admin/config/media/spotify/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );

  $items['admin/config/media/spotify/test'] = array(
    'title' => 'API Test',
    'description' => 'Test the Spotify Metadata API.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spotify_api_test'),
    'access arguments' => array('administer spotify'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function spotify_permission() {
  return array(
    'administer spotify' => array(
      'title' => t('Administer Spotify'),
      'description' => t('Perform administration tasks on Spotify module.'),
    ),
  );
}

/**
 * Settings form.
 */
function spotify_settings($form, &$form_state) {
  $form['spotify_territories'] = array(
    '#type' => 'textfield',
    '#title' => t('Countries'),
    '#description' => t('Optionaly restrict results from Spotify lookups to these countries. Enter a comma seperated list of county codes in the <a href="@link">ISO 3166-1 alpha-2</a> format.', array(
      '@link' => 'http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2',
    )),
    '#default_value' => variable_get('spotify_territories', ''),
  );

  return system_settings_form($form);
}
