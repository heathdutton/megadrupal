<?php

/**
 * @file
 * display record count in header or footer if pager is implemented
 * in view's display.
 *
 * This module also has overridden feature. The main entry
 * point of this module is views_record_count_form_alter(), where it add the
 * views record count and message region selector with default values and its
 * submit handler attached. If overridden values are being used in the view, in
 * form alter hook there is an overridden handler also. So that they will be
 * reflected in multiple display such as page, block, default etc.
 *
 */
/**
 * Implements hook_views_pre_render().
 */
function views_record_count_views_pre_render($view) {
  $total = isset($view->total_rows) ? $view->total_rows : count($view->result);

  $current_display = $view->current_display;
  $display_options = $view->display[$current_display]->display_options;
  $pager = $view->query->pager;
  if (isset($pager) && ($pager instanceof views_plugin_pager_full
      || $pager instanceof views_plugin_pager_mini
      || $pager instanceof views_plugin_pager_some)
      && isset($display_options['views_record_count'])
      && $display_options['views_record_count'] == 'yes') {
    drupal_add_css(drupal_get_path('module', 'views_record_count') . "/css/views-record-count.css");
    $message = '<div id="views-record-count-text"><strong>' . format_plural($total, '@count record', '@count records') . t(' found.') . '</strong></div>';
    $message_location = $display_options['views_record_count_region'] ? $display_options['views_record_count_region'] : 'footer';
    if ($message_location == 'footer') {
      $message_location = 'attachment_after';
    }
    else {
      $message_location = 'attachment_before';
    }
    $view->{$message_location} = $message;
  }
}

/**
 * Implements hook_form_alter().
 */
function views_record_count_form_views_ui_edit_display_form_alter(&$form, &$form_state, $form_id) {
  if ($form_state['section'] == 'pager_options') {
    $view = &$form_state['view'];
    $display_id = $form_state['display_id'];
    $display = &$view->display[$display_id];
    $form['options'] += views_record_count_options($display);
    $form['buttons']['#weight'] = 10;
    $form['buttons']['submit']['#submit'] = array('views_record_count_submission');
    if (isset($form['override']['button']['#submit'])) {
      $form['override']['button']['#submit'] = array('views_record_count_override_submission');
    }
  }
}

/**
 * function to get views record count options
 *
 * @param object $display
 *   This is the display object
 *
 * @return array
 *   a form element array
 */
function views_record_count_options($display) {
  $form = array();
  $views_record_count = $display->handler->get_option('views_record_count');
  $views_record_count_default = $views_record_count ? $views_record_count : 'no';
  $views_record_count_options = array(
    'yes' => t('Yes'),
    'no' => t('No'),
  );
  $form['views_record_count'] = array(
    '#type' => 'radios',
    '#title' => t('Display Record Count'),
    '#options' => $views_record_count_options,
    '#default_value' => $views_record_count_default,
    '#weight' => 1,
  );
  $views_record_count_region = $display->handler->get_option('views_record_count_region');
  $views_record_count_region_default = $views_record_count_region ? $views_record_count_region : 'footer';
  $views_record_count_region_options = array(
    'header' => t('Header'),
    'footer' => t('Footer'),
  );
  $form['views_record_count_region'] = array(
    '#type' => 'radios',
    '#title' => t('Choose Region for Record Count Message'),
    '#options' => $views_record_count_region_options,
    '#default_value' => $views_record_count_region_default,
    '#weight' => 2,
    '#dependency' => array('radio:views_record_count' => array('yes')),
  );
  return $form;
}

/**
 * Submit handler for views record count form.
 */
function views_record_count_submission(&$form, &$form_state) {
  $display = &$form_state['view']->display[$form_state['display_id']];

  $views_record_count = $form_state['values']['views_record_count'];
  $views_record_count_region = $form_state['values']['views_record_count_region'];
  $display->handler->set_option('views_record_count', $views_record_count);
  $display->handler->set_option('views_record_count_region', $views_record_count_region);
  $display->handler->options_submit($form, $form_state);
  views_ui_cache_set($form_state['view']);
}

/**
 * Override handler for views record count form.
 */
function views_record_count_override_submission(&$form, &$form_state) {
  $display = &$form_state['view']->display[$form_state['display_id']];
  $display->handler->options_override($form, $form_state);

  views_ui_cache_set($form_state['view']);
  $form_state['rerender'] = TRUE;
  $form_state['rebuild'] = TRUE;
}
