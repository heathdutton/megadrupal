<?php

/**
 * @file
 * Install, update and uninstall functions for the course_relationships module.
 *
 */

/**
 * @file
 * Implement schema, install, and uninstall hooks.
 */
function course_relationships_install() {
  $ret = array();
  db_add_field('course_node', 'relationships', array(
    'type' => 'text',
    'serialize' => TRUE,
  ));
}

/**
 * Implements hook_schema_alter().
 */
function course_relationships_schema_alter(&$schema) {
  $schema['course_node']['fields']['relationships'] = array(
    'type' => 'text',
    'serialize' => TRUE,
  );
}

/**
 * Migrate old course relationships to course objects of type course.
 */
function course_relationships_update_6401() {
  drupal_get_schema(NULL, TRUE);

  // @todo have to figure out how to migrate this field

  $sql = "select cr.nid, cr2.required, cr.delta, field_course_relationships_nid as child FROM {node} np
    INNER JOIN {content_field_course_relationships} cr ON (cr.vid = np.vid)
    INNER JOIN {course_relationships} cr2 ON (field_course_relationships_nid = cr2.child)
    INNER JOIN {node} n ON cr.field_course_relationships_nid = n.nid
    ORDER BY cr.nid, delta asc";
  // TODO Please convert this statement to the D7 database API syntax.
  $result = db_query($sql);
  $courses = array();
  while ($row = $result->fetch()) {
    if (!$courses[$row->nid]) {
      $node = node_load($row->nid);
      $courses[$row->nid] = course_get_course($node);
    }

    $course = node_load($row->child);
    $courseObject = course_get_course_object('course_relationships', 'course');
    $courseObject->setInstanceId($row->child);
    $courseObject->setCourse($courses[$row->nid]);
    $courseObject->setOption('required', $row->required);
    $courseObject->setOption('weight', $row->delta);
    $courseObject->setOption('title', $course->title);
    $courseObject->setOption('enabled', 1);
    $courseObject->save();
  }
  db_drop_table('course_relationships');

  return t('Migrated old course relationships to course objects.');
}

/**
 * Migrate old course_relationships_node table to serialized data (in prep for a general course settings serialization)
 */
function course_relationships_update_6402() {
  db_add_field('course_node', 'relationships', array(
    'type' => 'text',
    'serialize' => TRUE,
  ));
  $sql = "SELECT * FROM {course_relationships_node}";
  $result = db_query($sql);
  while ($row = $result->fetchAssoc()) {
    db_update('course_node')
      ->fields(array(
        'relationships' => serialize($row),
      ))
      ->condition('nid', $row['nid'])
      ->execute();
  }
  return t('Migrate old course relationships metadata to serialized storage');
}
