<?php
    /**
 * @file
 * Schema definitions install/update/uninstall hooks . 
 */
 
  /**
  * Implements fo hook_install()
  */
  function yelp_blocks_install() {
    //na da
  }
 
  /**
   * Implements hook_uninstall()
   */
  function yelp_blocks_uninstall() {
    drupal_uninstall_schema('yelp_blocks');
  }
 
  /**
 * Implements hook_schema() . 
 */
  function yelp_blocks_schema() {
    $schema  = array();
    $schema['yelp_blocks'] = array(
      'description'   => t('Table that contains yelp block settings'), 
      'fields'   => array(
        'yelp_block_id'  => array(
          'type'          => 'serial', 
          'unsigned'      => TRUE, 
          'not null'      => TRUE, 
          'description'  => 'The primary unique id', 
        ), 
        'machine_name'   => array(
          'type'          => 'varchar', 
          'length'        => 255, 
          'not null'      => TRUE, 
          'default'       => '', 
          'description'   => 'the unique machine name for a block', 
        ), 
        'title'  => array(
          'type'          => 'varchar', 
          'length'        => 255, 
          'not null'      => TRUE, 
          'default'       => '', 
          'description'   => 'the title of a block', 
        ), 
        'admin_title'  => array(
          'type'          => 'varchar', 
          'length'        => 255, 
          'not null'      => TRUE, 
          'default'       => '', 
          'description'   => 'the admin title for a block', 
        ), 
        'cache'  => array(
          'type'          => 'varchar', 
          'length'        => 40, 
          'not null'      => TRUE, 
          'default'       => 'DRUPAL_CACHE_PER_PAGE', 
          'description'   => 'the cache setting for this block', 
        ), 
        'yelp_id'   => array(
          'type'         => 'int', 
          'not null'     => TRUE, 
          'description'   => 'the yelp_api id for search data', 
        ), 
      ), 
      'primary key'  => array('yelp_block_id'), 
      'unique keys'  => array(
        'machine_name'  => array('machine_name'), 
      ), 
    );
    return $schema;
  }