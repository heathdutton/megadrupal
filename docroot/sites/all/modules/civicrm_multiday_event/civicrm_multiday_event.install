<?php
/**
 * @file
 * Install file.
 */
 
/**
 * Implements hook_install().
 */
function civicrm_multiday_event_install() {
  // create drupal fields
	civicrm_multiday_event_add_fields();
}

function civicrm_multiday_event_add_fields() {
  // Create the 'field_civievent_id' field if it doesn't already exist.
	if (!field_info_field('field_civievent_id')) {
		$field = array(
			'active' => '1',
			'cardinality' => '1',
			'deleted' => '0',
			'entity_types' => array(),
			'field_name' => 'field_civievent_id',
			'foreign keys' => array(),
			'indexes' => array(),
			'module' => 'number',
			'settings' => array(),
			'translatable' => '0',
			'type' => 'number_integer',
    );
    
    field_create_field($field);
   
    // Create the instance on the bundle.
    $instance = array(
			'bundle' => 'civicrm_multiday_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => '3',
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_civievent_id',
      'label' => 'Event ID',
      'required' => FALSE,
      'settings' => array(
        'max' => '',
        'min' => '',
        'prefix' => '',
        'suffix' => '',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'module' => 'number',
        'settings' => array(),
        'type' => 'number',
        'weight' => '1',
      ),
    );
    field_create_instance($instance);
	}
	// Create the 'field_civievent_template' field if it doesn't already exist.
	if (!field_info_field('field_civievent_template')) {
		$field = array(
     'active' => '1',
     'cardinality' => '1',
     'deleted' => '0',
     'entity_types' => array(),
     'field_name' => 'field_civievent_template',
     'field_permissions' => array(
       'type' => '0',
     ),
     'foreign keys' => array(),
     'indexes' => array(
       'value' => array(
         0 => 'value',
       ),
     ),
     'module' => 'list',
     'settings' => array(
       'allowed_values' => array(),
       'allowed_values_function' => '',
       'profile2_private' => FALSE,
     ),
     'translatable' => '0',
     'type' => 'list_integer',
    );
    
    field_create_field($field);
   
    // Create the instance on the bundle.
    $instance = array(
      'bundle' => 'civicrm_multiday_event',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => '4',
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_civievent_template',
      'label' => 'Event Template',
      'required' => 1,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_select',
        'weight' => '2',
      ),
    );
    field_create_instance($instance);
	}
	// Create the 'field_civicrm_multiday_session' field if it doesn't already exist.
	if (!field_info_field('field_civicrm_multiday_session')) {
		$field = array(
      'active' => '1',
      'cardinality' => '-1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_civicrm_multiday_session',
      'field_permissions' => array(
        'type' => '0',
      ),
      'foreign keys' => array(),
      'indexes' => array(),
      'module' => 'field_collection',
      'settings' => array(
        'path' => '',
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'field_collection',
    );
    
    field_create_field($field);
   
    // Create the instance on the bundle.
    $instance = array(
      'bundle' => 'civicrm_multiday_event',
      'default_value' => array(),
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'field_collection',
          'settings' => array(
            'add' => 'Add',
            'delete' => 'Delete',
            'description' => TRUE,
            'edit' => 'Edit',
            'view_mode' => 'full',
          ),
          'type' => 'field_collection_view',
          'weight' => '1',
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_civicrm_multiday_session',
      'label' => 'Sessions',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 0,
        'module' => 'field_collection',
        'settings' => array(),
        'type' => 'field_collection_embed',
        'weight' => '5',
      ),
    );
    field_create_instance($instance);
	}
	// Create the 'field_date_of_first_session' field if it doesn't already exist.
	if (!field_info_field('field_date_of_first_session')) {
		$field = array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_date_of_first_session',
      'foreign keys' => array(),
      'indexes' => array(),
      'module' => 'date',
      'settings' => array(
        'cache_count' => '4',
        'cache_enabled' => 0,
        'granularity' => array(
          'day' => 'day',
          'hour' => 0,
          'minute' => 0,
          'month' => 'month',
          'second' => 0,
          'year' => 'year',
        ),
        'timezone_db' => '',
        'todate' => '',
        'tz_handling' => 'none',
      ),
      'translatable' => '0',
      'type' => 'datetime',
    );
    
    field_create_field($field);
   
    // Create the instance on the bundle.
    $instance = array(
      'bundle' => 'civicrm_multiday_event',
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => '2',
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_date_of_first_session',
      'label' => 'Date of First Session',
      'required' => 0,
      'settings' => array(
        'default_value' => 'now',
        'default_value2' => 'same',
        'default_value_code' => '',
        'default_value_code2' => '',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'date',
        'settings' => array(
          'increment' => 15,
          'input_format' => 'm/d/Y - H:i:s',
          'input_format_custom' => '',
          'label_position' => 'above',
          'text_parts' => array(),
          'year_range' => '-3:+3',
        ),
        'type' => 'date_text',
        'weight' => '6',
      ),
    );
    field_create_instance($instance);
	}
	// Create the 'field_session_date' field if it doesn't already exist.
	if (!field_info_field('field_session_date')) {
		$field = array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_session_date',
      'field_permissions' => array(
        'type' => '0',
      ),
      'foreign keys' => array(),
      'indexes' => array(),
      'module' => 'date',
      'settings' => array(
        'cache_count' => '4',
        'cache_enabled' => 0,
        'granularity' => array(
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'month' => 'month',
          'second' => 0,
          'year' => 'year',
        ),
        'profile2_private' => FALSE,
        'repeat' => '0',
        'timezone_db' => 'UTC',
        'todate' => 'optional',
        'tz_handling' => 'site',
      ),
      'translatable' => '0',
      'type' => 'datetime',
    );
    
    field_create_field($field);
   
    // Create the instance on the bundle.
    $instance = array(
      'bundle' => 'field_civicrm_multiday_session',
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'module' => 'date',
          'settings' => array(
            'format_type' => 'long',
            'fromto' => 'both',
            'multiple_from' => '',
            'multiple_number' => '',
            'multiple_to' => '',
          ),
          'type' => 'date_default',
          'weight' => '0',
        ),
        'full' => array(
          'label' => 'hidden',
          'module' => 'date',
          'settings' => array(
            'format_type' => 'long',
            'fromto' => 'both',
            'multiple_from' => '',
            'multiple_number' => '',
            'multiple_to' => '',
          ),
          'type' => 'date_default',
          'weight' => '0',
        ),
      ),
      'entity_type' => 'field_collection_item',
      'field_name' => 'field_session_date',
      'label' => 'Session Date',
      'required' => 0,
      'settings' => array(
        'default_value' => 'now',
        'default_value2' => 'strtotime',
        'default_value_code' => '',
        'default_value_code2' => '+2 hours',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'date',
        'settings' => array(
          'display_all_day' => 0,
          'increment' => '15',
          'input_format' => 'm/d/Y - g:i:sa',
          'input_format_custom' => '',
          'label_position' => 'above',
          'repeat_collapsed' => 0,
          'text_parts' => array(),
          'year_range' => '-3:+3',
        ),
        'type' => 'date_popup',
        'weight' => '1',
      ),
    );
    field_create_instance($instance);
	}
	// create the body instance
	$instance = array(
    'bundle' => 'civicrm_multiday_event',
    'default_value' => array(
      0 => array(
        'format' => 'filtered_html',
        'summary' => '[civicrm-template-event-summary]',
        'value' => '[civicrm-template-complete-description]',
      ),
    ),
    'deleted' => '0',
    'description' => 'This text is initially populated from template when saved.  To update the default with specific instructions, first save the event.  Then edit the event to make changes.',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => '0',
      ),
      'teaser' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(
          'trim_length' => 600,
        ),
        'type' => 'text_summary_or_trimmed',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'body',
    'label' => 'Body',
    'required' => 0,
    'settings' => array(
      'display_summary' => 1,
      'text_processing' => '1',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => '20',
        'summary_rows' => 5,
      ),
      'type' => 'text_textarea_with_summary',
      'weight' => '4',
    ),
	);
	field_create_instance($instance);
}


// Happily borrowed programatic date formating from @bblake
// http://www.agileapproach.com/blog-entry/programatically-creating-date-formats

/**
* Create the date format.
*/
function civicrm_multiday_event_update_7001() {
  //first, check to see if the format you want to add already exists
  if (!db_query("SELECT dfid FROM {date_formats} WHERE format = 'n-d'")->fetchField()) {
    // if it doesn't exist, add it
    db_insert('date_formats')
      ->fields(array(
        'format' => 'n-d',  // PHP Date String
        'type' => 'custom',          // 'custom'
        'locked' => 0,               // 0 = user-specified date format
      ))
      ->execute();
  }
}

/**
* Create the date type.
*/
function civicrm_multiday_event_update_7002() {
  db_insert('date_format_type')
    ->fields(array(
      'type' => 'civicrm_multiday_event_date_format',  // Machine Name
      'title' => 'CiviCRM Multiday Event Date Format', // Display Name
      'locked' => 0,        // 1 = can't change through UI, 0 = can change
    ))
    ->execute();

  // Variable name is date_format_MACHINENAME from previous insert
  variable_set('civicrm_multiday_event_date_format', 'n-d');
}


/**
 * Implement hook_uninstall().
 */
function civicrm_multiday_event_uninstall() {
  // delete the date format
	db_delete('date_format_type')
    ->condition('type', 'civicrm_multiday_event_date_format')
    ->execute();
	// delete drupal variables
  variable_del('civicrm_multiday_event_date_format');
  variable_del('civicrm_multiday_event_delete_civievent');
  variable_del('civicrm_multiday_event_allow_title_override');
  variable_del('civicrm_multiday_event_match_permission');
  variable_del('civicrm_multiday_event_first_session_restriction');
  variable_del('civicrm_multiday_event_registration_dates_restriction');
  variable_del('civicrm_multiday_event_inactive_civievent');
  variable_del('civicrm_multiday_event_unpublish_civievent');


	// delete field instances for 'civicrm_multiday_event' bundle
	$params = array(
		'bundle' => 'civicrm_multiday_event',
	);
	foreach(field_read_instances($params) as $instance) {
		field_delete_instance($instance);
	}
	//delte field instances for 'field_civicrm_multiday_session' field collection bundle
	$params = array(
		'bundle' => 'field_multiday_session',
	);
	foreach(field_read_instances($params) as $instance) {
		field_delete_instance($instance);
	}
	//delte field instances for 'comment_node_civicrm_multiday_event' field collection bundle
	$params = array(
		'bundle' => 'comment_node_civicrm_multiday_event',
	);
	foreach(field_read_instances($params) as $instance) {
		field_delete_instance($instance);
	}
}




