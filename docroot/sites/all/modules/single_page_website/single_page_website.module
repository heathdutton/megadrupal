<?php

/**
 * Implements hook_permission().
 */
function single_page_website_permission() {
  return array(
    'administer single page' => array(
      'title' => t('Administer single page'),
      'description' => t('Configure Single Page Website settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function single_page_website_menu() {
  $items = array();
  $items['single_page'] = array(
    'title' => 'Single Page Website',
    'page callback' => 'single_page_website_front_page',
    'access callback' => TRUE,
  );
  $items['admin/config/system/single-page'] = array(
    'title' => 'Single Page Settings',
    'description' => 'Configure theme and easing of the single page etc.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('single_page_website_settings_form'),
    'access arguments' => array('administer single page'),
    'file' => 'single_page_website.admin.inc',
  );
  return $items;
}

function single_page_website_front_page() {
  global $base_url;

  if (!function_exists('str_get_html')) {
    include_once 'includes/simple_html_dom/simple_html_dom.php';
  }

  if (variable_get('single_page_website_theme') != variable_get('theme_default')) {
    return "Please visit " . l("Single Page Website Configuration Page", "admin/config/system/single-page") . " to edit and save module settings.";
  }
  drupal_add_css(variable_get('single_page_website_content', '#main') . ' {margin-top: 0;}',
    array(
      'group' => CSS_THEME,
      'type' => 'inline',
      'media' => 'screen',
      'preprocess' => FALSE,
      'weight' => '9999',
    )
  );
  $path = libraries_get_path('jquery.easing') . '/jquery.easing.js';
  if (file_exists($path) && !module_exists('colorbox')) {
    drupal_add_js($path);
    $easing = variable_get('single_page_website_easing', 'jswing');
  }
  else {
    $easing = 'none';
    drupal_add_js(array('single_page' => array('easing' => 'none')), 'setting');
  }
  drupal_add_js(array('single_page' => array('header_element' => variable_get('single_page_website_header', '#header'),
      'easing' => $easing,
      'footer_element' => variable_get('single_page_website_footer', '#footer-wrapper'), 'content_element' => variable_get('single_page_website_content', '#content .content'),
      'menu_element' => variable_get('single_page_website_menu', '#main-menu'))), 'setting');

  if(variable_get('single_page_website_sub_theme', 'bartik') == 'bootstrap') {
    drupal_add_js(drupal_get_path('module', 'single_page_website') . '/js/bootstrap.js');
    drupal_add_js(drupal_get_path('module', 'single_page_website') . '/js/bootstrap_scroll.js');
  }
  else {
    drupal_add_js(drupal_get_path('module', 'single_page_website') . '/js/' . variable_get('single_page_website_sub_theme', 'bartik') . '.js');
    drupal_add_js(drupal_get_path('module', 'single_page_website') . '/js/scroll.js');
  }  

  //  if (module_exists('colorbox')) {
  //    drupal_add_js(drupal_get_path('module', 'single_page_website') . '/js/colorbox_fix.js');
  //  }
  // We need to collect all messages
  $messages = drupal_get_messages();

  $output = '';
  $output .= '<div id="single_page_wrapper">';
  $menu_name = variable_get('single_page_website_menu', '#main-menu');
  $menu_name = drupal_substr($menu_name, 1);
  $tree = menu_tree($menu_name);
  // to fix Bootstrap menu selector issue
  if(empty($tree)) {
    $tree = menu_tree('main-menu');
  }
  // Do a Depth First Search on children (#below)
  $stack = array();
  while (!empty($tree)) {
    $top = array_shift($tree);
    $stack[] = $top;
    if (isset($top['#below'])) {
      $children = $top['#below'];
      $tree = array_merge($children, $tree);
    }
  }
  $tree = $stack;
  foreach ($tree as $item) {
    if (isset($item['#title'])) {
      $href = $item['#href'];
      if ($href == '<front>' || empty($href)) {
        drupal_set_message(t('Your menu contains a link to "front". You should remove this %item from your !menu.', array('%item' => $item['#title'], '!menu' => l($menu_name, 'admin/structure/menu/manage/' . $menu_name))));
        continue;
      }
	  $anchor = "spw-" . str_replace("/", "-", drupal_get_path_alias($href));
/* 	  if(strstr($anchor, '/')) {
	    $anchor_split = explode('/', $anchor);
		$anchor = $anchor_split[count($anchor_split)-1];
      } */
      $output .= '<a name="' . $anchor . '"></a><div id="' . $anchor . '" class="single_page_wrapper"><div class="single_page">';

      // Set the q to ... required to get the block system working
      $q_orig = $_GET['q'];
      $_GET['q'] = $href;

      $page_callback_result = menu_execute_active_handler($href, FALSE);

      // Collect generated messages.
      $messages += drupal_get_messages();

      // When the menu handled didn't return a node page (e.g. /contact), use the menu title
      if (!isset($page_callback_result['nodes'])) {
        drupal_set_title($item['#title']);
      }

      // We mimic menu_execute_active_handler()
      $router_item = menu_get_item($href);
      if ($router_item['access']) {
        if ($router_item['include_file']) {
          require_once DRUPAL_ROOT . '/' . $router_item['include_file'];
        }
        $page_callback_result = call_user_func_array($router_item['page_callback'], $router_item['page_arguments']);
      }
      else {
        $page_callback_result = MENU_ACCESS_DENIED;
      }
      if (is_array($page_callback_result)) {
        $content = drupal_render_page($page_callback_result);
        $html = str_get_html($content);
        foreach ($html->find(variable_get('single_page_website_content', '#content .content')) as $e) {
          $output .= $e->innertext;
        }
      }
      // @see for instance function views_page() which returns a string
      elseif (is_string($page_callback_result)) {
        $output .= $page_callback_result;
      }
      else {
        // Report error
        $output .= "<p>An error '" . $page_callback_result . "' occurred for " . $item['#href'] . '</p>';
      }
      $output .= '</div></div>';
      $_GET['q'] = $q_orig;
    }
  }

  // Reinject the messages?
  foreach ($messages as $type => $data) {
    foreach ($data as $message) {
      drupal_set_message($message, $type);
    }
  }
  $output .= '</div>';
  if (variable_get('site_slogan')) {
    drupal_set_title(trim(drupal_html_to_text(variable_get('site_slogan'))));
  }
  else {
    drupal_set_title(t(''));
  }
  $path = libraries_get_path('jquery.autoanchor') . '/jquery.autoanchor.js';
  if (file_exists($path)) {
    drupal_add_js($path);
    drupal_add_js('
      (function($){
        $(document).ready(function(){
          $("a[name]").addanchors();
  });
  })(jQuery);
  ', 'inline');
  }
  return $output;
}

/**
 * Implements hook_init().
 */
function single_page_website_init() {
  drupal_add_js(array('single_page' => array('menu_element' => variable_get('single_page_website_menu', '#main-menu'))), 'setting');
  if (variable_get('single_page_website_sub_theme', 'bartik') == 'bootstrap') {
    drupal_add_js(drupal_get_path('module', 'single_page_website') . '/js/menu_bootstrap.js');
  }
  else {
    drupal_add_js(drupal_get_path('module', 'single_page_website') . '/js/menu.js');
  }
}

/**
 * Implements hook_form_alter().
 */
function single_page_website_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id != 'search_block_form' && $form_id != 'update_script_selection_form') { // some forms that shold not leave user on the single page
    if ((variable_get('site_frontpage') == 'single_page' && (drupal_is_front_page())) || arg(0) == 'single_page') {
      if (isset($form_state['build_info']['args'][0])) {
        $form['#action'] = 'single_page#' . $form_state['build_info']['args'][0]->title;
      }
      else {
        $form['#action'] = 'single_page#' . variable_get('site_frontpage', 'single_page');
      }

      $form['#submit'][] = 'single_page_website_go_back';
    }
  }
}

function single_page_website_go_back() {
  drupal_goto('single_page');
}

/**
 * Implements hook_disable().
 */
function single_page_website_disable() {
  if(variable_get('site_frontpage') == 'single_page') {
    variable_set('site_frontpage', 'node');
  }
}