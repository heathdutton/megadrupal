<?php
/**
 * @file
 * Add basic API moethods for Trello
 */

/**
 * Implements hook_menu().
 */
function trello_api_menu() {
  $items['admin/config/services/trello'] = array(
    'title' => 'Trello',
    'description' => 'Setup the integration to Trello',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('trello_api_settings_form'),
    'access arguments' => array('administer trello api'),
    'file' => 'trello_api.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function trello_api_permission() {
  return array(
    'administer trello api' =>  array(
      'title' => t('Administer Trello API'),
      'description' => t('Perform administration tasks for Trello API.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function trello_api_theme() {
  $path = drupal_get_path('module', 'trello_api') . '/theme';
  return array(
    'trello_api_board' => array(
      'render element' => 'trello_api_board',
      'path' => $path,
      'template' => 'trello-api-board',
    ),
    'trello_api_card' => array(
      'render element' => 'trello_api_card',
      'path' => $path,
      'template' => 'trello-api-card',
    ),
    'trello_api_label' => array(
      'render element' => 'elements',
      'path' => $path,
      'template' => 'trello-api-label',
      'file' => 'trello_api.theme.inc',
    ),
    'trello_api_list' => array(
      'render element' => 'trello_api_list',
      'path' => $path,
      'template' => 'trello-api-list',
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function trello_api_theme_registry_alter(&$theme_registry) {
  // Don't use theme_entity for labels.
  $theme_registry['trello_api_label']['base hook'] = 'trello_api_label';
}

/**
 * Implements hook_entity_info().
 */
function trello_api_entity_info() {
  return array(
    'trello_api_board' => array(
      'label' => t('Trello board'),
      'entity class' => 'TrelloBoard',
      'controller class' => 'TrelloBoardEntityController',
      'base table' => 'trello_api_board',
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'id',
        'label' => 'name',
      ),
      'module' => 'trello_api',
      'bundles' => array(),
      'view modes' => array(
        'default' => array(
          'label' => t('Default view mode'),
          'custom settings' => FALSE,
        ),
      ),
    ),
    'trello_api_card' => array(
      'label' => t('Trello card'),
      'entity class' => 'TrelloCard',
      'controller class' => 'TrelloCardEntityController',
      'base table' => 'trello_api_card',
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'id',
        'label' => 'name',
      ),
      'module' => 'trello_api',
      'bundles' => array(),
      'view modes' => array(
        'default' => array(
          'label' => t('Default view mode'),
          'custom settings' => FALSE,
        ),
      ),
    ),
    'trello_api_label' => array(
      'label' => t('Trello label'),
      'entity class' => 'TrelloLabel',
      'controller class' => 'TrelloLabelEntityController',
      'base table' => 'trello_api_label',
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'id',
        'label' => 'name',
      ),
      'module' => 'trello_api',
      'bundles' => array(),
      'view modes' => array(
        'default' => array(
          'label' => t('Default view mode'),
          'custom settings' => FALSE,
        ),
      ),
    ),
    'trello_api_list' => array(
      'label' => t('Trello list'),
      'entity class' => 'TrelloList',
      'controller class' => 'TrelloListEntityController',
      'base table' => 'trello_api_list',
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'id',
        'label' => 'name',
      ),
      'module' => 'trello_api',
      'bundles' => array(),
      'view modes' => array(
        'default' => array(
          'label' => t('Default view mode'),
          'custom settings' => FALSE,
        ),
      ),
    ),
  );
}

/**
 * Helper function to get the api object.
 *
 * @param array $settings
 *   The trello api settings.
 *
 * @throws TrelloAPIMalconfiguredException
 *   If could now be instanciated with required settings.
 *
 * @return TrelloAPI
 *   Fully instanciated trello api object.
 */
function trello_api_get_api(array $settings = array(), $reset = FALSE) {
  static $api = NULL;
  if (!$reset && $api) {
    return $api;
  }
  $api = new TrelloAPI($settings);
  return $api;
}
