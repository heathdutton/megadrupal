<?php
/**
 * @file
 * Install, update and uninstall functions for the project_usage module.
 *
 */

/**
 * Implements hook_uninstall().
 */
function project_usage_uninstall() {
  $variables = array(
    'project_usage_active_weeks',
    'project_usage_life_weekly_project',
    'project_usage_life_weekly_release',
    'project_usage_date_long',
    'project_usage_date_short',
  );
  foreach ($variables as $variable) {
    variable_del($variable);
  }
}

/**
 * Implements hook_update_last_removed().
 */
function project_usage_update_last_removed() {
  return 6000;
}

/**
 * Remove dead tables/variables related to raw/daily logging.
 */
function project_usage_update_7000() {
  $variables = array(
    'project_usage_last_daily',
    'project_usage_last_weekly',
    'project_usage_life_daily',
  );
  foreach ($variables as $variable) {
    variable_del($variable);
  }
  db_drop_table('project_usage_raw');
  db_drop_table('project_usage_day');
}

/**
 * Implements hook_schema().
 */
function project_usage_schema() {

  $schema['project_usage_week_project'] = array(
    'description' => 'Table used to store weekly usage information by project and {taxonomy_term_data}.tid.',
    'fields' => array(
      'nid' => array(
        'description' => 'Primary Key: The {node}.nid of the project.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'timestamp' => array(
        'description' => 'Primary Key: A Unix timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'tid' => array(
        'description' => 'Primary Key: The {taxonomy_term_data}.tid of the API compatability version of the release.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'count' => array(
        'description' => 'The number of requests.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid', 'timestamp', 'tid'),
  );

  $schema['project_usage_week_release'] = array(
    'description' => 'Table used to store weekly usage information by project and {taxonomy_term_data}.tid.',
    'fields' => array(
      'nid' => array(
        'description' => 'Primary Key: The {node}.nid of the project.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'timestamp' => array(
        'description' => 'Primary Key: A Unix timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'count' => array(
        'description' => 'The number of requests.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid', 'timestamp'),
  );

  $schema['cache_project_usage'] = array(
    'description' => 'Cache table for the (very expensive to generate) project usage display pages.',
    'fields' => array(
      'cid' => array(
        'description' => 'Primary Key: Unique cache ID.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'data' => array(
        'description' => 'The rendered HTML for a page of project usage data.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
      ),
      'expire' => array(
        'description' => 'A Unix timestamp indicating when the cache entry should expire, or 0 for never.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'A Unix timestamp indicating when the cache entry was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'headers' => array(
        'description' => 'Any custom HTTP headers to be added to cached data.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'serialized' => array(
        'description' => 'A flag to indicate whether content is serialized (1) or not (0).',
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array('expire' => array('expire')),
    'primary key' => array('cid'),
  );

  return $schema;
}

