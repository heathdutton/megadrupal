<?php

/**
 * @file
 * Custom and hook functions for Koponyeg module.
 *
 * @author Dániel Kalmár <kalm.dani@gmail.com>
 */

/**
 * Implements hook_help().
 */
function koponyeg_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/help#koponyeg':
      $output =
        '<h3>' . t('Adding koponyeg blocks') . '</h3>'
      . '<p>' . t('To add new koponyeg blocks, use the "<a href="!add-url">Add koponyeg block</a>" link on the <a href="!block-url">administer blocks page</a>. You will then be able to configure your koponyeg block before adding it.', array('!add-url' => url('admin/structure/block/add-koponyeg-block'), '!block-url' => url('admin/structure/block'))) . '</p>'
      . '<h3>' . t('Configuring koponyeg blocks') . '</h3>'
      . '<p>' . t('When adding or configuring a koponyeg block, there is an added select form element over the default block settings.') . '</p>'
      . '<p>' . t('You can choose from the following region:') . '</p>'
      . '<ul><li>' . t('Central Hungary') . '</li>'
      . '<li>' . t('North Transdanubia') . '</li>'
      . '<li>' . t('Northern Hungary') . '</li>'
      . '<li>' . t('Eastern Hungary') . '</li>'
      . '<li>' . t('South Transdanubia') . '</li>'
      . '<li>' . t('Southern Hungary') . '</li>'
      . '<li>' . t('Balaton') . '</li></ul>';
      break;
  }
  return $output;
}

/**
 * Implements hook_permission().
 */
function koponyeg_permission() {
  return array(
    'administer koponyeg' => array(
      'title' => t('Administer Koponyeg'),
      'description' => t('Create new koponyeg weather block.'),
    ),
  );
}

/**
 * Impelements hook_menu().
 */
function koponyeg_menu() {
  $items = array();

  $items['admin/structure/block/add-koponyeg-block'] = array(
    'title' => 'Add koponyeg block',
    'description' => 'Add new koponyeg weather block',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('koponyeg_add_block_form'),
    'access arguments' => array('administer koponyeg'),
    'type' => MENU_LOCAL_ACTION ,
    'file' => 'koponyeg.admin.inc',
  );

  $items['admin/structure/block/delete-koponyeg-block/%'] = array(
    'title' => 'Delete koponyeg block',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('koponyeg_block_delete', 4),
    'access arguments' => array('administer koponyeg'),
    'type' => MENU_CALLBACK,
    'file' => 'koponyeg.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function koponyeg_block_info() {
  $blocks = array();
  $deltas = variable_get('koponyeg_block_ids', array());

  foreach ($deltas as $delta) {
    $blocks[$delta]['info'] = 'Koponyeg Block ' . $delta;
    $blocks[$delta]['cache'] = DRUPAL_CACHE_GLOBAL;
  }

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function koponyeg_block_view($delta = '') {
  $block = array();

  $region_id = variable_get('koponyeg_forecast_region_' . $delta);
  $block['subject'] = koponyeg_get_regions($region_id);
  $block['content'] = koponyeg_get_weather_content($region_id);

  return $block;
}

/**
 * Implements hook_block_configuration().
 */
function koponyeg_block_configure($delta = '') {
  $form = array();

  $form['koponyeg_forecast_region'] = array(
    '#type' => 'select',
    '#title' => t('Choose a region'),
    '#description' => t('Choose the proper region to get weather forecast from it.'),
    '#options' => koponyeg_get_regions(),
    '#default_value' => variable_get('koponyeg_forecast_region_' . $delta, 1),
  );

  return $form;
}

/**
 * Implements hook_block_save().
 */
function koponyeg_block_save($delta = '', $edit = array()) {
  variable_set('koponyeg_forecast_region_' . $delta, $edit['koponyeg_forecast_region']);
  return;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function koponyeg_form_block_admin_display_form_alter(&$form, $form_state) {
  foreach (variable_get('koponyeg_block_ids', array()) as $delta) {
    $form['blocks']['koponyeg_' . $delta]['delete'] = array(
      '#type' => 'link',
      '#title' => t('delete'),
      '#href' => 'admin/structure/block/delete-koponyeg-block/' . $delta,
    );
  }
}

/**
 * Return the HTML of the weather forecast data of koponyeg.
 *
 * @param int $region_id
 *   The region id. The default value is 1.
 */
function koponyeg_get_weather_content($region_id = 1) {
  $content = '';
  $url = url('http://koponyeg.hu/idojaras_rss.php', array('query' => array('regios' => $region_id)));
  $data = drupal_http_request($url);
  // Get HTML from xml, if exsists.
  if ($data->code == 200) {
    $weather_xml = simplexml_load_string($data->data);
    $content = (string) $weather_xml->channel->item->description;
  }
  else {
    $content = t('No incoming data.');
    // If get error message, add to dblog.
    if (!empty($data->error)) {
      watchdog('koponyeg', $data->error, array(), WATCHDOG_ERROR);
    }
  }

  return $content;
}

/**
 * Returns the regions' name or all of the regions,
 * if no region id is given.
 *
 * @param int $region_id
 *   The region id. The default value is NULL.
 */
function koponyeg_get_regions($region_id = NULL) {
  $options = array(
    1 => t('Central Hungary'),
    2 => t('North Transdanubia'),
    3 => t('Northern Hungary'),
    9 => t('Eastern Hungary'),
    4 => t('South Transdanubia'),
    5 => t('Southern Hungary'),
    6 => t('Balaton'),
  );

  if ($region_id && !empty($options[$region_id])) {
    return $options[$region_id];
  }

  return $options;
}
