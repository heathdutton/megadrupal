<?php
define('PRINT_ANYTHING_PATH', drupal_get_path('module', 'print_anything')); // Path to the module
define('PRINT_ANYTHING_ADMINPATH', 'admin/config/print-anything'); // URL root to use for all admin screens
define('PRINT_ANYTHING_XSS_TAGS', serialize(array('a', 'em', 'strong', 'cite', 'blockquote', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'br')));

function print_anything_menu() {
  $items['print-friendly-page'] = array(
    'page callback' => 'print_anything_print_friendly_page', 
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/print-anything'] = array(
    'title' => 'Print Anything',
    'description' => 'Print Anything tools.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer print anything'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/print-anything/paths'] = array(
    'title' => 'Print Anything Paths',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('print_anything_paths_admin_form'),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/print-anything/settings'] = array(
    'title' => 'Print Anything Settings', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('print_anything_settings_admin_form'),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/print-anything/settings/export'] = array(
    'title' => 'Export',
    'page callback' => 'print_anything_settings_export',
    'access arguments' => array('administer print anything'),
    'file' => 'inc/import_export.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/print-anything/settings/import'] = array(
    'title' => 'Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('print_anything_settings_import_form'),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/import_export.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/print-anything/css-ids/%'] = array(
    'title' => 'List', 
    'page callback' => 'print_anything_cssids_admin',
    'page arguments' => array(4),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/print-anything/path/add'] = array(
    'title' => 'Print Anything Settings', 
    'page callback' => 'print_anything_path_add',
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/print-anything/path/%/edit'] = array(
    'title' => 'Print Anything Settings', 
    'page callback' => 'print_anything_path_edit',
    'page arguments' => array(4),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/print-anything/path/%/delete'] = array(
    'title' => 'Print Anything Settings', 
    'page callback' => 'print_anything_path_delete',
    'page arguments' => array(4),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/print-anything/css-id/%/add'] = array(
    'title' => 'Print Anything Settings', 
    'page callback' => 'print_anything_cssid_add',
    'page arguments' => array(4),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/print-anything/css-id/%/edit'] = array(
    'title' => 'Print Anything Settings', 
    'page callback' => 'print_anything_cssid_edit',
    'page arguments' => array(4),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/print-anything/css-id/%/delete'] = array(
    'title' => 'Print Anything Settings', 
    'page callback' => 'print_anything_cssid_delete',
    'page arguments' => array(4),
    'access arguments' => array('administer print anything'),
    'file' => 'inc/print_anything_admin.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

// Initialize some theme function for the admin pages
function print_anything_theme($existing, $type, $theme, $path) {
  return array(
    'print_anything_cssids_admin_form' => array(
      'render element' => 'form'
    ),
    'print_anything_paths_admin_form' => array(
      'render element' => 'form'
    ),
    'print_anything' => array(
      'template' => 'print_anything'
    )
  );
}

function print_anything_permission() {
  return array(
    'administer print anything' => array(
      'title' => t('Administer print anything'), 
      'description' => t('Access to print anything settings.'),
    ),
  );
}

// The print link block
function print_anything_block_info() {
  $blocks['print_anything_link'] = array(
    'info' => t('Print anything link'), 
  );
  return $blocks;
}
function print_anything_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'print_anything_link':
      $block['content'] = print_anything_link_build();
      break;
  }
  return $block;
}
function print_anything_link_build() {
    // Determine the print page link based on the system's Clean URL setting.
    if (variable_get('clean_url', 0)) {
        $print_page_url = '/print-friendly-page';
      } else {
        $print_page_url = '/?q=print-friendly-page';
      }
  drupal_add_js(array('print_anything' => array('print_page_url' => $print_page_url)), 'setting');

  // Build the block if this is NOT the actual printer page
  if (request_uri() != $print_page_url) {
    // Save current page as next page's referrer
    $_SESSION['print_anything_referrer']   = request_uri();

    drupal_add_js(drupal_get_path('module', 'print_anything') . '/inc/print_anything.js', array('type' => 'file', 'preprocess' => FALSE));
    $output = '<div id ="print-anything-link" class="print-anything-link"><a href="javascript:void(0);">' . print_anything_header('link_text') . '</a></div>';
    return $output;
  }
}

function print_anything_print_friendly_page() {
  // Suppress the admin menu if present
  if (module_exists('admin_menu')) {
    module_invoke('admin_menu', 'suppress');
  }
  drupal_add_css(drupal_get_path('module', 'print_anything') . '/inc/print_anything.css', array('type' => 'file', 'preprocess' => FALSE));
  drupal_add_css(drupal_get_path('module', 'print_anything') . '/inc/print_anything_suppress_utility.css', array('type' => 'file', 'media' => 'print', 'preprocess' => FALSE));
  /* This function doesn't actually generate anything for the printer page, but if we don't return something, the theme engine fails. So we return an empty string. */
  return '';
}

/* Force the printer page to use the page template in this module
*/
function print_anything_theme_registry_alter(&$theme_registry) {
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'print_anything_theme', PRINT_ANYTHING_PATH);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);

  // A list of templates the module will provide templates for
  $hooks = array('page');
  foreach ($hooks as $h) {
    // Add the key 'theme paths' if it doesn't exist in this theme's registry
    if (!isset($theme_registry[$h]['theme paths'])) {
      $theme_registry[$h]['theme paths'] = array();
    }

    //Shift this module's directory to the top of the theme path list
    if (is_array($theme_registry[$h]['theme paths'])) {
      $first_element = array_shift($theme_registry[$h]['theme paths']);
      if ($first_element) {
        array_unshift($theme_registry[$h]['theme paths'], $first_element, PRINT_ANYTHING_PATH);
      }
      else {
        array_unshift($theme_registry[$h]['theme paths'], PRINT_ANYTHING_PATH);
      }
    }
  }
}
function print_anything_preprocess_page(&$vars) {
  if (arg(0) == 'print-friendly-page') {
    $vars['theme_hook_suggestions'][] = 'page__printanything';
  }
}

/*  Outputs the header elements
    Either the logo using the saved image style
    Or the simple header text.
 */
function print_anything_header($type) {
  $output = '';
  if ($type == 'logo') {
    $fid = variable_get('print_anything_image_fid', FALSE);
    $file = file_load($fid);
    $style = variable_get('print_anything_image_style_name', FALSE);
    if ($fid) {
      if ($style) {
        $output = theme_image_style(array('style_name' => $style, 'path' => $file->uri));
      } else {
        $output = theme_image(array('path' => $file->uri, 'alt' => 'Logo', 'title' => 'Logo', 'attributes' => NULL));
      }
    }
  }
  elseif ($type == 'header') {
    $output = filter_xss(variable_get('print_anything_header', FALSE), unserialize(PRINT_ANYTHING_XSS_TAGS));
  }
  elseif ($type == 'link_text') {
    if (variable_get('print_anything_link_text', 'Print') != '') {
      $output = filter_xss(variable_get('print_anything_link_text', 'Print'), unserialize(PRINT_ANYTHING_XSS_TAGS));
    }
    else {
      $output = 'Print';
    }
  }
  return $output;
}

function print_anything_footer() {
  return filter_xss(variable_get('print_anything_footer', FALSE), unserialize(PRINT_ANYTHING_XSS_TAGS));
}

/*
 * Retrieve the stored CSS IDs for a given URL
 * The output of this is inserted in the printer page template with drupal_add_js
 */
function print_anything_print_getcssids() {
  $css_ids = array();
  if (isset($_SESSION['print_anything_referrer'])) {
    // Get existing referrer
    $referrer   = substr($_SESSION['print_anything_referrer'], 1);
  }
  elseif (isset($_SERVER['HTTP_REFERER'])) {
    // Use given referrer
    $referrer   = substr($_SERVER['HTTP_REFERER'], 1);
  }
  else {
    // No referrer
  }

  // Retrieve all the stored paths
  $paths_result = db_select('print_anything_paths', 'p')
    ->fields('p', array('pid', 'path'))
     ->orderBy('weight')
    ->execute()->fetchAll();

  // Loop through the paths and process the possibilities
  foreach ($paths_result as $path) {
    if (isset($referrer) && $referrer != '') {
      // Test for a match
      if (drupal_match_path($referrer, $path->path)) {
        $css_ids_result = db_select('print_anything', 'p')
          ->fields('p', array('css_id'))
          ->condition('pid', $path->pid)
          ->orderBy('weight')
          ->execute()->fetchAll();
        break;
      }
      else {
        // No match, load the default css id set
        $css_ids_result = db_select('print_anything', 'p')
          ->fields('p', array('css_id'))
          ->condition('pid', 1)
          ->orderBy('weight')
          ->execute()->fetchAll();
      }
    }
    else {
      // No referrer
      // Test for home page definition
      /* First try to load a path definition for the home page. If one exists, load it's CSS IDs
      Otherwise load the default CSS IDS */
      $home_pid = db_select('print_anything_paths', 'p')
        ->fields('p', array('pid'))
        ->condition('path', '<front>')
        ->execute()->fetchField();

      if ($home_pid) {
        $css_ids_result = db_select('print_anything', 'p')
          ->fields('p', array('css_id'))
          ->condition('pid', $home_pid)
          ->orderBy('weight')
          ->execute()->fetchAll();
        break;
      }
      else {
        // No home page definition, load the default css id set
        $css_ids_result = db_select('print_anything', 'p')
          ->fields('p', array('css_id'))
          ->condition('pid', 1)
          ->orderBy('weight')
          ->execute()->fetchAll();
      }
    }
  }

  // Fill an array with the CSS ids
  foreach ($css_ids_result as $id) {
    $css_ids[] = $id->css_id;
  }

  // Build the Javascript output for the printer page. Two possible ways depending on whether the "include wrappers" flag is set.
  $output = "(function ($) {\n";

  $output .= "Drupal.behaviors.printAnyhingOutputBehavior = {";
  $output .= "attach: function (context, settings) {";

  $output .= "$(document).ready(function() {\n";
  $output .= "$('html').addClass('print-anything-page');";

  if (variable_get('print_anything_include_wrappers', 0)) {
    /* Including wrappers in IE is a bit more difficult than the other browsers.
     * Appending the entire DOM object doesn't work. But we can capture the Objects properties, tag, id and classes and it's inner html
     * So we rebuild the thing from it's extracted parts and append the new rebuilt object.
     */
    $output .= "if (!Modernizr.borderimage) {\n";
    $output .= "var passedContent;\n";
    $output .= "var clonedObject;\n";
    $output .= "var classes;\n";
    $output .= "var tag;\n";
    $output .= "var subwrapper;\n";
    foreach ($css_ids as $id) {
      // Capture the content
      $output .= " passedContent = $(window.opener.document).find('#" . $id . "').html();\n";
      $output .= "if (passedContent) {"; //TODO-chris change for v.1.6
      // Capture the entire object, pull out it's properties and build a new duplicate from scratch
      $output .= " clonedObject = $(window.opener.document).find('#" . $id . "').clone();\n";
      $output .= " classes = clonedObject.attr('class');\n";
      $output .= " tag = clonedObject.get(0).tagName.toLowerCase();\n";
      $output .= " subwrapper = '<' + tag + ' id=\"" . $id . "\" class=\"' + classes + '\"></' + tag + '>';\n";
      $output .= " $('#print-friendly-doc-body').append(subwrapper);\n";
      // Append the new object to the template.
      $output .= " $('#print-friendly-doc-body #" . $id . "').append(passedContent);\n";
      $output .= "}";//TODO-chris change for v.1.6
    }
    $output .= "} else {\n";
    $output .= " var passedContent;\n";
    foreach ($css_ids as $id) {
      // Browser is NOT IE, capture the entire object and simply append it to the template.
      $output .= "  passedContent = $(window.opener.document).find('#" . $id . "').clone();\n";
      $output .= "  $('#print-friendly-doc-body').append(passedContent);\n";
    }
    $output .= "}\n";

  } else {
    foreach ($css_ids as $id) {
      // "Include wrappers" flag is off. Simply capture the inner html and append it to the template
      // This works in all major browsers.
      $output .= " var passedContent = $(window.opener.document).find('#" . $id . "').html();\n";
      $output .= " $('#print-friendly-doc-body').append(passedContent);\n";
    }
  }

  $output .= "});\n";
  $output .= "}\n";
  $output .= "};\n";
  $output .= "}(jQuery));\n";

  return $output;
}


/*
 * These theme functions operate on the admin UI forms, but their placed here and not the admin include to be sure they load every time.
 */
function theme_print_anything_cssids_admin_form($variables) {
  $form = $variables['form'];
  $rows = array();
  if (isset($form['css_ids'])) {
    foreach (element_children($form['css_ids']) as $id) {
      $form['css_ids'][$id]['weight']['#attributes']['class'] = array('css-ids-order-weight');
      $rows[] = array(
        'data' => array(
          drupal_render($form['css_ids'][$id]['css_id']),
          drupal_render($form['css_ids'][$id]['ops']),
          drupal_render($form['css_ids'][$id]['weight']),
        ),
        'class' => array('draggable'),
      );
    }
  }

  $header = array(t('CSS Id'), t('Operations'), t('Weight'));
  $output = '<p style="text-align:right">' . l(t('Add CSS Id'), PRINT_ANYTHING_ADMINPATH . '/css-id/' . arg(4) . '/add') . ' | ' . l(t('Back to Path List'), PRINT_ANYTHING_ADMINPATH . '/paths') . '</p>';
  if (isset($form['css_ids'])) {
    $output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'css-ids-order')));
  }
  // Form will not have a submit button without this line.
  $output .= drupal_render_children($form);

  drupal_add_tabledrag('css-ids-order', 'order', 'sibling', 'css-ids-order-weight');

  return $output;
}

function theme_print_anything_paths_admin_form($variables) {
  $form = $variables['form'];
  $rows = array();

  if (isset($form['paths'])) {
    foreach (element_children($form['paths']) as $id) {
      $form['paths'][$id]['weight']['#attributes']['class'] = array('paths-order-weight');
      $rows[] = array(
        'data' => array(
          drupal_render($form['paths'][$id]['path']),
          drupal_render($form['paths'][$id]['ops']),
          drupal_render($form['paths'][$id]['weight']),
        ),
        'class' => array('draggable'),
      );
    }
  }

  $header = array(t('Path'), t('Operations'), t('Weight'));
  $output = '<p style="text-align:right">' . l(t('Add Path'), PRINT_ANYTHING_ADMINPATH . '/path/add') . '</p>';

  if (isset($form['paths'])) {
    $output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'paths-order')));
  }
  // Form will not have a submit button without this line.
  $output .= drupal_render_children($form);

  drupal_add_tabledrag('paths-order', 'order', 'sibling', 'paths-order-weight');

  return $output;
}