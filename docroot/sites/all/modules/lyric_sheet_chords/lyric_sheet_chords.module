<?php
// $Id$


/**
 * @file
 *
 */

/**
 * Implements hook_filter_info().
 */
function lyric_sheet_chords_filter_info() {
  $filters['lyric_sheet_chords'] = array(
    'title' => t('Format lyric sheet chords'),
    'description' => t('Substitutes chord tags such as "[C]" with a nicely formatted chord marking.'),
    'process callback' => '_lyric_sheet_chords_render',
    'settings callback' => '_lyric_sheet_chords_settings',
    'default settings' => array('lyric_sheet_chords_remove' => TRUE),
    'tips callback' => '_lyric_sheet_chords_tips',
    'weight' => 100,
  );
  return $filters;
}

function _lyric_sheet_chords_settings($form, &$form_state, $filter, $format, $defaults) {
  $filter->settings += $defaults;
  $settings['lyric_sheet_chords_remove'] = array(
    '#type' => 'checkbox',
    '#title' => t('Insert link to remove chords'),
    '#description' => t('A javascript "remove chords" button is useful for people who want to copy only the text.'),
    '#default_value' => $filter->settings['lyric_sheet_chords_remove'],
  );
  return $settings;
}

function _lyric_sheet_chords_tips($delta, $format, $long = FALSE) {
  if ($long) {
    return t('Always begin the chord with a capital letter A-G.  Use # for sharp and b for flat.  If you have a bass note, put it at the end of the chord after a slash.  The following are a few chord types that are recognized: <ul>
      <li>[Am7] = A minor 7</li>
      <li>[Cmaj7] = C major 7</li>
      <li>[F#13] = F sharp 13</li>
      <li>[Dsus4] = D suspended 4</li>
      <li>[C/G] = C over G (G as bass)</li>
      <li>[Cmaj/min7] = C major minor 7</li>
      <li>[GMaj7b13] = G major 7 flat 13</li>
      </ul>');
  }
  else {
    return t('To get nicely formatted chords, enclose the chord in brackets, like: [C], [F], [Amin7], [Dsus4], etc.');
  }
}

function _lyric_sheet_chords_render($text, $filter, $format, $langcode, $cache, $cache_id) {
  $style = $link = '';
  $matches = array();
  if (preg_match_all("|\[([A-G][-\+MADSmajinorsudimg /#b1-9]*/*[A-G1-9#b]*)\]|", $text, $matches)) {
    if ($filter->settings['lyric_sheet_chords_remove']) {
      $link = "\n" . '<a href="#" class="remove-chords">' . t('remove chords') . '</a>';
    }
    foreach ($matches[0] as $i => $match) {
      $chords[$match] = $matches[1][$i];
    }
    foreach ($chords as $markup => $chord) {
      $class = str_replace('-', 'minus', $chord);
      $class = str_replace('plus', 'plus', $class);
      $class = str_replace('#', 'sharp', $class);
      $class = str_replace('/', 'over', $class);
      $class = str_replace(' ', '', $class);
      $text = str_replace($markup, '<span class="chord"><span class="chord-text ' . $class . '"></span></span>', $text);
      $style .= ".chord-text.$class:before { content: \"$chord\" }\n";
    }
    return "<style>\n$style</style>$link\n$text";
  }
  else {
    return $text;
  }
}

/**
 * Implements hook_field_attach_view_alter().
 *
 * Very often, chords are inserted in the middle of words; this function should
 * remove all such chords for the purposes of search.
 */
function lyric_sheet_chords_field_attach_view_alter(&$output, $context) {
  if ($context['view_mode'] == 'search_index' || $context['view_mode'] == 'search_result') {
    foreach (element_children($output) as $field) {
      if (!empty($output[$field][0]['#markup'])) {
        foreach (element_children($output[$field]) as $index) {
          $output[$field][$index]['#markup'] = preg_replace("|<span class=\"chord\"><span[^<]+</span></span>|", '', $output[$field][$index]['#markup']);
          $output[$field][$index]['#markup'] = preg_replace("|\.chord-text[^}]+}\n|", '', $output[$field][$index]['#markup']);
          $output[$field][$index]['#markup'] = str_replace("<style>\n<!--/*--><![CDATA[/* ><!--*/\n\n\n/*--><!]]>*/\n</style>", '', $output[$field][$index]['#markup']);
          $output[$field][$index]['#markup'] = preg_replace('|<a href="#" class="remove-chords">[^\<]*</a>|', '', $output[$field][$index]['#markup']);
        }
      }
    }
  }
}
