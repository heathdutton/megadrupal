<?php

/**
 * @file
 * Handles install of the Drush Daemon API module.
 */

/**
 * Implements hook_requirements().
 */
function drushd_requirements($phase) {
  $requirements = array();

  // Ensure translations do not break at install time.
  $t = get_t();

  $requirements['PHP-Daemon'] = array(
    'title' => $t('PHP Daemon'),
  );

  $libraries = libraries_get_libraries();
  if (isset($libraries['PHP-Daemon'])) {
    $requirements['PHP-Daemon']['value'] = $t('Installed');
    $requirements['PHP-Daemon']['severity'] = REQUIREMENT_OK;
  }
  else {
    $requirements['PHP-Daemon']['value'] = $t('Not Installed');
    $requirements['PHP-Daemon']['severity'] = REQUIREMENT_ERROR;
    $requirements['PHP-Daemon']['description'] = $t(
      'The Drush Daemon API module requires the <a href="@url" target="_blank">PHP-Daemon library v2.0</a> (<a href="@download-url" target="_blank">Download</a>) Please install it as per the <a href="@instruc-url" target="_blank">Libraries API Instructions</a> before trying again.',
      array(
        '@url' => 'https://github.com/shaneharter/PHP-Daemon/blob/master/README.md',
        '@download-url' => 'https://github.com/shaneharter/PHP-Daemon/releases/tag/v2.0',
        '@instruc-url' => 'https://www.drupal.org/node/1440066',
      )
    );
  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function drushd_install() {
  $t = get_t();

  // We actually don't have to install anything. All of the information
  // on Daemons is stored in hook_daemon_api_info() implementations so
  // we don't need database tables and status/lock files are kept in variables
  // set when a daemon is run.
  // Thus we will just tell the installer that everything went as planned
  // and give them some guidance on where to go next.
  drupal_set_message($t(
    'You have successfully installed Drush Daemon API. At this time, there is '
    . 'no web interface to the functionality provided by this module. Instead '
    . 'use the command-line to navigate to your drupal site and then use '
    . '"drush daemon start [daemon-machine-name]" to start the daemon. '
    . 'Information about other commands used to manage daemons is provided '
    . 'by drush --help'
  ));
}

/**
 * Implements hook_uninstall().
 */
function drushd_uninstall() {

  // This module stores the location of lock & status files in drupal variables
  // which should be deleted upon uninstall. These variables include the
  // name of the daemon which is defined in the hook_daemon_api_info().
  // However, since each module defining daemons is unlikely to be aware of
  // this variable which is created by the API, we can't assume the implementing
  // modules will delete these variables. Luckily we have been keeping a list
  // of all the daemon's run in 'drushd_daemon_list' variable so we can just
  // use that to determine which variables need to be deleted.
  $daemon_list = variable_get('drushd_daemon_list', NULL);
  $daemon_list = ($daemon_list !== NULL) ? unserialize($daemon_list) : array();

  // So for each daemon that was running using the daemon API, we want to:
  // 1) check to see if the daemon is still running & if so, stop it,
  // 2) delete the status/lock files,
  // 3) delete the variables storing those file locations.
  foreach (array_keys($daemon_list) as $daemon_machine_name) {

    $status_file = variable_get('drushd_' . $daemon_machine_name . '_status_filename', NULL);
    $lock_file = variable_get('drushd_' . $daemon_machine_name . '_lock_filename', NULL);

    // Stop the daemon if it's running. & then delete the lock file/variable.
    if (file_exists($lock_file)) {

      // Stop Daemon.
      $pid = shell_exec("cat $lock_file");
      shell_exec("kill $pid");
      drupal_set_message(t('Stopped the @daemon daemon successfully.', array('@daemon' => $daemon_machine_name)));

      // Remove file/variable.
      unlink($lock_file);
      variable_del('drushd_' . $daemon_machine_name . '_lock_filename');
    }

    // Status File.
    if (file_exists($status_file)) {
      unlink($status_file);
      variable_del('drushd_' . $daemon_machine_name . '_status_filename');
    }
  }

  drupal_set_message(t('Successfully uninstalled the Drush Daemon API. All lock & status files have been removed; however, log files remain in your temporary directory.'));
}
