<?php

/**
 * Implements hook_pay_method_handler_info().
 */
function authorizenet_pay_method_handler_info() {
  $path = drupal_get_path('module', 'authorizenet') . '/includes/handlers';
  return array(
    'pay_method_gateway_authorizenet' => array(
      'title' => t('Authorize.Net'),
      'description' => t('Payment processing using the Authorize.Net payment gateway'),
      'parent' => 'pay_method_gateway',
      'path' => $path,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function authorizenet_theme() {
  // TODO The array elements in this hook function need to be changed.
  module_load_include('theme.inc', 'authorizenet', 'theme/authorizenet');
  return authorizenet_theme_theme();
}

/**
 * Implements hook_pay_user_settings_access().
 */
function authorizenet_pay_user_settings_access() { }

/**
 * Implements hook_pay_user_settings_form().
 */
function authorizenet_pay_user_settings_form(&$form, &$form_state) { }

/**
 * Implements hook_pay_transaction_delete().
 */
function authorizenet_pay_transaction_delete(&$transaction) {
  // Delete any references to activities that will be deleted.
  $subquery = db_select('pay_activity', 'pa')
    ->condition('pa.pxid', $transaction->pxid)
    ->fields('pa', array('paid'));
   
  $query = db_delete('authorizenet_pay_activity')
    ->condition('paid', $subquery, 'IN')
    ->execute();
  
}

/**
 * List available Authorize.Net login profiles.
 */
function authorizenet_login_list($reset = TRUE) {
  static $list;
  if (!isset($list) || $reset) {
    $list = array();

    $res = db_select('authorizenet_login', 'al')
      ->fields('al', array('id', 'name', 'developer'))
      ->isNull('uid')
      ->orderBy('name')
      ->execute();

    foreach ($res as $row) {
      $list[$row->id] = $row->name;
    }
  }

  return $list;
}

/**
 * Load an Authorize.Net login entry.
 */
function authorizenet_login_load($id = NULL) {
  require_once dirname(__FILE__) . '/includes/authorizenet.login.inc';

  if ($id) {
    $res = db_query("SELECT * FROM {authorizenet_login} WHERE id = :id", array(':id' => $id))->fetch();
    if ($res) {
      return New authorizenetLogin($res);
    }
  }
  else {
    return New authorizenetLogin();
  }
}

/**
 * Load an Authorize.Net object.
 */
function authorizenet($login, $sub = NULL, $account = NULL) {
  require_once dirname(__FILE__) . '/includes/authorizenet.inc';

  if (in_array($sub, array('cim', 'aim'))) {
    require_once dirname(__FILE__) . '/includes/authorizenet.' . $sub . '.inc';
    $class = 'Authorizenet' . $sub;
    return New $class($login, $account);
  }
  else {
    return New Authorizenet($login, $account);
  }
}

/**
 * Load a Authorize.Net payment profile for a given user.
 */
function authorizenet_profile($login, $sub = NULL, $account = NULL) {
  if (is_null($account)) {
    global $user;
    $account = $user;
  }

  $authorizenet = authorizenet($login, $sub);
  return $authorizenet->profile($account);
}
