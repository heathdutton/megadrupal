<?php

/**
 * Implements hook_element_info_alter().
 *
 * Add #flavour property to date_popup form element.
 */
function date_datepicker_inline_element_info_alter(&$type) {
  $type['date_popup']['#flavour'] = 'popup';
}

/**
 * Implements hook_date_popup_process_alter().
 *
 * Process #flavour property.
 */
function date_datepicker_inline_date_popup_process_alter(&$element, &$form_state, $form) {
  if (isset($element['#instance'])) {
    $widget_settings = $element['#instance']['widget']['settings'];
    if (isset($widget_settings['flavour'])) {
      $element['#flavour'] = $widget_settings['flavour'];
    }
  }
  elseif (isset($form_state['view'])) {
    $name = $element['#parents'][0];
    $view = $form_state['view'];
    $handler = $view->filter[$name];
    $element['#flavour'] = $handler->options['datepicker_flavour'];
  }

  if ($element['#flavour'] == 'inline') {
    $date_id = $element['date']['#id'];

    // Keep the original element in date-owned.
    $element['date-owned'] = $element['date'];
    $element['date-owned']['#id'] = $date_id . '-owned';

    // Convert date element into a div. This way datepicker will be attached inline.
    // See http://jqueryui.com/datepicker/#inline
    $element['date']['#type'] = 'markup';
    $element['date']['#markup'] = '<div id="' . $date_id . '" ' . drupal_attributes($element['date']['#attributes']) . '></div>';

    // Short-circuit date_popup.js.
    $settings[$date_id]['func'] = 'datepicker-inline';

    // Ask datepicker to update date-owned when selection changes.
    // @see http://api.jqueryui.com/datepicker/#option-altField
    $settings[$date_id]['settings']['altField'] = '#' . $date_id . '-owned';

    // Set the current value as default date.
    $settings[$date_id]['settings']['defaultDate'] = $element['date']['#value'];

    $element['date']['#attached']['js'][] = drupal_get_path('module', 'date_datepicker_inline') .'/date_datepicker_inline.js';
    $element['date']['#attached']['js'][] = array(
      'type' => 'setting',
      'data' => array('datePopup' => $settings),
    );
  }
}

/**
 * Implements hook_module_implements_alter().
 *
 * Move our implementation of hook_date_popup_process_alter to end of the list.
 */
function date_datepicker_inline_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'date_popup_process_alter') {
    $group = $implementations['date_datepicker_inline'];
    unset($implementations['date_datepicker_inline']);
    $implementations['date_datepicker_inline'] = $group;
  }
}

/**
 * Helper that returns form elements for datepicker UI settings.
 */
function _date_datepicker_inline_settings_form($default_value) {
  return array(
    '#title' => t('Choose how to render the datepicker'),
    '#type' => 'radios',
    '#options' => array(
      'popup' => t('Popup'),
      'inline' => t('Inline'),
    ),
    '#default_value' => $default_value,
  );
}

/**
 * Implements hook_date_field_widget_settings_form_alter().
 *
 * Extends date_popup widget with datepicker flavour settings.
 */
function date_datepicker_inline_date_field_widget_settings_form_alter(&$form, $context) {
  $instance = $context['instance'];
  if ($instance['widget']['type'] == 'date_popup') {
    $settings = $instance['widget']['settings'];
    $default = isset($settings['flavour']) ? $settings['flavour'] : 'popup';
    $form['flavour'] = _date_datepicker_inline_settings_form($default);
  }
}

/**
 * Implements hook_form_alter().
 *
 * Extends views date fields with datepicker flavour settings.
 */
function date_datepicker_inline_form_views_ui_config_item_extra_form_alter(&$form, $form_state) {
  $handler = $form_state['handler'];
  if ($handler instanceof date_views_filter_handler_simple) {
    $form['options']['form_type']['#options']['date_popup'] = 'Datepicker';
    $form['options']['form_type']['#weight'] = -2;
    $default = isset($handler->options['datepicker_flavour']) ? $handler->options['datepicker_flavour'] : 'popup';
    $form['options']['datepicker_flavour'] = _date_datepicker_inline_settings_form($default) + array(
      '#weight' => -1,
      '#states' => array(
        'visible' => array(
          ':input[value=date_popup]' => array('checked' => TRUE),
        ),
      ),
    );
  }
}

