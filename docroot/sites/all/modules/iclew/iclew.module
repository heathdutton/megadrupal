<?php

/**
 * @file iclew.module
 * Provides integration with the iClew service.
 */

/**
 * Implements hook_menu().
 */
function iclew_menu() {
  $items = array();

  $items['admin/config/services/iclew'] = array(
    'title' => 'iClew Business Kit',
    'description' => 'Manage your iClew account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('iclew_account'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['iclew'] = array(
    'page callback' => 'iclew_update',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Form constructor for iClew account forms.
 *
 * @see iclew_menu()
 */
function iclew_account($form, &$form_state) {
  if (variable_get('iclew_connected', FALSE)) {
    return iclew_account_link();
  }
  else {
    return iclew_account_new();
  }
}

/**
 * Returns a form for a user to login to their account.
 */
function iclew_account_link() {
  $form['#action'] = url('https://iclew.com/user', array('external' => TRUE));

  $form['description'] = array(
    '#type' => 'markup',
    '#markup' => '<p>' . t('This website is connected with your iClew account registered with %email', array('%email' => variable_get('iclew_email', ''))) . '</p>',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Manage your iClew account'),
  );

  return $form;
}

/**
 * Form that posts the data below to iClew site.
 * - host name
 * - CMP platform
 */
function iclew_account_new() {

  $form['#action'] = url('https://iclew.com/site/reg', array('external' => TRUE));

  $replacements = array(
    '%domain' => $GLOBALS['base_url'],
    '@terms' => 'https://iclew.com/terms',
    '@privacy' => 'https://iclew.com/privacy',
  );

  $description = '<p>' . t('Click the button below to register %domain with iClew. The module will be then set up automatically. It is simple, easy, and free.', $replacements) .  '</p>';
  $description .= '<p>' . t('After registration, the module regularly sends information about your website to iClew server so that it may prepare personalized improvement recommendations for you. The information that it collects and is not available from a public source includes the site creation date, modules or themes installed, and user count. To learn more, check out iClew <a href="@terms" target="_blank">Terms of Use</a> and <a href="@privacy" target="_blank">Privacy Policy</a>.', $replacements) . '</p>';

  $form['description'] = array(
    '#type' => 'markup',
    '#markup' => $description,
  );

  $form['cms'] = array(
    '#type' => 'hidden',
    '#name' => 'cms',
    '#value' => 'drupal',
  );

  $form['domain'] = array(
    '#type' => 'hidden',
    '#name' => 'domain',
    '#value' => $replacements['%domain'],
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Sign up with iClew'),
  );

  return $form;
}

/**
 * Returns site information in json when iClew server contacts the website.
 *
 * @see iclew_menu()
 */
function iclew_update() {
  $requests = parse_url($_SERVER['REQUEST_URI']);
  
  if(!isset($requests['query'])) {
    drupal_json_output('query required');
    return;
  }

  parse_str($requests['query'], $queries);

  if (!isset($queries['uid']) or !isset($queries['token'])) {
    drupal_json_output('parameters missed');
    return;
  }

  // The email admin used to sign up with iClew
  // Appears in queries only for the first communication
  if (isset($queries['email'])) {
    variable_set('iclew_email', $queries['email']);
  }

  if (variable_get('iclew_connected') <> 1) {
    variable_set('iclew_connected', 1);
  }

  // Prepare website information
  $msg['web cms'] = 'drupal';
  $msg['drupal'] = '7';
  $msg['site created'] = iclew_site_created();
  $msg['user count'] = iclew_user_count();
  $msg['drupal theme'] = variable_get('theme_default', '');

  $modules = module_list();
  foreach ($modules as $module) {
    $msg['drupal module ' . $module] = '';
  }
  $results = iclew_callback_fsockopen($msg, $queries);
  drupal_json_output($results);
  return;
}

function iclew_callback_fsockopen($msg, $queries) {
  $fp = fsockopen('ssl://iclew.com', 443, $errno, $errstr, 15);
  if (!$fp) {
    return ' Error: ' . $errno . ' ' . $errstr;
  }
  
  $content = http_build_query($msg);
  fwrite($fp, "POST /sbk/?uid=".$queries['uid'].'&token='.$queries['token']." HTTP/1.0\r\n");
  fwrite($fp, "Host: acobot.com\r\n");
  fwrite($fp, "Content-Type: application/x-www-form-urlencoded\r\n");
  fwrite($fp, "Content-Length: ".strlen($content)."\r\n");
  fwrite($fp, "Connection: close\r\n");
  fwrite($fp, "\r\n");

  fwrite($fp, $content);

  while (!feof($fp)) {
    @fgets($fp, 1024);
  }
  return 'Posted';
}

/* 
 * Returns root user's creation date as the site creation.
 */
function iclew_site_created() {
  $created = 0;
  $account = user_load(1);
  if ($account) {
    $created = $account->created;
  }
  return $created;
}

/*
 * Return the current user count.
 * @param $due int The created date to begin the query from.
 * @return $cont The user count from the query
 */
function iclew_user_count($due = 0) {
  $query = new EntityFieldQuery();
  $count = $query->entityCondition('entity_type', 'user')
    ->propertyCondition('created', $due, '>')
    ->count()
    ->execute();
  return $count;
}
