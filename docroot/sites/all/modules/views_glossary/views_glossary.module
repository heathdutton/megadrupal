<?php

/**
 * @file
 * In this file we will make gotopager of selectbox and textbox and templates.
 */

/**
 * Implement hooks_menu.
 */
function views_glossary_menu() {
  $items = array();
  $items['admin/config/views_glossary_settings'] = array(
    'title' => 'Views Glossary Settings',
    'description' => 'Views Glossary module configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('views_glossary_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'views_glossary.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}
/**
 * This function will provide path to module templates.
 */
function views_glossary_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'views_glossary'),
    'template path' => drupal_get_path('module', 'views_glossary'),
  );

}
/**
 * Implements hook_form_alter().
 */
function views_glossary_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id === 'views_exposed_form') {
    $view = $form_state['view'];
    $views_names = explode(',', variable_get('views_glossary_name'));
    $views_names[] = 'views_glossary_example';
    if (in_array($view->name, $views_names) && $view->current_display == 'page') {
      $form['#attached']['js'] = array(
        drupal_get_path('module', 'views_glossary') . '/js/views_glossary.js',
      );
      $form['#attached']['css'] = array(
        drupal_get_path('module', 'views_glossary') . '/css/views_glossary.css',
      );
    }
  }
}

/**
 * Implements hook_views_pre_view().
 */
function views_glossary_views_pre_view(&$view, &$display_id, &$args) {
  $views_names = explode(',', variable_get('views_glossary_name'));
  $views_names[] = 'views_glossary_example';
  if (in_array($view->name, $views_names) && $display_id === 'page') {
    $view->tag = "views_gloss_temp";
    $view->display_handler->set_option('css_class', 'views-glossary-module');
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function views_glossary_preprocess_views_view(&$vars) {
  $view = $vars['view'];
  $views_names = explode(',', variable_get('views_glossary_name'));
  $views_names[] = 'views_glossary_example';
  if (in_array($view->name, $views_names) && $view->current_display == 'page') {
    $current_page = $view->query->pager->current_page + 1;
    $total = $view->total_rows;
    $rec_per_pages = ($view->query->pager->options['items_per_page']) == 0 ? $total : $view->query->pager->options['items_per_page'];
    $total_pages = ceil($total / $rec_per_pages);
    $go_to_page = '<form id="go-to-page-form">';
    $go_to_page .= '<span>PAGE </span>';
    // Checking of settings form for textbox or select box.
    if (variable_get('views_glossary_go_to_page') == 0) {
      $go_to_page .= '<select name="page" id="page-selector-select-page-number" class="form-select">';
      for ($i = 1; $i <= $total_pages; $i++) {
        if ($i == $current_page) {
          $sel = 'selected="selected"';
        }
        else {
          $sel = '';
        }
        $go_to_page .= '<option value="' . ($i) . '"' . $sel . '>' . $i . '</option>';
      }
      $go_to_page .= '</select>';
    }
    else {
      $go_to_page .= '<input type="text" id="page-selector-select-page-number" value="' . $current_page . '">';
    }
    $go_to_page .= '<span>' . ' ' . t('of') . ' ' . $total_pages . ' ( ' . $total . ' ' . t('TOTAL RECORDS') . ')';
    $go_to_page .= "</form>";
    $vars['go_to_page'] = $go_to_page;
  }

}
