<?php
/**
 * @file
 * Losungen module.
 */

/**
 * Implements hook_block_info().
 */
function losungen_block_info() {
  $blocks['losungen-block'] = array(
    'info' => t('Losungen for today'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function losungen_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'losungen-block':
      $block['subject'] = t('Die Losungen der Herrnhuter BrÃ¼dergemeine');
      $block['content'] = losungen_contents();
      $block['cache'] = DRUPAL_NO_CACHE;
      break;
  }
  return $block;
}

/**
 * Implements hook_token_info().
 */
function losungen_token_info() {
  $info['types']['losungen'] = array(
    'name' => t('Losungen'),
    'description' => t('Tokens showing daily texts.'),
  );

  $info['tokens']['losungen']['date'] = array(
    'name' => t("Date"),
    'description' => t("The date the daily texts are for."),
    'type' => 'date',
  );
  $info['tokens']['losungen']['losungenstext'] = array(
    'name' => t("Losungenstext"),
    'description' => t("Losungenstext aus der Elberfelder-Uebersetzung."),
  );
  $info['tokens']['losungen']['losungensstelle'] = array(
    'name' => t("Losungensstelle"),
    'description' => t("Bibelstelle des Losungenstexts."),
  );
  $info['tokens']['losungen']['lehrtext'] = array(
    'name' => t("Lehrtext"),
    'description' => t("Lehrtext aus der Elberfelder-Uebersetzung."),
  );
  $info['tokens']['losungen']['lehrstelle'] = array(
    'name' => t("Lehrtextstelle"),
    'description' => t("Bibelstelle des Lehrtexts."),
  );
  return $info;
}

/**
 * Implements hook_tokens().
 */
function losungen_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'losungen') {
    $los = _losungen_read();
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'losungsdatum':
          $replacements[$original] = $los['losungsdatum'];
          break;

        case 'feiertag':
          $replacements[$original] = '<span class="feiertag">' .
            $los['feiertag'] . '</span>';
          break;

        case 'losung_text':
          $replacements[$original] = '<span class="losungen">' .
            $los['losung']['text'] . '</span>';
          break;

        case 'losung_stelle':
          $replacements[$original] = '<span class="losungen bibelstelle">' .
            $los['losung']['stelle'] . '</span>';
          break;

        case 'lehrtext_text':
          $replacements[$original] = '<span class="lehrtext">' . $los['lehrtext']['text'] .
            '</span>';
          break;

        case 'lehrtext_stelle':
          $replacements[$original] = '<span class="lehrtext bibelstelle">' .
            $los['lehrtext']['stelle'] . '</span>';
          break;
      }
    }
  }
  return $replacements;
}

/**
 * Custom html block.
 */
function losungen_contents() {
  $los = _losungen_read();
  if (array_key_exists("error", $los)) {
    return '<p></p>';
  }
  $html = '<p class="date">' . $los['losungsdatum'];
  if ($los["feiertag"] != "") {
    $html .= '
      <span class="feiertag">' . $los["feiertag"] .  '</span>';
  }
  $html .= '</p>
      <blockquote cite="' . $los['losung']['stelle'] . '" class="losungen">
        <p class="losungen">' . $los['losung']['text'] . '</p>
        <p class="bibelstelle">' . $los['losung']['stelle'] . '</p>
      </blockquote>
      <blockquote cite="' . $los['lehrtext']['stelle'] . '" class="lehrtext">
        <p class="lehrtext">' . $los['lehrtext']['text'] . '</p>
        <p class="bibelstelle">' . $los['lehrtext']['stelle'] . '</p>
      </blockquote>';
  $html .= '
      <p class="copyright">&copy; <a href="http://www.ebu.de">Evangelische Br&uuml;der-Unit&auml;t</a> - Herrnhuter Br&uuml;dergemeine</p>
      <p class="copyright">weitere <a href="http://www.losungen.de">Informationen</a>.</p>';
  return $html;
}

/**
 * Checks the cache for data or read it via _readIndexedFile().
 */
function _losungen_read() {
  $los = variable_get('losungen_cache');
  if ($los == NULL || $los['validtill'] < time()) {
    $los = _losungen_readIndexedFile();
    variable_set('losungen_cache', $los);
  }
  return $los;
}

/**
 * Reads the data from an indexed csv-file.
 */
function _losungen_readIndexedFile() {
  // Finding datafile for this year.
  $url = drupal_get_path("module", "losungen") . "/data/losungen" . date("Y") . ".dat";

  $file = @fopen($url, "rb");
  if ($file) {
    // Reading index.
    $doy = date("z");
    fseek($file, ($doy * 6) + 30);
    $bindex = fread($file, 12);
    $fstart = intval(substr($bindex, 0, 6));
    $flength = intval(substr($bindex, 6, 6)) - $fstart - 1;
    // Reading data.
    fseek($file, $fstart);
    $imploded = fread($file, $flength);
    fclose($file);
    $larry = explode("\t", $imploded);
    return array(
      'validtill' => strtotime("tomorrow"),
      'losungsdatum' => $larry[0],
      'feiertag' => $larry[2],
      'losung' => array(
        'text' => $larry[4],
        'stelle' => $larry[3],
      ),
      'lehrtext' => array(
        'text' => $larry[6],
        'stelle' => $larry[5],
      ),
    );
  }
  else {
    $error = t('File not found: @file', array('@file' => $url));
    drupal_set_message($error);
    return array(
      'validtill' => strtotime("+ 10 minutes"),
      'error' => $error,
    );
  }

}
