<?php

/**
 * Implements hook_field_formatter_info().
 */
function media_embedded_overlay_formatter_field_formatter_info() {
	$formatters = array(
    'media_embedded_overlay_formatter' => array(
      'label' => t('Media Embedded'),
      'field types' => array('media'),
      'settings' => array('file_view_mode' => 'default'),
	),
	);

	return $formatters;
}

/**
 * Implements hook_theme().
 */
function media_embedded_overlay_formatter_theme() {
	return array(
    'field__media' => array(
      'render element' => 'element',
  	  'template' => 'field--media',
	),
	);
}

function media_embedded_overlay_formatter_preprocess_field(&$variables, $hook) {
	//  dpm($variables);
	//  dpm($hook);
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function media_embedded_overlay_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
	$display = $instance['display'][$view_mode];
	$settings = $display['settings'];

	$element = array();

	if ($display['type'] == 'media_embedded_overlay_formatter') {
		$entity_info = entity_get_info('file');
		$options = array('default' => t('Default'));
		foreach ($entity_info['view modes'] as $file_view_mode => $file_view_mode_info) {
			$options[$file_view_mode] = $file_view_mode_info['label'];
		}
		$element['file_view_mode'] = array(
	      '#title' => t('File view mode'),
	      '#type' => 'select',
	      '#default_value' => $settings['file_view_mode'],
	      '#options' => $options,
		);
	}

	return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function media_embedded_overlay_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
	$display = $instance['display'][$view_mode];
	$settings = $display['settings'];

	$summary = '';

	if ($display['type'] == 'media_embedded_overlay_formatter') {
		$entity_info = entity_get_info('file');
		$file_view_mode_label = isset($entity_info['view modes'][$settings['file_view_mode']]) ? $entity_info['view modes'][$settings['file_view_mode']]['label'] : t('Default');
		$summary = t('File view mode: @view_mode', array('@view_mode' => $file_view_mode_label));
	}

	return $summary;
}

/**
 * Implements hook_field_prepare_view().
 *
 * @todo Get resolution on http://drupal.org/node/879034 regarding using this
 *   hook to load referenced entities.
 */
function media_embedded_overlay_formatter_field_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items) {
	// Collect all file ids that need loading.
	$fids = array();
	foreach ($entities as $id => $entity) {
		foreach ($items[$id] as $delta => $item) {
			if (is_array($item) && !empty($item['fid'])) {
				$fids[$item['fid']] = $item['fid'];
			}
		}
	}

	// Load the files and add the loaded file entity to the item data.
	$files = file_load_multiple(array_values($fids));
	foreach ($entities as $id => $entity) {
		foreach ($items[$id] as $delta => $item) {
			if (is_array($item) && !empty($item['fid'])) {
				$items[$id][$delta]['file'] = $files[$item['fid']];
			}
		}
	}
}



/**
 * Implement hook_field_formatter_view().
 */
function media_embedded_overlay_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
	//dpm($items);
	//dpm($display);
	//	dpm($entity);

	$files = array();
	foreach ($items as $delta => $item) {
		$files[$item['fid']] = $item['file'];
	}
	//		dpm(file_view_multiple($files, $display['settings']['file_view_mode'], 0, $langcode));

	return file_view_multiple($files, $display['settings']['file_view_mode'], 0, $langcode);
}

function media_embedded_overlay_formatter_jcarousel_skin_info() {
	$skins = array();

	$skins['media_embedded'] = array(
	    'title' => t('Media Embedded'),
	    'file' => 'skin/jcarousel-media-embedded.css',
	);

	$skins['media_embedded_1'] = array(
	    'title' => t('Media Embedded 1'),
	    'file' => 'skin/jcarousel-media-embedded-1.css',
	);

	$skins['media_embedded_2'] = array(
	    'title' => t('Media Embedded 2'),
	    'file' => 'skin/jcarousel-media-embedded-2.css',
	);

	$skins['media_embedded_3'] = array(
	    'title' => t('Media Embedded 3'),
	    'file' => 'skin/jcarousel-media-embedded-3.css',
	);


	return $skins;
}
