<?php
/**
 * @file
 * Handles saving nodes to GitHub as html pages.
 */

define('GHPAGES_GITPHP_MIN_PLUGIN_VERSION', '0.1.2');

/**
 * Implements hook_menu().
 */
function ghpages_menu() {
  $items['admin/config/media/ghpages'] = array(
    'title' => 'Save to GitHub',
    'description' => 'Define GitHub repository and connection settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ghpages_admin_settings'),
    'access arguments' => array('administer save to github'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'ghpages.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function ghpages_permission() {
  return array(
    'save to github' => array(
      'title' => t('Save to GitHub Pages'),
      'description' => t('Permission to save html version of a node to GitHub Pages'),
    ),
    'administer save to github' => array(
      'title' => t('Administer GitHub Pages options'),
      'description' => t('Permission to set configuration settings for GitHub Pages'),
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function ghpages_form_alter(&$form, $form_state, $form_id) {

  if (user_access('save to github')) {
    if (isset($form['#node']) && $form_id == $form['#node']->type . '_node_form') {
      $node = menu_get_object();
      if (isset($node)) {
        $buttons = drupal_get_form('ghpages_publish_form');
        if (is_numeric($node->nid)) {
          $form['#suffix'] = render($buttons);
        }
      }
    }
  }
}


/**
 * Implements hook_libraries_info().
 */
function ghpages_libraries_info() {
  $libraries['Git.php'] = array(
    'name' => 'Git.php',
    'vendor url' => 'https://github.com/kbjr/Git.php',
    'download url' => 'https://github.com/kbjr/Git.php/archive/master.zip',
    'version arguments' => array(
      'file' => 'Git.php',
      'pattern' => '/@version\s+([0-9a-zA-Z\.-]+)/',
      'lines' => 9,
    ),
    'files' => array(
      'php' => array('Git.php'),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_help().
 */
function ghpages_help($path, $arg) {
  switch ($path) {
    case 'admin/help#ghpages':
      return '<p>' . t('<a href="@ghpages">GitHub Pages</a> is a service provided by <a href="@gh">GitHub</a> enabling free cloud hosting for static HTML files. This module allows users to push any individual page to a centralized GitHub repository. The <a href="@ghadmin">GitHub Pages administration page</a> allows the setting of GitHub account details.',
        array(
          '@ghpages' => 'http://pages.github.com',
          '@gh' => 'http://www.github.com',
          '@ghadmin' => url('admin/config/media/ghpages'),
        )
      )
        . '</p>';
  }
}

/**
 * Form constructor for the "Push to GitHub" button.
 *
 * @see ghpages_publish_form_submit()
 */
function ghpages_publish_form() {
  $node = menu_get_object();
  if (isset($node)) {
    $save_to_github_path = '/' .
      drupal_lookup_path('alias', 'node/' . $node->nid);
    // $disabled = (user_access('change github defaults') ? FALSE : TRUE);
    $html_name_array = explode("/", drupal_get_path_alias('node/' . $node->nid));
    $html_name = end($html_name_array);

    $form['github_directory'] = array(
      '#type' => 'textfield',
      '#default_value' => $html_name,
      '#maxlength' => 50,
      '#size' => 20,
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#title' => t('Name of page'),
      '#prefix' => '<div>',
      '#suffix' => '</div><div style="clear:both;"></div>',
      '#disabled' => TRUE,
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Push to GitHub'),
    );

    return $form;
  }
}

/**
 * Form submission handler for ghpages_publish_form().
 */
function ghpages_publish_form_submit($form, &$form_state) {
  require_once 'ghpages.functions.inc';
  libraries_load('Git.php');

  $node = menu_get_object();
  $path = drupal_lookup_path('alias', 'node/' . $node->nid);
  ghpages_initialize_repo(TRUE);
  // Todo Give users ability to change these options.
  $file_place = ghpages_data_process(
    TRUE,
    TRUE,
    TRUE,
    $form_state['values']['github_directory']
  );
  $html_name_array = explode('/', $path);
  $html_name = end($html_name_array);
  $remote_file = str_replace(" ", "", $html_name);
  ghpages_push_files($form_state);
  drupal_goto('node/' . $node->nid);
}
