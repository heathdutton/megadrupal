<?php
/**
 * @file
 * Creating a Simple Weather block that display current weather data provided by
 * Yahoo Weather.
 *
 * Implementation of the simpleWeather jQuery Plugin by James Fleeting
 * http://simpleweatherjs.com
 */

/**
 * Implements hook_block_info().
 */
function simple_weather_block_info() {
  $blocks['simple_weather_report'] = array(
    'info' => t('Simple Weather'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * Configuration for the Simple Weather block.
 */
function simple_weather_block_configure($delta = '') {
  $form = array();
  if ($delta == 'simple_weather_report') {
    $form['simple_weather_zipcode'] = array(
      '#prefix' => t('Determine the weather location using ZIP code or WOEID:'),
      '#type' => 'textfield',
      '#title' => t('USA ZIP Code'),
      '#size' => 5,
      '#description' => t('Set the weather location by entering a five digit US ZIP code.'),
      '#default_value' => variable_get('simple_weather_zipcode'),
      '#element_validate' => array('simple_weather_zip_code_valid'),
    );
    $form['simple_weather_woeid'] = array(
      '#type' => 'textfield',
      '#title' => t('Where On Earth Identifiers (WOEID)'),
      '#size' => 20,
      '#description' => simple_weather_woeid_anchor(),
      '#default_value' => variable_get('simple_weather_woeid'),
      '#element_validate' => array('simple_weather_woeid_valid'),
      '#prefix' => t('OR'),
    );
    $form['simple_weather_scale'] = array(
      '#type' => 'select',
      '#title' => t('Temperature Scale'),
      '#options' => array(
        'c' => t('Celsius'),
        'f' => t('Fahrenheit'),
      ),
      '#description' => t('Select the tempurature scale that will be displayed.'),
      '#default_value' => variable_get('simple_weather_scale'),
      '#required' => TRUE,
    );
  }

  return $form;
}

/**
 * Validation for the Simple Weather block ZIP Code field.
 */
function simple_weather_zip_code_valid($element, &$form_state) {
  $zip_code = $form_state['values']['simple_weather_zipcode'];
  $woeid = $form_state['values']['simple_weather_woeid'];

  // // Must enter either ZIP code or WOEID is required.
  if (empty($zip_code) && empty($woeid)) {
    form_error($element, t('Please enter either a ZIP code or WOEID.'));
  }
  // Only a ZIP code or WOEID can be submitted.
  if (!empty($zip_code) && !empty($woeid)) {
    form_error($element, t('You may only enter a ZIP code or WOEID. Please remove either the ZIP code or WOEID.'));
  }

  // ZIP code must be numeric.
  if (!empty($zip_code) && !is_numeric($zip_code)) {
    form_error($element, t('The ZIP code must only contain numbers.'));
  }
  // ZIP code must be five characters in length.
  if (!empty($zip_code) && drupal_strlen($zip_code) != 5) {
    form_error($element, t('The ZIP code must be five numbers.'));
  }
}

/**
 * Validation for the Simple Weather block WOEID field.
 */
function simple_weather_woeid_valid($element, &$form_state) {
  $zip_code = $form_state['values']['simple_weather_zipcode'];
  $woeid = $form_state['values']['simple_weather_woeid'];

  // Must enter either ZIP code or WOEID is required.
  if (empty($zip_code) && empty($woeid)) {
    form_error($element);
  }
  // Only a ZIP code or WOEID can be submitted.
  if (!empty($zip_code) && !empty($woeid)) {
    form_error($element);
  }

  // WOEID must be numeric.
  if (!empty($woeid) && !is_numeric($woeid)) {
    form_error($element, t('The WOEID must only contain numbers.'));
  }
}

/**
 * Implements hook_block_save().
 */
function simple_weather_block_save($delta = '', $edit = array()) {
  if ($delta == 'simple_weather_report') {
    variable_set('simple_weather_zipcode', $edit['simple_weather_zipcode']);
    variable_set('simple_weather_woeid', $edit['simple_weather_woeid']);
    variable_set('simple_weather_scale', $edit['simple_weather_scale']);
  }
}

/**
 * Implements hook_block_view().
 */
function simple_weather_block_view($delta = '') {
  // Leaving as a switch. More than one block will be added in the future.
  switch ($delta) {
    case 'simple_weather_report':
      $block['subject'] = t('Current Weather');
      $block['content'] = simple_weather_content();
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function simple_weather_theme() {
  return array(
    'simple_weather_output' => array(
      'variables' => array(),
    ),
  );
}

/**
 * Theme output function for simple weather content.
 */
function theme_simple_weather_output(&$variables) {
  return '<div id="simple-weather"></div>';
}

/**
 * Content for the Simple Weather Report block.
 */
function simple_weather_content() {
  // Check for required simpleWeather jQuery plugin.
  simple_weather_file_required();

  // JavaScript and Styles for the Simple Weather Block.
  drupal_add_css(drupal_get_path('module', 'simple_weather') . '/css/simple_weather.css');
  drupal_add_js(drupal_get_path('module', 'simple_weather') . '/js/simple_weather.js');

  // Pass the block settings to the simpleWeather.
  drupal_add_js(array('simple_weather' => array('zipCode' => variable_get('simple_weather_zipcode'))), 'setting');
  drupal_add_js(array('simple_weather' => array('woeid' => variable_get('simple_weather_woeid'))), 'setting');
  drupal_add_js(array('simple_weather' => array('scale' => variable_get('simple_weather_scale'))), 'setting');

  return theme('simple_weather_output');
}

/**
 * Implements hook_form_alter().
 */
function simple_weather_form_alter(&$form, &$form_state, $form_id) {
  // Alter the block title label for our weather report block.
  if (isset($form['delta']['#value']) && $form['delta']['#value'] == 'simple_weather_report') {
    $form['settings']['title']['#title'] = t('Simple Weather Block Title');
  }
}

/**
 * Validate simpleWeather jQuery Plugin.
 */
function simple_weather_file_required() {
  $library = libraries_load('simpleWeather');
  if ($library['loaded'] == FALSE) {
    $msg = t('The file jquery.simpleWeather.min.js is missing and required by the Simple Weather module. Download the <a href="@download_url" target="_blank">SimpleWeather</a> jQuery plugin and read the README.txt file found inside the simple_weather.module file for installation instructions.', array('@download_url' => url('https://github.com/monkeecreate/jquery.simpleWeather/zipball/master')));
    drupal_set_message($msg, 'error', TRUE);
  }
}

/**
 * The WOEID description link.
 */
function simple_weather_woeid_anchor() {
  $woeid_link = l(t('WOEID'), 'http://woeid.rosselliot.co.nz/lookup', array(
    'attributes' => array(
      'target' => '_blank',
    ),
  ));
  $woeid_lookup = t('You can use the !woeid_link lookup tool to find the unique WOEID for your location. Works world wide!', array(
    '!woeid_link' => $woeid_link,
  ));
  // Return the woeid link and description.
  return $woeid_lookup;
}

/**
 * Implements hook_libraries_info().
 */
function simple_weather_libraries_info() {
  $libraries['simpleWeather'] = array(
    'name' => 'simpleWeather jQuery Plugin',
    'vendor url' => 'http://simpleweatherjs.com',
    'download url' => 'https://github.com/monkeecreate/jquery.simpleWeather/zipball/master',
    'version arguments' => array(
      'file' => 'jquery.simpleWeather.min.js',
      'pattern' => '/v(\d+\.+\d+.+\d+)/',
      'lines' => 1,
    ),
    'files' => array(
      'js' => array('jquery.simpleWeather.min.js'),
    ),
  );
  return $libraries;
}
