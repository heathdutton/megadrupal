<?php
/**
 * @file
 * New webform component field type populated by Smart IP integration
 */

/**
 * Implements hook_menu().
 *
 */
function webform_smart_ip_menu() {
  $items = array();

  $items['admin/config/people/webform_smart_ip'] = array(
    'title'            => 'Webform Smart IP',
    'description'      => 'Webform Smart IP administration',
    'access arguments' => array('edit webform components'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('webform_smart_ip_admin_update_records_form'),
    'file'             => 'includes/webform_smart_ip.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_webform_component_info().
 */
function webform_smart_ip_webform_component_info() {
  $components['smart_ip'] = array(
    'label' => t('Smart IP'),
    'description' => t('Will load the Smart IP results into this field. Input field is hidden from user.'),
    'features' => array(
      'csv' => TRUE,
      'email' => TRUE,
      'email_address' => FALSE,
      'email_name' => FALSE,
      'required' => FALSE,
      'conditional' => TRUE,
      'group' => FALSE,
      'attachment' => FALSE,
    ),
    'file' => 'components/smart_ip.inc',
  );

  return $components;
}

/**
 * Implements hook_webform_submission_presave().
 *
 */
function webform_smart_ip_webform_submission_presave($node, &$submission) {
  // Load form submitters location information from Smart IP
  $smart_ip_session = smart_ip_get_location($submission->remote_addr);

  foreach ($node->webform['components'] as $cid => $component) {
    // Find Smart IP fields
    if ($component['type'] == 'smart_ip') {
      // default value of Smart IP field type is 'country_code'
      $field_smart_ip_type = 'country_code';
      // Load value selected for Smart IP field type
      if (!empty($component['extra']['smart_ip_type'])) {
        $field_smart_ip_type = $component['extra']['smart_ip_type'];
      }
      // Assign value from Smart IP module for the selected field type into this field.
      $submission->data[$cid][0] = $smart_ip_session[$field_smart_ip_type];
    }
  }
}



/**
 * Updates individual form submissions with Smart IP information.
 * @param  object $submission Submission object
 * @return int             Returns the updated submission id.
 */
function _webform_smart_ip_update_info($submission) {
  module_load_include('inc', 'webform', 'includes/webform.submissions');
  $node = node_load($submission->nid);
  $update_form = webform_submission_update($node, $submission);
  return $update_form;
}


/**
 * Implements hook_cron_queue_info(), declares cron queue handler for form updates
 * @return object cron queue
 */
function webform_smart_ip_cron_queue_info() {
  $queues = DrupalQueue::get('webform_smart_ip_form_updates');
  $numItems = $queues->numberOfItems();
  watchdog('webform_smart_ip', 'Webform Smart IP update queue created. ' . $numItems . " remaining.");
  $queue['webform_smart_ip_form_updates'] = array(
    'worker callback' => '_webform_smart_ip_update_info', //function to call for each item
    'time' => 60, //seconds to spend working on the queue
  );

  return $queue;
}
