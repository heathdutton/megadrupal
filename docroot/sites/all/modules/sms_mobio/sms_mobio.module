<?php

/**
 * @file
 * Provides interface to set bocks for different sms services
 * and settings for them.
 */

/**
 * Implements hook_block_info().
 */
function sms_mobio_block_info() {
  if (variable_get('sms_mobio_services', 0)) {
    $services = unserialize(variable_get('sms_mobio_services', 0));
    
    foreach ($services AS $k => $service) {
      $blocks['sms_mobio_' . $k]['info'] = t('@service - (SMS Mobio)', array('@service' => $service));
    }
    
    return $blocks;
  }
}

/**
 * Implements hook_block_configure().
 */
function sms_mobio_block_configure($delta = '') {
  
  $form = array();
  if (variable_get('sms_mobio_services', 0)) {
    $services = unserialize(variable_get('sms_mobio_services', 0));
    
    foreach ($services AS $k => $service) {
      if ($delta == 'sms_mobio_' . $k) {
        
        $service_data = unserialize(variable_get('sms_mobio_service_' . $k, ''));
        
        $form['sms_mobio_service_id'] = array(
          '#type' => 'textfield',
          '#title' => t('Mobio service ID'),
          '#description' => t('Enter Mobio service id here'),
          '#default_value' => $service_data['sms_mobio_service_id'],
          '#weight' => 1,
        );
        $form['sms_mobio_help_page'] = array(
          '#type' => 'textfield',
          '#title' => t('Help page'),
          '#description' => t('Enter Mobio service id Help page here'),
          '#default_value' => $service_data['sms_mobio_help_page'],
          '#weight' => 2,
        );
        $form['sms_mobio_block_message'] = array(
          '#type' => 'textarea',
          '#title' => t('Message'),
          '#description' => t('Enter block short message for users. The message is process with FullHTML filter.'),
          '#default_value' => $service_data['sms_mobio_block_message'],
          '#rows' => 2,
          '#weight' => 3,
        );
      }
    }
  }

  return $form;
}

/**
 * Implements hook_block_save().
 */
function sms_mobio_block_save($delta = '', $edit = array()) {
  if (variable_get('sms_mobio_services', 0)) {
    $services = unserialize(variable_get('sms_mobio_services', 0));
    
    foreach ($services AS $k => $service) {
      if ($delta == 'sms_mobio_' . $k) {
        $sms_mobio_service = array();
        $sms_mobio_service['sms_mobio_service_id'] = $edit['sms_mobio_service_id'];
        $sms_mobio_service['sms_mobio_help_page'] = $edit['sms_mobio_help_page'];
        $sms_mobio_service['sms_mobio_block_message'] = $edit['sms_mobio_block_message'];
        $sms_mobio_service['sms_mobio_service_name'] = $service;

        variable_set('sms_mobio_service_' . $k, serialize($sms_mobio_service));
      }
    }
  }
}

/**
 * Implements hook_block_view().
 */
function sms_mobio_block_view($delta = '') {
  $block = array();
  
  if (variable_get('sms_mobio_services', 0)) {
    $services = unserialize(variable_get('sms_mobio_services', 0));
    
    foreach ($services AS $k => $service) {
      if ($delta == 'sms_mobio_' . $k) {
        $block_content = '';
        $service_data = unserialize(variable_get('sms_mobio_service_' . $k, ''));
        
        //show block only if service is configured
        if (is_numeric($service_data['sms_mobio_service_id']) && strlen($service_data['sms_mobio_block_message']) && strlen($service_data['sms_mobio_help_page'])) {
          $block['subject'] = t('SMS Mobio @service', array('@service' => $service));
        
          $block_content .= $service_data['sms_mobio_block_message'] . '<br>';
          $block_content .= l(t('More about this service'), $service_data['sms_mobio_help_page'], array('attributes' => array('class' => 'sms-more'))) . '<br>';
          $block_content .= @drupal_render(drupal_get_form('sms_mobio_send_code_' . $service_data['sms_mobio_service_id'], $service_data['sms_mobio_service_id']));
        }
        
        $block['content'] = $block_content;
      }
    }
    
    return $block;
  }
}

/**
 * Construction of the form for check sms code.
 * Use it as base_form
 */
function sms_mobio_send_code($form, &$form_state, $serv_id) {
  
  $form['#attributes'] = array('name' => 'smscode');
  $form['serv_id'] = array(
    '#type' => 'hidden',
    '#value' => $serv_id,
  );
  $form['code'] = array(
    '#type' => 'textfield',
    '#title' => t('sms Code'),
    '#description' => t('Enter sms code here.'),
    '#size' => 8,
    '#maxlength' => 6,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
    '#name' => 'ok',
  );
  
  return $form;
}

/**
 * Implements form_validate().
 */
function sms_mobio_send_code_validate(&$form, &$form_state) {
  if (strlen($form_state['values']['code']) != 6) {
    form_set_error($form['code']['#title'], t('Please, enter a correct code.'));
  }
}

/**
 * Actions to check the sms code.
 * When the correct code - appointment of a role for the specified time.
 */
function sms_mobio_send_code_submit($form, &$form_state) {
  
  $check = mobio_checkcode($form_state['values']['serv_id'], $form_state['values']['code'], 0);
  
  if ($check) {
    global $user;
    $message = t('Valid code');
    $type = 'status';
    $ip = $_SERVER['REMOTE_ADDR'];
    
    if ($user -> uid == 0) {
      $user -> sid = session_id();
    }
    
    db_insert('sms_mobio')
      ->fields(array(
        'uid' => $user -> uid,
        'sess_id' => $user -> sid,
        'ip' => $ip,
        'time' => time(),
        'sms_code' => $form_state['values']['code'],
        'serv_id' => $form_state['values']['serv_id'],
      ))
    ->execute();
    
    rules_invoke_event('sms_code_insert', $user, array($form_state['values']['code']), $form_state['values']['serv_id']);
    
    watchdog('sms_mobio',t('A Member !uid sent proper code !code on mobio.bg service !serv_id', array('!uid' => $user -> name, '!code' => $form_state['values']['code'], '!serv_id' => $form_state['values']['serv_id'])));
  }
  else {
    $message = t('Wrong code');
    $type = 'error';
  }
  
  drupal_set_message(t('SMS Mobio: @message', array('@message' => $message)), $type, $repeat = FALSE);
}

/**
 * Implements hook_forms().
 */
function sms_mobio_forms($form_id, $args) {
  if (strpos($form_id, 'sms_mobio_send_code_') === 0) {
    $forms[$form_id]['callback'] = 'sms_mobio_send_code';
  }
  
  if (strpos($form_id, 'sms_mobio_send_code_') === 0) {
    return $forms;
  }
}

/**
 * Utility function for connecting to mobio site to send data and read answer
 *
 * @param $serv_id
 *   Identificator of current mobio service.
 *
 * @param $code
 *   Verification code entered by the user.
 *
 * @return
 *   Indicator of the validity of the code inspected.
 *
 */
function mobio_checkcode($serv_id, $code, $debug = 0) {
  $res_lines = file("http://www.mobio.bg/code/checkcode.php?servID=$serv_id&code=$code");
  $ret = 0;
  if ($res_lines) {
    if (strstr("PAYBG=OK", $res_lines[0])) {
      $ret = 1;
    }
    else {
      if ($debug) {
        drupal_set_message(t('@line', array('@line' => $line)), $type = 'error', $repeat = FALSE);
      }
    }
  }
  else {
    if ($debug) {
      drupal_set_message(t('Unable to connect to mobio.bg server.\n'), $type = 'error', $repeat = FALSE);
      $ret = 0;
    }
  }
  return $ret;
}

/**
 * Implements hook_menu().
 */
function sms_mobio_menu() {
  $items = array();
  $items['admin/config/services/sms_mobio'] = array(
    'title' => 'Sms Mobio',
    'description' => 'Description of your Sms Mobio.bg settings page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sms_mobio_add_more'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'sms_mobio.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_help().
 */
function sms_mobio_help($path, $arg) {
  switch ($path) {
    case 'admin/help#sms_mobio':
      // Return a line-break version of the module README.txt.
      //check_markup($text, $format_id = NULL, $langcode = '', $cache = FALSE)
      return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"), 'full_html');
    case 'admin/config/services/sms_mobio':
      return '<p> Add yours mobio.bg services.</p>' . '<div>' . t('SMS Mobio services blocks. Add how much services you have. Additional settings for each service you may set on their <a href="@block_settings">Block settings</a>', array('@block_settings' => url('admin/structure/block')))
    . '</div>';
  }
}

/**
 * Implements hook_rules_event_info().
 */
function sms_mobio_rules_event_info() {
  $items = array(
    'sms_code_insert' => array(
      'label' => t('After sent proper SMS code'),
      'module' => 'sms_mobio',
      'group' => t('SMS'),
      'variables' => array(
        'acting_user' => array('type' => 'user', 'label' => t('The user who sent code.')),
        'sms_code' => array('type' => 'text', 'label' => t('The sent code.')),
        'service_id' => array('type' => 'text', 'label' => t('The serv_id.')),
      )
    ),
  );
  return $items;
}

/**
 * Implements hook_rules_condition_info()
 */
function sms_mobio_rules_condition_info() {
  return array(
    'sms_mobio_condition_service_id' => array(
      'label' => t('Service id'),
      'arguments' => array(
        'acting_user' => array('type' => 'user', 'label' => t('The user who sent code.')),
        'sms_code' => array('type' => 'value', 'label' => t('The sms code.')),
        'service_id' => array('type' => 'string', 'label' => t('The service id (service cost)')),
      ),
      'module' => 'sms_mobio',
    ),
  );
}
/**
 * Condition sms_mobio_condition_service_id
 */
function sms_mobio_condition_service_id($user, $sms_code, $service_id) {
  
  dsm($user);
  dsm($sms_code);
  dsm($service_id);
  
  $valid_sms = proper_sent_code_load($user, $sms_code, $service_id);
  return ($valid_sms) ? TRUE : FALSE;
}

function proper_sent_code_load($user, $sms_code, $service_id) {
  $sms_code = db_select('sms_mobio', 's')
    -> fields('s', array('sms_code'))
    -> condition('uid', $user -> uid)
    -> condition('sms_code', $sms_code[0])
    -> condition('service_id', $service_id[0])
    -> execute()
    -> fetchField();
    
  return $sms_code;
}

