<?php
/**
 * @file
 * Sticky Sharrre Bar module.
 */

/**
 * Implements hook_help().
 */
function sticky_sharrre_bar_help($path) {
  switch ($path) {
    case 'admin/structure/block/manage/sticky_sharrre_bar/sticky_sharrre_bar_widget/configure':
      return '<p>' . t('The Sticky Sharrre Bar module provides a dropdown widget for share links to popular providers.') . '</p>';
  }

  return '';
}

/**
 * Implements hook_permission().
 */
function sticky_sharrre_bar_permission() {
  return array(
    'access sticky_sharrre_bar' => array(
      'title' => t('View Sticky Sharrre Bar'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function sticky_sharrre_bar_menu() {
  $items['sharrre'] = array(
    'page callback' => 'sticky_sharrre_bar_handler',
    'delivery callback' => 'drupal_json_output',
    'access arguments' => array('access sticky_sharrre_bar'),
    'type' => MENU_CALLBACK,
    'file' => 'sticky_sharrre_bar.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function sticky_sharrre_bar_theme() {
  return array(
    'sticky_sharrre_bar_block' => array(
      'variables' => array(
        'providers' => NULL,
        'url' => NULL,
        'title' => NULL,
      ),
      'template' => 'sticky-sharrre-bar-block',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function sticky_sharrre_bar_block_info() {

  $theme = variable_get('theme_default', 'bartik');
  $theme_regions = system_region_list($theme);

  if (isset($theme_regions['header'])) {
    $region = 'header';
  }
  else {
    $region = 'content';
  }

  $blocks['sticky_sharrre_bar_widget'] = array(
    'info' => t('Sticky Sharrre Bar'),
    'title' => '<none>',
    'weight' => 100,
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'region' => $region,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'status' => TRUE,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function sticky_sharrre_bar_block_configure($delta = '') {
  $form = array();
  if ($delta == 'sticky_sharrre_bar_widget') {
    $form['sticky_sharrre_bar'] = array(
      '#type' => 'fieldset',
      '#title' => t('Sticky Sharrre Bar settings'),
      '#collapsible' => FALSE,
      '#collapsed' => FALSE,
      '#weight' => 70,
    );
    $form['sticky_sharrre_bar']['sticky_sharrre_bar_providers'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Main share providers'),
      '#options' => _sticky_sharrre_bar_providers_list(),
      '#default_value' => variable_get('sticky_sharrre_bar_providers',
        array('googlePlus', 'facebook', 'twitter', 'linkedin')),
      '#description' => t('Select main providers shown by default.'),
    );
    if (module_exists('googleanalytics')) {
      $form['sticky_sharrre_bar']['sticky_sharrre_bar_use_google_analytics_tracking'] = array(
        '#type' => 'checkbox',
        '#title' => t('Allows tracking social interaction with "Google Analytics".'),
        '#description' => t('For more details see the !url.',
          array(
            '!url' => l(t('"Sharrre" documentation'),
              'http://sharrre.com/track-social.html',
              array('attributes' => array('target' => '_blank'))),
          )
        ),
        '#default_value' => variable_get('sticky_sharrre_bar_use_google_analytics_tracking', 1),
      );
    }
    $form['sticky_sharrre_bar']['sticky_sharrre_bar_use_css'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use the css of the module.'),
      '#description' => t('You can override the styles in your theme.'),
      '#default_value' => variable_get('sticky_sharrre_bar_use_css', 1),
    );
    $form['sticky_sharrre_bar']['sticky_sharrre_bar_use_custom_css_selector'] = array(
      '#type' => 'textfield',
      '#title' => t('Custom CSS selector'),
      '#default_value' => variable_get('sticky_sharrre_bar_use_custom_css_selector', ''),
      '#maxlength' => 60,
      '#size' => 30,
      '#description' => t('In some cases, module can not find the right region selector in your theme. You can manually set it. Examples: "#navbar", ".header". Is empty by default.'),
    );

  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function sticky_sharrre_bar_block_save($delta = '', $edit = array()) {
  if ($delta == 'sticky_sharrre_bar_widget') {
    variable_set('sticky_sharrre_bar_providers', $edit['sticky_sharrre_bar_providers']);
    variable_set('sticky_sharrre_bar_use_google_analytics_tracking', $edit['sticky_sharrre_bar_use_google_analytics_tracking']);
    variable_set('sticky_sharrre_bar_use_css', $edit['sticky_sharrre_bar_use_css']);
    variable_set('sticky_sharrre_bar_use_custom_css_selector', $edit['sticky_sharrre_bar_use_custom_css_selector']);
  }
}

/**
 * Implements hook_block_view().
 */
function sticky_sharrre_bar_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'sticky_sharrre_bar_widget':
      $providers = variable_get('sticky_sharrre_bar_providers',
        array('googlePlus', 'facebook', 'twitter', 'linkedin'));
      $enabled_providers = array();
      foreach ($providers as $key => $provider) {
        if ($provider != '0') {
          $enabled_providers[$key] = $provider;
        }
      }

      if (!empty($enabled_providers) && sticky_sharrre_bar_libraries_loaded() && user_access('access sticky_sharrre_bar')) {

        $block_info = block_load('sticky_sharrre_bar', $delta);

        $title = drupal_get_title();
        if ($title == '') {
          $title = variable_get('site_name', 'Drupal');
        }

        $custom_css_selector = variable_get('sticky_sharrre_bar_use_custom_css_selector', '');
        $js_variables = array(
          'providers' => $enabled_providers,
          'useGoogleAnalyticsTracking' => variable_get('sticky_sharrre_bar_use_google_analytics_tracking', 0),
          'blockRegion' => ($custom_css_selector != '') ? $custom_css_selector : $block_info->region,
          'isCustomSelector' => ($custom_css_selector != '') ? TRUE : FALSE,
        );

        $block['content'] = array(
          '#theme' => 'sticky_sharrre_bar_block',
          '#providers' => $enabled_providers,
          '#url' => url(current_path(), array('absolute' => TRUE)),
          '#title' => check_plain($title),
          '#attached' => array(
            'js' => array(
              array(
                'type' => 'setting',
                'data' => array('stickySharrreBar' => $js_variables),
              ),
              drupal_get_path('module', 'sticky_sharrre_bar') . '/js/sticky_sharrre_bar.js',
            ),
          ),
        );
        if (variable_get('sticky_sharrre_bar_use_css', 1) == 1) {
          $block['content']['#attached']['css'] = array(
            drupal_get_path('module', 'sticky_sharrre_bar') . '/css/sticky_sharrre_bar.css',
          );
        }
      }
      break;
  }
  return $block;
}

/**
 * Implements hook_libraries_info().
 */
function sticky_sharrre_bar_libraries_info() {
  $libraries['jquery-waypoints'] = array(
    'name' => 'jQuery Waypoints',
    'vendor url' => 'http://imakewebthings.com/jquery-waypoints/',
    'download url' => 'https://github.com/imakewebthings/jquery-waypoints/zipball/latest',
    'version arguments' => array(
      'file' => 'waypoints.min.js',
      'pattern' => '/(\d.+)/',
      'lines' => 3,
    ),
    'files' => array(
      'js' => array(
        'waypoints.min.js',
        'shortcuts/sticky-elements/waypoints-sticky.min.js',
      ),
    ),
  );
  $libraries['sharrre'] = array(
    'name' => 'jQuery Sharrre',
    'vendor url' => 'http://sharrre.com/#download',
    'download url' => 'http://sharrre.com/#download',
    'version arguments' => array(
      'file' => 'jquery.sharrre.min.js',
      'pattern' => '/(\d.+)/',
      'lines' => 3,
    ),
    'files' => array(
      'js' => array('jquery.sharrre.min.js'),
    ),
  );

  return $libraries;
}

/**
 * Check if the jQuery Waypoints library has been loaded.
 *
 * @return bool
 *   Library status
 */
function sticky_sharrre_bar_waypoints_loaded() {
  if (($library = libraries_load('jquery-waypoints')) && !empty($library['loaded'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Check if the jQuery Sharrre library has been loaded.
 *
 * @return bool
 *   Library status
 */
function sticky_sharrre_bar_sharrre_loaded() {
  if (($library = libraries_load('sharrre')) && !empty($library['loaded'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Get all libraries status.
 *
 * @return bool
 *   Libraries status
 */
function sticky_sharrre_bar_libraries_loaded() {
  return (sticky_sharrre_bar_waypoints_loaded() && sticky_sharrre_bar_sharrre_loaded());
}

/**
 * Get providers list.
 *
 * @return array
 *   List of providers.
 */
function _sticky_sharrre_bar_providers_list() {
  return array(
    'googlePlus' => t('GooglePlus'),
    'facebook' => t('Facebook'),
    'twitter' => t('Twitter'),
    'digg' => t('Digg'),
    'delicious' => t('Delicious'),
    'stumbleupon' => t('StumbleUpon'),
    'linkedin' => t('LinkedIn'),
    'pinterest' => t('Pinterest'),
  );
}
