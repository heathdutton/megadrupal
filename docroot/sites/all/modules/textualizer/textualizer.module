<?php

/**
 * @file
 * Module file for "Textualizer".
 */

// Constants
define("TEXTUALIZER_DEFAULT_SENTENCE", 'Textualizer is a jQuery module that allows you to transition ' . PHP_EOL . 'through sentences of text. Just like this...' . PHP_EOL . 'When transitioning to a new sentence, any character that is common ' . PHP_EOL . 'to the next sentence is kept on the screen, and moved to its new position.');
define("TEXTUALIZER_CSS", 'width: 250px;' . PHP_EOL . 'height: 100px;' . PHP_EOL . 'font-size: 20px;');

/**
 * Implements hook_block_info().
 *
 * Provides one block named 'Textualizer' that is globally cached.
 */
function textualizer_block_info() {
  $blocks['textualizer-block'] = array(
    'info' => t('Textualizer'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Renders a HTML-span containing the textualizer.
 */
function textualizer_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'textualizer-block':
      $output = '<div id="txtlzr"></div>';
      // Create the block.
      $block['content'] = $output;
      break;
  }
  return $block;
}

/**
 * Implements hook_block_configure().
 *
 * Creates the form data to set the Text Sentences, Animation Style, Duration.
 */
function textualizer_block_configure($delta = '') {
  $form = array();
  if ($delta == 'textualizer-block') {
    $form['textualizer_text'] = array(
      '#type' => 'textarea',
      '#title' => t('Text Sentences'),
      '#default_value' => variable_get('textualizer_text', TEXTUALIZER_DEFAULT_SENTENCE),
      '#rows' => 5,
      '#description' => t('Enter some sentences which will be displayed in block with text transition effect. Use a new line for each Sentences.'),
      '#required' => TRUE,
    );
    $form['textualizer_style'] = array(
      '#type' => 'select',
      '#title' => t('Animation Style'),
      '#options' => array('random' => 'random', 'fadeIn' => 'fadeIn', 'slideLeft' => 'slideLeft', 'slideTop' => 'slideTop'),
      '#default_value' => variable_get('textualizer_style', 'random'),
      '#description' => t('The Style of the Animation effects.'),
    );
    $form['textualizer_duration'] = array(
      '#type' => 'textfield',
      '#title' => t('Sentence Display Duration'),
      '#default_value' => variable_get('textualizer_duration', 3000),
      '#description' => t('Time (ms) each sentence will remain on screen.'),
    );
    $form['textualizer_css'] = array(
      '#type' => 'textarea',
      '#title' => t('CSS Style for the Textualizer block'),
      '#default_value' => variable_get('textualizer_css', TEXTUALIZER_CSS),
      '#rows' => 5,
      '#description' => t('Enter the css property of the textualizer block. Adjust width, height and font-size values to fit to your theme.'),
      '#required' => TRUE,
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Stores the Text Sentences, Animation type and duration
 */
function textualizer_block_save($delta = '', $edit = array()) {
  if ($delta == 'textualizer-block') {
    variable_set('textualizer_text', $edit['textualizer_text']);
    variable_set('textualizer_style', $edit['textualizer_style']);
    variable_set('textualizer_duration', $edit['textualizer_duration']);
    variable_set('textualizer_css', $edit['textualizer_css']);
  }
}


/**
 * Implements hook_init().
 */
function textualizer_init() {
  $textualizer_text = variable_get('textualizer_text', TEXTUALIZER_DEFAULT_SENTENCE);
  $textualizer_style = variable_get('textualizer_style', 'random');
  $textualizer_txt_duration =variable_get('textualizer_duration', 3000);
  $textualizer_css = variable_get('textualizer_css', TEXTUALIZER_CSS);
  $textualizer_text_array = explode(PHP_EOL, $textualizer_text);
  $inline_code = '// Output by textualizer module' . PHP_EOL;
  $inline_code = 'jQuery(function() {' . PHP_EOL;
  $inline_code .= 'var list = [';
  foreach ($textualizer_text_array as $text_sentence) {
    $text_sentence = trim($text_sentence);
    $text_sentence = addslashes($text_sentence);
    $inline_code .= "'" . $text_sentence . "',";
  }
  $inline_code .= '];' . PHP_EOL; 
  $inline_code .= "var txt = jQuery('#txtlzr');" . PHP_EOL;
  $inline_code .= "txt.textualizer(list, {duration: " . $textualizer_txt_duration . ", effect: '" . $textualizer_style . "', centered: true});" . PHP_EOL;
  $inline_code .= "txt.textualizer('start');" . PHP_EOL;
  $inline_code .= "})" . PHP_EOL;
  drupal_add_css('#txtlzr {' . $textualizer_css . '}', $option['type'] = 'inline');
  drupal_add_js($inline_code,
    array('type' => 'inline', 'scope' => 'footer', 'weight' => 1)
  );
}
