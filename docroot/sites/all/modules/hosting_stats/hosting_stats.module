<?php
/**
 * @file
 * A module to collate information about a Drupal site's hosting environment.
 */

/**
 * Implements hook_menu().
 */
function hosting_stats_menu() {
  $items['admin/config/hosting_stats'] = array(
    'title' => 'Hosting Diagnostics',
    'description' => 'Hosting diagnostic settings.',
    'file' => 'hosting_stats.admin.inc',
    'access arguments' => array('administer hosting stats'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_stats_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/reports/hosting_stats'] = array(
    'title' => 'Hosting Diagnostics',
    'description' => 'Hosting diagnostic reports.',
    'file' => 'hosting_stats.report.inc',
    'access callback' => 'hosting_stats_reports_access',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_stats_reporting'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/reports/hosting_stats/summary'] = array(
    'title' => 'Email Report',
    'file' => 'hosting_stats.summary.inc',
    'access callback' => 'hosting_stats_reports_access',
    'page callback' => 'hosting_stats_send',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function hosting_stats_permission() {
  return array(
    'administer hosting stats' => array(
      'title' => t('administer hosting stats'),
      'description' => t('Turn hosting logging on or off, and configure parameters.'),
    ),
    'view hosting stats' => array(
      'title' => t('view hosting stats'),
      'description' => t('View file, traffic, server, and database statistics reports.'),
    ),
  );
}

/**
 * Access arguments for reports page.
 */
function hosting_stats_reports_access() {
  return user_access('administer hosting stats') || user_access('view hosting stats');
}

/**
 * Implements hook_exit().
 */
function hosting_stats_exit() {
  if (variable_get('hosting_stats_logging', 0)) {
    global $user;
    $usertype = $user->uid ? 1 : 0;
    $stats = array(
      'usertype' => $usertype,
      'timestamp' => REQUEST_TIME,
    );
    drupal_write_record('hosting_stats_log', $stats);
  }
}

/**
 * Implements hook_cron().
 *
 * Deletes rows that we don't need, so that we don't grow huge tables on very
 * busy sites. Users who want to keep more record can change
 * hosting_stats_row_limit().
 */
function hosting_stats_cron() {
  // We keep a million rows by default, which is about 60MB
  // on disk give or take.
  $delete_count = db_query('SELECT count(*) FROM {hosting_stats_log}')->fetchField();
  $delete_count -= variable_get('hosting_stats_row_limit', 1000000);

  if ($delete_count > 0) {
    // Because of the way that DatabaseConnection_mysql::queryRange() is
    // implemented, we have to do plain old string interpolation here.
    // db_delete() and db_query_range() do not support DELETE limit syntax.
    db_query("DELETE FROM {hosting_stats_log} LIMIT $delete_count");
    watchdog(
      'hosting_stats',
      'Deleted @count rows from the hosting diagnostics performance log, @limit remain.',
      array(
        '@count' => $delete_count,
        '@limit' => variable_get('hosting_stats_row_limit', 1000000),
      ),
      WATCHDOG_INFO
    );
  }
}
