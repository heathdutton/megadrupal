<?php
/**
 * @file
 * Provides an Rabobank OmniKassa payment method api
 */

/**
 * DEFINE PAYMENT METHODS.
 */
define('OMNIKASSA_IDEAL', 'IDEAL');
define('OMNIKASSA_BCMC', 'BCMC');
define('OMNIKASSA_VPAY', 'VPAY');
define('OMNIKASSA_MINITIX', 'MINITIX');
define('OMNIKASSA_VISA', 'VISA');
define('OMNIKASSA_MASTERCARD', 'MASTERCARD');
define('OMNIKASSA_MAESTRO', 'MAESTRO');
define('OMNIKASSA_INCASSO', 'INCASSO');
define('OMNIKASSA_ACCEPTGIRO', 'ACCEPTGIRO');
define('OMNIKASSA_REMBOURS', 'REMBOURS');

/**
 * DEFINE PAYMENT RESULTS.
 */
define('OMNIKASSA_PAYMENT_STATUS_SUCCESS', '99');
define('OMNIKASSA_PAYMENT_STATUS_PENDING', '50');
define('OMNIKASSA_PAYMENT_STATUS_FAILURE', '00');

/**
 * DEFINE TEST SETTINGS
 */
define('OMNIKASSA_TEST_MERCHANT_ID', '002020000000001');
define('OMNIKASSA_TEST_SECRET_KEY', '002020000000001_KEY1');
define('OMNIKASSA_TEST_KEY_VERSION', '1');

/**
 * Implements hook_permission().
 */
function omnikassa_permission() {
  return array(
    'administer omnikassa' => array(
      'title' => t('Administer OmniKassa'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function omnikassa_menu() {
  $items = array();

  $items['admin/config/services/omnikassa'] = array(
    'title' => 'OmniKassa integration settings',
    'description' => 'Configure OmniKassa',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('omnikassa_settings'),
    'access arguments' => array('administer omnikassa'),
  );

  return $items;
}

/**
 * Omnikassa settings page callback.
 *
 * @return array
 *   A system settings form for OmniKassa settings.
 */
function omnikassa_settings() {
  $form = array();

  $merchant_id = variable_get('omnikassa_merchant_id', OMNIKASSA_TEST_MERCHANT_ID);
  $key_version = variable_get('omnikassa_key_version', OMNIKASSA_TEST_KEY_VERSION);
  $secret_key = variable_get('omnikassa_secret_key', OMNIKASSA_TEST_SECRET_KEY);

  if (empty($merchant_id) || empty ($secret_key) || empty ($key_version)) {
    drupal_set_message(t('Required OmniKassa account information is missing.<br />Please provide the missing information in order to enable payment through OmniKassa.'), 'error');
  }

  $form['omnikassa_merchant_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Merchant Id'),
    '#required' => TRUE,
    '#description' => t('Your OmniKassa merchant id for this website'),
    '#default_value' => $merchant_id,
  );

  $form['omnikassa_secret_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Secret Key'),
    '#required' => TRUE,
    '#description' => t('Your OmniKassa secret key'),
    '#default_value' => $secret_key,
  );

  $form['omnikassa_key_version'] = array(
    '#type' => 'textfield',
    '#title' => t('Key Version'),
    '#required' => TRUE,
    '#description' => t('Your OmniKassa key version'),
    '#default_value' => $key_version,
  );

  $form['omnikassa_reference'] = array(
    '#type' => 'textfield',
    '#title' => t('Reference'),
    '#required' => TRUE,
    '#maxlength' => 10,
    '#description' => t('Your unique OmniKassa refence which preceeds the order number.'),
    '#default_value' => variable_get('omnikassa_reference'),
  );

  $form['omnikassa_mode'] = array(
    '#type' => 'radios',
    '#title' => t('Mode'),
    '#options' => array(
      '1' => ('Test account - for testing purposes only'),
      '0' => ('Production account - use for processing real transactions'),
    ),
    '#default_value' => variable_get('omnikassa_mode', '1'),
  );

  return system_settings_form($form);
}

/**
 * Function to get Omnikassa authorization data.
 *
 * @return array
 *   The merchant settings.
 */
function omnikassa_get_data() {
  if (variable_get('omnikassa_mode', '1') == '1') {
    return array(
      'merchantId' => OMNIKASSA_TEST_MERCHANT_ID,
      'keyVersion' => OMNIKASSA_TEST_KEY_VERSION,
    );
  }
  return array(
    'merchantId' => variable_get('omnikassa_merchant_id'),
    'keyVersion' => variable_get('omnikassa_key_version'),
  );
}

/**
 * Function to create seal before sending data.
 *
 * @param string $str
 *   Data for the payment: an imploded array seperated with |.
 */
function omnikassa_create_seal($str) {
  if (variable_get('omnikassa_mode', '1') == '1') {
    return hash('sha256', $str . OMNIKASSA_TEST_SECRET_KEY);
  }
  return hash('sha256', $str . variable_get('omnikassa_secret_key'));
}

/**
 * Parse Omnikassa result code.
 *
 * @param string $code
 *   Resultcode from OmniKassa.
 * @param string $payment_method
 *   Payment method used.
 *
 * @return array
 *   Status and message.
 */
function omnikassa_result_parse($code, $payment_method) {
  $combicode = strtolower($payment_method) . $code;
  switch ($combicode) {
    /* Ideal */
    case 'ideal00':
      $st = OMNIKASSA_PAYMENT_STATUS_SUCCESS;
      $msg = t('The payment is guaranteed');
      break;

    case 'ideal05':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Undefined error');
      break;

    case 'ideal17':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Cancelled');
      break;

    case 'ideal60':
      $st = OMNIKASSA_PAYMENT_STATUS_PENDING;
      $msg = t('Pending');
      break;

    case 'ideal90':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Issuer unavailable, set by iDEAL acquirer');
      break;

    case 'ideal97':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Timed out');
      break;

    /* CreditCard */
    case 'visa00':
    case 'bcmc00':
    case 'vpay00':
    case 'mastercard00':
    case 'maestro00':
      $st = OMNIKASSA_PAYMENT_STATUS_SUCCESS;
      $msg = t('Transaction success, authorization accepted');
      break;

    case 'visa02':
    case 'bcmc02':
    case 'vpay02':
    case 'mastercard02':
    case 'maestro02':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Please call the bank because the authorization limit on the card has been exceeded');
      break;

    case 'visa03':
    case 'bcmc03':
    case 'vpay03':
    case 'mastercard03':
    case 'maestro03':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Invalid merchant contract');
      break;

    case 'visa05':
    case 'bcmc05':
    case 'vpay05':
    case 'mastercard05':
    case 'maestro05':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Do not honor, authorization refused');
      break;

    case 'visa12':
    case 'bcmc12':
    case 'vpay12':
    case 'mastercard12':
    case 'maestro12':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Invalid transaction, check the parameters sent in the request');
      break;

    case 'visa14':
    case 'bcmc14':
    case 'vpay14':
    case 'mastercard14':
    case 'maestro14':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Invalid card number or invalid Card Security Code or Card (for MasterCard) or invalid Card Verification Value (for Visa/Maestro)');
      break;

    case 'visa17':
    case 'bcmc17':
    case 'vpay17':
    case 'mastercard17':
    case 'maestro17':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Cancellation of payment by the end user');
      break;

    case 'visa24':
    case 'bcmc24':
    case 'vpay24':
    case 'mastercard24':
    case 'maestro24':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Invalid status');
      break;

    case 'visa25':
    case 'bcmc25':
    case 'vpay25':
    case 'mastercard25':
    case 'maestro25':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Transaction not found in database');
      break;

    case 'visa30':
    case 'bcmc30':
    case 'vpay30':
    case 'mastercard30':
    case 'maestro30':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Invalid format');
      break;

    case 'visa34':
    case 'bcmc34':
    case 'vpay34':
    case 'mastercard34':
    case 'maestro34':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Fraud suspicion');
      break;

    case 'visa40':
    case 'bcmc40':
    case 'vpay40':
    case 'mastercard40':
    case 'maestro40':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Operation not allowed to this Merchant');
      break;

    case 'visa60':
    case 'bcmc60':
    case 'vpay60':
    case 'mastercard60':
    case 'maestro60':
      $st = OMNIKASSA_PAYMENT_STATUS_PENDING;
      $msg = t('Pending transaction');
      break;

    case 'visa63':
    case 'bcmc63':
    case 'vpay63':
    case 'mastercard63':
    case 'maestro63':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Security breach detected, transaction stopped');
      break;

    case 'visa75':
    case 'bcmc75':
    case 'vpay75':
    case 'mastercard75':
    case 'maestro75':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('The number of attempts to enter the card number has been exceeded');
      break;

    case 'visa90':
    case 'bcmc90':
    case 'vpay90':
    case 'mastercard90':
    case 'maestro90':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Acquirer server temporarily unavailable');
      break;

    case 'visa94':
    case 'bcmc94':
    case 'vpay94':
    case 'mastercard94':
    case 'maestro94':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Duplicate transaction');
      break;

    case 'visa97':
    case 'bcmc97':
    case 'vpay97':
    case 'mastercard97':
    case 'maestro97':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Request time-out; transaction refused');
      break;

    case 'visa99':
    case 'bcmc99':
    case 'vpay99':
    case 'mastercard99':
    case 'maestro99':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Payment page temporarily unavailable');
      break;

    /* Minitix */
    case 'minitix00':
      $st = OMNIKASSA_PAYMENT_STATUS_SUCCESS;
      $msg = t('Transaction OK');
      break;

    case 'minitix05':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Undefined error');
      break;

    case 'minitix17':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Payment cancelled');
      break;

    case 'minitix90':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('System error');
      break;

    case 'minitix97':
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Request outside time window');
      break;

    case 'minitix99':
      $st = OMNIKASSA_PAYMENT_STATUS_PENDING;
      $msg = t('Payment confirmation started');
      break;

    /* Other methods */

    case 'incasso00':
    case 'acceptgiro00':
    case 'rembours00':
      $st = OMNIKASSA_PAYMENT_STATUS_SUCCESS;
      $msg = t('Transaction OK');
      break;

    case 'incasso60':
    case 'acceptgiro60':
    case 'rembours60':
      $st = OMNIKASSA_PAYMENT_STATUS_PENDING;
      $msg = t('Payment confirmation started');
      break;

    /* Default unknow response */
    default:
      $st = OMNIKASSA_PAYMENT_STATUS_FAILURE;
      $msg = t('Unknown status (response code @code)', array('@code' => $code));
  }

  return array(
    'code' => $st,
    'message' => $msg,
  );
}

/**
 * Function to create an associated array with omnikassa settings.
 *
 * @param array $data
 *   Data used for the payment.
 *
 * @return array
 *   Array with settings needed for the payment.
 */
function omnikassa_create_settings($data = array()) {
  $compile = array();
  foreach ($data as $index => $value) {
    $compile[] = $index . '=' . $value;
  }
  $compile = implode('|', $compile);
  $settings = array(
    'Data' => $compile,
    'InterfaceVersion' => 'HP_1.0',
    'Seal' => omnikassa_create_seal($compile),
  );
  return $settings;
}

/**
 * Function to get the appropiate omnikassa gateway url.
 *
 * @param string $mode
 *   1 = Test and 0 = production.
 *
 * @return string
 *   Url needed for corresponding mode.
 */
function omnikassa_gateway_url($mode = '1') {
  return $mode == '0' ? 'https://payment-webinit.omnikassa.rabobank.nl/paymentServlet' : 'https://payment-webinit.simu.omnikassa.rabobank.nl/paymentServlet';
}

/**
 * Function to get a list with available payment methods.
 * @return array
 *   List of payment methods.
 */
function omnikassa_get_payment_methods() {
  return array(
    OMNIKASSA_IDEAL => 'iDEAL',
    OMNIKASSA_BCMC => 'Bancontact/MisterCash',
    OMNIKASSA_VPAY => 'V PAY',
    OMNIKASSA_MINITIX => 'Minitix',
    OMNIKASSA_VISA => 'Visa',
    OMNIKASSA_MASTERCARD => 'MasterCard',
    OMNIKASSA_MAESTRO => 'Maestro',
    OMNIKASSA_INCASSO => 'Incasso',
    OMNIKASSA_ACCEPTGIRO => 'Acceptgiro',
    OMNIKASSA_REMBOURS => 'Rembours',
  );
}
