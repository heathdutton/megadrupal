<?php
/**
 * @file
 *
 */

/**
 * Convert any existing "private=TRUE" CASHNet Item component instances to "private=FALSE".
 */
function webform_cashnet_update_7000() {
  // Get all CASHNet components.
  $components = db_select('webform_component', 'wc')
    ->fields('wc', array('nid', 'cid', 'extra'))
    ->condition('wc.type', 'cashnet_item', '=')
    ->execute();
  $output = array();
  $failure = FALSE;
  // Iterate and find any with private=1.
  foreach ($components as $component) {
    if (empty($component->extra)) {
      continue;
    }
    $is_private = strpos($component->extra, 's:7:"private";i:1;') !== FALSE;
    if ($is_private) {
      // We're reasonably sure (due to our strpos()) that this component has
      // private = 1. But, just in case there's some other extra field which
      // happens to have a "private" integer in it, fully unserialize the extra
      // array and operate on it just to be safe.
      if (!($component->extra = unserialize($component->extra))) {
        $failure = TRUE;
        $output[] = FALSE;
        watchdog(WATCHDOG_ERROR, 'Failed to unserialize() CASHNet Item component nid=@nid, cid=@cid extra fields.', array('@nid' => $component->nid, '@cid' => $component->cid));
        continue;
      }
      $component->extra['private'] = 0;
      // Update the record in the database.
      $success = db_update('webform_component')
        ->fields(array('extra' => serialize($component->extra)))
        ->condition('nid', $component->nid)
        ->condition('cid', $component->cid)
        ->execute();
      if ($success) {
        $output[] = t('Fixed CASHNet Item component nid=@nid, cid=@cid.', array('@nid' => $component->nid, '@cid' => $component->cid));
      }
      else {
        $failure = TRUE;
        $output[] = FALSE;
        watchdog(WATCHDOG_ERROR, 'Failed to db_update() CASHNet Item component nid=@nid, cid=@cid.', array('@nid' => $component->nid, '@cid' => $component->cid));
      }
    }
  }
  if ($failure) {
    throw new DrupalUpdateException('Failed to update one or more components. Check error logs and try again.');
  }
  array_unshift($output, t('Attempted to update @count CASHNet Item(s).', array('@count' => count($output))));
  return implode(PHP_EOL, $output);
}
