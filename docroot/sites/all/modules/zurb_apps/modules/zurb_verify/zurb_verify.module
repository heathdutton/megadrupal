<?php
/**
 * @file
 * Main module file for Zurb Verify
 */

/**
 * Implements hook_help().
 */
function zurb_verify_help($path, $arg) {
  switch ($path) {
    case 'admin/help#zurb_verify':
      return t('Please use your form ID from your Zurb Verify account.' .
        ' Please see http://verifyapp.com/home for a demo and more information.');
  }
}

/**
 * Implements hook_menu().
 */
function zurb_verify_menu() {
  $items = array();
  $items['admin/config/services/zurb_verify'] = array(
    'title' => 'Zurb Verify',
    'description' => 'Configure Zurb Verify.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('zurb_verify_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_page_alter().
 */
function zurb_verify_page_alter() {
  $zurb_verify_id = check_plain(variable_get('zurb_verify_id', ''));

  if (!empty($zurb_verify_id) && _zurb_verify_visibility_pages()) {
    $js  = '(function() {' . PHP_EOL;
    $js .= 'var ve = document.createElement("script"); ve.type = "text/javascript"; ve.async = true;' . PHP_EOL;
    $js .= '  ve.src = ("https:" == document.location.protocol ? "https" : "http")';
    $js .= '  + "://verifyapp.com/embed/top-bar/' . $zurb_verify_id . '.js?buster=" + Math.random()' . PHP_EOL;
    $js .= '  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ve, s)' . PHP_EOL;
    $js .= '})()' . PHP_EOL;

    drupal_add_js($js, array('type' => 'inline', 'scope' => 'footer'));
  }
}

/**
 * Implements hook_form().
 */
function zurb_verify_settings_form() {
  $form = array();
  $form['zurb_verify_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Zurb Verify ID'),
    '#default_value' => variable_get('zurb_verify_id', ''),
    '#required' => TRUE
  );

  $options = array(t('On every page except the listed pages.'), t('On the listed pages only.'));
  $description = t('Enter one page per line as Drupal paths. The "*" character is a wildcard.' .
    ' Example paths are %blog for the blog page and %blog-wildcard for every personal blog.' .
    ' %front is the front page.',
    array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>'));

  $form['zurb_verify_visibility_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Page specific settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['zurb_verify_visibility_settings']['zurb_verify_visibility'] = array(
    '#type' => 'radios',
    '#title' => t('Add Zurb Verify script'),
    '#options' => $options,
    '#default_value' => variable_get('zurb_verify_visibility', 0),
  );
  $form['zurb_verify_visibility_settings']['zurb_verify_pages'] = array(
    '#type' => 'textarea',
    '#title' => t('Pages'),
    '#default_value' => variable_get('zurb_verify_pages', 'admin/*' . PHP_EOL),
    '#description' => $description,
    '#wysiwyg' => FALSE,
  );
  return system_settings_form($form);
}

/**
 * Function to determine if code should be printed on the current page.
 */
function _zurb_verify_visibility_pages() {
  $visibility = variable_get('zurb_verify_visibility', 0);
  $pages = variable_get('zurb_verify_pages', 'admin/*' . PHP_EOL);

  // Match path if necessary.
  if (!empty($pages)) {
    $path = drupal_get_path_alias($_GET['q']);
    // Compare with the internal and path alias (if any).
    $page_match = drupal_match_path($path, $pages);
    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }
    // When $visibility has a value of 0, the block is displayed on
    // all pages except those listed in $pages. When set to 1, it
    // is displayed only on those pages listed in $pages.
    $page_match = !($visibility xor $page_match);
  }
  else {
    $page_match = TRUE;
  }

  return $page_match;
}
