<?php

/**
 * @file
 * Module needed to change the maintenance theme with the Openfed distribution.
 */

/**
 * Implements hook_form_alter().
 */
function maintenance_theme_selector_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'system_site_maintenance_mode') {
    // Add callback to the form submit action.
    $form['#submit'][] = '_maintenance_theme_selector_maintenance_page_form_submit';
    // Add the input select to choose the maintenance theme.
    // Get the list of themes.
    $themes = system_rebuild_theme_data();
    uasort($themes, 'system_sort_modules_by_info_name');
    // Build the select options array.
    $options = array();
    $default = variable_get('theme_default', 'bartik');

    foreach ($themes as $theme) {
      $options[$theme->name] = ($theme->name == $default) ? $theme->info['name'] . ' (default theme)' : $theme->info['name'];
    }
    // Build the select input.
    $form['maintenance']['maintenance_theme_selector_custom'] = array(
      '#type' => 'select',
      '#options' => $options,
      '#title' => t('Maintenance theme'),
      '#description' => t('Choose which theme should display on the maintenance page.'),
      '#default_value' => variable_get('maintenance_theme_selector_custom', $default),
    );
  }
}

/**
 * Implements hook_form_submit().
 */
function _maintenance_theme_selector_maintenance_page_form_submit($form, &$form_state) {
  // If maintenance mode is enabled ...
  if (!empty($form_state['values']['maintenance_mode'])) {
    // Save the new settings.
    _maintenance_theme_selector_save_maintenance_theme_value($form_state['values']['maintenance_theme_selector_custom']);
  }
  // ... or not.
  else {
    // Restore the latest settings.
    _maintenance_theme_selector_restore_maintenance_theme_value();
  }
}

/**
 * Saves the settings.
 */
function _maintenance_theme_selector_save_maintenance_theme_value($maintenance_theme) {
  // Set the maintenance theme backup variable.
  $default_theme_backup = variable_get('theme_default_backup', '');
  $maintenance_theme_backup = variable_get('maintenance_theme_backup', '');
  if (empty($default_theme_backup) || empty($maintenance_theme_backup)) {
    // Make a backup of the default theme.
    variable_set('theme_default_backup', variable_get('theme_default', 'bartik'));
    // Make a backup of the maitenance theme.
    variable_set('maintenance_theme_backup', variable_get('maintenance_theme', 'bartik'));
  }
  // Set the default theme variable.
  variable_set('theme_default', $maintenance_theme);
  // Set the maintenance theme variable.
  variable_set('maintenance_theme', $maintenance_theme);
  // Set the maintenance mode in the settings.php
  _maintenance_theme_selector_settings_alter($maintenance_theme);
}

/**
 * Restores the latest settings.
 */
function _maintenance_theme_selector_restore_maintenance_theme_value() {
  $default_theme_backup = variable_get('theme_default_backup', '');
  $maintenance_theme_backup = variable_get('maintenance_theme_backup', '');
  if (!empty($default_theme_backup) || !empty($maintenance_theme_backup)) {
    // Restore the default theme variable.
    variable_set('theme_default', $default_theme_backup);
    // Restore the default theme backup.
    variable_set('theme_default_backup', '');
    // Restore the maintenance theme variable.
    variable_set('maintenance_theme', $maintenance_theme_backup);
    // Restore the maintenance theme backup.
    variable_set('maintenance_theme_backup', '');
    // Set the maintenance mode in the settings.php
    _maintenance_theme_selector_settings_alter($maintenance_theme_backup);
  }
}

/**
 * Alter, add or edit the maintenance theme inside the settings.php.
 *
 * @param string $maintenance_theme
 *   The technical name of the maintenance theme.
 */
function _maintenance_theme_selector_settings_alter($maintenance_theme) {
  // Define the settings file.
  $settings_file = conf_path(FALSE) . '/settings.php';
  // If the file exist.
  if (is_file($settings_file)) {
    // Get the settings file content.
    $settings_file_content = file_get_contents($settings_file);
    // Prepare regex.
    $pattern = '#\$conf\[\'maintenance_theme\'\]\s*=\s*\'(.*)\';#is';
    $replace = '$conf[\'maintenance_theme\'] = \'' . $maintenance_theme . '\';';
    // Proceed to the value replacement.
    $settings_file_content = preg_replace($pattern, $replace, $settings_file_content);
    // Write the settings file.
    // Save the initial file perms.
    $file_initial_chmod = substr(sprintf('%o', fileperms($settings_file)), -4);
    // Get the server os.
    $os = strtolower(PHP_OS);
    $os = (preg_match('#^win#', $os)) ? 'win' : $os;
    // Set the file perms.
    if ($os == 'win') {
      chmod($settings_file, 0644);
    }
    // Write the file.
    file_put_contents($settings_file, $settings_file_content);
    // Restore the initial file perms.
    if ($os == 'win') {
      chmod($settings_file, $file_initial_chmod);
    }
  }
  else {
    // Error message.
    throw new Exception(t('Unable to find %settings. Verify the file location.', array('%settings' => $settings_file)));
  }
}
