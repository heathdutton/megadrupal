<?php

/**
 * @file
 * Polaroid display mode for the theme "Day and Night" (DAN).
 */

/**
 * @mainpage
 *
 * @section project_page Project page
 * - @link http://drupal.org/project/dan_polaroid Drupal project page "DAN Polaroid" (DAN) @endlink
 *
 * @section git_repository Git repository
 * - @link http://drupalcode.org/project/dan_polaroid.git Drupal git repository @endlink
 */

/**
 * Implements hook_entity_info_alter().
 */
function dan_polaroid_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['dan_polaroid'] = array(
    'label' => t('Day and Night Polaroid'),
    'custom settings' => FALSE,
  );
}

/**
 * Implements hook_preprocess_node().
 */
function dan_polaroid_preprocess_node(&$vars) {
  if($vars['view_mode'] == 'dan_polaroid') {
    drupal_add_css(drupal_get_path('module', 'dan_polaroid') . "/dan-polaroid.css");

    $vars['theme_hook_suggestions'][] = 'node__dan_polaroid';

    if ($image = _dan_polaroid_image_node_picture($vars)) {
      $vars['image'] = $image;
    }
    elseif ($image = _dan_polaroid_image_user_picture($vars)) {
      $vars['image'] = $image;
    }
    else {
      $vars['image'] = _dan_polaroid_image_color_picture();
    }

    $vars['text'] = _dan_polaroid_process_text($vars);
  }
}

/**
 *
 * @see dan_polaroid_preprocess_node()
 */
function _dan_polaroid_process_text($vars) {
  $node = $vars['node'];
  $wrapper = entity_metadata_wrapper('node', $node);

  $item = $wrapper->body->value();

  if (!empty($item['summary'])) {
    $text = $item['summary'];
  }
  else {
    $text = $item['value'];
  }

  if (!empty($text)) {
    $text = strip_tags($text);
    if (module_exists('caption_filter')) {
      $text = preg_replace('#\[caption.*\].*\[/caption\]#', '', $text);
    }
    $text = preg_replace('/\s\s+/', ' ', $text);
    $text = truncate_utf8($text, 100, TRUE, TRUE);
    return $text;
  }
}

/**
 * Returns a color image.
 *
 * @see dan_polaroid_preprocess_node()
 */
function _dan_polaroid_image_color_picture() {
  $images = _dan_polaroid_color_images();
  $images = array_keys($images);
  shuffle($images);
  $image = current($images);

  return array(
    '#theme' => 'image',
    '#path' => drupal_get_path('module', 'dan_polaroid') . '/images/' . $image . '.png',
    '#width' => 360,
    '#height' => 270,
  );
}

/**
 * Returns a array with color informations.
 *
 * @see dan_polaroid_preprocess_node()
 */
function _dan_polaroid_color_images() {
  return array(
    'lighter-blue'  => 'black',
    'blue'          => 'blue',
    'darker-blue'   => 'darker blue',
    'dark-blue'     => 'dark blue',
    'lighter-grey'  => 'lighter grey',
    'grey'          => 'grey',
    'darker-grey'   => 'darker grey',
    'lighter-black' => 'lighter black',
    'black'         => 'black',
    'darker-black'  => 'darker black',
    'red'           => 'red',
    'green'         => 'green',
    'yellow'        => 'yellow',
    'purple'        => 'purple',
    'orange'        => 'orange',
  );
}

/**
 * Returns the render array of a user picture.
 *
 * @see dan_polaroid_preprocess_node()
 */
function _dan_polaroid_image_user_picture($vars) {
  $account = user_load($vars['uid']);
  if (!empty($account->picture->uri)) {
    return array(
      '#theme' => 'image_style',
      '#style_name' => 'dan_polaroid',
      '#path' => $account->picture->uri,
    );
  }
  else {
    return FALSE;
  }
}

/**
 * Selects one image from the field images attached to a node.
 *
 * @see dan_polaroid_preprocess_node()
 *
 * @return
 *   Render array of one image.
 */
function _dan_polaroid_image_node_picture($vars) {

  $image_fields = &drupal_static(__FUNCTION__);

  if (!isset($image_fields)) {
    $fields = field_info_fields();

    $image_fields = array();
    foreach ($fields as $field_name => $field) {
      if ($field['type'] == 'image' && $field['module'] == 'image') {
        $image_fields[] = $field_name;
      }
    }
  }

  $node = $vars['node'];
  $wrapper = entity_metadata_wrapper('node', $node);

  foreach ($image_fields as $field_name) {
    if (isset($node->{$field_name})) {

      $items = $wrapper->{$field_name}->value();

      if(!empty($items['uri'])) {
        $uri = $items['uri'];
      }

      if(!empty($items[0]['uri'])) {
        $uri = $items[0]['uri'];
      }

      if (!empty($uri)) {
        return array(
          '#theme' => 'image_style',
          '#style_name' => 'dan_polaroid',
          '#path' => $uri,
        );
      }
    }
  }
}

/**
 * Implements hook_image_default_styles().
 */
function dan_polaroid_image_default_styles() {
  $styles = array();

  $styles['dan_polaroid'] = array(
    'label' => 'Day and Night Polaroid',
    'effects' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 360,
          'height' => 270,
          'upscale' => 1,
        ),
        'weight' => 0,
      ),
    ),
  );

  return $styles;
}
