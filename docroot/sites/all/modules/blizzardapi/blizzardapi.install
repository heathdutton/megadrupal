<?php

/**
 * @file
 * Install, update and uninstall functions for the Blizzard API module.
 */

/**
 * Implements hook_requirements().
 */
function blizzardapi_requirements($phase) {
  $t = get_t();
  $requirements = array();
  
  if (!extension_loaded('openssl')) {
    $requirements['blizzardapi_ssl']['title'] = $t('SSL library');
    $requirements['blizzardapi_ssl']['description'] = $t('The OpenSSL library for PHP is required.');
    $requirements['blizzardapi_ssl']['severity'] = REQUIREMENT_ERROR;
    if ($phase != 'install') {
      $requirements['blizzardapi_ssl']['value'] = $t('Not installed');
    }
  }
  
  return $requirements;
}

/**
 * Implements hook_schema().
 */
function blizzardapi_schema() {
  $schema['cache_blizzardapi'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_blizzardapi']['description'] = 'Cache table for Blizzard API requests.';
  
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function blizzardapi_uninstall() {
  variable_del('blizzardapi_public_key');
  variable_del('blizzardapi_private_key');
  
  // Remove generated files.
  $path = file_default_scheme() . '://blizzardapi';
  // Drupal will assume that our path is a file if the directory does not exist
  // and then log a notice when it cannot find and delete said file. Nevermind
  // the part where this function shouldn't even be used to delete a single file.
  if (is_dir($path)) {
    file_unmanaged_delete_recursive($path);
  }
}

/**
 * Remove old counters when upgrading. The identifiers are handled in a
 * slightly different manner in this version.
 */
function blizzardapi_update_7000() {
  if (db_table_exists('blizzardapi_counter')) {
    db_delete('blizzardapi_counter')->execute();
  }
}

/**
 * Add the flags field to the {blizzardapi_counter} table.
 */
function blizzardapi_update_7001() {
  if (db_table_exists('blizzardapi_counter')) {
    db_add_field('blizzardapi_counter', 'flags', array(
      'description' => 'A flag to indicate if this API resource has special usage restrictions.',
      'type' => 'int',
      'size' => 'tiny',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0
    ));
  }
}

/**
 * Remove tracking of API statistics.
 */
function blizzardapi_update_7200() {
  variable_del('blizzardapi_day_timestamp');
  variable_del('blizzardapi_enable_counters');
  
  // Remove Blizzard's first version of API keys, they are now invalid.
  $id = variable_get('blizzardapi_public_key', '');
  $secret = variable_get('blizzardapi_private_key', '');
  if (strlen($id) != 32 || strlen($secret) != 32) {
    variable_del('blizzardapi_public_key');
    variable_del('blizzardapi_private_key');
  }
  
  if (db_table_exists('blizzardapi_counter')) {
    db_drop_table('blizzardapi_counter');
  }
}
