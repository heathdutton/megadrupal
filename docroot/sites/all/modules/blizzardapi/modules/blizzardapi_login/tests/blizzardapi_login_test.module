<?php

/**
 * @file
 * A mock OAuth 2.0 server for use with tests.
 */

/**
 * Implements hook_menu().
 */
function blizzardapi_login_test_menu() {
  $items[BlizzardApiLoginTestClient::AUTHORIZE_PATH] = array(
    'title' => 'OAuth Authorization',
    'page callback' => 'blizzardapi_login_test_authorize',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  $items[BlizzardApiLoginTestClient::TOKEN_PATH] = array(
    'title' => 'OAuth Token',
    'page callback' => 'blizzardapi_login_test_token',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  $items['account/user'] = array(
    'title' => 'OAuth account information',
    'page callback' => 'blizzardapi_login_test_account',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  return $items;
}

/**
 * Menu callback; generate an OAuth 2.0 login page.
 */
function blizzardapi_login_test_authorize() {
  // Normally, this would generate a login form, but to simplify testing it
  // just redirects back to the OAuth login page with some query arguments
  // so that a second POST request is not required.
  
  $query = array('code' => 1234567890);
  
  parse_str($_SERVER['QUERY_STRING'], $params);
  if (isset($params['state'])) {
    $query['state'] = $params['state'];
  }
  
  drupal_goto(BLIZZARDAPI_LOGIN_PATH, array('query' => $query));
}

/**
 * Menu callback; generate a sample OAuth 2.0 token.
 */
function blizzardapi_login_test_token() {
  drupal_add_http_header('Content-Type', 'application/json;charset=UTF-8');
  // NOTE: This token should no longer contain an 'accountId' field.
  // http://us.battle.net/en/forum/topic/18300183303
  $token = array(
    'access_token' => 'example',
    'created' => REQUEST_TIME,
    'expires_in' => 86400,  // 24 hours.
    'scope' => 'test1.profile test2.profile',
    'token_type' => 'bearer'
  );
  if (isset($_POST['code']) && $_POST['code'] == 200) {
    $token['access_token'] = 'ok';
  }
  if (isset($_POST['code']) && $_POST['code'] == 403) {
    drupal_add_http_header('Status', '403 Forbidden');
    $token = array('error' => 403);
  }
  print json_encode($token);
}

/**
 * Menu callback; generate a sample account profile response.
 */
function blizzardapi_login_test_account($type = NULL) {
  drupal_add_http_header('Content-Type', 'application/json;charset=UTF-8');
  $json = array(
    'id' => 12345,
    'battletag' => 'Example#1234'
  );
  // Test the client's response to non-200 status codes.
  if ($type == '403') {
    drupal_add_http_header('Status', '403 Forbidden');
    $json = array(
      'error' => array('code' => 403, 'detail' => 'Developer inactive.')
    );
  }
  // Test that the client sends the expected authorization header.
  if ($type == 'bearer') {
    if ($_SERVER['HTTP_AUTHORIZATION'] == 'Bearer token') {
      $json['id'] = 67890;
    }
  }
  print json_encode($json);
}

/**
 * Implements hook_blizzardapi_login_scopes().
 */
function blizzardapi_login_test_blizzardapi_login_scopes() {
  return array('wow.profile', 'wow.profile', 'sc2.profile');
}
