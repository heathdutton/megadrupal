<?php

/**
 * @file
 * Hooks and functions for the SkaFlash module.
 */


/**
 * The default endpoint path.
 */
define('SKAFLASH_ENDPOINT_PATH', 'endpoints/skaflash');


/**
 * Implements hook_menu().
 */
function skaflash_menu() {
  // Admin configuration page.
  $items['admin/config/services/skaflash'] = array(
    'title' => 'SkaFlash',
    'description' => 'Manage integration with the SkaFlash service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('skaflash_admin_form'),
    'file' => 'includes/skaflash.admin.inc',
    'access arguments' => array('configure skaflash integration'),
  );

  // Callback URL for SkaFlash push notifications API handling.
  $endpoint_path = variable_get('skaflash_endpoint_path', SKAFLASH_ENDPOINT_PATH);
  $items[$endpoint_path] = array(
    'title' => 'SkaFlash push notification endpoint',
    'description' => 'Common URL to handle SkaFlash push notifications.',
    'page callback' => 'skaflash_push_handler',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/skaflash.pushed.inc',
  );

  return $items;
}


/**
 * Implements hook_permission().
 */
function skaflash_permission() {
  // Administer gumroad types.
  $permissions['configure skaflash integration'] = array(
    'title' => t('Configure SkaFlash integration'),
    'description' => t('Allows users to make configuration changes to the SkaFlash module.'),
  );

  return $permissions;
}

/**
 * Implements hook_tokens().
 */
function skaflash_tokens($type, $tokens, array $data = array(), array $options = array()) {
  if ($type == 'skaflash_push') {
    if (isset($data['skaflash_push'])) {
      $replacements = array();
      $mydata = $data['skaflash_push'];

      foreach ($tokens as $name => $original) {
        switch ($name) {
          case 'email':
            $replacements[$original] = $mydata['email'];
            break;

          case 'phone':
            $replacements[$original] = $mydata['phone'];
            break;

          case 'timestamp':
            $replacements[$original] = $mydata['timestamp'];
            break;
        }
      }

      return $replacements;
    }
  }
}
