<?php
/**
 * @file clients_ms_dynamics_soap.module
 *
 * Provides a Clients connection type for the Microsoft Dynamics CRM.
 */

/**
 * Implements hook_clients_connection_type_info().
 * todo: move to a .inc with hook_hook_info?
 */
function clients_ms_dynamics_soap_clients_connection_type_info() {
  return array(
    'ms_dynamics_soap' => array(
      'label'  => t('MS Dynamics SOAP Client'),
      'description' => t('Provides a connection to the Microsoft Dynamics CRM via SOAP.'),
      //'class' => 
      'interfaces' => array(
        'ClientsRemoteEntityInterface',
      ),
    ),
  );
}

/**
 * Property getter callback for mapped remote dateTime properties.
 *
 * Dynamics dateTime property is a string of the form '1993-01-01T00:00:00Z'.
 *
 * Drupal property should be a unix timestamp.
 *
 * Warning: due to Dynamics setting the timezone on all date properties, those
 * which are meant to represent dates will end up moved off from midnight
 * relative to the site timezone's offset.
 *
 * @todo: add a system to counter this.
 */
function clients_ms_dynamics_soap_entity_mapped_property_datetime_get($data, array $options, $name, $type, $info) {
  $dynamics_date = $data->entity_data->{$info['remote_property']};

  // This is in UTC, as the Dynamics date format includes the Z timezone.
  $date = new DateTime($dynamics_date);

  return $date->getTimestamp();
}

/**
 * Property setter callback for mapped remote dateTime properties.
 *
 * @see clients_ms_dynamics_soap_entity_mapped_property_datetime_get()
 */
function clients_ms_dynamics_soap_entity_mapped_property_datetime_set(&$data, $name, $value, $langcode, $type, $info) {
  // Don't set a value for an empty or zero timestamp.
  if (empty($value)) {
    return;
  }

  // Convert the Drupal timestamp to an Dynamics datetime format string.
  // This sets the timezone on the date to UTC, but that's actually what we want
  // as Dynamics works in UTC.
  $sampling_date = new DateTime('@' . $value);
  $dynamics_date = $sampling_date->format("Y-m-d\TH:i:s\Z");

  // Now we've converted the value, use the regular setter.
  remote_entity_entity_mapped_property_set($data, $name, $dynamics_date, $langcode, $type, $info);
}
