<?php
/**
 * @file domain_block_title.module
 * Primary functions and hooks for allowing an admin to override a block title
 * for a given domain.
 */


/**
 * Implements hook_block_view_alter().
 */
function domain_block_title_block_view_alter(&$data, $block) {
  $domain_block_title = domain_block_title_get_title_data($block->module, $block->delta);

  if (!empty($domain_block_title)) {
    $title = ($domain_block_title['title'] == '<none>') ? NULL : $domain_block_title['title'];
    $data['subject'] = $title; // This allows <none> to remove exisiting titles
    $block->title = $title;
  }
}

/**
 * Helper function to return any block titles to override for the current block.
 * TODO: Use cache for this rather than querying for every block.
 */
function domain_block_title_get_title_data($module, $delta) {
  $domain = domain_get_domain();

  $domain_block_title = db_select('domain_block_title', 't')
    ->fields('t')
    ->condition('machine_name', $domain['machine_name'])
    ->condition('module', $module)
    ->condition('delta', $delta)
    ->execute()
    ->fetchAssoc();

  return $domain_block_title;
}

/**
 * Implements hook_form_FORM_ID_alter().
 * This is used in favor of hook_block_configure() because of where the form
 * element is placed by default. We want it to appear next to the standard block
 * title field element.
 */
function domain_block_title_form_block_admin_configure_alter(&$form, &$form_state) {
  $domain = domain_get_domain();
  $module = $form['module']['#value'];
  $delta = $form['delta']['#value'];

  $domain_block_title = domain_block_title_get_title_data($module, $delta);

  $form['settings']['domain_block_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Block title override for !domain_name', array('!domain_name' => $domain['sitename'])),
    '#description' => t('Providing a title for this block here will override the standard block title field for this domain. Use <em>&lt;none></em> for no title.'),
    '#weight' => ($form['settings']['title']['#weight'] + 1),
    '#default_value' => (!empty($domain_block_title['title'])) ? $domain_block_title['title'] : '',
  );

  $form['#submit'][] = 'domain_block_title_form_block_admin_configure_submit';
}


/**
 * Save the overridden block title for the current domain.
 */
function domain_block_title_form_block_admin_configure_submit($form, &$form_state) {
  $domain_block_title = $form_state['values']['domain_block_title'];
  $module = $form_state['values']['module'];
  $delta = $form_state['values']['delta'];
  $domain = domain_get_domain();

  // Remove the old records, if any
  db_delete('domain_block_title')
    ->condition('machine_name', $domain['machine_name'])
    ->condition('module', $module)
    ->condition('delta', $delta)
    ->execute();

  // If an overridding title is present, insert it
  if (!empty($domain_block_title)) {
    $data = array(
      'machine_name' => $domain['machine_name'],
      'module' => $module,
      'delta' => $delta,
      'title' => $domain_block_title,
    );
    drupal_write_record('domain_block_title', $data);
  }
}
