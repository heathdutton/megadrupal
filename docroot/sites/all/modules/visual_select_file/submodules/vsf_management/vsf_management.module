<?php

/**
 * Implements hook_module_implements_alter().
 */
function vsf_management_module_implements_alter(&$implementations, $hook) {
  // Move our 'entity_info_alter' immediately after Entity API's.
  if ($hook == 'entity_info_alter') {
    $override = array();
    foreach ($implementations as $module => $group) {
      if ($module != 'vsf_management') {
        $override[$module] = $group;
      }
      if ($module == 'entity') {
        $override['vsf_management'] = FALSE;
      }
    }
    $implementations = $override;
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function vsf_management_entity_info_alter(&$info) {
  if (@$info['file']['access callback'] === 'entity_metadata_file_access') {
    $info['file']['access callback'] = 'vsf_management_file_access';
  }
}

/**
 * Entity access callback for 'file'.
 */
function vsf_management_file_access($op, $file = NULL, $account = NULL, $entity_type) {
  switch ($op) {
    // Let Entity API handle complex view access.
    case 'view':
      return entity_metadata_file_access($op, $file, $account, $entity_type);

    // Deleting and updating require a simple permission, depending on publicness.
    case 'delete':
    case 'update':
      $permission = 'administer all files';
      if (file_uri_scheme($file->uri) == 'public') {
        $permission = 'administer public files';
      }
      return user_access($permission, $account);

    // Everybody can create, even anonymous.
    case 'create':
      return TRUE;
  }

  return FALSE;
}

/**
 * Implements hook_permission().
 */
function vsf_management_permission() {
  $permissions['administer public files'] = array(
    'title' => t('Administer all public files'),
  );
  $permissions['administer all files'] = array(
    'title' => t('Administer ALL files'),
    'restrict access' => TRUE,
  );
  return $permissions;
}

/**
 * Implements hook_admin_paths().
 */
function vsf_management_admin_paths() {
  return array(
    'node/*/files' => TRUE,
  );
}

/**
 * Implements hook_image_default_styles().
 */
function vsf_management_image_default_styles() {
  $styles['vsf_management_thumbnail'] = array(
    'label' => 'VSF Management Thumbnail',
    'effects' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 50,
          'height' => 50,
        ),
        'weight' => 0,
      ),
    ),
  );

  return $styles;
}

/**
 * Implements hook_views_api().
 */
function vsf_management_views_api() {
  return array('api' => 3);
}
