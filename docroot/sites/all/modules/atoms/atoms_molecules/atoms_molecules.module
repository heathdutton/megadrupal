<?php

/**
 * Processes variables for theme_field().
 */
function atoms_molecules_process_field(&$vars) {
  $element = &$vars['element'];
  if ($element['#field_name'] == 'field_content') {
    $vars['items'] = _atoms_molecular_items($element, $vars['items']);
  }
}

/**
 * Preprocesses variables for entity.tpl.php.
 */
function atoms_molecules_preprocess_entity(&$vars) {
  $element = &$vars['elements'];
  if ($element['#entity_type'] == 'atom') {
    if ($element['#bundle'] == 'unit') {
      $vars['theme_hook_suggestions'][] = 'atom__unit__' . $element['#entity']->machine_name;
      if ($element['#view_mode'] == 'teaser') {
        $vars['title'] = htmlspecialchars('<' . $element['#entity']->machine_name . '>');
      }
    }
  }
}

/**
 * Processes variables for entity.tpl.php.
 */
function atoms_molecules_process_entity(&$vars) {
  $element = &$vars['elements'];
  if ($element['#entity_type'] == 'atom') {
    if (isset($vars['content']['atoms'])) {
      foreach ($vars['content']['atoms'] as &$atom) {
        $atom['#base_heading_level'] = $element['#heading_level'];
      }
    }
  }
}

/**
 * Implements hook_entity_property_info_alter().
 */
function atoms_molecules_entity_property_info_alter(&$info) {
  $info['atom']['properties']['machine_name']['widget'] = '_atoms_molecules_machine_name_widget';
}

/**
 * Helper function: provides a widget for a machine name property.
 */
function _atoms_molecules_machine_name_widget($entity) {
  if ($entity->type != 'unit') return;
  return array(
    '#type' => 'textfield',
    '#title' => 'Machine name',
    '#default_value' => $entity->machine_name,
  );
}
