<?php

/**
 * Implements hook_theme_registry_alter() as described here: https://www.drupal.org/node/715160.
 */
function atoms_theme_registry_alter(&$theme_registry) {
  $theme_registry_copy = $theme_registry;
  $module_path = drupal_get_path('module', 'atoms');
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'atoms', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  // A list of templates the module will provide templates for
  $hooks = array('entity');
  foreach ($hooks as $hook) {
    // Add the key 'theme paths' if it doesn't exist in this theme's registry
    if (!isset($theme_registry[$hook]['theme paths'])) {
      $theme_registry[$hook]['theme paths'] = array();
    }
    // Shift this module's directory to the top of the theme path list
    if (is_array($theme_registry[$hook]['theme paths'])) {
      $first_element = array_shift($theme_registry[$hook]['theme paths']);
      if ($first_element) {
        array_unshift($theme_registry[$hook]['theme paths'], $first_element, $module_path);
      }
      else {
        array_unshift($theme_registry[$hook]['theme paths'], $module_path);
      }
    }
  }
}


/**
 * Preprocesses variables for entity.tpl.php.
 */
function atoms_preprocess_entity(&$vars) {
  $element = &$vars['elements'];
  if ($element['#entity_type'] == 'atom') {
    $vars['title'] = '';
    if (!empty($vars['content']['field_title']['#items'][0]['value'])) {
      $vars['title'] = $vars['content']['field_title']['#items'][0]['value'];
      unset($vars['content']['field_title']);
    }
    $base_heading_level = isset($element['#base_heading_level']) ? $element['#base_heading_level'] : 1;
    $element['#heading_level'] = $base_heading_level + !empty($vars['title']);
  }
}

/**
 * Processes variables for entity.tpl.php.
 */
function atoms_process_entity(&$vars) {
  $element = &$vars['elements'];
  if ($element['#entity_type'] == 'atom') {
    $vars['prefix'] = '<div class="' . $vars['classes'] . '"' . $vars['attributes'] . '>' . drupal_render($vars['title_prefix']) . drupal_render($vars['title_suffix']);
    $vars['suffix'] = '</div>';
    $vars['heading'] = !empty($vars['title']) ? '<h' . $element['#heading_level'] . '>' . $vars['title'] . '</h' . $element['#heading_level'] . '>' : '';
  }
}

/**
 * Helper function: converts element's items to molecualar structure.
 */
function _atoms_molecular_items($element, $items) {

  // Filter items:
  $items = array_filter($items, 'element_child', ARRAY_FILTER_USE_KEY);

  // Simplify items:
  foreach ($items as $delta => $item) {
    $item = reset($item);
    $item = reset($item);
    $item['atoms'] = array();
    $items[$delta] = $item;
  }

  // Process items in reverse order (without recursion):
  $ritems = array_reverse($items, TRUE);
  foreach ($ritems as $delta => $item) {
    if (isset($element['#items'][$delta]['treeable_parent'])) {
      $parent = $element['#items'][$delta]['treeable_parent'];
      array_unshift($items[$parent]['atoms'], $items[$delta]);
      unset($items[$delta]);
    }
  }

  return $items;
}
