<?php
/**
 * @file
 * This file installs default table for logging metrics
 */

/**
 * Implements hook_schema().
 */
function librato_schema() {
  $schema = array();
  $schema['librato_metric_count'] = array(
    'description' => 'Librato metric count base table for cron sync',
    'fields' => array(
      'log_id' => array(
        'description' => 'The primary identifier for the log.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'count' => array(
        'description' => 'Metric count',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
      'name' => array(
        'description' => 'Metric name',
        'type' => 'varchar',
        'length' => 250,
        'not null' => TRUE,
        'default' => '',
      ),
      'last_update' => array(
        'description' => 'Last update timestamp.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Created timestamp.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('log_id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function librato_uninstall() {
  variable_delete('librato_config_email');
  variable_delete('librato_config_token');
}

/**
 * Implements hook_requirements().
 */
function librato_requirements($phase) {
  $t = get_t();
  $requirements = array();

  if (!function_exists('curl_init')) {
    $requirements['curl'] = array(
      'value' => $t('Not available to php'),
      'severity' => REQUIREMENT_ERROR,
      'description' => $t(
        'The curl extension is required for this module to work'
      ),
    );
  }
  else {
    $requirements['curl'] = array(
      'value' => $t('Correctly detected'),
      'severity' => REQUIREMENT_OK,
    );
  }

  $requirements['curl']['title'] = $t('Curl');

  return $requirements;
}
