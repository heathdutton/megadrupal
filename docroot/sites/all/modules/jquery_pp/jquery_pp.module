<?php

/**
 * @file
 * Provides the jQuery ++ plug-in suite to other Drupal modules.
 *
 * Much credit to jQuery UI for the basic structure of this module.
 */

/**
 * Path to jQuery ++ library.
 *
 * During site installation, jquery_pp_PATH is the absolute path to the
 * jQuery UI library.  At all other times jquery_pp_PATH is relative, and
 * safe for use in URLs.
 */
if (defined('MAINTENANCE_MODE') && MAINTENANCE_MODE == 'install') {
  define('jquery_pp_PATH', dirname(__FILE__) . '/jquerypp');
}
else {
  define('jquery_pp_PATH', drupal_get_path('module', 'jquery_pp') . '/jquerypp');
}

/**
 * Add the specified jQuery ++ library files to this page.
 */

/**
 * Implements hook_library().
 */
function jquery_pp_library() {
  $title = 'jQuery++ Plugin ';
  $website = 'http://jquerypp.com';
  $version = '1.0b';
  $path = drupal_get_path('module', 'jquery_pp');

  // Listed dependacies as of 1.0b jQuery ++
  $dependancies = array(
    'animate' => array('styles'),
    'cookie' => array('lang.json'),
    'dimensions' => array('styles'),
    'event.drag' => array('lang.vector', 'event.livehack'),
    'event.drop' => array('event.drag', 'within', 'compare', 'lang.vector', 'event.livehack'),
    'event.hover' => array('event.livehack'),
    'event.pause' => array('event.default'),
    'event.swipe' => array('event.livehack'),
    'range' => array('compare'),
    'selection' => array('range', 'compare'),
  );

  $plugins = array(
   'animate',
   'compare',
   'cookie',
   'dimension',
   'event.default',
   'event.destroyed',
   'event.drag',
   'event.drop',
   'event.fastfix',
   'event.hover',
   'event.key',
   'event.livehack',
   'event.pause',
   'event.resize',
   'event.swipe',
   'form_params',
   'lang.json',
   'lang.vector',
   'range',
   'selection',
   'styles',
   'within',
  );

  $libraries = array();
  foreach ($plugins as $plugin) {
    // Add plugin.
    $libraries[$plugin] = array(
      'title' => $title . drupal_ucfirst($plugin),
      'website' => $website,
      'version' => $version,
      'js' => array(
        $path . '/jquerypp/jquery.' . $plugin . '.js' => array(),
      ),
    );
    // Add dependancies as needed.
    if (isset($dependancies[$plugin])) {
      foreach ($dependancies[$plugin] as $dep) {
        $libraries[$plugin]['dependencies'][] = array('jquery_pp', $dep);
      }
    }
  }

  return $libraries;
}
