<?php

/**
 * @file
 * User need to pay first than only they would be able to login to the system.
 *
 * This module enables registering users with stripe payment gateway.
 */

/**
 * Implements hook_help().
 */
function register_user_with_stripe_payment_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/help#register_user_with_stripe_payment':
      $output .= '<p>' . t("By using this module, the user, trying to register to the application has to
      pay first to the administrator by using stripe payment gateway. After successful payment they will be
      considered as valid user to the application.") . '</p>';
  }
  return $output;
}

/**
 * Implements hook_permission().
 */
function register_user_with_stripe_payment_permission() {
  return array(
    'administer register payment api' => array(
      'title' => t('Administer Payment API'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function register_user_with_stripe_payment_menu() {
  $items['admin/register_user_with_stripe_payment'] = array(
    'title' => 'Register user with stripe payment',
    'description' => 'Register user with stripe payment',
    'page callback' => 'register_user_with_stripe_payment_paid_users_with_stripe',
    'access arguments' => array('administer register payment api'),
    'file' => 'register_user_with_stripe_payment.admin.inc',
  );
  $items['register_user_with_stripe_payment_start/user/%'] = array(
    'page callback' => 'register_user_with_stripe_payment_start',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'register_user_with_stripe_payment.admin.inc',
  );
  $items['register_user_with_stripe_payment_stripe_complete/%'] = array(
    'page callback' => 'register_user_with_stripe_payment_stripe_complete',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'register_user_with_stripe_payment.admin.inc',
  );
  $items['admin/register_user_with_stripe_payment_config'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('register_user_with_stripe_payment_config_form'),
    'access arguments' => array('administer register payment api'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'register_user_with_stripe_payment.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function register_user_with_stripe_payment_theme($existing, $type, $theme, $path) {
  return array(
    'stripe_start_user' => array(
      'variables' => array(
        'cuser' => NULL,
        'stripe' => NULL,
        'amount' => NULL,
      ),
      'template' => 'stripe_start_user',
      'path' => drupal_get_path('module', 'register_user_with_stripe_payment') . '/templates',
    ),
  );
}

/**
 * Form constructor for the stripe payment charge form.
 *
 * @ingroup forms
 */
function register_user_with_stripe_payment_charge_form($form, &$form_state, $user, $stripe, $amount) {
  $form['#action'] = url('/register_user_with_stripe_payment_stripe_complete/' . $user->uid);
  $form['pay_button'] = array(
    '#type' => 'markup',
    '#markup' => '<div><script src="https://checkout.stripe.com/checkout.js" class="stripe-button"
    data-key="' . $stripe['publishable_key'] . '" data-amount="' . $amount . '" data-description="User Registration" data-email="' . $user->mail . '"></script></div>',
  );
  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function register_user_with_stripe_payment_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'register_user_with_stripe_payment_submit';
}

/**
 * Submit handler for user register form.
 */
function register_user_with_stripe_payment_submit($form, &$form_state) {
  $user_id = $form_state['values']['uid'];
  $user = user_load($user_id);
  $user->status = 0;
  user_save($user);
  $form_state['redirect'] = 'register_user_with_stripe_payment_start/user/' . $user_id;
  if ($_SESSION['messages']['status'][0] == t('Registration successful. You are now logged in.')) {
    unset($_SESSION['messages']['status']);
  }
}
