<?php

/**
 * Implements hook_field_formatter_info().
 */
function sprintf_formatter_field_formatter_info() {
  $info['sprintf'] = array(
    'label' => t('sprintf()'),
    'field types' => array(
      'text', 'text_long', 'text_with_summary',
      'number_integer', 'number_decimal', 'number_float',
    ),
    'settings' => array(
      'format' => '%s',
    ),
  );

  return $info;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function sprintf_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = '';

  if ($display['type'] == 'sprintf') {
    $summary = t('Format: @format', array('@format' => $settings['format']));
  }

  return $summary;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function sprintf_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();

  if ($display['type'] == 'sprintf') {
    $element['format'] = array(
      '#type' => 'textfield',
      '#title' => t('Format'),
      '#description' => t('See the <a href="@link">PHP sprintf() documentation page</a> for format specification.', array('@link' => 'http://php.net/manual/en/function.sprintf.php')),
      '#default_value' => $settings['format'],
      '#required' => TRUE,
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_view().
 */
function sprintf_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];

  $element = array();

  if ($display['type'] == 'sprintf') {
    foreach ($items as $delta => $item) {
      $value = NULL;
      switch ($field['type']) {
        case 'text':
        case 'text_long':
        case 'text_with_summary':
          $value = sprintf($settings['format'], _text_sanitize($instance, $langcode, $item, 'value'));
          $element[$delta] = array('#markup' => $value);
          break;

        default:
          $value = sprintf($settings['format'], $item['value']);
          $element[$delta] = array('#markup' => $value);
          break;
      }
    }
  }

  return $element;
}
