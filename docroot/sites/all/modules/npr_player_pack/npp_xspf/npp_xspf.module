<?php
/**
 * @file
 * Adds a formatter for the npr_audio field.
 */

/**
 * Implements hook_field_formatter_info().
 */
function npp_xspf_field_formatter_info() {
  return array(
    'npp_xspf_formatter' => array(
      'label' => t('NPP XSPF Player'),
      'field types' => array('npr_audio'),
      'settings' => array(
        'xspf_player_height' => '17',
        'xspf_player_width' => '400',
        'xspf_player_location' => '/sites/all/libraries/player/xspf/xspf_player.swf',
        'xspf_player_song_title' => 'Story Audio',
        'xspf_player_title' => 'Click to play',
        'xspf_player_download_link' => TRUE,
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function npp_xspf_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();
  $element['xspf_player_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Height'),
    '#description' => t('Set the height of the player (pixels).
                         Defaults to 17 which hides the playlist window of the normal player.'),
    '#default_value' => $settings['xspf_player_height'],
  );
  $element['xspf_player_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Width'),
    '#description' => t('Set the width of the player (pixels).'),
    '#default_value' => $settings['xspf_player_width'],
  );
  $element['xspf_player_location'] = array(
    '#type' => 'textfield',
    '#title' => t('Player SWF File Location'),
    '#description' => t('Absolute local location of the XSPF SWF file.
                         Will work with xspf_player.swf or xspf_player_slim.swf.'),
    '#default_value' => $settings['xspf_player_location'],
  );
  $element['xspf_player_song_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Default Song Title'),
    '#description' => t('Text to display when playing audio.'),
    '#default_value' => $settings['xspf_player_song_title'],
  );
  $element['xspf_player_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Title'),
    '#description' => t('Text to display before a user clicks "play."'),
    '#default_value' => $settings['xspf_player_title'],
  );
  $element['xspf_player_download_link'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display Download Link'),
    '#description' => t('Enable/disable a download to the audio.'),
    '#default_value' => $settings['xspf_player_download_link'],
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function npp_xspf_field_formatter_settings_summary($field, $instance, $view_mode) {
  return t('Configure some player settings like SWF location and width.');
}

/**
 * Implements hook_theme().
 */
function npp_xspf_theme($exisiting, $type, $theme, $path) {
  $functions = array();
  $functions['xspf'] = array(
    'variables' => array(
      'song_title' => NULL,
      'height' => NULL,
      'width' => NULL,
      'mp3' => NULL,
      'title' => NULL,
      'downloadlink' => NULL,
    ),
  );

  return $functions;
}

/**
 * Registered theme function that outputs player HTML.
 */
function theme_xspf($args) {
  $height = $args['height'];
  $title = urlencode($args['title']);
  $songtitle = urlencode($args['song_title']);
  $width = $args['width'];
  $location = $args['location'];
  $mp3 = $args['mp3'];

  $player_string = "$location?player_title=$title&song_title=$songtitle&song_url=$mp3";

  $html = <<<HTML
    <object type="application/x-shockwave-flash" width="$width" height="$height" data="$player_string">
      <param name="movie" value="$player_string"/>
    </object>
HTML;

  if ($args['downloadlink']) {
    $html .= '<div class="npp_download_link"><a href="' . $mp3 . '">Download this audio</a></div>';
  }

  return $html;
}

/**
 * Implements hook_field_formatter_view().
 */
function npp_xspf_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  // Require the mp3 scraper library.
  $path = dirname(__FILE__);
  require_once "$path/../npp_library.php";

  $mp3 = '';
  foreach ($items as $delta => $item) {
    if ($item['mp3']) {
      $mp3 = _npp_get_mp3($item['mp3']);
    }
  }

  if (!$mp3) {
    return $element;
  }

  $height = check_plain($display['settings']['xspf_player_height']);
  $width = check_plain($display['settings']['xspf_player_width']);
  $location = check_plain($display['settings']['xspf_player_location']);
  $songtitle = check_plain($display['settings']['xspf_player_song_title']);
  $title = check_plain($display['settings']['xspf_player_title']);
  $downloadlink = ($display['settings']['xspf_player_download_link']) ? TRUE : FALSE;

  $element[0]['#markup'] = theme('xspf', array(
    'mp3' => $mp3,
    'height' => $height,
    'width' => $width,
    'location' => $location,
    'title' => $title,
    'song_title' => $songtitle,
    'downloadlink' => $downloadlink,
    )
  );

  return $element;
}
