<?php

/**
 * @file
 * Provides hook overrides related to the display of translated files
 */


/**
 * Implements hook_file_formatter_info_alter().
 *
 * Modifies the default file formatters from the media module
 * to pass requests through this module so that the file
 * can be swapped out if a translation is available.
 */
function media_translation_view_file_formatter_info_alter(&$info) {
  // Don't change the formatters if we're on an admin page.
  if (_media_translation_is_admin_path()) return;
  // Replace the view formatter on all display types with a wrapper function.
  foreach ($info as $key => $value) {
    // Make sure some other process isn't already setting the translation callback
    // This seems to be happening for YouTube videos.
    if ($info['file_image']['view callback'] == 'media_translation_view_file_formatter_view') continue;
    $info[$key]['default settings']['media_translation_view_view_callback'] = $info['file_image']['view callback'];
    $info[$key]['view callback'] = 'media_translation_view_file_formatter_view';
  }
}

/**
 * Wrapper around hook_file_formatter_FORMATTER_view() implementations.
 *
 * Conditionally replaces the requested file with it's translated version
 * if available and then calls the original formatter function.
 */
function media_translation_view_file_formatter_view($file, $display, $langcode) {
  $callback = $display['settings']['media_translation_view_view_callback'];
  $file = media_translation_get_translated_file($file);
  $element = $callback($file, $display, $langcode);
  return $element;
}