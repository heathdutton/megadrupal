<?php
/**
 * @file
 * Adds a checkbox remove option on each item of all multivalue fields.
 */

/**
 * Implements hook_field_widget_form_alter().
 *
 * Adds a remove option checkbox into each field item of all multivalue fields.
 */
function field_remove_item_field_widget_form_alter(&$element, &$form_state, $context) {
  // Modules such as field_collection add their own "Remove" button.
  if ($context['field']['cardinality'] == FIELD_CARDINALITY_UNLIMITED &&
      !isset($element['remove_button'])) {

    // Add ajax trigger.
    $element['field_remove_item'] = array(
      '#type' => 'checkbox',
      '#field_suffix' => t('Remove'),
      '#weight' => 10,
      '#ajax' => array(
        'callback' => 'field_remove_item_ajax_callback',
      ),
    );
  }
}

/**
 * Ajax callback.
 */
function field_remove_item_ajax_callback(&$form, $form_state) {
  $wrapper = '.' . $form['#field_remove_item']['wrapper'];
  $field_name = $form['#field_remove_item']['field_name'];

  return array(
    '#type' => 'ajax',
    '#commands' => array(
      ajax_command_replace($wrapper, render($form[$field_name])),
    ),
  );
}

/**
 * Implements hook_form_alter().
 *
 * Remove the field element.
 */
function field_remove_item_form_alter(&$form, &$form_state, $form_id) {

  if (isset($form_state['triggering_element']['#parents'][3]) &&
      $form_state['triggering_element']['#parents'][3] == 'field_remove_item') {

    $field_name = $form_state['triggering_element']['#parents'][0];
    $field_language = $form_state['triggering_element']['#parents'][1];
    $field_delta = $form_state['triggering_element']['#parents'][2];

    if ($form[$field_name][$field_language]['#cardinality'] == FIELD_CARDINALITY_UNLIMITED) {
      $form['#field_remove_item'] = array(
        'wrapper' => $form[$field_name]['#attributes']['class'][1],
        'field_name' => $field_name,
      );
      // Remove field item.
      unset($form[$field_name][$field_language][$field_delta]);

      if (!isset($form_state['#field_remove_item'])) {
        $form_state['#field_remove_item'] = array();
      }
      // Memorize this removal.
      $form_state['#field_remove_item'][$field_name][$field_language][] = $field_delta;
    }
  }

  // Remove all items again in case the form submission fails validation.
  if (!empty($form_state['#field_remove_item'])) {
    foreach ($form_state['#field_remove_item'] as $field_name => $field_values) {
      foreach ($field_values as $field_language => $field_deltas) {
        foreach ($field_deltas as $field_delta) {
          if (isset($form[$field_name][$field_language][$field_delta])) {
            unset($form[$field_name][$field_language][$field_delta]);
          }
        }
      }
    }
  }
}
