<?php
/**
 * @file
 * 
 * Main code for Webform Email Raw module.  This module allows a Webform submission to be emailed in an unfiltered format, e.g. XML
 */

/**
 * Implements hook_form_FORMID_alter for form ID webform_email_edit_form
 */
function webform_email_raw_form_webform_email_edit_form_alter(&$form, &$form_state, $form_id) {
  $node = $form['node']['#value'];
  $eid = $form['eid']['#value'];
  $settings = _webform_email_raw_settings_get($node->nid, $eid);

  // Add our form elements in
  $form['template']['webform_email_raw'] = array(
    '#type' => 'fieldset',
    '#title' => t('Webform Email Raw settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#tree' => TRUE,
    'webform_email_raw_enable' => array(
      '#type' => 'checkbox',
      '#title' => t('Enable raw message body emails'),
      '#description' => t('Use this setting carefully as it could have security implications if malicious content submitted via the Webform is received by an email client intact'),
      '#default_value' => !empty($settings['webform_email_raw_enable']),
    ),
    'webform_email_raw_mime' => array(
      '#type' => 'textfield',
      '#title' => t('MIME type to set in email header'),
      '#description' => t('This allows you to override the MIME type that will be sent in the header if you require it'),
      '#default_value' => (!empty($settings['webform_email_raw_mime'])) ? $settings['webform_email_raw_mime'] : 'text/plain',
    ),
    /*
    'webform_email_raw_allowed_tags' => array(
      '#type' => 'textfield',
      '#title' => t('Tags allowed in message body'),
      '#description' => t('This allows you to control which tags are left intact after filtering in the form %tags.  If you want the entire message body left intact (no filtering), leave this blank', array('%tags' => 'a, br, p, etc')),
      '#default_value' => (!empty($settings['webform_email_raw_allowed_tags'])) ? $settings['webform_email_raw_allowed_tags'] : '',
    ),
    */
  );
  
  $form['#submit'][] = 'webform_email_raw_webform_email_edit_form_submit';
}

/**
 * Implements submit callback for the form ID webform_email_edit_form
 */
function webform_email_raw_webform_email_edit_form_submit(&$form, &$form_state) {
  $node = $form['node']['#value'];
  $values = $form_state['values'];
  $settings = $values['webform_email_raw'];
  $eid = $values['eid'];
  _webform_email_raw_settings_set($node->nid, $eid, $settings);
}

/**
 * Implements hook_mail_alter
 * 
 * This is called by drupal_mail, but before drupal_mailsystem and 
 * MailSystemInterface::format, which gives a chance to muck with the 
 * filtering logic for the message.
 */
function webform_email_raw_mail_alter(&$message) {
  // Make sure this is a webform message
  if ('webform_submission' == $message['id']) {
    $params = &$message['params'];
    
    // Add webform_email_raw settings for this node, if any:
    $params['webform_email_raw'] = _webform_email_raw_settings_get($params['email']['nid'], $params['email']['eid']);
  }
}

/**
 * Util function to save module settings
 */
function _webform_email_raw_settings_set($nid, $eid, $settings) {
  db_merge('webform_email_raw')
    ->key(array('nid' => $nid, 'eid' => $eid))
    ->fields(array('settings' => serialize($settings)))
    ->execute();
}

/**
 * Util function to retrieve module settings
 */
function _webform_email_raw_settings_get($nid, $eid) {
  $result = db_query('SELECT settings from {webform_email_raw} WHERE nid = :nid and eid = :eid', array(':nid' => $nid, ':eid' => $eid));
  $settings = $result->fetchAssoc();
  return (!empty($settings)) ? unserialize($settings['settings']) : array();
}
