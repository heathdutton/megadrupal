<?php
/**
 * @file
 * The Nodejs checker module.
 */

/**
 * Implements hook_nodejs_message_callback().
 *
 * Returning a blank array in case no message type is hooked is MANDATORY
 */
function nodejs_checker_nodejs_message_callback($type) {
  if ($type == 'nodejs-stopper') {
    return array('nodejs_checker_server_stopped');
  }
  elseif ($type == 'nodejs-starter') {
    return array('nodejs_checker_server_started');
  }
}

/**
 * Callback function for server stop message.
 */
function nodejs_checker_server_stopped($message, &$response) {
  variable_set('nodejs_checker_state', FALSE);
  $false = FALSE;
  drupal_alter('nodejs_checker', $false);
}

/**
 * Callback funciton for server start message.
 */
function nodejs_checker_server_started($message, &$response) {
  variable_set('nodejs_checker_state', TRUE);
  $true = TRUE;
  drupal_alter('nodejs_checker', $true);
}

/**
 * API function that check if the server is up or down.
 */
function nodejs_checker_check_server() {
  return variable_get('nodejs_checker_state', FALSE);
}

/**
 * Implements hook_menu().
 */
function nodejs_checker_menu() {
  $items['nodejs_checker'] = array(
    'title' => 'Nodejs Check',
    'page callback' => 'nodejs_checker_page',
    'file' => 'includes/nodejs_checker_page.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function nodejs_checker_theme() {
  return array(
    'nodejs_checker_block' => array(
      'template' => 'template/nodejs_checker_block',
      'variables' => array(
        'state' => FALSE,
        'path' => drupal_get_path('module', 'nodejs_checker'),
      ),
    ),
  );
}

/**
 * Implements template_preprocess_hook().
 */
function template_preprocess_nodejs_checker_block(&$variables) {
  drupal_add_css(drupal_get_path('module', 'nodejs_checker') . '/nodejs_checker.css', array('type' => 'file'));
  drupal_add_js(drupal_get_path('module', 'nodejs_checker') . '/nodejs_checker.js', array('type' => 'file'));
}

/**
 * Implements hook_block_info().
 */
function nodejs_checker_block_info() {
  $block['nodejs_checker_state'] = array(
    'info' => t('Nodejs checker'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $block;
}

/**
 * Implements hook_block_view().
 */
function nodejs_checker_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'nodejs_checker_state':
      $block['content'] = theme('nodejs_checker_block', array('state' => variable_get('nodejs_checker_state', FALSE)));
      break;
  }
  return $block;
}
