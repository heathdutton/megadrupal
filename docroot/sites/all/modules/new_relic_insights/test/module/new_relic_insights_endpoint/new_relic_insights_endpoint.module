<?php

/**
 * @file
 * Hooks and functions for the Insights mock API endpoint test module
 */


/**
 * Implements hook_menu().
 */
function new_relic_insights_endpoint_menu() {
  $items['insights/accounts/%/%'] = array(
    'title' => 'New Relic Insights Mock Insert API Endpoint',
    'page callback' => 'new_relic_insights_endpoint_callback',
    'page arguments' => array(2, 3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Menu callback for a mock "insert" API endpoint.
 */
function new_relic_insights_endpoint_callback($account_id, $type) {
  $data = variable_get('new_relic_insights_endpoint_data', array());
  drupal_page_is_cacheable(FALSE);

  switch ($type) {
    case 'events':
      if (!array_key_exists($account_id, $data)) {
        $data[$account_id] = array();
      }

      $data[$account_id][] = array(
        'post' => file_get_contents("php://input"),
        'headers' => new_relic_insights_endpoint_get_request_headers(),
      );

      break;

    case 'query':
      $data[$account_id][] = array(
        'nrql' => $_GET['nrql'],
      );
      break;
  }

  variable_set('new_relic_insights_endpoint_data', $data);
}

/**
 * Returns relevant request headers.
 *
 * @return array
 */
function new_relic_insights_endpoint_get_request_headers() {
  $headers = array();

  if (isset($_SERVER['HTTP_X_INSERT_KEY'])) {
    $headers['x-insert-key'] = $_SERVER['HTTP_X_INSERT_KEY'];
  }

  if (isset($_SERVER['HTTP_X_QUERY_KEY'])) {
    $headers['x-query-key'] = $_SERVER['HTTP_X_QUERY_KEY'];
  }

  if (isset($_SERVER['HTTP_CONTENT_TYPE'])) {
    $headers['content-type'] = $_SERVER['HTTP_CONTENT_TYPE'];
  }

  if (isset($_SERVER['CONTENT_TYPE'])) {
    $headers['content-type'] = $_SERVER['CONTENT_TYPE'];
  }

  return $headers;
}
