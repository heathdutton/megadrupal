<?php

/**
 * @file
 * Basic dummy implementation of a mock object, used to
 * test very basic functionality of Mockable. For other
 * more real-world-like implementations see
 * https://drupal.org/node/2047845.
 * See also mockable.test, which uses this mockable_test
 * module.
 */

/**
 * Simulates a function which returns real data and has a mock version.
 *
 * The mock version of xyz() is xyz_mock(), so the mock version of this
 * function is mockable_test_real_with_mock_mock(), defined below. The
 * test code makes sure that mockable('mockable_test_real_with_mock')
 * returns the real data when real data should be used, and the mock data when
 * mock data should be used.
 */
function mockable_test_real_with_mock() {
  return 'mockable_test_real_with_mock';
}

/**
 * Mock version of mockable_test_real_with_mock().
 *
 * When the test code calls mockable('mockable_test_real_with_mock'), the
 * result of mockable_test_real_with_mock_mock() should be returned if
 * mockable_test_real_with_mock_mock() exists, which it does.
 */
function mockable_test_real_with_mock_mock() {
  return 'mockable_test_real_with_mock_mock';
}

/**
 * Second function with mockable version.
 *
 * This is used in conjunction with mockable_set() for testing: setting
 * mockable_set('mockable_test_real*') should set the mockable for both
 * mockable_test_real_with_mock() and mockable_test_real2_with_mock(),
 * because they both start with "mockable_test_real", but not for
 * mockable_test_third_real_with_mock().
 */
function mockable_test_real2_with_mock() {
  return 'mockable_test_real2_with_mock';
}

/**
 * Mockable version of the second example function.
 *
 * This is used in conjunction with mockable_set() for testing: setting
 * mockable_set('mockable_test_real*') should set the mockable for both
 * mockable_test_real_with_mock() and mockable_test_real2_with_mock(),
 * because they both start with "mockable_test_real", but not for
 * mockable_test_third_real_with_mock().
 */
function mockable_test_real2_with_mock_mock() {
  return 'mockable_test_real2_with_mock_mock';
}

/**
 * Third function with mockable version.
 *
 * This is used in conjunction with mockable_set() for testing: setting
 * mockable_set('mockable_test_real*') should set the mockable for both
 * mockable_test_real_with_mock() and mockable_test_real2_with_mock(),
 * because they both start with "mockable_test_real", but not for
 * mockable_test_third_real_with_mock().
 */
function mockable_test_third_real_with_mock() {
  return 'mockable_test_third_real_with_mock';
}

/**
 * Mockable version of the third example function.
 *
 * This is used in conjunction with mockable_set() for testing: setting
 * mockable_set('mockable_test_real*') should set the mockable for both
 * mockable_test_real_with_mock() and mockable_test_real2_with_mock(),
 * because they both start with "mockable_test_real", but not for
 * mockable_test_third_real_with_mock().
 */
function mockable_test_third_real_with_mock_mock() {
  return 'mockable_test_third_real_with_mock_mock';
}

/**
 * Real function which contains no mock version.
 *
 * Often, developers "don't have time" to implement mock objects; the Mockable
 * module is designed to make it possible to write your code so that it will be
 * easy, later on, to implement mock objects. See above, where the real
 * mockable_test_real_with_mock() has a mock version,
 * mockable_test_real_with_mock_mock(). The mockable_test_real_no_mock()
 * funciton simulates a function which does not (yet) have a mock version but
 * for which it is easy to create one when the need arises (in this case,
 * simply defining mockable_test_real_no_mock_mock() will work).
 *
 * Before a mock version is defined, mockable('mockable_test_real_no_mock') will
 * return the same thing (the real data) whether or not the mock data should be
 * used.
 */
function mockable_test_real_no_mock() {
  return 'mockable_test_real_no_mock';
}
