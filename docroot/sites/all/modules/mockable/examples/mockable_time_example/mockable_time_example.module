<?php

/**
 * @file
 * A very simple example of how to use the Mockable module to define
 * mock data for testing interaction with non-controllable data. In this
 * case the non-controllable data is the current time. During normal
 * execution the real time is used, but for testing, development and demos,
 * you might want to simulate the time.
 */

/**
 * Implements hook_menu().
 */
function mockable_time_example_menu() {
  $items['mockable_time_example'] = array(
    'title' => 'Mockable Time Demo',
    'page callback' => 'mockable_time_example',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_mockable_info().
 */
function mockable_time_example_mockable_info() {
  return array(
    'mockable_time_example_time' => array(
      'title' => t('Simulate the current time'),
      'settings' => array(
        'mockable_time_example_time' => array(
          '#title' => t('Set the time to simulate'),
          '#type' => 'textfield',
          '#default_value' => format_date(variable_get('mockable_time_example_time', strtotime("Wed Nov 09 2011 1:30:00")), 'custom', 'H:i:s')
        ),
      ),
    ),
  );
}

/**
 * Implements hook_mockable_info_validate().
 */
function mockable_time_example_mockable_info_validate($form, &$form_state) {
  if ($form_state['complete form']['mockable_time_example_time_main']['#value']) {
    $time = $form_state['complete form']['mockable_time_example_time_fieldset']['mockable_time_example_time']['#value'];
    if (!preg_match('/^([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/', $time)) {
      form_set_error('mockable_time_example_time', t('Please enter a time in the format HH:MM:SS, for example 01:23:45, between 00:00:00 and 23:59:59.'));
    }
  }
}

/**
 * Implements hook_mockable_info_submit().
 */
function mockable_time_example_mockable_info_submit($form, &$form_state) {
  if ($form_state['complete form']['mockable_time_example_time_main']['#value']) {
    $time = $form_state['complete form']['mockable_time_example_time_fieldset']['mockable_time_example_time']['#value'];
    $old_time = $form_state['complete form']['mockable_time_example_time_fieldset']['mockable_time_example_time']['#default_value'];
    if ($time != $old_time) {
      variable_set('mockable_time_example_time', strtotime('Wed Nov 09 2011 ' . $time));
      drupal_set_message(t('Now simulating the time @t.', array('@t' => $time)));
    }
  }
}

/**
 * Return the time or mock time.
 *
 * @return
 *   The current time or mock time.
 */
function mockable_time_example_mockable_time() {
  if (module_exists('mockable')) {
    return mockable('mockable_time_example_time');
  }
  else {
    return mockable_time_example_time();
  }
}

/**
 * Returns the real time.
 */
function mockable_time_example_time() {
  return REQUEST_TIME;
}

/**
 * Returns the mock time, called automatically by Mockable.
 *
 * This function appends _mock to mockable_time_example_time, thereby
 * registering it with the Mockable module.
 *
 * See mockable_time_example_time().
 */
function mockable_time_example_time_mock() {
  return variable_get('mockable_time_example_time', strtotime("Wed Nov 09 2011 1:30:00"));;
}

/**
 * Page callback for "mockable_time_example".
 *
 * Displays "Carry on.", except between 1 and 2 a.m., in which case
 * "We're closed; please come back later" is displayed.
 */
function mockable_time_example() {
  if (format_date(mockable_time_example_mockable_time(), 'custom', 'H') == 1) {
    $return = 'We\'re closed; please come back later';
  }
  else {
    $return = 'Carry on.';
  }
  return $return . ' it\'s ' . format_date(mockable_time_example_mockable_time(), 'custom', 'H:i:s');
}

