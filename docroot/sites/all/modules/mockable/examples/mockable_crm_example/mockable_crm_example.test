<?php

/**
 * @file
 * Automated unit and functional tests for the Mockable CRM Demo module.
 */

/**
 * Tests the functionality of the Mockable CRM Demo module.
 */
class MockableCRMDemoTestCase extends DrupalWebTestCase {

  /**
   * Info about this test.
   */
  public static function getInfo() {
    return array(
      'name' => 'Mockable CRM demo functionality',
      'description' => 'Tests the Mockable CRM demo module.',
      'group' => 'Mockable',
    );
  }

  /**
   * Basic setup for all test cases.
   */
  public function setUp() {
    parent::setUp(array('mockable_crm_example', 'mockable'));
    // Use mock objects as of now.
    mockable_set();
  }

  /**
   * Main test case.
   */
  public function testMockableCRMDemo() {
    // Keep in mind that we don't want to test the inner workings of the
    // CRM, because this module's mandate is not _implement_ a CRM but
    // rather to _communicate with_ the CRM. Therefore it is the
    // interface we are testing.
    $record_id = mockable_crm_example_mockable_crm_add('whatever', 'whatever');
    $this->assertTrue(is_numeric($record_id), 'Adding a record causes a numeric key to be generated: ' . $this->output($record_id));
    $record = mockable_crm_example_mockable_crm_get(rand(100, 200));
    $this->assertTrue(isset($record['name']) && isset($record['email']), 'It is possible to fetch a record from its id: ' . $this->output($record));
  }

  /**
   * Helper function to output structured data.
   */
  function output($x) {
    return '<pre>' . print_r($x, TRUE) . '</pre>';
  }

  /**
   * Tear down by making sure all added variables have been removed
   */
  function tearDown() {
    module_disable(array('mockable', 'mockable_crm_example'));
    drupal_uninstall_modules(array('mockable', 'mockable_crm_example'));

    // get all variables and make sure none begin with 'representative_image'
    global $conf;

    $var_exists = FALSE;
    foreach ($conf as $var => $value) {
      if (drupal_substr($var, 0, drupal_strlen('mockable')) == 'mockable') {
        $var_exists = TRUE;
        $this->assert('fail', format_string('The variable @v should not exist after mockable and crm example modules have been uninstalled (its value is @value).', array('@v' => $var, '@value' => serialize($value))));
      }
    }
    $this->assertFalse($var_exists, 'After uninstalling mockable and crm example modules, no variables beginning with "mockable" remain.');

    parent::tearDown();
  }
}
