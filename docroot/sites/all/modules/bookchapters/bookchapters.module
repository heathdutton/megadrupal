<?php

/**
 * @file
 *   Automated numbering for book sections.
 */

/**
 * Implementation of hook_node_view().
 *
 * Dynamically modify book titles, adding numbering to the beginning.
 */

function bookchapters_node_view($node, $view_mode, $langcode) {
    if ($node->type == 'book') {
      $new_title = _bookchapters_get_chapter_numbering($node->nid) . ' ' . $node->title;
      if ( drupal_get_title() == $node->title ) {
        drupal_set_title($new_title);
      }
      $node->title = $new_title;
    }
}

/**
 * Alter the menu tree and its configuration before the tree is rendered.
 *
 * This uses a hook from module menu_block
 *
 * @param $tree
 *   An array containing the unrendered menu tree.
 * @param $config
 *   An array containing the configuration of the tree.
 */

function bookchapters_menu_block_tree_alter(&$tree, &$config) {
  $book_menus = array();
  $result = db_query("SELECT menu_name FROM {menu_links} WHERE module = 'book' GROUP BY menu_name");
  while ($menu_name = $result->fetchField()) {
    $book_menus[] = $menu_name;
  }

  if (!empty($tree) && in_array($config['menu_name'], $book_menus)) {
    $root_index = key($tree);
    if (!empty($tree[$root_index]['below'])) {
      foreach ($tree[$root_index]['below'] as $key => $value) {
        _bookchapters_rewrite_menu_link_title($tree[$root_index]['below'][$key]);
      }
    }
  }
}

function _bookchapters_rewrite_menu_link_title(&$item) {
  $chapter_numbering = _bookchapters_get_chapter_numbering_recursive($item['link']['menu_name'], $item['link']['plid'], $item['link']['mlid']);
  $item['link']['link_title'] = $chapter_numbering . ' ' . $item['link']['link_title'];
  $item['link']['title'] = $chapter_numbering . ' ' . $item['link']['title'];

  if (!empty($item['below'])) {
    foreach ($item['below'] as $key => $value) {
      _bookchapters_rewrite_menu_link_title($item['below'][$key]);
    }
  }
}

function _bookchapters_get_chapter_numbering($nid) {
  static $bookchapter_values; //@todo change to $bookchapters =  &static_drupal(__FUNCTION__,array())

  if (empty($bookchapter_values)) {
    $bookchapter_values = array();
  }

  if (isset($bookchapter_values[$nid])) {
    return $bookchapter_values[$nid];
  }

  $book_info = db_query('SELECT * FROM {book} b INNER JOIN {menu_links} ml ON b.mlid = ml.mlid WHERE b.nid = :nid', array(':nid' => $nid) )->fetchAssoc();

  if (!empty($book_info)) {
    $bookchapter_values[$nid] = _bookchapters_get_chapter_numbering_recursive($book_info['menu_name'], $book_info['plid'], $book_info['mlid']);
    return $bookchapter_values[$nid];
  }
}

function _bookchapters_get_chapter_numbering_mlid($mlid) {
  $book_info = db_query('SELECT nid FROM {book} b WHERE mlid = :mlid', array(':mlid' => $mlid))->fetchAssoc();
  if (!empty($book_info)) {
    return _bookchapters_get_chapter_numbering($book_info['nid']);
  }
}


function _bookchapters_get_chapter_numbering_recursive($menu_name, $plid, $mlid) {
  if (empty($menu_name) || empty($plid) || empty($mlid)) {
    return;
  }
  //to gain performance benefits filter using primary key field
  $result = db_query('SELECT * FROM {menu_links} WHERE menu_name =:menu_name AND plid = :plid ORDER BY weight ASC, link_title ASC',
                            array(':menu_name' => $menu_name, ':plid' => $plid) );
  $order_number = 1;
  while ($row=$result->fetchAssoc()) {
    if ($row['mlid'] == $mlid) {
      if ($row['plid'] > 0) {
        $parent = db_query('SELECT * FROM {menu_links} WHERE menu_name = :menu_name AND mlid = :mlid', array(":menu_name" => $menu_name, ":mlid" => $row['plid']) )->fetchAssoc();
        if ($parent['plid'] > 0) {
          $parent_order_number = _bookchapters_get_chapter_numbering_recursive($menu_name, $parent['plid'], $parent['mlid']);
        }
        if (isset($parent_order_number) && !empty($parent_order_number)) {
          $order_number = "$parent_order_number.$order_number";
        }
      }
      return $order_number;
    }
    $order_number++;
  }

}

function book_preprocess(&$variables, $hook) {
  if ($hook == 'book_navigation') {
    $book_link = $variables['book_link'];

    $flat = book_get_flat_menu($book_link);

    // DO THE WHOLE TREE
    if ($book_link['has_children']) {
      // Walk through the array until we find the current page.
      do {
        $link = array_shift($flat);
      } while ($link && ($link['mlid'] != $book_link['mlid']));
      // Continue though the array and collect the links whose parent is this page.
      while (($link = array_shift($flat)) && $link['plid'] == $book_link['mlid']) {
        $numbering = _bookchapters_get_chapter_numbering_mlid($link['mlid']);
        $link['title']=$link['link_title']= $numbering . ' ' . $link['title'];
        $data['link'] = $link;
        $data['below'] = '';
        $children[] = $data;
      }
    }

    if (isset($children)) {
      $elements = menu_tree_output($children);
      $variables['tree'] = drupal_render($elements);
    }

    // DO PREV
    if (!empty($variables['prev_url'])) {
      $prev = book_prev($book_link);
      $pnumbering = _bookchapters_get_chapter_numbering_mlid($prev['mlid']);
      $variables['prev_title'] = $pnumbering . " " . $variables['prev_title'];
    }

    // DO NEXT
    if (!empty($variables['next_url'])) {
      $next = book_next($book_link);
      $nnumbering = _bookchapters_get_chapter_numbering_mlid($next['mlid']);
      $variables['next_title'] = $nnumbering . " " . $variables['next_title'];
    }

  }
}
