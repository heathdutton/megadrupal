<?php

/**
 * @file
 *   Module implementation file
 */

/**
 * Implements hook_menu().
 */
function views_s3_menu() {
  $items['admin/structure/views/s3'] = array(
    'title' => 'Views S3',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('views_s3_admin_form'),
    'access arguments' => array('administer views'),
    'file' => 'views_s3.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['views-s3/test'] = array(
    'title' => 'Views S3 test page',
    'page callback' => 'views_s3_test_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_libraries_info().
 */
function views_s3_libraries_info() {
  return array(
    'awssdk-s3' => array(
      'title' => 'AWS SDK (s3) for PHP',
      'vendor url' => 'http://aws.amazon.com/sdkforphp/',
      'download url' => 'http://aws.amazon.com/sdkforphp/',
      'version arguments' => array(
        'file' => 'sdk.class.php',
        'pattern' => "/define\('CFRUNTIME_VERSION', '(.*)'\);/",
        'lines' => 200,
      ),
      'files' => array(
        'php' => array(
          'utilities/credential.class.php',
          'utilities/credentials.class.php',
          'utilities/utilities.class.php',
          'services/cloudfront.class.php',
          'services/s3.class.php',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function views_s3_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Test page
 */
function views_s3_test_page() {
  $request = new S3APIRequest();
  // $request->setParam('bucket_name', 'SET-YOUR-BUCKET-NAME');
  // $contents = $request->getBucketContents();

  return l(t('Activate the debugging info to show test information'), 'admin/structure/views/s3');
}

/**
 * Gets the list of buckets available for this account.
 */
function _get_bucket_list() {
  if (variable_get('aws_key', '') == '' || variable_get('aws_secret', '') == '') {
    return array('' => t('- Enter your credentials first -'));
  }
  // Instantiate the class
  libraries_load('awssdk');
  libraries_load('awssdk-s3');
  $s3 = new AmazonS3();

  return drupal_map_assoc($s3->get_bucket_list());
}

/**
 * Gets the list of buckets available for this account.
 */
function _get_distribution_list() {
  if (!_is_cloudfront_active()) {
    return array('' => t('- Enter your credentials first -'));
  }
  // Instantiate the class
  libraries_load('awssdk');
  libraries_load('awssdk-s3');
  $cdn = new AmazonCloudFront();

  return drupal_map_assoc($cdn->get_distribution_list());
}

/**
 * Helper function that determines wether CloudFront is active or not
 * @return
 *   Boolean indicating if CloudFront is active
 */
function _is_cloudfront_active() {
  return variable_get('aws_cloudfront_keypair', '') . variable_get('aws_cloudfront_pem', '') != '';
}