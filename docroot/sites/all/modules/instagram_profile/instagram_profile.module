<?php
/**
 * @file
 * Allows users to share their Instagram feed on user profile pages.
 */


/**
 * Implements hook_menu().
 */
function instagram_profile_menu() {
  $items = array();

  $items['instagram_profile/user_id'] = array(
    'page callback'    => 'instagram_profile_ajax',
    // Handle access in the menu callback.
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
    'file'             => 'includes/ajax.inc',
  );

  // Administration configure/settings form.
  $items['admin/config/people/instagram-profile'] = array(
    'title'            => 'Instagram profile settings',
    'description'      => 'Configure Instagram client ID and options for the "Share your Instagram feed" module.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('instagram_profile_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file'             => 'includes/admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function instagram_profile_permission() {
  return array(
    'share own instagram feed'    =>  array(
      'title'       => t('Share own Instagram feed'),
      'description' => t('Allows the currently logged in user to share their own Instagram feed on their user profile.'),
    ),
    'view others instagram feeds' => array(
      'title'       => t('View otherâ€™s Instagram feeds'),
      'description' => t('Allows the currently logged in user to view feeds that other users have shared on their user profiles.  A user can always view their own instagram feed, regardless of this permission.'),
    )
  );
}

/**
 * Implements hook_theme().
 */
function instagram_profile_theme($existing, $type, $theme, $path) {
  return array(
    // Markup to hold the place for a shared feed.
    'instagram_profile_placeholder' => array(
      'variables' => array('instagram_id' => 0),
      'template'  => 'instagram-profile-placeholder',
      'path'      => "$path/assets",
    ),
  );
}

/**
 * Implements hook_user_view().
 */
function instagram_profile_user_view($account, $view_mode, $langcode) {
  if ('full' === $view_mode && instagram_profile_access($account)) {
    module_load_include('inc', 'instagram_profile', 'includes/user_view');
    $account->content['instagram_feed'] = _instagram_profile_user_view($account);
  }
}


/******************************************************************************
 * API functions.
 */

/**
 * Checks if the current user has access to view an account's Instagram feed.
 *
 * Shows the feed if the current (logged in) user has:
 *   - share permissions and is viewing their own account/profile.  Or;
 *   - view permissions and the viewed user has shared their Instagram feed.
 *
 * @param $account stdClass
 *    The Drupal user of the account/profile being viewed.
 *
 * @param Boolean
 */
function instagram_profile_access($account) {
  $self          = _instagram_profile_self($account->uid);
  $share         = user_access('share own instagram feeds');
  $view          = user_access('view others instagram feeds');

  // Check for a shared Instagram account last, since it requires a DB query
  // that is not usually cached.
  return ($self and $share) or ($view and instagram_profile_has_instagram($account->uid));
}

/**
 * Gets the Instagram Client ID as configured.
 *
 * @return String
 */
function instagram_profile_client_id() {
  return variable_get('instagram_profile_client_id');
}

/**
 * Checks if a Drupal user has shared their Instagram feed.
 *
 * @param $drupal_uid Integer
 *    The Drupal user's UID.
 *
 * @return Boolean
 */
function instagram_profile_has_instagram($drupal_uid) {
  $instagram_id = instagram_profile_instagram_user_id($drupal_uid);
  return !empty($instagram_id);
}

/**
 * Gets the Instagram user ID for a Drupal user.
 *
 * @param $drupal Integer
 *    The Drupal user's UID.
 *
 * @return Integer
 *    The Instagram user UID.
 */
function instagram_profile_instagram_user_id($drupal) {
  $cache = &drupal_static(__FUNCTION__, array());

  if (!isset($cache[$drupal])) {    
    $sql = 'SELECT instagram FROM instagram_profile WHERE drupal = :drupal';
    $cache[$drupal] = db_query($sql, array(':drupal' => $drupal))->fetchField();
  }

  return $cache[$drupal];
}


/******************************************************************************
 * Small helper functions.
 */

// Checks if a user is the currently logged in user.
function _instagram_profile_self($uid) {
  return $GLOBALS['user']->uid === $uid;
}

// Gets the path to a file in the assets directory.
function _instagram_profile_asset($filename, $weight = NULL) {
  $path = drupal_get_path('module', 'instagram_profile');
  return array(
    'type' => 'file',
    'data' => "$path/assets/instagram-profile-$filename",
    'weight' => $weight,
    'scope' => 'footer',
  );
}

// Builds an array for a name-spaced javascript setting.
function _instagram_profile_js_setting($name, $value) {
  return array(
    'type' => 'setting',
    'data' => array('instagramProfile' => array($name => $value)),
  );
}

// Checks if an Instagram client ID is valid or not.
function _instagram_profile_check_client_id($id = NULL) {
  if (is_null($id)) {
    $id = instagram_profile_client_id();
  }
  $response = drupal_http_request("https://api.instagram.com/v1/media/popular?client_id=$id");
  return 200 == $response->code;
}

// Validates an input Instagram user ID.
function _instagram_profile_validate_user_id($id) {
  return is_numeric($id) && $id > 0 && floor($id) == $id;
}
