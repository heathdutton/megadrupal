<?php

/**
 * @file
 *
 * Form_clerk assists users with forms.
 *
 */

/**
 * Implements hook_help().
 */

function form_clerk_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#form_clerk":
      // Return a line-break version of the module README.txt
      $help_text  = file_get_contents( dirname(__FILE__) . "/README.txt");
      return '<pre>' . $help_text . '/pre>';
      break;
  }
  return $output;
}

/**
 * Implements hook_perm().
 */
function form_clerk_permission() {
  return array(
    'use form_clerk' => array(
     'title'       => t('use form_clerk'),
     'description' => t('use form_clerk to input form data'),
    )
  );
}

/**
 * Implements hook_menu().
 */
function form_clerk_menu() {
  $items = array();

  $items['admin/settings/form_clerk'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('form_clerk_form', 'input'),
    'title' => 'Form Clerk',
    'description' => 'View form info and input data',
    'access arguments' => array(t('use form_clerk')),
    'file' => 'form_clerk_ui.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/form_clerk/input'] = array(
    'page arguments' => array('form_clerk_form', 'input'),
    'title' => 'Input Data',
    'description' => 'Input form data from a file',
    'file' => 'form_clerk_ui.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/settings/form_clerk/get_info'] = array(
    'page arguments' => array('form_clerk_form', 'get_info'),
    'title' => 'Get Form Information',
    'description' => 'View form info',
    'file' => 'form_clerk_ui.inc',
    'access arguments' => array(t('use form_clerk')),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/form_clerk/configuration'] = array(
    'page arguments' => array('form_clerk_form', 'configuration'),
    'title' => 'Form Clerk Configuration',
    'description' => 'Save settings across sessions',
    'file' => 'form_clerk_ui.inc',
    'access arguments' => array(t('use form_clerk')),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Set default values for Form Clerk settings.
 *
 * @param $form_state
 *  The multiform state argument.
 */
function form_clerk_set_defaults(&$form_state) {
  $top_directory = variable_get("form_clerk_directory", '/tmp/');

  $form_state['storage']['comment_flag']       = '#';
  $form_state['storage']['cookie_dir']         = $top_directory;
  $form_state['storage']['cookie_file']        = 'cookie.txt';
  $form_state['storage']['delimiter']          = ',';
  $form_state['storage']['exit']               = FALSE;
  $form_state['storage']['form_id']            = '';
  $form_state['storage']['ignore_indicator']   = '#ignore#';
  $form_state['storage']['info_only']          = FALSE;
  $form_state['storage']['input_dir']          = "$top_directory/inputs/";
  $form_state['storage']['names']              = '';
  $form_state['storage']['password_indicator'] = '******';
  $form_state['storage']['proxy']              = '';
  $form_state['storage']['report_dir']         = "$top_directory/reports/";
  $form_state['storage']['site']               = '';
  $form_state['storage']['stop_on_error']      = TRUE;
  $form_state['storage']['url']                = '';
  $form_state['storage']['url_decode']         = TRUE;
  $form_state['storage']['use_response']       = FALSE;
  $form_state['storage']['verbose']            = TRUE;
  $form_state['storage']['which_submit']       = 'op';

  return;
}
