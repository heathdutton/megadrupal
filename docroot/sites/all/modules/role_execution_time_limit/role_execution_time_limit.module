<?php

/**
 * @file
 * Set PHP execution time limit by role.
 */

/**
 * Implements hook_init().
 */
function role_execution_time_limit_init() {
  // If module is enabled.
  if (variable_get("role_execution_time_limit_status", 0)) {
    global $user;
    $time_limit = FALSE;

    // If command line (drush).
    if (php_sapi_name() == 'cli') {
      $time_limit = variable_get("role_execution_time_limit_role_cli", FALSE);
    }
    // If superadmin.
    elseif ($user->uid == 1) {
      $time_limit = variable_get("role_execution_time_limit_role_admin", FALSE);
    }
    // Else check the users roles.
    elseif ($user->roles) {
      foreach ($user->roles as $role) {
        $time_limit = variable_get(role_execution_time_limit_var_name($role), FALSE);
      }
    }

    if ($time_limit || $time_limit === "0") {
      ini_set('max_execution_time', $time_limit);
    }
  }
}

/**
 * Implements hook_permission().
 */
function role_execution_time_limit_permission() {
  return array(
    'administer role_execution_time_limit' => array(
      'title' => t('Administer Role execution time limit'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function role_execution_time_limit_menu() {
  $items['admin/config/development/role_execution_time_limit'] = array(
    'title' => 'Role execution time limit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('role_execution_time_limit_settings_form'),
    'file' => 'role_execution_time_limit.admin.inc',
    'access arguments' => array('administer role_execution_time_limit'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_user_role_delete().
 */
function role_execution_time_limit_user_role_delete($role) {
  variable_del(role_execution_time_limit_var_name($role->name));
}

/**
 * Generates variable name for a role.
 *
 * @param string $role
 *   A string containing role name.
 *
 * @return string
 *   A reformated string.
 */
function role_execution_time_limit_var_name($role) {
  return 'role_execution_time_limit_role_' . preg_replace('/\s+/', '_', drupal_strtolower($role));
}
