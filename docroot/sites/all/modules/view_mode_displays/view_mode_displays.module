<?php

/**
 * @file
 * Hooks for view mode displays.
 */

/**
 * Implements hook_menu().
 */
function view_mode_displays_menu() {
  $common = array(
    'access arguments' => array('access view mode displays'),
    'file' => 'view_mode_displays.admin.inc',
  );

  $items['ajax/view-mode-displays/bundle-autocomplete/%/%'] = array(
    'title' => 'Bundle autocomplete',
    'page callback' => 'view_mode_displays_type_bundle_autocomplete',
    'page arguments' => array(3, 4),
    'type' => MENU_CALLBACK,
  ) + $common;

  $items['admin/structure/view-mode-displays'] = array(
    'title' => 'View mode displays',
    'description' => 'Review rendering output of entity types.',
    'page callback' => 'view_mode_displays_overview',
  ) + $common;

  $items['admin/structure/view-mode-displays/%'] = array(
    'title' => 'View mode display entity type',
    'title callback' => 'view_mode_displays_type_title',
    'title arguments' => array(3),
    'page callback' => 'view_mode_displays_type',
    'page arguments' => array(3),
  ) + $common;

  $items['admin/structure/view-mode-displays/%/bundles/%'] = array(
    'title' => 'View mode display entity type by bundle',
    'title callback' => 'view_mode_displays_type_bundle_title',
    'title arguments' => array(3, 5),
    'page callback' => 'view_mode_displays_type_bundle',
    'page arguments' => array(3, 5),
  ) + $common;

  $items['admin/structure/view-mode-displays/%/view-modes/%'] = array(
    'title' => 'View mode display entity type',
    'title callback' => 'view_mode_displays_type_view_mode_title',
    'title arguments' => array(3, 5),
    'page callback' => 'view_mode_displays_type_view_mode',
    'page arguments' => array(3, 5),
  ) + $common;

  return $items;
}

/**
 * Implements hook_permission().
 */
function view_mode_displays_permission() {
  return array(
    'access view mode displays' => array(
      'title' => t('Access view mode displays'),
      'description' => t('View administrative page to display entities rendered by view mode.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Alter our bundle query to handle entities that don't supply things we need.
 */
function view_mode_displays_view_mode_displays_bundle_query_alter(&$query, $context) {
  switch ($context['type']) {
    case 'taxonomy_term':
      $query->join('taxonomy_vocabulary', 'tv', 'tv.vid = b.vid');
      $query->condition('tv.machine_name', $context['bundle']);
      break;
    case 'user':
      $query->addField('b', 'name', 'label');
      if (isset($context['autocomplete']) && !is_null($context['autocomplete'])) {
        $query->condition('b.name', '%' . db_like($context['autocomplete']) . '%', 'LIKE');
      }
      break;
  }
}