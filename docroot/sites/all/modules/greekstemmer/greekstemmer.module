<?php
//
// Ported to Drupal 7 by Yannis Karampelas (yannisc - http://www.netstudio.gr) June 2011.
//
//
// Port to Drupal 7 was based on the UTF8 implementation of basos G ( basos.g@gmx.net ).
// First implementation to Drupal CMS was done by Vassilis Spiliopoulos (http://www.psychfamily.gr) & Pantelis Nasikas
// based on Spyros Saroukos PHP implementation. Spyros Saroukos implementation was based on the work of
// Panos Kyriakakis (http://www.salix.gr) and Georgios Ntais (Georgios.Ntais@eurodyn.com)
// Georgios firstly developed the stemmer's javascript implementation for his master thesis at Royal Institute of Technology [KTH], Stockholm Sweden
// http://www.dsv.su.se/~hercules/papers/Ntais_greek_stemmer_thesis_final.pdf 
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 3
// of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License Version 3
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


/**
* Implementation of hook_search_preprocess
*/
function greekstemmer_search_preprocess($text) {
  include_once('PorterStemmerUtf8.php');
  $stm = new GreekPorterStemmerUtf8();
  $boundary = "[^a-zA-ZαβγδεζηθικλμνξοπρστυφχψωΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩςάέόίύώήϊϋΐΰΆΈΌΊΎΏΉΪΫ']+";
  $words = preg_split('/(' . $boundary . '+)/', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
  
  if (!count( $words )) {
    return $text;
  }

  // Process each word, skipping delimiters.
  $isword = !preg_match('/' . $boundary . '/', $words[0] );
  foreach ($words as $k => $word) {
    if ($isword) {
        $words[$k] = $stm->stem(toupper($word));
    }
    $isword = !$isword;
  }

  // Put it all back together (note that delimiters are in $words).
  return implode('', $words);
}

function toupper($word) {
  $ellhnika = array(
    'α'=>'Α',
    'β'=>'Β',
    'γ'=>'Γ',
    'δ'=>'Δ',
    'ε'=>'Ε',
    'ζ'=>'Ζ',
    'η'=>'Η',
    'θ'=>'Θ',
    'ι'=>'Ι',
    'κ'=>'Κ',
    'λ'=>'Λ',
    'μ'=>'Μ',
    'ν'=>'Ν',
    'ξ'=>'Ξ',
    'ο'=>'Ο',
    'π'=>'Π',
    'ρ'=>'Ρ',
    'σ'=>'Σ',
    'τ'=>'Τ',
    'υ'=>'Υ',
    'φ'=>'Φ',
    'χ'=>'Χ',
    'ψ'=>'Ψ',
    'ω'=>'Ω',
    'ά'=>'Α',
    'έ'=>'Ε',
    'ή'=>'Η',
    'ί'=>'Ι',
    'ύ'=>'Υ',
    'ό'=>'Ο',
    'ώ'=>'Ω',
    'ϊ'=>'Ι',
    'ϋ'=>'Υ',
    'ΐ'=>'Ι',
    'ΰ'=>'Υ',
    'ς'=>'Σ',	
  );
  $search = array_keys($ellhnika);
  return str_replace($search, $ellhnika, $word);
}