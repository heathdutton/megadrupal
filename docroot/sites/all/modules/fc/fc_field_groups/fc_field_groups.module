<?php
/**
 * @file
 * Field Complete Field Groups - Provides field complete support for field groups.
 */

/**
 * Implements hook_fc_form_pre_render_alter().
 */
function fc_field_groups_fc_form_pre_render_alter(&$form, $ids) {
  if (empty($form['#field_complete']) || empty($form['#groups'])) {
    // If this form contains no field complete
    // fields, or any groups, do nothing.
    return;
  }

  $settings = array();
  if (!property_exists($form['#entity'], 'fc')) {
    $entity->fc = fcComplete::load($form['#entity_type'], $form['#entity']);
  }
  $completeness = $form['#entity']->fc->completeness;

  foreach ($form['#groups'] as $group_name => &$group) {
    if (empty($group->children)) {
      // No children in this group at all
      continue;
    }

    $group_fields = array_intersect_key($completeness, array_flip($group->children));
    if (empty($group_fields)) {
      // No children in this group that have completeness
      continue;
    }

    $classes = explode(' ', $group->format_settings['instance_settings']['classes']);
    $classes[] = 'fc-field-group';
    $complete = count($group_fields) == count(array_filter($group_fields));
    $classes[] = 'fc-field-group-' . ($complete ? 'complete' : 'incomplete');

    $group->format_settings['instance_settings']['classes'] = implode(' ', $classes);

    $settings[] = array('text' => $group->label, 'state' => $complete);
  }

  // Fixed for Profile2 (see https://drupal.org/node/2095277)
  $bits = explode('-', $form['#id']);
  $form_id = ($form['#entity_type'] != 'profile2') ? $form['#id'] : 'profile2-edit-' . array_pop($bits) . '-form';

  $path = drupal_get_path('module', 'fc_field_groups');
  $form['#attached']['js'][] = $path . '/fc_field_groups.js';
  $form['#attached']['css'][] = $path . '/fc_field_groups.css';
  $form['#attached']['js'][] = array(
    'data' => array('fc_field_groups' => array($form_id => $settings)),
    'type' => 'setting',
  );
}