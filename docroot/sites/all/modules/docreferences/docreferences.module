<?php
/**
 * @file docreferences.module
 */

//-------------------------------------------//
// Drupal core hooks                         //
//-------------------------------------------//

/**
 * Implementation of hook_help()
 */
function docreferences_help($path, $arg) {
  if ($path == 'admin/help#docreferences') {
    $txt = 'References for documentation and other helpful resources.'; 
    $output = t($txt);
    return $output;
  }
}
/**
 * Implementation of hook_menu().
 */
function docreferences_menu() {
  $items = array();

  $items['admin/structure/docreferences/%/export'] = array(
    'title' => 'export',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('docreferences_export_reference', 3), 
    'access arguments' => array('export docreferences'),
    'type' => MENU_CALLBACK,
  );
  $items['docreferences'] = array(
    'title' => 'Documentation / References',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('docreferences_page_default'),
    'access arguments' => array('access content'),
    'menu_name' => 'main-menu',
    'type' => MENU_CALLBACK,
  ); 

  return $items;
}

/**
 * Implementation of hook_perm().
 */
function docreferences_perm() {
  return array('access docreferences', 'administer docreferences', 'export docreferences');
}

/**
 * Implementation of hook_theme().
 */
/*
function docreferences_theme() {
  return array(
  );  
}
// */


//--------------------------------------------------/
// Ctools plugin                                    /
//--------------------------------------------------/
/**
 * Implmenentation of hook_ctools_plugin_directory.
 */
function docreferences_ctools_plugin_directory($module, $plugin) {
  if ($plugin == 'export_ui') {
    return 'plugins/'. $plugin;
  }
}

/**
* Implementation of hook_ctools_plugin_api().
*
* Tell CTools that we support the default_mymodule_presets API.
*/
function docreferences_ctools_plugin_api($owner, $api) {
  if ($owner == 'docreferences' && $api == 'default_docreferences_reference') {
    return array('version' => 1);
  }
}

//--------------------------------------------------/
// Ctools export hooks                              /
//--------------------------------------------------/

/**
 * Export a myobj and display it in a form.
 * 
 * @param $name
 *  string, unique id for object
 */
function docreferences_export_reference(&$form_state, $name) {
  ctools_include('export');
  $obj = docreferences_reference_load($name);
  drupal_set_title(check_plain($obj->description));
  $code = docreferences_reference_export($obj);
  $lines = substr_count($code, "\n");

  $form['export'] = array(
    '#title' => t('Export data'),
    '#type' => 'textarea',
    '#value' => $code,
    '#rows' => $lines,
    '#description' => t('Copy the export text and paste it into another myobj using the import function.'),
  );
  return $form;
}

/**
 * Load a single myobj.
 */
function docreferences_reference_load($name) {
  ctools_include('export');
  $result = ctools_export_load_object('docreferences_reference', 'names', array($name)); 
  if (isset($result[$name])) {
    return $result[$name];
  }
}

/**
 * Export a myobj.
 */
function docreferences_reference_export($obj, $indent = '') {
  ctools_include('export');
  $output = ctools_export_object('docreferences_reference', $obj, $indent);
  return $output;
}

/**
 * Save a single myobj.
 */
function docreferences_reference_save(&$myobj) {
    $update = (isset($myobj->sid) && is_numeric($myobj->sid)) ? array('sid') : array();
      return drupal_write_record('docreferences_reference', $myobj, $update);
}

//-------------------------------------------//
// Docreferences                             //
//-------------------------------------------//

/**
 * The docreferences page uses a simple system settings form.
 * 
 * TODO Replace this form-based listing with a real page. Change hook_menu to page callback rather than drupal_get_form.
 */
function docreferences_page_default($form, &$form_state) {
  $references = docreferences_get_references();

  // @todo Process category to make it save and without special chars.

  foreach ($references as $reference) {
    $form[$reference->category][$reference->name] = array(
      '#type' => 'item',
      '#title' => l(t($reference->title), $reference->url),
      '#default_value' => variable_get($reference->name, FALSE),
    );
  }

  // Add section headings for project type (e.g. Core, Custom, Contrib).
  foreach ($form as $category => $value) {
    $form[$category]['name'] = array(
      '#type' => 'item',
      '#title' => $category,
      '#weight' => -100,
    );
  }

  return $form;
}

/**
 * @param $name
 *  string, reference name.
 * 
 * @return $reference, reference object.
 */
function docreferences_get($name) {
  ctools_include('export');
  return docreferences_reference_load($name);
}

/**
 * @return $references
 *  Objects, lesson objects.
 */
function docreferences_get_references() {
  ctools_include('export');
  return ctools_export_load_object('docreferences_reference'); 
}
