<?php

/**
 * @file
 * Install, update and uninstall functions for the Views Save module.
 */

/**
 * Implements hook_schema().
 */
function views_save_schema() {
  $schema['views_save'] = array(
    'description' => 'Saved views on this site.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a saved view.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'bundle' => array(
        'description' => 'The {views_save_bundle}.id of this saved view.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of this saved view.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid that created this saved view.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the saved view is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the saved view was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the saved view was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'view_path' => array(
        'description' => 'The URI (path and query) of this saved view.',
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'created' => array('created'),
    ),
    'unique keys' => array(
      'uid_bundle_title' => array('uid', 'bundle', 'title'),
    ),
    'foreign keys' => array(
      'bundle' => array(
        'table' => 'views_save_bundle',
        'columns' => array('bundle' => 'id'),
      ),
      'author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['views_save_bundle'] = array(
    'description' => 'Possible types for saved views.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a saved view type.',
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The label for this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function views_save_install() {
  // In case the module is installed via an installation profile, a batch is
  // active and we skip that.
  if (batch_get()) {
    return;
  }

  db_insert('views_save_bundle')
    ->fields(array(
        'id' => 'default',
        'label' => t('Default'),
      ))
    ->execute();
}

/**
 * Renames the {views_save}.path column to "view_path".
 */
function views_save_update_7100() {
  $spec = array(
    'description' => 'The URI (path and query) of this saved view.',
    'type' => 'text',
    'size' => 'medium',
    'serialize' => TRUE,
    'not null' => TRUE,
  );
  db_change_field('views_save', 'path', 'view_path', $spec);
}
