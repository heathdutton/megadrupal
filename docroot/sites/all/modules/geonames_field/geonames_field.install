<?php

/**
 * Implements hook_install().
 */
function geonames_field_install() {
  $entity_type = new GeonamesEntityType();
  $entity_type->name = "geoname";
  $entity_type->label = "Geoname";
  $entity_type->addProperty('language',       'Language',           'text');
  $entity_type->addProperty('toponymname',    'Toponym Name',       'text');
  $entity_type->addProperty('name',           'Name',               'text');
  $entity_type->addProperty('lat',            'Latitude',           'decimal');
  $entity_type->addProperty('lng',            'Longitude',          'decimal');
  // We don't need to repead id
  // $entity_type->addProperty('geonameid',      'Geoname ID',         'integer');
  $entity_type->addProperty('countrycode',    'Country Code',       'text');
  $entity_type->addProperty('countryname',    'Country Name',       'text');
  $entity_type->addProperty('fcl',            'Feature Class',      'text');
  $entity_type->addProperty('fcode',          'Feature Code',       'text');
  $entity_type->addProperty('fclname',        'Feature Class Name', 'text');
  $entity_type->addProperty('fcodename',      'Feature Code Name',  'text');
  $entity_type->addProperty('population',     'Population',         'integer');
  // This field is too long
  // $entity_type->addProperty('alternatenames', 'Alternate Names',    'text');
  $entity_type->addProperty('elevation',      'Elevation',          'integer');
  $entity_type->addProperty('continentcode',  'Continent Code',     'text');
  $entity_type->addProperty('admincode1',     'Admin Code 1',       'text');
  $entity_type->addProperty('adminname1',     'Admin Name 1',       'text');
  $entity_type->addProperty('admincode2',     'Admin Code 2',       'text');
  $entity_type->addProperty('adminname2',     'Admin Name 2',       'text');
  $entity_type->addProperty('alternatename',  'Alternate Name',     'text');
  $entity_type->addProperty('timezone',       'Time Zone',          'text');
  $entity_type->save();

  $bundle = new Bundle();
  $bundle->entity_type = 'geoname';
  $bundle->name = 'geoname';
  $bundle->save();
}

/**
 * Implements hook_uninstall(). 
 */
function geonames_field_uninstall() {
  $entity_type = EntityType::loadByName('geoname');
  $entity_type->delete();
}

class GeonamesEntityType extends EntityType {

  public function save() {
    if($this->is_new){
      module_load_include('inc', 'eck', 'eck.enttiy_type');
      $schema = eck__entity_type__schema($this);
      // We need to set language as primary key so we can use
      // entity id as geoname id
      $schema['fields']['language'] = array(
        'type' => 'varchar',
        'default' => '',
        'length' => 10,
        'not null' => TRUE,
      );
      $schema['primary key'] = array('id', 'language');
      db_create_table("eck_{$this->name}", $schema);
    }
    else {
      if(array_key_exists('add', $this->changes)) {
        foreach($this->changes['add'] as $name) {
          $properties = $this->properties;
          $property = $properties[$name];
          $schema = eck_property_type_schema($property['type']);
          db_add_field("eck_{$this->name}", $name, $schema);
        }
      }
      if(array_key_exists('remove', $this->changes)) {
        foreach($this->changes['remove'] as $name) {
          db_drop_field("eck_{$this->name}", $name);
        }
      }
    }
    DBObject::save();
    drupal_get_schema(NULL, TRUE);
  }
}
