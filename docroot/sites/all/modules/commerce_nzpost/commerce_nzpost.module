<?php

/**
 * @file
 * Handles main functionality for Commerce NZ Post module.
 *
 * @TODO implement national NZ Post services,
 * currently only handles international services
 */

/**
 * Implements hook_menu().
 */
function commerce_nzpost_menu() {
  $items = array();

  $items['admin/commerce/config/shipping/methods/nzpost/edit'] = array(
    'title' => 'Edit',
    'description' => 'Configure the NZ Post shipping method.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_nzpost_settings_form'),
    'access arguments' => array('administer shipping'),
    'file' => 'includes/commerce_nzpost.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
    'weight' => 0,
  );

  return $items;
}

/**
 * Implements hook_commerce_shipping_method_info().
 */
function commerce_nzpost_commerce_shipping_method_info() {
  $shipping_methods = array();

  $shipping_methods['nzpost'] = array(
    'title' => t('NZ Post'),
    'description' => t('Quote rates from NZ Post'),
  );

  return $shipping_methods;
}

/**
 * Implements hook_commerce_shipping_service_info().
 */
function commerce_nzpost_commerce_shipping_service_info() {
  $shipping_services = array();

  $available_services = _commerce_nzpost_service_list();
  $selected_services  = variable_get('commerce_nzpost_services', array());

  foreach ($selected_services as $id => $val) {
    if ($val !== 0) {
      $service = $available_services[$id];
      $shipping_services[$service['slug']] = array(
        'title' => $service['title'],
        'description' => $service['description'],
        'service_code' => $service['service_code'],
        'destination' => $service['destination'],
        'display_title' => $service['title'],
        'shipping_method' => 'nzpost',
        'price_component' => 'shipping',
        'callbacks' => array(
          'rate' => 'commerce_nzpost_service_rate_order',
        ),
      );
    }
  }

  return $shipping_services;
}

/**
 * Shipping service callback: returns a base price array for a shipping service.
 */
function commerce_nzpost_service_rate_order($shipping_service, $order) {

  module_load_include('inc', 'commerce_nzpost', 'includes/commerce_nzpost.json');

  // First attempt to recover cached shipping rates for the current order.
  $rates = commerce_shipping_rates_cache_get('nzpost', $order, variable_get('commerce_nzpost_rates_timeout', 0));

  // If no rates were recovered from the cache or the cached rates are old...
  if (!$rates) {
    $rates = array();
  }

  if (!in_array($shipping_service['name'], $rates)) {
    // Build the rate request for the current order.
    $rate_request = commerce_nzpost_build_rate_request($order);

    // Did we get a valid rate request url back?
    if (is_array($rate_request)) {
      // Submit the API request to NZ Post.
      $request_attributes = $rate_request['attributes'];
      $request_attributes['service_code'] = $shipping_service['service_code'];
      $destination = $shipping_service['destination'];

      if (($request_attributes['country_code'] != 'NZ' &&  $destination == 'domestic') ||
           ($request_attributes['country_code'] == 'NZ' && $destination == 'international')) {
        // Make sure we use the right methods for the right location.
        return FALSE;
      }

      $response = commerce_nzpost_api_request($request_attributes, $destination);
      if (!empty($response->data)) {
        // Parse response to cache all requested rates for the current order.
        $response_data = drupal_json_decode($response->data);
        if (isset($response_data['status']) && $response_data['status'] == 'success') {
          foreach ($response_data['products'] as $service) {
            if ($shipping_service['service_code'] == $service['service_code']) {
              // Populate only the service that we want on this call.
              // Return from NZPost is all rates available for this order.
              $shipping_price = $service['price_including_gst'] * $rate_request['packages'];
              if ($shipping_price == 0) {
                return FALSE;
              }
              $shipping_service['display_name'] = $shipping_service['name'] . $shipping_service['description'];
              $rates[$shipping_service['name']] = array(
                'amount' => commerce_currency_decimal_to_amount($shipping_price, 'NZD'),
                'currency_code' => 'NZD',
                'data' => array(),
              );

              // Cache the calculated rates for subsequent requests.
              commerce_shipping_rates_cache_set('nzpost', $order, $rates);
            }
          }
        }
      }
    }
  }

  // Return the rate for the requested service or FALSE if not found.
  return isset($rates[$shipping_service['name']]) ? $rates[$shipping_service['name']] : FALSE;
}

/**
 * Convenience function to get NZ Post codes for their services.
 * @TODO: add National post & courier options
 * @TODO replace this with a more robust solution that lifts the data below from
 *    the NS Post JSON response instead of using our own text & codes
 * @TODO Accept the 10-25 day service is never coming back
 */
function _commerce_nzpost_service_list() {
  $services = array(
    // International services.
    // Service no longer available, left in in case they bring it back
//    'TIELP' => array(
//      'title' => t('International Economy'),
//      'description'  => t('10-25 working days'),
//      'service_code' => 'TIELP',
//      'destination'  => 'international',
//    ),
    //Unclear if this service code still exists, awaiting news from NZ Post
    'TIALP' => array(
      'title' => t('International Air'),
      'description'  => t('3-10 working days'),
      'service_code' => 'TIALP',
      'destination'  => 'international',
    ),
    //Code change for Internationl air? No notification of change from NZ Post
    //so above code left in in case it reverts or is used in some cases
    'TIASPC' => array(
      'title' => t('International Air Small Package'),
      'description'  => t('3-10 working days'),
      'service_code' => 'TIASPC',
      'destination'  => 'international',
    ),
    'TIEC'  => array(
      'title' => t('International Economy Courier'),
      'description'  => t('2-6 working days - Tracked, Signature required'),
      'service_code' => 'TIEC',
      'destination'  => 'international',
    ),
    'TIEX'  => array(
      'title' => t('International Express Courier'),
      'description'  => t('1-5 working days - Tracked, Signature required'),
      'service_code' => 'TIEX',
      'destination'  => 'international',
    ),
  );

  // Make a unique ID to identify the service.
  foreach ($services as $key => $service) {
    $service['slug'] = str_replace(' - ', '-', drupal_strtolower($service['title']));
    $service['slug'] = str_replace(' ', '_', $service['slug']);
    $services[$key] = $service;
  }

  return $services;
}

/**
 * Returns a computer friendly slug for a service code.
 */
function commerce_nzpost_commerce_shipping_service_name($service_code) {
  $service_names = _commerce_nzpost_service_list();
  return $service_names[$service_code]['slug'];
}
