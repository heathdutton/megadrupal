<?php
/**
 * @file
 * Pull and display AvantLink affiliate links.
 *
 *
 *
 */

define('AVANTLINKER_MENU_PATH', 'admin/config/content/avantlinker');

/**
 * Implements hook_menu().
 */
function avantlinker_menu() {
  $items[AVANTLINKER_MENU_PATH] = array(
    'title' => 'AvantLinker',
    'description' => 'Manage AvantLink affiliate tools.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avantlinker_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer avantlinker'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 0,
    'file' => 'avantlinker.admin.inc',
  );
    $items[AVANTLINKER_MENU_PATH . '/settings'] = array(
    'title' => 'Settings',
    'description' => 'AvantLink Settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avantlinker_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer avantlinker'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
    'file' => 'avantlinker.admin.inc',
  );
  $items['avantlink-search-results'] = array(
    'title' => 'Wow Catching On Here.',
    'title callback' => 'avantlinker_results_title',
    'page callback' => 'avantlinker_product_import_display',
    'access callback' => TRUE,
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items[AVANTLINKER_MENU_PATH . '/link_encoder'] = array(
    'title' => 'Affiliate Link Encoder',
    'description' => 'Uses JavaScript to convert direct-to-merchants links to affiliate-tracking links.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avantlinker_ui_activate_link_encoder_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer avantlinker'),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
    'file' => 'avantlinker.admin.inc',
  );
  $items[AVANTLINKER_MENU_PATH . '/product_search'] = array(
    'title' => 'Product Search',
    'description' => 'To display the product search form for AvantLink merchant products.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avantlinker_ui_product_search_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer avantlinker'),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
    'file' => 'avantlinker.admin.inc',
  );
  $items[AVANTLINKER_MENU_PATH . '/related_products'] = array(
    'title' => 'Related Products',
    'description' => 'To display products related to preselected keywords.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avantlinker_related_products_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer avantlinker'),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
    'file' => 'avantlinker.admin.inc',
  );

  return $items;
}

/**
 * Title callback function for search results.
 *
 * Sets the title on the Product Search results page.
 */
function avantlinker_results_title() {
  return t('Product Search Results');
}

/**
 * Implements hook_permission().
 */
function avantlinker_permission() {
  return array(
    'administer avantlinker' => array(
      'title' => t('Administer AvantLinker'),
      'description' => t('Perform administration tasks for AvantLinker.')),
  );
}

/**
 * Implements hook_node_load().
 *
 * This is for the ALE implementation.
 */
function avantlinker_node_load($node, $type) {
  $ale_subscription_id = variable_get('avantlinker_ale_subscription_id', array());
  $ale_active = variable_get('avantlinker_deactivate_ale', array('deactivate' => 0));
  if (in_array('avant', $type) || in_array('page', $type) || in_array('article', $type) && $ale_active['deactivate'] == 0) {
    drupal_add_js('http://www.avantlink.com/ale/ale.php?ti=' . $ale_subscription_id, 'external');
  }
}

/**
 * Implements hook_node_info().
 *
 * Create a content type called avant for the module.
 */
function avantlinker_node_info() {
  return array(
    'avant' => array(
      'name' => t('Avant'),
      'base' => 'avantlinker',
      'description' => t('Use this for AvantLinker related content.'),
      'has_title' => TRUE,
      'title_lable' => t('Title'),
      'help' => t('See AvantLinker module for using this content type.'),
    ),
  );
}

/**
 * Implements hook_form().
 */
function avantlinker_form($node, $form_state) {
  // Allows avant content type to show at /admin/structure/types
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_block_info().
 *
 * Containers for product search form and related products display.
 * We create the blocks here but leave the administrator the job of enabling it.
 * Then it can be placed where needed and used with the theme and content type desired.
 */
function avantlinker_block_info() {
  $blocks = array();
  $blocks['product_search'] = array(
    'info' => t('AvantLinker Product Search'),
    'weight' => -6,
    'cache' => DRUPAL_NO_CACHE,
    'visibility' => 2,
    'pages' => '<?php
$match = FALSE;
$types = array(\'avant\' => 1);

  if ((arg(0) == \'node\') && is_numeric(arg(1))) {
    $node = node_load(arg(1));
    $match = isset($types[$node->type]);
  }

  if (substr(request_uri(), 0, 25) == "/avantlink-search-results") {
    $match = TRUE;
  }

return $match;
?>',
  );
  $blocks['related_products'] = array(
    'info' => t('AvantLinker Related Products'),
    'weight' => -5,
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function avantlinker_block_view($delta = '') {
  $block = array(
    'subject' => '',
    'content' => '',
  );
  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'avantlinker') .
    '/avantlinker_api.inc';
  if (user_access('access content')) {
  switch ($delta) {
    case 'product_search';
      $block['content'] = drupal_get_form('avantlinker_product_search_global_form');
      break;
    case 'related_products';
      $result = avantlinker_display_related_products();
      if ($result == FALSE) {
      break;
      }
      $d_title = variable_get('avantlinker_related_products_title');
      if ($d_title == '') {
        $title = "Related Products";
      }
      else {
        $title = $d_title;
      }
      $block['subject'] = t("@title", array('@title' => $title));
      // Create individual products listed.
      $items = array();
      foreach ($result as $product) {
        $items[] = array(
          'data' => array(
            '#theme' => 'avantlinker_block_item',
            '#product' => $product,
          ),
          'class' => array('rp_list'),
        );
      }
      unset($product);
      if (!empty($items)) {
        // Theme the list of products.
        $block['content']['list'] = array(
          '#theme' => 'item_list__avantlinker',
          '#items' => $items,
          '#pre_render' => array('avantlinker_item_list_child_render'),
        );
        // Add a CSS file to style the block.
        $block['content']['#attached']['css'][] = drupal_get_path('module', 'avantlinker') . '/css/avantlinker.css';
      }
      break;
  }
  }
  return $block;
}

/**
 * Render the child elements of theme_item_list() before its data is themed.
 */
function avantlinker_item_list_child_render($elements) {
  foreach (array_keys($elements['#items']) AS $key) {
    // Take the renderable array that we set in avantlinker_block_view() and
    // render it into the string that theme_item_list() expects.
    if (is_array($elements['#items'][$key]['data'])) {
      $elements['#items'][$key]['data'] = drupal_render($elements['#items'][$key]['data']);
    }
  }
  return $elements;
}

/**
 * Implements hook_theme().
 */
function avantlinker_theme() {
  return array(
    'avantlinker_block_item' => array(
      'template' => 'avantlinker-block-item',
      'variables' => array('product' => NULL,
      ),
      'pattern' => 'avantlinker_block_item__'
    ),
    'avantlinker_search_result' => array(
      'template' => 'avantlinker-search-result',
      'variables' => array('search' => NULL,
      ),
    ),
  );
}

/**
 * Preprocesses avantlinker related products block item variables.
 *
 */
function template_preprocess_avantlinker_block_item(&$variables) {
  $product = $variables['product'];
  $variables['product_name'] = $product['Product_Name'];
  $variables['buy_url'] = $product['Buy_URL'];
  $variables['thumbnail_image'] = $product['Thumbnail_Image'];
  $variables['sale_price'] = $product['Sale_Price'];
  $sale_price = $variables['sale_price'];
  $retail_price = $product['Retail_Price'];
  if (!empty($retail_price)) {
    $retail_price = drupal_substr($retail_price, 1);
    $sale_price = drupal_substr($sale_price, 1);
    // calculate percent off
    $percent_off = round(100 * ($retail_price - $sale_price) / $retail_price);
    $variables['percent_off'] = $percent_off;
  }
  $target = variable_get('avantlinker_block_link_target', array('pick' => 0));
  if ($target['pick'] !== 0) {
    $variables['target'] = 'target="_blank"';
  }
  else {
    $variables['target'] = 'target="_self"';
  }
}

/**
 * Preprocesses avantlinker product search template variables.
 *
 */
function template_preprocess_avantlinker_search_result(&$variables) {
  $search = $variables['search'];
  $variables['product_name'] = $search['Product_Name'];
  $variables['buy_url'] = $search['Buy_URL'];
  $variables['thumbnail_image'] = $search['Thumbnail_Image'];
  $variables['sale_price'] = $search['Sale_Price'];
  $variables['brand_name'] = $search['Brand_Name'];
  $variables['merchant_name'] = $search['Merchant_Name'];
  $variables['short_description'] = $search['Abbreviated_Description'];
  $variables['retail_price'] = $search['Retail_Price'];
  $target = variable_get('avantlinker_search_link_target', array('apply' => 0));
  if ($target['apply'] !== 0) {
    $variables['target'] = 'target="_blank"';
  }
  else {
    $variables['target'] = 'target="_self"';
  }
}

/**
 * Define the product search global form.
 *
 * This form is added to a block and then positioned accordingly.
 */
function avantlinker_product_search_global_form($form, &$form_state) {
  $form['avantlinker_product_search_phrase'] = array(
    '#title' => t('Product Search'),
    '#type' => 'textfield',
    '#required' => FALSE,
    '#weight' => 20,
    '#size' => 20,
    '#maxlength' => 200,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
    '#weight' => 25,
  );

  return $form;
}

/**
 * Submit the AvantLinker Product Search form.
 *
 */
function avantlinker_product_search_global_form_submit($form, &$form_state) {
  $search_term = $form_state['values']['avantlinker_product_search_phrase'];
  $target = variable_get('avantlinker_product_search_path') . "/$search_term";
  $form_state['redirect'] = $target;
}

/**
 * Define product search import and display function.
 *
 * Wrapper for modified avantlink functions built for wordpress.
 *
 * @param $search_term
 *   Keyword entered into the product search form and passed in the URL.
 *
 * @see avantlinker_product_search_global_form_submit()
 *
 * @return
 *   Search results in html form ready for the browser.
 */

function avantlinker_product_import_display($search_term = '') {
  require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'avantlinker') .
    '/avantlinker_api.inc';
  drupal_add_css(drupal_get_path('module', 'avantlinker') . '/css/avantlinker.css', 'file');
  $content = '';
  if (user_access('access content')) {
    $result = avantlinker_display_product_search_results($search_term);
    if (is_array($result)) {
      foreach ($result as $search) {
        $content .= theme('avantlinker_search_result', array('search' => $search));
      }
      unset($search);
    }
  }
  if (empty($content)) {
    return $result;
  }
  return $content;
}

/**
 * Implements hook_help().
 */
function avantlinker_help($path, $arg) {
  if ($path == 'admin/help#avantlinker') {
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('AvantLinker is for affiliates with the AvantLink network. It gives access to AvantLink\'s
      Affiliate Link Encoder (ALE), Product Search, and Related Products ad display.') . '</p>';
    $output .= '<h3>' . t('Configuration') . '</h3>';
    $output .= '<dl>';
    $output .= '<dt>' . t('Settings') . '</dt>';
    $output .= '<dd>' . t('These are used to tie you and your site to AvantLink for proper link tracking and use
      of their API.') . '</dd>';
    $output .= '<dt>' . t('Affiliate Link Encoder') . '</dt>';
    $output .= '<dd>' . t('You set up a subscription for ALE at avantlink.com and enter the ID number here. You
      can also disable the ALE feature site wide here if you choose.') . '</dd>';
    $output .= '<dt>' . t('Product Search') . '</dt>';
    $output .= '<dd>' . t('Only two items for Product Search and they can easily be left to default.') . '</dd>';
    $output .= '<dt>' . t('Related Products') . '</dt>';
    $output .= '<dd>' . t('Configure global settings for Related Products display here. Keywords can be added on a per content basis, but if none are entered the global keywords will be used. There is the option to turn this global feature off entirely and to set the number of products shown.');
    $output .= '</dd></dl>';
    return $output;
  }
}