<?php
/**
 * @file
 * Install, update, and uninstall functions for AvantLinker.
 *
 */

/**
 * Implements hook_install().
 */
function avantlinker_install() {
  // Set some default variables but leave them empty.
  variable_set('avantlinker_api_key', '');
  variable_set('avantlinker_affiliate_id', '');
  variable_set('avantlinker_website_id', '');
  variable_set('avantlinker_deactivate_ale', array('deactivate' => 0));
  variable_set('avantlinker_ale_subscription_id', '');
  variable_set('avantlinker_product_search_path', 'avantlink-search-results');
  variable_set('avantlinker_search_results_number', 10);
  variable_set('avantlinker_apply_to_all', array('apply' => 'apply'));
  variable_set('avantlinker_related_products_title', 'Related Products');
  variable_set('avantlinker_global_keywords', '');
  variable_set('avantlinker_global_negative_keywords', '');
  variable_set('avantlinker_products_number', 5);

  // Add node type named avant.
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['avant']);
  $body_instance = field_info_instance('node', 'body', 'avant');
  $body_instance['type'] = 'text_summary_or_trimmed';
  field_update_instance($body_instance);


  // Create field for etailer profile
  foreach (_avantlinker_installed_fields() as $field) {
    field_create_field($field);
  }
  // Create all the instances for our field
  foreach (_avantlinker_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'avant';
    field_create_instance($instance);
  }
}

/**
 * Return a structured array defining the fields created by this content type.
 *
 * This is packaged in a function so it can be used in both
 * node_example_install() and node_example_uninstall().
 */
function _avantlinker_installed_fields() {
  $t = get_t();
  return array(
    'avantlinker_keywords' => array(
      'field_name' => 'avantlinker_keywords',
      'cardinality' => 1,
      'module' => 'text',
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 255,
      ),
    ),
    'avantlinker_neg_words' => array(
      'field_name'  => 'avantlinker_neg_words',
      'cardinality' => 1,
      'module' => 'text',
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 255,
      ),
    ),
      'avantlinker_rp_off' => array(
      'field_name' => 'avantlinker_rp_off',
      'cardinality' => 1,
      'module' => 'text',
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 3,
      ),
    ),
  );
}

/**
 * Return a structured array defining the instances for this content type.
 *
 * The instance lets Drupal know which widget to use to allow the user to enter
 * data and how to react in different view modes.  We are going to display a
 * page that uses a custom "node_example_list" view mode.  We will set a
 * cardinality of three allowing our content type to give the user three color
 * fields.
 *
 * This is provided as a function so that it can be used in both hook_install()
 * and hook_uninstall().
 */
function _avantlinker_installed_instances() {
  $t = get_t();
  return array(
    'avantlinker_keywords' => array(
      'field_name' => 'avantlinker_keywords',
      'label'       => $t('Keywords for products to be searched.'),
      'bundle' => 'avant',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'weight' => 10,
          'type' => 'hidden',
        ),
      ),
    ),
    'avantlinker_neg_words' => array(
      'field_name'  => 'avantlinker_neg_words',
      'label' => $t('Negative keywords.'),
      'bundle' => 'avant',
      'type'        => 'text',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'weight' => 10,
          'type' => 'hidden',
        ),
      ),
    ),
      'avantlinker_rp_off' => array(
      'field_name' => 'avantlinker_rp_off',
      'label'       => $t('Show related products: Enter "off" without quotes to kill otherwise leave blank.'),
      'bundle' => 'avant',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'weight' => 10,
          'type' => 'hidden',
        ),
      ),
    ),
  );
}

/**
 * Implements hook_uninstall().
 *
 * Content type avant is not uninstalled because the content could be used for other purposes
 * and needs to be preserved.
 */
function avantlinker_uninstall() {
  // Delete all the avantlinker variables and then clear the variable cache
  db_query("DELETE FROM {variable} WHERE name LIKE 'avantlinker_%'");
  cache_clear_all('variables', 'cache');

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  // http://api.drupal.org/api/function/field_delete_field/7
  foreach (array_keys(_avantlinker_installed_fields()) as $field) {
    field_delete_field($field);
  }

  // Purge all field infromation
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
}
