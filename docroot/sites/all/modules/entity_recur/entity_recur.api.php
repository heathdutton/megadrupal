<?php

/**
 * Implements hook_entity_recur_access_alter().
 *
 * Alter the access control for the entity recur form
 *
 * @param &$access
 *   Boolean status of access for the current user.
 * @param $entity_type
 *   The entity type of the entity being recurred.
 * @param $entity
 *   The entity being recurred.
 */
function hook_entity_recur_access_alter(&$access, $entity_type, $entity) {
  if ($entity_type == 'node' && $entity->type == 'story') {
    $access = TRUE;
  }
}

/**
 * Implements hook_entity_recur_batch_redirect_alter().
 *
 * Alter redirect path after a batch operation. This is only invoked
 * when recurring existing entities, not new entities.
 *
 * @param &$path
 *   The path that the user will be redirected to after recurring an entity.
 * @param $entity_type
 *   The entity type of the entity being recurred.
 * @param $entity
 *   The entity being recurred.
 */
function hook_entity_recur_batch_redirect_alter(&$path, $entity_type, $entity = NULL) {
  if ($entity_type == 'node' && $entity) {
    $path = 'node/' . $entity->nid . '/edit';
  }
}

/**
 * Implements hook_entity_recur_validate_dates().
 *
 * This hook is invoked when validating the entity recur date form. It will
 * only be called if there are no recorded validation errors found by
 * this module.
 *
 * @param $entity_type
 *   The entity type of the entity being recurred.
 * @param $entity
 *   The entity being recurred.
 * @param $form_state
 *   The form's form state array.
 * @return
 *   An array of errors to be printed to the screen. Each error is an
 *   array with the keys 'field' (the name of the field) and 'error'
 *   (the message to print to the screen).
 */
function hook_entity_recur_validate_dates($entity_type, $entity, $form_state) {
  $errors = array();
  if ($entity_type == 'node' && $entity->type == 'class') {
    if ($form_state['values']['option'] == 'days') {
      if (isset($form_state['values']['days']['monday'])) {
        $errors[] = array(
          'field' => 'days',
          'message' => t('Classes cannot occur on Monday.'),
        );
      }
      if (isset($form_state['values']['days']['tuesday'])) {
        $errors[] = array(
          'field' => 'days',
          'message' => t('Classes cannot occur on Tuesday.'),
        );
      }
    }
  }
  return $errors;
}

/**
 * Implements hook_entity_recur_dates_alter().
 *
 * Modify the recurring dates before they are used to recur entities.
 *
 * @param &$dates
 *   An array of start and end dates, keyed by 'start' and 'end'. The
 *   dates are in timestamp format.
 * @param $variables
 *   An array of variables supplied by and generated by the entity recur
 *   form. The possible available values are:
 *     entity: The entity being recurred.
 *     entity_type: The entity type of the entity being recurred.
 *     start_date: The initial starting date of the entity (ie, '2012-10-22 15:45:00').
 *     end_date: The initial ending date of the entity, if one exists (ie, '2012-10-22 16:45:00').
 *     option: The recurring option selected.
 *     until: The date (timestamp) to recur until.
 *     days: An array of days selected, if the 'days' option was used.
 *     frequency: The selected frequency, if the 'rules' option was used.
 *     period: The selected period, if the 'rules' option was used.
 *     weekends: TRUE if weekends should be included, otherwise FALSE, if the 'rules' option was used.
 */
function hook_entity_recur_dates_alter(&$dates, $variables) {

}

/**
 * Implements ENTITY_TYPE_entity_recur_recur_menu_path().
 *
 * Return the menu path on which the entity recur form should appear. This hook
 * should be defined in the module providing the entity type.
 *
 * @param $entity_type
 *   The recurring entity type.
 * @return
 *   The path on which the recur form for this entity type should appear.
 */
function ENTITY_TYPE_entity_recur_recur_menu_path() {
  return 'my_entity_type/%entity_object/recur';
}

/**
 * Implements hook_entity_recur_recur_menu_path_alter().
 *
 * Alter the menu path on which the entity recur form should appear.
 *
 * @param &$path
 *   The menu path on which the entity recur form should appear.
 * @param $entity_type
 *   The recurring entity type.
 */
function hook_entity_recur_recur_menu_path_alter(&$path, $entity_type) {
  if ($entity_type == 'node') {
    $path = 'node/%node/my-recur-path';
  }
}

/**
 * Implements hook_default_entity_recur_settings_alter().
 * @param $settings
 *   The default settings
 */
function hook_default_entity_recur_settings_alter(&$settings) {
  $settings['node_article']->enabled = FALSE;
}
