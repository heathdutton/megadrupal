<?php
/**
 * @file
 * Install, update and schema hooks for the Entity Recur module.
 */

/**
 * Implements hook_schema().
 */
function entity_recur_schema() {
  $schema = array();

  $schema['entity_recur_settings'] = array(
    'description' => 'Containts Entity Recur settings per entity type and bundle',
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'id',
      'admin_title' => 'label',
      'identifier' => 'entity_recur_setting',
      'default hook' => 'default_entity_recur_settings',
      'status callback' => 'entity_recur_settings_status',
      'api' => array(
        'owner' => 'entity_recur',
        'api' => 'entity_recur',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'no export' => TRUE
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Unique ID for presets. Used to identify them programmatically.',
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'enabled' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'allow_past' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'max_duration' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'date_field' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'form' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'batch_limit' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'entity_type_bundle' => array('entity_type', 'bundle'),
      'name' => array('name'),
    ),
  );

  return $schema;
}

/**
 * Move settings to the new settings table.
 */
function entity_recur_update_7001() {
  $schema = entity_recur_schema();
  db_create_table('entity_recur_settings', $schema['entity_recur_settings']);
  $defaults = array(
    'enabled' => FALSE,
    'allow_past' => FALSE,
    'max_duration' => '0',
    'form' => FALSE,
    'batch_limit' => 50,
  );
  $variables = array(
    'enabled' => 'entity_recur_enabled',
    'form' => 'entity_recur_entity_form_form',
    'allow_past' => 'entity_recur_allow_past_dates',
    'max_duration' => 'entity_recur_max_span',
    'batch_limit' => 'entity_recur_batch_limit',
    'date_field' => 'entity_recur_date_field',
  );
  foreach (entity_get_info() as $entity_type => $entity_info) {
    foreach ($entity_info['bundles'] as $bundle => $bundle_info) {
      $exists = FALSE;
      $setting = array(
        'name' => "{$entity_type}_{$bundle}",
        'label' => "{$entity_info['label']} {$bundle_info['label']}",
        'entity_type' => $entity_type,
        'bundle' => $bundle,
        'date_field' => '',
      ) + $defaults;
      foreach ($variables as $prop => $var) {
        $val = variable_get("{$var}_{$entity_type}_{$bundle}", '__does_not_exist__');
        if ($val != '__does_not_exist__') {
          $exists = TRUE;
          $setting[$prop] = $val;
        }
        variable_del("{$var}_{$entity_type}_{$bundle}");
      }
      if ($exists) {
        $object = (object)$setting;
        entity_recur_settings_save($object);
      }
    }
  }
}
