<?php
/**
 * @file
 * Drupal module file for civicrm_private_report module.
 *
 */

module_load_include('php', 'civicrm_private_report', 'civi_hooks');
module_load_include('php', 'civicrm_private_report', 'functions');

/**
 * Implements hook_help().
 */
function civicrm_private_report_help($path, $arg) {
  switch ($path) {
    case 'admin/help#civicrm_private_report':
      // Return a line-break version of the module README.txt
      $readme_file = dirname(__FILE__) . "/README.txt";
      if (file_exists($readme_file)) {
        return check_markup(file_get_contents($readme_file));
      }
      break;
  }
}

/**
 * Implements hook_permission().
 */
function civicrm_private_report_permission() {
  $items = array(
    'administer own CiviCRM reports' => array(
      'title' => t('administer own CiviCRM reports'),
      'description' => t('Use "save as" function to copy a report into user\'s own private collection.'),
    ),
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function civicrm_private_report_theme() {
  $items = array(
    'civicrm_private_report_user_filter' => array(
      'render element' => 'form',
      'file' => 'functions.php',
    ),
  );
  return $items;
}

/**
 * Implements hook_menu().
 */
function civicrm_private_report_menu() {
  $items = array();
  $items['civicrm_private_report/list'] = array(
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
    'title' => 'My user-private reports',
    'page callback' => '_civicrm_private_report_menu_list',
    'access callback' => '_civicrm_private_report_menu_access_list',
  );
  $items['civicrm_private_report/list/all'] = array(
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
    'title' => 'User-private reports',
    'page callback' => '_civicrm_private_report_menu_list_all',
    'access arguments' => array('administer Reports'),
  );
  $items['civicrm_private_report/delete/%'] = array(
    'type' => MENU_CALLBACK,
    'access callback' => '_civicrm_private_report_menu_access_delete',
    'access arguments' => array(2),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_civicrm_private_report_menu_delete_confirm_form', 2),
  );
  return $items;
}

/**
 * Implements hook_user_delete().
 * Deletes the user's private reports when the user is deleted.
 */
function civicrm_private_report_user_delete($account) {
  $instance_ids = _civicrm_private_report_get_rows(array('instance_id'), array('uid' => $account->uid), array(), TRUE);
  $success = 0;
  $failure = 0;
  foreach ($instance_ids as $instance_id) {
    if (_civicrm_private_report_delete($instance_id)) {
      $success++;
    }
    else {
      $failure++;
    }
  }
  $message = '';
  if ($success) {
    $args = array(
      '!count' => $success,
      '%name' => $account->name,
    );
    drupal_set_message(t('!count user-private reports were deleted for the user %name.', $args));
  }
  if ($failure) {
    $args = array(
      '!count' => $success,
      '%name' => $account->name,
    );
    drupal_set_message(t('!count user-private reports for the user %name could not be deleted.', $args), 'error');
  }
}

