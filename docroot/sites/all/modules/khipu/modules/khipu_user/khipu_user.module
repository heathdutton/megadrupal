<?php

/**
 * @file
 * Allows each user on the site can associate khipu accounts on their profiles.
 */

/**
 * Implements hook_permission().
 */
function khipu_user_permission() {
  return array(
    'user can setting a khipu account' => array(
      'title' => t('The user can set up khipu accounts on their profile'),
    ),
    'khipu user administer' => array(
      'title' => t('See all Khipu Accounts for each user'),
    ),
  );
}


/**
 * Implements hook_user_categories().
 */
function khipu_user_user_categories() {
  $output[] = array(
    'name' => 'khipu_account',
    'title' => t('Khipu Account'),
    'weight' => 3,
    'access callback' => 'khipu_user_page_setting_access',
  );
  return $output;
}


/**
 * Implements hook_menu_alter().
 */
function khipu_user_menu_alter(&$items) {
  $items['user/%user_category/edit/khipu_account']['page callback'] = 'khipu_user_page_setting';
  $items['user/%user_category/edit/khipu_account']['page arguments'] = array(1);
  $items['user/%user_category/edit/khipu_account']['file'] = 'khipu_user.pages.inc';
  $items['user/%user_category/edit/khipu_account']['module'] = 'khipu_user';
}

/**
 * Implements hook_menu().
 */
function khipu_user_menu() {
  $items['user/%user/edit/khipu_account/add'] = array(
    'title' => 'Add Khipu Account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('khipu_user_account_form'),
    'access arguments' => array(1),
    'access callback' => 'khipu_user_add_account_access',
    'type' => MENU_LOCAL_ACTION,
    'tab_parent' => 'user/%/edit/khipu_account',
    'file' => 'khipu_user.pages.inc',
  );

  $items['user/%user/edit/khipu_account/%khipu_account/test'] = array(
    'title' => 'Test Account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('khipu_user_test_account', 1, 4),
    'access arguments' => array(1, 4),
    'access callback' => 'khipu_user_page_setting_account_access',
    'file' => 'khipu_user.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );

  $items['user/%user/edit/khipu_account/%khipu_account/edit'] = array(
    'title' => 'Edit Khipu Account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('khipu_user_account_form', 1, 4),
    'access arguments' => array(1, 4),
    'access callback' => 'khipu_user_page_setting_account_access',
    'file' => 'khipu_user.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,

  );

  $items['user/%user/edit/khipu_account/%khipu_account/delete'] = array(
    'title' => 'Delete Khipu Account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('khipu_user_account_delete_form', 1, 4),
    'access arguments' => array(1, 4),
    'access callback' => 'khipu_user_page_setting_account_access',
    'file' => 'khipu_user.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 3,
  );

  return $items;
}


/**
 * Implements hook_user_load().
 */
function khipu_user_user_load($users) {
  $result = db_query('SELECT * FROM {khipu_accounts} WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
  foreach ($result as $record) {
    $users[$record->uid]->khipu_accounts[$record->kaid] = $record;
  }
}


/**
 * Determines whether the current user may setup the khipu account of this user.
 */
function khipu_user_page_setting_access($account) {
  global $user;

  if (user_access('khipu user administer')) {
    return TRUE;
  }
  if ($user->uid == $account->uid && user_access('user can setting a khipu account')) {
    return TRUE;
  }
  return FALSE;
}


/**
 * Determines if the user can create more khipu accounts for this user.
 */
function khipu_user_add_account_access($account) {

  if (!khipu_user_page_setting_access($account)) {
    return FALSE;
  }

  if (!khipu_user_can_create_more_accounts($account)) {
    return FALSE;
  }

  return TRUE;
}


/**
 * Determines if the user can access to see this khipu account.
 *
 * @param object $account
 *   The user object.
 */
function khipu_user_page_setting_account_access($account, $khipu_account) {
  // If this khipu account no exist on this user return FALSE.
  if (!isset($account->khipu_accounts[$khipu_account->kaid])) {
    return FALSE;
  }
  if (!khipu_user_page_setting_access($account)) {
    return FALSE;
  }
  return TRUE;
}


/**
 * Determines if the user can create more khipu accounts.
 *
 * @param object $account
 *   The user object.
 */
function khipu_user_can_create_more_accounts($account) {
  $limit = variable_get('khipu_user_limit_accounts', 1);
  if (isset($account->khipu_accounts)) {
    $khipu_accounts_number = count($account->khipu_accounts);
  }
  else {
    $khipu_accounts_number = 0;
  }
  if ($khipu_accounts_number >= $limit) {
    return FALSE;
  }

  return TRUE;
}


/**
 * Implements hook_form_BASE_FORM_ID_alter() for khipu_admin_settings_form().
 */
function khipu_user_form_khipu_admin_settings_form_alter(&$form, &$form_state) {
  $form['khipu_user'] = array(
    '#type' => 'fieldset',
    '#title' => t('Khipu per User'),
  );
  $form['khipu_user']['khipu_user_limit_accounts'] = array(
    '#title' => t('Limit Accounts'),
    '#type' => 'textfield',
    '#size' => 10,
    '#description' => t('Defines the khipu accounts limit per user.'),
    '#default_value' => variable_get('khipu_user_limit_accounts', 1),
    '#element_validate' => array('element_validate_integer_positive'),
    '#required' => TRUE,
  );
}
