<?php
/**
 * @file
 *
 * Main code for Socrata Filter module
 */

/**
 * Implements hook_filter_info
 */
function socrata_filter_filter_info() {
  $filters = array();

  $filters['socrata_filter'] = array(
    'title' => t('Embed Socrata dataset views'),
    'description' => t('Allow users to embed a Socrata dataset\'s default view in an editable content area'),
    'process callback' => '_socrata_filter_process',
    'settings callback' => '_socrata_filter_settings',
    'tips callback' => '_socrata_filter_tips',
    'default settings' => array(
      'width' => 500,
      'height' => 425,
    ),
  );

  return $filters;
}

/**
 * Implements hook_theme
 */
function socrata_filter_theme($existing, $type, $theme, $path) {
  $items = array();

  $items['socrata_filter'] = array(
    'variables' => array(
      'source' => NULL,
      'filter' => NULL,
      'width' => NULL,
      'height' => NULL,
    ),
    'template' => 'socrata_filter',
    'path' => $path . '/theme',
  );

  return $items;
}

/**
 * Preprocess hook for socrata_filter
 */
function template_preprocess_socrata_filter(&$vars) {
  $settings = isset($vars['filter']) ? $vars['filter']->settings : array(
    'width' => 525,
    'height' => 400,
  );

  // Make sure we have some valid values to pass on, using default Socrata "small" embed sizes in the event something goes horribly wrong
  if (empty($vars['width'])) {
    $vars['width'] = !empty($settings['width']) ? $settings['width'] : 525;
  }
  if (empty($vars['height'])) {
    $vars['height'] = !empty($settings['height']) ? $settings['height'] : 400;
  }

  // Load our source
  // @todo: switch to getSource
  ctools_include('export');
  $source = ctools_export_crud_load('socrata_sources', $vars['source']);
  if ($source) {
    // Construct dataset-specific template variables
    $vars['source'] = (array) $source;
    $components = socrata_components_from_endpoint($source->endpoint);
    $vars['dataset'] = $components['dataset_id'];

    // Now try to construct the embed URL using the fully-resolved endpoint
    $endpoint = _socrata_resolve_redirects($source->endpoint);
    $components = socrata_components_from_endpoint($endpoint);
    $vars['embed_url'] = "https://{$components['host']}/w/{$vars['dataset']}";
  }
}

/**
 * Implements process callback for socrata_filter
 */
function _socrata_filter_process($text, $filter, $format, $langcode, $cache, $cache_id) {
  $text = preg_replace_callback(
    '/\[socrata((?:\s).*)]/i',
    function ($matches) use ($filter) {
      $retval = '';
      if (isset($matches[1])) {
        $attrs = explode(' ', trim($matches[1]));
        foreach ($attrs as $attr) {
          list($name, $val) = explode('=', trim($attr), 2);
          $vars[$name] = $val;
        }
        $vars['filter'] = $filter;
        $retval = theme('socrata_filter', $vars);
      }
      return $retval;
    },
    $text
  );

  return $text;
}

/**
 * Implements settings callback for socrata_filter
 */
function _socrata_filter_settings($form, &$form_state, $filter, $format, $defaults, $filters) {
  $filter->settings += $defaults;

  $elements = array();

  $elements['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Default width of embed'),
    '#description' => t('The default width of the embedded Socrata view (in pixels) to use if not specified in the embed tag'),
    '#default_value' => $filter->settings['width'],
  );

  $elements['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Default height of embed'),
    '#description' => t('The default height of the embedded Socrata view (in pixels) to use if not specified in the embed tag'),
    '#default_value' => $filter->settings['height'],
  );

  return $elements;
}

/**
 * Implements tips callback for socrata_filter
 */
function _socrata_filter_tips($filter, $format, $long) {
  if ($long) {
    return t(
      'Embed Socrata views using @embed. Values for width and height are optional, if left off the default values configured on the %filter input filter will be used',
      array(
        '@embed' => '[socrata dataset=<source_name> width=<width> height=<height>]',
        '%filter' => 'Embed Socrata dataset views',
        )
    );
  }
  else {
    return t('Embed Socrata views using @embed', array('@embed' => '[socrata dataset=<source_name> width=<width> height=<height>]'));
  }
}
