<?php
/**
 * @file
 */

/**
 * Implements hook_hook_info();
 */
function workers_hook_info() {
  return array(
    'workers_info' => array(
      'group' => 'workers',
    ),
  );
}

function workers_execute($worker, $limit = NULL) {
  $info = workers_info();

  if (!isset($info[$worker])) {
    throw new Exception("Unknown worker: $worker");
  }

  $count = 0;
  $first_iteration = TRUE;
  $task_found_in_previous_iteration = FALSE;
  while (TRUE) {
    $task_found = FALSE;
    foreach ($info[$worker]['actions'] as $name => $action) {
      $function = isset($action['callback']) ? $action['callback'] : $name;
      $params = isset($action['params']) ? $action['params'] : NULL;
      try {
        if ($function($params, $name, $worker)) {
          $count++;
          $task_found = TRUE;
          break;
        }
      }
      catch (Exception $e) {
        watchdog_exception('workers', $e, NULL, array(), WATCHDOG_ERROR);
      }
    }
    if ((!$first_iteration && !$task_found && !$task_found_in_previous_iteration) || ($limit && ($count == $limit))) {
      break;
    }
    $task_found_in_previous_iteration = $task_found;
    $first_iteration = FALSE;
  }
}

function workers_info() {
  $cache = &drupal_static(__FUNCTION__);

  if (!isset($cache)) {
    $cache = module_invoke_all('workers_info');
    drupal_alter('workers_info', $cache);
  }

  return $cache;
}
