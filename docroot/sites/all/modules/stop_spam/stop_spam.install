<?php

/**
 * Implements hook_install().
 */
function stop_spam_install() {
  // Set the weight to 10 (to run form alter after Mollom).
  db_update('system')
    ->condition('type', 'module')
    ->condition('name', 'stop_spam')
    ->fields(array(
      'weight' => 10,
    ))
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function stop_spam_uninstall() {
  // Remove settings vars.
  db_delete('variable')
    ->condition('name', 'stop_spam_%', 'LIKE')
    ->execute();
}

/**
 * Implements hook_requirements().
 */
function stop_spam_requirements($phase) {
  $requirements = array();

  $loaded = extension_loaded('DOM');
  $requirements["stop_spam_dom"] = array(
    'title' => 'DOM',
    'value' => $loaded ? t('Loaded') : t('Not loaded'),
    'severity' => $loaded ? REQUIREMENT_OK : REQUIREMENT_ERROR,
    'description' => $loaded ? NULL : t('Stop Spam module requires PHP\'s <a href="!url">Document Object Model</a>.', array(
      '!url' => 'http://php.net/manual/en/book.dom.php',
    )),
  );

  return $requirements;
}

/**
 * Implements hook_schema().
 */
function stop_spam_schema() {
  $schema = array();
  
  $schema['stop_spam_links'] = array(
    'description' => 'Links index',
    'fields' => array(
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Entity type, e.g. "comment", "node".',
      ),
      'entity_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Entity identifier.',
      ),
      'link_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Link index inside entity.',
      ),
      'field' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Entity field containing the link.',
      ),
      'host' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Link host.',
      ),
      'url' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
        'description' => 'URL of the link or image.',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time that the entity was created, or last edited, as a Unix timestamp.',
      ),
      'is_new' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => '1 for new links, 0 for old content',
      ),
    ),
    'primary key' => array(
      'entity_type',
      'entity_id',
      'link_id',
    ),
    'indexes' => array(
      'host' => array('host'),
      'timestamp' => array('timestamp'),
      'is_new' => array('is_new'),
    ),
  );
  
  return $schema;
}
