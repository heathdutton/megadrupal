<?php

/**
 * Module adapted/rewrited for Drupal7
 * by: Arthur Kiseljov aka firewolf on drupal.org
 * Date: July 8, 2012
 * Sponsored by: Consult and Design International, www.consultanddesign.com
 *
 * Original idea for Drupal6: http://drupal.org/project/workflow_content_permissions
 *
 */

/**
 * Implementation of hook_permission().
 *
 */
function workflow_content_permissions_permission() {
  $perms = array();

  $content_types = node_type_get_types();

  foreach ($content_types as $type) {
    $workflow = workflow_get_workflow_type_map_by_type($type->type);
    if ( $workflow ) {

      // Get all Workflow states for Workdlow_ID - $wid
      $workflow_states = workflow_get_workflow_states_by_wid($workflow->wid);

      foreach ( $workflow_states as $sid => $state_data ) {
        // Get State by State_ID - $sid
        $state = workflow_get_workflow_states_by_sid($state_data->sid);

        // Get all defined fields; like content_fields() in D6 CCK
        $content_fields = field_info_fields();

        if ($state)
        foreach ($content_fields as $field_name => $field) {

          if (isset($field['bundles']['node'])) { // some other fields not needed don't have bundles-node parameter
            if (in_array($type->type, $field['bundles']['node'])) { // this is array of types, where field exists
              // View permission
              $name = $type->type . ' (' . $state->state . '): ' . ' view '. $field_name;
              $perms[ $name ] = array(
                'title' => $name,
                'description' => t('View field "'. $field_name .'" for content type "'. $type->name .'" in state "'. $state->state .'"'),
              );
              // Edit permission
              $name = $type->type . ' (' . $state->state . '): ' . ' edit '. $field_name;
              $perms[ $name ] = array(
                'title' => $name,
                'description' => t('Edit field "'. $field_name .'" for content type "'. $type->name .'" in state "'. $state->state .'"'),
              );
            }
          }
        }
      }
    }
  }
  return $perms;
}

/**
 * Implementation of hook_field_access().
 *
 */
function workflow_content_permissions_field_access($op, $field, $tmp1, $node = NULL) {
  // Get State_ID for node
  $sid = workflow_node_current_state($node);

  if ($sid && isset($node->type)) {
    $state = workflow_get_workflow_states_by_sid($sid);
    switch ($op) {
      case 'view':
      case 'edit':
        return user_access($node->type . ' (' . $state->state . '): ' . ' ' . $op . ' '. $field['field_name']);
    }
  }
  return TRUE;
}
