<?php

/**
 * @file
 * Install, update and uninstall functions for Edge Suite module.
 */

/**
 * Implements hook_schema().
 */
function edge_suite_schema() {
  $schema['edge_suite_composition_definition'] = array(
    'description' => 'Composition definitions.',
    'fields' => array(
      'definition_id' => array(
        'description' => 'Internal ID of a composition.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'project_name' => array(
        'description' => 'Name of the project.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'composition_id' => array(
        'description' => 'CompositionId / Class Name of Stage DIV.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'archive_extension' => array(
        'description' => 'Archive file extension.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'info' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A serialized array of meta information.',
        'serialize' => TRUE,
        'serialized default' => 'a:0:{}',
      ),
      'uid' => array(
        'description' => 'Uid of the author.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the definition was created.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the definition was updated.',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('definition_id'),
  );


  $schema['edge_suite_composition_instance'] = array(
    'description' => 'Instances of a compositions.',
    'fields' => array(
      'instance_id' => array(
        'description' => 'Internal id of the instance.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'definition_id' => array(
        'description' => 'Definition reference.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'Label of the instance.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Type of the instance.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'config' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A serialized array of the configuration.',
        'serialize' => TRUE,
        'serialized default' => 'a:0:{}',
      ),
    ),
    'foreign keys' => array(
      'composition_definition' => array(
        'table' => 'edge_suite_composition_definition',
        'columns' => array('definition_id' => 'definition_id'),
      ),
    ),

    'primary key' => array('instance_id'),
  );
  return $schema;
}


/**
 * Implements hook_uninstall().
 */
function edge_suite_uninstall() {
  // TODO: do we really want to delete all the files?
  // TODO: move to hook_modules_uninstalled?
  if (is_dir('public://edge_suite')) {
    file_unmanaged_delete_recursive('public://edge_suite');
  }
  if (is_dir('private://edge_suite')) {
    file_unmanaged_delete_recursive('private://edge_suite');
  }
}


/**
 * Remove edge version field and add general serialized info field.
 */
function edge_suite_update_7000() {
  $info_field = array(
    'type' => 'text',
    'size' => 'big',
    'description' => 'A serialized array of meta information.',
    'serialize' => TRUE,
    'serialized default' => 'a:0:{}',
  );

  db_drop_field('edge_suite_composition_definition', 'edge_version');
  db_add_field('edge_suite_composition_definition', 'info', $info_field);
}
