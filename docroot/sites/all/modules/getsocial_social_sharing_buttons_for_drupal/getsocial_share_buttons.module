<?php

/**
 * @file
 * getsocial_share_buttons.module
 *
 * Implements drupal hooks to inject GetSocial library.
 * Loads the CSS and JS files to create admin configuration pages.
 */

/**
 * Implements hook_menu().
 */
function getsocial_share_buttons_menu() {

  $items = array();

  $items['admin/config/services/get_social'] = array(
    'title' => 'GetSocial sharing buttons Config',
    'description' => 'Configuration for GetSocial module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('getsocial_share_buttons_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Handle for configuration form.
 *
 * If the library already exists config form will
 * be showed otherwise register form is loaded.
 */
function getsocial_share_buttons_form($form, &$form_state) {

  $gs = getsocial_share_buttons_get_gs();

  if ($gs->api_key != 'not_set' && $gs->api_key != '-1') {
    return system_settings_form(getsocial_share_buttons_get_register_form());
  }
  else {
    return system_settings_form(getsocial_share_buttons_get_config_form());
  }
}

/**
 * Page callback: Get Social Sharing Buttons settings.
 *
 * @see getsocial_share_buttons_menu()
 *
 * Register form: allows user to register the website and load the library
 */
function getsocial_share_buttons_get_register_form() {

  $gs = getsocial_share_buttons_get_gs();

  if ($gs->api_key != 'not_set' && $gs->api_key != '-1') {
    return getsocial_share_buttons_get_config_form();
  }

  $form['main-bar-link']['header'] = array(
    '#prefix' => '<div class="gs-form-header">',
    array(
      '#type' => 'link',
      '#title' => '',
      '#href' => $gs->getsocialShareButtonsGsAccount() . "/sites/drupal",
      '#target' => 'blank',
      '#id' => 'logo-wrapper',
      '#attributes' => array('target' => '_blank'),
    ),
    '#suffix' => '</div>',
  );

  $form['#attributes'] = array('class' => array('get-social-register-form'), 'html' => FALSE);

  $form['#attached']['css'] = array(
    drupal_get_path('module', 'getsocial_share_buttons') . '/css/get_social.css',
  );

  $form['#attached']['js'] = array(
    drupal_get_path('module', 'getsocial_share_buttons') . '/js/getsocial_backend.js',
  );

  $form['getsocial_share_buttons_register']['title'] = array(
    '#type' => 'item',
    '#title' => t('Welcome and thanks for downloading GetSocialâ€™s Share Buttons & Social Media App Store'),
    '#markup' => t('<p>To get started click on the button below to automatically activate your GetSocial account.</p>'),
    '#cenas' => array(
      '#type' => 'link',
      '#href' => $gs->getsocialShareButtonsGsAccount() . "/sites/drupal",
      '#target' => 'blank',
      '#id' => 'logo-wrapper',
    ),
  );

  $form['getsocial_share_buttons_register']['url_input'] = array(
    '#type' => 'textfield',
    '#title' => t('URL'),
    '#default_value' => variable_get('site_name'),
    '#required' => TRUE,
    '#disabled' => TRUE,
  );

  $form['getsocial_share_buttons_register']['email_input'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#default_value' => variable_get('site_mail'),
    '#required' => TRUE,
    '#disabled' => TRUE,
  );

  $form['getsocial_share_buttons_register']['info_bar'] = array(
    '#type' => 'item',
    '#markup' => t('<p>Result apears here.</p>'),
    '#id' => 'result-info-bar',
  );

  $form['getsocial_share_buttons_register']['submit_link'] = array(
    '#prefix' => '<div class="form-button-group"><i class="fa fa-check"></i>',
    '#type' => 'link',
    '#href' => $gs->getsocialShareButtonsGsAccount() . "/api/v1/sites/create?source=drupal&amp;email=" . variable_get('site_mail') . "&amp;url=" . variable_get('site_name'),
    '#title' => t('Activate your account'),
    '#id' => 'activate-account',
    '#suffix' => '</div>',
  );

  $form['getsocial_share_buttons_register']['loading_button'] = array(
    '#prefix' => '<div class="loading-create form-button-group"><i class="fa fa-refresh fa-spin"></i> ',
    '#type' => 'link',
    '#href' => '',
    '#title' => t('Activating Account...'),
    '#id' => 'activate-account-loading',
    '#suffix' => '</div>',
  );

  $form['getsocial_share_buttons_register']['api-key'] = array(
    '#type' => 'hidden',
    '#value' => '-1',
  );

  $form['getsocial_share_buttons_register']['api-result'] = array(
    '#type' => 'hidden',
    '#value' => '-1',
  );

  $form['getsocial_share_buttons_register']['insert_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Please go to your Getsocial Account and get your API KEY in the site options page.'),
    '#value' => '',
  );

  $form['getsocial_share_buttons_register']['submit_key'] = array(
    '#prefix' => '<div class="submit-save-key form-button-group"><i class="fa fa-check"></i>',
    '#type' => 'link',
    '#href' => $gs->getsocialShareButtonsGsAccount() . "/api/v1/sites/create?source=drupal&amp;email=" . variable_get('site_mail') . "&amp;url=" . variable_get('site_name'),
    '#title' => t('Save Changes'),
    '#id' => 'save-key',
    '#suffix' => '</div>',
  );

  $form['getsocial_share_buttons_register']['success_message'] = array(
    '#prefix' => '<div class="success-message form-button-group"><i class="fa fa-check"></i>',
    '#type' => 'item',
    '#title' => t('Congratulations!<p>You are ready to start in 3..2..1..</p>'),
    '#id' => 'success-message',
    '#suffix' => '</div>',
  );

  $form['#submit'][] = 'getsocial_share_buttons_register_form_submit';

  return $form;
}

/**
 * Page callback: Get Social Sharing Buttons settings.
 *
 * @see getsocial_share_buttons_menu()
 *
 * Configuration form: library already installed.
 */
function getsocial_share_buttons_get_config_form() {

  $gs = getsocial_share_buttons_get_gs();

  if ($gs->api_key == 'not_set' || $gs->api_key == '-1') {
    return getsocial_share_buttons_get_register_form();
  }

  $form['main-bar-link']['header'] = array(
    '#prefix' => '<div class="gs-form-header">',
    array(
      '#type' => 'link',
      '#title' => '',
      '#href' => $gs->getsocialShareButtonsGsAccount() . "/sites/drupal",
      '#id' => 'logo-wrapper',
      '#attributes' => array('target' => '_blank', 'html' => FALSE),
    ),
    '#suffix' => '</div>',
  );

  $form['#attributes'] = array('class' => array('get-social-config-form'), 'html' => FALSE);

  $form['#attached']['css'] = array(
    drupal_get_path('module', 'getsocial_share_buttons') . '/css/get_social.css',
  );

  $form['#attached']['js'] = array(
    drupal_get_path('module', 'getsocial_share_buttons') . '/js/getsocial_backend.js',
  );

  $form['getsocial_share_buttons_config']['title'] = array(
    '#type' => 'item',
    '#title' => t('GetSocial Module is installed'),
    '#markup' => t('<p>To configure your apps click on the button bellow to go to the GetSocial&#39;s page.</p>'),
  );

  $form['getsocial_share_buttons_config']['go_to_gs_url'] = array(
    '#prefix' => '<div class="go-to-gs form-button-group"><i class="fa fa-sign-in"></i>',
    '#type' => 'link',
    '#href' => $gs->getsocialShareButtonsGsAccount() . "/sites/drupal",
    '#title' => t('Go to GetSocial'),
    '#id' => 'go-to-gs-url',
    '#suffix' => '</div>',
    '#attributes' => array('target' => '_blank', 'html' => FALSE),
  );

  return $form;
}

/**
 * Use hook_init() to inject a JS code in every page.
 *
 * Prevent script from running in the admin pages.
 */
function getsocial_share_buttons_page_build() {
  $gs = getsocial_share_buttons_get_gs();

  // On admin pages load the necessary files to create the configuration page.
  if (user_access('administer modules') && path_is_admin(current_path())) {
    $gs->getsocialShareButtonsSetJsBackendVariables();
  }
  else {
    // Add GetSocial Library to non-admin page.
    $gs->getsocialShareButtonsSetJsFrontendVariables();

    if ($gs->api_key != 'not_set' && $gs->api_key != '-1') {
      drupal_add_js(drupal_get_path('module', 'getsocial_share_buttons') . '/js/getsocial_frontend.js');
    }
  }
}

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 */
function getsocial_share_buttons_help($path, $arg) {
  switch ($path) {
    case 'admin/help#getsocial_share_buttons':
      // Return a line-break version of the module README.txt
      return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}

/**
 * Create and return a new GS object.
 *
 * @return object
 *   GetsocialShareButtonsGs
 */
function getsocial_share_buttons_get_gs() {

  return new GetsocialShareButtonsGs(variable_get('getsocial_share_buttons_gs_api_key', 'not_set'),
              variable_get('getsocial_share_buttons_gs_identifier', 'not_set'),
              variable_get('getsocial_share_buttons_gs_lang', 'not_set'));
}

/**
 * Register Form submit handler.
 */
function getsocial_share_buttons_register_form_submit($form, &$form_state) {

  variable_set('getsocial_share_buttons_gs_api_key', $form_state['input']['api-key']);

  $api_data = json_decode($form_state['input']['api-result']);

  variable_set('getsocial_share_buttons_gs_identifier', $api_data->identifier);
  variable_set('getsocial_share_buttons_gs_alert_msg', $api_data->alert_msg);
  variable_set('getsocial_share_buttons_gs_alert_utm', $api_data->alert_utm);
  variable_set('getsocial_share_buttons_gs_alert_cta', $api_data->alert_cta);
  variable_set('getsocial_share_buttons_gs_pro', $api_data->pro);
  variable_set('getsocial_share_buttons_gs_ask_review', $api_data->ask_review);
  variable_set('getsocial_share_buttons_gs_apps', $api_data->gs_apps);
}
