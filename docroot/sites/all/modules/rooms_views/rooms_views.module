<?php

/**
 * @file
 * Hooks and API functions for rooms_views module.
 */

/**
 * Implements hook_views_api().
 */
function rooms_views_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'rooms_views') . '/views',
  );
}

/**
 * Form builder for Booking form on Rooms Views.
 *
 * @param Datetime $start_date
 *   Booking start date.
 * @param Datetime $end_date
 *   Booking end date.
 * @param int $unit_id
 *   The Bookable unit ID to book.
 * @param string $button_text
 *   Text to display on booking button.
 */
function rooms_views_booking_button_form($form, &$form_state, $start_date, $end_date, $unit_id, $button_text) {
  $currency_setting = commerce_currency_load(commerce_default_currency());
  $currency_symbol = $currency_setting['symbol'];
  $temp_end_date = clone($end_date);
  $temp_end_date->sub(new DateInterval('P1D'));

  $form['start_date'] = array(
    '#type' => 'hidden',
    '#value' => $start_date->format('Y-m-d'),
  );

  $form['end_date'] = array(
    '#type' => 'hidden',
    '#value' => $end_date->format('Y-m-d'),
  );

  $form['unit_id'] = array(
    '#type' => 'hidden',
    '#value' => $unit_id,
  );

  $form['rooms_group_size'] = array(
    '#type' => 'hidden',
    '#value' => 0,
  );

  $form['status'] = array(
    '#type' => 'hidden',
    '#value' => 0,
  );

  $form['options'] = array(
    '#tree' => TRUE,
  );

  // Add options checkboxes and convert Price options in Price modifiers.
  $price_modifiers = array();

  $unit = rooms_unit_load($unit_id);

  foreach (rooms_unit_get_unit_options($unit) as $option) {
    $option_name = strtolower(str_replace(array(':', ' '), '_', $option['name']));
    $form['options'][$option_name] = array(
      '#type' => 'checkbox',
      '#title' => $option['name'],
      '#ajax' => array(
        'callback' => 'rooms_booking_manager_options_change_callback',
        'wrapper' => 'unit_' . $unit->unit_id . '_price',
      ),
    );

    // Show quantity field selector if in option quantity is set.
    if (is_numeric($option['quantity'])) {
      if (isset($form_state['values']['options'][$option_name]) &&
        $form_state['values']['options'][$option_name] == 1 && $option['quantity'] > 1) {

        $form['options'][$option_name . ':quantity'] = array(
          '#type' => 'select',
          '#title' => t('Quantity'),
          '#options' => range(1, $option['quantity']),
          '#ajax' => array(
            'callback' => 'rooms_booking_manager_options_change_callback',
            'wrapper' => 'unit_' . $unit->unit_id . '_price',
          ),
          '#prefix' => '<div class="rooms-search-result__unit-quantity" id="unit_' . $unit->unit_id . '_' . $option_name . '_quantity">',
          '#suffix' => '</div>',
        );
      }
      else {
        $form['options'][$option_name . ':quantity'] = array(
          '#prefix' => '<div class="rooms-search-result__unit-quantity" id="unit_' . $unit->unit_id . '_' . $option_name . '_quantity">',
          '#suffix' => '</div>',
        );
      }
    }

    if (isset($form_state['values']['options'][$option_name])) {
      $quantity = 1;
      if (isset($form_state['values']['options'][$option_name . ':quantity']) && $option['operation'] != ROOMS_REPLACE) {
        $quantity = $form_state['values']['options'][$option_name . ':quantity'] + 1;
      }

      if ($form_state['values']['options'][$option_name] == 1) {
        $price_modifiers[$option_name] = array(
          '#type' => ROOMS_DYNAMIC_MODIFIER,
          '#op_type' => $option['operation'],
          '#amount' => $option['value'],
          '#quantity' => $quantity,
        );
      }
    }
  }

  // Apply price modifiers and replace unit price.
  $price_calendar = new UnitPricingCalendar($unit_id, $price_modifiers);

  $price = $price_calendar->calculatePrice($start_date, $temp_end_date);

  $form['new_price'] = array(
    '#prefix' => '<div class="rooms-search-result__new-price" id="unit_' . $unit_id . '_price">',
    '#markup' => '<label>' . t('Cost') . ':</label> <span class="rooms-search-result__new-price-amount">' .
    t('@currency_symbol @amount', array(
        '@currency_symbol' => $currency_symbol,
        '@amount' => $price['full_price'],
      )) . '</span>',
    '#suffix' => '</div>',
  );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => $button_text,
    '#submit' => array('book_unit_form_submit'),
  );
  return $form;
}
