<?php

/* Private */
// Helper functions.
require_once 'includes/social_groups.helper.inc';

/**
 * Implements hook_hook_info().
 */
function social_groups_hook_info() {
  $hooks = array(
    'social_groups_plugins',
  );

  return array_fill_keys($hooks, array('group' => 'social_groups'));
}

/**
 * Implements hook_theme(). 
 */
function social_groups_theme() {
  $items = array();
  $common = array(
    'file' => 'social_groups.themes.inc',
    'path' => drupal_get_path('module', 'social_groups') . '/themes',      
  );
  
  $items['social_groups'] = array(
    'variables' => array(
      'groups' => array(),
    ),
  ) + $common;
  $items['social_group_facebook'] = array(
    'variables' => array(
      'group' => array(),  
    ),
  ) + $common;
  $items['social_group_twitter'] = 
  $items['social_group_youtube'] = $items['social_group_facebook'];
  
  return $items;
}

/******************************************************************************/
/*                              CTools                                        */
/******************************************************************************/

/**
 * Implements hook_ctools_plugin_type().
 */
function social_groups_ctools_plugin_type() {
  $items = array();
  
  $items['plugins'] = array(
    'cache' => FALSE,
    'use hooks' => TRUE,
  );
  
  return $items;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function social_groups_ctools_plugin_api($owner, $api) {
  if ($owner == 'social_groups' && $api == 'plugins') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_social_groups_plugins().
 */
function social_groups_social_groups_plugins() {
  module_load_include('inc', 'social_groups', 'includes/social_groups.plugins');
  return _social_groups_social_groups_plugins();
}


/******************************************************************************/
/*                              Block                                         */
/******************************************************************************/

/**
 * Implements hook_block_info().
 */
function social_groups_block_info() {
  $blocks = array();

  $blocks['social_groups'] = array(
    'info' => t('Social groups'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function social_groups_block_configure($delta = '') {
  $form = array();

  if ($delta == 'social_groups') {
    // Load all plugins type "plugins".
    ctools_include('plugins');
    $plugins = ctools_get_plugins('social_groups', 'plugins');
    
    foreach ($plugins as $id => $plugin) {
      if ($group = social_groups_get_instance($id, $plugin['group'])) {
        $form[$id] = array(
          '#type' => 'container',
          '#tree' => TRUE,
        );
        $items = $group->getForm();
        $form[$id] += $items;
      }
    }
  }
  
  return $form;
 }

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds validation of block configuration custom fields.
 */
function social_groups_form_block_admin_configure_alter(&$form, &$form_state, $form_id) {
  if ($form['module']['#value'] == 'social_groups') {
    $form['#validate'][] = 'social_groups_group_form_validate';
  }
}

/**
 * Implements hook_block_view().
 */
function social_groups_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'social_groups':
      // Load all plugins type "plugins".
      ctools_include('plugins');
      $plugins = ctools_get_plugins('social_groups', 'plugins');
      
      $output = array();
      foreach ($plugins as $id => $plugin) {
        if ($group = social_groups_get_instance($id, $plugin['group'])) {
          $output[$group->getName()] = $group->getData();
        }
      }
      
      $block['subject'] = t('Social groups');
      $block['content'] = theme('social_groups', array('groups' => $output));
      break;
  }
  
  return $block;
}