<?php
/**
 * @file
 * Simplenews Private Roles restricts selected newsletters to allow only certain roles to view/subscribe to them.
 *
 * @author Aaron Craig <aaron@evolving-design.com>
 */

/**
 * Implementation of hook_permission()
 */
function simplenews_private_roles_permission() {
  return array(
    'manage private simplenews roles' => array(
      'title' => t('Manage private simplenews roles'),
      'description' => t('Allow the user to configure how Simplenews Private Roles works.')
    ),
    'may subscribe to all newsletters' => array(
      'title' => t('May subscribe to all newsletters'),
      'description' => t('Allow the user to subscribe to any letter, overriding the individual settings for that newsletter.')
    )
  );
}

/**
 * Insert our fieldset in the newsletter edit form.
 */
function simplenews_private_roles_form_simplenews_admin_category_form_alter(&$form, &$form_state) {
  global $user;

  if (!user_access('manage private simplenews roles', $user)) {
    return;
  }

  $selected = array();
  if ($form['tid']) {
    $selected = _simplenews_private_roles_fetch($form['tid']['#value']);
  }

  $roles = user_roles();
  $form['private_roles'] = array(
    '#type'		      => 'fieldset',
    '#title'	      => t("Restrict to roles"),
    '#collapsible'	=> TRUE,
    '#collapsed'		=> FALSE,
    'private_roles'	=> array(
      '#type'	         => 'checkboxes',
      '#title'		     => t("Select roles that may subscribe to this newsletter"),
      '#options'	     => $roles,
      '#default_value' => $selected
    )
  );

  $form['#submit'][] = 'simplenews_private_roles_submit';
}

/**
 * Simplenews subscription forms
 *
 * @see simplenews_subscriptions_page_form
 * @see simplenews_subscriptions_multi_block_form
 */
function simplenews_private_roles_form_simplenews_subscriptions_multi_block_form_alter(&$form, &$form_state) {
  _simplenews_private_roles_form_alter($form['newsletters']);
  $form['#validate'][] = "simplenews_private_roles_subscribe_validate";
}

function simplenews_private_roles_form_user_profile_form_alter(&$form, &$form_state) {
  _simplenews_private_roles_form_alter($form['subscriptions']['newsletters']);
  $form['#validate'][] = "simplenews_private_roles_subscribe_validate";
}

function simplenews_private_roles_subscribe_validate($form, $form_state) {
  if (empty($form_state['values']['newsletters'])) {
    return;
  }

  foreach ($form_state['values']['newsletters'] as $tid => $checked) {
    if (!_simplenews_private_roles_has_access($tid)) {
      form_set_error('newsletters', t("You aren't allowed to subscribe to this newsletter."));
    }
  }
}

function _simplenews_private_roles_form_alter(&$element) {
  if (empty($element['#options'])) {
    return;
  }

  $options = array();
  foreach ($element['#options'] as $tid => $name) {
    if (_simplenews_private_roles_has_access($tid)) {
      $options[$tid] = $name;
    }
  }

  $element['#options'] = $options;
}

/**
 *
 * Store role choices for the given newsletter.
 *
 * @param $form
 *
 * @param $form_state
 */
function simplenews_private_roles_submit(&$form, $form_state) {
  $rids = array();
  foreach ($form_state['values']['private_roles'] as $rid => $checked) {
    if ($checked) {
      $rids[] = $rid;
    }
  }

  $tid = $form_state['values']['tid'];
  if (is_numeric($tid) && is_array($rids) && !empty($rids)) {
    _simplenews_private_roles_update($tid, $rids);
  }
}

/**
 *
 * Store user choices to our table.
 *
 * @param $tid
 * The newsletter tid
 *
 * @param $rids
 * An array of role ids
 */
function _simplenews_private_roles_update($tid, $rids = array()) {
  db_delete('simplenews_private_roles')
    ->condition('tid', $tid)
    ->execute();

  foreach ($rids as $rid) {
    db_insert("simplenews_private_roles")
      ->fields(array(
        'tid' => $tid,
        'rid' => $rid
      ))
      ->execute();
  }
}

/**
 *
 * Get an array of role ids allowed to see this newsletter.
 *
 * An empty array means ALL roles may see this newsletter.
 *
 * @param $tid
 */
function _simplenews_private_roles_fetch($tid) {
  $result = db_select('simplenews_private_roles', 'spr')
    ->fields('spr', array('rid'))
    ->condition('spr.tid', $tid)
    ->execute();

  $rids = array();
  foreach ($result as $row) {
    $rids[] = $row->rid;
  }

  return $rids;
}

/**
 *
 * Determine whether the given user has access to a given newsletter.
 *
 * @param $tid
 *
 * @param $user = NULL
 * Uses the current user if this is NULL
 *
 * @return
 * TRUE or FALSE
 */
function _simplenews_private_roles_has_access($tid, $account = NULL) {
  if (!$account) {
    global $user;
    $account = $user;
  }

  if (user_access('may subscribe to all newsletters', $account)) {
    return TRUE;
  }

  $allowed = _simplenews_private_roles_fetch($tid);
  if (!$allowed) {
    return TRUE;
  }

  $roles = array_keys($account->roles);
  foreach ($allowed as $rid) {
    if (in_array($rid, $roles)) {
      return TRUE;
    }
  }

  return FALSE;
}
