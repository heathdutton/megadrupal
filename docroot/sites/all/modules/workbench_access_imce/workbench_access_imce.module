<?php
/**
 * @file
 * Integrate Workbench Access and IMCE.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adding a new field to the workbench_access admin field.
 */
function workbench_access_imce_form_workbench_access_settings_form_alter(&$form, &$form_state) {
  $form['workbench_access_imce_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('Workbench Access IMCE Prefix'),
    '#default_value' => variable_get('workbench_access_imce_prefix', 'imce'),
    '#description' => t('Specify the folder where all of the imce subfolders will be created inside of. The folder will be created in the root directory that IMCE has access to.'),
  );

  $form['#validate'][] = 'workbench_access_imce_prefix_validate';
}

/**
 * Validation for the workbench_access_imce_prefix field.
 *
 * Want to make sure that no '.' are part of the field so people can't go up
 * the file system.
 */
function workbench_access_imce_prefix_validate(&$form, &$form_state) {
  $value = $form_state['values']['workbench_access_imce_prefix'];
  if (strpos($value, '.') !== FALSE) {
    form_set_error('title', t("You have added an invalid prefix. You can't use periods in the prefix."));
  }
}

/**
 * Implements hook_menu().
 */
function workbench_access_imce_menu() {
  $items = array();

  $items['admin/workbench/files'] = array(
    'title' => 'My Files',
    'description' => 'My Files',
    'page callback' => 'workbench_access_imce_my_files',
    'access arguments' => array('access workbench'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 6,
  );

  return $items;
}

/**
 * Constructs a page to show all files you have access to.
 */
function workbench_access_imce_my_files() {
  return array('#markup' => '<iframe frameborder="0" class="imce-frame" style="border: 1px solid #eee; width: 99%; height: 520px" src="/imce"></iframe>');
}

/**
 * Returns an array representing a user's currently accessible file directories.
 *
 * If a user has not been restricted in the Workbench Access Taxonomy, nothing
 * is returned.
 * This function is only being hit when someone is browsing the server.
 * I thought it was being hit all the time.
 */
function workbench_access_imce_path() {
  // Set the $prefix variable so it can be used in multiple places.
  $prefix = variable_get('workbench_access_imce_prefix');

  /* Set the current Session
   *
   * TODO - see if this can be called here instead of using hook_init().
   * workbench_access_imce_set_session(); // This doesn't work.
   */

  // Get the workbench access user tree.
  $wb_tree = workbench_access_get_user_tree();

  // Get the active tree to find the root term.
  // TODO - is this needed? could you just see if there is a taxomony parent?
  // taxonomy_get_parents_all()???
  $active = workbench_access_get_active_tree();

  // Initialize the array that I'll be adding directories to.
  $directories = array();

  // Check if the $wb_tree is empty. This means that they don't have access to
  // a workbench section and should get access to nothing.
  if (empty($wb_tree)) {
    return ($directories);
  }

  /*
   * See if the first term is the $active_access_type_id.
   * If yes, then they have access to the entire wb section and should
   * have access to all of the files and this exits.
   * If not, continue onwards to see what they should have access to.
   */
  $active_access_type_id = current($active['access_scheme']['access_type_id']);

  // If array key exists, then do something.
  if (array_key_exists($active_access_type_id, $wb_tree)) {
    if (!empty($prefix)) {
      // If there is a prefix, then they should have access to the
      // entire prefix directory.
      $directories[] = $prefix;
    }
    else {
      // If there is no prefix, then they should have access to the entire
      // files directory that IMCE has access to.
      $directories[] = ".";
    }

    return ($directories);
  }

  // Unset children directories in the array. They aren't needed.
  $wb_tree = workbench_access_imce_unset_children_directories($wb_tree);

  // Loop through the $wb_tree (now clean) and get the directories the
  // user has access to.
  foreach ($wb_tree as $section_details) {

    // Find the path for the folder in the taxomony.
    $path = workbench_access_imce_find_folder_path($section_details['access_id']);
    // Add the prefix and add it to the directories array.
    $directories[] = workbench_access_imce_add_prefix($path, $prefix);
  }

  // Return the directories.
  return ($directories);
}


/**
 * This is a helper function to be called by other code in the module.
 *
 * The function is called by a loop and it then returns the folder
 * path in IMCE. It uses function taxonomy_get_tree() to get the tax
 * structure to help.
 *
 * @param string $access_id
 *   The tid of the section.
 *
 * @return string $path
 *    The path to the directory on the server, without the prefix.
 */
function workbench_access_imce_find_folder_path($access_id) {
  $parents = array();
  $path = array();

  // Get an array of all of the parents' path.
  $parents = taxonomy_get_parents_all($access_id);

  // Add each parent to path.
  foreach ($parents as $parent) {
    $path[] = $parent->name;
  }

  // Reverse the array (because it adds it the wrong direction).
  $path = array_reverse($path);

  // Convert the $path array to a string.
  $path = implode("/", $path);

  // Lowercase the string & replace spaces with hyphens.
  $path = strtolower($path);
  $path = str_replace(' ', '-', $path);
  return $path;
}


/**
 * Loop through the $wb_tree unset children directories.
 *
 * Note, this assumes that you've check including subdirectories for IMCE.
 */
function workbench_access_imce_unset_children_directories($wb_tree) {

  foreach ($wb_tree as $section_details) {

    // Uset children directories b/c they should already be created
    // and we don't need them.
    if (isset($section_details['children'])) {
      // Get all of the ids that aren't needed.
      $children_ids = array_values($section_details['children']);
      // Loop through all of the children.
      foreach ($children_ids as $child) {
        // Unset the variables that aren't needed because they are children.
        unset($wb_tree[$child]);
      }
    }
  }

  return $wb_tree;
}


/**
 * Implements hook_init().
 *
 * Runs every time a page is requested on the site.
 *
 * This is setting the $_SESSION['imce_directory'] to make it easier
 * for people to upload files.
 */
function workbench_access_imce_set_session() {
  // Get the $prefix variable so it can be used in multiple places.
  $prefix = variable_get('workbench_access_imce_prefix');
  // Get the active workbench access menu tree.
  $active = workbench_access_get_active_tree();
  // There must be active sections, and the user must be allowed to use one.
  if ($node = menu_get_object()) {
    if (!empty($active['tree']) && user_access('access workbench access by role')) {

      // If the pages aren't under access control or if they are unassigned,
      // do nothing.
      // Code taken from workbench_access.module
      // workbench_access_workbench_block(), so it is a bit messy.
      if (!variable_get('workbench_access_node_type_' . $node->type, 1) || empty($node->workbench_access)) {
        // Do nothing.
      }
      else {
        // Get the WB Section of the node.
        $access_id = $node->workbench_access;
        // Get the current array item. aka I don't want an array.
        $access_id = current($access_id);

        // Use current WB Section and use
        // workbench_access_imce_find_folder_path() to get $dirname.
        // to get the imce path to it.
        // TODO support multiple WB Sections??? Probably not.
        $dirname = workbench_access_imce_find_folder_path($access_id);

        // Add prefix to $dirname.
        $dirname = workbench_access_imce_add_prefix($dirname, $prefix);

        // Set the $_SESSION['imce_directory'].
        $_SESSION['imce_directory'] = rawurlencode($dirname);
      }
    }
  }
}

/**
 * Check if there is a prefix setting, and add it if it exists.
 *
 * @param string $dirname
 *    The directory name.
 * @param string $prefix
 *    The prefix directory. Don't want to find it each time.
 *
 * @return sting $dirname
 *    The directory with a prefix added if needed.
 */
function workbench_access_imce_add_prefix($dirname, $prefix) {
  if (!empty($prefix)) {
    $dirname = $prefix . '/' . $dirname;
  }
  return $dirname;
}

/**
 * Implements hook_init().
 *
 * Runs every time a page is requested on the site.
 */
function workbench_access_imce_init() {
  // This is setting the $_SESSION['imce_directory'] to make it easier
  // for people to upload files.
  workbench_access_imce_set_session();
}
