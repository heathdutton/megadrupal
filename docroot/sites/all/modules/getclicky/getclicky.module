<?php

/*
 * Drupal Module: getclicky
 * Adds the required Javascript to the bottom of all your Drupal pages
 * to allow tracking by the getclicky statistics package.
 *
 * Lets you see stats (tables, charts) from within drupal :
 * see the GetClicky settings page.
 */

/**
 * Implements hook_help().
 */
function getclicky_help($path, $arg) {
  switch ($path) {
    case 'admin/config/system/getclicky':
      return t('GetClicky is a free statistics package.');
  }
}

/**
 * Implements hook_menu().
 */
function getclicky_menu() {
  $items = array();

  $items['admin/config/system/getclicky'] = array(
    'title' => 'GetClicky Settings',
    'description' => 'Configure the settings used to generate your GetClicky tracking code.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('getclicky_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'getclicky.admin.inc',
  );

  $items['admin/reports/getclicky-stats-dashboard'] = array(
    'title' => 'Getclicky Stats Dashboard',
    'description' => 'Show Stats Dashboard',
    'page callback' => '_getclicky_output_stats_dashboard',
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_page_build().
 */
function getclicky_page_build(&$page) {
  global $user;
  $site_id_number = variable_get('getclicky_site_id_number', '');

  // Don't track page views in the admin sections
  //@TODO: use path_get_admin_paths() instead of arg(0) comparison to admin.
  if ($site_id_number && (arg(0) != 'admin') && _getclicky_track($user)) {

    // Site search tracking support.
    $url_custom = '';
    if (module_exists('search') && variable_get('getclicky_site_search', FALSE) && arg(0) == 'search') {
      $keys = search_get_keys();
      $url_custom = url('search/' . arg(1), 'search=' . trim($keys));
    }

    // Surround custom urls with single quotes.
    if (!empty($url_custom)) {
      $url_custom = drupal_to_js($url_custom);
    }

    $script = _getclicky_output_js_code($site_id_number);

    // Optionally pass username data to Clicky by adding additional code before
    // the Clicky tracking code.
    if (variable_get('getclicky_pass_username', FALSE) && isset( $user->name ) ) {
      $script = '<script type="text/javascript">
        var clicky_custom = {session: {username: "' . $user->name . '"}};
        </script>' . $script;
    }

    $page['page_bottom']['getclicky'] = array(
      '#type' => 'markup',
      '#markup' => $script,
    );
  }
}

/**
 * Decides whether track the user or not.
 *
 * @param $account
 *   A user object containing an array of roles to check
 * @return boolean
 *   A decision on if the current user is being tracked by getClicky
 */
function _getclicky_track($account) {
  // By default we don't track users.
  $track = FALSE;

  $roles = variable_get('getclicky_track_roles', array());

  foreach (array_keys($account->roles) as $role) {
    if ($roles[$role]) {
      $track = TRUE;
      break;
    }
  }

  return $track;
}

function _getclicky_output_banner_html_code($site_id_number) {
  return '<a title="Real Time Web Analytics" href="http://clicky.com/' . $site_id_number . '"><img alt="Real Time Web Analytics" src="//static.getclicky.com/media/links/badge.gif" border="0" /></a>';
}

/**
 * Outputs getclicky code.
 */
function _getclicky_output_js_code($site_id_number) {
  $js_code = '';
  if (variable_get('getclicky_show_banner_image', FALSE)) {
    $js_code .= _getclicky_output_banner_html_code($site_id_number);
  }

  $js_code .= '
  <script src="//static.getclicky.com/js" type="text/javascript"></script>
  <script type="text/javascript">try { clicky.init(' . $site_id_number . '); }catch(e){}</script>
  <noscript><p><img alt="Clicky" width="1" height="1" src="//in.getclicky.com/' . $site_id_number . 'ns.gif" /></p></noscript>';

  // Add any custom code snippets if specified
  $codesnippet = variable_get('getclicky_codesnippet', '');
  if (!empty($codesnippet)) {
    $js_code .= '<script type="text/javascript">';
    $js_code .= $codesnippet;
    $js_code .='</script>';
  }

  return $js_code;
}

/**
 * Implements hook_block_info().
 */
function getclicky_block_info() {
  $blocks['getclicky_banner'] = array(
    'info' => t('Show GetClicky banner image'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function getclicky_block_view($delta = '') {
  switch ($delta) {
    case "getclicky_banner":
      $block = array(
        'content' => variable_get('getclicky_banner_image_html_code_for_copying', '<a title="Clicky Web Analytics" href="http://getclicky.com/' . variable_get('getclicky_site_id_number', '') . '"><img alt="Clicky Web Analytics" src="http://static.getclicky.com/media/links/badge.gif" border="0" /></a>'),
      );
      break;
  }
  return $block;
}

/**
 * Insert an iframe with the getclicky stats for the current account.
 */
function _getclicky_output_stats_dashboard() {

  $site_id = variable_get('getclicky_site_id_number', '');
  $site_key = variable_get('getclicky_site_key_number', '');

  if ($site_id && $site_key) {
    // 1000x1300 seems to be a sweet spot for avoiding inner pane scrolling
    $iframe = '<iframe style="border: none; width: 1000px; height: 1300px;" src="http://getclicky.com/stats/wp-iframe?site_id=' . $site_id . '&sitekey=' . $site_key . '"></iframe>';
  }
  else {
    $iframe = t("You have not configured your GetClicky account, please !configure_link ...",
      array('!configure_link', l('enter site id and sitekey', 'admin/config/system/getclicky')));
  }

  return $iframe;
}
