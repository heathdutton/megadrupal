<?php

/**
 * Implements hook_library().
 */
function jquery_jstree_library() {
  $library_path = variable_get('jquery_jstree_library_path', NULL);
  if (empty($library_path) || !is_dir($library_path) || !file_exists($library_path . '/jstree.min.js')) {
    $library_path = libraries_get_path('jstree');
    if (!file_exists($library_path . '/jstree.min.js')) {
      drupal_set_message('Cannot find jsTree library directory.', 'error');
      return array();
    }
    variable_set('jquery_jstree_library_path', $library_path);
  }
  return array(
    'jstree' => array(
      'title' => 'jsTree',
      'website' => 'http://www.jstree.com/',
      'version' => '3.0.3',
      'js' => array(
        $library_path . '/jstree.min.js' => array(),
      ),
      'css' => array(
        $library_path . '/themes/default/style.min.css' => array(),
        drupal_get_path('module', 'jquery_jstree') . '/jquery_jstree.css' => array(),
      ),
    )
  );
}

/**
 * Implements hook_theme().
 */
function jquery_jstree_theme() {
  return array(
    'jstree' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Implements hook_element_info().
 */
function jquery_jstree_element_info() {
  $types['jstree'] = array(
    '#theme' => 'jstree',
    '#pre_render' => array('jquery_jstree_element_pre_render'),
    '#attributes' => array(),
    '#tree_options' => array(),
    '#input' => TRUE,
    '#process' => array('ajax_process_form'),
    '#theme_wrappers' => array('form_element'),
  );
  return $types;
}

/**
 * Pre-render callback for jsTree element.
 *
 * @param array $element
 *  The rendered jsTree element.
 */
function jquery_jstree_element_pre_render($element) {
  // Ensure ID
  if (empty($element['#attributes']['id'])) {
    $element['#attributes']['id'] = isset($element['#id']) ? $element['#id'] : drupal_html_id('jstree');
  }
  if (!empty($element['#name'])) {
    $element['#attributes']['data-name'] = $element['#name'];
  }
  // Ensure plugins options is an array
  if (empty($element['#options']['plugins']) || !is_array($element['#options']['plugins'])) {
    $element['#tree_options']['plugins'] = empty($element['#tree_options']['plugins']) ? array() : $element['#tree_options']['plugins'];
  }
  // Pass default value to JavaScript settings
  if (!empty($element['#default_value'])) {
    $element['#tree_options']['core']['data']['default_value'] = $element['#default_value'];
  }
  // Attach JavaScript settings, used by our behavior to initialize the tree.
  $element['#attached']['js'][] = array(
    'type' => 'setting',
    'data' => array('jstree' => array($element['#attributes']['id'] => $element['#tree_options']))
  );
  $element['#attached']['js'][] = drupal_get_path('module', 'jquery_jstree') . '/jquery_jstree.js';
  // jsTree library
  $element['#attached']['library'][] = array('jquery_jstree', 'jstree');
  return $element;
}

/**
 * Default theme function for jsTree element.
 *
 * @param array $variables
 */
function theme_jstree($variables) {
  $element =& $variables['element'];
  return '<div ' . drupal_attributes($element['#attributes']) . '>' . drupal_render_children($element) . '</div>';
}
