<?php

/**
 * @file
 * Integrates the foundation icon font with the iconfonts module.
 */

/**
 * Implements hook_iconfonts_import().
 */
function foundationicons_iconfonts_import() {

  return array(
    'name' => 'Foundation Icons',
    'family' => 'GeneralFoundicons',
    'url' => 'http://www.zurb.com/playground/foundation-icons',
  );

}

/**
 * Implements hook_iconfonts_enable().
 */
function foundationicons_iconfonts_enable($font) {

  return foundationicons_char_info();

}

/**
 * Provides character information to iconfonts_save_chars().
 *
 * @return array
 *   An array of character information arrays. Each array contains:
 *   - name: The name of the character.
 *   - code: The code of the character.
 *   - css_selector: (optional) The default css selector of the character.
 *   - enabled: (optional) The default enabled value of the character.
 */
function foundationicons_char_info() {

  $ret = array();
  $char_count = 0;
  $file_path = drupal_get_path('module', 'foundationicons');
  $file_content = file($file_path . '/foundationicons_chars.txt');

  foreach ($file_content as $line) {
    $temp = explode("\t", $line);
    $ret[$char_count]['name'] = trim($temp[0]);
    $ret[$char_count]['code'] = trim($temp[1]);
    $char_count++;
  }

  return $ret;

}

/**
 * Implements hook_preprocess_HOOK() for html.tpl.php.
 *
 * Adds the @font-face css file if needed.
 */
function foundationicons_preprocess_html(&$vars) {

  if (!empty($vars['iconfonts'])) {

    foreach ($vars['iconfonts'] as $font) {
      $metadata = unserialize($font->metadata);

      if ($metadata['module'] == 'foundationicons') {

        fontyourface_add_css_in_preprocess($vars, 'fontyourface/iconfonts/foundationicons.css');
        break;

      }

    }

  }

}
