<?php

/**
 * @file
 * Force all content created by a user to be associated with a taxonomy term.
 */

// TODO: Don't rely on form data to set forced term - set it using nodeapi instead

/* --- HOOKS ---------------------------------------------------------------- */

/**
 * Implements hook_form_alter().
 */
function user_force_term_form_alter(&$form, $form_state, $form_id) {
  global $user;

  // change form element on node edit form from dropdown to hidden field
  if (!empty($form['#node_edit_form'])) {
    $vid = variable_get('user_force_term_vocabulary', 0);
    $vocabulary = taxonomy_vocabulary_load($vid);

    // only act if the node type matches the node types on the vocanulary
    if (in_array($form['#node']->type, $vocabulary->nodes)) {
      // only change the element if it exists
      if (isset($form['taxonomy'][$vid])) {
        if (user_access('administer forced term associations')) {
          // the admin user can see the element, but we append an explanation to the description.
          $form['taxonomy'][$vid]['#description'] .= ' ' . t('Depending on your settings for the <a href="!url">user force term module</a>, this dropdown may not be visible to all users.', array('!url' => url('admin/user/user/user_force_term')));
        }
        else {
          // set term id
          if (empty($form['nid']['#value'])) {
            $account = user_load($user->uid);
          }
          else {
            $account = user_load($form['uid']['#value']);
          }
          $tid = $account->tid;

          // change the element to a hidden field
          $form['taxonomy'][$vid] = array(
            '#type'  => 'hidden',
            '#value' => $tid,
          );
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function user_force_term_form_user_profile_form_alter(&$form, $form_state) {
  _user_force_term_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function user_force_term_form_user_register_alter(&$form, $form_state) {
  _user_force_term_form_alter($form, $form_state);
}

/**
 * Implements hook_help().
 */
function user_force_term_help($path, $arg) {
  switch ($path) {
    case 'admin/modules#description':
      return t('Force content submitted by users to be associated with a taxonomy term.');
    case 'admin/user/user/user_force_term':
      return t('By selecting a vocabulary from the list below, you can force all content created by specific users to be associated with a term from that vocabulary. When you have selected a vocabulary, you can edit a user to select the forced term you wish to associate with all his or her content.');
  }
}

/**
 * Implements hook_menu().
 */
function user_force_term_menu() {
  $items = array();

  $items['admin/user/user/user_force_term'] = array(
    'title'            => 'Force taxonomy term',
    'description'      => 'Force all content submitted by users to be attached to a term from this vocabulary.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('user_force_term_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type'             => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function user_force_term_permission() {
  return array(
    'administer forced term associations' => array(
      'title'       => t('Administer User Force Term'),
      'description' => t('Administer forced term associations for users.'),
    ),
  );
}

/**
 * Implements hook_user_load().
 */
function user_force_term_user_load($users) {
  $result = db_query('SELECT uid, tid FROM {user_force_term} WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
  foreach ($result as $record) {
    $users[$record->uid]->tid = $record->tid;
  }
}

/**
 * Implements hook_user_insert().
 */
function user_force_term_user_insert(&$edit, &$user, $category = NULL) {
  return _user_force_term_save_user($edit, $user);
}

/**
 * Implements hook_user_update().
 */
function user_force_term_user_update(&$edit, &$user, $category = NULL) {
  return _user_force_term_save_user($edit, $user);
}

/**
 * Implements hook_user_cancel().
 */
function user_force_term_user_cancel(&$edit, &$account, $method) {
  switch ($method) {
    case 'user_cancel_reassign':
    case 'user_cancel_delete':
      db_delete('user_force_term')
        ->condition('uid', $account->uid)
        ->execute();
      break;
  }
}

/* --- FORMS ---------------------------------------------------------------- */

/**
 * Admin settings form
 */
function user_force_term_admin_settings() {
  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    if ($vocabulary->tags) {
      unset($vocabularies[$vid]);
    }
  }

  if (empty($vocabularies)) {
    drupal_set_message(t('You need to create at least one non-tagging taxonomy to use this feature.'), 'error');
  }
  else {
    $options = array(0 => t('<none>'));
    foreach ($vocabularies as $vocabulary) {
      $options[$vocabulary->vid] = $vocabulary->name;
    }

    $form['user_force_term_vocabulary'] = array(
      '#type'          => 'select',
      '#title'         => t('Force taxonomy term'),
      '#default_value' => variable_get('user_force_term_vocabulary', 0),
      '#options'       => $options,
      '#description'   => t('Force all content submitted by users to be attached to a term from this vocabulary.'),
    );

    return system_settings_form($form);
  }
}

/* --- UTILITY -------------------------------------------------------------- */

/**
 * Add term selection widget to user register/edit forms.
 */
function _user_force_term_form_alter(&$form, $form_state) {
  $access = user_access('administer forced term associations');
  $vid = variable_get('user_force_term_vocabulary', 0);

  // add form element to the user edit form
  if ($access && $vid) {
    $tree = taxonomy_get_tree($vid);

    $options = array(0 => t('<none>'));
    foreach ($tree as $term) {
      $options[$term->tid] = $term->name;
    }

    $default_value = 0;
    if (!empty($form['#uid'])) {
      $account = $form['_account']['#value'];
      $default_value = $account->tid;
    }
    $form['account']['tid'] = array(
      '#type'          => 'select',
      '#title'         => t('Forced term association'),
      '#default_value' => $default_value,
      '#options'       => $options,
      '#description'   => t('Force all content submitted by this user to be associated with the selected term.'),
      '#weight'        => 10,
    );
  }
}

/**
 * Update the table containing the user<->term associations.
 */
function _user_force_term_save_user(&$edit, &$user) {
  if (isset($edit['tid'])) {
    $tid = $edit['tid'];
    db_delete('user_force_term')
      ->condition('uid', $user->uid)
      ->execute();
    if ($tid > 0) {
      db_insert('user_force_term')
        ->fields(array(
          'uid' => $user->uid,
          'tid' => $tid,
        ))
        ->execute();
    }
  }
}
