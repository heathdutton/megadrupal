<?php

/**
 * @file hotspots.module
 */
include_once 'hotspots.field.inc';

/**
 * Implements hook_entity_view().
 */
function hotspots_entity_view($entity, $type, $view_mode, $langcode) {
  $fields = hotspots_hotspot_field_map();

  foreach ($fields as $field_name => $field_map) {
    // Drop out of loop if current entity does not match the entities the field
    // is attached to or if the field is not attached to this bundle.
    if (!isset($field_map['bundles'][$type]) || !isset($entity->{$field_name})) {
      continue;
    }

    if (isset($entity->{$field_name})) {
      foreach ($entity->{$field_name}[LANGUAGE_NONE] as $delta => $field) {
        if (isset($field['associate_image_field']) && isset($field['associate_image_delta'])) {
          $id = hotspots_id($field['associate_image_field'], $field['associate_image_delta']);
          $entity->{$field['associate_image_field']}[LANGUAGE_NONE][$field['associate_image_delta']]['attributes']['usemap'] = '#' . $id;
        }
      }
    }
  }
}

/**
 * Helper to create string identifiers.
 */
 function hotspots_id($fieldname, $delta) {
   return 'hotspot-' . $fieldname . '-' . $delta;
 }

/**
 * Implements hook_hotspots_image_types().
 */
function hotspots_hotspots_image_types() {
  return array('image');
}

/**
 * Collects all identified image field types().
 *
 * @see hook_hotspots_image_types().
 *
 * @return array
 *   A list of image field types.
 */
function hotspots_get_image_types() {
  $image_types = &drupal_static(__FUNCTION__);

  if (!isset($image_types)) {
    if ($cache = cache_get('hotspots_image_types', 'cache')) {
      $image_types = $cache->data;
    }
    else {
      $image_types = array();
      foreach (module_implements('hotspots_image_types') as $module) {
        $module_types = module_invoke($module, 'hotspots_image_types');
        $image_types = array_merge($image_types, $module_types);
      }

      array_unique($image_types);
      cache_set('hotspots_image_types', $image_types);
    }
  }

  return $image_types;
}

/**
 * Get field maps for just hotspot fields.
 *
 * @see field_info_field_map().
 *
 * @return array
 */
function hotspots_hotspot_field_map() {
  return array_filter(field_info_field_map(), '_hotspots_array_filter_hotspot_fields');
}

/**
 * Get field maps for what the Hotspots module considers an image field.
 *
 * @see field_info_field_map().
 *
 * @return array
 */
function hotspots_image_field_map() {
  return array_filter(field_info_field_map(), '_hotspots_array_filter_image_fields');
}

/**
 * array_filter() helper for hotspots_hotspot_field_map().
 */
function _hotspots_array_filter_hotspot_fields($field) {
  return $field['type'] == 'hotspot';
}

/**
 * array_filter() helper for hotspots_image_field_map().
 */
function _hotspots_array_filter_image_fields($field) {
  $image_types = hotspots_get_image_types();
  return in_array($field['type'], $image_types);
}
