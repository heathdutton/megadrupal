<?php

/**
 * Adding one more option for user cancel account.
 */

/**
 * Implements hook_help().
 */
function usercancel_contentassigntoadmin_help($path, $arg) {
  switch ($path) {
    case 'admin/help#usercancel_contentassigntoadmin':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module gives a feature to assign the content to administrator user If you are going to cancel the account of user.') . '</p>';
      $output .= '<h3>' . t('Steps') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('1. Enable the module.') . '</dt>';
      $output .= '<dt>' . t('2. You will have one more option(5th) with the list of cancel options.') . '</dt>';
      $output .= '<dt>' . t('3. Option text will be "Delete the account and make its content belong to Administrator.".') . '</dt>';
      $output .= '<dt>' . t('4. If you want to assign the content to specific admin user, choose the option, select a admin user and cancel the account of selected user.') . '</dt>';
      $output .= '</dl>';
      return $output;
  }
}

/**
 * Implements hook_user_cancel_methods_alter().
 */
function usercancel_contentassigntoadmin_user_cancel_methods_alter(&$methods) {
  $methods['user_cancel_reassign_to_superadmin'] = array(
    'title' => t('Delete the account and make its content belong to Administrator.'),
    'description' => t('Your account will be removed and all account information deleted. All of your content will be assigned to selected admin user.'),
  );
}

/**
 * Implements hook_form_alter().
 */
function usercancel_contentassigntoadmin_form_user_multiple_cancel_confirm_alter(&$form, &$form_state, $form_id) {
  $form['admin_users_list'] = array(
    '#type' => 'select',
    '#title' => t('Select administrator user'),
    '#weight' => 1,
    '#options' => usercancel_contentassigntoadmin_get_admin_user_list(),
    '#prefix' => '<div id="userlist" style="display:none;">',
    '#suffix' => '</div>',
  );
  $form['user_cancel_confirm']['#weight'] = 2;
  $form['user_cancel_notify']['#weight'] = 3;
  $form['description']['#weight'] = 4;
  $form['#attached']['js'][] = drupal_get_path('module', 'usercancel_contentassigntoadmin') . '/usercancel_contentassigntoadmin.js';
  return $form;
}

/**
 * Implements hook_user_cancel().
 */
function usercancel_contentassigntoadmin_user_cancel($edit, $account, $method) {
  switch ($method) {

    case 'user_cancel_reassign_to_superadmin':
      // Nodes assign to selected admin user(current revisions).
      $admin_userid = $edit['admin_users_list'];
      module_load_include('inc', 'node', 'node.admin');
      $nodes = db_select('node', 'n')
        ->fields('n', array('nid'))
        ->condition('uid', $account->uid)
        ->execute()
        ->fetchCol();
      node_mass_update($nodes, array('uid' => $admin_userid));
      // Nodes assign to selected admin user(old revisions).
      db_update('node_revision')
        ->fields(array('uid' => $admin_userid))
        ->condition('uid', $account->uid)
        ->execute();
      // Clean history.
      db_delete('history')
        ->condition('uid', $account->uid)
        ->execute();
      break;
  }
}

/**
 * Retrieves the list of users that belongs to administrator role.
 *
 * @return array $userlist
 *   Array of users with uid as key and name and mail as value.
 */
function usercancel_contentassigntoadmin_get_admin_user_list() {
  $result = db_query("SELECT u.uid, u.name, u.mail FROM {users} u JOIN {users_roles} r ON(u.uid=r.uid) WHERE r.rid=3 AND u.status=1");
  $userlist = array();
  foreach ($result as $user_info) {
    $userlist[$user_info->uid] = $user_info->name . ' (' . $user_info->mail . ')';
  }
  return $userlist;
}
