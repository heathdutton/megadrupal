<?php

/**
 * @file
 * Provides uninstall and install functionality for the module.
 */

/**
 * Implements hook_uninstall().
 */
function unveil_uninstall() {
  variable_del('unveil_preprocess_image');
  variable_del('unveil_preprocess_image_unveiled');
}

/**
 * Implements hook_requirements().
 */
function unveil_requirements($phase) {
  $t = get_t();
  $readme_file = $t('README.txt');

  if ($phase == 'runtime') {
    $readme_file_url = url(drupal_get_path('module', 'unveil') . '/README.txt', array('absolute' => TRUE));
    $readme_file = l($readme_file, $readme_file_url);

    if (!in_array('unveil', array_keys(libraries_get_libraries()))) {
      $requirements['unveil'] = array(
        'title' => $t('Unveil library'),
        'description' => $t('Unveil library is missing, please view the !readme for installation instructions.',
          array(
            '!readme' => $readme_file,
          )
        ),
        'severity' => REQUIREMENT_ERROR,
        'value' => $t('Missing'),
      );
    }
    else {
      $requirements['unveil'] = array(
        'title' => $t('Unveil library'),
        'description' => $t('Unveil library is installed, please view the !readme for more instructions.',
          array(
            '!readme' => $readme_file,
          )),
        'severity' => REQUIREMENT_OK,
        'value' => $t('Installed'),
      );
    }
    return $requirements;
  } elseif ($phase == 'install') {
    $requirements['unveil'] = array(
      'title' => $t('Unveil library'),
      'description' => $t('Unveil library is required, please view the !readme for more instructions.',
        array(
          '!readme' => $readme_file,
        )),
      'severity' => REQUIREMENT_OK,
      'value' => $t('Installed'),
    );
    return $requirements;
  }
}
