<?php

/**
 * Implements hook_init()
 */
function goaway_init() {
	$ip = $_SERVER['REMOTE_ADDR'];
	$banned = (bool) db_query_range("SELECT 1 FROM {goaway} where ip = :ip", 0, 1, array(':ip'=>$ip))->fetchField();
	if ($banned) {
		$jumpto = "/" . $GLOBALS['language']->language . "/" . variable_get('goaway_dest', 'http://www.google.com');
		if ($_SERVER['REDIRECT_URL'] != $jumpto) {
			$msg = 'YOU ARE BANNED.';
			drupal_set_message($msg);
			drupal_goto($jumpto);
		}
	}
}

/**
 * Implements hook_menu()
 */
function goaway_menu() {
	$items = array();
	$items['admin/config/goaway'] = array(
		'title' => t('GoAway'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('goaway_settings'),
		'type' => MENU_NORMAL_ITEM,
		'access arguments' => array('administer goaway'),
	);
	$items['admin/user/goaway'] = array(
		'title' => t('GoAway Banlist'),
		'description' => t('Administer GoAway Banlist'),
		'page callback' => 'goaway_banlist',
		'type' => MENU_NORMAL_ITEM,
		'access arguments' => array('ban by IP'),
	);
	$items['admin/user/goaway/%'] = array(
		'title' => t('Add IP to GoAway Banlist'),
		'description' => t('Add IP to GoAway Banlist'),
		'page callback' => 'goaway_ban_ip',
		'type' => MENU_NORMAL_ITEM,
		'access arguments' => array('ban by IP'),
	);
	$items['admin/user/goaway/unban/%'] = array(
		'title' => t('Unban IP Address'),
		'description' => t('Remove IP Address from GoAway Banlist'),
		'page callback' => 'goaway_unban',
		'type' => MENU_NORMAL_ITEM,
		'access arguments' => array('unban by IP'),
	);
	return $items;
}

/**
 * Implements hook_permission()
 */
function goaway_permission() {
	return array(
		'administer goaway' => array(
			'title' => t('Administer GoAway'),
			'description' => t('Set destination for banned anonymous users'),
		),
		'ban by IP' => array(
			'title' => t('Ban by IP'),
		),
		'unban by IP' => array(
			'title' => t('Unban by IP'),
		),
	);
}

/**
 * Implements hook_settings()
 */
function goaway_settings() {
	$form = array();
	$form['goaway_dest'] = array(
		'#prefix' => t('Enter a destination for miscreants. If using a remote address, the full URL (including http://) must be used.	For a local page, use the Drupal path beginning with a slash.'),
		'#type' => 'textfield',
		'#title' => t('Redirect Destination'),
		'#default_value' => variable_get('goaway_dest', 'http://www.google.com'),
		'#size' => '60',
	);
	return system_settings_form($form);
}

/**
 *	Implements hook_comment_view, adds goaway links to anon comments
 */
function goaway_comment_view($comment, $view_mode, $langcode) {
	if (user_access('ban by IP') AND !$comment->uid) {
		$camefrom = 'node/' . $comment->nid . '#comment-' . $comment->cid;
		$addy = goaway_get_ip_from_comment($comment->cid);
		$banned = goaway_check_for_ban($addy);
		if($banned) {
			$links['unban_ip'] = array(
				'title' => t('Unban IP'),
				'href' => "admin/user/goaway/unban/" . $banned,
				'query' => array('destination' => $camefrom),
				'attributes' => array(
					'class' => 'unban_ip',
					'title' => t('Unban this IP Address'),
					'rel' => 'nofollow'
				)
			);
			$comment->content['links']['unban_ip'] = array(
				'#theme' => 'links__node__comment',
				'#links' => $links,
				'#attributes' => array('class' => array('links', 'inline')),
			);
		} else {
			$links['ban_ip'] = array(
				'title' => t('Ban IP'),
				'href' => "admin/user/goaway/" . $addy,
				'query' => array('destination' => $camefrom),
				'attributes' => array(
					'class' => 'ban_ip',
					'title' => t('Ban this IP Address'),
					'rel' => 'nofollow'
				)
			);
			$comment->content['links']['ban_ip'] = array(
				'#theme' => 'links__node__comment',
				'#links' => $links,
				'#attributes' => array('class' => array('links', 'inline')),
			);
		}
	}
}

/**
* Creates goaway banlist page
*/
function goaway_banlist() {
	$result = db_query("SELECT gid, ip FROM {goaway} ORDER BY gid DESC");
	// if ($result) {
		$banned_ips = array();
		foreach ($result as $row) {
			$banned_ips[] = $row->ip . ' - ' . l('unban', 'admin/user/goaway/unban/' . $row->gid);
		}
	// }
	$page_content = drupal_get_form('goaway_banlist_form');
	return array(
		'headline' => array(
			'#type' => 'markup',
			'#markup' => '<h2>' . t('Banned IPs:') . '</h2>',
		),
		'body' => array(
			'#items' => $banned_ips,
			'#theme' => 'item_list',
		),
		$page_content,
	);
}

/**
* Processes an individual banning
*/
function goaway_ban_ip() {
	if(arg(3)) { $ip = arg(3); }
	$page_content = '<p>' . $ip . '</p>';
	$banform = drupal_get_form('goaway_ban_form');
	return array(
		'headline' => array(
			'#type' => 'markup',
			'#markup' => '<h2>' . t('Are you sure you want to ban this IP address?') . '</h2>',
		),
		'body' => array(
			'#type' => 'markup',
			'#markup' => $page_content,
		),
		$banform,
	);
}

/**
* Creates form for goaway_ban_ip()
*/
function goaway_ban_form($form, &$form_state) {
	if(arg(3)) { $ip = arg(3); }
	$path = $_GET['destination'];
	$form['goaway_ban'] = array(
		'#type' => 'hidden',
		'#value' => $ip,
	);
	$form['came_from'] = array(
		'#type' => 'hidden',
		'#value' => $path,
	);
	$form['actions'] = array('#type' => 'actions');
	$form['actions']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Ban'),
	);
	$form['actions']['cancel'] = array(
		'#type' => 'clear',
		'#value' => t('Cancel'),
	);
	return $form;
}

/**
* Handles ban form submission
*/
function goaway_ban_form_submit($form, &$form_state) {
	$banned_ip = $form_state['values']['goaway_ban'];
	$path = $form_state['input']['came_from'];
	$banned = goaway_check_for_ban($banned_ip);
	if($banned) {
		$msg = 'IP: ' . $banned_ip . " is already banned.";
		drupal_set_message(t($msg));
	} else {
		$ban_success = db_insert('goaway')
			->fields(array(
				'gid' => 0,
				'ip' => $banned_ip,
			)
		)->execute();
		if ($ban_success) {
			$msg = 'Banned IP: ' . $banned_ip;
			$vars = array('%ip' => $banned_ip);
			watchdog('goaway', $msg, $vars, WATCHDOG_INFO);
			drupal_set_message(t($msg));
		}
		else {
			$msg = 'Failed to ban IP: ' . $banned_ip;
			$vars = array();
			watchdog('goaway', $msg, $vars, WATCHDOG_ERROR);
			drupal_set_message(t($msg));
		}
	}
	$form_state['redirect'] = $path;
}

/**
* Creates form for goaway_banlist()
*/
function goaway_banlist_form($form, &$form_state) {
	$form['goaway_banlist'] = array(
		'#type' => 'textfield',
		'#title' => t('Ban New IP'),
		'#default_value' => '',
		'#size' => 18,
		'#maxlength' => 15,
		'#description' => t('Enter an IP Address for banning (e.g.: 123.123.123.123)'),
	);
	$form['actions'] = array('#type' => 'actions');
	$form['actions']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Add to List'),
	);
	return $form;
}

/**
* Validates banlist form input
*/
function goaway_banlist_form_validate($form, $form_state) {
	// TODO: REGEXP FOR IP ADDRESS FORMAT
	$goaway_banlist = $form_state['values']['goaway_banlist'];
	if (isset($goaway_banlist)) {
		if (!preg_match( "/^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/", $goaway_banlist)) {
			form_set_error('goaway_banlist', t('Data submitted not in IP format'));
		}
	}
}

/**
* Handles banlist form submission
*/
function goaway_banlist_form_submit($form, &$form_state) {
	$banned_ip = $form_state['values']['goaway_banlist'];
	$banned = goaway_check_for_ban($banned_ip);
	if($banned) {
		$msg = 'IP: ' . $banned_ip . " is already banned.";
		drupal_set_message(t($msg));
	} else {
		$ban_success = db_insert('goaway')
			->fields(array(
				'gid' => 0,
				'ip' => $banned_ip,
			)
		)->execute();
		if ($ban_success) {
			$msg = 'Banned IP: ' . $banned_ip;
			$vars = array('%ip' => $banned_ip);
			watchdog('goaway', $msg, $vars, WATCHDOG_INFO);
			drupal_set_message(t($msg));
		}
		else {
			$msg = 'Failed to ban IP: ' . $banned_ip;
			$vars = array();
			watchdog('goaway', $msg, $vars, WATCHDOG_ERROR);
			drupal_set_message(t($msg));
		}
	}
	$form_state['redirect'] = 'admin/user/goaway';
}

/**
* Handles single IP ban submission
*/
function goaway_ban_ip_submit($form, &$form_state) {
	$banned_ip = $form_state['values']['goaway_banlist'];
	$banned = goaway_check_for_ban($banned_ip);
	if($banned) {
		$msg = 'IP: ' . $banned_ip . " is already banned.";
		drupal_set_message(t($msg));
	} else {
		$ban_success = db_insert('goaway')
			->fields(array(
				'gid' => '',
				'ip' => $banned_ip,
			)
		)->execute();
		if ($ban_success) {
			$msg = 'Banned IP: ' . $banned_ip;
			$vars = array('%ip' => $banned_ip);
			watchdog('goaway', $msg, $vars, WATCHDOG_INFO);
			drupal_set_message(t($msg));
		}
		else {
			$msg = 'Failed to ban IP: ' . $banned_ip;
			$vars = array();
			watchdog('goaway', $msg, $vars, WATCHDOG_ERROR);
			drupal_set_message(t($msg));
		}
	}
	$form_state['redirect'] = 'admin/user/goaway';
}

/**
* Creates goaway unban page
*/
function goaway_unban() {
	$page_content = '<p>' . goaway_get_ip_from_ban(arg(4)) . '</p>';
	$unbanform = drupal_get_form('goaway_unban_form');
	return array(
		'headline' => array(
			'#type' => 'markup',
			'#markup' => '<h2>' . t('Are you sure you want to unban this IP address?') . '</h2>',
		),
		'body' => array(
			'#type' => 'markup',
			'#markup' => $page_content,
		),
		$unbanform,
	);
}

/**
* Creates form for goaway_unban()
*/
function goaway_unban_form($form, &$form_state) {
	$form['goaway_unban'] = array(
		'#type' => 'hidden',
		'#value' => arg(4),
	);
	$form['actions'] = array('#type' => 'actions');
	$form['actions']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Unban'),
	);
	return $form;
}

/**
* Handles unban form submission
*/
function goaway_unban_form_submit($form, &$form_state) {
	$gid = $form_state['values']['goaway_unban'];
	$ip = goaway_get_ip_from_ban($gid);
	db_delete('goaway')
		->condition('ip', $ip)
		->execute();
		$msg = 'Unbanned IP: ' . $ip;
		$vars = array('%ip' => $ip);
		watchdog('goaway', $msg, $vars, WATCHDOG_INFO);
		drupal_set_message(t($msg));
	$form_state['redirect'] = 'admin/user/goaway';
}

/**
* Returns hostname (IP) for a cid
*/
function goaway_get_ip_from_comment($cid) {
	$addy = 0;
	$result = db_query("SELECT hostname FROM {comment} WHERE cid = :cid", array(
		':cid' => $cid,
	));
	foreach ($result as $data) {
		$addy = $data->hostname;
	}
	return $addy;
}

/**
* Returns hostname (IP) for a gid
*/
function goaway_get_ip_from_ban($gid) {
	$addy = 0;
	$result = db_query("SELECT ip FROM {goaway} WHERE gid = :gid", array(
		':gid' => $gid,
	));
	foreach ($result as $data) {
		$addy = $data->ip;
	}
	return $addy;
}

/**
* Returns 1 if IP is banned, 0 if not banned
*/
function goaway_check_for_ban($addy) {
	$banned = 0;
	$result = db_query("SELECT gid FROM {goaway} WHERE ip = :ip ORDER BY gid DESC LIMIT 0,1", array(
		':ip' => $addy,
	));
	foreach ($result as $data) {
		$banned = $data->gid;
	}
	return $banned;
}

