<?php
/**
 * @file
 * Code for the COD Session Evaluations feature.
 */

include_once 'cod_session_evaluations.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function cod_session_evaluations_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'access') {
    return "plugins/access";
  }
}

/**
* Implements hook_form_alter().
*/
function cod_session_evaluations_form_session_evaluation_node_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['field_eval_session']['und']['#default_value'])) {
    $session_nid = $form['field_eval_session']['und']['#default_value'];
    $form['field_eval_session']['#disabled'] = TRUE;
    // If the user has already reviewed the referenced session, don't let them
    // submit another session evaluation.
    if (cod_session_evaluations_user_reviewed_session($form['uid']['#value'], $session_nid[0]) && !user_access('administer content')) {
      $form['#access'] = FALSE;
      drupal_set_message(t('You have already evaluated this session. You can only submit one evaluation per session.'));
      drupal_goto('node/'. $session_nid[0]);
    }
  }
}

/**
* Implements hook_node_view().
*/
function cod_session_evaluations_node_view($node, $view_mode, $langcode) {
  //sanity check -- we should only be posting on the session nodes. Return if its any other node or listing
  //todo -- probably want to be able add the link for a listing of nodes, but we can't at the moment
  //        since entities aren't loaded on anything but the full view
  if(($node->type != 'session' && $node->type != 'schedule_item') || $view_mode != 'full') {
    return;
  }
  unset($node->content['links']['comment']);
  global $user;
  $account = $user;
  $bundle = $node->type;

  //lets check first that the session was accepted AND its the event has started
  if ($timeslot = $node->field_session_timeslot['und'][0]['entity']) {
    if (!empty($timeslot->field_timeslot_time[LANGUAGE_NONE][0]['target_id'])) {
      $time_slot = entity_load_single('cod_event_time', $timeslot->field_timeslot_time[LANGUAGE_NONE][0]['target_id']);
    }
  }
  //how could you evaluate a presentation if it wasn't ever scheduled?
  if(empty($time_slot)) {
    return;
  }

  //How could you evaluate a presenatation if it never was accepted OR it hasn't occured yet?
  //Need to first set the time based on the site (default timezone) THEN reset
  //it to the timezone of the conference.
  if (isset($node->og_group_ref[LANGUAGE_NONE][0]['target_id']) && is_numeric($node->og_group_ref[LANGUAGE_NONE][0]['target_id'])) {
    $conference = node_load($node->og_group_ref[LANGUAGE_NONE][0]['target_id']);
    $current_conferece_time = new DateTime(date('Y-m-d H:i:s'));
    $current_conferece_time->setTimezone(new DateTimeZone($conference->field_dates[LANGUAGE_NONE][0]['timezone']));

    // Get the time for the session
    $session_start = new DateTime($time_slot->field_evttime_date[LANGUAGE_NONE][0]['value'], $current_conferece_time->getTimezone());
    if ($current_conferece_time < $session_start) {
      return;
    }
  }
  if(!($node->field_accepted[LANGUAGE_NONE][0]['value'])) {
    return;
  }
  // Hide the "Provide feedback on this session" links if the user has already
  // submitted a survey about this session.
  if (!cod_session_evaluations_user_reviewed_session($account->uid, $node->nid) && $node->type == $bundle) {
    if (user_is_logged_in()) {
      if (!cod_session_evaluations_user_is_speaker($account, $node)) {
        $links = array(
          'feedback' => array(
            'title' => variable_get('cod_session_evaluations_feedback_text', t('Provide feedback on this session')),
            'href' => 'node/add/session-evaluation',
            'query' => array('field_eval_session' => $node->nid, 'destination' => $_GET['q']),
            'attributes' => array('class' => 'button-link'),
          ),
        );
      }
    }
    else {
      $links = array(
        'feedback' => array(
          'title' => t('Log in to evaluate this session'),
          'href' => 'user/login',
          'query' => array('destination' => $_GET['q']),
        ),
      );
    }

    if (isset($links)) {
      $node->content['links']['cod_session_evaluations_feedback'] = array(
        '#theme' => 'links__node__cod_session_evaluations_feedback',
        '#links' => $links,
        '#attributes' => array('class' => array('links', 'inline')),
      );
    }
  }
  else {
    drupal_set_message(t('Thanks for providing feedback on this session.'));
  }
}

/**
* Implements hook_node_validate().
*/
function cod_session_evaluations_node_validate($node, $form, &$form_state) {
  if ($node->type == 'session_evaluation') {
    // Check if user has already submitted an evaluation for this session.
    if (cod_session_evaluations_user_reviewed_session($form['uid']['#value'], $form['field_eval_session']['und']['#value'])) {
      form_set_error('field_eval_session', t('You have already evaluated this session. You can only submit one evaluation per session.'));
    }
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function cod_session_evaluations_field_widget_form_alter(&$element, &$form_state, $context) {
  $field_name = 'field_eval_session';
  // Set a default value based on the nid.
  if (isset($element['#field_name']) && $element['#field_name'] == $field_name && isset($_GET['nid'])) {
    $element['#default_value'] = $_GET['nid'];
  }
}

/**
* Helper function to determine whether a user has already reviewed
* a particular session.
*/
function cod_session_evaluations_user_reviewed_session($uid, $nid) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->propertyCondition('status', 1)
    ->propertyCondition('type', 'session_evaluation')
    ->propertyCondition('uid', $uid)
    ->fieldCondition('field_eval_session', 'target_id', $nid);
  $result = $query->execute();
  return !empty($result['node']);
}

/**
* Helper function to determine whether a user has already reviewed
* a particular session.
*/
function cod_session_evaluations_user_is_speaker($account, $node) {
  foreach ($node->field_speakers[LANGUAGE_NONE] AS $speakers) {
    if ($account->uid == $speakers['target_id']) {
      return TRUE;
    }
  }
  return FALSE;
}
