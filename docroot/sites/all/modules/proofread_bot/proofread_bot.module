<?php

/**
* Display help and module information
*/
function proofread_bot_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#proofread_bot":
      $output = '<p>'.  t("Proofread Bot performs grammar, style and plagiarism checks on your content.") .'</p>';
      break;
  }
  return $output;
}

/**
 * implementation of hook_permission
 */
function proofread_bot_permission() {
  return array(
    'proofread bot_permission' => array(
      'title' => t('Use Proofread Bot'),
      'description' => t('Permission for role to perform Proofread Bot checks.'),
    ),
  );
}

/**
 * Implementation of hook_menu
 */
function proofread_bot_menu() {
  $items = array();

  $items['admin/config/system/proofread_bot'] = array(
    'title' => 'Proofread Bot Settings',
    'description' => 'Set the various Proofread Bot Settings here',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('proofread_bot_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
   );

   $items['proofread_bot/check'] = array(
    'title' => 'Proofread Bot Check',
    'page callback' => 'proofread_bot_perform',
	//somehow this blocks the admin user
    //'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
   );

   
  return $items;
}

// ======================================
// Administration Page:
// ======================================
function proofread_bot_admin() {

// get fields of type text
foreach (field_info_fields() as $field)  {
  if ($field["module"] == "text")
    $text_fields[$field["field_name"]] = $field["field_name"];
  }
  //dpm($text_fields);

    $form['field'] = array(
    '#type' => 'fieldset',
    '#title' => t('Field Settings'),
  '#description' => t("Select the field which will be enabled for proofreading content."),
    '#weight' => 0,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['field']['proofread_bot_field'] = array(
    '#type' => 'select',
    '#title' => t('Proofread Bot Field'),
    '#default_value' => variable_get('proofread_bot_field', 'body'),
  '#options' => $text_fields,
    '#description' => t("Your Proofread Bot field."),
    '#required' => FALSE,
  );
  $form['field']['proofread_bot_field_location'] = array(
    '#type' => 'select',
    '#title' => t('Proofread Bot Field Location'),
    '#default_value' => variable_get('proofread_bot_field', 'before'),
  '#options' => array("before" => "before", "after" => "after"),
    '#description' => t("Show the Proofread Bot button before or after the text field."),
    '#required' => FALSE,
  );
  
  $form['account'] = array(
    '#type' => 'fieldset',
    '#title' => t('Account Settings'),
  '#description' => t("Your account details for <a href=\"http://proofread_bot.com\" target=\"_blank\">proofread_bot.com</a>. You can use the service without an account, but your usage is limited to checking one post up to 600 words per day. If you want more get an account <a href=\"http://proofread_bot.com/user\" target=\"_blank\">here</a>."),
    '#weight' => 0,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['account']['proofread_bot_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Proofread Bot Username'),
    '#default_value' => variable_get('proofread_bot_username', ''),
    '#size' => 32,
    '#maxlength' => 128,
    '#description' => t("Your Proofread Bot username."),
    '#required' => FALSE,
  );
  $form['account']['proofread_bot_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Proofread Bot Password'),
    '#default_value' => variable_get('proofread_bot_password', ''),
    '#size' => 32,
    '#maxlength' => 128,
    '#description' => t("Your Proofread Bot password."),
    '#required' => FALSE,
  );
  $form['debug'] = array(
    '#type' => 'fieldset',
    '#title' => t('Debug Settings'),
    '#weight' => 1,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['debug']['proofread_bot_debug'] = array(
    '#type' => 'checkbox',
    '#title' => t('Debug Mode'),
    '#default_value' => variable_get('proofread_bot_debug', FALSE),
    '#description' => t("Check this to write all debug messages to the log."),
    '#required' => FALSE,
  );
  
return system_settings_form($form);
}


function proofread_bot_node_view($node)  {
  if (user_access('Use Proofread Bot')) {

    drupal_add_js('
        jQuery(document).ready(function(){
        jQuery(".field-name-' . variable_get('proofread_bot_field', 'body').'") . ' . variable_get('proofread_bot_field_location', 'before') . '(\'<div id="proofread_bot-button-holder"><button id="proofread_bot-submit">Check with Proofread Bot</button></div>\');      
        jQuery("#proofread_bot-submit").click(function(){
		
          jQuery("#proofread_bot-button-holder").append("<img id=\"proofread_bot_throbber\" src=\"sites/all/modules/proofread_bot/images/throbber.gif\" />");

          jQuery.ajax({
             type: "POST",
             url: "proofread_bot/check",
             dataType: "html",
             data: {"text": jQuery(".field-name-' . variable_get('proofread_bot_field') . '").html()
              },
             success: function(proofread_result){
                jQuery("#proofread_bot-submit").after(proofread_result);
				jQuery("#proofread_bot_throbber").remove(); 
             }
            });    
          });
        });
        ', 'inline');
    
    }
  }

function proofread_bot_perform() {
  module_load_include("php", "proofread_bot", "proofread_bot.api");
  
  proofread_bot_debug_message('Received a raw POST submission: '. print_r($_POST,TRUE));
  proofread_bot_check_api ($_POST["text"]);
}

function proofread_bot_debug_message($message) {
  //Debugging
  if (variable_get('proofread_bot_debug', FALSE)) {
    watchdog('proofread_bot',$message);
  }
}