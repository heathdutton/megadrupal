<?php
/**
 * @file
 * Tests for the syntaxhighlighter_to_pre module.
 */

class SyntaxhighlighterToPreTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => '{syntaxhighlighter} to PRE Converter',
      'description' => 'Tests for converting function.',
      'group' => 'Syntax highlighter',
    );
  }

  function setUp() {
    parent::setUp(array('syntaxhighlighter_to_pre'));
  }

  function testSyntaxhighlighterToPre() {
    $cases = array(
      array(
        'source' => "{syntaxhighlighter}{/syntaxhighlighter}",
        'target' => "<pre class=\"\"></pre>"
      ),
      array(
        'source' => "{syntaxhighlighter brush:php}{/syntaxhighlighter}",
        'target' => "<pre class=\"brush:php\"></pre>"
      ),
      array(
        'source' => "{syntaxhighlighter brush:php} echo 'Hello World!'; {/syntaxhighlighter}",
        'target' => "<pre class=\"brush:php\"> echo 'Hello World!'; </pre>"
      ),
      // Tests for '<' to '&lt;' replacement.
      array(
        'source' => "{syntaxhighlighter brush:html} <p>Hello World!</p> {/syntaxhighlighter}",
        'target' => "<pre class=\"brush:html\"> &lt;p>Hello World!&lt;/p> </pre>"
      ),
      array(
        'source' => "{syntaxhighlighter brush:html} <p>Hello World!</p> <br/> <p> Simpletest is good!</p> {/syntaxhighlighter}",
        'target' => "<pre class=\"brush:html\"> &lt;p>Hello World!&lt;/p> &lt;br/> &lt;p> Simpletest is good!&lt;/p> </pre>"
      ),
      // ~ Tests for '<' to '&lt;' replacement.
    );

    foreach ($cases as $case) {
      $this->assertEqual($case['target'], _syntaxhighlighter_to_pre_replace_old_tags($case['source']));
    }
  }
}
