<?php
/**
 * @file
 */


/**
 * Implements hook_menu().
 */
function og_homepage_menu() {
  $items = array();
  
  $items['admin/config/group/homepage'] = array(
    'title' => 'OG homepage',
    'description' => 'Set a user\'s group as their default front page when logged in.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('og_homepage_admin_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements hook_preprocess_page().
 */
function og_homepage_preprocess_page(&$vars) {
  global $user;

  // Check if we have a logged in user and if we are on the front page.
  if ($user->uid && $vars['is_front']) {
    // Check if this module is enabled.
    if (variable_get('og_homepage_enabled', FALSE)) {
      // Get group id and redirect.
      $nid = og_homepage_get_etid();
      if ($nid) drupal_goto('node/'. $nid);
    }
  }

}


/**
 * Returns the entity id of current user's homepage group.
 * Note that only node groups are supported at this time.
 */
function og_homepage_get_etid() {
  global $user;
  $etid = 0;

  // Get groups the user is a member of.
  $user_groups = og_get_groups_by_user();

  // Make order descending so we have the lowest group id last.
  if (isset($user_groups)) {
    ksort($user_groups['node']);
    $user_groups['node'] = array_reverse($user_groups['node'], TRUE);

	  // Get which content type is homepage.
	  $homepage_type = variable_get('og_homepage_type', '');

	  // Iterate results.
	  foreach ($user_groups['node'] as $nid) {

	    $node = node_load($nid);
	    $etid = isset($node->nid) ? $node->nid : 0;

	    // Check if content type is home group.
	    if ($node->type == $homepage_type) {
	      $etid = $node->nid;
	      break;
	    }

	  }
  }

  return $etid;
}


/**
 * Admin settings form.
 */
function og_homepage_admin_settings_form() {
  $form = array();
  
  $form['og_homepage_settings']['info'] = array(
    '#type' => 'markup',
    '#prefix' => '<p>',
    '#suffix' => '</p>',
    '#markup' => t('
      When this module is enabled, users will be redirected to a group they are a member of when going to the front page.
      If a user is a member of two or more groups, and "Homepage group content type" is set to "None", the homepage will be set to the group with the lowest id (first created).
      To redirect to a specific group content type, choose a group enabled content type in the "Homepage group content type" select list.

    '),
  );

  $form['og_homepage_settings']['og_homepage_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enabled'),
    '#description' => t('Check to enable this module.'),
    '#default_value' => variable_get('og_homepage_enabled', ''),
  );

  $types = node_type_get_types();
  
  $options = array('' => t('None'));
  foreach ($types as $type) {
    if (og_is_group_type('node', $type->type)) {
      $options[$type->type] = $type->name;
    }
  }

  $form['og_homepage_settings']['og_homepage_type'] = array(
    '#type' => 'select',
    '#options' => $options,
    '#title' => t('Homepage group content type'),
    '#description' => t('Select which group content type that should be considered as group homepage if a user is a member of more than one group.'),
    '#default_value' => variable_get('og_homepage_type', ''),
  );

  return system_settings_form($form);
}


/**
 * Implements hook_block_info().
 */
function og_homepage_block_info() {

  $blocks['og_homepage_title'] = array(
    'info' => t('OG homepage title'),
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function og_homepage_block_view($delta = '') {
  switch ($delta) {
    case 'og_homepage_title':
      $block['subject'] = t('OG homepage title');
      $block['content'] = og_homepage_block_contents($delta);
      break;
  }
  return $block;
}

/**
 * Returns block contents.
 */
function og_homepage_block_contents($delta) {
  switch ($delta) {
    case 'og_homepage_title':
      if ($entity = node_load(og_homepage_get_etid())) {
        return array('#markup' => $entity->title);
      }
      return;
      break;

    default:
      break;
  }
}