<?php

/**
 * Implements hook_field_extra_fields().
 */
function bundleswitcher_field_extra_fields() {
  $destination = drupal_get_destination();
  foreach (entity_get_info() as $entity_type => $entity_info) {
    if (empty($entity_info['entity keys']['bundle'])) {
      // This entity doesn't support a bundle.
      continue;
    }
    foreach ($entity_info['bundles'] as $bundle => $bundle_info) {
      if (variable_get('bundleswitcher__' . $entity_type)) {
        $fields[$entity_type][$bundle]['form']['bundleswitcher'] = array(
          'label' => t('Bundle'),
          'weight' => -4,
          'edit' => l(t('disable'), 'admin/structure/bundleswitcher/disable/' . $entity_type, array('query' => $destination)),
        );
      }
      else {
        $fields[$entity_type][$bundle]['form']['bundleswitcher'] = array(
          'label' => t('Bundle (disabled)'),
          'weight' => -4,
          'edit' => l(t('enable'), 'admin/structure/bundleswitcher/enable/' . $entity_type, array('query' => $destination)),
        );
      }
    }
  }
  return $fields;
}

/**
 * Implements hook_menu().
 */
function bundleswitcher_menu() {
  $items['admin/structure/bundleswitcher/enable/%'] = array(
    'title' => 'Enable bundle switcher',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bundleswitcher_confirmation_form', 3, 4, 5),
    'access arguments' => array('administer site configuration'),
  );
  $items['admin/structure/bundleswitcher/disable/%'] = array(
    'title' => 'Disable bundle switcher',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bundleswitcher_confirmation_form', 3, 4, 5),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function bundleswitcher_confirmation_form($form, &$form_state, $op, $entity_type) {
  if (!entity_get_info($entity_type)) {
    return drupal_not_found();
  }

  $form['#entity_type'] = $entity_type;
  $form['#op'] = $op;
  if ($op == 'enable') {
    $message = t('Are you sure you want to enable bundle switching for %entity_type?', array('%entity_type' => $entity_type));
    $button = t('Enable');
  }
  else {
    $message = t('Are you sure you want to disable bundle switching for %entity_type?', array('%entity_type' => $entity_type));
    $button = t('Disable');
  }

  return confirm_form($form,
    $message,
    'admin',
    '',
    $button,
    t('Cancel')
  );
}

function bundleswitcher_confirmation_form_submit($form, &$form_state) {
  if ($form['#op'] == 'enable') {
    variable_set('bundleswitcher__' . $form['#entity_type'], TRUE);
  }
  else {
    variable_del('bundleswitcher__' . $form['#entity_type'], TRUE);
  }
}

function bundleswitcher_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
  if (variable_get('bundleswitcher__' . $entity_type)) {
    $entity_info = entity_get_info($entity_type);
    $bundle_options = array();
    foreach ($entity_info['bundles'] as $bundle => $bundle_info) {
      $bundle_options[$bundle] = $bundle_info['label'];
    }
    if ($bundle_options) {
      // Try to figure out the bundle label.
      $properties = entity_get_property_info($entity_type);
      if (isset($entity_info['entity keys']['bundle']) && isset($properties['properties'][$entity_info['entity keys']['bundle']]['label'])) {
        $label = $properties['properties'][$entity_info['entity keys']['bundle']]['label'];
      }
      else {
        $label = t('Bundle');
      }

      $form['bundleswitcher'] = array(
        '#type' => 'select',
        '#title' => $label,
        '#options' => $bundle_options,
        '#default_value' => $form['#bundle'],
        '#process' => array('_bundleswitcher_select_process', 'ajax_process_form'),
        '#element_validate' => array('_bundleswitcher_element_validate'),
        '#entity_type' => $entity_type,
        '#ajax' => array(
          'callback' => '_bundleswitcher_ajax_callback',
          'method' => 'replace',
        ),
      );
    }
  }
}

function _bundleswitcher_select_process($element, &$form_state, &$form) {
  $element['#ajax']['wrapper'] = $form['#id'];
  return $element;
}

function _bundleswitcher_element_validate($element, &$form_state, $form) {
  if ($element['#value'] != $element['#default_value']) {
    $form_state['rebuild'] = TRUE;
    $entity_info = entity_get_info($element['#entity_type']);
    $form_state[$element['#entity_type']]->{$entity_info['entity keys']['bundle']} = $element['#value'];
  }
}

function _bundleswitcher_ajax_callback($form, $form_state) {
  return $form;
}
