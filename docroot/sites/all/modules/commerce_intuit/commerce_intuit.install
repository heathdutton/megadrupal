<?php

/**
 * @file
 * Performs install/uninstall used for Commerce Intuit.
 */

/**
 * Implements hook_requirements().
 */
function commerce_intuit_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime' || $phase == 'install') {
    $t = get_t();
    $has_curl = function_exists('curl_init');
    $requirements['commerce_intuit_curl'] = array(
      'title' => $t('Intuit CURL'),
      'value' => $has_curl ? $t('Enabled') : $t('Not found'),
      'description' => '',
      'severity' => REQUIREMENT_OK,
    );
    if (!$has_curl) {
      $requirements['curl']['severity'] = REQUIREMENT_ERROR;
      $url = l($t('cURL'), "http://php.net/manual/en/curl.setup.php");
      $requirements['curl']['description'] = $t('The testing framework could not be installed because the PHP !cURL library is not available.', array('!cURL' => $url));
    }
  }
  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function commerce_intuit_uninstall() {
  variable_del('commerce_intuit_title');
  variable_del('commerce_intuit_ssl');

  // Production.
  variable_del('commerce_intuit_production');
  variable_del('commerce_intuit_applogin');
  variable_del('commerce_intuit_connticket');
  variable_del('commerce_intuit_appid');
  variable_del('commerce_intuit_pem');

  // Sandbox.
  variable_del('commerce_intuit_sand_production');
  variable_del('commerce_intuit_sand_applogin');
  variable_del('commerce_intuit_sand_connticket');
  variable_del('commerce_intuit_sand_appid');
  variable_del('commerce_intuit_sand_pem');
}
