
Reff. URL: 
https://developer.intuit.com/docs/030_qbms/0070_advanced_topics/hosted_security_model

How to Configure Intuit payment processor in your Drupal.

Requirements:
    App Login: This is generated by Intuit for you. 
    Connection Ticket: A valid connection ticket from the merchant whose account 
                       you are connecting to.
    Application ID : This is generated by Intuit for you.
    .Pem PATH : After submitting server .csr file in intuit terminal intuit will
                provide this file to you. 
                  Save this file on your user home directory and provide path here.

  When creating the application, Quickbooks will ask for an “https:\\” 
callback url for various functions. It is VERY important that these URLs have 
a VALID SSL certificate issued by a recognized Certificate Authority (CA).

Issuing Certificate : 
	Now that you have created the Gateway Application account, you are going
        to need to create a certificate using Quicken’s certificate tools. 
	What is this certificate? It is a list of information that allows 
        Quicken to identify your unique application and authenticate 
        it to Quicken’s system. 
	  Basically, when you want to do a transaction for a Merchant,
        you need two things: 

	1. A valid certificate issued by Quicken. 
	2. A valid connection ticket from the merchant whose account 
           you are connecting to.

 First you need to create a key file. This is the file that is used to 
unlock your certificate once it is issued. 

openssl genrsa -out <KEYFILE NAME> 1024 

example: 
	openssl genrsa -out abc.com.key 1024 

Once this key is generated, you can create your certificate signing request to 
be transmitted to Intuit. 

IMPORTANT: When creating this certificate the Common Name (Your Name) needs to 
be EXACTLY your. url:your.application.name. 

openssl req -new -key <KEYFILE NAME> -out <CSRFILE NAME> 

example: 
openssl req -new -key /path/abc.com.key -out /tmp/abc.com.csr 
Country Name (2 letter code) [AU]:US 
State or Province Name (full name) [Some-State]:NY 
Locality Name (eg, city) []:New York 
Organization Name (eg, company) [Internet Widgits Pty Ltd]:My Company Ltd. 
Organizational Unit Name (eg, section) []: 
Common Name (eg, YOUR name) []:www.abc.com:myapp.abc.com 
Email Address []: 
Please enter the following 'extra' attributes to be sent with 
your certificate request 
A challenge password []: 
An optional company name []: 
IMPORTANT NOTE: The Email Address is (by default) attached to the CN. 
If you enter an email address, the certificate WILL BE REJECTED by Intuit’s 
servers. 

After creating CSR file. Submit your file to intuit in 
"Utility to sign Certificate". Intuit will provide you Signed certificate.

Intuit CA Certificate– this is used by your server to verify Intuit’s server. 
It can be added to your keystore. Your keystore is a list of all of 
the certificates which your computer considers to be valid.

example :
(assumes you pasted the CA into the file /tmp/intuit.ca): 
 cat /tmp/intuit.ca >> /etc/ssl/certs/ca-certificates.crt 

Signed Certificate – this is the certificate presented by your application 
to the Intuit website to authenticate the system. It should be put in a SECURE 
place that your web server has access to. 

Example:
 (Certificate is located at): 
 /tmp/pems/intuit.pem 
(NOTE: For test applications, your Intuit certificate should be named 
as intuit-test.pem)

Your intuit.pem will be a combination of the key that you created in step 8 and 
the signed certificate provided by Intuit. You can achieve this by executing 

cat /path/abc.com.key >> /tmp/pems/intuit.pem 
- PEM files need to be stored in user home directory, This will go in .pem PATH

In order to get your connection ticket in a hosted security model, you need to
visit this URL with your AppID in the URL 

https://login.ptc.quickbooks.com/j/qbn/sdkapp/confirm?appid=<AppID>&serviceid=1002&appdata=10001.

When we go to that URL we log in with the merchant account that we set up in
step 4. Then we check the radio button for your application and hit 
“use this connection". What this does is set off a script at Intuit that POSTS 
data to the URL we entered (https://abc.com/intuit.php) as callback when 
we registered the application.Here is a listing of the script that 
we use to grab this data and write it to a file: 

//This script is accessed by Intuit's QBMS to return data from a request. 
$connectionticket = $_POST['conntkt']; 
$appdata = $_POST['appdata']; 
$appid = $_POST['appid']; 
 
$handle = fopen("/tmp/ticket.txt", "w"); 
fwrite($handle, $connectionticket."\n"); 
fwrite($handle, $appdata."\n"); 
fwrite($handle, $appid."\n"); 

   What this does is create a file with the connection ticket in it.
Once we have this connection ticket we are ready to go and start doing 
transactions.

In order to get your connection ticket in a desktop security model,
 visit the following URL replacing your AppID :  
 https://merchantaccount.ptc.quickbooks.com/j/sdkconnection?appid=<YourAppID>&sessionEnabled=false 
Log in with your merchant account details and a screen will appear with 
the connection ticket.  Copy and paste it into your CiviCRM payment processor
configuration.
The Site URLs namely 
	Production: https://webmerchantaccount.quickbooks.com/j/AppGateway
	Test:       https://webmerchantaccount.ptc.quickbooks.com/j/AppGateway
