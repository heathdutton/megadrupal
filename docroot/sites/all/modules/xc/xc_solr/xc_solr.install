<?php
/**
 * @file
 * Install file for the XC Solr module
 *
 * @copyright (c) 2010-2011 eXtensible Catalog Organization
 */

/**
 * Implements hook_install().
 */
function xc_solr_install() {
  variable_set('xc_solr_field_type_defaults_installed', XC_INSTALLED);
  variable_set('xc_solr_servers_defaults_installed', XC_INSTALLED);
}

/**
 * Implements hook_uninstall().
 */
function xc_solr_uninstall() {
  variable_del('xc_solr_field_hooks');
  variable_del('xc_solr_field_type_defaults_installed');
  variable_del('xc_solr_fields2index_list');
  variable_del('xc_solr_fields2index_list_applied');
  variable_del('xc_solr_indexing_statistics');
  variable_del('xc_solr_info');
  variable_del('xc_solr_info_dates');
  variable_del('xc_solr_info_directory');
  variable_del('xc_solr_info_last_modified');
  variable_del('xc_solr_iteration_strategies');
  variable_del('xc_solr_proxy_query');
  variable_del('xc_solr_remove_lat_locations');
  variable_del('xc_solr_servers_defaults_installed');
  variable_del('xc_solr_service_type');
  variable_del('xc_solr_sortable_fields');
  variable_del('xc_solr_version_numbers');
}

/**
 * Implemetation of hook_schema()
 * @return unknown_type
 */
function xc_solr_schema() {
  $schema['xc_solr_servers'] = array(
    'description' => 'Table that holds information about Solr servers',
    'fields' => array(
      'sid' => array(
        'description' => 'The primary identifier for a Solr server',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'location_id' => array(
        'description' => 'Primary identifier for metadata source',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the Solr server.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'host' => array(
        'description' => 'The host of the Solr server.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'port' => array(
        'description' => 'The port of the Solr server.',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'path' => array(
        'description' => 'The path of the Solr application.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'Description.',
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'sid' => array('sid'),
    ),
    'unique keys' => array(
      'sid_location_id' => array('sid', 'location_id'),
      'location_id_sid' => array('location_id', 'sid'),
    ),
    'primary key' => array('sid'),
  );

  $schema['xc_solr_field_type'] = array(
    'description' => 'Dynamic Solr field types.',
    'fields' => array(
      'type_id' => array(
        'description' => 'The identifier of Solr field type.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human readable label of Solr field.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'The the Solr field type as defined in the schema.xml.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'suffix' => array(
        'description' => 'The suffix of field type.',
        'type' => 'varchar',
        'length' => '20',
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'description' => 'The weight of the field type used in ordering.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
    ),
    'indexes' => array(
      'type_id' => array('type_id'),
    ),
    'primary key' => array('type_id'),
  );

  return $schema;
}


/**
 * Implements hook_enable().
 *
 * Imports default values to
 */
function xc_solr_enable() {
  if (module_exists('xc_util')) {
    $path = drupal_get_path('module', 'xc_solr') . '/import/';

    if (variable_get('xc_solr_field_type_defaults_installed', XC_UNINSTALLED) == XC_INSTALLED) {
      $filename = $path . 'xc_solr_field_type.csv';
      xc_util_bulk_insert('xc_solr_field_type', xc_util_csv2objects($filename));
      variable_set('xc_solr_field_type_defaults_installed', XC_LOADED);
    }
    if (variable_get('xc_solr_servers_defaults_installed', XC_UNINSTALLED) == XC_INSTALLED) {
      $filename = $path . 'xc_solr_servers.csv';
      xc_util_bulk_insert('xc_solr_servers', xc_util_csv2objects($filename));
      variable_set('xc_solr_servers_defaults_installed', XC_LOADED);
    }
  }
}

/**
 * Implements hook_requirements().
 *
 * Requirement checks
 *
 * @param $phase (String)
 * @return (Array)
 *   The requirements of the module.
 */
function xc_solr_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $has_json = function_exists('json_decode');

    $requirements['xc_solr_json'] = array(
      'title' => t('JSON functions'),
      'value' => $has_json ? t('Enabled') : t('Not found'),
    );
    if (!$has_json) {
      $requirements['xc_solr_json']['severity'] = REQUIREMENT_ERROR;
      $requirements['xc_solr_json']['description'] = t('The XC Solr module will not properly worked because the the PHP <a href="@json_functions">JSON</a> functions are not available. Please consult the following documents: !php_manual, !centOS_guide',
        array(
        '@json_functions' => 'http://www.php.net/manual/en/book.json.php',
        '!php_manual' => l(t('PHP manual'), 'http://www.php.net/manual/en/json.setup.php'),
        '!centOS_guide' => l(
            t('Installing PHP\'s JSON extension on CentOS/RHEL 5'),
            'http://benlancaster.wordpress.com/2009/09/15/installing-php-json-centos-rhel-5/'),
      )
      );
    }
  }
  return $requirements;
}
