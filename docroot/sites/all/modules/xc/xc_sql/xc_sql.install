<?php
/**
 * @file
 * Installations functions for XC SQL module
 *
 * @copyright (c) 2010-2011 eXtensible Catalog Organization
 */

/**
 * Implements hook_install().
 */
function xc_sql_install() {
  variable_set('xc_sql_defaults_installed', XC_INSTALLED);
}

/**
 * Implements hook_uninstall().
 */
function xc_sql_uninstall() {
  variable_del('xc_sql_defaults_installed');
}

/**
 * Implemets hook_schema().
 */
function xc_sql_schema() {
  $schema['xc_sql_metadata'] = array(
    'description' => 'Table that stores the metadata',
    'fields' => array(
      'metadata_id' => array(
        'description' => 'Entity instance identifier',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'location_id' => array(
        'description' => 'Location identifier',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'metadata' => array(
        'description' => 'Metadata container',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'Entity instance last modified time',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'location_id' => array('location_id'),
      'metadata_id_location_id' => array('metadata_id', 'location_id'),
      'location_id_metadata_id' => array('location_id', 'metadata_id'),
    ),
    'primary key' => array('metadata_id'),
  );

  $schema['xc_sql_storage'] = array(
    'description' => 'Link table for metadata storage locations and SQL database storage',
    'fields' => array(
      'storage_id' => array(
        'description' => 'Related storage identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'location_id' => array(
        'description' => 'Related metadata storage location identifier',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'unique key' => array(
      'location' => array('location'),
      'storage_location' => array('storage_id', 'location_id'),
      'location_storage' => array('location_id', 'storage_id'),
    ),
    'primary key' => array('storage_id'),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 *
 * It imports default values
 */
function xc_sql_enable() {
  // imports default sql storage
  if (module_exists('xc_util')) {
    $path = drupal_get_path('module', 'xc_sql') . '/import/';
    if (variable_get('xc_sql_defaults_installed', XC_UNINSTALLED) == XC_INSTALLED) {
      $filename = $path . 'xc_sql_storage.csv';
      xc_util_bulk_insert('xc_sql_storage', xc_util_csv2objects($filename));
      variable_set('xc_sql_defaults_installed', XC_LOADED);
    }
  }
}