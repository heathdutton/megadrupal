<?php
/**
 * @file
 * Installation file for external API module
 *
 * @copyright (c) 2010-2011 eXtensible Catalog Organization
 */

/**
 * Implements hook_schema().
 */
function xc_external_schema() {

  $schema['xc_external_connection'] = array(
    'description' => 'Mapping bibliographic identifiers to xc_external records.',
    'fields' => array(
      'connection_id' => array(
        'description' => 'The identifier of the record.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'identifier' => array(
        'description' => 'One of the identifiers of the content.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'identifier_type' => array(
        'description' => 'The type of identifier (like OCLC, UPC, ISBN).',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'external_id' => array(
        'description' => 'xc_external record identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'connection_id' => array('connection_id'),
      'identifier' => array('identifier'),
      'identifier_type' => array('identifier_type'),
      'external_id' => array('external_id'),
    ),
    'primary key' => array('connection_id'),
  );

  $schema['xc_external'] = array(
    'description' => 'External content.',
    'fields' => array(
      'external_id' => array(
        'description' => 'The identifier of the record.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'service_provider' => array(
        'description' => 'The service provider (like Amazon, Syndetics etc.).',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'service_type' => array(
        'description' => 'The type of the service, like service_index, summary, cover image.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'updated_at' => array(
        'description' => 'When this service were last checked.',
        'type' => 'datetime',
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'not null' => FALSE
      ),
      'error' => array(
        'description' => 'When this service were last checked.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'service_url' => array(
        'description' => 'The URL of the service',
        'type' => 'text',
        'size' => 'medium',
      ),
      'service_content' => array(
        'description' => 'The content of the service',
        'type' => 'text',
        'size' => 'medium',
      ),
    ),
    'indexes' => array(
      'external_id' => array('external_id'),
      'service_type' => array('service_type'),
      'service_provider' => array('service_provider'),
      'updated_at' => array('updated_at'),
    ),
    'primary key' => array('external_id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function xc_external_uninstall() {
  variable_del('xc_external_last_checked');
}