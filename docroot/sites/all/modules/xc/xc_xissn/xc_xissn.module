<?php
/**
 * @file
 * Showing history and format variations of a journal.
 *
 * See some background here: http://www.oclc.org/developer/news/oclc-mashathon-2010-results-new-extensible-catalog-modules
 *
 * @copyright (c) 2010-2011 eXtensible Catalog Organization
 */

/**
 * Implements hook_menu().
 */
function xc_xissn_menu() {
  // public URLs
  $items['xc_xissn/ajax/resolve'] = array(
    'title' => 'Get journal history by ISSN number',
    'description' => 'It uses OCLC\'s xISSN service in the background.',
    'page callback' => 'xc_xissn_resolve',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_xc_display_full().
 */
function xc_xissn_xc_display_full($op, $xc_record) {
  if ($op == 'enhance') {

    // handling display modes. Possible modes are 'normal', 'ajax' and 'none'
    $display_mode = variable_get('xc_xissn_ajax', 'normal');

    // handle 'none' - skip ISSN information display
    if ($display_mode == 'none') {
      return;
    }

    $issn_numbers = xc_xissn_extract_numbers($xc_record);
    // do nothing if there were no issn numbers
    if ($issn_numbers === FALSE) {
      return;
    }

    // handle 'ajax' - postpone the display of ISSN information after the the page
    // displayed, and inject it with an Ajax function
    if ($display_mode == 'ajax') {

      // send CSS and JS info,
      drupal_add_css(drupal_get_path('module', 'xc_xissn') . '/xc_xissn.css');
      drupal_add_js(drupal_get_path('module', 'xc_util') . '/xc_util.js');
      drupal_add_js(drupal_get_path('module', 'xc_xissn') . '/xc_xissn.js');
      drupal_add_js(array('xc_xissn' => array(
          'numbers' => $issn_numbers,
          'url' => url('xc_xissn/ajax/resolve', array('absolute' => TRUE)),
        )), array('type' => 'setting', 'scope' => JS_DEFAULT));

      // and a minimal response, which will be enough to create an empty row
      return array(
        'xc_xissn' => array(
          'meta' => array(
            'type' => 'ajax',
            'id' => 'xc-xissn',
          ),
        ),
      );
    }
    // handling the 'normal' mode

    $items = array();
    $result_list = array();
    $iterations = array(
      'preceding' => t('Previous Related Titles'),
      'this' => t('requested item:'),
      'succeeding' => t('Subsequent Related Titles'),
    );
    foreach ($issn_numbers as $issn_number) {
      $titles = xc_xissn_history($issn_number);
      $text = '';
      foreach ($iterations as $key => $label) {
        if (isset($titles[$key])) {
          $prev_items = array();
          foreach ($titles[$key] as $title) {
            $is_current = ($title['issn'] == $issn_number);
            if ($is_current) {
              $prev_items[] = array(
                'data' => theme('xc_xissn_item', array('title' => $title, 'is_requested' => $is_current)),
                'class' => array('current-item'),
              );
            }
            else {
              $prev_items[] = theme('xc_xissn_item', array('title' => $title, 'is_requested' => $is_current));
            }
          }

          if (!empty($prev_items)) {
            $result_list[$label] = theme('item_list', array('items' => $prev_items, 'title' => NULL, 'type' => 'ul', 'attributes' => array('class' => array('xc-xissn-list'))));
          }
        }
      }
      $text .= '<p>'
            . t('See the it as a graph at OCLC\'s !page', array('!page' => l(t('page'), $titles['oclc_link'])))
            . '</p>';
      $text .= '<p>' . t('Note: this list does not mean, that all formats, and versions are available in the library - we provided link on ISSN number of the available ones.') . '</p>';
      $items[] = $text;
    }

    // combine evrything together
    if (!empty($items)) {
      drupal_add_css(drupal_get_path('module', 'xc_xissn') . '/xc_xissn.css');

      return array(
        'xc_xissn' => array(
          'meta' => array(
            'id' => 'xc-xissn',
            'title' => t('Journal history'),
          ),
          'content' => $result_list,
        ),
      );
    }
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function xc_xissn_resolve() {
  $issn_numbers = explode(',', $_GET['numbers']);

  $items = array();
  $result_list = array();
  $iterations = array(
    'preceding' => t('Previous Related Titles'),
    'this' => t('requested item:'),
    'succeeding' => t('Subsequent Related Titles'),
  );
  foreach ($issn_numbers as $issn_number) {
    $titles = xc_xissn_history($issn_number);
    $text = '';
    foreach ($iterations as $key => $label) {
      if (isset($titles[$key])) {
        $prev_items = array();
        foreach ($titles[$key] as $title) {
          $is_current = ($title['issn'] == $issn_number);
          if ($is_current) {
            $prev_items[] = array(
              'data' => theme('xc_xissn_item', array('title' => $title, 'is_requested' => $is_current)),
              'class' => array('current-item'),
            );
          }
          else {
            $prev_items[] = theme('xc_xissn_item', array('title' => $title, 'is_requested' => $is_current));
          }
        }

        if (!empty($prev_items)) {
          $result_list[$label] = theme('item_list', array('items' => $prev_items, 'title' => NULL, 'type' => 'ul', 'attributes' => array('class' => array('xc-xissn-list'))));
        }
      }
    }
    $text .= '<p>'
          . t('See the it as a graph at OCLC\'s !page', array('!page' => l(t('page'), $titles['oclc_link'])))
          . '</p>';
    $text .= '<p>' . t('Note: this list does not mean, that all formats, and versions are available in the library - we provided link on ISSN number of the available ones.') . '</p>';
    $items[] = $text;
  }

  $result = array();
  // combine evrything together
  if (!empty($items)) {
    $result = array(
      'xc_xissn' => array(
        'meta' => array(
          'id' => 'xc-xissn',
          'title' => t('Journal history'),
        ),
        'content' => $result_list,
      ),
    );
  }
  drupal_json_output($result);
}

/**
 *
 * @param $issn
 * @return (Array)
 *   'title' - the
 *       'shortform' => $xiisn_forms[(string)$issn['form']]['short'],
 *       'longform' => $xiisn_forms[(string)$issn['form']]['long'],
 *       'issn'  =>  (string)$issn,
 *       'rawcoverage' =>  (string)$issn['rawcoverage'],
 *       'rssurl' =>  (string)$issn['rssurl'],
 *
 */
function xc_xissn_history($issn) {
  static $xiisn_forms;
  if (!isset($xiisn_forms)) {
    $xiisn_forms = array(
      'JB' => array(
        'short' => t('Print version'),
        'long' => t('Printed serial'),
      ),
      'JC' => array(
        'short' => t('CD-ROM version'),
        'long' => t('Serial distributed electronically by carrier'),
      ),
      'JD' => array(
        'short' => t('Online version'),
        'long' => t('Electronic serial distributed online'),
      ),
      'MA' => array(
        'short' => t('Microform version'),
        'long' => t('Microform'),
      ),
    );
  }
  $url = 'http://xissn.worldcat.org/webservices/xid/issn/' . $issn . '?method=getHistory&format=php';
  $result = drupal_http_request($url);
  $fn = create_function('', 'return ' . $result->data . ';');
  $titles_raw = $fn();
  // eval("\$titles_raw = " . $result->data . ';');
  if ($titles_raw['stat'] == 'ok') {
    foreach ($titles_raw['group'] as $group) {
      $titles[$group['rel']] = $group['list'];
      foreach ($titles[$group['rel']] as $key => $title) {
        $titles[$group['rel']][$key] += array(
          'shortform' => (isset($xiisn_forms[$title['form']]) ? $xiisn_forms[$title['form']]['short'] : ''),
          'longform' => (isset($xiisn_forms[$title['form']]) ? $xiisn_forms[$title['form']]['long'] : ''),
        );
      }
    }
  }
  $titles['oclc_link'] = 'http://www.worldcat.org/xissn/titlehistory?issn=' . $issn;
  return $titles;
}

/**
 * @TODO Please document this function.
 * @see http://drupal.org/node/1354
 */
function theme_xc_xissn_item(&$variables) {
  // TODO Number of parameters in this theme funcion does not match number of parameters found in hook_theme.
  $title = $variables['title'];
  $is_requested = $variables['is_requested'];

  $text = '<em>' . $title['title'] . '</em>';
  $text .= ' ' . $title['rawcoverage'];
  $query = 'xc__identifier_ISSN_s:"' . $title['issn'] . '"';
  $exists = TRUE;
  if (module_exists('xc_search')) {
    $response = $GLOBALS['_xc_search_server']->search('type:manifestation ' . $query, 0, 0);
    $exists = (boolean) $response->response->numFound;
  }
  $link = 'ISSN ' . $title['issn'];
  if ($exists && !$is_requested) {
    $link = l($link, 'xc/search/*', array('query' => array('filter' => array($query))));
  }
  $text .= ' (';
  if ($title['shortform'] != '') {
    $text .= $title['shortform'] . ';';
  }
  $text .= ' ' . $link . ')';
  if ($is_requested) {
    $text .= ' <em>' . t('Note: this is the currently seen item.') . '</em>';
  }
  return $text;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function xc_xissn_theme() {
  return array(
    'xc_xissn_item' => array('title' => array(), 'is_requested' => FALSE),
  );
}

/**
 * Implements hook_form_alter().
 *
 * Modify the full record display option form
 *
 * @param $form (Array)
 *   FAPI form definition
 * @param $form_state (Array)
 *   FAPI form state
 * @param $form_id (String)
 *   Form identifier
 */
function xc_xissn_form_alter(&$form, $form_state, $form_id) {
  switch ($form_id) {

    // full record display form
    case 'xc_search_full_record_display_options_form':
      $form['enhancements']['xc_xissn_ajax'] = array(
        '#title' => t('<em>xISSN service response</em>'),
        '#type' => 'radios',
        '#options' => array(
          'normal' => t('Load it normally with the other parts of the page.'),
          'ajax' => t('Load it after the page were served (Ajax method).'),
          'none' => t('Do not display xISSN information at all.'),
        ),
        '#default_value' => variable_get('xc_xissn_ajax', 'normal'),
      );

      $form['#submit'][] = 'xc_xissn_full_record_display_options_form_submit';

      break;
  }
}

/**
 * Submit handler for full record display form
 *
 * Saves the value of xc_dewey_ajax Drupal variable
 *
 * @param $form (Array)
 *   FAPI form definition
 * @param $form_state (Array)
 *   FAPI form state
 */
function xc_xissn_full_record_display_options_form_submit($form, &$form_state) {
  $xc_xissn_ajax = $form_state['values']['xc_xissn_ajax'];
  variable_set('xc_xissn_ajax', $xc_xissn_ajax);
}

/**
 * Extracts the ISSN numbers from an XC record
 *
 * @param $xc_record (Array)
 *   The XC schema record
 *
 * @return (Array)
 *   The list of ISSN number if there is, otherwise FALSE
 */
function xc_xissn_extract_numbers($xc_record) {

  // check whethere there are xc:identifier at all
  if (!isset($xc_record['xc:identifier']) || empty($xc_record['xc:identifier'])) {
    return FALSE;
  }

  $issn_numbers = array();
  foreach ($xc_record['xc:identifier'] as $key => $instance) {
    if ($instance['@type'] == 'ISSN') {
      $issn_numbers[] = $instance['#value'];
    }
  }
  if (empty($issn_numbers)) {
    $issn_numbers = FALSE;
  }

  return $issn_numbers;
}
