<?xml version="1.0" encoding="utf-8" ?>
<drupal_test_merge>
  <!-- Table xc_search_display_template_element -->
    <xc_search_display_template_element>
        <element_name>creator</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>$fields = array();
if (isset({rdarole:artist}) || isset({rdarole:author}) || isset({rdarole:compiler}) || isset({rdarole:composer}) || isset({rdarole:speaker})) {
  if (isset({rdarole:artist})) {
    $fields = xc_util_push_metadata_value($fields, {rdarole:artist});
  }
  if (isset({rdarole:author})) {
    $fields = xc_util_push_metadata_value($fields, {rdarole:author});
  }
  if (isset({rdarole:compiler})) {
    $fields = xc_util_push_metadata_value($fields, {rdarole:compiler});
  }
  if (isset({rdarole:composer})) {
    $fields = xc_util_push_metadata_value($fields, {rdarole:composer});
  }
  if (isset({rdarole:speaker})) {
    $fields = xc_util_push_metadata_value($fields, {rdarole:speaker});
  }
}
elseif (isset({xc:creator})) {
  $fields = xc_util_push_metadata_value($fields, {xc:creator});
}
elseif (isset({dcterms:creator})) {
  $fields = xc_util_push_metadata_value($fields, {dcterms:creator});
}
return $fields;
</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>contributor</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({rdarole:director}) or isset({rdarole:editor}) or isset({rdarole:illustrator}) or isset({rdarole:performer}) or isset({rdarole:producer}) or isset({rdarole:translator})) {
  $texts = array();
  if (isset({rdarole:director})) {
    $text = xc_util_get_metadata_value({rdarole:director});
    $texts[] = join(', ', $text) . (count($text) &gt; 1 ? ' (directors)' : ' (director)');
  }
  if (isset({rdarole:editor})) {
    $text = xc_util_get_metadata_value({rdarole:editor});
    $texts[] = join(', ', $text) . (count($text) &gt; 1 ? ' (editors)': ' (editor)');
  }
  if (isset({rdarole:illustrator})) {
    $text = xc_util_get_metadata_value({rdarole:illustrator});
    $texts[] = join(', ', $text) . (count($text) &gt; 1 ? ' (illustrators)': ' (illustrator)');
  }
  if (isset({rdarole:performer})) {
    $text = xc_util_get_metadata_value({rdarole:performer});
    $texts[] = join(', ', $text) . (count($text) &gt; 1 ? ' (performers)': ' (performer)');
  }
  if (isset({rdarole:producer})) {
    $text = xc_util_get_metadata_value({rdarole:producer});
    $texts[] = join(', ', $text) . (count($text) &gt; 1 ? ' (producers)': ' (producer)');
  }
  if (isset({rdarole:translator})) {
    $text = xc_util_get_metadata_value({rdarole:translator});
    $texts[] = join(', ', $text) . (count($text) &gt; 1 ? ' (translators)': ' (translator)');
  }
  return join(' - ', $texts);
}
elseif (isset({xc:contributor})) {
  return xc_util_get_metadata_value({xc:contributor});
}
elseif (isset({dcterm:contributor})) {
  return xc_util_get_metadata_value({dcterm:contributor});
}
</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>citation</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({dcterms:bibliographicCitation})) {
  return xc_util_get_metadata_value({dcterms:bibliographicCitation});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>language</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({xc:ISO639-3LanguageName})) {
  return xc_util_get_metadata_value({xc:ISO639-3LanguageName});
}
elseif (isset({dcterms:Language})) {
  return xc_util_get_metadata_value({dcterms:Language});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>publisher</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({dcterms:publisher})) {
  return xc_util_get_metadata_value({dcterms:publisher});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>abstract</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({dcterms:abstract})) {
  return xc_util_get_metadata_value({dcterms:abstract});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>format</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>expression</entity_type>
        <template>if (isset({dcterms:type})) {
  return xc_util_get_metadata_value({dcterms:type});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>format</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({dcterms:type})) {
  return xc_util_get_metadata_value({dcterms:type});
}
elseif (isset({xc:typeLeader06})) {
  return xc_util_get_metadata_value({xc:typeLeader06});
}
elseif (isset({xc:type007})) {
  return xc_util_get_metadata_value({xc:type007});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>title</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>work</entity_type>
        <template>if (isset({rdvocab:titleOfWork})) {
  return xc_util_get_metadata_value({rdvocab:titleOfWork});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>title</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>expression</entity_type>
        <template>if (isset({xc:titleOfExpression})) {
  return xc_util_get_metadata_value({xc:titleOfExpression});
}
elseif (isset({rdvocab:titleOfExpression})) {
  return xc_util_get_metadata_value({rdvocab:titleOfExpression});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>title</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({dcterms:title})) {
  return xc_util_get_metadata_value({dcterms:title});
}</template>
    </xc_search_display_template_element>
    <xc_search_display_template_element>
        <element_name>date</element_name>
        <metadata_schema>xc</metadata_schema>
        <entity_type>manifestation</entity_type>
        <template>if (isset({dcterms:issued})) {
  return xc_util_get_metadata_value({dcterms:issued});
}
elseif (isset({dcterms:date})) {
  return xc_util_get_metadata_value({dcterms:date});
}</template>
    </xc_search_display_template_element>
</drupal_test_merge>
