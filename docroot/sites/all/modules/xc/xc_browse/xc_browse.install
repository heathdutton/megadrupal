<?php
/**
 * @file
 * Install file for the XC Browse module
 *
 * @copyright (c) 2010-2011 eXtensible Catalog Organization
 */

/**
 * Implements hook_install().
 *
 * Initializes some Drupal variables related to XC Browse module.
 */
function xc_browse_install() {
  variable_set('xc_browse_ui_installed', 0);
  variable_set('xc_browse_tab_installed', 0);
  variable_set('xc_browse_element_installed', 0);
  variable_set('xc_browse_list_installed', 0);
}

/**
 * Implements hook_uninstall().
 *
 * Deletes the variable used by the module.
 */
function xc_browse_uninstall() {
  variable_del('xc_browse_ui_installed');
  variable_del('xc_browse_tab_installed');
  variable_del('xc_browse_element_installed');
  variable_del('xc_browse_list_installed');
}

/**
 * Implements hook_enable().
 *
 * Runs when user enables the module. It populates the xc_browse_* tables with
 * stored data (see the files in xc/xc_browse/import directory.
 */
function xc_browse_enable() {
  $path = drupal_get_path('module', 'xc_browse') . '/import/';
  if (variable_get('xc_browse_ui_installed', -1) == 0) {
    $table = 'xc_browse_ui';
    xc_util_bulk_insert($table, xc_util_csv2objects($path . $table . '.csv'));
    variable_set('xc_browse_ui_installed', 1);
  }
  if (variable_get('xc_browse_tab_installed', -1) == 0) {
    $table = 'xc_browse_tab';
    xc_util_bulk_insert($table, xc_util_csv2objects($path . $table . '.csv'));
    variable_set('xc_browse_tab_installed', 1);
  }
  if (variable_get('xc_browse_element_installed', -1) == 0) {
    $table = 'xc_browse_element';
    xc_util_bulk_insert($table, xc_util_csv2objects($path . $table . '.csv'));
    variable_set('xc_browse_element_installed', 1);
  }
  if (variable_get('xc_browse_list_installed', -1) == 0) {
    $table = 'xc_browse_list';
    xc_util_bulk_insert($table, xc_util_csv2objects($path . $table . '.csv'));
    variable_set('xc_browse_list_installed', 1);
  }
}

/**
 * Implements hook_disable().
 *
 * Runs when user disables the module.
 */
function xc_browse_disable() {
}

/**
 * Implements hook_schema().
 *
 * It provides the database schema definitions for XC Browse module.
 */
function xc_browse_schema() {
  /** The top browse UI definition */
  $schema['xc_browse_ui'] = array(
    'description' => 'Browse UI definition.',
    'fields' => array(
      'bid' => array(
        'description' => 'The identifier of browse UI.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human readable label.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'name' => array(
        'description' => 'Machine name.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'is_enabled' => array(
        'description' => 'Whether or not to display the browse UI?',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'indexes' => array(
      'bid' => array('bid'),
      'name' => array('name'),
    ),
    'primary key' => array('bid'),
  );

  /** tab on the browse UI */
  $schema['xc_browse_tab'] = array(
    'description' => 'Browse UI tab/content definition.',
    'fields' => array(
      'tab_id' => array(
        'description' => 'The identifier of the tab.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ui_id' => array(
        'description' => 'ID of the parent browse UI.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human readable label of the tab.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'default_query' => array(
        'description' => 'The default query creating the browseable list. Use Solr query syntax, put the schema field name into brackets like {xc:type007}.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'pagination_type' => array(
        'description' => 'The pagination type of the browsable list (none, normal, logarithmic).',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
        'default' => 'none',
      ),
      'pagination_size' => array(
        'description' => 'The number of items per page if there is pagination.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
      ),
      'weight' => array(
        'description' => 'The weight of the tab, which defines the order of the tabs.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'is_enabled' => array(
        'description' => 'Whether or not to display the browse tab?',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'indexes' => array(
      'tab_id' => array('tab_id'),
      'ui_id' => array('ui_id'),
    ),
    'primary key' => array('tab_id'),
  );

  /** form element on the tab */
  $schema['xc_browse_element'] = array(
    'description' => 'A form element in the browse tab.',
    'fields' => array(
      'el_id' => array(
        'description' => 'The identifier of the element.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tab_id' => array(
        'description' => 'ID of the parent browse tab.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'A label which displaying before the form element.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'type' => array(
        'description' => 'The type of the element (text, selection, radios, checkboxes, etc.).',
        'type' => 'varchar',
        'length' => '256',
        'not null' => TRUE,
      ),
      'facet_name' => array(
        'description' => 'The facet connected to the element to populate it with values.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'search_field' => array(
        'description' => 'The field to search for.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
        'default' => 'none',
      ),
      'query_type' => array(
        'description' => 'Solr query type to apply when searching (keyword, phrase, proximity etc.).',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
        'default' => 'none',
      ),
      'query_type' => array(
        'description' => 'Solr query type to apply when searching (keyword, phrase, proximity etc.).',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
        'default' => 'keyword',
      ),
      'ui_effect' => array(
        'description' => 'The name of the UI (JavaScript) effect to apply on this form.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'weight' => array(
        'description' => 'The weight of the element, which defines the order.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'sorting' => array(
        'description' => 'Sorting order if the element is populated by facet values.',
        'type' => 'varchar',
        'length' => '5',
        'not null' => FALSE,
      ),
      'mincount' => array(
        'description' => 'The occurence of a facet term if the element is populated by facet values.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'is_enabled' => array(
        'description' => 'Disable/enable the element',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 1,
        'not null' => TRUE,
      ),
      'page_limit' => array(
        'description' => 'The number of elements to display in one list. 0 means no limit (show all).',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'el_id' => array('el_id'),
      'tab_id' => array('tab_id'),
    ),
    'primary key' => array('el_id'),
  );

  /** Predefined list on the tab */
  $schema['xc_browse_list'] = array(
    'description' => 'Browse UI navigation list.',
    'fields' => array(
      'lid' => array(
        'description' => 'The identifier of navigation list.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tab_id' => array(
        'description' => 'ID of the parent browse tab.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human readable label.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'type' => array(
        'description' => 'List type from a predefined list (ABC, dates etc.).',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'field' => array(
        'description' => 'Field to search for.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'query_type' => array(
        'description' => 'Solr query type to apply when searching (keyword, phrase, proximity etc.).',
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
        'default' => 'keyword',
      ),
      'weight' => array(
        'description' => 'The weight of the list, which defines the order.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'is_enabled' => array(
        'description' => 'Disable/enable the list',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 1,
        'not null' => TRUE,
      ),
      'sorting' => array(
        'description' => 'Sorting order if the element is populated by facet values.',
        'type' => 'varchar',
        'length' => '5',
        'not null' => FALSE,
      ),
      'mincount' => array(
        'description' => 'The occurence of a facet term if the element is populated by facet values.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'page_limit' => array(
        'description' => 'The number of elements to display in one page.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'lid' => array('lid'),
      'tab_id' => array('tab_id'),
    ),
    'primary key' => array('lid'),
  );

  return $schema;
}
