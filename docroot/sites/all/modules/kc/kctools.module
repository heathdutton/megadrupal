<?php
/**
 * @file
 * KC Tools is a toolbox module of helpful, reusable functions to aid in site
 * development and extend Drupal's core capabilities.
 *
 * Authored by Chris Albrecht (KeyboardCowboy)
 * http://drupal.org/user/176328
 * https://github.com/KeyboardCowboy5
 */

/**
 * Returns the values of field items in the language they currently would be
 * displayed.
 *
 * @param $entity_type
 *   The type of $entity; e.g., 'node' or 'user'.
 * @param $entity
 *   The entity containing the data to be displayed.
 * @param $field_name
 *   The field to be displayed.
 * @param $storage_label
 *   The field key value to return.
 * @param $langcode
 *   (optional) The language code $entity->{$field_name} has to be displayed in.
 *   Defaults to the current language.
 *
 * @return
 *   A single value if the field cardinality is 1, an array of values if the
 *   cardinality is greater than 1, or false if the storage label does not exist.
 *
 * @see field_get_items()
 */
function kctools_field_get_value($entity_type, $entity, $field_name, $storage_label = NULL, $langcode = NULL) {
  $values = field_get_items($entity_type, $entity, $field_name);

  if (!empty($values) && count($values) == 1) {
    if ($storage_label) {
      return (array_key_exists($storage_label, $values[0]) ? $values[0][$storage_label] : FALSE);
    }
    else {
      return $values[0];
    }
  }
  elseif (!empty($values) && count($values) > 1) {
    $ret = array();
    if ($storage_label) {
      foreach ($values as $card => $value) {
        if (array_key_exists($storage_label, $value)) {
          $ret[$card] = $value[$storage_label];
        }
      }
      return $ret;
    }
    else {
      return $values;
    }
  }

  return NULL;
}
