<?php

/**
 * @file
 * Install, update and uninstall functions for the aul module.
 */

/**
 * Implements hook_schema().
 */
function aul_schema() {
  $schema['aul'] = array(
    'description' => 'The base Access User Lists table.',
    'fields' => array(
      'gid' => array(
        'description' => 'Primary key: unique Grant id.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'op' => array(
        'description' => 'Operation name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'key_id' => array(
        'description' => "Helps to formulate realm name. Could be 'uid', 'rid' etc.",
        'type' => 'int',
        'not null' => TRUE,
      ),
      'key_name' => array(
        'description' => 'Id of key entity to grant permissions for. E.g. user id, role id etc.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'The {node}.nid to which this {gid} entry applies.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      // @todo: we can remove value because it's 1 of present or 0 if there is
      // no record. We don;t use count of values anymore because there is
      // aul_relations module and table for it.
      'value' => array(
        'description' => 'Grants value.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'source' => array(
        'description' => 'Source of AUL data. module name or field name. Works as namespace for AUL grants.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('gid'),
    // @todo: Check if we need to add additional indexes.
    //'indexes' => array(),
  );
  
  return $schema;
}

/**
 * Update to AUL 2.x. Make sure you want this update. All the AUL 1.x tables 
 * data will be lost.
 */
function aul_update_7021() {
  // Drop old tables.
  if (db_table_exists('aul')) {
    db_drop_table('aul');
  }
  if (db_table_exists('aul_user')) {
    db_drop_table('aul_user');
  }
  if (db_table_exists('aul_node')) {
    db_drop_table('aul_node');
  }
  
  // Add new 'aul' table with new fields.
  $schema = array(
    'description' => 'The base Access User Lists table.',
    'fields' => array(
      'gid' => array(
        'description' => 'Primary key: unique Grant id.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'op' => array(
        'description' => 'Operation name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'key_id' => array(
        'description' => 'Id of key entity to grant permissions for. E.g. user id, role id etc.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'key_name' => array(
        'description' => "Helps to formulate realm name. Could be 'uid', 'rid' etc.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'The {node}.nid to which this {gid} entry applies.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'value' => array(
        'description' => 'Grants value.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'source' => array(
        'description' => 'Source of AUL data. module name or field name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('gid'),
  );

  db_create_table('aul', $schema);
}
