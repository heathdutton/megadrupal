<?php

/**
 * @file
 * label_trash.module
 *
 * Uses floatlabels.js to add floatlabels to your forms.
 */
define('LABEL_TRASH_DEFAULT_TRANSISTION_TIME', 0.15);
define('LABEL_TRASH_DEFAULT_VERTICAL_OFFSET', '-0.4em');

define('LABEL_TRASH_DEFAULT_PAGE_INCLUSIONS', "*");
define('LABEL_TRASH_DEFAULT_PAGE_EXCLUSIONS', "admin*");
define('LABEL_TRASH_DEFAULT_LABEL_SELECTOR', 'input:text, input:password');

define('LABEL_TRASH_ORIGINAL_LABEL_IMPLEMENTATION', 1);
define('LABEL_TRASH_PATCHED_LABEL_IMPLEMENTATION', 2);

/**
 * Implements hook_preprocess_page().
 */
function label_trash_preprocess_page($variables) {
  $label_trash_settings = variable_get('label_trash_decorations', array());

  $path = current_path();
  $path_alias = drupal_get_path_alias($path);

  foreach ($label_trash_settings as $decoration) {
    if (!empty($decoration['pages-and-selector'])) {
      $p_and_s = $decoration['pages-and-selector'];
      if (drupal_match_path($path, $p_and_s['include-pages']) || drupal_match_path($path_alias, $p_and_s['include-pages'])) {
        if (!drupal_match_path($path, $p_and_s['exclude-pages']) && !drupal_match_path($path_alias, $p_and_s['exclude-pages'])) {
          label_trash_pass_selectors_and_config($decoration);
        }
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function label_trash_menu() {
  // Put the administrative settings under Content on the Configuration page.
  $items['admin/config/content/label_trash'] = array(
    'title' => 'Label Trash',
    'description' => 'Configure input field decorations and global settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('label_trash_admin_configure'),
    'access arguments' => array('configure input field decorations'),
    'file' => 'label_trash.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function label_trash_permission() {
  return array(
    'configure input field decorations' => array(
      'title' => t('Add and configure input field decorations'),
    ),
  );
}

/**
 * Implements hook_help().
 */
function label_trash_help($path, $arg) {
  switch ($path) {
    case 'admin/help#label_trash':
      $t = t('Configuration instructions and tips are in this <a target="readme" href="@README">README</a> file.<br/>Known issues and solutions may be found on the <a taget="project" href="@label_trash">Label Trash</a> project page.', array(
        '@README' => url(drupal_get_path('module', 'label_trash') . '/README.txt'),
        '@label_trash' => url('http://drupal.org/project/label_trash')));
      break;

    case 'admin/config/content/label_trash':
      $t = t('An <strong>input field decoration</strong> consists of a set of features, selected below, to be added to one or more form input fields on this site. <br/>Apart from the features you wish to include in each decoration, you specify the pages and input fields the decoration applies to.');
      break;
  }
  return empty($t) ? '' : '<p>' . $t . '</p>';
}

/**
 * Returns an array with details of the requested floatlabels JS library.
 *
 * @return array, library
 */
function label_trash_get_library($variant = NULL) {
  if (empty($variant)) {
    $global_settings = variable_get('label_trash_global_settings', array());
    $variant = empty($global_settings['label-implementation']) || (int)$global_settings['label-implementation'] == LABEL_TRASH_PATCHED_LABEL_IMPLEMENTATION ? 'patched' : NULL;
  }
  // Equivalent to core's drupal_add_library('label_trash', 'floatlabels'),
  // this loads what is set up in the .libraries.info file, rather than core's
  // hook_library(). The format of the array returned is similar.
  return libraries_load('floatlabels', $variant);
}

/**
 * Implements hook_libraries_info_file_paths().
 *
 * Using the .libraries.info files instead of hook_libraries_info().
 */
function label_trash_libraries_info_file_paths() {
  return array(drupal_get_path('module', 'label_trash') . '/libraries');
}

/**
 * Implements hook_libraries_info_alter().
 *
 * This is a dynamic appendix to the .libraries.info files.
 * Through the configuration page, the user may opt for a variant.
 */
function label_trash_libraries_info_alter(&$libraries) {

  if (!isset($libraries['floatlabels'])) {
    return;
  }
  // The packaging script unfortunately adds to the .libraries.info file the
  // version number of the table_trash module in the same way as it does for
  // table_trash.info. This is bad news for us, as once set, the Libraries
  // module will not attempt to read it from the specified .js files. So unset.
  unset($libraries['floatlables']['version']);

  $global_settings = variable_get('label_trash_global_settings', array());
  $variant = empty($global_settings['label-implementation']) || (int)$global_settings['label-implementation'] == LABEL_TRASH_PATCHED_LABEL_IMPLEMENTATION ? 'patched' : NULL;

  //If a variant is requested that does not specify [files][js], then the
  // Libraries modules still loads [files][js]. Undo this behaviour.
  if (isset($variant)) {
    unset($libraries['floatlabels']['files']);
  }

  if (empty($global_settings['use-module-css'])) {
    unset($libraries['floatlabels']['integration files']['label_trash']['css']);
    unset($libraries['floatlabels']['variants']['patched']['integration files']['label_trash']['css']);
  }

  // Based on the variant, the version number is found in a different file.
  // Not only is the file where we obtain the version different, so is its path.
  // We deal with this in our own version callback
  // label_trash_libraries_get_version()
  $libraries['floatlabels']['version callback'] = 'label_trash_libraries_get_version';
  $libraries['floatlabels']['version arguments']['file'] = ($variant == 'patched')
    ? 'libraries/variants/js/floatlabels.patched.min.js'
    : 'floatlabels.js';
}

/**
 * Override of libraries_get_version().
 *
 * This was necessary only because of the way the Libraries module works. While
 * accepting 'variants' it assumes that each variant is always retrieved from a
 * file in the same 'library path'. In our case, when using th 'patched'
 * variant, the version comes from a file in the 'patched' library path, this
 * being the path to the label_trash module.
 *
 * @param array $library
 *   contains the 'library path' that we may want to change in case of a variant
 * @param array $options
 *   regexp pattern matching options
 *
 * @return array
 *   string containing the version of the library.
 */
function label_trash_libraries_get_version($library, $options) {
  $global_settings = variable_get('label_trash_global_settings', array());
  if (empty($global_settings['label-implementation']) || (int)$global_settings['label-implementation'] == LABEL_TRASH_PATCHED_LABEL_IMPLEMENTATION) {
    $library['library path'] = drupal_get_path('module', 'label_trash');
  }
  return libraries_get_version($library, $options);
}

/**
 * Set up an array of configurations for the floatlabel JS call.
 *
 * @param array $decoration
 *   an array of floatlabel parameters, indexed by the CSS input selector
 */
function label_trash_pass_selectors_and_config($decoration) {

  $library = label_trash_get_library();
  if (!empty($library['error'])) {
    drupal_set_message($library['error message'], 'warning');
  }

  $label_selector = empty($decoration['pages-and-selector']['label-selector']) ? LABEL_TRASH_DEFAULT_LABEL_SELECTOR : $decoration['pages-and-selector']['label-selector'];

  $decoration_params = empty($decoration['decoration-params']) ? array() : array_filter($decoration['decoration-params']);
  $decoration_params['slide-input'] = FALSE;
  $decoration_params['floatlabel-offset-top-start'] = '20px';
  $decoration_params['transition-easing'] = 'ease-out';

  $settings[$label_selector] = $decoration_params;

  drupal_add_js(array('label_trash' => $settings), array('type' => 'setting'));

  if (!empty($decoration_params['label-css']['data-class']) && !empty($decoration_params['label-css']['properties'])) {
    $css = '.' . trim($decoration_params['label-css']['data-class'], ' .') . ' {' . $decoration_params['label-css']['properties'] . '}';
    drupal_add_css($css, array('type' => 'inline'));
  }
}
