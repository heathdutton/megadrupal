<?php
/**
 * @file
 * Module will add select all/deselect all options through out the 
 * admin permission selection screen
 */

/**
 * Implementation of hook_perm().
 */
function permission_select_permission() {
  return array(
    'use permission select' => array(
      'title' => t('Use permission select'),
      'description' => t('Adds a check all / uncheck all option to each role/module pair on the permissions page.'),
    ),
  );
}
/**
 * Implementation of hook_init().
 */
function permission_select_init() {
  if (user_access('use permission select') && 
substr($_GET['q'], 0, 24) == 'admin/people/permissions' ) {
    $path = drupal_get_path('module', 'permission_select');
    drupal_add_css($path .'/permission_select.css', array('type' => 'module', 'media' => 'all', 'preprocess' => TRUE,));
    drupal_add_js($path .'/permission_select.js');
  }
}
/**
 * hook_theme_registry_alter
 * telling the system we want to use out custom function to render this form
 */
function permission_select_theme_registry_alter(&$theme_registry) {
	if (!empty($theme_registry['user_admin_permissions'])) {
    $theme_registry['user_admin_permissions']['function'] = 'permission_select_theme_user_admin_perm';
  }
}
/**
 * Theme the administer permissions page.
 */
function permission_select_theme_user_admin_perm($variables) {
  $form = $variables['form'];
  $roles = user_roles();
	$permission_select_header = '<div class="permission_select"><h5>Master Permission Select</h5><ul>';
  foreach (element_children($form['permission']) as $key) {
    $row = array();
    // Module name
    if (is_numeric($key)) {
			$mod_name = t($form['permission'][$key]['#id']);
      $row[] = array('data' => drupal_render($form['permission'][$key]), 'class' => array('module module_name'), 'id' => 'module-' . $mod_name, 'colspan' => count($form['role_names']['#value']) + 1);
    }
    else {
      // Permission row.
      $row[] = array(
        'data' => drupal_render($form['permission'][$key]),
        'class' => array('permission'),
      );
      foreach (element_children($form['checkboxes']) as $rid) {
        $form['checkboxes'][$rid][$key]['#title'] = $roles[$rid] . ': ' . $form['permission'][$key]['#markup'];
        $form['checkboxes'][$rid][$key]['#title_display'] = 'invisible';
        $row[] = array('data' => drupal_render($form['checkboxes'][$rid][$key]), 'class' => array('checkbox module-' . $mod_name .' rid-'.$rid));
      }
    }
    $rows[] = $row; 
  }
  $header[] = (t('Permission'));
  foreach (element_children($form['role_names']) as $rid) {
		$permission_select_header .= '<li><a href="#" class="rcheck">check all</a>&nbsp;/&nbsp;<a href="#" class="runcheck">uncheck all</a><span id ="rid-'.$rid.'" class="role">' .$roles[$rid].'</span></li>'; 
    $header[] = array('data' => drupal_render($form['role_names'][$rid]), 'class' => array('checkbox'));
  }
	$permission_select_header .= '</ul></div>';
  $output = theme('system_compact_link');
	$output .= $permission_select_header;
  $output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'permissions')));
  $output .= drupal_render_children($form);
  return $output;
}
