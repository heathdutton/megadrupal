<?php

/**
 * Implements hook_menu 
 */
function image_captcha_ajax_menu() {
  $items = array();
  
  $items["ajax/image_captcha_sid"] = array(
    'title' => 'Get captcha link',
    'page callback' => 'captcha_ajax_get_captcha',
    'access callback' => TRUE,
  );
  
  $items["ajax/image_captcha_img"] = array(
    'title' => 'Generate captcha image',
    'page callback' => 'image_captcha_ajax_image_captcha',
    'page arugments' => array(2, 3),
    'access callback' => TRUE,
  );
  
  $items["ajax/image_captcha"] = array(
    'title' => 'Generate image captcha',
    'page callback' => 'image_captcha_ajax_get_image_captcha',
    'access callback' => TRUE,
  );
  
  return $items;
}

/**
 * page callback to get captcha image src and sid
 */
function image_captcha_ajax_get_captcha() {
  module_load_include('inc', 'captcha');

  if (isset($_REQUEST['sid'])) {
    $sid = $_REQUEST['sid'];
  }
  else {
    $sid = _captcha_generate_captcha_session('ajax_captcha');
  }
  
  $img_src  = check_url(url("ajax/image_captcha/$sid"));
  //$result   = image_captcha_captcha('generate', 'Image', $sid);
  
  _image_captcha_ajax_refresh($sid);

  drupal_json_output(array('image' => $img_src, 'sid' => $sid));
}

/**
 * page callback to generate the captcha image, with refresh token
 */
function image_captcha_ajax_image_captcha($sid = NULL, $refresh = NULL) {
  module_load_include('inc', 'captcha');

  if (!empty($sid)) {
    if (!empty($refresh)) {
       _image_captcha_ajax_refresh($sid);
    }
    image_captcha_image();
  }
}

/**
 * page callback to generate with refresh token
 */
function image_captcha_ajax_get_image_captcha($refresh = NULL) {
  module_load_include('inc', 'captcha');
  module_load_include('inc', 'image_captcha', 'image_captcha.user');
  
  $cookie_name = 'captcha_sid';
  $sid         = isset($_COOKIE[$cookie_name]) ? $_COOKIE[$cookie_name] : NULL;
  
  if (empty($sid)) {
    $sid = _captcha_generate_captcha_session('ajax_captcha');
    setcookie($cookie_name, $sid);
  }
  
  
  if (empty($refresh)) {
    $refresh = isset($_GET['refresh']) ? $_GET['refresh'] : $refresh;
  }
  
  if ($refresh) {
    _image_captcha_ajax_refresh($sid);
  }
  //set $_GET for the image_captcha_image function
  $_GET['sid'] = $sid;
  
  image_captcha_image();
}

/**
 * 
 * helper function to validate captcha
 * @param type $solution
 * @param type $sid
 * @return boolean
 */
function image_captcha_ajax_validate_captcha($solution = NULL, $sid = NULL) {
  
  if (empty($sid)) {
    if (isset($_COOKIE['captcha_sid'])) {
      $sid = $_COOKIE['captcha_sid'];
    }
    else if (isset($_REQUEST['sid'])) {
      $sid =  $_REQUEST['sid'];
    }
  }
  
  $solution = empty($solution) ? $_REQUEST['solution'] : $solution;
  if (empty($sid) || empty($solution)) {
    return FALSE;
  }
  
  $solution_db = db_query(
    'SELECT solution FROM {captcha_sessions} WHERE csid = :csid',
    array(':csid' => $csid)
    )
    ->fetchField();
  
  return captcha_validate_case_insensitive_ignore_spaces($solution_db, $solution);
}

/**
 * Inner help function to generate code and update db
 * @param type $sid
 * @return type
 */
function _image_captcha_ajax_refresh($sid) {
  
  $allowed_chars = _image_captcha_utf8_split(variable_get('image_captcha_image_allowed_chars', IMAGE_CAPTCHA_ALLOWED_CHARACTERS));
  $code_length   = (int)variable_get('image_captcha_code_length', 5);
  $code = '';
  for ($i = 0; $i < $code_length; $i++) {
    $code .= $allowed_chars[array_rand($allowed_chars)];
  }
  $solution = $code;
        
  _captcha_update_captcha_session($sid, $solution);
  return $solution;
}