<?php

/**
 * @file It contains simpletest functions
 */

/**
 * Tests the functionality of the Simpletest example content type.
 */
class AgrovocfieldTestCase extends DrupalWebTestCase {

  // for manual (autocomplete) indexing test
  public $url = 'http://agrovoc.fao.org/axis/services/SKOSWS';
  public $uri = 'AgrovocWS';
  public $tag = 'Rice';
  public $tag_code = 6599;

  // for automatic indexing test
  public $filepath = '/tmp/lcsh.pdf';
  public $voctype = 'agrotag';
  public $outputtype = 'text/plain';
  public $tags_no = 10;
  public $agrotagger_url = 'http://agropedialabs.iitk.ac.in:8080/agroTagger/resources/agrotags';


  public static function getInfo() {
    // Note: getInfo() strings are not translated with t().
    return array(
      'name' => 'AGROVOC field',
      'description' => 'Test the AGROVOC field type.',
      'group' => 'Field types',
    );
  }

  public function setUp() {
    // to use live database
    // http://www.trellon.com/content/blog/forcing-simpletest-use-live-database
    $this->setup = TRUE;
  }

  public function tearDown() {}

  public function testConnection() {
    $agrovoc = new agrovoc_remote($this->url, $this->uri);
    $available = $agrovoc->agrovoc_api_is_available();
    if ($available) {
      $this->assertTrue($available, 'The webservice is available');
    }
    else {
      $this->assertFalse($available, 'The webservice is NOT available');
    }
  }

  public function testSimpleSearchByMode2() {
    $agrovoc = new agrovoc_remote($this->url, $this->uri);
    $start = microtime(true);
    $terms = $agrovoc->simple_search_by_mode2($this->tag, 'starting');
    // debug($terms);
    $time_taken = microtime(true) - $start;
    $this->assertNotNull($terms, 'simple_search_by_mode2 function works very well and lasted ' . round($time_taken, 3) . ' seconds');
  }

  public function testGetAllLabelsByTermcode2() {
    $agrovoc = new agrovoc_remote($this->url, $this->uri);
    $start = microtime(true);
    $terms = $agrovoc->get_all_labels_by_termcode2($this->tag_code);
    // debug($terms);
    $time_taken = microtime(true) - $start;
    $this->assertNotNull($terms, 'get_all_labels_by_termcode2 function works very well and lasted ' . round($time_taken, 3) . ' seconds');
  }

  public function testLoadAgrovocObject() {
    $agrovoc = new agrovoc_remote($this->url, $this->uri);
    $start = microtime(true);
    $object = $agrovoc->agrovocfield_load_object($this->tag);
    $time_taken = microtime(true) - $start;
    // debug($object);
    $this->assertNotNull($object, 'agrovocfield_load_object function works very well and lasted ' . round($time_taken, 3) . ' seconds');
  }

  public function testAutomaticHttpRequest() {

    $file = file_get_contents($this->filepath);
    file_put_contents($this->filepath, $file);

    $parameters['file_url'] = $this->filepath;
    $parameters['voc_type'] = $this->voctype;
    $parameters['outputtype'] = $this->outputtype;
    $parameters['tags_no'] = $this->tags_no;
    $parameters['url'] = $this->agrotagger_url;

    $start = microtime(true);
    $tags = agrovocfield_automatic_http_request($parameters);
    $time_taken = microtime(true) - $start;
    debug($tags);
    $this->assertNotNull($tags, 'agrovocfield_automatic_http_request function works very well and lasted ' . round($time_taken, 3) . ' seconds');
  }

}

