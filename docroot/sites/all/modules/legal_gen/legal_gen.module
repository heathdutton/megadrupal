<?php
/**
 * @file
 * Functions for the Legal Generator.
 *
 * Outputs TOS and Privacy based on variables in the Settings form.
 */

// A registry of variable_get defaults.
include_once('includes/legal_gen.variables.inc');

/**
 * Implements hook_menu().
 */
function legal_gen_menu() {
  $items = array();
  $items['admin/config/system/legal-generator'] = array(
    'title' => 'Legal Generator',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('legal_gen_form'),
    'type' => MENU_NORMAL_ITEM,
    'description' => 'Generate Terms of Service and Privacy Policy content for the site.',
    'access arguments' => array('administer site information'),
  );
  $items['admin/config/system/legal-generator/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 10,
    'access arguments' => array('administer site information'),
  );
  $items['admin/config/system/legal-generator/terms'] = array(
    'title' => 'Terms of Service',
    'page callback' => 'legal_gen_get',
    'page arguments' => array('terms'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
    'access arguments' => array('administer site information'),
  );
  $items['admin/config/system/legal-generator/privacy'] = array(
    'title' => 'Privacy Policy',
    'page callback' => 'legal_gen_get',
    'page arguments' => array('privacy'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 30,
    'access arguments' => array('administer site information'),
  );
  return $items;
}

/**
 * Page callback to return themed TOS / Privacy content.
 *
 * @param string $type
 *   A string - valid values are 'terms' or 'privacy'
 *
 * @return string
 *   Themed HTML with textbox for copy/paste
 */
function legal_gen_get($type) {
  $legal = theme('legal_gen_' . $type);
  $output = '<h4>HTML:</h4>';
  $output .= '<textarea style="width:100%; padding:4px; height:100px; border:1px solid gray;">';
  $output .= $legal;
  $output .= '</textarea>';
  $output .= '<hr>';
  $output .= $legal;
  return $output;
}

/**
 * Implements hook_theme().
 */
function legal_gen_theme($existing, $type, $theme, $path) {
  return array(
    'legal_gen_terms' => array(
      'variables' => array(
        'company_full' => NULL,
        'company_short' => NULL,
        'company_county' => NULL,
        'company_state' => NULL,
        'company_country' => NULL,
        'site_url' => NULL,
      ),
      'template' => 'templates/terms',
    ),
    'legal_gen_privacy' => array(
      'variables' => array(
        'company_full' => NULL,
        'company_short' => NULL,
        'company_county' => NULL,
        'company_state' => NULL,
        'company_country' => NULL,
        'site_url' => NULL,
      ),
      'template' => 'templates/privacy',
    ),
  );
}

/**
 * Implements hook_PREPROCESS_hook().
 */
function legal_gen_preprocess_legal_gen_privacy(&$variables) {
  legal_gen_get_vars($variables);
}

/**
 * Implements hook_PREPROCESS_hook().
 */
function legal_gen_preprocess_legal_gen_terms(&$variables) {
  legal_gen_get_vars($variables);
}

/**
 * Adds Legal Generator variables into &$variables.
 */
function legal_gen_get_vars(&$variables) {
  $variables['company_full'] = check_plain(legal_gen_variable_get('company_full'));
  $variables['company_short'] = check_plain(legal_gen_variable_get('company_short'));
  $variables['company_county'] = check_plain(legal_gen_variable_get('company_county'));
  $variables['company_state'] = check_plain(legal_gen_variable_get('company_state'));
  $variables['company_country'] = check_plain(legal_gen_variable_get('company_country'));
  $variables['site_url'] = check_url(legal_gen_variable_get('site_url'));
}

/**
 * Form constructor for the Legal Generator settings form.
 *
 * @see legal_gen_menu()
 * @ingroup forms
 */
function legal_gen_form($form, &$form_state) {
  $form['website'] = array(
    '#type' => 'fieldset',
    '#title' => t('Website Info'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['website'][LEGAL_GEN_NAMESPACE . 'site_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Site URL'),
    '#default_value' => legal_gen_variable_get('site_url'),
    '#description' => t("How the site URL should appear in the legal documents.  Recommended to use CamelCase.  e.g. 'MySuperSweetSite.com'"),
    '#required' => TRUE,
  );
  $form['company'] = array(
    '#type' => 'fieldset',
    '#title' => t('Company Info'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['company'][LEGAL_GEN_NAMESPACE . 'company_full'] = array(
    '#type' => 'textfield',
    '#title' => t('Your Company - Full Name'),
    '#default_value' => legal_gen_variable_get('company_full'),
    '#description' => t("The company's full name.  e.g. 'MyCompany, Inc.'"),
    '#required' => TRUE,
  );
  $form['company'][LEGAL_GEN_NAMESPACE . 'company_short'] = array(
    '#type' => 'textfield',
    '#title' => t('Your Company - Short Name'),
    '#default_value' => legal_gen_variable_get('company_short'),
    '#description' => t("The company's short name, which is used for the majority of the legal document.  e.g. 'MyCompany'"),
    '#required' => TRUE,
  );
  $form['company'][LEGAL_GEN_NAMESPACE . 'company_county'] = array(
    '#type' => 'textfield',
    '#title' => t('County'),
    '#default_value' => legal_gen_variable_get('company_county'),
    '#description' => t("County of the state the business is established in.  e.g. 'Hudson County'"),
    '#required' => TRUE,
  );
  $form['company'][LEGAL_GEN_NAMESPACE . 'company_state'] = array(
    '#type' => 'textfield',
    '#title' => t('State'),
    '#default_value' => legal_gen_variable_get('company_state'),
    '#description' => t("The state the business is established in.  e.g. 'New Jersey'"),
    '#required' => TRUE,
  );
  $form['company'][LEGAL_GEN_NAMESPACE . 'company_country'] = array(
    '#type' => 'textfield',
    '#title' => t('Country'),
    '#default_value' => legal_gen_variable_get('company_country'),
    '#description' => t("The state the business is established in.  e.g. 'U.S.A.'"),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}
