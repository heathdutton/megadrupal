<?php
/**
 * @file
 * Social Network user detection.
 */

include_once 'social_network_user_detection.context_hook.inc';
include_once 'social_network_user_detection.rules.inc';

/**
 * Implements hook_permission().
 */
function social_network_user_detection_permission() {
  return array(
    'administer social_network_user_detection' => array(
      'title' => t('Administer social network user detection'),
    ),
  );
}

/**
 * Implements hook_init().
 */
function social_network_user_detection_init() {
  // Include the external JS file of hyves if required.
  $hyves_app_id = variable_get('social_network_user_detection_hyves_app_id', '');
  if (!empty($hyves_app_id)) {
    drupal_add_js('http://www.hyves.nl/precompiled/hyvesconnect.js', 'external');
  }
  // Context plugin load.
  if (module_exists('context')) {
    _social_network_user_detection_context_plugins_load();
  }
}

/**
 * Implements hook_menu().
 * @return Array.
 *   of menu items.
 */
function social_network_user_detection_menu() {
  // The menu settings menu entries.
  $items = array();

  // Admin section.
  $items['admin/config/social_network_user_detection'] = array(
    'title' => 'Social network user detection settings',
    'description' => 'Configure the social network user detection module.',
    'position' => 'left',
    'weight' => -20,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer social_network_user_detection'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/social_network_user_detection/config'] = array(
    'title' => 'Social network user detection settings',
    'description' => 'Configure social network user detection settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_network_user_detection_settings'),
    'access arguments' => array('administer social_network_user_detection'),
    'file' => 'social_network_user_detection.admin.inc',
  );
  $items['social_network_user_detection/ajax-set-logged-in'] = array(
    'title' => 'AJAX callback - Set the Social status',
    'page callback' => '_social_network_user_detection_set_social_status',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Implements hook_page_alter().
 */
function social_network_user_detection_page_alter(&$page) {
  // Add settings to the footer.
  $ga_id = variable_get('googleanalytics_account', NULL);
  if (!isset($ga_id)) {
    drupal_set_message(t('Social network user detection: Please configure Google Analytics and this module, if required.'));
    watchdog('social_network_user_detection', 'Please set an GoogleAnalytics ID');
    return;
  }
  // Get the content.
  _social_network_user_detection_javascript_reporting_functionality();
  $output = _social_network_user_detection_social_network_testing();
  // Add it to the page.
  $page['page_bottom']['social_network_user_detection'] = array(
    '#type' => 'markup',
    '#markup' => $output,
  );
}

/**
 * Adds the selected repoting type Async of default(old) of GA.
 * @return string
 *   string of the selected GA push type.
 */
function _social_network_user_detection_javascript_reporting_functionality() {
  $option_mode = variable_get('social_network_user_detection_mode', 'async');
  if ($option_mode == 'async') {
    drupal_add_js(array('social_network_user_detection' => array('js_reporting_version' => 'async')), 'setting');
  }
  else {
    drupal_add_js(array('social_network_user_detection' => array('js_reporting_version' => 'old')), 'setting');
  }
  // Check for GA visibility.
  if (_googleanalytics_visibility_pages()) {
    drupal_add_js(array('social_network_user_detection' => array('do_no_track_antything' => TRUE)), 'setting');
  }
}

/**
 * Test the different supported media channels if logged in.
 * @return string
 *   A string containing the different test methods.
 */
function _social_network_user_detection_social_network_testing() {
  $output = '<div class="social-network-user-detection-core-wrapper"></div>' . "\r\n";
  // Facebook.
  $facebook_app_id = check_plain(variable_get('social_network_user_detection_fb_app_id', NULL));
  $do_not_add_the_facebook_init = check_plain(variable_get('social_network_user_detection_do_not_use_fb_init', FALSE));
  if (isset($facebook_app_id)) {
    drupal_add_js('jQuery(document).ready(function () {FacebookSocialNetworkDetection("' . $do_not_add_the_facebook_init . '", "' .
        $facebook_app_id . '");});',
      array(
        'type' => 'inline',
        'scope' => 'footer',
        'group' => JS_THEME,
        'every_page' => TRUE,
        'weight' => -1,
      ));
    $output .= <<<FACEBOOKSTART
		<div id="fb-root"></div>
FACEBOOKSTART;
    $output .= "\r\n";
  }
  else {
    watchdog('social_network_user_detection', 'You haven\'t set an FB app id.');
  }
  // Hyves.
  $hyves_app_id = check_plain(variable_get('social_network_user_detection_hyves_app_id', ''));
  $do_not_add_the_hyves_init = check_plain(variable_get('social_network_user_detection_do_not_use_hyves_init', FALSE));
  if (!empty($hyves_app_id)) {
    global $base_root;
    // Hyves add JS.
    drupal_add_js('jQuery(document).ready(function () {HyvesSocialNetworkDetection("' . $do_not_add_the_hyves_init . '", "' . $base_root . '", "' . $hyves_app_id . '");});',
      array(
        'type' => 'inline',
        'scope' => 'footer',
        'group' => JS_THEME,
        'every_page' => TRUE,
        'weight' => -1,
      ));
  }
  return $output;
}

/**
 * Implements hook_help().
 */
function social_network_user_detection_help($path, $arg) {
  switch ($path) {
    case 'admin/config/social_network_user_detection/config':
      return t('Please see the README file for more information regarding how to configure Google Analytics with this application.
        Version 2 contains Context integration.');
      break;

  }
}

/**
 * Set social status in SESS for Ajax calls.
 */
function _social_network_user_detection_set_social_status() {
  $network = $_POST['network'];
  $status_of_network = $_POST['status'];
  if ($status_of_network == 'true') {
    $_SESSION[$network] = TRUE;
  }
  else {
    if (!empty($_SESSION[$network])) {
      unset($_SESSION[$network]);
    }
  }
  if (module_exists('rules')) {
    _social_network_user_detection_rules_controller($network);
  }
  // TODO AJAXFIFY CONTEXT ?
}
