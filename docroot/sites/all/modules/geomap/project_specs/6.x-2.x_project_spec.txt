Project proposal:
The proposed changes to the Geomap module have the goal of making the module more flexible and
customizable - a need reflexcted in the Drupal community. Geomap will only concern itself with the
presentation of the data (the Geo Microformat) from the page into a Google Map.

Tools are required to sufficiently organise the data (stored in a variety of methods)
into the Geomap theming system. Geomap will not be responsible for how the data is stored, but will
assist users to make use of the presentation by providing tools for normal situations (data stored in
CCK fields, data stored through the Location module, data brought in by geonames_cck, etc.) and how
it can be printed to the page via node_load and views plugins.

Please comment on this proposal at http://drupal.org/node/854398

Geomap 2x base module proposals
+ hook_perm
  + administer geomap - done
  + view geomap - done
  
+ DB tables
  + geomap_domain_key_pairs - done
    cols: domain (PK), gmap_key - done
    
+ update the JS to read the new specification system as displayed in README.txt - done
  
+ hook_menu
  + admin/settings/geomap
    + display for overridden - done
    + section for domain/google key pairs - done
    + define default icon/shadow icon per node type - done
  + geomap/callback/<OP> (callback invokes hook_geomap, $op = {get_node, get_nodes}) - do not implement

+ define hook_geomap($geomap, $op) - do not implement
  $geomap = array containing map state information - do not implement
  $op = get_view, get_node, get_nodes - do not implement
  
+ hook_theme
  + define theme_geomap_google_key($domain = null) - done
  + define theme_geomap_windowtext($params = array()); - done
  + define theme_geomap_icon(); - done
  + define theme_geomap_marker(); - done
  + define theme_geomap_geolocation($node) - done
  + define theme_geomap_geolocations($nodes) - done
  
+ template files
  + geomap.tpl.php - done
  + geomap-geolocations.tpl.php - done
  + geomap-geolocation.tpl.php - done
  + geomap-marker.tpl.php - done
  + geomap-icon.tpl.php - done
  + geomap-infowindow.tpl.php - done
  + geomap-windowtext.tpl.php - done
  
+ js file features
  + jquery.googlemaps.js & Clusterer2.js overriden if file present in <files>/geomap/, both overridden if overwritten in <theme>/javascript/geomap/ - done
  + display on Admin API page if files are overridden - done
  
+ Documentation & Screenshots
  + TODO

+ SimpleTest
  + Minimal Goal: add 10 basic tests for security testing - 2 tests completed
  
+ AJAX loader gif
  + Add a loader gif - done
  + bind the gif via jQuery to the ajax & map load events - done
  + format CSS so that the gif is elegantly added - postponed
  
----------------------
modules/geomap_cck
+ hook_menu  
  + admin/settings/geomap/cck - done
  + update hook_geomap to include new $op
    + geomap/admin/hook_geomap (callback invokes hook_geomap, $op = {update_node})
  
+ hook_init
  + add JS file to extend the google map object

+DB
  + geomap_cck_nodetype_settings - done
    cols: node_type (String, PK), cck_field_lat (String), cck_field_lng (String) - done
  + geomap_cck_node - done
    cols: nid (serialized, int?), vid (serialised, int?), geo_array (flattened array as binary data)
    
+ hook_nodeapi
  + Save/Update: update geomap_cck_node table entry or delete it (will be rendered on node load)
  + Load: 
    + if not already present, add the geomap array info to DB table geomap_cck_node
    + load geomap_cck_node array to node object $node->geomap_cck[0]['value']
    + render array and add to $node->geomap_cck[0]['view']
  + View
    + add $node->geomap_cck[0]['view'] to node content
  + Delete
    + delete entry from geomap_cck_node table
  + Prepare
    + Add information regarding Geomap CCK settings for this Node Type
    
+ hook_theme
  ?

+ theme_geomap_node($nid)
  ?

+ hook_views_data
  + provide a bridge from node to geomap_cck_node tables & fields
  + provide a new default view type (geolocations) which will theme
    node CCK fields in the correct manner. (this could easily be manually done, 
    but it is more flexible if handled here).

----------
modules/geomap_location
+hook_nodeapi
  + attach the theme_geomap_location($node) to the $content

+ hook_theme
  
+ theme_geomap_location($node)
  + return a themed geo microformat for the specific node
  
+ view2
  + allow for locations to be printed as geo microformat themed list
    
--------------
+ Views2 integration
  + define a sample default view
  + implement hook_views_data
  + implement custom view type (similar to xml view type: geolocation type)
  + define template files for loading

+ Views3 integration
  - save for geomap 6.x-3.x; 7.x-3.x

