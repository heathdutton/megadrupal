<?php

/**
 * @file
 * Manager access install
 */

/**
 * Implements hook_install().
 */
function manager_access_install() {
    $role = manager_access_add_role('manager');
    $permissions = manager_access_perm_list();
    if (isset($role->rid) && !empty($role->rid)) {
        user_role_grant_permissions($role->rid, $permissions);
    }

    // weight (needs for pathauto)
    db_update('system')
        ->fields(array('weight' => 1))
        ->condition('name', 'manager_access', '=')
        ->execute();
}


/**
 * Implements hook_uninstall().
 */
function manager_access_uninstall() {
    $vars = manager_access_variables_list();
    foreach ($vars as $var) {
        variable_del($var);
    }


    // Remove permissions.
    $permissions = manager_access_perm_list();
    $role = user_role_load_by_name("manager");
    user_role_revoke_permissions($role->rid, $permissions);

    // Remove any roles we created.
    user_role_delete('manager');
}

/**
 * Add a new role
 *
 * @param string $machine_name
 *   role name
 * @param int $weight
 *   role weight
 */
function manager_access_add_role($machine_name, $weight = 0) {
    $role = new stdClass();
    $role->name = $machine_name;
    $role->weight = $weight;
    user_role_save($role);
    return user_role_load_by_name($machine_name);
}


function manager_access_variables_list() {
    return array(
        'manager_access_settings',
    );
}


/**
 * List of default permissions
 * @return array
 */
function manager_access_perm_list() {
    return array(
        'access manager links',
        'access administration menu',
        'use text format full_html',
        'administer users',
        'access user profiles',
        'change own username',
        'menu access admin index item',
    );
}