<?php
/**
 * @file
 * Manager access
 */

define('MANAGER_ACCESS_KEY', 'manager_access');

module_load_include("inc", "manager_access", "includes/manager_access.hide_text_formats");
module_load_include("inc", "manager_access", "includes/manager_access.redirect");
module_load_include("inc", "manager_access", "includes/manager_access.fields");
module_load_include("inc", "manager_access", "includes/manager_access.links");


/**
 * Implements hook_menu().
 */
function manager_access_menu() {
  // This is the minimum information you can provide for a menu item.
  $items['admin/config/manager_access'] = array(
    'title' => 'Manager Access',
    'description' => 'Adjust manager access options.',
    'position' => 'right',
    'weight' => -5,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/manager_access/links'] = array(
    'title' => 'Add node links',
    'description' => 'Change how managers links behave.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('manager_access_links_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/manager_access.links.inc',
  );

  $items['admin/config/manager_access/fields'] = array(
    'title' => 'Hide fields',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer manager_access settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('manager_access_fields_settings_form'),
    'file' => 'includes/manager_access.fields.inc',
  );

  $items['admin/config/manager_access/redirect'] = array(
    'title' => 'Login redirect',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer manager_access settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('manager_access_redirect_settings_form'),
    'file' => 'includes/manager_access.redirect.inc',
  );

  menu_cache_clear('manager_menu');
  return $items;
}

/**
 * Implements hook_permission().
 */
function manager_access_permission() {
  return array(
    'administer manager_access settings' => array(
      'title' => t('Administer module settings'),
    ),
    'access manager links' => array(
      'title' => t('Use manager links'),
      'description' => t('Use manager links to perform actions related to elements on a page.'),
    ),
    'menu access admin index item' => array(
      'title' => t('Display "Index" item in admin menu.'),
      'description' => t('Display "Index" item in admin menu.')
    ),
    'manager access show hidden text formats' => array(
      'title' => t('Show hidden text formats'),
      'description' => t('User will see hidden text format if selected checkbox "Use default text format for widget, hide other settings" on field edit page.')
    ),
  );
}

/**
 * Implements hook_help().
 */
function manager_access_help($path, $arg) {
  switch ($path) {
    case 'admin/help#manager':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The manager links module displays links related to regions of pages on your site to users with <em>access manager links</em> permission.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Displaying manager links') . '</dt>';
      $output .= '<dd>' . t('manager links give you quick access to tasks associated with regions of pages on your site.') . '</dd>';
      $output .= '</dl>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function manager_access_theme($existing, $type, $theme, $path) {
  $hooks['manager_access_fields_settings_form'] = array(
    'render element' => 'form',
    'file' => 'includes/manager_access.fields.inc',
  );
  $hooks['manager_links'] = array(
    'arguments' => array('links' => NULL),
  );
  return $hooks;
}

/**
 * Implements hook_form_alter().
 */
function manager_access_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if (isset($form['#node_edit_form']) && $form['#node_edit_form']) {
    $manager_access_settings = variable_get('manager_access_settings', array());
    $node_type = $form['type']['#value'];
    foreach ($user->roles as $role_id => $role) {
      $skey = MANAGER_ACCESS_KEY . "_" . $role_id . "_" . $node_type . "_";

      foreach ($manager_access_settings as $key => $access) {
        if (strpos($key, $skey) === 0) {
          $field = str_replace($skey, "", $key);
          if ($field == "custom_fields") {
            $pieces = explode("\n", $manager_access_settings[$key]);
            foreach ($pieces as $custom_field) {
              $form[trim($custom_field)]['#access'] = FALSE;
            }
          }
          else {
            if ($access) {
              $form[$field]['#access'] = FALSE;
            }
          }
        }
      }
    }
  }

  switch ($form_id) {
    case 'user_register_form': // user register page
    case 'user_login': // user login page
    case 'user_login_block':
      $form['#submit'][] = 'manager_access_redirect_submit';
      break;
  }
}


/**
 * Implements hook_preprocess_views_view().
 * defines $manager_links for view templates
 */
function manager_access_preprocess_views_view(&$vars) {
  $options = variable_get('manager_links_view_types');
  $types = (isset($vars['view']->filter['type']->value)) ? $vars['view']->filter['type']->value : array();
  manager_access_generate_links($vars, $types, $options, 'view');
}

/**
 * Implements hook_preprocess_node().
 * defines $manager_links for node templates
 */
function manager_access_preprocess_node(&$vars) {
  if (!$vars['teaser']) {
    $options = variable_get('manager_links_node_types');
    manager_access_generate_links($vars, array($vars['type'] => $vars['type']), $options);
  }
}

/**
 * Generate manager links
 *
 * @param array $vars
 *   variables
 * @param array $types
 *   node types
 * @param array $options
 *   options
 * @param string $entity_type
 *   node or view
 *
 * @return array
 *   variables
 */
function manager_access_generate_links(&$vars, $types, $options, $entity_type = 'node') {
  // Nothing to do here if the user is not permitted to access manager links.
  if (!user_access('access manager links')) {
    return;
  }

  drupal_add_css(drupal_get_path('module', 'manager_access') . '/css/manager_links.css');
  drupal_add_js(drupal_get_path('module', 'manager_access') . '/js/manager_access_links.js');

  // Display manager links only for nodes selected on module configuration page.
  $links = array();
  foreach ($types as $type => $value) {
    if (($entity_type == 'node' && !empty($options[$type])) ||
      ($entity_type == 'view' && !empty($options[$vars['name']]) && isset($vars['view']->filter['type']->value))
    ) {

      if (user_access('create ' . $type . ' content')) {
        $type = preg_replace('/_/', '-', $type);
        $links[] = array(
          'title' => t("Add @node_type", array(
            '@node_type' => preg_replace('/-/', ' ', $type)
          )),
          'path' => 'node/add/' . $type,
        );
      }
    }
  }
  if (!empty($links) && (!isset($vars['teaser']) || !$vars['teaser'])) {
    $vars['title_prefix']['manager_links'] = array(
      '#type' => 'markup',
      '#markup' => theme('manager_links', $links),
      'weight' => -1,
    );
  }
}


/**
 * Theme function for creating manager links
 *
 * @param array $variables
 *   An associative array containing:
 *   - links: array ( description => link).
 *
 * @return string
 *   Html for manager links
 */
function theme_manager_links($variables) {
  $output = '<div class="manager-links-region">
                <div class="manager-links-wrapper">';
  if (!empty($variables) && is_array($variables)) {
    $output .= '<ul class="manager-links">';
    foreach ($variables as $key => $value) {
      if ((!empty($value['access']) && user_access($value['access'])) || empty($value['access'])) {

        // If empty set defautl destination value.
        if (!isset($value['options']['query'])) {
          $value['options']['query'] = drupal_get_destination();
        }
        $output .= '<li class="manager-link-item-' . $key . '">';
        $output .= l($value['title'], $value['path'], $value['options']);
        $output .= '</li>';
      }
    }
    $output .= '</ul>';
  }
  $output .= '</div>
              </div>';
  return $output;
}


/**
 * Implements hook_admin_menu_output_alter().
 */
function manager_access_admin_menu_output_alter(&$content) {
  if (!user_access('menu access admin index item')) {
    if (!empty($content['menu']['admin/index'])) {
      unset($content['menu']['admin/index']);
    }
  }
}
