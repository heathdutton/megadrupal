<?php
/**
 * @file
 * Install, update and uninstall functions for the ritzau module.
 * The code is based on code from the book module and
 * http://public-action.org/content/drupal-7-field-api-drupal-7-adding-custom-content-type-custom-fields-field-api
 */

/**
 * Implements hook_install().
 */
function ritzau_install() {
  // Add the node type.
  _ritzau_install_type_create();
}

/**
 * Implements hook_uninstall().
 */
function ritzau_uninstall() {
  /*
    The module doesn't uninstall content types, fields or vocabularies.
    This is done to prevent data being used in other contexts from being deleted.
    Ie if you use the taxonomy or fields elsewhere.
  */
}

/**
 * Implements hook_schema().
 */
function ritzau_schema() {
  $schema['ritzau_alternative_keys'] = array(
    'description' => 'Term ids and matching keys for Ritzau vocabs',
    'fields' => array(
      'ritzau_id' => array(
        'description' => 'Ritzau category key',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'Term ID',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('ritzau_id'),
  );
  return $schema;
}

/**
 * The main function for the installer.
 */
function _ritzau_install_type_create() {

  node_types_rebuild();

  // Create an additional node type.
  $ritzau_node_type = array(
    'type' => 'ritzau',
    'name' => t('Ritzau'),
    'base' => 'node_content',
    'title_label' => 'Header',
    'description' => t('<em>Ritzau</em> is a content-type for wires from Ritzaus Bureau.'),
    // TODO: must be changed when installer is complete
    'custom' => 1,
    'modified' => 1,
    'locked' => 0,
  );

  $ritzau_node_type = node_type_set_defaults($ritzau_node_type);
  node_type_save($ritzau_node_type);
  node_add_body_field($ritzau_node_type);

  $types = node_type_get_types();
  node_add_body_field($types['ritzau']);

  if (module_exists('taxonomy')) {
    _ritzau_install_vocabularies();
  }

  foreach (_ritzau_installed_fields() as $field) {
    if (!field_info_field($field['field_name'])) {
      field_create_field($field);
    }
  }

  foreach (_ritzau_installed_instances() as $instance) {
    if (!field_info_instance('node', $field['field_name'], 'ritzau')) {
      field_create_instance($instance);
    }
  }

  variable_set('node_options_ritzau', array('status'));
}
/**
 * This function returns definitions for fields to be installed.
 */
function _ritzau_installed_fields() {

  return array(
    'field_ritzau_subheader' => array(
      'field_name' => 'field_ritzau_subheader',
      'cardinality' => '1',
      'type' => 'text_long',
      'translatable' => '1',
    ),
    'field_ritzau_city' => array(
      'field_name' => 'field_ritzau_city',
      'cardinality' => '1',
      'type' => 'text',
      'settings' => array(
        'max_length' => '255',
      ),
      'translatable' => '1',
    ),
    'field_ritzau_sent_time' => array(
      'field_name' => 'field_ritzau_sent_time',
      'cardinality' => 1,
      'type' => 'datetime',
      'settings' => array(
        'granularity' => array(
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'month' => 'month',
          'second' => 0,
          'year' => 'year',
        ),
        'timezone_db' => '',
        'todate' => '',
        'tz_handling' => 'none',
      ),
    ),
    'field_ritzau_original_sent_time' => array(
      'field_name' => 'field_ritzau_original_sent_time',
      'cardinality' => 1,
      'type' => 'datetime',
      'settings' => array(
        'granularity' => array(
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'month' => 'month',
          'second' => 0,
          'year' => 'year',
        ),
        'timezone_db' => '',
        'todate' => '',
        'tz_handling' => 'none',
      ),
    ),
    'field_ritzau_release_time' => array(
      'field_name' => 'field_ritzau_release_time',
      'cardinality' => 1,
      'type' => 'datetime',
      'settings' => array(
        'granularity' => array(
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'month' => 'month',
          'second' => 0,
          'year' => 'year',
        ),
        'timezone_db' => '',
        'todate' => '',
        'tz_handling' => 'none',
      ),
    ),
    'field_ritzau_id' => array(
      'field_name' => 'field_ritzau_id',
      'cardinality' => '1',
      'type' => 'text',
      'settings' => array(
        'max_length' => '255',
      ),
      'translatable' => '1',
    ),
    'field_ritzau_refering_id' => array(
      'field_name' => 'field_ritzau_refering_id',
      'cardinality' => '1',
      'type' => 'text',
      'settings' => array(
        'max_length' => '255',
      ),
      'translatable' => '1',
    ),
    'field_ritzau_source' => array(
      'field_name' => 'field_ritzau_source',
      'cardinality' => '1',
      'type' => 'text',
      'settings' => array(
        'max_length' => '255',
      ),
      'translatable' => '1',
    ),
    'field_ritzau_urgency' => array(
      'field_name' => 'field_ritzau_urgency',
      'cardinality' => '1',
      'type' => 'list_integer',
      'settings' => array(
        'allowed_values' => array(
          1 => 'Il-telegram',
          2 => 'Klokke',
          3 => 'Hastetelegram',
          4 => 'Normal',
          5 => 'Ikke hastende',
          6 => 'Ikke hastende',
        ),
        'allowed_values_function' => '',
        'max_length' => '255',
      ),
      'translatable' => '1',
    ),
    'field_ritzau_updated' => array(
      'field_name' => 'field_ritzau_updated',
      'cardinality' => '1',
      'type' => 'list_boolean',
      'settings' => array(
        'allowed_values' => array(
          0 => 'Not updated',
          1 => 'Updated',
        ),
      ),
      'translatable' => '1',
    ),
  );
}
/**
 * This function returns definitions for fields instances to be installed.
 *
 * @return void
 */
function _ritzau_installed_instances() {
  $t = get_t();
  return array(
    'field_ritzau_subheader' => array(
      'field_name' => 'field_ritzau_subheader',
      'label' => $t('Subheader'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'type' => 'text_textarea',
        'weight' => -4.8,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 5,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_city' => array(
      'field_name' => 'field_ritzau_city',
      'label' => $t('City'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => -4.4,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 8,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_sent_time' => array(
      'field_name' => 'field_ritzau_sent_time',
      'label' => $t('Sent time'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'type' => 'date_text',
        'weight' => 20,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'date',
          'settings' => array(
            'format_type' => 'long',
            'fromto' => 'both',
            'multiple_from' => '',
            'multiple_number' => '',
            'multiple_to' => '',
          ),
          'type' => 'date_default',
          'weight' => 10,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_original_sent_time' => array(
      'field_name' => 'field_ritzau_original_sent_time',
      'label' => $t('Original sent time'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'type' => 'date_text',
        'weight' => 25,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'date',
          'settings' => array(
            'format_type' => 'long',
            'fromto' => 'both',
            'multiple_from' => '',
            'multiple_number' => '',
            'multiple_to' => '',
          ),
          'type' => 'date_default',
          'weight' => 10,
        ),
      ),
      'description' => 'This field holds the "Sent time" of the first wire. If the node is updated by Ritzau, the value of this field remains the same.',
    ),
    'field_ritzau_release_time' => array(
      'field_name' => 'field_ritzau_release_time',
      'label' => $t('Release time'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'type' => 'date_text',
        'weight' => 30,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'date',
          'settings' => array(
            'format_type' => 'long',
            'fromto' => 'both',
            'multiple_from' => '',
            'multiple_number' => '',
            'multiple_to' => '',
          ),
          'type' => 'date_default',
          'weight' => 10,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_id' => array(
      'field_name' => 'field_ritzau_id',
      'label' => $t('Ritzau Wire ID'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => 50,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 50,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_refering_id' => array(
      'field_name' => 'field_ritzau_refering_id',
      'label' => $t('Refering Ritzau Wire ID'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => 60,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 70,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_source' => array(
      'field_name' => 'field_ritzau_source',
      'label' => $t('Source'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => 80,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 90,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_urgency' => array(
      'field_name' => 'field_ritzau_urgency',
      'label' => $t('Urgency'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'active' => 1,
        'module' => 'list',
        'settings' => array(
          'max_length' => '255',
        ),
        'type' => 'options_select',
        'weight' => 5,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(),
          'type' => 'list_default',
          'weight' => 90,
        ),
      ),
      'description' => '',
    ),
    'field_ritzau_updated' => array(
      'field_name' => 'field_ritzau_updated',
      'label' => $t('Is updated'),
      'bundle' => 'ritzau',
      'entity_type' => 'node',
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(
          'display_label' => 0,
        ),
        'type' => 'options_onoff',
        'weight' => 100,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(),
          'type' => 'list_default',
          'weight' => 100,
        ),
      ),
      'description' => '',
    ),
  );
}

/**
 * This function generates vocabs, inserts terms, and adds term reference fields.
 *
 * @return void
 *
 */
function _ritzau_install_vocabularies() {

  $vocabularies = array(
    (object)array(
      'name' => st('IPTC Subject'),
      'description' => st('IPTC subject codes are standard codes used in the news industry.'),
      'machine_name' => 'ritzau_iptc_subject',
      'help' => st('Select subject codes, that reflect your content.'),
      'cardinality' => -1,
    ),
    (object)array(
      'name' => st('Ritzau genre'),
      'description' => st('Journalistic genre'),
      'machine_name' => 'ritzau_genre',
      'help' => st('Select the journalistic genre.'),
      'cardinality' => 1,
    ),
    (object)array(
      'name' => st('Ritzau category'),
      'description' => st('Ritzau category'),
      'machine_name' => 'ritzau_category',
      'help' => st('Select category.'),
      'cardinality' => 1,
    ),
  );


  module_load_include('inc', 'ritzau', 'ritzau.taxonomy.install');

  $taxonomy_content = _ritzau_get_taxonomy_content();


  foreach ($vocabularies as $vocabulary) {

    //Check if vocabulary already exists.
    $vocab = taxonomy_vocabulary_machine_name_load($vocabulary->machine_name);

    if (!is_object($vocab)) {
      taxonomy_vocabulary_save($vocabulary);

      foreach ($taxonomy_content[$vocabulary->machine_name] as $key => $name) {
        $term = (object)array('vid' => $vocabulary->vid, 'name' => $name);
        taxonomy_term_save($term);
        _ritzau_save_alternative_taxonomy_keys($key, $term);
      }


      $field = array(
        'field_name' => 'field_' . $vocabulary->machine_name,
        'type' => 'taxonomy_term_reference',
        // Set cardinality to unlimited for tagging.
        'cardinality' => $vocabulary->cardinality,
        'settings' => array(
          'allowed_values' => array(
            array(
              'vocabulary' => $vocabulary->machine_name,
              'parent' => 0,
            ),
          ),
        ),
      );
      field_create_field($field);

      $instance = array(
        'field_name' => 'field_' . $vocabulary->machine_name,
        'entity_type' => 'node',
        'label' => $vocabulary->name,
        'bundle' => 'ritzau',
        'description' => $vocabulary->help,
        'widget' => array(
          'type' => 'taxonomy_autocomplete',
          'weight' => -4,
        ),
        'display' => array(
          'default' => array(
            'type' => 'taxonomy_term_reference_link',
            'weight' => 10,
          ),
          'teaser' => array(
            'type' => 'taxonomy_term_reference_link',
            'weight' => 10,
          ),
        ),
      );
      field_create_instance($instance);
    }
  }
}

/**
 * This function inserts alternative keys for the taxonomy terms.
 * These are being used to map fields in the importer.
 *
 * @return void
 */
function _ritzau_save_alternative_taxonomy_keys($key, $term) {

  $entry = array('ritzau_id' => $key, 'tid' => (int)$term->tid);
  db_insert('ritzau_alternative_keys')->fields($entry)->execute();
}