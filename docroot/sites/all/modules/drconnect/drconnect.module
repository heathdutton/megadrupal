<?php

/**
 * Implementation of hook_block().
 */
function drconnect_block_info() {
  $blocks = array();
  $blocks["info"] = array(
    'info' => t('Draugiem.lv Passport')
  );
  return $blocks;
}

/**
 * Implementation oh hook_block_view().
 */
function drconnect_block_view($delta = '') {
  $block_content = '';
  if (file_exists(drconnect_api_filepath())) {
    if (drconnect_draugiem_client(drconnect_api_filepath())->getSession() && user_is_anonymous()) {
      // User is anonymous and has an active Draugiem.lv session.
      $druser = drconnect_draugiem_client(drconnect_api_filepath())->getUserData();
      $block_content = '<br/>' . $druser['name'] . ' ' . $druser['surname'] . '<br><img src="' . $druser['img'] . '"><br/>' . l(t('Log out') . '', 'drconnect/logout');
    }
    elseif (user_is_anonymous()) {
      // User is anonymous and has no Draugiem.lv session.
      global $base_url;
      $redirect = $base_url . '/drconnect/authorized';
      if (variable_get('drconnect_login_button_style', 'default') == 'default') {
        $block_content = drconnect_draugiem_client(drconnect_api_filepath())->getLoginButton($redirect);
      }
      else {
        $block_content = drconnect_login_button($redirect);
      }
    }
  }
  else {
    // Draugiem.lv API PHP library was not found.
    $block_content = t('Draugiem.lv API PHP library not found, see README.TXT');
  }
  $block['subject'] = t('Sign in using Draugiem.lv Passport');
  $block['content'] = $block_content;
  return $block;
}

/**
 * Returns HTML code for Draugiem.lv login button.
 *
 * This is a customized version of getLoginButton() function from
 * Draugiem.lv API PHP library.
 */
function drconnect_login_button($redirect_url, $popup = TRUE) {
  $url = htmlspecialchars(drconnect_draugiem_client(drconnect_api_filepath())->getLoginUrl($redirect_url));	
  if($popup){
    $config = drconnect_get_config();
    $js = "if(handle=window.open('$url&amp;popup=1','Dr_" . $config['apl_id'] . "' ,'width=400, height=400, left='+(screen.width?(screen.width-400)/2:0)+', top='+(screen.height?(screen.height-400)/2:0)+',scrollbars=no')){handle.focus();return false;}";
    $onclick = ' onclick="'.$js.'"';
  } else {
    $onclick = '';
  }
  $img = variable_get('drconnect_login_button_img', 1);
  return '<a href="'.$url.'"'.$onclick.'><img border="0" src="http://www.draugiem.lv/applications/img/logos/passport/pase' . $img . '.png" alt="draugiem.lv" /></a>';
}

/**
 * Returns path to Draugiem.lv API PHP library file
 */
function drconnect_api_filepath() {
  $filepath = '';
  $library = libraries_get_path('draugiem-api');
  $file = 'DraugiemApi.php';
  $filepath = $library . '/' . $file;
  return $filepath;
}

/**
 * Returns Draugiem.lv client object.
 *
 * @param string $file
 *   Draugiem.lv API PHP library filepath.
 *
 * @return stdClass $client
 *   Draugiem.lv client object.
 */
function drconnect_draugiem_client($file) {
  static $client = NULL;
  if (!$client instanceof DraugiemApi) {
    if ($conf = drconnect_get_config()) {
      // Include DraugiemApi.php
      include_once($file);
      if (class_exists('DraugiemApi')) {
        $client = new DraugiemApi($conf['apl_id'], $conf['api_key']);
      }
    }
  }
  return $client;
}


/**
 * Returns Draugiem.lv Passport configuration values.
 */
function drconnect_get_config() {
  static $config;
  if (!$config) {
    $config['apl_id'] = variable_get('drconnect_key', NULL);
    $config['api_key'] = variable_get('drconnect_skey', NULL);
    // allow third party modules to change settings
    drupal_alter('drconnect_config', $config);
  }
  if ($config['apl_id'] && $config['api_key']) {
    return $config;
  }
}

/**
 * Returns Draugiem.lv user id.
 *
 * The id is taken from active Draugiem.lv session.
 */
function drconnect_get_druid() {
  if (drconnect_draugiem_client(drconnect_api_filepath())) {
    return drconnect_draugiem_client(drconnect_api_filepath())->getUserId();
  }
}

/**
 * Check if any user account is linked with Draugiem.lv profile.
 *
 * @param int $druid
 *   Draugiem.lv user id.
 */
function _is_drconnect_user($druid) {
  if ($druid) {
    $query = db_select('users', 'ups');
    $query->fields('ups', array('uid'));
    $query->innerJoin('drconnect_users', 'dr', 'ups.uid = dr.uid');
    $query->condition('dr.druid', $druid);
    $query_result = $query->execute();
    return $query_result->fetchField();
  }
}

/**
 * Implementation of hook_menu().
 */
function drconnect_menu() {
  $items['drconnect/authorized'] = array(
    'title' => 'Draugiem.lv Passport',
    'page callback' => 'drconnect_prompt_page',
    'access callback' => 1,
    'type' => MENU_CALLBACK,
    'file' => 'drconnect.pages.inc',
    'file path' => drupal_get_path('module', 'drconnect'),
  );
  $items['user/%user/drconnect'] = array(
    'title' => 'Draugiem.lv Passport',
    'page callback' => 'drconnect_account_link',
    'page arguments' => array(1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'drconnect.admin.inc',
    'file path' => drupal_get_path('module', 'drconnect'),
  );
  $items['drconnect/register'] = array(
    'title' => 'Draugiem.lv Passport',
    'page callback' => 'drconnect_register',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_CALLBACK,
  );
  $items['drconnect/logout'] = array(
    'title' => 'Draugiem.lv Passport',
    'page callback' => 'drconnect_logout',
    'access callback' => 1,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/drconnect'] = array(
    'title' => 'Draugiem.lv Passport',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('drconnect_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'drconnect.admin.inc',
    'file path' => drupal_get_path('module', 'drconnect'),
  );
  $items['drconnect/link'] = array(
    'title' => 'Draugiem.lv Passport',
    'page callback' => 'drconnect_link',
    'access callback' => user_is_logged_in(),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_user_delete().
 */
function drconnect_user_delete($account) {
  // Remove account linking information.
  $query = db_delete('drconnect_users');
  $query->condition('uid', $account->uid);
  $query->execute();
}

/**
 * Implementation of hook_page_alter().
 */
function drconnect_page_alter(&$page) {
  // JS that closes Draugiem.lv Passport popup window.
  drupal_add_js('jQuery(document).ready(function () { if (window.opener){'
      . ' var path=window.location;'
      . ' window.opener.location.href=path;'
      . ' '
      . ' window.opener.focus();'
      . ' if(window.opener!=window){'
      . ' window.close();'
      . ' }'
      . ' } });',
    array('type' => 'inline', 'scope' => 'footer', 'weight' => 5)
  );
}

/**
 * Returns Draugiem.lv user id that is linked to a site account.
 *
 * @param int $uid
 *   Drupal user id.
 */
function _get_user_druid($uid) {
  if ($uid) {
    $query = db_select('drconnect_users','d');
    $query->fields('d', array('druid'));
    $query->condition('d.uid', $uid);
    $result = $query->execute();
    return $result->fetchField();
  }
}

/**
 * Terminates current Draugiem.lv session.
 */
function drconnect_logout() {
  $_SESSION = array();
  drupal_goto();
}

/**
 * Handles fast user registration an Draugiem.lv profile linking.
 */
function drconnect_register() {
  if (drconnect_draugiem_client(drconnect_api_filepath())->getSession() && variable_get('drconnect_fast_register', 0) == 1) {
    // Draugiem.lv session is active and fast registration is enabled.
    $druid = drconnect_get_druid();
    $uid = _is_drconnect_user($druid);
    if ($uid) {
      // Another account is already linked with this Draugiem.lv profile.
      drupal_set_message('This Draugiem.lv profile is already linked with an account.');
      drupal_goto();
    }
    else {
      $druser = drconnect_draugiem_client(drconnect_api_filepath())->getUserData();
      $name = $druser['name'] . ' ' . $druser['surname'];
      $account = user_load_by_name($name);
      if ($account) {
        // Account wiht that username already exists.
        drupal_set_message(t('An account is already registered with this name.'));
        drupal_goto();
      }
      else {
        // Create new account and link it to Draugiem.lv profile.
        $new_user->name = $name;
        $new_user->pass = user_password();
        $new_user->is_new = TRUE;
        $new_user->status = 1;
        $account = user_save($new_user);
        $query = db_insert('drconnect_users');
        $query->fields(array(
          'uid' => $account->uid,
          'druid' => $druid,
          'timestamp' => REQUEST_TIME,
        ));
        $query->execute();
        $form_state['uid'] = $account->uid;
        user_login_submit(array(), $form_state);
        drupal_set_message(t('Successfully created new account and linked with Draugiem.lv profile'));
        drupal_goto();
      }
    }
  }
  else {
    watchdog('drconnect', 'User registration page accessed with no active Draugiem.lv session or fast registration enabled');
    drupal_goto();
  }
  return 'BUJA';
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function drconnect_form_user_register_form_alter(&$form, &$form_state) {
  // Preset username.
  if (drconnect_draugiem_client(drconnect_api_filepath())->getSession()) {
    $druser = drconnect_draugiem_client(drconnect_api_filepath())->getUserData();
    $form['account']['name']['#default_value'] = $druser['name'] . ' ' . $druser['surname'];
  }
}

/**
 * Handles existing account linking to Draugiem.lv profile.
 */
function drconnect_link() {
  if (drconnect_draugiem_client(drconnect_api_filepath())->getSession()) {
    global $user;
    $druid = _get_user_druid($user->uid);
    if (!$druid) {
      $druid = drconnect_get_druid();
      // Link the account to Draugiem.lv profile.
      $query = db_insert('drconnect_users');
      $query->fields(array(
        'uid' => $user->uid,
        'druid' => $druid,
        'timestamp' => REQUEST_TIME,
      ));
      $query->execute();
      drupal_set_message(t('Link between site account and Draugiem.lv profile created'));
    }
    drupal_goto('user/' . $user->uid . '/drconnect');
  }
}
