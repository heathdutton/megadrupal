<?php

class At_Theming_TestCase extends DrupalWebTestCase {
  public function getInfo() {
    return array(
      'name' => 'AT Theming',
      'description' => 'Make sure at_theming module is working correctly.',
      'group' => 'AT Theming',
    );
  }

  protected function setUp() {
    parent::setUp('atest_theming');
  }

  public function testViewRenderClass() {
    // Not sure why test modules are not enabled on setUp
    module_enable(array('atest_theming', 'at_theming'));

    $template_file = drupal_get_path('module', 'atest_theming') . '/templates/users.tpl.php';
    $view_name = 'atest_theming_user';
    $display_id = 'default';

    $output = at_id(new \Drupal\at_theming\ViewRender($template_file, $view_name, $display_id))->render();
    $this->assertTrue(preg_match('/UID: \d+/', $output));
  }
}

class At_Theming_Twig_TestCase extends DrupalWebTestCase {
  public function getInfo() {
    return array(
      'name' => 'AT Theming: Twig',
      'description' => 'Make sure Twig features in at_theming module working correctly.',
      'group' => 'AT Theming',
    );
  }

  protected function setUp() {
    parent::setUp('atest_theming');
  }

  public function testTwigRender() {
    $template_file = drupal_get_path('module', 'atest_theming') . '/templates/hello.twig';
    $output = at_theming_render_template($template_file, array('name' => 'Andy Truong'));
    $this->assertTrue(strpos($output, 'Hello Andy Truong') !== FALSE);

    // with drupalView filter
    $template_file = '@atest_theming/templates/twig/views/simple.html.twig';
    $output = at_theming_render_template($template_file);
    $msg = 'See user #1 in the list';
    $this->assertTrue(strpos($output, '>1</a>') !== FALSE, $msg);

    // Create a box, demo content for drupalBlock filter
    $box['label'] = 'Demo drupalBox';
    $box['title'] = 'Demo drupalBox';
    $box['description'] = 'Box description';
    $box['type'] = 'atest_theming_block_type';
    $box['field_atest_theming_box_body']['und'][0]['value'] = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sodales, dui ac fermentum tincidunt, lorem nisl facilisis sem, ut consectetur urna velit vitae odio. Aliquam erat volutpat. Duis rutrum sollicitudin neque sed mattis. Proin risus elit, pretium eu tincidunt a, tempus quis tellus. Aliquam varius molestie varius. Aenean dictum metus quis orci faucibus ornare. Duis mattis pharetra tincidunt.';
    $box = entity_create('box', $box);
    $box->save();

    // with drupalBlock filter
    $template_file = '@atest_theming/templates/twig/block.html.twig';
    $output = at_theming_render_template($template_file);
    $this->assertTrue(strpos($output, 'Powered by') !== FALSE, 'See Powred by block');
    $this->assertTrue(strpos($output, 'id="Powered by') === FALSE, 'Block ID of "Powred by" is rendered');
    $this->assertTrue(strpos($output, 'id="block-boxes-demo-drupalbox') !== FALSE, 'See box #block-boxes-demo-drupalbox');
    $this->assertTrue(strpos($output, 'Lorem ipsum dolor sit amet') !== FALSE, 'Found Lorem message');
  }

  public function testTwigStringLoader() {
    $output = at_theming_render_string_template('Hello {{ name }}', array('name' => 'Andy Truong'));
    $this->assertEqual('Hello Andy Truong', $output, 'Template string is rendered correctly.');
  }

  public function testTwigFilters() {
    $output = at_theming_render_string_template("{{ 'user:1' | drupalEntity }}");
    $this->assertTrue(strpos($output, 'History'), 'Found text "History"');
    $this->assertTrue(strpos($output, 'Member for'), 'Found text: "Member for"');
  }
}

class At_Theming_Helper_RenderContent_TestCase extends DrupalWebTestCase {
  public function getInfo() {
    return array(
      'name' => 'AT Theming: Helpers > RenderContent',
      'description' => 'Make sure Helper classes are working correctly.',
      'group' => 'AT Theming',
    );
  }

  public function setUp() {
    parent::setUp('atest_theming');
  }

  public function testRenderContent() {
    // Simple string
    $expected = 'Hello Andy Truong';
    $actual = at_id(new \Drupal\at_base\Helper\RenderContent($expected))->render();
    $this->assertEqual($expected, $actual);

    // Template string
    $data['template_string'] = 'Hello {{ name }}';
    $data['variables']['name'] = 'Andy Truong';
    $output = at_id(new \Drupal\at_base\Helper\RenderContent($data))->render();
    $output = $output['#markup'];
    $this->assertEqual($expected, $actual);

    // Template
    $data['template'] = '@atest_theming/templates/hello.twig';
    $data['variables']['name'] = 'Andy Truong';
    $output = at_id(new \Drupal\at_base\Helper\RenderContent($data))->render();
    $output = $output['#markup'];
    $assert = strpos($output, $actual) !== FALSE;
    $this->assertTrue($assert, "Found <strong>{$expected}</strong> in result.");
  }
}

class At_Theming_Base_Cache_Views_Warmer extends DrupalWebTestCase {
  public function getInfo() {
    return array(
      'name' => 'AT Theming: AT Cache > Views-Cache warmer',
      'description' => 'Try views-cache warmer of at_base.',
      'group' => 'AT Theming',
    );
  }

  protected function setUp() {
    parent::setUp('atest_theming');
  }

  /**
   * @todo test me.
   */
  public function testViewsCacheWarming() {
    // Build the first time
    $output = at_id(new Drupal\at_base\Helper\SubRequest('atest_theming/users'))->request();
    $this->verbose($output);

    // Invoke entity save event
    $u = $this->drupalCreateUser();

    // Build the second time
    $output = at_id(new Drupal\at_base\Helper\SubRequest('atest_theming/users'))->request();
    $this->verbose($output);

    $this->assertTrue(FALSE !== strpos($output, $u->name), "Found {$u->name}");

    $this->verbose(print_r(views_get_view('atest_theming_user'), TRUE));
  }
}
