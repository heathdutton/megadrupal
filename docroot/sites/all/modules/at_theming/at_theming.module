<?php

use \Drupal\at_theming\EntityTemplate\Config as EntityTemplateConfig;
use \Drupal\at_base\Helper\RenderContent as ContentRender;

/**
 * Wrapper function to support both phptemplate & twig template
 */
function at_theming_render_template($template_file, $variables = array()) {
  // Make sure variable is array
  $variables = is_array($variables) ? $variables : array();

  // Replace tokens in path with real values
  $template_file = at_id(new \Drupal\at_base\Helper\RealPath($template_file))->get();

  $template_type = at_theming_detect_template_type($template_file);
  if ('phptemplate' === $template_type) {
    return theme_render_template($template_file, $variables);
  }

  return \Drupal\at_theming\Twig::render($template_file, $variables);
}

/**
 * Detect template type by file name.
 */
function at_theming_detect_template_type($file_name) {
  $path_info = pathinfo($file_name);

  switch ($path_info['extension']) {
    case 'php':
      return 'phptemplate';
  }

  return 'twig';
}

/**
 * Template without file, only support Twig template for now
 */
function at_theming_render_string_template($string, $variables = array(), $engine = 'twig') {
  $twig = \Drupal\at_theming\Twig::getEnvironment();
  $twig->setLoader(new \Twig_Loader_String());
  return $twig->render($string, $variables);
}

/**
 * Implements hook_block_info()
 */
function at_theming_block_info() {
  return at_id(new \Drupal\at_theming\Hook\BlockInfo())->import();
}

/**
 * Implements hook_block_view
 */
function at_theming_block_view($delta) {
  return at_id(new \Drupal\at_theming\Hook\BlockView($delta))->view();
}

/**
 * Implements hook_entity_view_alter()
 */
function at_theming_entity_view_alter(&$build, $entity_type) {
  if ($data = at_id(new EntityTemplateConfig($entity_type, $build['#bundle'], $build['#view_mode']))->get()) {
    $data['variables']  = isset($data['variables']) ? $data['variables'] : array();
    $data['variables'] += array('build' => $build);
    $build = array(
      '#entity_type' => $build['#entity_type'],
      '#bundle' => $build['#bundle'],
      '#view_mode' => $build['#view_mode'],
      '#language' => 'language',
      '#contextual_links ' => !empty($build['#contextual_links']) ? $build['#contextual_links'] : NULL,
      'at_theming' => at_id(new ContentRender($data))->render(),
      '#build' => $build,
    );
  }
}
