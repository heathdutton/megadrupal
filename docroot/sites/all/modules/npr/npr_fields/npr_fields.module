<?php

/**
 * @file
 * Generates some basic fields that be useful for content types that are pushing to, and pulling from, the NPR API.
 */

/**
 * Implements hook_field_info().
 */
function npr_fields_field_info() {
  return array(
    'npr_audio' => array(
      'label' => t('NPR Audio'),
      'description' => t('This field stores NPR audio in the database.'),
      'default_widget' => 'npr_audio',
      'default_formatter' => 'npr_audio_basic',
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 *
 * @see npr_fields_field_formatter_view()
 */
function npr_fields_field_formatter_info() {
  return array(
    'npr_audio_basic' => array(
      'label' => t('Basic MP3 player'),
      'field types' => array('npr_audio'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 * @see npr_fields_field_formatter_info()
 */
function npr_fields_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'npr_audio_basic':
      foreach ($items as $delta => $item) {
        if ($item['mp3']) {
          $element[$delta] = array(
            '#type' => 'html_tag',
            '#tag' => 'embed',
            '#attributes' => array(
              'src' => $item['mp3'],
              'type' => 'audio/mpeg',
              'autostart' => 'FALSE',
            ),
          );
        }
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_field_widget_info().
 */
function npr_fields_field_widget_info() {
  return array(
    'npr_audio' => array(
      'label' => t('NPR Audio'),
      'field types' => array('npr_audio'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function npr_fields_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {

  $widget = $element;
  if ($instance['widget']['type'] = 'npr_audio') {


    $element += array(
      '#type' => 'fieldset',
      '#element_validate' => array('npr_fields_npr_audio_validate'),
      '#delta' => $delta,
    );

    $subfields = array(
      'title' => array(
        'title' => 'Title',
        'type' => 'textfield',
      ),
      'description' => array(
        'title' => 'Description',
        'type' => 'textfield',
      ),
      'duration' => array(
        'title' => 'Duration',
        'type' => 'textfield',
        'description' => 'Duration of audio (in total seconds)',
        'maxlength' => 11,
        'size' => 6,
      ),
      'mp3' => array(
        'title' => 'MP3 Link',
        'type' => 'textfield',
        'maxlength' => 255,
      ),
      'mediastream' => array(
        'title' => 'Mediastream Link',
        'type' => 'textfield',
        'maxlength' => 255,
      ),
      'wm' => array(
        'title' => 'Windows Media Link',
        'type' => 'textfield',
        'maxlength' => 255,
      ),
      'download' => array(
        'title' => 'OK to download?',
        'type' => 'checkbox',
      ),
      'stream' => array(
        'title' => 'OK to stream?',
        'type' => 'checkbox',
      ),
      'embed' => array(
        'title' => 'OK to embed?',
        'type' => 'checkbox',
      ),
    );

    foreach ($subfields as $key => $field) {
      $value = isset($items[$delta][$key]) ? $items[$delta][$key] : '';
      $element[$key] = array(
        '#type' => $field['type'],
        '#title' => $field['title'],
        '#default_value' => $value,
        '#size' => (!empty($field['size'])) ? $field['size'] : 60,
      );
      if (!empty($field['description'])) {
        $element[$key]['#description'] = $field['description'];
      }      
      if (!empty($field['maxlength'])) {
        $element[$key]['#maxlength'] = $field['maxlength'];
      }
    }
  }
  return $element;
}

/**
 * Implements hook_field_is_empty().
 */
function npr_fields_field_is_empty($item, $field) {
  if ($item['mp3'] == '') {
    return TRUE;
  }
}

/**
 * Validates npr_audio field.
 *
 * @param $element array
 *   Form element being validated.
 * @param $form_state array
 *   State of current form.
 *
 */
function npr_fields_npr_audio_validate($element, &$form_state) {
  $one_meta_field_not_empty = $element['title']['#value'] || $element['description']['#value'] || $element['duration']['#value'];
  $all_audio_empty = !$element['mp3']['#value'] && !$element['mediastream']['#value'] && !$element['wm']['#value'];
  if ($one_meta_field_not_empty && $all_audio_empty) {
    form_error($element, t('At least one audio link must be non-empty.'));
  }
}