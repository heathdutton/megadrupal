<?php

/**
 * @file
 * Allows admins to turn nodes into NPRML and push content to the NPR API.
 * Notes: users must register with NPR in order to use this module properly.
 */

define('NPR_PUSH_STAGE_URL', 'http://api-s2.npr.org');
define('NPR_PUSH_PRODUCTION_URL', 'http://api.npr.org');

/**
 * Implements hook_menu().
 */
function npr_push_menu() {

  $items= array();

  $items['admin/config/services/npr/push'] = array(
    'title' => 'Push settings',
    'description' => 'Select which content types (and mapped fields) to push to NPR.',
    'access arguments' => array('administer npr api'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('npr_push_admin_config'),
    'file' => 'npr_push.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_node_insert().
 */
function npr_push_node_insert($node) {
  npr_push_push_node($node);
}

/**
 * Implements hook_node_update().
 */
function npr_push_node_update($node) {
  npr_push_push_node($node);
}

/**
 * Pushes a node up to the NPR API.
 *
 * @param $node object
 *   The node being pushed.
 */
function npr_push_push_node($node) {
  $local_id = _npr_push_get_node_org_id($node);
  $flag = _npr_push_push_flag($node);
  if (variable_get('npr_push_types_' . $node->type) && $flag && (!$local_id || ($local_id && $local_id == variable_get('npr_push_org_id')))) {
    // Should we set 'NPR One send' flag?
    if (_npr_push_npr_one_flag($node)) {
      $node->npr_push_npr_one_send = TRUE;
    }
    // Load API classes
    module_load_include('php', 'npr_api', 'classes/NPRAPI');
    module_load_include('php', 'npr_api', 'classes/NPRAPIDrupal');
    $NPRAPIDrupal = new NPRAPIDrupal();
    $NPRAPIDrupal->push_NPRML($node);
    $NPRAPIDrupal->parse_response();
    if (!empty($NPRAPIDrupal->response->id)) {
      _npr_push_add_api_id($node, $NPRAPIDrupal->response->id);
    }
    if ($NPRAPIDrupal->response->error = '200') {
      $message = t('%node was successfully pushed to the NPR API.', array('%node' => $node->title));
      drupal_set_message($message);
    }
    else {
      $message = t('An error occurred while pushing %node. Status code: %status. Error message: %message', array('%node' => $node->title, '%status' => $NPRAPIDrupal->response->code, '%message' => $NPRAPIDrupal->response->error));
      drupal_set_message($message, 'error');
      watchdog('npr_push', $message, NULL, WATCHDOG_ERROR);
    }
  }
}

/**
 * Implements hook_node_delete().
 */
function npr_push_node_delete($node) {
  if (variable_get('npr_push_types_' . $node->type)) {
    $map = variable_get('npr_push_field_map_' . $node->type);
    if (is_array($map)) {
      $npr_id_field = array_search('id', $map);
      $field = field_get_items('node', $node, $npr_id_field);
      $npr_id = $field[0]['value'];
      // Load API classes
      module_load_include('php', 'npr_api', 'classes/NPRAPI');
      module_load_include('php', 'npr_api', 'classes/NPRAPIDrupal');
      $NPRAPIDrupal = new NPRAPIDrupal();
      $NPRAPIDrupal->delete_node($npr_id);
    }
  }
}

/**
 * Finds NPR org id of node (if node is a pulled story and that field is
 * non-empty).
 *
 * @param object $node
 *   A drupal node.
 * @return string/FALSE
 *   The value of the node's NPR org ID field, or false if it's empty.
 */
function _npr_push_get_node_org_id($node) {
  if ($node->type == 'npr_story' && !empty($node->field_npr_org_id[$node->language][0]['value'])) {
    return $node->field_npr_org_id[$node->language][0]['value'];
  }
}


function _npr_push_push_flag($node) {
  $flag = TRUE;
  $field = variable_get('npr_push_' . $node->type . '_pushflag');
  if ($field && property_exists($node, $field)) {
    $flag = (boolean) $node->{$field}[$node->language][0]['value'];
  }
  return $flag;
}

function _npr_push_npr_one_flag($node) {
  $send = FALSE;
  $field = variable_get('npr_push_' . $node->type . '_nproneflag');
  if ($field && property_exists($node, $field)) {
    $send = (boolean) $node->{$field}[$node->language][0]['value'];
  }
  return $send;
}

function _npr_push_add_api_id($node, $id) {
  if ($node->type == 'npr_story') {
    $field = 'field_npr_id';
  }
  else {
    $map = variable_get('npr_push_field_map_' . $node->type, array());
    $drupal_field = array_search('id', $map);
    if (property_exists($node, $drupal_field)) {
      $field = $drupal_field;
    }
  }
  if ($field) {
    $node->{$field}[$node->language][0]['value'] = $id;
    field_attach_update('node', $node);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function npr_push_form_npr_api_config_form_alter(&$form, &$form_state, $form_id) {

  $form['npr_push_config'] = array(
    '#type' => 'fieldset',
    '#title' => t('NPR Push'),
  );

  $form['npr_push_config']['npr_push_api_url'] = array(
    '#type' => 'textfield',
    '#title' => t('NPR Push URL'),
    '#default_value' => variable_get('npr_push_api_url'),
    '#description' => t('Users are strongly encouraged to first test API push functionality by pushing content to a stage server (!stage) before using the live server (!production).', array('!stage' => NPR_PUSH_STAGE_URL, '!production' => NPR_PUSH_PRODUCTION_URL)),
  );

  $form['npr_push_config']['npr_push_org_id'] = array(
    '#type' => 'textfield',
    '#title' => t('NPR Organization ID'),
    '#default_value' => variable_get('npr_push_org_id'),
  );
}
