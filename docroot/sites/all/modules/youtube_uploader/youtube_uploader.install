<?php
/**
 * @file
 * Install, update, and uninstall functions for the youtube module.
 */

/**
 * Implements hook_install().
 */
function youtube_uploader_install() {
  $t = get_t();
  drupal_set_message(filter_xss($t('Youtube Uploader successfully installed, can be configured !here.', array('!here' => l($t('here'), 'admin/config/media/youtube_uploader')))));
}

/**
 * Implements hook_uninstall().
 */
function youtube_uploader_uninstall() {
  variable_del('youtube_uploader_username');
  variable_del('youtube_uploader_passwd');
  variable_del('youtube_uploader_devkey');

  variable_del('youtube_uploader_delete');
  variable_del('youtube_uploader_publishing_options');
  variable_del('youtube_uploader_category');
  variable_del('youtube_uploader_description');
  variable_del('youtube_uploader_tags');
}

/**
 * Implements hook_field_schema().
 */
function youtube_uploader_field_schema($field) {
  $columns = array(
    'fid' => array(
      'type' => 'varchar',
      'description' => 'The youtube id. fid is kept to preserve compatibility with file__submit functions',
      'length' => 255,
      'not null' => TRUE,
    ),
    'thumb_fid' => array(
      'description' => 'The {file_managed}.fid of the thumbnail being referenced in this field.',
      'type' => 'int',
      'not null' => FALSE,
      'unsigned' => TRUE,
    ),
    'video_title' => array(
      'type' => 'varchar',
      'description' => 'The title of the field',
      'length' => 255,
      'not null' => TRUE,
    ),
    'display' => array(
      'description' => 'Flag to control whether this file should be displayed when viewing content.',
      'type' => 'int',
      'size' => 'tiny',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 1,
    ),
  );
  $indexes = array(
    'fid' => array('fid'),
    'thumb_fid' => array('thumb_fid'),
  );
  $foreign_keys = array(
    'thumb_fid' => array(
      'table' => 'file_managed',
      'columns' => array('fid' => 'fid'),
    ),
  );

  return array(
    'columns' => $columns,
    'indexes' => $indexes,
    'foreign keys' => $foreign_keys,
  );
}

/**
 * Implements hook_requirements().
 */
function youtube_uploader_requirements($phase) {
  // @TODO test if ssl is enabled with php.
  // Test if zen gdata is installed and the connection to google can be made.
  $requirements = array();
  $t = get_t();

  if ($phase == 'install') {
    // Test if we have the zend lib installed.
    module_load_include('ytapi.inc', 'youtube_uploader');
    $ytapi = new youtubeUploaderYtapi();

    if (!$ytapi->mtestZendLib()) {
      $requirements['youtube_uploader_zend_lib'] = array(
        'title' => $t('Youtube Uploader: Zend lib'),
        'value' => $t('Not Found'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('The Zend Gdata library needed by the Youtube Uploader module was not found.<br />Please download it !here (take the "Zend Framework Minimal Package" section Zend Framework 1)<br /> and extract it so the path <br />sites/all/libraries/Zend/Loader.php <br />or sites/!domain/libraries/Zend/Loader.php<br /> is available', array(
          '!here' => l($t('here'), 'http://framework.zend.com/downloads/latest'),
          '!domain' => $_SERVER['SERVER_NAME'])
        ),
      );
    }
  }

  // This phase seems to be never called... ?
  if ($phase == 'runtime') {
    // Test if the youtube account settings are correct.
    module_load_include('ytapi.inc', 'youtube_uploader');
    $ytapi = new youtubeUploaderYtapi();

    $tcon = $ytapi->authenticate();
    if (!empty($tcon['error'])) {
      $requirements['youtube_uploader_zend_lib'] = array(
        'title' => $t('Youtube Uploader: Account settings'),
        'value' => $tcon['error'],
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('Youtube uploader module can\'t connect to Youtube, please use valid account settings <a href="!url">here</a>.', array('!url' => url('admin/config/media/youtube_uploader'))),
      );
    }
  }

  return $requirements;
}
