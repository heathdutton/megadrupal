<?php

/**
 * @file
 * main module file for Smart Tribune snippet module
 */

/**
 * Implements hook_page_alter().
 */
function smarttribune_snippet_page_alter(&$page) {
  // Get enabled snippets and render then in the approriate scope.
  $_snippets = _smarttribune_snippet_get_enabled_snippets();
  foreach ($_snippets as $region => $snippets) {
    foreach ($snippets as $snippet) {
      // Extract the scripts of the snippet (at least two elements) and inject
      // them in the approriate scope.
      $scripts = _smarttribune_snippet_clean($snippet->code);
      $options = array(
        'type' => 'inline',
        'scope' => $region,
        'every_page' => FALSE,
        'defer' => TRUE,
        'group' => JS_THEME,
        'weight' => $snippet->weight,
      );
      foreach ($scripts as $script) {
        drupal_add_js($script, $options);
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function smarttribune_snippet_menu() {
  $items['admin/structure/smarttribune_snippet'] = array(
    'title' => 'Smart Tribune Snippet',
    'description' => 'Create Smart Tribune snippets and associate them with paths',
    'page callback' => 'smarttribune_snippet_admin_overview',
    'access arguments' => array('administer Smart Tribune snippet'),
    'file' => 'smarttribune_snippet.admin.inc',
  );

  $items['admin/structure/smarttribune_snippet/list'] = array(
    'title' => 'List',
    'page callback' => 'smarttribune_snippet_admin_overview',
    'access arguments' => array('administer Smart Tribune snippet'),
    'file' => 'smarttribune_snippet.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -1,
  );

  $items['admin/structure/smarttribune_snippet/add'] = array(
    'title' => 'Add Smart Tribune Snippet',
    'description' => 'Create a new Smart Tribune snippet',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smarttribune_snippet_add_form'),
    'access arguments' => array('administer Smart Tribune snippet'),
    'file' => 'smarttribune_snippet.admin.inc',
    'type' => MENU_LOCAL_ACTION,
  );

  $items['admin/structure/smarttribune_snippet/%smarttribune_snippet/edit'] = array(
    'title' => 'Edit Smart Tribune Snippet',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smarttribune_snippet_edit_form', 3),
    'access arguments' => array('administer Smart Tribune snippet'),
    'file' => 'smarttribune_snippet.admin.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/structure/smarttribune_snippet/%smarttribune_snippet/delete'] = array(
    'title' => 'Delete Smart Tribune Snippet',
    'description' => 'Delete an existing Smart Tribune snippet',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smarttribune_snippet_delete_form', 3),
    'access arguments' => array('administer Smart Tribune snippet'),
    'file' => 'smarttribune_snippet.admin.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/structure/smarttribune_snippet/%smarttribune_snippet/disable'] = array(
    'title' => 'Disable/Enable Smart Tribune Snippet',
    'page callback' => 'smarttribune_snippet_ajax_disable',
    'page arguments' => array(3),
    'access arguments' => array('administer Smart Tribune snippet'),
    'file' => 'smarttribune_snippet.admin.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Load a Smart Tribune snippet from the database.
 *
 * @param (int) $tcid
 *   The snippet id to load.
 *
 * @return array/FALSE
 *   Array: A Smart Tribune snippet record object.
 *   FALSE: Snippet doesn't exist in database.
 */
function smarttribune_snippet_load($tcid) {
  $sql = "SELECT * FROM {smarttribune_snippet} WHERE tcid = :tcid";
  $result = db_query($sql, array(':tcid' => $tcid));
  if ($result) {
    while ($row = $result->fetchAssoc()) {
      $snippet['tcid'] = $row['tcid'];
      $snippet['name'] = $row['name'];
      $snippet['status'] = $row['status'];
      $snippet['code'] = $row['code'];
      $snippet['region'] = $row['region'];
      $snippet['visibility'] = $row['visibility'];
      $snippet['pages'] = $row['pages'];
    }
  }
  return (isset($snippet['tcid'])) ? $snippet : FALSE;
}

/**
 * Implements hook_permission().
 */
function smarttribune_snippet_permission() {
  return array(
    'administer Smart Tribune snippet' => array(
      'title' => t('Administer Smart Tribune snippet'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function smarttribune_snippet_theme() {
  return array(
    'smarttribune_snippet_overview_table' => array(
      'render element' => 'form',
      'file' => 'smarttribune_snippet.admin.inc',
    ),
  );
}


/**
 * ### API FUNCTIONS ###
 */

/**
 * Extract the content of each <script> element.
 *
 * @param string $code
 *   The original version of the code from the snippet.
 *
 * @return array
 *   Return an arrray of each script entry.
 */
function _smarttribune_snippet_clean($code) {
  // Wrap the code in <element> to have a valid XML structure.
  $xml = simplexml_load_string('<element>' . $code . '</element>');
  $scripts = array();
  foreach ($xml->script as $script) {
    $scripts[] = (string) $script;
  }
  return $scripts;
}

/**
 * Process active Smart Tribune snippet into an array.
 *
 * @param string $region
 *   (optional) Limit the snippets to fetch to this region.
 *
 * @return array
 *   An array of active Smart Tribune snippet objects grouped by region and
 *   sorted by weight
 */
function _smarttribune_snippet_get_enabled_snippets($region = '') {
  $snippets = array();

  $query = db_select('smarttribune_snippet', 't')
    ->fields('t')
    ->condition('status', '1')
    ->orderBy('weight');

  if (!empty($region)) {
    $query->condition('region', $region);
  }
  $results = $query->execute();

  // Check page-level visibility.
  foreach ($results as $snippet) {
    switch ($snippet->visibility) {
      case BLOCK_VISIBILITY_NOTLISTED:
        if (!drupal_match_path(drupal_get_path_alias($_GET['q']), $snippet->pages)) {
          $snippets[$snippet->region][$snippet->weight] = $snippet;
        }
        break;

      case BLOCK_VISIBILITY_LISTED:
        if (drupal_match_path(drupal_get_path_alias($_GET['q']), $snippet->pages)) {
          $snippets[$snippet->region][$snippet->weight] = $snippet;
        }
        break;
    }
  }
  return $snippets;
}

/**
 * Fetch all the Smart Tribune snippets.
 *
 * @return array
 *   Array of Smart Tribune snippets objects, sorted by region, status
 *   and weight.
 */
function _smarttribune_snippet_get_all_snippets() {
  $snippets = array();

  $results = db_select('smarttribune_snippet', 't')
    ->fields('t')
    ->orderBy('region')
    ->orderBy('status', 'DESC')
    ->orderBy('weight')
    ->execute();

  foreach ($results as $snippet) {
    $snippets[$snippet->region][$snippet->tcid] = $snippet;
  }

  return $snippets;
}

/**
 * Helper to set the breadcrumb.
 */
function _smarttribune_snippet_set_breadcrumb() {
  $breadcrumb = array(
    l(t('Home'), '<front>'),
    l(t('Administration'), 'admin'),
    l(t('Structure'), 'admin/structure'),
    l(t('Smart Tribune snippet'), 'admin/structure/smarttribune_snippet'),
  );

  drupal_set_breadcrumb($breadcrumb);
}
