<?php

/**
 * @file
 * Install file for commerce_cart_to_basket.
 */

/**
 * Implements hook_install().
 */
function commerce_cart_to_basket_install() {

  // Make this module one heavier than commerce_cart, so its hooks are called after commerce_cart's hooks.
  $weight = db_select('system', 's')->fields('s', array(
    'weight'))->condition('name', 'commerce_cart', '=')->execute()->fetchField();
  db_update('system')->fields(array(
    'weight' => $weight + 1))->condition('name', 'commerce_cart_to_basket', '=')->execute();

  // Get any existing overrides from the database for default language.
  $custom_strings = variable_get('locale_custom_strings_en', array());

  // Add new string overrides with default empty context.
  if (is_array($custom_strings[''])) {
    $custom_strings[''] += _cart_to_basket_strings();
  }
  else {
    $custom_strings[''] = _cart_to_basket_strings();
  }

  variable_set('locale_custom_strings_en', $custom_strings);
}

/**
 * Implements hook_uninstall().
 */
function commerce_cart_to_basket_uninstall() {
  // Get string overrides from the database for default language.
  $custom_strings = variable_get('locale_custom_strings_en', array());

  // Remove all that match our overrides.
  if (is_array($custom_strings[''])) {
    $cart_to_basket_strings = _cart_to_basket_strings();
    foreach ($custom_strings[''] as $original => $override) {
      if ($cart_to_basket_strings[$original] == $override) {
        unset($custom_strings[''][$original]);
      }
    }
    variable_set('locale_custom_strings_en', $custom_strings);
  }
}

/**
 * Private function to provide list of string overrides.
 *
 * TODO: add more. Search regexp is: t\('.*?cart
 */
function _cart_to_basket_strings() {
  return array(
    '%title added to <a href="!cart-url">your cart</a>.' => '%title added to <a href="!cart-url">your basket</a>.',
    '%title removed from your cart.' => '%title removed from your basket.',
    'Your shopping cart has been updated.' => 'Your shopping basket has been updated.',
    'Your shopping cart is empty.' => 'Your shopping basket is empty.',
    'Item successfully added to your cart' => 'Item successfully added to your basket',
    'Shopping cart contents' => 'Shopping basket contents',
    'You must specify a valid quantity to add to the cart.' => 'You must specify a valid quantity to add to the basket.',
    'Add to cart' => 'Add to basket',
    'Update cart' => 'Update basket',
    'View cart' => 'View basket',
    'Shopping cart' => 'Shopping basket',
    'Shopping cart (1 item)' => 'Shopping basket (1 item)',
    'Shopping cart (@count items)' => 'Shopping basket (@count items)',
    /* admin items follow */
    'Cart summary' => 'Basket summary',
    'Cart actions' => 'Basket actions',
    'Add to Cart form' => 'Add to Basket form',
    'Display an Add to Cart form for the product.' => 'Display an Add to Basket form for the product.',
    'Display a textfield quantity widget on the add to cart form.' => 'Display a textfield quantity widget on the add to basket form.',
    'Attempt to combine like products on the same line item in the cart.' => 'Attempt to combine like products on the same line item in the basket.',
    'The line item type, referenced product, and data from fields exposed on the Add to Cart form must all match to combine.' => 'The line item type, referenced product, and data from fields exposed on the Add to Basket form must all match to combine.',
    'Cart contents View' => 'Basket contents View',
    'Specify the View to use in the cart contents pane.' => 'Specify the View to use in the basket contents pane.');
}