<?php

/**
 * @file Install, update and uninstall functions for the CAT module.
 *
 * @author Oleksiy Kalinichenko <aexchecker@gmail.com>
 */

/**
 * Implements hook_schema().
 */
function cat_schema() {
  // Create new cache table to store cached data from cat_items.
  $schema['cache_cat_items'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_cat_items']['description'] = 'Cache table used to store information about CAT items for every page.';

  // Table stores exportable CAT items.
  $schema['cat_items'] = array(
    'description' => 'Stores for CAT items.',
    'export' => array(
      'key' => 'machine_name',
      'primary key' => 'path_id',
      'identifier' => 'cat_item',
      'default hook' => 'cat_items_settings_info',
      'can disable' => FALSE,
      'load callback' => 'cat_load_by_name',
      'load multiple callback' => 'cat_load_by_name_multiple',
      'load all callback' => 'cat_load_all',
      'export callback' => 'cat_export',
      'list callback' => 'cat_export_list',
      'api' => array(
        'owner' => 'cat',
        'api' => 'cat',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'path_id' => array(
        'description' => "CAT item unique identifier",
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'machine_name' => array(
        'description' => "CAT item machine name",
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => "CAT item human-readable name",
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'catch_subpaths' => array(
        'description' => 'Boolean indicating whether the node should be displayed at the top of lists in which it appears.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'category' => array(
        'description' => 'CAT item category',
        'type' => 'varchar',
        'length' => 64,
      ),
      'path' => array(
        'description' => 'URL of CAT item',
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'Serialized data of CAT item',
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
        'object default' => array(),
      ),
      'weight' => array(
        'description' => 'CAT item weight related to other items',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      )
    ),
    'primary key' => array(
      'path_id',
    ),
    'unique keys' => array(
      'machine_name' => array(
        'machine_name',
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function cat_requirements($phase) {
  $requirements = array();
  return $requirements;
}

/**
 * Implements hook_install().
 */
function cat_install() {
  db_update('system')
    ->fields(array('weight' => 1000))
    ->condition('name', 'cat')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function cat_uninstall() {
  variable_del('cat_load_prepare_unset_data');
  menu_rebuild();
}

/**
*  Adds a field to decide whether to catch a subpath matching the parent path or not for cat item matching
*/
function cat_update_7001(&$sandbox) {
  $schema = drupal_get_schema('cat_items', true);
  
  $catch_subpaths = $schema['fields']['catch_subpaths'];
  db_add_field('cat_items', 'catch_subpaths', $catch_subpaths);
}