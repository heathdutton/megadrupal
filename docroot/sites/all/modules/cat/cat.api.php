<?php

/**
 * @file Hooks provided by CAT module.
 *
 * @author Oleksiy Kalinichenko <aexchecker@gmail.com>
 */

/**
 * Expose CAT items settings.
 *
 * This hook is called by CTools. For this hook to work, you need
 * hook_ctools_plugin_api(). The values of this hook can be overridden
 * and reverted through the UI.
 *
 * @return array Array with importable objects.
 */
function hook_cat_settings_info() {
  $cat_items = array();

  $cat_item = new stdClass();
  $cat_item->api_version = 1;
  $cat_item->machine_name = 'example_cat';
  $cat_item->name = 'Context Actions and Tasks (CAT)';
  $cat_item->path = 'node/%node';

  // see cat_cat_info()
  $cat_item->data = array(
    'path_pattern' => 'node/%',
    'path_router' => 'node/%',
    'paths' => array(
      0 => 'node/%node:nid',
      1 => 'node/%node:nid/edit',
    ),
    'active' => array(
      0 => 1,
      1 => 0,
    ),
    'remove' => array(
      0 => 0,
      1 => 1,
    ),
    'translatable' => 1,
    'arguments' => array(
      'node' => array(
        'position' => 1,
        'argument' => 'entity_id:node',
        'settings' => array(
          'identifier' => 'Node: ID',
        ),
      ),
    ),
    'access' => array()
  );

  $cat_item->weight = 0;

  $cat_items['example_cat'] = $cat_item;

  return $cat_items;
}

/**
 * Respond to saving CAT item.
 *
 * This hook is invoked after creating new CAT item or updating existing one.
 *
 * @param object $cat_item
 *          Object with all necessary information from saving form.
 */
function hook_cat_save($cat_item) {
  // @TODO: Needs function body.
}

/**
 * Respond to CAT item deletion.
 *
 * This hook is invoked before CAT item is removed from the database.
 *
 * @param object $cat_item
 */
function hook_cat_delete($cat_item) {
  // @TODO: Needs function body.
}

/**
 * Act on a CAT item object is preparing for view.
 *
 * This hook is invoked before any token replacement.
 *
 * @param object $cat_item
 *          Object with path of CAT item loaded from database.
 * @param array $contexts
 *          Ctools contexts from current URL.
 */
function hook_cat_view(&$cat_item, $contexts) {
  // @TODO: Needs function body.
}

/**
 * Alter CAT items generated by _cat_items_build_cats().
 *
 * This hook is invoked after CAT items were built.
 *
 * @param array $tabs
 *          Alterable array of build tabs.
 * @param object $cat_item
 *          Unalterable object contains both processed and raw titles and paths.
 * @param array $contexts
 *          Ctools contexts from current URL.
 */
function hook_cat_view_alter(&$tabs, $cat_item, $contexts) {
  // @TODO: Needs function body.
}

/**
 * Possibility to add custom settings to CAT item on 4th step.
 * See example: https://drupal.org/node/1946760#comment-7194426
 */
function hook_cat_settings_form_custom_alter(&$form, $cat_item) {
  // @TODO: Needs function body.
}

/**
 * Possibility to implement custom cat_item settings on 4th step.
 */
function hook_cat_settings_form_submit_custom_alter(&$custom, $form_state) {
  // @TODO: Needs function body.
}

/**
 * Alter CTools cleanstring settings for Path CAT items URLs.
 *
 * @see ctools_cleanstring() function for more info.
 */
function hook_ctools_cleanstring_cat_url_alter(&$clean_settings) {
  // Disable transliteration (https://drupal.org/project/transliteration).
  $clean_settings['transliterate'] = FALSE;
  // Allow non-ASCII symbols.
  $clean_settings['reduce ascii'] = FALSE;
  // Use underscore as a separator.
  $clean_settings['separator'] = '_';
}

