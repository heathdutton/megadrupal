<?php

/**
 * @file
 * Interactions between Drupal and Google Groups.
 */
ini_set('display_errors', true);

/**
 * Implements hook_permission().
 */
function google_groups_permission() {
  return array(
    'administer google groups' => array(
      'title' => t('Administer Google Groups'),
      'description' => t('Perform administration tasks for the Google Groups module.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function google_groups_menu() {
  $items = array();
  $items['admin/config/services/googlegroups'] = array(
    'title' => 'Google Groups',
    'description' => t('Google Groups module settings.'),
    'access arguments' => array('administer google groups'),
    'page callback' => 'google_groups_list_page',
    'file' => 'google_groups.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/services/googlegroups/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -25,
  );
  $items['admin/config/services/googlegroups/add'] = array(
    'title' => 'Add a group',
    'description' => t('Add a new Google Group.'),
    'access arguments' => array('administer google groups'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_groups_add_form'),
    'file' => 'google_groups.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/services/googlegroups/edit/%'] = array(
    'title' => 'Edit a group',
    'description' => t('Edit a Google Group.'),
    'access arguments' => array('administer google groups'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_groups_add_form'),
    'file' => 'google_groups.admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/services/googlegroups/delete/%'] = array(
    'title' => 'Delete a group',
    'description' => t('Delete a Google Group.'),
    'access arguments' => array('administer google groups'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_groups_delete_confirm'),
    'file' => 'google_groups.admin.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_block_list().
 */
function google_groups_block_info() {
  $settings = variable_get('google_groups_settings', array());

  $blocks = array();
  foreach ($settings['groups'] as $delta => $group) {
    $blocks[$delta]['info'] = t('Google Groups: @name', array('@name' => $group['name']));
  }

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function google_groups_block_view($delta = 0) {
  $settings = variable_get('google_groups_settings', array());

  $block['subject'] = t('Subscribe to @name', array('@name' => $settings['groups'][$delta]['name']));
  $block['content'] = theme('google_groups_subscribe_form_block', array('delta' => $delta));

  return $block;
}

/**
 * Prepares variables for google-groups-subscribe-from-block.tpl.php.
 */
function template_preprocess_google_groups_subscribe_form_block(&$variables) {
  $settings = variable_get('google_groups_settings', array());
  $group = $settings['groups'][$variables['delta']];
  $variables['group_id'] = $group['id'];
  $variables['group_name'] = $group['name'];
}

/**
 * Implements hook_user_view().
 */
function google_groups_user_view($account, $view_mode, $langcode) {
  $settings =  variable_get('google_groups_settings', array());
  $account->content['google_groups'] = array(
    '#type' => 'user_profile_category',
    '#title' => 'Email lists',
  );
  foreach ($settings['groups'] as $delta => $group) {
    $account->content['google_groups'][$delta] = array(
      '#title' => $group['name'],
      '#type' => 'user_profile_item',
      '#value' => l(t('Manage your subscription to @name', array('@name' => $group['name'])), 'http://groups.google.com/group/' . $group['id']),
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function google_groups_form_user_register_form_alter(&$form, &$form_state) {
  $visable = 0;
  $settings = variable_get('google_groups_settings', array());
  foreach ($settings['groups'] as $delta => $group) {
    if ($group['register']) {
      $form_section['google_groups_subscribe_' . $delta] = array(
        '#type' => 'checkbox',
        '#title' => t('Subscribe to @group', array('@group' => $group['name'])),
        '#weight' => 10,
      );

      if ($group['register_default']) {
        $form_section['google_groups_subscribe_' . $delta]['#default_value'] = 1;
      }

      if ($group['register_default_forced']) {
        $form_section['google_groups_subscribe_' . $delta]['#type'] = 'hidden';
      }
      else {
        $visable++;
      }
    }
  }

  if ($visable) {
    $fieldset = array(
      '#type' => 'fieldset',
      '#title' => t('Subscribe to our email list(s)'),
    );
    $form['google_groups'] = array_merge($fieldset, $form_section);
    // Add our own submit handler.
    $form['#submit'][] = 'google_groups_form_user_register_form_submit';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function google_groups_form_user_register_form_submit(&$form, &$form_state) {
  $settings = variable_get('google_groups_settings', array());

  foreach ($settings['groups'] as $delta => $group) {
    if ($form_state['values']['google_groups_subscribe_' . $delta] == 1) {
      google_groups_mail_send($group['id'], $form_state['values']['mail']);
    }
    $form_state['values']['google_groups_subscribe_' . $delta] = NULL;
  }
}

/**
 * Implements hook_theme()
 */
function google_groups_theme() {
  return array(
    'google_groups_subscribe_form_block' => array(
      'template' => 'google-groups-subscribe-form-block',
      'variables' => array('delta' => NULL),
    ),
  );
}

/**
 * Format email to google group.
 *
 * @param $group_id
 *  Group id, for email address.
 * @param $from_email
 *  Users email address.
 * @param $op
 *  Operation. Either subscribe or unsubscribe.
 */
function google_groups_mail_send($group_id, $from_email, $op = 'subscribe') {

  $key = 'google_groups_' . $op;
  $to = $group_id . '+' . $op . '@googlegroups.com';
  $language = language_default();
  $params = array(
    'subject'  => $op,
    'body'     => drupal_wrap_mail($op),
  );

  // Send email to group.
  $result = drupal_mail('google_groups', $key, $to, $language, $params, $from_email);

  if ($result['result'] == TRUE) {
    watchdog('google_groups', 'Google groups !op email has been sent to !to.', array('!op' => $op, '!to' = $to), WATCHDOG_INFO);
  }
  else {
    watchdog('google_groups', 'There was a problem sending a Google groups !op email and it was not sent to !to.', array('!op' => $op, '!to' = $to), WATCHDOG_ERROR);
  }
}
