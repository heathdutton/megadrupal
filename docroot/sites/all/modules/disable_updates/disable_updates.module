<?php

/**
 * Implements hook_form_FORMID_alter().
 */
function disable_updates_form_update_settings_alter(&$form, &$form_state, $form_id) {
  $form['disable_updates'] = array(
    '#type' => 'fieldset',
    '#title' => t('Disabled from updates'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#weight' => 100,
  );

  $form['disable_updates']['disable_updates_custom'] = array(
    '#type' => 'checkbox',
    '#title' => t('Disable custom modules'),
    '#description' => t('Modules with "/custom/" in their filepath will not be checked for updates'),
    '#default_value' => variable_get('disable_updates_custom', 1),
  );

  $form['disable_updates']['disable_updates_patched'] = array(
    '#type' => 'checkbox',
    '#title' => t('Disable patched modules'),
    '#description' => t('Modules with "patched" in their filepath will not be checked for updates'),
    '#default_value' => variable_get('disable_updates_patched', 1),
  );

  $form['disable_updates']['disable_updates_features'] = array(
    '#type' => 'checkbox',
    '#title' => t('Disable custom features'),
    '#description' => t('Modules with "/modules/features/" in their filepath will not be checked for updates'),
    '#default_value' => variable_get('disable_updates_features', 1),
  );


  $form['disable_updates']['disable_updates_others'] = array(
    '#title' => t('Other projects'),
    '#type' => 'checkboxes',
    '#options' => _disable_updates_projects_options(),
    '#default_value' => variable_get('disable_updates_others', array()),
  );

}

/**
 * Implements hook_update_projects_alter().
 */
function disable_updates_update_projects_alter(&$projects) {
  $all_projects = _disable_updates_projects_all();

  if (variable_get('disable_updates_custom', 1)) {
    foreach ($all_projects as $project) {
      if (strpos($project->filename, '/custom/') !== FALSE) {
        unset($projects[$project->name]);
      }
    }
  }

  if (variable_get('disable_updates_patched', 1)) {
    foreach ($all_projects as $project) {
      if (strpos($project->filename, 'patched') !== FALSE) {
        unset($projects[$project->name]);
      }
    }
  }

  if (variable_get('disable_updates_features', 1)) {
    foreach ($all_projects as $project) {
      if (strpos($project->filename, '/modules/features/') !== FALSE) {
        unset($projects[$project->name]);
      }
    }
  }

  $others = array_filter(variable_get('disable_updates_others', array()));
  if (count($others)) {
    foreach ($others as $other) {
      unset($projects[$other]);
    }
  }
}



function _disable_updates_projects_options() {
  $list = array();
  $projects = _disable_updates_projects_all();

  foreach ($projects as $project) {
    $list[$project->name] = $project->info['name'];
  }

  return $list;
}


function _disable_updates_projects_all() {
  $themes = list_themes();
  $modules = system_list('module_enabled');
  $files = $themes + $modules;
  ksort($files);
  return $files;
}