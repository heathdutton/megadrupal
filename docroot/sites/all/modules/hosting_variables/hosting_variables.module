<?php

/**
 * Implementation of hook_menu().
 */
function hosting_variables_menu() {
  $items['node/%node/variables'] = array(
    'title' => 'Variables',
    'description' => 'List of custom variables',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_variables_site_settings', 1),
    'access callback' => 'hosting_variables_menu_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * The access callback for the Variables tab.
 *
 * Make sure this is a site node and user has access.
 */
function hosting_variables_menu_access($node) {
  // Only allow for site nodes.
  if (is_object($node) && $node->type == 'site' && user_access('set custom site variables')) {
    return TRUE;
  }
}

/**
 * Implements hook_permission().
 */
function hosting_variables_permission() {
  return array(
    'set custom site variables' => array(
      'title' => t('set custom site variables'),
    ),
  );
}

/**
 * Configuration form for hosting_variables
 *
 * @see hosting_variables_site_settings_submit
 */
function hosting_variables_site_settings($form, &$form_state, $site) {
  _hosting_variables_append_variables($form,$form_state, $site);

  $form['hosting_variables_variables']['add_variable'] = array(
    '#type' => 'submit',
    '#value' => t('Add more'),
    '#submit' => array('hosting_variables_add_variable'),
    '#ajax' => array(
      'callback' => 'hosting_variables_ajax_callback',
      'wrapper' => 'hosting-variables-fieldset-wrapper',
    ),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#submit' => array('hosting_variables_site_settings_submit'),
  );

  $form['#site'] = $site;

  return $form;
}

/**
 * Submit handler for the "add-more-variable" button.
 *
 * Add empty variable and causes a rebuild.
 */
function hosting_variables_add_variable($form, &$form_state) {
  $form_state['hosting_vars'][] = array('key' => '', 'value' => '');
  $form_state['rebuild'] = TRUE;
}

/**
 * Submit handler for the "remove-variable" button.
 *
 * Remove variable and causes a rebuild.
 */
function hosting_variables_remove_variable($form, &$form_state) {
  foreach ($form_state['triggering_element']['#parents'] as $element) {
    $index = (int) str_replace('hosting_variables_remove_','',$element);
    if (isset($form_state['hosting_vars'][$index])) {
      unset($form_state['hosting_vars'][$index]);
      // If we removed everything - add empty
      if (empty($form_state['hosting_vars'])) {
        $form_state['hosting_vars'][] = array('key' => '', 'value' => '');
      }
    }
  }
  $form_state['rebuild'] = TRUE;
}

/**
 * Callback for both ajax-enabled buttons.
 *
 * Selects and returns the fieldset with the names in it.
 */
function hosting_variables_ajax_callback($form, $form_state) {
  return $form['hosting_variables_variables'];
}

/**
 * Returns a site's variables (from the hostmaster table, not from the site).
 */
function hosting_variables_get_site_variables($site_nid) {
  $results = db_query('SELECT * FROM {hosting_variables} WHERE site_nid = :nid', array(':nid' => $site_nid));

  $row = $results->fetchObject();

  if ($row) {
    return unserialize($row->variables);
  }
  else {
    // No results
    return array();
  }
}

/**
 * Saves a site's variables to the DB.
 */
function hosting_variables_set_site_variables($site_nid, $variables) {
  db_delete('hosting_variables')
    ->condition('site_nid', $site_nid)
    ->execute();

  db_insert('hosting_variables')
    ->fields(array(
      'site_nid' => $site_nid,
      'variables' => serialize($variables),
    ))
    ->execute();
}

/**
 * Helper function to add dynamically generated variable fields.
 */
function _hosting_variables_append_variables(&$form, &$form_state, $site) {
  $form['hosting_variables_variables'] = array(
    '#type' => 'fieldset',
    '#title' => t('Variables'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#description' => t("Values that will be assigned to site variables e.g. in Drupal's settings.php."),
    '#prefix' => '<div id="hosting-variables-fieldset-wrapper">',
    '#suffix' => '</div>',
  );

  if (!isset($form_state['hosting_vars'])) {
    $variables = hosting_variables_get_site_variables($site->nid);
    foreach ($variables as $key => $value) {
      $form_state['hosting_vars'][] = array('key' => $key, 'value' => $value);
    }

    $form_state['hosting_vars'][] = array('key' => '', 'value' => '');
  }
  else {
    foreach ($form_state['hosting_vars'] as $counter => $variable) {
      if (isset($form_state['values']['hosting_variables_variable_key_' . $counter])) {
        if ($form_state['hosting_vars'][$counter]['key'] <> $form_state['values']['hosting_variables_variable_key_' . $counter] || $form_state['hosting_vars'][$counter]['value'] <> $form_state['values']['hosting_variables_variable_value_' . $counter]) {
          $form_state['hosting_vars'][$counter]['key'] = $form_state['values']['hosting_variables_variable_key_' . $counter];
        }
        if ($form_state['hosting_vars'][$counter]['value'] <> $form_state['values']['hosting_variables_variable_value_' . $counter]) {
          $form_state['hosting_vars'][$counter]['value'] = $form_state['values']['hosting_variables_variable_value_' . $counter];
        }

      }
    }
  }

  foreach ($form_state['hosting_vars'] as $counter => $variable) {
    _hosting_variables_append_variable_fieldset($form, $counter, $variable['key'], $variable['value']);
  }

  $form['example'] = array(
    '#type' => 'fieldset',
    '#title' => t('Example'),
    '#weight' => 5,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#description' => "

Any in Drupal's \$conf array could be set.

<pre>
\$conf['site_name'] = 'My Drupal site';
\$conf['theme_default'] = 'garland';
\$conf['anonymous'] = 'Visitor';
</pre>

See <a href='https://www.drupal.org/node/1525472'>https://www.drupal.org/node/1525472</a> for a list of variables available in a clean Drupal install.<br />

For more complex case have a look at the local.settings.php which can be added to a site's repo.",
  );
}

/**
 * Helper function to add a variable set fieldset
 */
function _hosting_variables_append_variable_fieldset(&$form, $index, $variable_key = '', $variable_value = '') {
  $form['hosting_variables_variables'][$index] = array(
    '#type' => 'fieldset',
    '#title' => t('Variable set'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['hosting_variables_variables'][$index]['hosting_variables_variable_key_' . $index] = array(
    '#type' => 'textfield',
    '#title' => t('Variable key'),
    '#description' => t("The name of the variable in Drupal."),
    '#default_value' => $variable_key,
    '#required' => FALSE,
  );

  $form['hosting_variables_variables'][$index]['hosting_variables_variable_value_' . $index] = array(
    '#type' => 'textfield',
    '#title' => t('Variable value'),
    '#default_value' => $variable_value,
    '#required' => FALSE,
  );

  if ($variable_value <> '') {
    $form['hosting_variables_variables'][$index]['hosting_variables_remove_' . $index] = array(
      '#type' => 'submit',
      '#name' => 'hosting_variables_remove_' . $index,
      '#value' => t('Remove variable'),
      '#submit' => array('hosting_variables_remove_variable'),
      '#ajax' => array(
        'callback' => 'hosting_variables_ajax_callback',
        'wrapper' => 'hosting-variables-fieldset-wrapper',
      ),
    );
  }
}

/**
 * Variables Form Submit
 */
function hosting_variables_site_settings_submit(&$form, &$form_state) {
  $variables = array();
  foreach ($form_state['hosting_vars'] as $index => $val) {
    // $index is just the number of the child
    $key = $form_state['values']['hosting_variables_variable_key_' . $index];
    $value = $form_state['values']['hosting_variables_variable_value_' . $index];

    if (!empty($key) && !empty($value)) {
      $variables[$key] = $value;
    }
  }

  if (!empty($form['#site'])) {
    drupal_set_message(t('Variables saved.'));
    hosting_variables_set_site_variables($form['#site']->nid, $variables);

    node_save($form['#site']);
  }
}

/**
 * Variables form Validation
 */
function hosting_variables_site_settings_validate(&$form, &$form_state) {
  foreach ($form_state['hosting_vars'] as $index => $val) {
    // $index is just the number of the child
    $key = $form_state['values']['hosting_variables_variable_key_' . $index];
    $value = $form_state['values']['hosting_variables_variable_value_' . $index];

    if (!empty($key) && empty($value)) {
      form_error($form['hosting_variables_variables'][$index]['hosting_variables_variable_value_' . $index], t('Input variable value.'));
    }

    if (empty($key) && !empty($value)) {
      form_error($form['hosting_variables_variables'][$index]['hosting_variables_variable_key_' . $index], t('Input variable key.'));
    }
  }
}
