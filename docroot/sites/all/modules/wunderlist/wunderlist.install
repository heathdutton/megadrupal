<?php

/**
 * @file
 * Install and Uninstall hooks and update hooks.
 */

/**
 * Implements hook_install().
 */
function wunderlist_install() {
  $t = get_t();
  drupal_set_message($t("Wunderlist settings are available under !link",
    array('!link' => l($t('Administer > Site configuration > Web services > Wunderlist'), 'admin/config/services/wunderlist'))
  ));
}

/**
 * Implements hook_schema().
 */
function wunderlist_schema() {
  $schema['wunderlist_list'] = array(
    'description' => 'Stores the list, all tasks belongs to a list.',
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'owner_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'owner_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'list_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'public' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'revision' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created_at' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'created_by_request_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array('owner_id' => array('owner_id')),
    'primary key' => array('id'),
  );

  $schema['wunderlist_task'] = array(
    'description' => 'Stores a wunderlist task.',
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'assignee_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'created_at' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created_by_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'due_date' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'completed' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'starred' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'list_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'revision' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'created_by_request_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'assignee_id' => array('assignee_id'),
      'list_id' => array('list_id'),
    ),
    'primary key' => array('id'),
  );

  $schema['wunderlist_user'] = array(
    'description' => 'Stores users who are involved with your tasks.',
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'avatar' => array(
        'type' => 'blob',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['wunderlist_webhook'] = array(
    'description' => 'Stores webhooks.',
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'list_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function wunderlist_uninstall() {
  variable_del('wunderlist_token');
  variable_del('wunderlist_url');
  variable_del('wunderlist_api_url');
  variable_del('wunderlist_client_id');
  variable_del('wunderlist_client_secret');
  module_load_include('inc', 'wunderlist');
  module_load_include('inc', 'wunderlist', 'wunderlist.api');
  // Webhooks are on the wunderlist server,
  // so we need to call the api to delete them.
  $oauth2_client = new Wunderlist();
  $webhooks = wunderlist_get_webhooks();

  foreach ($webhooks as $webhook) {
    $oauth2_client->deleteWebhook($webhook->id);
  }
}
