<?php
/**
 * @file
 *  social_connect.install.
 * Contains install and update functions for Social connect.
 */

/**
 * Implementation of hook_requirements().
 */
function social_connect_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    if (!_social_connect_get_config()) {
      $requirements['social_connect_conf'] = array(
        'title' => t('Social Connect'),
        'value' => t('All social connect are turned off. !link', array('!link' => l(t('Settings page'), 'admin/config/user-interface/social_connect'))),
        'severity' => REQUIREMENT_INFO,
        'description' => t('All social connect are turned off. !link', array('!link' => l(t('Settings page'), 'admin/config/user-interface/social_connect'))),
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function social_connect_install() {
  // Hyves fields.
  $fields = array(
    array('username', "username", "Username (used for login)"),
    array('Hyves.constants.response.field.userid', "userid", "User ID"),
    array('Hyves.constants.response.field.language', "language", "Language"),
    array('Hyves.constants.response.profileField.nickname', "nickname", "Nickname"),
    array('Hyves.constants.response.profileField.profilepicture', "profilepicture", "Profilepicture (big)"),
    array('Hyves.constants.response.profileField.profilepictureIcon', "profilepictureIcon", "Profilepicture square icon"),
    array('Hyves.constants.response.profileField.profilepictureIconLarge', "profilepictureIconLarge", "Profilepicture square icon (big)"),
    array('Hyves.constants.response.profileField.profileurl', "profileurl", "Profile url"),
    array('Hyves.constants.response.profileField.firstname', "firstname", "Firstname"),
    array('Hyves.constants.response.profileField.lastname', "lastname", "Lastname"),
    array('Hyves.constants.response.profileField.birthdate', "birthdate", "Birthdate"),
    array('Hyves.constants.response.profileField.gender', "gender", "Gender (return values: 'M', 'F')"),
    array('Hyves.constants.response.contactField.address', "address", "Address"),
    array('Hyves.constants.response.contactField.postalcode', "postalcode", "Postalcode"),
    array('Hyves.constants.response.contactField.city', "city", "City"),
    array('Hyves.constants.response.contactField.email', "email", "Email"),
    array('Hyves.constants.response.contactField.phonenumber', "phonenumber", "Phonenumber"),
    array('Hyves.constants.response.oauth.accessToken', "accessToken", "oAuth accesstoken"),
  );
  foreach ($fields as $field) {
    db_insert('social_connect_fields')
      ->fields(array('constant' => $field[0], 'shortname' => $field[1], 'name' => $field[2], 'source' => 'Hyves'))
      ->execute();
  }

  // facebook fields.
  $fields = array(
    array('user.id', "username", "User ID (used for login)"),
    array('user.languages', "languages", "Languages array"),
    array('user.first_name', "first_name", "Firstname"),
    array('user.last_name', "last_name", "Lastname"),
    array('user.email', "email", "Email"),
    array('user.name', "name", "Fullname"),
    array('http://graph.facebook.com/<user.id>/picture?type=small', "profilepicturesmall", "Profilepicture (small)"),
    array('http://graph.facebook.com/<user.id>/picture?type=normal', "profilepicturenormal", "Profilepicture (normal)"),
    array('http://graph.facebook.com/<user.id>/picture?type=large', "profilepicturelarge", "Profilepicture (large)"),
    array('user.link', "link", "Profile url"),
    array('user.locale', "locale", "Locale"),
    array('user.birthday', "birthday", "Birthdate"),
    array('user.bio', "bio", "Biography"),
    array('user.gender', "gender", "Gender (return values: 'M', 'F')"),
    array('user.hometown.name', "hometown", "Hometown"),
    array('user.location.name', "location", "Location"),
    array('user.work', "work", "Work array"),
    array('user.political', "political", "Political view"),
    array('user.religion', "religion", "Religion"),
    array('user.quotes', "quotes", "Favorite quotes"),
    array('user.website', "website", "Personal website"),
    array('user.sports', "sports", "Sports array"),
    array('user.favorite_athletes', "favorite_athletes", "Favorite athletes array"),
    array('user.favorite_teams', "favorite_teams", "Favorite teams array"),
    array('user.timezone', "timezone", "Timezone ID"),
  );
  foreach ($fields as $field) {
    db_insert('social_connect_fields')
      ->fields(array('constant' => $field[0], 'shortname' => $field[1], 'name' => $field[2], 'source' => 'Facebook'))
      ->execute();
  }
}

/**
 * Implements hook_schema().
 */
function social_connect_schema() {
  $schema['social_connect_fields'] = array(
    'description' => 'Stores Social connect fields information.',
    'fields' => array(
      'fid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique social connect field ID.',
      ),
      'constant' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Field constant that uses for responce.getField',
      ),
      'shortname' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Shortname (variable) that contains retrieved data',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Shown name for admin settings page',
      ),
      'source' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Source name: Hyves, Facebook.. etc...',
      ),
    ),
    'primary key' => array('fid'),
  );

  $schema['social_connect_field_mapping'] = array(
    'description' => 'Stores Social connect field mapping.',
    'fields' => array(
      'fmid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique social connect field mapping ID.',
      ),
      'fid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Field ID from social_connect_fields table',
      ),
      'field_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Mapped field machinename',
      ),
      'override' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Override existed value.',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Field mapping weight',
      ),
    ),
    'foreign keys' => array(
      'source field ID' => array(
        'table' => 'social_connect_fields',
        'columns' => array('fid' => 'fid'),
      ),
    ),
    'primary key' => array('fmid'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function social_connect_uninstall() {
  variable_del('social_enable');
  variable_del('social_hyves_config');
  variable_del('social_facebook_config');
}

/*
 * Delete not needed path.
 */
function social_connect_update_7000() {
  // delete hcrpc_relay path alias for Hyves.
  $criteria = array(
      'source' => drupal_get_path('module', 'social_connect') . '/hcrpc_relay.html',
      'alias' => 'hyves_hcrpc_relay.html',
  );
  path_delete($criteria);
}