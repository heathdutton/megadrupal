<?php

/**
 * @file
 * Watchdog reporter module.
 */

module_load_include('inc', 'watchdog_reporter', 'watchdog_reporter');

define("WATCHDOG_REPORTER_GROUP_NONE", 1);
define("WATCHDOG_REPORTER_GROUP_SQL", 2);
define("WATCHDOG_REPORTER_GROUP_PHP", 3);

/**
 * Implements hook_menu().
 */
function watchdog_reporter_menu() {

  $items = array();

  $items['admin/config/development/watchdog_reporter'] = array(
    'title' => 'Watchdog reporter',
    'type' => MENU_NORMAL_ITEM,
    'description' => 'Create presets.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('watchdog_reporter_list_preset_form'),
    'access arguments' => array('watchdog reporter development'),
    'file' => 'watchdog_reporter.admin.inc',
  );

  $items['admin/config/development/watchdog_reporter/preset'] = array(
    'title' => 'Create new preset',
    'type' => MENU_LOCAL_ACTION,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('watchdog_reporter_preset_form', 5),
    'access arguments' => array('watchdog_reporter development add'),
    'weight' => 1,
    'file' => 'watchdog_reporter.preset.inc',
  );

  $items['admin/config/development/watchdog_reporter/preset/delete/%'] = array(
    'title' => 'Delete preset',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('watchdog_reporter_delete_preset_form', 6),
    'access arguments' => array('watchdog_reporter development delete'),
    'file' => 'watchdog_reporter.preset.inc',
  );

  $items['watchdog_reporter/user/autocomplete'] = array(
    'title' => 'User autocomplete',
    'page callback' => '_watchdog_reporter_user_autocomplete',
    'access callback' => 'user_access',
    'access arguments' => array('access user profiles'),
    'type' => MENU_CALLBACK,
    'file' => 'watchdog_reporter.preset.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function watchdog_reporter_permission() {

  $item = array();

  $item['watchdog_reporter development'] = array(
    'title' => t('List presets'),
    'description' => t('Access to list presets.'),
  );

  $item['watchdog_reporter development add'] = array(
    'title' => t('Add new preset'),
    'description' => t('Alow to add new preset.'),
  );

  $item['watchdog_reporter development delete'] = array(
    'title' => t('Delete preset'),
    'description' => t('Alow to delete preset.'),
  );

  return $item;
}

/**
 * Implements hook_cronapi().
 */
function watchdog_reporter_cronapi($op, $job = NULL) {

  $watchdog_presets = variable_get('watchdog_reporter_preset_list', array());

  $items = array();
  foreach ($watchdog_presets as $key => $preset) {
    if ($preset['#enabled']) {
      $items['watchdog_preset_' . $key] = array(
        'description' => t('Cron for watchdog reporter preset ') . $preset['#values']['watchdog_reporter_preset_name'],
        'rule' => $preset['#values']['watchdog_reporter_cronrule'],
        'callback' => '_watchdog_reporter_cron_job',
        'arguments' => array($key),
      );
    }
  }

  return $items;
}

/**
 * Implements hook_theme().
 */
function watchdog_reporter_theme() {

  return array(
    'watchdog_reporter_html' => array(
      'template' => 'watchdog-reporter-html',
    ),
    'watchdog_reporter_plain' => array(
      'template' => 'watchdog-reporter-plain',
    ),
  );
}

/**
 * Implements hook_preprocess_HOOK().
 */
function watchdog_reporter_preprocess_watchdog_reporter_html(&$variables) {

  $variables['theme_hook_suggestions'][] = 'watchdog_reporter_html__' . $variables['preset_id'];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function watchdog_reporter_preprocess_watchdog_reporter_plain(&$variables) {

  $variables['theme_hook_suggestions'][] = 'watchdog_reporter_plain__' . $variables['preset_id'];
}
