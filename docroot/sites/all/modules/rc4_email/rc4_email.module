<?php

/**
 * @file
 * Turns all mailto links and its link text into RC4 encrypted blobs.
 *
 * This module turns all mailto links and its link text into RC4 encrypted
 * blobs via hook_preprocess_link() - anything that calls l() to generate a
 * mailto link will have their email address encrypted, and then decrypted on
 * the client in Javascript to prevent non-js capable bots from harvesting
 * email addresses on a Drupal web site.
 *
 * A RC4 key is generated per page instance for encryption and decryption of
 * the email addresses. The key is available on the client in the source code
 * so it is not a secret key of any sort, so treat this as a fancy way of
 * obscuring an email address on the fly such that it is not possible for any
 * bots to identify an email address from merely scanning the HTML code of a
 * web page.
 */

module_load_include('inc.php', 'rc4_email', 'rc4');
define('RC4_EMAIL_KEYLENGTH', 16);

/**
 * Implements hook_preprocess_html().
 */
function rc4_email_preprocess_html(&$variables) {
  // Initiates per page encryption key.
  _rc4_email_key();
  drupal_add_html_head(array(
    '#type' => 'markup',
    '#markup' => '<!--[if IE]><script src="https://stringencoders.googlecode.com/svn/trunk/javascript/base64.js"></script><![endif]-->' . "\n",
  ), 'rc4_email');
}

/**
 * Implements hook_preprocess_link().
 */
function rc4_email_preprocess_link(&$variables) {
  $key = _rc4_email_key();

  if (stripos($variables['path'], 'mailto:') !== FALSE) {
    // Encrypt plain text containing email address.
    $encrypt_emailurl = base64_encode(_rc4_email_rc4($key, $variables['path']));
    if ($variables['options']['html']) {
      $encrypt_textenc = base64_encode(_rc4_email_rc4($key, $variables['text']));
    }
    else {
      $encrypt_textenc = base64_encode(_rc4_email_rc4($key, check_plain($variables['text'])));
    }
    $variables['options']['attributes']['data-emailurl'] = $encrypt_emailurl;
    $variables['options']['attributes']['data-textenc']  = $encrypt_textenc;

    // Apply email address obfuscation in link text.
    $variables['text'] = _rc4_email_obscure_emails($variables['text']);

    // Delete/obfuscate email address found in path.
    $rc4_email_href = variable_get('rc4_email_href', '_rc4_email_obscure_emails');
    if ('hash' === $rc4_email_href) {
      $variables['path'] = '#';
      $variables['options']['external'] = TRUE;
    }
    else {
      $variables['path'] = $rc4_email_href($variables['path']);
    }

    // Add nofollow.
    $has_rel = array_key_exists('rel', $variables['options']['attributes']);
    $nofollow = variable_get('rc4_email_nofollow', 1);
    if (!$has_rel AND $nofollow) {
      $variables['options']['attributes']['rel'] = 'nofollow';
    }

    // Add CSS class.
    if (array_key_exists('class', $variables['options']['attributes'])) {
      $variables['options']['attributes']['class'] .= ($variables['options']['attributes']['class'] ? ' ' : '') . 'rc4_email';
    }
    else {
      $variables['options']['attributes']['class'] = 'rc4_email';
    }
  }
}

/**
 * Generates per instance encryption key and returns it.
 *
 * @return string
 *   Encryption key for RC4.
 */
function _rc4_email_key() {
  static $key = '';

  if ($key === '') {
    // Declare per instance RC4 key.
    $key = base64_encode(drupal_random_bytes(RC4_EMAIL_KEYLENGTH));
    // Make key available in Drupal.settings for later use in Javascript.
    drupal_add_js(array('rc4_email' => array('key' => $key)), 'setting');
  }

  return $key;
}

/**
 * Find and obscure all occurences of an email address of a string of text.
 *
 * @param string $text
 *   The text to search for email addresses.
 *
 * @return string
 *   The text with all occurences of email addresses obscured.
 */
function _rc4_email_obscure_emails($text) {
  $emails = array();
  if (preg_match_all(variable_get('rc4_email_regex', '/\S+@\S+/'), $text, $emails) !== FALSE) {
    foreach ($emails as $email) {
      $text = str_replace($email, _rc4_email_obscure_email($email), $text);
    }
  }
  return $text;
}

/**
 * Obscures an email address.
 *
 * @param string $email
 *   Plain email address.
 *
 * @return string
 *   Obscured email address.
 */
function _rc4_email_obscure_email($email) {
  static $s1 = array(' ', '  ', " \t", "\t ", "\t");
  static $s2 = array(' ', '  ', " \t", "\t ", "\t");

  shuffle($s1);
  shuffle($s2);

  $email = str_ireplace('@', $s1[0] . '()' . $s1[1], $email);
  $email = str_ireplace('.', $s2[0] . '!' . $s2[1], $email);

  return $email;
}

/**
 * Implements hook_menu().
 */
function rc4_email_menu() {
  $items['admin/config/content/rc4_email'] = array(
    'title' => 'RC4 email obfuscation',
    'description' => 'Configure how RC4 obfuscates email address.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rc4_email_admin_setting'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'rc4_email.admin.inc',
  );
  return $items;
}
