<?php

/**
 * @file
 * Main file for the Angles Block module.
 */

/**
 * Implements hook_menu().
 */
function angles_block_menu() {
  $items = array();
  $default_theme = variable_get('theme_default', 'bartik');
  $items['admin/structure/block/add-angles-block'] = array(
    'title' => 'Add angles block',
    'description' => 'Add a new angles block.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('angles_block_add_form'),
    'access arguments' => array('administer blocks'),
    'type' => MENU_LOCAL_ACTION,
  );
  foreach (list_themes() as $key => $theme) {
    if ($key != $default_theme) {
      $items['admin/structure/block/list/' . $key . '/add-angles-block'] = array(
        'title' => 'Add angles block',
        'description' => 'Add a new angles block.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('angles_block_add_form'),
        'access arguments' => array('administer blocks'),
        'type' => MENU_LOCAL_ACTION,
      );
    }
  }
  $items['admin/structure/block/delete-angles-block'] = array(
    'title' => 'Delete angles block',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('angles_block_delete'),
    'access arguments' => array('administer blocks'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_preprocess_block().
 *
 * Used to inject the ng-controller attribute.
 */
function angles_block_preprocess_block(&$variables) {
  if ($variables['block']->module == 'angles_block') {
    $block = $variables['block'];
    if (is_array($block->controller_file)) {
      libraries_load('angular');
      _angles_get_required_js();
      foreach ($block->controller_file as $controller) {
        drupal_add_js($controller);
      }
    }
    else {
      drupal_add_js($block->controller_file);
    }
    $variables['attributes_array']['ng-controller'] = $block->controller;
  }
}

/**
 * Implements hook_block_info().
 */
function angles_block_block_info() {
  $blocks = array();
  $result = db_query("SELECT id FROM {angles_block}");
  if ($result->rowCount()) {
    while($row = $result->fetchAssoc()) {
      $blocks[$row['id']] = array(
        'info' => t('Angles Block: ') . $row['id'],
        'cache' => DRUPAL_CACHE_GLOBAL,
      );
    }
  }
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function angles_block_block_configure($delta = '') {
  $form = array();
  $machine_name = $template = $controller = '';
  $defaults = _angles_block_get_block_settings($delta);
  if ($defaults) {
    $machine_name = $defaults['id'];
    $template = $defaults['template'];
    $controller = $defaults['controller'];
  }
  $form['machine_name'] = array(
    '#type' => 'machine_name',
    '#title' => t('Machine Name'),
    '#default_value' => $machine_name,
    '#maxlength' => 32,
    '#required' => TRUE,
    '#machine_name' => array(
      'exists' => '_angles_block_machine_name_exists',
    ),
  );
  $form['template'] = array(
    '#type' => 'select',
    '#title' => t('Choose the Angular JS template you wish to use'),
    '#default_value' => $template,
    '#options' => _angles_get_options('template'),
    '#required' => TRUE,
  );
  $form['controller'] = array(
    '#type' => 'select',
    '#title' => t('Which controller should be run on the template'),
    '#default_value' => $controller,
    '#options' => _angles_get_options('controller'),
    '#required' => TRUE,
  );
  return $form;
}

/**
 * Implements hook_block_save().
 */
function angles_block_block_save($delta = '', $edit = array()) {
  // Insert if key is not found, update if it is.
  db_merge('angles_block')
    ->key(
      array(
        'id' => $edit['machine_name'],
      )
    )
    ->fields(
      array(
        'controller' => $edit['controller'],
        'template' => $edit['template'],
      )
    )
    ->execute();
  cache_clear_all($edit['machine_name'], 'cache_block');
}

/**
 * Implements hook_block_view().
 *
 * Force caching in cache_block. This gets around block caching not working
 * for sites with node access permissions enabled.
 */
function angles_block_block_view($delta = '') {
  // Set this variable to 0 to disable block caching for development
  if (variable_get('angles_block_cache_blocks', 1) && $cache = cache_get($delta, 'cache_block')) {
    return $cache->data;
  }
  else {
    $block = array();
    $settings = _angles_block_get_block_settings($delta);
    $template_file = _angles_get_file('templates', $settings['template']);
    // Pass controller and controller file to the pre-process to save on having
    // to run more queries on each block view.
    $block['controller'] = $settings['controller'];
    $block['controller_file'] = _angles_get_file('controller', $settings['controller']);
    $block['content'] = file_get_contents($template_file);
    cache_set($delta, $block, 'cache_block');
    return $block;
  }
}

/**
 * Menu callback: displays the angles block addition form.
 *
 * @see angles_add_block_form_submit()
 */
function angles_block_add_form($form, &$form_state) {
  module_load_include('inc', 'block', 'block.admin');
  $form = block_admin_configure($form, $form_state, 'angles_block', NULL);

  // Other modules should be able to use hook_form_block_add_block_form_alter()
  // to modify this form, so add a base form ID.
  $form_state['build_info']['base_form_id'] = 'block_add_block_form';

  // Prevent block_add_block_form_validate/submit() from being automatically
  // added because of the base form ID by providing these handlers manually.
  $form['#validate'] = array();
  $form['#submit'] = array('angles_block_add_form_submit');

  return $form;
}

/**
 * Save the new menu block. By faking a standard block add.
 *
 * @see angles_add_block_form()
 */
function angles_block_add_form_submit($form, &$form_state) {
  $delta = $form_state['values']['delta'] = $form_state['values']['machine_name'];

  // Save the block configuration.
  angles_block_block_save($delta, $form_state['values']);

  // Run the normal new block submission (borrowed from block_add_block_form_submit).
  $query = db_insert('block')->fields(array('visibility', 'pages', 'custom', 'title', 'module', 'theme', 'region', 'status', 'weight', 'delta', 'cache'));
  foreach (list_themes() as $key => $theme) {
    if ($theme->status) {
      $region = !empty($form_state['values']['regions'][$theme->name]) ? $form_state['values']['regions'][$theme->name] : BLOCK_REGION_NONE;
      $query->values(array(
        'visibility' => (int) $form_state['values']['visibility'],
        'pages' => trim($form_state['values']['pages']),
        'custom' => (int) $form_state['values']['custom'],
        'title' => $form_state['values']['title'],
        'module' => $form_state['values']['module'],
        'theme' => $theme->name,
        'region' => ($region == BLOCK_REGION_NONE ? '' : $region),
        'status' => 0,
        'status' => (int) ($region != BLOCK_REGION_NONE),
        'weight' => 0,
        'delta' => $delta,
        'cache' => DRUPAL_NO_CACHE,
      ));
    }
  }
  $query->execute();

  $query = db_insert('block_role')->fields(array('rid', 'module', 'delta'));
  foreach (array_filter($form_state['values']['roles']) as $rid) {
    $query->values(array(
      'rid' => $rid,
      'module' => $form_state['values']['module'],
      'delta' => $delta,
    ));
  }
  $query->execute();

  drupal_set_message(t('The block has been created.'));
  cache_clear_all();
  $form_state['redirect'] = 'admin/structure/block';
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alters the block admin form to add delete links next to menu blocks.
 */
function angles_block_form_block_admin_display_form_alter(&$form, $form_state) {
  $result = db_query("SELECT id FROM {angles_block}");
  if ($result->rowCount()) {
    while($row = $result->fetchAssoc()) {
      $delta = $row['id'];
      $form['blocks']['angles_block_' . $delta]['delete'] = array(
        '#type' => 'link',
        '#title' => t('delete'),
        '#href' => 'admin/structure/block/delete-angles-block/' . $delta
      );
    }
  }
}

/**
 * Menu callback: confirms deletion of angles blocks.
 *
 * @see angles_block_delete_submit()
 */
function angles_block_delete($form, &$form_state, $delta) {
  $form['block_title'] = array('#type' => 'hidden', '#value' => $delta);
  $form['delta'] = array('#type' => 'hidden', '#value' => $delta);

  return confirm_form($form, t('Are you sure you want to delete the "%name" block?', array('%name' => $delta)), 'admin/structure/block', NULL, t('Delete'), t('Cancel'));
}

/**
 * Deletes angles blocks.
 *
 * @see angles_block_delete()
 */
function angles_block_delete_submit($form, &$form_state) {
  // Remove the angles block configuration variables.
  $delta = $form_state['values']['delta'];

  db_delete('block')
    ->condition('module', 'angles_block')
    ->condition('delta', $delta)
    ->execute();
  db_delete('block_role')
    ->condition('module', 'angles_block')
    ->condition('delta', $delta)
    ->execute();
  db_delete('angles_block')
    ->condition('id', $delta)
    ->execute();
  drupal_set_message(t('The block "%name" has been removed.', array('%name' => $form_state['values']['block_title'])));
  cache_clear_all();
  $form_state['redirect'] = 'admin/structure/block';
  return;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds the angles block caching option to the Drupal performance settings form.
 */
function angles_block_form_system_performance_settings_alter(&$form, &$form_state) {
  $form['caching']['angles_block_cache_blocks'] = array(
    '#type' => 'checkbox',
    '#title' => t('Cache Angles blocks'),
    '#default_value' => variable_get('angles_block_cache_blocks', 1),
    '#weight' => $form['caching']['block_cache']['#weight'] + 1,
  );
}

/**
 * Pulls the settings from the custom table to be used in editing and
 * viewing the block. This function is called only once per block view
 * (and is cached so it won't be called again) and once per block edit
 * (this is not cached).
 *
 * @param string $id
 *   Block ID that should be loaded. Also known as the block delta.
 *
 * @return array|bool
 *   Returns an array on success or false on failure.
 */
function _angles_block_get_block_settings($id) {
  $result = db_query("SELECT * FROM {angles_block} WHERE id = :id", array(':id' => $id));
  if ($result->rowCount()) {
    return $result->fetchAssoc();
  }
  return FALSE;
}

/**
 * Determines if a machine name is unique.
 *
 * @param string id
 *  The machine name or block delta.
 *
 * @return bool
 */
function _angles_block_machine_name_exists($id) {
  $result = db_query("SELECT id FROM {angles_block} WHERE id = :id", array(':id' => $id));
  return $result->rowCount() > 0;
}
