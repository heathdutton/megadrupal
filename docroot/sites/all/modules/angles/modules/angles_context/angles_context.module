<?php

/**
 * @file
 * Main file for the Angles Context module.
 */

/**
 * Implements hook_context_plugins().
 */
function angles_context_context_plugins() {
  $plugins = array();
  $plugins['angles_application_reaction'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'angles_context') . '/plugins',
      'file' => 'angles_application_reaction.inc',
      'class' => 'angles_application_reaction',
      'parent' => 'context_reaction',
    ),
  );
  $plugins['angles_ngtemplate_reaction'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'angles_context') . '/plugins',
      'file' => 'angles_ngtemplate_reaction.inc',
      'class' => 'angles_ngtemplate_reaction',
      'parent' => 'context_reaction',
    ),
  );
  return $plugins;
}

/**
 * Implements hook_context_registry().
 */
function angles_context_context_registry() {
  return array(
    'reactions' => array(
      'angles_application' => array(
        'title' => t('Angles Application'),
        'description' => t('Set the Angular application name.'),
        'plugin' => 'angles_application_reaction',
      ),
      'angles_ngtemplate' => array(
        'title' => t('Angles ng-template'),
        'description' => t('Loads a template as a script for faster loading by directives.'),
        'plugin' => 'angles_ngtemplate_reaction',
      ),
    ),
  );
}

/**
 * Implements hook_preprocess_html().
 *
 * Used to inject the ng-app.
 */
function angles_context_preprocess_html(&$variables) {
  if ($plugin = context_get_plugin('reaction', 'angles_application')) {
    $app = $plugin->execute();
    if (!empty($app)) {
      $variables['attributes_array']['ng-app'] = $app;
    }
  }
}

/**
 * Implements hook_page_alter().
 *
 * Used to inject ng-template script tags to prevent additional http requests
 * for directives templateUrl.
 */
function angles_context_page_alter(&$variables) {
  if ($plugin = context_get_plugin('reaction', 'angles_ngtemplate')) {
    $template_machine_name = $plugin->execute();
    if ($template_machine_name) {
      $file_name = _angles_get_file('angles_templates', $template_machine_name);
      $cache_name = 'angles_block:' . md5($file_name);
      if (variable_get('angles_block_cache_blocks', 1) && $cache = cache_get($cache_name)) {
        $file_data = $cache->data;
      }
      else {
        $file_data = file_get_contents($file_name);
        cache_set($cache_name, $file_data);
      }
      $element = array(
        '#tag' => 'script',
        '#value' => $file_data,
        '#attributes' => array(
          'type' => 'text/ng-template',
          'id' => '/' . $file_name,
        )
      );
      $variables['header']['partial_' . $file_name] = array(
        '#markup' => theme('html_tag', array('element' => $element)),
      );
    }
  }
}
