<?php

/**
 * @file
 * Main file for the Angles module.
 */

/**
 * Implements hook_libraries_info().
 */
function angles_libraries_info() {
  $libraries = array();
  $libraries['angular'] = array(
    'name' => 'Angular JS',
    'vendor url' => 'http://angularjs.org/',
    'download url' => 'http://angularjs.org/',
    'callbacks' => array(
      'post-load' => array(
        'angles_post_load',
      ),
    ),
    'version arguments' => array(
      'file' => 'angular.min.js',
      'pattern' => '/AngularJS v(.*)/',
      'lines' => 5,
    ),
    'files' => array(
      'weight' => 20,
      'js' => array('angular.min.js'),
    ),
    'versions' => array(
      '1' => array(
        'files' => array(
          'js' => array('angular.min.js'),
        ),
      ),
    ),
  );
  return $libraries;
}

/**
 * Callback to work around libraries and drupal_add_js loading scripts
 * in a wonky order. Modules that want to load an app file should use the
 * hook angles_post_load.
 */
function angles_post_load() {
  module_invoke_all('angles_post_load');
}

/**
 * Pulls the required JS from modules and loads them using drupal_add_js().
 */
function _angles_get_required_js() {
  $returned_results = module_invoke_all('angles_require_js');
  foreach ($returned_results as $returned_result) {
    foreach ($returned_result as $script) {
      drupal_add_js($script);
    }
  }
}

/**
 * Builds an option list of controllers or templates to load.
 * Invokes either hook_angles_controllers or hook_angles_templates.
 *
 * @param string $type
 *  The type of result to return. It can be either controllers or
 *  templates (technically controllers or anything else).
 *
 * @return array
 *  Returns an array of the human readable names keyed by the machine names.
 */
function _angles_get_options($type) {
  $results = array('' => t('- None -'));
  // Condition is just to be safe. Don't want any hook to be called directly
  // from a variable.
  $to_invoke = $type == 'controller' ? 'angles_controllers' : 'angles_templates';
  $returned_results = module_invoke_all($to_invoke);
  foreach ($returned_results as $returned_result) {
    $results[$returned_result['machine_name']] = $returned_result['human_name'];
  }
  return $results;
}

/**
 * Fetches the files to load (JS or template).
 * Invokes either hook_angles_controllers or hook_angles_templates.
 *
 * @see angles.api.php for more examples of the hooks and arrays.
 *
 * @param string $type
 *  The type of result to return. It can be either controllers or
 *  templates (technically controllers or anything else).
 * @param string $machine_name
 *  The machine name of the controller or template to load from a child module.
 *
 * @return array|bool
 *   Returns an array of path to file on success or false on failure.
 */
function _angles_get_file($type, $machine_name) {
  // Condition is just to be safe. Don't want any hook to be called directly
  // from a variable.
  $to_invoke = $type == 'controller' ? 'angles_controllers' : 'angles_templates';
  $returned_results = module_invoke_all($to_invoke);
  foreach ($returned_results as $returned_result) {
    if ($returned_result['machine_name'] == $machine_name) {
      return $returned_result['file'];
    }
  }
  return FALSE;
}
