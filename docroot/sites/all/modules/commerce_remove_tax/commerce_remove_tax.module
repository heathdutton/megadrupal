<?php

function commerce_remove_tax_rules_action_info() {
  $actions = array();
 
  $actions['commerce_remove_tax'] = array(
    'label' => t('Remove all taxes applied to a line item'),
    'parameter' => array(
      'commerce_line_item' => array(
        'type' => 'commerce_line_item',
        'label' => t('Line item'),
        'wrapped' => TRUE,
        'save' => TRUE,
      ),
      'increase_base_price' => array(
        'type' => 'boolean',
        'label' => t('Increase the base price amount by the amount of the taxes removed.'),
        'default value' => FALSE,
      ),
    ),
    'group' => t('Commerce Tax'),
  );

  return $actions;
}

/**
 * Rules actions: removes all taxes applied to a line item.
 */
function commerce_remove_tax($line_item_wrapper, $increase_base_price) {
  $component_types = commerce_tax_commerce_price_component_type_info();
  // Loop over the price components in the line item's unit price.
  $price = $line_item_wrapper->commerce_unit_price->value();
  $new_components = array();

  foreach ($price['data']['components'] as $key => $component) {
    // Look for components that match one of the defined tax price components.
    if (in_array($component['name'], array_keys($component_types))) {
      // Remove it from the components array.
      unset($price['data']['components'][$key]);
      // If the component was marked as "included" in the price amount, update
      // the price amount to reflect the difference.
      if (!empty($component['included'])) {
        $price['amount'] -= $component['price']['amount'];
      }

      // If the user opted to increase the base price by the amount of the taxes
      // removed, add them back as new price components.
      if (!empty($increase_base_price)) {
        $price['data']['components'][] = array(
          'name' => 'base_price',
          'price' => array(
            'amount' => $component['price']['amount'],
            'currency_code' => $component['price']['currency_code'],
            'data' => array(),
          ),
          'included' => TRUE,
        );

        $price['amount'] += $component['price']['amount'];
      }
    }
  }

  $line_item_wrapper->commerce_unit_price = $price;
}