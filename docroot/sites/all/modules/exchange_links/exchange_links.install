<?php

/**
 * @file
 * Install, update and uninstall functions for the exchange links module.
 */
 
/**
 * Implements hook_schema().
 */
function exchange_links_schema() {
  $schema['exchange_links'] = array(
    'description' => 'Stores donor information.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'size' => 'tiny',
        'description' => 'Primary Key: Unique access ID.',
      ),
      'site_title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Text site_title is used for title of Site.',
      ),
      'site_url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Text site_url is used for URL of Site.',
      ),
      'reciprocal_url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Text reciprocal_url is used for Reciprocal URL of site.',
      ),
      'email' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Text email is used for email of User.',
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Text description is used for description of Site.',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Text category is used for category of Link.',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
        'default' => 0,
        'description' => 'Integer status is used for status of link.',
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function exchange_links_install() {
  // Set some default variables necessary for the module to perform.
  variable_set('exchange_links_rules_desc', 'Drupal7 related websites only! (Other none Drupal7 related websites will be removed) We are constantly looking for new perm Drupal7 link exchanges.');
  //variable_set('exchange_links_rules_linkback', 1);
  variable_set('exchange_links_rules_pagerank', 5);
  variable_set('exchange_links_url', 'http://www.yoursite.com');
  variable_set('exchange_links_site_title', 'Site Title.');
  variable_set('exchange_links_site_desc', 'Site Description.');
  variable_set('exchange_links_html_code', '&lt;a href="http://www.yoursite.com" title="Site Title"&gt;Site Title&lt;/a&gt;');
  // Create a vocabulary for exchange links.
  $vocabulary = new stdClass;
  $vocabulary->name = st("Exchange Links");//t("Exchange Links");
  $vocabulary->machine_name = 'exchange_links';
  $vocabulary->hierarchy = 0;
  $vocabulary->relations = 0;
  $vocabulary->module = 'exchange_links';
  taxonomy_vocabulary_save($vocabulary);
}
 
/**
 * Implements hook_uninstall().
 */
function exchange_links_uninstall() {
  // Delete all the Exchange links variables
  db_query("DELETE FROM {variable} WHERE name LIKE 'exchange_links_%'");
  // Delete the Vocabulary and associated terms
  $vocabulary = taxonomy_vocabulary_machine_name_load('exchange_links');
  taxonomy_vocabulary_delete($vocabulary->vid);
  db_query("DELETE FROM {taxonomy_vocabulary} WHERE machine_name LIKE 'exchange_links'");
  // Clear the variable cache
  cache_clear_all('variables', 'cache');
}