<?php

/**
 * @file
 * Install, update and uninstall functions for the signup_sms module.
 *
 */

/**
 * Implements hook_schema().
 */
function signup_sms_schema() {
  $schema = array();

  $schema['signup_sms'] = array(
    'description' => 'Holding table for anonymous SMS signups',
    'fields' => array(
      'ssid' => array(
        'type' => 'serial',
      ),
      'sid' => array(
        'description' => 'The signup ID of this submission.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The user ID of the SMS submission. 0 if anonymous.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'number' => array(
        'description' => 'Mobile number.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'created' => array(
        'description' => 'Date this entry was created',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'reminded' => array(
        'description' => 'Last time this user was reminded',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('ssid'),
    'unique keys' => array(
      'sid_number' => array('sid', 'number'),
      'sid_uid' => array('sid', 'uid'),
    ),
  );

  $schema['signup_sms_codes'] = array(
    'description' => 'Codes and settings associated with nodes.',
    'fields' => array(
      'code' => array(
        'description' => 'Code to mark a user as attended.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'nid' => array(
        'description' => 'The node ID of the signup.',
        'type' => 'int',
        'unsigned' => TRUE,
      ),
      'open' => array(
        'description' => 'Minutes from start date to accept SMS attendance.',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
        'unsigned' => FALSE,
      ),
      'close' => array(
        'description' => 'Minutes from start date to stop SMS attendance.',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
        'unsigned' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
    'unique keys' => array('code' => array('code')),
  );

  return $schema;
}

/**
 * Replace primary key, add new fields.
 */
function signup_sms_update_6101() {

  db_drop_primary_key('signup_sms');

  // Add ssid.
  db_add_field('signup_sms', 'ssid', array(
    'type' => 'serial',
      ), array('primary key' => array('ssid')));

  // Add sid to track anonymous signups.
  db_add_field('signup_sms', 'sid', array(
    'type' => 'int',
    'not null' => TRUE,
    'unsigned' => TRUE,
  ));

  // Add uid to signup_sms for tracking.
  db_add_field('signup_sms', 'uid', array(
    'type' => 'int',
    'default' => 0,
    'not null' => TRUE,
    'unsigned' => TRUE,
  ));

  // Change indexes: unique on sid/uid, unique on sid/number.
  db_add_unique_key('signup_sms', 'sid_number', array('sid', 'number'));
  db_add_unique_key('signup_sms', 'sid_uid', array('sid', 'uid'));

  // Change key to nid, add unique key on code.
  db_drop_primary_key('signup_sms_codes');
  db_add_primary_key('signup_sms_codes', array('nid'));
  db_add_unique_key('signup_sms_codes', 'code', array('code'));

  // Add open/close minute fields.
  db_add_field('signup_sms_codes', 'open', array(
    'type' => 'int',
    'default' => 0,
    'not null' => TRUE,
    'unsigned' => FALSE,
  ));

  db_add_field('signup_sms_codes', 'close', array(
    'type' => 'int',
    'default' => 0,
    'not null' => TRUE,
    'unsigned' => FALSE,
  ));

  return t('Successfully replaced primary key and added new fields');
}

/**
 * Update minutes to seconds because we are using Duration.
 */
function signup_sms_update_6102() {
  db_update('signup_sms_codes')->fields(array('open' => 'open*60', 'close' => 'close*60',))->execute();
  return t('Update minutes to seconds because we are using Duration');
}

/**
 * Add created and reminded fields.
 */
function signup_sms_update_6105() {
  $ret = array();

  db_add_field('signup_sms', 'created', array(
    'description' => 'Date this entry was created',
    'type' => 'int',
    'not null' => FALSE,
  ));

  db_add_field('signup_sms', 'reminded', array(
    'description' => 'Last time this user was reminded',
    'type' => 'int',
    'not null' => FALSE,
  ));

  db_update('signup_sms')->fields(array('created' => REQUEST_TIME,))->execute();
  db_update('signup_sms')->fields(array('reminded' => REQUEST_TIME,))->condition('uid', 0, '!=')->execute();

  variable_set('signup_sms_reminder_time', 86400);

  return t('Added created and reminded fields');
}
