<?php

/**
 * @file
 * Module file for AJAX Update.
 */

/**
 * Implements hook_menu().
 */
function ajax_update_menu() {
  $items['admin/config/ajax_update'] = array(
    'title' => 'AJAX Update',
    'description' => 'This is the parent item',
    'position' => 'left',
    'weight' => -100,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/ajax_update/basic'] = array(
    'title' => 'Configuration',
    'description' => 'Configure AJAX Update.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ajax_update_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'ajax_update.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_form_alter().
 */
function ajax_update_form_alter(array &$form, array &$form_state, $form_id) {

  // Get the settings for AJAX Update.
  $settings = variable_get('ajax_update', array(
    'options' => array(
      'exclude' => 'select_forms',
    ),
  ));

  // If options do not exist, add a default option.
  if (!isset($settings['ajax_html_id_exclude']['options'])) {
    $settings['ajax_html_id_exclude']['options'] = 'select_forms';
    variable_set('ajax_update', $settings);
  }

  // Process depending on the option selected in the admin form.
  switch ($settings['ajax_html_id_exclude']['options']) {
    case 'all_forms':
      _ajax_update_html_id_forms_process($form, $form_state);
      break;

    case 'ajax_forms':
      _ajax_update_html_id_exclude_ajaxified_forms_process($form, $form_state);
      break;

    case 'select_forms':
      _ajax_update_html_id_exclude_select_forms_process($form, $form_state);
      break;

    default:
      // Do nothing.
      break;

  }
}

/**
 * Process forms that are AJAXified.
 *
 * @param array $form
 *   The form array, passed by reference.
 * @param array $form_state
 *   The form_state, passed by reference.
 */
function _ajax_update_html_id_exclude_ajaxified_forms_process(array &$form, array &$form_state) {
  if (_ajax_update_element_is_ajaxified($form, $form_state)) {
    _ajax_update_html_id_forms_process($form, $form_state);
  }
}

/**
 * Process forms that have the #ajax_html_id_exclude property set to TRUE.
 *
 * @param array $form
 *   The form array, passed by reference.
 * @param array $form_state
 *   The form_state, passed by reference.
 */
function _ajax_update_html_id_exclude_select_forms_process(array &$form, array &$form_state) {
  if (isset($form['#ajax_html_id_exclude']) && $form['#ajax_html_id_exclude'] == TRUE) {
    _ajax_update_html_id_forms_process($form, $form_state);
  }
}

/**
 * Process the form by adding the ajax_html_id_exclude class to it.
 *
 * @param array $form
 *   The form array, passed by reference.
 * @param array $form_state
 *   The form_state, passed by reference.
 */
function _ajax_update_html_id_forms_process(array &$form, array &$form_state) {

  // Add the ajax_html_id_exclude class to the form.
  if (isset($form['#attributes']['class'])) {
    $form['#attributes']['class'][] = 'ajax_html_id_exclude';
  }
  else {
    $form['#attributes']['class'] = array('ajax_html_id_exclude');
  }

  $form['#attributes']['class'] = array_unique($form['#attributes']['class']);
  // Add the updated javascript to the form also.
  $form['#attached']['js'][] = drupal_get_path('module', 'ajax_update') . '/ajax_update.js';
}

/**
 * Determine if the element or its children are AJAXified.
 *
 * @param array $element
 *   The element array, passed by reference.
 * @param array $form_state
 *   The form_state, passed by reference.
 *
 * @return bool
 *   Whether this element (or its children) are AJAXified
 */
function _ajax_update_element_is_ajaxified(array &$element, array &$form_state) {
  // If the element has an #ajax property, it is AJAXified.
  if (isset($element['#ajax'])) {
    return TRUE;
  }

  // Set a sentinel value, since we only need to know if this form has
  // AJAXified components.
  $ajaxified = FALSE;

  // Get the element_children of the element.
  // Iterate over the children...
  foreach (element_children($element) as $element_child_id) {

    // Check if this child is AJAXified.
    $ajaxified |= _ajax_update_element_is_ajaxified($element[$element_child_id], $form_state);

    // If at any point $ajaxified is TRUE, return TRUE.
    if ($ajaxified) {
      return TRUE;
    }
  }

  // This element is not AJAXified and has no AJAXified children.
  return FALSE;
}
