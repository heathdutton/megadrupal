<?php

/**
 * @file
 * Imagefield Multiformat allows the site administrator to define different
 * image presets to a multiple value image field.
 *
 * Currently only lead image and followup image presets are supported.
 */

/**
 * Implementation of hook_field_formatter_info().
 * Declare the field formatters provided by the module.
 */
function imagefield_multiformat_field_formatter_info() {
  $formatters = array();
  $default_settings = array('image_style' => '', 'image_link' => '');
  $formatters['multiformat_image'] = array(
    'label' => t('Multiformat: Lead + other images'),
    'field types' => array('image'),
    'settings' => array(
      0 => $default_settings,
      1 => $default_settings,
    ),
  );
  return $formatters;
}

function imagefield_multiformat_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $cardinality = $field['cardinality'];

  $image_styles = image_style_options(FALSE);
  $link_types = array(
    'content' => t('Content'),
    'file' => t('File'),
  );

  if ($cardinality != 1) {
    $element[0] = array(
      '#type' => 'fieldset',
      '#title' => t('Lead image'),
      '#collapsed' => FALSE,
    );
    $element[0]['image_style'] = array(
      '#title' => t('Lead image style'),
      '#type' => 'select',
      '#default_value' => $settings[0]['image_style'],
      '#empty_option' => t('None (original image)'),
      '#options' => $image_styles,
    );
    $element[0]['image_link'] = array(
      '#title' => t('Link image to'),
      '#type' => 'select',
      '#default_value' => $settings[0]['image_link'],
      '#empty_option' => t('Nothing'),
      '#options' => $link_types,
    );

    $element[1] = array(
      '#type' => 'fieldset',
      '#title' => t('Followup images'),
      '#collapsed' => FALSE,
    );
    $element[1]['image_style'] = array(
      '#title' => t('Followup image style'),
      '#type' => 'select',
      '#default_value' => $settings[1]['image_style'],
      '#empty_option' => t('None (original image)'),
      '#options' => $image_styles,
    );
    $element[1]['image_link'] = array(
      '#title' => t('Link images to'),
      '#type' => 'select',
      '#default_value' => $settings[1]['image_link'],
      '#empty_option' => t('Nothing'),
      '#options' => $link_types,
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function imagefield_multiformat_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  // How many images are in this imagefield
  $cardinality = $field['cardinality'];

  $summary = array();

  $image_styles = image_style_options(FALSE);
  // Unset possible 'No defined styles' option.
  unset($image_styles['']);

  $link_types = array(
    'content' => t('Linked to content'),
    'file' => t('Linked to file'),
  );

  if ($cardinality != 1) {
    // Lead image settings.
    if (isset($image_styles[$settings[0]['image_style']])) {
      $summary[] = t('Image style for lead image: @style', array(
        '@style' => $image_styles[$settings[0]['image_style']])
      );
    }
    else {
      $summary[] = t('Original image for lead image');
    }
      // Display this setting only if image is linked.
    if (isset($link_types[$settings[0]['image_link']])) {
      $summary[] = $link_types[$settings[0]['image_link']];
    }

    // Settings for the followup images.
    if (isset($image_styles[$settings[1]['image_style']])) {
      $summary[] = t('Image style for followup images: @style', array(
        '@style' => $image_styles[$settings[1]['image_style']])
      );
    }
    else {
      $summary[] = t('Original image for followup images');
    }
    // Display this setting only if image is linked.
    if (isset($link_types[$settings[1]['image_link']])) {
      $summary[] = $link_types[$settings[1]['image_link']];
    }
  }
  else {
    $summary[] = t('For single value imagefields use the image formatter.');
  }

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function imagefield_multiformat_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  // Loop through the image field entries and apply the settings.
  foreach ($items as $delta => $item) {
    $settings_key = $delta == 0 ? 0 : 1;
    $link_file = FALSE;

    // Check if the formatter involves a link.
    if ($display['settings'][$settings_key]['image_link'] == 'content') {
      $uri = entity_uri($entity_type, $entity);
    }
    elseif ($display['settings'][$settings_key]['image_link'] == 'file') {
      $link_file = TRUE;
    }

    if ($link_file) {
      $uri = array(
        'path' => file_create_url($item['uri']),
        'options' => array(),
      );
    }
    $element[$delta] = array(
      '#theme' => 'image_formatter',
      '#item' => $item,
      '#image_style' => $display['settings'][$settings_key]['image_style'],
      '#path' => isset($uri) ? $uri : '',
    );
    unset($uri);
  }

  return $element;
}
