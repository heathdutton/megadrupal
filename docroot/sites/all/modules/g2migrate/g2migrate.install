<?php

/**
 * @file
 * Define tables used for importing Gallery2 photo albums.
 *
 * Some tables will be imported from a SQL dump of the Gallery2 database.
 * Others will be generated by code in this module.
 */

/**
 * Implements hook_install.
 */
function g2migrate_install() {

  // Define a content type for importing photos.
  if (!array_key_exists('g2migrate_photo', node_type_get_types())) {
    $type = array(
      'type' => 'g2migrate_photo',
      'name' => st('Photo'),
      'base' => 'node_content',
      'description' => st("Beer is what we drink."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 1,
    );
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Create an image field named "Gallery2 Image", enabled for the 'Photo'
  // content type.
  if (!field_info_field('field_g2migrate_image')) {
    $field = array(
      'field_name' => 'field_g2migrate_image',
      'type' => 'image',
      'cardinality' => 1,
      'translatable' => TRUE,
      'indexes' => array('fid' => array('fid')),
      'settings' => array(
        'uri_scheme' => 'public',
        'default_image' => FALSE,
      ),
    );
    field_create_field($field);
  }

  if (!field_info_instance('node', 'field_g2migrate_image', 'g2migrate_photo')) {
    $instance = array(
      'field_name' => 'field_g2migrate_image',
      'entity_type' => 'node',
      'label' => 'Image',
      'bundle' => 'g2migrate_photo',
      'description' => 'Upload an image.',
      'settings' => array(
        'file_directory' => 'field/g2migrate/image',
        'file_extensions' => 'png gif jpg jpeg',
        'max_filesize' => '',
        'max_resolution' => '',
        'min_resolution' => '',
        'alt_field' => TRUE,
        'title_field' => '',
      ),
      'widget' => array(
        'type' => 'image_image',
        'settings' => array(
          'progress_indicator' => 'throbber',
          'preview_image_style' => 'thumbnail',
        ),
        'weight' => -1,
      ),
      'display' => array(
        'full' => array(
          'label' => 'hidden',
          'type' => 'image__large',
          'settings' => array(),
          'weight' => -1,
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'image_link_content__medium',
          'settings' => array(),
          'weight' => -1,
        ),
        'rss' => array(
          'label' => 'hidden',
          'type' => 'image__large',
          'settings' => array(),
          'weight' => -1,
        ),
        'search_index' => array(
          'label' => 'hidden',
          'type' => 'image__large',
          'settings' => array(),
          'weight' => -1,
        ),
        'search_results' => array(
          'label' => 'hidden',
          'type' => 'image__large',
          'settings' => array(),
          'weight' => -1,
        ),
      ),
    );
    field_create_instance($instance);
  }

  // Create a vocabulary named "Album".
  if (!$vocabulary = taxonomy_vocabulary_machine_name_load('g2migrate_album')) {
    $description = st('Terms derived from Gallery2 imported albums.');
    $help = st('Enter a comma-separated list of words to describe your content.');
    $vocabulary = (object) array(
      'name' => 'Album',
      'description' => $description,
      'machine_name' => 'g2migrate_album',
      'hierarchy' => 1,
      'help' => $help,
    );
    taxonomy_vocabulary_save($vocabulary);
  }

  // Add a long text field to the Album vocabulary.
    _g2migrate_add_text_field('g2migrate_narrative', st('Narrative'), 'g2migrate_album', 'vocabulary');


  // Add a taxonomy reference for Album to the Photo node type.
  if (!field_info_field('g2migrate_album')) {
    $field = array(
      'field_name' => $vocabulary->machine_name,
      'type' => 'taxonomy_term_reference',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'vid' => $vocabulary->vid,
            'parent' => 0,
          ),
        ),
      ),
    );
    field_create_field($field);
  }

  if (!field_info_instance('node', 'g2migrate_album', 'g2migrate_photo')) {
    $instance = array(
      'field_name' => $vocabulary->machine_name,
      'entity_type' => 'node',
      'label' => $vocabulary->name,
      'bundle' => 'g2migrate_photo',
      'description' => $vocabulary->help,
      'widget' => array(
        'type' => 'taxonomy_autocomplete',
      ),
    );
    field_create_instance($instance);
  }

  // Create a tagging vocabulary named "Keywords", enabled for the
  // 'g2migrate_photo' content type.
  if (!$vocabulary = taxonomy_vocabulary_machine_name_load('g2migrate_keywords')) {
    $description = st('Free tagging for photos.');
    $help = st('Enter a comma-separated list of words to describe your content.');
    $vocabulary = (object) array(
      'name' => 'Keywords',
      'description' => $description,
      'machine_name' => 'g2migrate_keywords',
      'help' => $help,
    );
    taxonomy_vocabulary_save($vocabulary);
  }

  // Add a taxonomy reference for Keywords to the Photo node type.
  if (!field_info_field('g2migrate_keywords')) {
    $field = array(
      'field_name' => $vocabulary->machine_name,
      'type' => 'taxonomy_term_reference',
      // Set cardinality to unlimited for tagging.
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'vid' => $vocabulary->vid,
            'parent' => 0,
          ),
        ),
      ),
    );
    field_create_field($field);
  }

  if (!field_info_instance('node', 'g2migrate_keywords', 'g2migrate_photo')) {
    $instance = array(
      'field_name' => $vocabulary->machine_name,
      'entity_type' => 'node',
      'label' => $vocabulary->name,
      'bundle' => 'g2migrate_photo',
      'description' => $vocabulary->help,
      'widget' => array(
        'type' => 'taxonomy_autocomplete',
      ),
    );
    field_create_instance($instance);
  }

  // Add weight fields to the Photo node type.
  _g2migrate_add_weight_field('g2migrate_weight', st('Weight'), 'g2migrate_photo');

}

/**
 * Implements hook_uninstall.
 */
function g2migrate_uninstall() {
  // Remove persistent variables.
  $result = db_select('variable', 'v')
    ->fields('v', array('name'))
    ->condition('name', 'g2migrate_%', 'LIKE')
    ->execute();
  foreach ($result as $var) {
    variable_del($var->name);
  }
}

/**
 * Implements hook_schema.
 */
function g2migrate_schema() {
  $schema = array();

  // The base table from Gallery2.
  $schema['g2migrate_Entity'] = array(
    'description' => '',
    'fields' => array(
      'g_id' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_creationTimestamp' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_isLinkable' => array(
        'description' => 'size was 1',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_linkId' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'g_modificationTimestamp' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_serialNumber' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_entityType' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'g_onLoadHandlers' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('g_id'),
    'mysql_suffix' => ' ENGINE=InnoDB DEFAULT CHARSET=utf8 ',
  );
  $schema['g2migrate_Entity']['fields']['g_id']['type'] = 'serial';
  //   KEY `g2_Entity_76255` (`g_creationTimestamp`),
  //   KEY `g2_Entity_35978` (`g_isLinkable`),
  //   KEY `g2_Entity_44738` (`g_linkId`),
  //   KEY `g2_Entity_63025` (`g_modificationTimestamp`),
  //   KEY `g2_Entity_60702` (`g_serialNumber`)

  // The Gallery2 table that keeps track of parent/child relations.
  $schema['g2migrate_ChildEntity'] = array(
    'description' => '',
    'fields' => array(
      'g_id' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_parentId' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('g_id'),
    'mysql_suffix' => ' ENGINE=InnoDB DEFAULT CHARSET=utf8 ',
  );
  $schema['g2migrate_ChildEntity']['fields']['g_id']['type'] = 'serial';
  //   KEY `g2_ChildEntity_52718` (`g_parentId`)

  // The Gallery2 table that keeps track of filesystem paths.
  $schema['g2migrate_FileSystemEntity'] = array(
    'description' => '',
    'fields' => array(
      'g_id' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_pathComponent' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('g_id'),
    'mysql_suffix' => ' ENGINE=InnoDB DEFAULT CHARSET=utf8 ',
  );
  $schema['g2migrate_FileSystemEntity']['fields']['g_id']['type'] = 'serial';
  //   KEY `g2_FileSystemEntity_3406` (`g_pathComponent`)

  // The Gallery2 table that keeps track of names.
  $schema['g2migrate_Item'] = array(
    'description' => '',
    'fields' => array(
      'g_id' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_canContainChildren' => array(
        'description' => 'size was 1',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_description' => array(
        'description' => '',
        'type' => 'text',
        'size' => 'normal',
      ),
      'g_keywords' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'g_ownerId' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_renderer' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'g_summary' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'g_title' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'g_viewedSinceTimestamp' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_originationTimestamp' => array(
        'description' => 'size was 11',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('g_id'),
    'mysql_suffix' => ' ENGINE=InnoDB DEFAULT CHARSET=utf8 ',
  );
  $schema['g2migrate_Item']['fields']['g_id']['type'] = 'serial';
  //   KEY `g2_Item_99070` (`g_keywords`),
  //   KEY `g2_Item_21573` (`g_ownerId`),
  //   KEY `g2_Item_54147` (`g_summary`),
  //   KEY `g2_Item_90059` (`g_title`)

  // Custom table for albums. The important addition is a column for the full
  // path.
  $schema['g2migrate_Album'] = array(
    'description' => 'Store albums and paths to be imported from Gallery2.',
    'fields' => array(
      'g_id' => array(
        'description' => 'The primary key from the {g2migrate_Entity} table.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'path' => array(
        'description' => 'Filesystem path relative to the g2data directory.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'depth' => array(
        'description' => 'Depth in the directory tree: root album has depth 0.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('g_id'),
    'mysql_suffix' => ' ENGINE=InnoDB DEFAULT CHARSET=utf8 ',
  );

  $schema['g2migrate_ItemAttributesMap'] =
    _g2migrate_itemattributesmap_schema();

  return $schema;
}

/**
 * Define a table for the ItemAttributesMap.
 *
 * Define this table to make sure that hook_install() and hook_update_N() use
 * exactly the same structure.
 */
function _g2migrate_itemattributesmap_schema() {
  $g2migrate_ItemAttributesMap = array(
    'description' => 'Store item attributes to be imported from Gallery2.',
    'fields' => array(
      'g_itemId' => array(
        'description' => 'The primary key from the {g2migrate_Entity} table.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'g_viewCount' => array(
        'description' => 'How many times the item has been viewed.',
        'type' => 'int',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'g_orderWeight' => array(
        'description' => 'Weight order within an album.',
        'type' => 'int',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'g_parentSequence' => array(
        'description' => 'Sequence of g_id keys for parent albums.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('g_itemId'),
    'mysql_suffix' => ' ENGINE=InnoDB DEFAULT CHARSET=utf8 ',
  );

  return $g2migrate_ItemAttributesMap;
}

/**
 * Add a weight field and attach it to an entity.
 */
function _g2migrate_add_weight_field($name, $label, $entity) {
  if (!field_info_field($name)) {
    $field = array(
      'field_name' => $name,
      'type' => 'number_integer',
    );
    field_create_field($field);
  }
  if (!field_info_instance('node', $name, $entity)) {
    $instance = array(
      'field_name' => $name,
      'entity_type' => 'node',
      'bundle' => $entity,
      'label' => $label,
    );
    field_create_instance($instance);
  }
}

/**
 * Add a (long) text field and attach it to an entity.
 */
function _g2migrate_add_text_field($name, $label, $entity, $entity_type = 'node') {
  if (!field_info_field($name)) {
    $field = array(
      'field_name' => $name,
      'type' => 'text_long',
    );
    field_create_field($field);
  }
  if (!field_info_instance($entity_type, $name, $entity)) {
    $instance = array(
      'field_name' => $name,
      'entity_type' => $entity_type,
      'bundle' => $entity,
      'label' => $label,
    );
    field_create_instance($instance);
  }
}

/**
 * Add a table for the ItemAttributesMap.
 */
function g2migrate_update_7100() {
  $itemattributesmap_table = _g2migrate_itemattributesmap_schema();
  db_create_table('g2migrate_ItemAttributesMap', $itemattributesmap_table);
}

/**
 * Add weight fields to the g2migrate_photo content type.
 */
function g2migrate_update_7101() {
  _g2migrate_add_weight_field('g2migrate_weight', st('Weight'), 'g2migrate_photo');
}

/**
 * Add a long text field to the Album vocabulary.
 */
function g2migrate_update_7102() {
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('g2migrate_album')) {
    _g2migrate_add_text_field('g2migrate_narrative', st('Narrative'), 'g2migrate_album', 'taxonomy_term');
  }
}
