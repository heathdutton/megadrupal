<?php
/**
 * @file
 * Provides primary Drupal hook implementations.
 *
 * @author Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Implements hook_ctools_plugin_api().
 */
function context_session_ctools_plugin_api($module, $api) {
  if ($module == 'context' && $api == 'context') {
    return array('version' => '1');
  }
}

/**
 * Implements hook_context_plugins().
 */
function context_session_context_plugins() {
  $plugins = array();
  $plugins['context_condition_session'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'context_session'),
      'file' => 'context_condition_session.inc',
      'class' => 'context_condition_session',
      'parent' => 'context_condition',
    ),
  );
  return $plugins;
}

/**
 * Implements hook_context_registry().
 */
function context_session_context_registry() {
  return array(
    'conditions' => array(
      'session' => array(
        'title' => t('Session'),
        'plugin' => 'context_condition_session',
      ),
    ),
  );
}

/**
 * Implements hook_init().
 */
function context_session_init() {
  if (isset($_SESSION)) {
    $keys = variable_get('context_session', array());
    foreach ($keys as $key) {
      if (isset($_SESSION[$key])) {
        context_session_context_set($key, $_SESSION[$key]);
      }
    }

    if ($plugin = context_get_plugin('condition', 'session')) {
      $plugin->execute($_SESSION);
    }
  }
}

/**
 * Place relevant session values in context.
 */
function context_session_context_set($key, $value) {
  if (is_array($value)) {
    foreach ($value as $k => $v) {
      context_session_context_set($key . '.' . $k, $v);
    }
  }
  else {
    context_set('session', $key, $value);
  }
}

/**
 * Implements hook_menu().
 */
function context_session_menu() {
  $items['admin/structure/context/settings/context'] = array(
    'title' => 'Context',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/structure/context/settings/session'] = array(
    'title' => 'Session',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('context_session_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Settings form to specify relevant session keys.
 */
function context_session_settings_form($form, &$form_state) {
  $form['context_session'] = array(
    '#type' => 'textarea',
    '#title' => t('Keys'),
    '#description' => t('List of session variable keys separated by newline that are relevant and should be avialable in context. Variables are made available in the "session" namespace with the attribute being the key. If the session value is an array the attribute names will be generated as follows: key.subkey, key.subkey2, key.subkey2.subsubkey.'),
    '#default_value' => implode("\n", variable_get('context_session', array())),
  );
  return system_settings_form($form);
}

/**
 * Convert the keys text to an array.
 */
function context_session_settings_form_validate($form, &$form_state) {
  $keys = &$form_state['values']['context_session'];
  $keys = explode("\r\n", trim($keys));
  $keys = drupal_map_assoc($keys);
}
