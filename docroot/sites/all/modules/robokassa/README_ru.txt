------
Обзор:
------

Полнофункциональный самостоятельный модуль для приема оплаты через ROBOKASSA.
Поддерживает как прием оплаты через встроенную форму, так и с использованием внутреннего 
API и хуков.

Ключевые функции:
    * быстрая установка
    * встроенная форма для приема оплаты в ручном режиме
    * поддержка API и hooks для взаимодействия с другими модулями
    * страница-пример для быстрой настройки модуля и ROBOKASSA
    * все платежи хранятся в отдельной таблице
    * просмотр созданных платежей в админ. интерфейсе с возможностью применения 
      к ним действий зачисления и удаления
    * возможность скрывать server_url
    * темизируемые страницы "Успешная оплата" и "Оплата не совершена"
    * поддержка дополнительных полей формы (через API)
    * поддержка MySQL и PostgreSQL
    * защита от множественного зачисления одного и того же платежа
    * интернационализация (по умолчанию в модуле реализованы английский, русский и украинский
      языки)


--------------
Использование:
--------------
Информация по установке, требованиям и настройке находится в файле INSTALL_ru.txt
в директории модуля.


----
API:
----
Модуль имеет встроенное API, которое может быть использовано для совершения таких действий,
как создание, зачисление и удаление платежей.

  -----------------
  Создание платежа:
  -----------------

  $result=robokassa_api('insert', $params);

  Передаваемый массив:

  $params=array(
     'uid' => $user->uid,		 // владелец платежа, как правило пользователь, который его создал
     'created' => time(),		 // не обязательно, время создания платежа
     'amount' => 12.95,			 // сумма
     'currency' => 'USD',		 // ID валюты
     'memo' => 'Payment to website',
     'payee_account' => '11324',	 // не обязательно
  );

  Возвращаемый массив:

  $result['pid']  // payment_id
  $result['uid']
  $result['created']
  $result['amount']
  $result['currency']
  $result['memo']
  $result['payee_account']


  ------------------------------
  Загрузка информации о платеже:
  ------------------------------

  $result=robokassa_api('load', $pid);

  Передаваемый параметр: $pid - ID платежа.

  Возвращаемый массив:

  $result['pid']  // ID платежа
  $result['uid']
  $result['created']
  $result['enrolled'] // время зачисления (0 если платеж еще не зачислен)
  $result['amount']
  $result['currency']
  $result['memo']
  $result['payee_account']
  $result['payer_account'] // номер телефона плательщика, пустой если платеж еще не зачислен
  $result['custom_field_you_passed_via_api'] // дополнительные поля также возвращаются


  -------------------
  Зачисление платежа:
  -------------------
  
  $result=robokassa_api('enroll', $params);

  Передаваемый массив:

  $params=array(
     'pid' => $payment_id,			// обязательный параметр
     'payer_account' => '+380501111111',	 // не обязательно
     'time' => time(),				// не обязательно
  );

  Возвращаемое значение: true - в случае успеха, false - в случае неудачи.


  -----------------
  Удаление платежа:
  -----------------
  
  $result=robokassa_api('delete', $pid);

  Passed parameters: $pid - ID платежа.

  Возвращаемое значение: true - в случае успеха, false - в случае неудачи.

-----
Хуки:
-----
Модуль реализует хуки, которые "выстреливают" в следующих случаях:

function hook_robokassa($op, $payment, $params=''){
   
   switch($op){
   case 'insert': 
      
      // срабатывает ПЕРЕД созданием платежа
      // переменная $payment здесь - это массив с информацией о платеже
      //$payment =  array('uid' => $args['uid'],
      //               'created' => $args['created'],
      //               'amount' => $args['amount'],
      //               'memo' => $args['memo'])

      // хук ОБЯЗАН возвращать переменную массив $payment с возможными изменениями
      return array(
		'uid' => $payment['uid'],
		'created' => $payment['created'],
		'amount' => $payment['amount'],
		'currency' => $payment['currency'],
		'memo' => $payment['memo'].' можем добавить здесь свой текст, к примеру',
		'payee_account' => $payment['payee_account'],
      );

   break;
   case 'inserted': 
      
    // срабатывает сразу ПОСЛЕ создания платежа
    // переменная $payment здесь - это массив с информацией о платеже
    // $payment = array(
    //    'pid' => $pid,
    //    'uid' => $args['uid'],
    //    'created' => $args['created'],
    //    'amount' => $args['amount'],
    //    'memo' => $args['memo'],
    //    'params' => array(...)
    //  );


   break;
   case 'enrolled': 
      
    // срабатывает после зачисления платежа
    // переменная $payment здесь - это ID платежа
    // переменная $params - это массив с информацией о платеже
    // $params = array(
    //    'pid' => $pid,
    //    'uid' => $args['uid'],
    //    'created' => $args['created'],
    //    'amount' => $args['amount'],
    //    'memo' => $args['memo'],
    //    'params' => array(...)
    //  );

   break;
   case 'deleted': 
      
      // срабатывает после удаление платежа
      // переменная $payment здесь - это ID платежа
	   
   break;
   }

}

Также, с версии 1.3 возможно вставить форму для оплаты в любое удобное место с помощью вызова:
  print render(drupal_get_form('robokassa_merchantform',$payment,$silent)

  где $payment - ID или объект платежа
      $silent - (по умолчанию "false") - скрывать ли информацию о платеже (номер,сумма и описание)


---------
Поддержка
---------
Если у вас возникли проблемы с этим модулем или у вас есть вопрос по нему,
создайте запрос по адресу:
http://drupal.org/project/issues/robokassa
Это наилучший способ связаться напрямую с автором этого модуля.
И не забывайте при этом слать дотации :)
