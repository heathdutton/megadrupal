<?php

/**
 * @file
 * Suppress Form Errors Module File.
 */

/**
 * Implements hook_menu().
 */
function suppress_form_errors_menu() {
  $items['admin/config/user-interface/suppress-form-errors'] = array(
    'title' => 'Suppress Form Errors Settings',
    'description' => 'Manage the forms on which the errors are to be suppressed.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('suppress_form_errors_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'suppress_form_errors.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_form_alter().
 */
function suppress_form_errors_form_alter(&$form, $form_state, $form_id) {
  //Yeah, drupal_match_path is meant for paths,. but it works good for validating
  //simple wildcard matches with * and also takes care of carriage returns
  if (drupal_match_path($form_id, variable_get('suppress_form_errors_formids', ''))) {
    $form['#validate'][] = "suppress_form_module_dummy_validate";
  }
}

/**
 * The dummy validation handler that suppresses existing error messages.
 */
function suppress_form_module_dummy_validate($form, &$form_state) {
  //Not hard to unset the error messages,. just do a drupal_get_messages().
  $drupal_errors = drupal_get_messages('error');
}
