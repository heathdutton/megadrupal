<?php

class MongoEntityTestEntity extends MongoEntity {

}

class MongoEntityIndexTestEntity extends MongoEntity {

}

function mongo_entity_test_forms($form_id, $args) {

  $items = module_invoke('mongo_entity_test', 'entity_info');
  $forms = array();
  foreach ($items as $entity_type => $item) {
    $forms["{$entity_type}_form"] = array(
      'callback' => 'mongo_entity_test_entity_form',
    );
  }
  return $forms;

}

function mongo_entity_test_entity_form($form, $form_state, $entity = NULL) {

  global $user;
  $entity->uid = $user->uid;

  field_attach_form($entity->entityType(), $entity, $form, $form_state);
  $form['#entity'] = $entity;

  $form['actions'] = array(
    '#type' => 'actions',
  );
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  $form['#validate'] = array('mongo_entity_test_entity_form_validate');
  $form['#submit'] = array('mongo_entity_test_entity_form_submit');
  return $form;

}

function mongo_entity_test_entity_form_validate(&$form, &$form_state) {

  $entity = $form['#entity'];
  field_attach_form_validate($entity->entityType(), $entity, $form, $form_state);

}

function mongo_entity_test_entity_form_submit(&$form, &$form_state) {

  $entity = $form['#entity'];

  entity_form_submit_build_entity($entity->entityType(), $entity, $form, $form_state);
  entity_save($entity->entityType(), $entity);

}

function mongo_entity_test_entity_info () {

  $items = array();


  // A regular entity
  $items['met_entity'] = array(
    'label' => 'Mongo Entity Test Entity',
    'controller class' => 'MongoEntityController',
    'entity class' => 'MongoEntityTestEntity',
    'access callback' => 'mongo_entity_test_entity_access',
    'fieldable' => TRUE,
    'bundles' => array(
      'met_entity' => array(
        'label' => 'Mongo Entity Test',
        'admin' => array(
          'access arguments' => array('administer site configuration'),
          'path' => 'admin/mongo-entity-test-entity/manage',
        ),
      ),
    ),
    'entity keys' => array(
      'id' => '_id',
      'name' => '_id',
      'label' => '_id',
    ),
    'admin ui' => array(
      'controller class' => 'EntityDefaultUIController',
      'path' => 'admin/mongo-entity-test-entity',
    ),
  );

  // An embedded entity
  $items['met_embedded_entity'] = array(
    'label' => 'Mongo Entity Test Embedded Entity',
    'controller class' => 'MongoEmbeddedEntityController',
    'entity class' => 'MongoEntity',
    'access callback' => 'mongo_entity_test_entity_access',
    'fieldable' => TRUE,
    'bundles' => array(
      'met_embedded_entity' => array(
        'label' => 'Mongo Embedded Entity Test',
        'admin' => array(
          'access arguments' => array('administer site configuration'),
          'path' => 'admin/mongo-entity-test-embedded-entity/manage',
        ),
      ),
    ),
    'entity keys' => array(
      'id' => '_id',
      'name' => '_id',
      'label' => '_id',
    ),
    'admin ui' => array(
      'controller class' => 'EntityDefaultUIController',
      'path' => 'admin/mongo-entity-test-entity-embedded',
    ),
  );

  $items['met_bundle_test'] = array(
    'label' => 'Bundle Test Entity',
    'controller class' => 'MongoEntityController',
    'entity class' => 'MongoEntity',
    'access callback' => 'mongo_entity_test_entity_access',
    'bundleable' => TRUE,
    'bundles' => array(
      'met_bundle_test_1' => array(
        'label' => 'Bundle 1',
      ),
      'met_bundle_test_2' => array(
        'label' => 'Bundle 2',
      ),
    ),
  );

  $items['met_embedded_bundle_test'] = array(
    'label' => 'Embedded Bundle Test Entity',
    'controller class' => 'MongoEmbeddedEntityController',
    'entity class' => 'MongoEntity',
    'access callback' => 'mongo_entity_test_entity_access',
    'bundleable' => TRUE,
    'bundles' => array(
      'met_embedded_bundle_test_1' => array(
        'label' => 'Embedded Bundle 1',
      ),
      'met_embedded_bundle_test_2' => array(
        'label' => 'Embedded Bundle 2',
      ),
    ),
  );

  $items['met_index_test'] = array(
    'label' => 'Index Test Entity',
    'controller class' => 'MongoEntityController',
    'entity class' => 'MongoEntityIndexTestEntity',
    'access callback' => 'mongo_entity_test_entity_access',
    'indexes' => array(
      array('var1' => 1),
      array(array('var1' => 1, 'var2' => 1), array('unique' => TRUE)),
    ),
  );

  return $items;

}

function mongo_entity_test_entity_property_info() {

  $info = array();
  $info['met_entity']['properties'] = array(
    'apple' => array(
      'type' => 'met_embedded_entity',
      'description' => t('An embedded entity.'),
    ),
    'bananas' => array(
      'type' => 'list<met_embedded_entity>',
      'description' => t('An array of embedded entities.'),
    ),
    'value' => array(
      'type' => 'integer',
    ),
    // For testing dates and logical operators
    'date' => array(
      'type' => 'date',
    ),
  );

  $info['met_index_test']['properties'] = array(
    'var1' => array(
      'type' => 'integer',
    ),
    'var2' => array(
      'type' => 'integer',
    ),
  );

  return $info;

}

function mongo_entity_test_entity_access($op, $entity, $account, $entity_type) {
  return TRUE;
}
