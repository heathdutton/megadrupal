<?php
/**
 * @file
 * Code for the taxonomy_menu_alter module.
 */

/**
 * Implements hook_form_alter().
 */
function taxonomy_menu_alter_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'taxonomy_form_vocabulary') {
    $form['taxonomy_menu']['subcategory_status'] = array(
      '#type' => 'checkbox',
      '#title' => t('Disable subcategory menu items'),
      '#default_value' => variable_get('taxonomy_menu_alter_subcategory_status_' . $form['vid']['#value'], 0),
    );

    $form['#submit'][] = 'taxonomy_menu_alter_vocab_submit';
  }
}

/**
 * Submit handler for the extra settings added to the taxonomy vocab form.
 */
function taxonomy_menu_alter_vocab_submit($form, &$form_state) {
  $vid = $form_state['values']['vid'];
  $subcategory_menu = $form_state['values']['taxonomy_menu']['subcategory_status'];
  variable_set('taxonomy_menu_alter_subcategory_status_' . $vid, $subcategory_menu);

  if (variable_get(_taxonomy_menu_build_variable('vocab_menu', $vid))) {
    $message = _taxonomy_menu_update_link_items($vid);
  }

  // Do a full menu rebuild.
  variable_set('menu_rebuild_needed', TRUE);

  // Only send a message if one has been created.
  if (isset($message) && $message) {
    // $message is sanitized coming out of its source function,
    // no need to reclean it here.
    drupal_set_message($message, 'status');
  }
}

/**
 * Implements hook_taxonomy_menu_update().
 */
function taxonomy_menu_alter_taxonomy_menu_update(&$item) {
  if (variable_get('taxonomy_menu_alter_subcategory_status_' . $item['vid'], 0) && taxonomy_get_parents($item['tid'])) {
    $item['remove'] = 1;
  }
}
