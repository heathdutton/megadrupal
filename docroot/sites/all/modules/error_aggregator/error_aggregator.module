<?php

/**
 * @file
 * Main file of error_aggregator.
 */

/**
 * Implements hook_cron().
 *
 * Retrieves all the information from the dblog module
 */
function error_aggregator_cron() {
  error_aggregator_check_errors();
}

/**
 * Implements hook_menu().
 */
function error_aggregator_menu() {
  $items['admin/reports/error-aggregator'] = array(
    'title' => 'Errors on the portal',
    'description' => 'Errors reported on the portal.',
    'page callback' => 'error_aggregator_show',
    'access arguments' => array('access site reports'),
  );

  $items['admin/reports/error-aggregator/clear-all'] = array(
    'title' => 'Clear error messages',
    'description' => 'Removes all reported error messages',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('error_aggregator_clear_all'),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access site reports')
  );
  return $items;
}

/**
 * Check errors on the watchdog table and store then into error registry.
 */
function error_aggregator_check_errors() {
  $error_list = variable_get('error_aggregator_error_list', array());
  $query = db_select('watchdog', 'w')
      ->fields('w', array('severity', 'type', 'message', 'variables'))
      ->condition('severity', '5', '<=')
      ->condition('type', array('php', 'cron'), 'IN');
  $result = $query->execute();
  foreach ($result as $message) {
    if (!in_array($message, $error_list)) {
      $error_list[] = $message;
    }
  }
  variable_set('error_aggregator_error_list', $error_list);
}

/**
 * Display error list.
 */
function error_aggregator_show() {
  $error_list = variable_get('error_aggregator_error_list', array());
  return theme("error_aggregator_page", array('error_list' => $error_list));
}

/**
 * Prompt a confirmation form to confirm the error messages removal.
 */
function error_aggregator_clear_all($form, &$form_state) {
  $form = array();
  $form = confirm_form(
    $form,
    t('Are you sure you want to delete all the error messages?'),
    'admin/reports/error-aggregator',
    t('You will remove all the error messages. This action cannot be undone.'),
    t('Delete'),
    t('Cancel')
  );

  return $form;
}

/**
 * Implements hook_FORM_ID_submit().
 * Remove all the error messages
 */
function error_aggregator_clear_all_submit($form, &$form_state) {
  variable_del('error_aggregator_error_list');
  drupal_set_message(t('All the error messages were removed successfully.'));
  $form_state['redirect'] = 'admin/reports/error-aggregator';
}

/**
 * Implements hook_theme().
 */
function error_aggregator_theme() {
  return array(
    'error_aggregator_page' => array(
      'template' => 'error_aggregator_report_page',
      'variables' => array('error_list' => array()),
      'path' => drupal_get_path('module', 'error_aggregator') . '/tpl',
    ),
  );
}
