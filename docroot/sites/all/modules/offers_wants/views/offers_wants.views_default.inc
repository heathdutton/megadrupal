<?php

/**
 * Implementation of hook views_default_views().
 */
function offers_wants_views_default_views() {
  $view = mc_directory_user_view();
  $views[$view->name] = $view;

  $view = ow_directory_view(0);
  $views[$view->name] = $view;
  if (variable_get('offers_wants_proposition_wants', TRUE)) {
    $view = ow_directory_view(1);
    $views[$view->name] = $view;
  }
  return $views;
}


/*
 * implements hook_views_default_views_alter
 * add and remove bits of views.
 * Assumes complete symettry between offers and wants
 */
function offers_wants_views_default_views_alter(&$views) {
  //if there's only one prop type, then remove all prop fields from all views
  if (count(_ow_type_tids()) < 2) {
    _ow_views_delete_field($views, 'offers_wants_types');
  }
}

function ow_directory_view($want) {
  $view = new view;
  $view->name = $want ? 'ow_wants' : 'ow_offers';
  $view->description = $want ? t('Directory of wants') : t('Directory of offers');
  $view->description .= ' ('. t('Default view is autogenerated') . ')';
  $view->tag = 'offers_wants';
  $view->base_table = 'node';
  $view->human_name = $want ? 'Auto wants view' : 'Auto offers view';
  $view->core = 0;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Defaults */
  $handler = $view->new_display('default', 'Defaults', 'default');
  $handler->display->display_options['title'] = $want ? t('Wants') : t('Offers');
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['use_more_text'] = 'more';
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'access content';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['options']['disable_sql_rewrite'] = TRUE;
  $handler->display->display_options['query']['options']['distinct'] = TRUE;
  $handler->display->display_options['query']['options']['query_comment'] = FALSE;
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '25';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['pager']['options']['id'] = '0';
  $handler->display->display_options['style_plugin'] = 'table';
  $handler->display->display_options['style_options']['group_rendered'] = 1;
  $handler->display->display_options['style_options']['columns'] = array(
    'title' => 'title',
    'name' => 'name',
    'offers_wants_types' => 'offers_wants_types',
  );
  $handler->display->display_options['style_options']['default'] = '-1';
  $handler->display->display_options['style_options']['info'] = array(
    'title' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'name' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'offers_wants_types' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
  );
  $handler->display->display_options['style_options']['override'] = 1;
  $handler->display->display_options['style_options']['sticky'] = 0;
  $handler->display->display_options['style_options']['empty_table'] = 0;
  /* No results behavior: Global: Text area */
  $handler->display->display_options['empty']['text']['id'] = 'area';
  $handler->display->display_options['empty']['text']['table'] = 'views';
  $handler->display->display_options['empty']['text']['field'] = 'area';
  $handler->display->display_options['empty']['text']['empty'] = FALSE;
  $handler->display->display_options['empty']['text']['content'] = $want ? 'No wants have been entered.' : 'No offers have been entered.';
  $handler->display->display_options['empty']['text']['format'] = 'plain_text';
  /* Relationship: Content: Author */
  $handler->display->display_options['relationships']['uid']['id'] = 'uid';
  $handler->display->display_options['relationships']['uid']['table'] = 'node';
  $handler->display->display_options['relationships']['uid']['field'] = 'uid';
  $handler->display->display_options['relationships']['uid']['required'] = 0;
  /* Relationship: Content: Proposition categories (offers_wants_categories) */
  $handler->display->display_options['relationships']['offers_wants_categories_tid']['id'] = 'offers_wants_categories_tid';
  $handler->display->display_options['relationships']['offers_wants_categories_tid']['table'] = 'field_data_offers_wants_categories';
  $handler->display->display_options['relationships']['offers_wants_categories_tid']['field'] = 'offers_wants_categories_tid';
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = 'Description';
  /* Field: User: Nom */
  $handler->display->display_options['fields']['name']['id'] = 'name';
  $handler->display->display_options['fields']['name']['table'] = 'users';
  $handler->display->display_options['fields']['name']['field'] = 'name';
  $handler->display->display_options['fields']['name']['relationship'] = 'uid';
  $handler->display->display_options['fields']['name']['label'] = 'Member';
  /* Field: Content: Offer/want categories */
  $handler->display->display_options['fields']['offers_wants_categories']['id'] = 'offers_wants_categories';
  $handler->display->display_options['fields']['offers_wants_categories']['table'] = 'field_data_offers_wants_categories';
  $handler->display->display_options['fields']['offers_wants_categories']['field'] = 'offers_wants_categories';
  $handler->display->display_options['fields']['offers_wants_categories']['label'] = 'Category(s)';
  $handler->display->display_options['fields']['offers_wants_categories']['type'] = 'taxonomy_term_reference_plain';
  /* Field: Content: Offer/want types */
  $handler->display->display_options['fields']['offers_wants_types']['id'] = 'offers_wants_types';
  $handler->display->display_options['fields']['offers_wants_types']['table'] = 'field_data_offers_wants_types';
  $handler->display->display_options['fields']['offers_wants_types']['field'] = 'offers_wants_types';
  $handler->display->display_options['fields']['offers_wants_types']['label'] = 'Types';
  $handler->display->display_options['fields']['offers_wants_types']['hide_alter_empty'] = FALSE;
  $handler->display->display_options['fields']['offers_wants_types']['type'] = 'taxonomy_term_reference_plain';
  $handler->display->display_options['fields']['offers_wants_types']['delta_offset'] = '0';

  /* Sort criterion: Content: Updated date */
  $handler->display->display_options['sorts']['changed']['id'] = 'changed';
  $handler->display->display_options['sorts']['changed']['table'] = 'node';
  $handler->display->display_options['sorts']['changed']['field'] = 'changed';
  $handler->display->display_options['sorts']['changed']['order'] = 'DESC';
  $handler->display->display_options['sorts']['changed']['granularity'] = 'hour';
  
  /* Contextual filter: Content: Has taxonomy term ID (with depth) */
  $handler->display->display_options['arguments']['term_node_tid_depth']['id'] = 'term_node_tid_depth';
  $handler->display->display_options['arguments']['term_node_tid_depth']['table'] = 'node';
  $handler->display->display_options['arguments']['term_node_tid_depth']['field'] = 'term_node_tid_depth';
  $handler->display->display_options['arguments']['term_node_tid_depth']['title_enable'] = TRUE;
  $handler->display->display_options['arguments']['term_node_tid_depth']['title'] = 'Offers %1';
  $handler->display->display_options['arguments']['term_node_tid_depth']['default_argument_type'] = 'fixed';
  $handler->display->display_options['arguments']['term_node_tid_depth']['summary']['number_of_records'] = '0';
  $handler->display->display_options['arguments']['term_node_tid_depth']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['term_node_tid_depth']['summary_options']['items_per_page'] = '25';
  $handler->display->display_options['arguments']['term_node_tid_depth']['depth'] = '1';
  /* Filtre contextuel: Terme de taxonomie : Identifiant (ID) du terme */
  $handler->display->display_options['arguments']['tid']['id'] = 'tid';
  $handler->display->display_options['arguments']['tid']['table'] = 'taxonomy_term_data';
  $handler->display->display_options['arguments']['tid']['field'] = 'tid';
  $handler->display->display_options['arguments']['tid']['relationship'] = 'offers_wants_types_tid';
  $handler->display->display_options['arguments']['tid']['exception']['title'] = 'Tout';
  $handler->display->display_options['arguments']['tid']['default_argument_type'] = 'fixed';
  $handler->display->display_options['arguments']['tid']['summary']['number_of_records'] = '0';
  $handler->display->display_options['arguments']['tid']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['tid']['summary_options']['items_per_page'] = '25';
  $handler->display->display_options['arguments']['tid']['specify_validation'] = TRUE;
  $handler->display->display_options['arguments']['tid']['validate']['type'] = 'taxonomy_term';
  $handler->display->display_options['arguments']['tid']['validate_options']['vocabularies'] = array(
    'offers_wants_types' => 'offers_wants_types',
  );

  /* Contextual filter: Content: Has taxonomy term ID */
  $handler->display->display_options['arguments']['tid']['id'] = 'tid';
  $handler->display->display_options['arguments']['tid']['table'] = 'taxonomy_index';
  $handler->display->display_options['arguments']['tid']['field'] = 'tid';
  $handler->display->display_options['arguments']['tid']['default_argument_type'] = 'fixed';
  $handler->display->display_options['arguments']['tid']['summary']['number_of_records'] = '0';
  $handler->display->display_options['arguments']['tid']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['tid']['summary_options']['items_per_page'] = '25';
  $handler->display->display_options['arguments']['tid']['validate']['type'] = 'taxonomy_term';
  $handler->display->display_options['arguments']['tid']['validate_options']['vocabularies'] = array(
    'offers_wants_types' => 'offers_wants_types',
  );
  $handler->display->display_options['arguments']['tid']['validate']['fail'] = 'ignore';

  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'proposition' => 'proposition',
  );
  $handler->display->display_options['filters']['type']['expose']['operator'] = FALSE;
  /* Filter criterion: Content : Published or admin */
  $handler->display->display_options['filters']['status_extra']['id'] = 'status_extra';
  $handler->display->display_options['filters']['status_extra']['table'] = 'node';
  $handler->display->display_options['filters']['status_extra']['field'] = 'status_extra';
  /* Filter criterion: User: Active */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'users';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['relationship'] = 'uid';
  $handler->display->display_options['filters']['status']['value'] = '1';
  $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
  /* Filter criterion: Propositions: Is a want */
  $handler->display->display_options['filters']['want']['id'] = 'want';
  $handler->display->display_options['filters']['want']['table'] = 'offers_wants';
  $handler->display->display_options['filters']['want']['field'] = 'want';
  $handler->display->display_options['filters']['want']['value'] = $want;

  /* Display: All */
  $handler = $view->new_display('page', 'All', 'all');
  $handler->display->display_options['defaults']['title'] = FALSE;
  $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;
  $handler->display->display_options['title'] = $want ? t('Wants') : t('Offers');
  $handler->display->display_options['path'] = $want ? 'wants/all' : 'offers/all';
  $handler->display->display_options['menu']['type'] = 'default tab';
  $handler->display->display_options['menu']['title'] = 'All';
  $handler->display->display_options['menu']['weight'] = '0';
  $handler->display->display_options['tab_options']['type'] = 'normal';
  $handler->display->display_options['tab_options']['title'] = $want ? t('Wants') : t('Offers');
  $handler->display->display_options['tab_options']['weight'] = 0;

  if ($want) {
    /* Display: Latest wants */
    $handler = $view->new_display('block', t('Latest wants'), 'latest');
    $handler->display->display_options['defaults']['title'] = FALSE;
    $handler->display->display_options['title'] = 'Upcoming needs';
    $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;
    $handler->display->display_options['defaults']['use_more'] = FALSE;
    $handler->display->display_options['use_more'] = TRUE;
    $handler->display->display_options['defaults']['pager'] = FALSE;
    $handler->display->display_options['pager']['type'] = 'some';
    $handler->display->display_options['pager']['options']['items_per_page'] = '5';
    $handler->display->display_options['pager']['options']['offset'] = '0';
    $handler->display->display_options['defaults']['style_plugin'] = FALSE;
    $handler->display->display_options['style_plugin'] = 'list';
    $handler->display->display_options['defaults']['style_options'] = FALSE;
    $handler->display->display_options['defaults']['row_plugin'] = FALSE;
    $handler->display->display_options['row_plugin'] = 'fields';
    $handler->display->display_options['row_options']['inline'] = array(
      'title' => 'title',
      'name' => 'name',
      'end' => 'end'
    );
    $handler->display->display_options['defaults']['row_options'] = FALSE;
    $handler->display->display_options['defaults']['fields'] = FALSE;
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['label'] = '';
    $handler->display->display_options['fields']['title']['exclude'] = TRUE;
    $handler->display->display_options['fields']['title']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['title']['hide_alter_empty'] = FALSE;
    /* Field: User: Name */
    $handler->display->display_options['fields']['name']['id'] = 'name';
    $handler->display->display_options['fields']['name']['table'] = 'users';
    $handler->display->display_options['fields']['name']['field'] = 'name';
    $handler->display->display_options['fields']['name']['relationship'] = 'uid';
    $handler->display->display_options['fields']['name']['label'] = '';
    $handler->display->display_options['fields']['name']['exclude'] = TRUE;
    $handler->display->display_options['fields']['name']['alter']['alter_text'] = TRUE;
    $handler->display->display_options['fields']['name']['alter']['text'] = '- [name]';
    $handler->display->display_options['fields']['name']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['name']['hide_alter_empty'] = FALSE;
    /* Field: Propositions: Expiry date */
    $handler->display->display_options['fields']['end']['id'] = 'end';
    $handler->display->display_options['fields']['end']['table'] = 'offers_wants';
    $handler->display->display_options['fields']['end']['field'] = 'end';
    $handler->display->display_options['fields']['end']['label'] = '';
    $handler->display->display_options['fields']['end']['alter']['alter_text'] = TRUE;
    $handler->display->display_options['fields']['end']['alter']['text'] = '[name] needs [title] before [end]';
    $handler->display->display_options['fields']['end']['element_label_colon'] = FALSE;
    $handler->display->display_options['fields']['end']['date_format'] = 'raw time hence';
    $handler->display->display_options['defaults']['filter_groups'] = FALSE;
    $handler->display->display_options['defaults']['filters'] = FALSE;
    /* Filter criterion: Content: Type */
    $handler->display->display_options['filters']['type']['id'] = 'type';
    $handler->display->display_options['filters']['type']['table'] = 'node';
    $handler->display->display_options['filters']['type']['field'] = 'type';
    $handler->display->display_options['filters']['type']['value'] = array('proposition' => 'proposition');
    /* Critère de filtrage: Annonces : Date d'expiration */
    $handler->display->display_options['filters']['end']['id'] = 'end';
    $handler->display->display_options['filters']['end']['table'] = 'offers_wants';
    $handler->display->display_options['filters']['end']['field'] = 'end';
    $handler->display->display_options['filters']['end']['operator'] = '>';
    $handler->display->display_options['filters']['end']['value']['value'] = '-1 day';
    $handler->display->display_options['filters']['end']['value']['type'] = 'offset';
    /* Filter criterion: Propositions: Is a want */
    $handler->display->display_options['filters']['want']['id'] = 'want';
    $handler->display->display_options['filters']['want']['table'] = 'offers_wants';
    $handler->display->display_options['filters']['want']['field'] = 'want';
    $handler->display->display_options['filters']['want']['value'] = '1';
    /* Filter criterion: User: Active */
    $handler->display->display_options['filters']['status']['id'] = 'status';
    $handler->display->display_options['filters']['status']['table'] = 'users';
    $handler->display->display_options['filters']['status']['field'] = 'status';
    $handler->display->display_options['filters']['status']['relationship'] = 'uid';
    $handler->display->display_options['filters']['status']['value'] = '1';
    /* Filter criterion: Content: Published */
    $handler->display->display_options['filters']['status_1']['id'] = 'status_1';
    $handler->display->display_options['filters']['status_1']['table'] = 'node';
    $handler->display->display_options['filters']['status_1']['field'] = 'status';
    $handler->display->display_options['filters']['status_1']['value'] = '1';
    $handler->display->display_options['defaults']['sorts'] = FALSE;
    /* Sort criterion: Content: Created date */
    $handler->display->display_options['sorts']['created']['id'] = 'changed';
    $handler->display->display_options['sorts']['created']['table'] = 'node';
    $handler->display->display_options['sorts']['created']['field'] = 'changed';
    $handler->display->display_options['sorts']['created']['order'] = 'ASC';
    $handler->display->display_options['sorts']['created']['granularity'] = 'hour';
  }

  /* Display: latest offers/wants */
  $handler = $view->new_display('block', $want ? t('Latest wants') : t('Latest offers'), 'latest');
  $handler->display->display_options['defaults']['title'] = FALSE;
  $handler->display->display_options['title'] = $want ? t('Latest wants') : t('Latest offers');
  $handler->display->display_options['style_plugin'] = 'list';
  $handler->display->display_options['defaults']['style_options'] = FALSE;
  $handler->display->display_options['defaults']['row_plugin'] = FALSE;
  $handler->display->display_options['defaults']['style_plugin'] = FALSE;
  $handler->display->display_options['defaults']['pager'] = FALSE;
  $handler->display->display_options['defaults']['use_more'] = FALSE;
  $handler->display->display_options['use_more'] = TRUE;
  $handler->display->display_options['pager']['type'] = 'some';
  $handler->display->display_options['pager']['options']['items_per_page'] = '5';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['defaults']['row_options'] = FALSE;
  $handler->display->display_options['defaults']['fields'] = FALSE;
  $handler->display->display_options['row_plugin'] = 'fields';
  $handler->display->display_options['row_options']['inline'] = array(
    'title' => 'title',
    'name' => 'name',
  );
  $handler->display->display_options['row_options']['hide_empty'] = 0;
  $handler->display->display_options['row_options']['default_field_elements'] = 1;
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = '';
  $handler->display->display_options['fields']['title']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['title']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['title']['hide_empty'] = 0;
  $handler->display->display_options['fields']['title']['empty_zero'] = 0;
  $handler->display->display_options['fields']['title']['hide_alter_empty'] = 0;
  $handler->display->display_options['fields']['title']['link_to_node'] = 1;
  /* Field: User: Name */
  $handler->display->display_options['fields']['name']['id'] = 'name';
  $handler->display->display_options['fields']['name']['table'] = 'users';
  $handler->display->display_options['fields']['name']['field'] = 'name';
  $handler->display->display_options['fields']['name']['relationship'] = 'uid';
  $handler->display->display_options['fields']['name']['label'] = '';
  $handler->display->display_options['fields']['name']['alter']['alter_text'] = 1;
  $handler->display->display_options['fields']['name']['alter']['text'] = '- [name]';
  $handler->display->display_options['fields']['name']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['name']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['name']['hide_empty'] = 0;
  $handler->display->display_options['fields']['name']['empty_zero'] = 0;
  $handler->display->display_options['fields']['name']['hide_alter_empty'] = 0;
  $handler->display->display_options['fields']['name']['link_to_user'] = 1;
  $handler->display->display_options['fields']['name']['overwrite_anonymous'] = 0;
  $handler->display->display_options['block_description'] = $want ? t('Latest wants') : t('Latest offers');

  /* Display: Flux */
  $handler = $view->new_display('feed', 'RSS', 'feed_1');
  $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;
  $handler->display->display_options['defaults']['access'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'post proposition';
  $handler->display->display_options['pager']['type'] = 'some';
  $handler->display->display_options['style_plugin'] = 'rss';
  $handler->display->display_options['row_plugin'] = 'node_rss';
  $handler->display->display_options['path'] = $want ? 'wants.xml' : 'offers.xml';
  $handler->display->display_options['displays'] = array(
    'all' => 'all',
  );

  /* Display: CSV Data export */
  $handler = $view->new_display('views_data_export', t('Export to CSV'), 'views_data_export_1');
  $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;
  $handler->display->display_options['defaults']['access'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'post proposition';
  $handler->display->display_options['pager']['type'] = 'none';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['style_plugin'] = 'views_data_export_csv';
  $handler->display->display_options['style_options']['provide_file'] = 1;
  $handler->display->display_options['style_options']['filename'] = $want ? 'wants.csv' : 'offers.csv';
  $handler->display->display_options['style_options']['parent_sort'] = 0;
  $handler->display->display_options['style_options']['quote'] = 1;
  $handler->display->display_options['style_options']['trim'] = 0;
  $handler->display->display_options['style_options']['replace_newlines'] = 1;
  $handler->display->display_options['style_options']['newline_replacement'] = '\\n';
  $handler->display->display_options['style_options']['header'] = 1;
  $handler->display->display_options['use_batch'] = 'batch';

  $handler->display->display_options['path'] = $want ? 'wants.csv' : 'offers.csv';
  $handler->display->display_options['displays'] = array(
    'all' => 'all',
    'default' => 0,
    'latest' => 0,
    'print-table_1' => 0,
    'print_table_category' => 0,
  );


  //get all the terms in the types vocab and add a display for each.
  $tids = _ow_type_tids();
  if (count($tids) > 1) {
    foreach($tids as $tid) {
      _ow_views_add_proptype($view, $tid, $want);
    }
    //sort out the tabs for the proptype menu items
  }
  return $view;
}

function _ow_type_tids() {
  return db_query("SELECT tid FROM {taxonomy_term_data} d LEFT JOIN {taxonomy_vocabulary} v ON v.vid = d.vid WHERE v.machine_name = :name",
    array(':name' => 'offers_wants_types')
  )->fetchCol();
}

/*
 * add a display for each of the terms in the proptypes vocab
 */
function _ow_views_add_proptype(&$view, $tid, $want) {
  $term = taxonomy_term_load($tid);
  $handler = $view->new_display('page', $term->name, 'tab-'.$term->tid);
  $handler->display->display_options['defaults']['title'] = FALSE;
  $handler->display->display_options['title'] = $term->name;
  $handler->display->display_options['defaults']['fields'] = FALSE;
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = 'Description';
  $handler->display->display_options['fields']['title']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['title']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['title']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['title']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['title']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['title']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['title']['alter']['html'] = 0;
  $handler->display->display_options['fields']['title']['hide_empty'] = 0;
  $handler->display->display_options['fields']['title']['empty_zero'] = 0;
  $handler->display->display_options['fields']['title']['link_to_node'] = 1;
  /* Field: User: Name */
  $handler->display->display_options['fields']['name']['id'] = 'name';
  $handler->display->display_options['fields']['name']['table'] = 'users';
  $handler->display->display_options['fields']['name']['field'] = 'name';
  $handler->display->display_options['fields']['name']['relationship'] = 'uid';
  $handler->display->display_options['fields']['name']['label'] = 'Member';
  $handler->display->display_options['fields']['name']['link_to_user'] = 1;
  /* Field: Field: Market sector */
  $handler->display->display_options['fields']['offers_wants_categories']['id'] = 'offers_wants_categories';
  $handler->display->display_options['fields']['offers_wants_categories']['table'] = 'field_data_offers_wants_categories';
  $handler->display->display_options['fields']['offers_wants_categories']['field'] = 'offers_wants_categories';
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['external'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['alter']['html'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['offers_wants_categories']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['offers_wants_categories']['hide_empty'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['empty_zero'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['hide_alter_empty'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['group_rows'] = 1;
  $handler->display->display_options['fields']['offers_wants_categories']['delta_offset'] = '0';
  $handler->display->display_options['fields']['offers_wants_categories']['delta_reversed'] = 0;
  $handler->display->display_options['fields']['offers_wants_categories']['field_api_classes'] = 0;
  $handler->display->display_options['defaults']['filters'] = FALSE;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'proposition' => 'proposition',
  );
  $handler->display->display_options['filters']['type']['expose']['operator'] = FALSE;
  /* Filter criterion: Propositions: Is a want */
  $handler->display->display_options['filters']['want']['id'] = 'want';
  $handler->display->display_options['filters']['want']['table'] = 'offers_wants';
  $handler->display->display_options['filters']['want']['field'] = 'want';
  $handler->display->display_options['filters']['want']['value'] = $want;
  /* Filter criterion: User: Active */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'users';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['relationship'] = 'uid';
  $handler->display->display_options['filters']['status']['value'] = '1';
  $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
  /* Filter criterion: Content: Proposition types (field_proptypes) */
  $handler->display->display_options['filters']['field_proptypes_tid']['id'] = 'offers_wants_types'.'_tid';
  $handler->display->display_options['filters']['field_proptypes_tid']['table'] = 'field_data_'.'offers_wants_types';
  $handler->display->display_options['filters']['field_proptypes_tid']['field'] = 'offers_wants_types'.'_tid';
  $handler->display->display_options['filters']['field_proptypes_tid']['value'] = array(0 => $tid);
  $handler->display->display_options['filters']['field_proptypes_tid']['reduce_duplicates'] = 0;
  $handler->display->display_options['filters']['field_proptypes_tid']['type'] = 'select';
  $handler->display->display_options['filters']['field_proptypes_tid']['vocabulary'] = 'offers_wants_types';
  $handler->display->display_options['path'] = ($want ? 'wants/' : 'offers/') . $tid;
  $handler->display->display_options['menu']['type'] = 'tab';
  $handler->display->display_options['menu']['title'] = $term->name;
  $handler->display->display_options['menu']['weight'] = $term->weight;
}


function mc_directory_user_view(){
  //careful editing this because it contains variables
  $view = new view;
  $view->name = 'mc_directory_user';
  $view->description = t('offers/wants from a given user');
  $view->tag = 'offers_wants';
  $view->base_table = 'node';
  $view->human_name = '';
  $view->core = 0;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: default */
  $handler = $view->new_display('default', 'default', 'default');
  $handler->display->display_options['items_per_page'] = 0;
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'post proposition';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['query']['options']['query_comment'] = FALSE;
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '0';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['pager']['options']['id'] = '0';
  $handler->display->display_options['pager']['options']['quantity'] = '9';
  $handler->display->display_options['style_plugin'] = 'table';
  $handler->display->display_options['style_options']['grouping'] = 'want';
  $handler->display->display_options['style_options']['columns'] = array(
    'title' => 'title',
    'edit_node' => 'edit_node',
    'offers_wants_types' => 'offers_wants_types',
    'want' => 'want',
  );
  $handler->display->display_options['style_options']['default'] = '-1';
  $handler->display->display_options['style_options']['info'] = array(
    'title' => array(
      'sortable' => 1,
      'separator' => '',
    ),
    'edit_node' => array(
      'separator' => '',
    ),
    'offers_wants_types' => array(
      'separator' => '',
    ),
    'want' => array(
      'separator' => '',
    ),
  );
  $handler->display->display_options['style_options']['override'] = 1;
  $handler->display->display_options['style_options']['sticky'] = 1;
  /* Relationship: Content: Author */
  $handler->display->display_options['relationships']['uid']['id'] = 'uid';
  $handler->display->display_options['relationships']['uid']['table'] = 'node';
  $handler->display->display_options['relationships']['uid']['field'] = 'uid';
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = 'Description';
  $handler->display->display_options['fields']['title']['hide_empty'] = 0;
  $handler->display->display_options['fields']['title']['empty_zero'] = 0;
  $handler->display->display_options['fields']['title']['link_to_node'] = 1;
  /* Field: Propositions: Proposition types */
  $handler->display->display_options['fields']['offers_wants_types']['id'] = 'offers_wants_types';
  $handler->display->display_options['fields']['offers_wants_types']['table'] = 'field_data_offers_wants_types';
  $handler->display->display_options['fields']['offers_wants_types']['field'] = 'offers_wants_types';
  $handler->display->display_options['fields']['offers_wants_types']['label'] = 'Type';
  $handler->display->display_options['fields']['offers_wants_types']['type'] = 'taxonomy_term_reference_plain';
  $handler->display->display_options['fields']['offers_wants_types']['delta_offset'] = '0';
  $handler->display->display_options['fields']['offers_wants_types']['hide_empty'] = 0;
  $handler->display->display_options['fields']['offers_wants_types']['empty_zero'] = 0;

  /* Field: Propositions: Is a want */
  $handler->display->display_options['fields']['want']['id'] = 'want';
  $handler->display->display_options['fields']['want']['table'] = 'offers_wants';
  $handler->display->display_options['fields']['want']['field'] = 'want';
  $handler->display->display_options['fields']['want']['label'] = '';
  $handler->display->display_options['fields']['want']['exclude'] = TRUE;
  $handler->display->display_options['fields']['want']['hide_empty'] = 0;
  $handler->display->display_options['fields']['want']['empty_zero'] = 0;
  /* Field: Content: Published */
  $handler->display->display_options['fields']['status']['id'] = 'status';
  $handler->display->display_options['fields']['status']['table'] = 'node';
  $handler->display->display_options['fields']['status']['field'] = 'status';
  $handler->display->display_options['fields']['status']['type'] = 'unicode-yes-no';
  $handler->display->display_options['fields']['status']['not'] = 0;
  /* Field: Content: Edit link */
  $handler->display->display_options['fields']['edit_node']['id'] = 'edit_node';
  $handler->display->display_options['fields']['edit_node']['table'] = 'node';
  $handler->display->display_options['fields']['edit_node']['field'] = 'edit_node';
  $handler->display->display_options['fields']['edit_node']['label'] = '';
  $handler->display->display_options['fields']['edit_node']['text'] = 'Edit';
    /* Champ: Contenu : Lien de suppression */
  $handler->display->display_options['fields']['delete_node']['id'] = 'delete_node';
  $handler->display->display_options['fields']['delete_node']['table'] = 'views_entity_node';
  $handler->display->display_options['fields']['delete_node']['field'] = 'delete_node';
  $handler->display->display_options['fields']['delete_node']['label'] = '';
  $handler->display->display_options['fields']['delete_node']['element_label_colon'] = FALSE;

  /* Contextual filter: User: Uid */
  $handler->display->display_options['arguments']['uid']['id'] = 'uid';
  $handler->display->display_options['arguments']['uid']['table'] = 'users';
  $handler->display->display_options['arguments']['uid']['field'] = 'uid';
  $handler->display->display_options['arguments']['uid']['relationship'] = 'uid';
  $handler->display->display_options['arguments']['uid']['default_action'] = 'default';
  $handler->display->display_options['arguments']['uid']['exception']['value'] = 'me';
  $handler->display->display_options['arguments']['uid']['exception']['title_enable'] = 1;
  $handler->display->display_options['arguments']['uid']['exception']['title'] = 'My';
  $handler->display->display_options['arguments']['uid']['default_argument_type'] = 'user';
  $handler->display->display_options['arguments']['uid']['default_argument_options']['user'] = FALSE;
  $handler->display->display_options['arguments']['uid']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['uid']['specify_validation'] = 1;
  $handler->display->display_options['arguments']['uid']['break_phrase'] = 0;
  $handler->display->display_options['arguments']['uid']['not'] = 0;
  /* Contextual filter: Field: Market sector (offers_wants_categories) */
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['id'] = 'offers_wants_categories_tid';
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['table'] = 'field_data_offers_wants_categories';
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['field'] = 'offers_wants_categories_tid';
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['default_argument_type'] = 'fixed';
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['default_argument_skip_url'] = 0;
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['summary']['number_of_records'] = '0';
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['summary_options']['items_per_page'] = '25';
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['break_phrase'] = 0;
  $handler->display->display_options['arguments']['offers_wants_categories_tid']['not'] = 0;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'proposition' => 'proposition',
  );
  $handler->display->display_options['filters']['type']['expose']['operator'] = FALSE;

  /* Display: my_propositions */
  $handler = $view->new_display('page', t('My offers & wants'), 'mine');
  $handler->display->display_options['defaults']['empty'] = FALSE;
  /* No results behavior: Global: Text area */
  $handler->display->display_options['empty']['text']['id'] = 'area';
  $handler->display->display_options['empty']['text']['table'] = 'views';
  $handler->display->display_options['empty']['text']['field'] = 'area';
  $handler->display->display_options['empty']['text']['empty'] = FALSE;
  $handler->display->display_options['empty']['text']['content'] = 'No offers/wants have been entered.';
  $handler->display->display_options['empty']['text']['format'] = 'plain_text';
  $handler->display->display_options['path'] = 'user/%/propositions';
  $handler->display->display_options['menu']['type'] = 'tab';
  $handler->display->display_options['menu']['title'] = 'Offers & wants';
  $handler->display->display_options['menu']['weight'] = '1';

  return $view;
}


function _ow_views_delete_display(&$views, $displayname) {
  foreach ($views as $key => $view) {
    if (isset($view->display[$displayname])) {
      unset($views[$key]->display[$displayname]);
      //debug("Removed display $displayname from $key");
    }
  }
}

//delete all references to a field in a view
function _ow_views_delete_field(&$views, $fieldname) {
  foreach ($views as $key => $view) {
    foreach ($view->display as $key2 => $display) {
      _ow_views_delete_field_from_display($views[$key]->display[$key2], $fieldname);
    }
  }
}

//delete all references to a particular field in a given display
function _ow_views_delete_field_from_display(&$display, $name) {
  foreach (array('fields', 'sorts', 'arguments', 'filters')as $component) {
    if (isset($display->display_options[$component])) {
      if (isset($display->display_options[$component][$name])) {
        unset($display->display_options[$component][$name]);
      }
    }
  }
  //we could do it all again to delete table groupings and other places the fields have been referenced
}

array(
  t('No wants have been entered.'),
  t('No offers have been entered.'),
  t('Category(s)'),
  t('Offers : %1'),
  t('Latest offers'),
  t('Latest wants'),
  t('Upcoming needs'),
  t('Export to CSV'),
  t('Member'),
  t('[name] needs [title] before [end]')
);
