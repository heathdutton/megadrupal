<?php

/**
 * @file
 * Z-Payment integration
 */

/**
 * Current JS API file version
 *
 * @link https://knowledgecenter.zuora.com/CA_Commerce/G_Hosted_Commerce_Pages/B_Payment_Pages_2.0/H_Integrate_Payment_Pages_2.0
 */
define('ZUORA_PAYMENTS_JS_LIBRARY_VER', '1.3.0');

/**
 * Returns hosted pages based on current hosted pages version.
 * @param null|int $version
 *
 * @return array
 */
function zuora_payments_pages_list($version = null) {
  $uri = '/hostedpages';
  if ($version) {
    $uri .= '?version=' . $version;
  }

  $response = zuora_rest_api_get($uri)->data();
  if ($response['success']) {
    return $response['hostedpages'];
  }

  return array();
}

/**
 * Creates HPM v1.0 iframe page.
 *
 * @param array $page_data
 *    Array of page data from API.
 *
 * @return string
 *    iframe HTML.
 */
function zuora_payments_hpm_iframe(array $page_data) {
  if (ZuoraRest::instance()->isSandboxed()) {
    $page_uri = 'https://apisandbox.zuora.com/apps/PublicHostedPage.do';
  }
  else {
    $page_uri = 'https://www.zuora.com/apps/PublicHostedPage.do';
  }

  $attributes = array(
    'id' => 'z_hppm_iframe',
    'name' => 'z_hppm_iframe',
    'src' => url($page_uri, array(
      'query' => array(
        'method' => 'requestPage',
        'id' => $page_data['pageId'],
        'tenantId' => ZuoraRest::instance()->getTenantId(),
        'timestamp' => REQUEST_TIME,
        'token' => variable_get('zuora_payments_hpm_key_v1'),
      ),
    )),
  );
  return '<iframe' . drupal_attributes($attributes) . '></iframe>';
}

/**
 * Generates signature for a v2.0 HPM page.
 * @param array $page_data
 *
 * @return mixed|null
 */
function zuora_payments_get_rsa_signature(array $page_data) {
  $response = zuora_rest_api_post('/rsa-signatures', array(
    'uri' => zuora_payments_hppm_page_uri(),
    'method' => 'POST',
    'pageId' => $page_data['pageId'],
  ))->data();

  if ($response['success']) {
    return $response;
  }

  return NULL;
}

/**
 * Adds Z-Payment JS library for HPM v2.0
 */
function zuora_payments_js_library() {
  if (ZuoraRest::instance()->isSandboxed()) {
    $js_url = 'https://apisandboxstatic.zuora.com/Resources/libs/hosted/' . ZUORA_PAYMENTS_JS_LIBRARY_VER . '/zuora.js';
  }
  else {
    $js_url = 'https://static.zuora.com/Resources/libs/hosted/' . ZUORA_PAYMENTS_JS_LIBRARY_VER . '/zuora-min.js';
  }

  drupal_add_js($js_url, 'external');
}

/**
 * Returns API URL for hosted payment pages.
 * @return string
 */
function zuora_payments_hppm_page_uri() {
  if (ZuoraRest::instance()->isSandboxed()) {
    return 'https://apisandbox.zuora.com/apps/PublicHostedPageLite.do';
  }
  else {
    return 'https://www.zuora.com/apps/PublicHostedPageLite.do';
  }
}

/**
 * Convert 2 char country codes to Z-Payment's 3 char ISO code.
 *
 * @param $code
 * @return string
 */
function zuora_payments_country_code($code) {
 $iso_codes = array('BD' => 'BGD', 'BE' => 'BEL', 'BF' => 'BFA', 'BG' => 'BGR',
    'BA' => 'BIH', 'BB' => 'BRB', 'WF' => 'WLF', 'BL' => 'BLM', 'BM' => 'BMU',
    'BN' => 'BRN', 'BO' => 'BOL', 'BH' => 'BHR', 'BI' => 'BDI', 'BJ' => 'BEN',
    'BT' => 'BTN', 'JM' => 'JAM', 'BV' => 'BVT', 'BW' => 'BWA', 'WS' => 'WSM',
    'BQ' => 'BES', 'BR' => 'BRA', 'BS' => 'BHS', 'JE' => 'JEY', 'BY' => 'BLR',
    'BZ' => 'BLZ', 'RU' => 'RUS', 'RW' => 'RWA', 'RS' => 'SRB', 'TL' => 'TLS',
    'RE' => 'REU', 'TM' => 'TKM', 'TJ' => 'TJK', 'RO' => 'ROU', 'TK' => 'TKL',
    'GW' => 'GNB', 'GU' => 'GUM', 'GT' => 'GTM', 'GS' => 'SGS', 'GR' => 'GRC',
    'GQ' => 'GNQ', 'GP' => 'GLP', 'JP' => 'JPN', 'GY' => 'GUY', 'GG' => 'GGY',
    'GF' => 'GUF', 'GE' => 'GEO', 'GD' => 'GRD', 'GB' => 'GBR', 'GA' => 'GAB',
    'SV' => 'SLV', 'GN' => 'GIN', 'GM' => 'GMB', 'GL' => 'GRL', 'GI' => 'GIB',
    'GH' => 'GHA', 'OM' => 'OMN', 'TN' => 'TUN', 'JO' => 'JOR', 'HR' => 'HRV',
    'HT' => 'HTI', 'HU' => 'HUN', 'HK' => 'HKG', 'HN' => 'HND', 'HM' => 'HMD',
    'VE' => 'VEN', 'PR' => 'PRI', 'PS' => 'PSE', 'PW' => 'PLW', 'PT' => 'PRT',
    'SJ' => 'SJM', 'PY' => 'PRY', 'IQ' => 'IRQ', 'PA' => 'PAN', 'PF' => 'PYF',
    'PG' => 'PNG', 'PE' => 'PER', 'PK' => 'PAK', 'PH' => 'PHL', 'PN' => 'PCN',
    'PL' => 'POL', 'PM' => 'SPM', 'ZM' => 'ZMB', 'EH' => 'ESH', 'EE' => 'EST',
    'EG' => 'EGY', 'ZA' => 'ZAF', 'EC' => 'ECU', 'IT' => 'ITA', 'VN' => 'VNM',
    'SB' => 'SLB', 'ET' => 'ETH', 'SO' => 'SOM', 'ZW' => 'ZWE', 'SA' => 'SAU',
    'ES' => 'ESP', 'ER' => 'ERI', 'ME' => 'MNE', 'MD' => 'MDA', 'MG' => 'MDG',
    'MF' => 'MAF', 'MA' => 'MAR', 'MC' => 'MCO', 'UZ' => 'UZB', 'MM' => 'MMR',
    'ML' => 'MLI', 'MO' => 'MAC', 'MN' => 'MNG', 'MH' => 'MHL', 'MK' => 'MKD',
    'MU' => 'MUS', 'MT' => 'MLT', 'MW' => 'MWI', 'MV' => 'MDV', 'MQ' => 'MTQ',
    'MP' => 'MNP', 'MS' => 'MSR', 'MR' => 'MRT', 'IM' => 'IMN', 'UG' => 'UGA',
    'TZ' => 'TZA', 'MY' => 'MYS', 'MX' => 'MEX', 'IL' => 'ISR', 'FR' => 'FRA',
    'IO' => 'IOT', 'SH' => 'SHN', 'FI' => 'FIN', 'FJ' => 'FJI', 'FK' => 'FLK',
    'FM' => 'FSM', 'FO' => 'FRO', 'NI' => 'NIC', 'NL' => 'NLD', 'NO' => 'NOR',
    'NA' => 'NAM', 'VU' => 'VUT', 'NC' => 'NCL', 'NE' => 'NER', 'NF' => 'NFK',
    'NG' => 'NGA', 'NZ' => 'NZL', 'NP' => 'NPL', 'NR' => 'NRU', 'NU' => 'NIU',
    'CK' => 'COK', 'XK' => 'XKX', 'CI' => 'CIV', 'CH' => 'CHE', 'CO' => 'COL',
    'CN' => 'CHN', 'CM' => 'CMR', 'CL' => 'CHL', 'CC' => 'CCK', 'CA' => 'CAN',
    'CG' => 'COG', 'CF' => 'CAF', 'CD' => 'COD', 'CZ' => 'CZE', 'CY' => 'CYP',
    'CX' => 'CXR', 'CR' => 'CRI', 'CW' => 'CUW', 'CV' => 'CPV', 'CU' => 'CUB',
    'SZ' => 'SWZ', 'SY' => 'SYR', 'SX' => 'SXM', 'KG' => 'KGZ', 'KE' => 'KEN',
    'SS' => 'SSD', 'SR' => 'SUR', 'KI' => 'KIR', 'KH' => 'KHM', 'KN' => 'KNA',
    'KM' => 'COM', 'ST' => 'STP', 'SK' => 'SVK', 'KR' => 'KOR', 'SI' => 'SVN',
    'KP' => 'PRK', 'KW' => 'KWT', 'SN' => 'SEN', 'SM' => 'SMR', 'SL' => 'SLE',
    'SC' => 'SYC', 'KZ' => 'KAZ', 'KY' => 'CYM', 'SG' => 'SGP', 'SE' => 'SWE',
    'SD' => 'SDN', 'DO' => 'DOM', 'DM' => 'DMA', 'DJ' => 'DJI', 'DK' => 'DNK',
    'VG' => 'VGB', 'DE' => 'DEU', 'YE' => 'YEM', 'DZ' => 'DZA', 'US' => 'USA',
    'UY' => 'URY', 'YT' => 'MYT', 'UM' => 'UMI', 'LB' => 'LBN', 'LC' => 'LCA',
    'LA' => 'LAO', 'TV' => 'TUV', 'TW' => 'TWN', 'TT' => 'TTO', 'TR' => 'TUR',
    'LK' => 'LKA', 'LI' => 'LIE', 'LV' => 'LVA', 'TO' => 'TON', 'LT' => 'LTU',
    'LU' => 'LUX', 'LR' => 'LBR', 'LS' => 'LSO', 'TH' => 'THA', 'TF' => 'ATF',
    'TG' => 'TGO', 'TD' => 'TCD', 'TC' => 'TCA', 'LY' => 'LBY', 'VA' => 'VAT',
    'VC' => 'VCT', 'AE' => 'ARE', 'AD' => 'AND', 'AG' => 'ATG', 'AF' => 'AFG',
    'AI' => 'AIA', 'VI' => 'VIR', 'IS' => 'ISL', 'IR' => 'IRN', 'AM' => 'ARM',
    'AL' => 'ALB', 'AO' => 'AGO', 'AQ' => 'ATA', 'AS' => 'ASM', 'AR' => 'ARG',
    'AU' => 'AUS', 'AT' => 'AUT', 'AW' => 'ABW', 'IN' => 'IND', 'AX' => 'ALA',
    'AZ' => 'AZE', 'IE' => 'IRL', 'ID' => 'IDN', 'UA' => 'UKR', 'QA' => 'QAT',
    'MZ' => 'MOZ',
  );

  return $iso_codes[$code];
}
