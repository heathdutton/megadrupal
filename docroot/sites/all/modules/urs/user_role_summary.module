<?php

/**
 * @file
 * The User Role Summary module
 *
 * The User Role Summary module provides a block which gives a summary
 * of each of the users roles which exist, and which when clicked go directly
 * to the user admin page filtered for users of that role type.  
 * 
 * The block will be enabled on the <a href="http://example.com/admin/build/block" title="http://example.com/admin/build/block" rel="nofollow">http://example.com/admin/build/block</a> page
 * and has the title "User Role Summary".
 * 
 * For example, the block might contain something like the following:
 * - Administrator (1)
 * - Basic member (328)
 * - Full member (7251)
 * - On-hold user (114)
 * - Suspended user (504)
 * 
 * You will see that in brackets is the number of users who have that role.
 * 
 * If, for example, you click on "Full member" you will go to the
 * people page <a href="http://example.com/admin/people/user" title="http://example.com/admin/people/user" rel="nofollow">http://example.com/admin/people/user</a> with the user filter set 
 * to "Full member".
 */

/**
 * Implements hook_permission()
 * 
 * Valid permissions for this module
 * @return array An array of valid permissions for the module
 * 
 * Only users who have been granted this 'use user role summary' permission via the permissions
 * screen (e.g. admin/user/permissions) will be allowed to access the processing behind the
 * 'urs/role/%' pages.
 */
function user_role_summary_permission() {
  return array(
    'use user role summary' => array(
      'title' => t('Use User Role Summary'),
      'description' => t('Use the User Role Summary block.')
  ));
}

/**
 * Implements hook_block_info()
 *
 * Generate HTML for the user_role_summary block
 * @returns block HTML
 */
function user_role_summary_block_info() {
  // set up an empty array which will contain the block contents
  $blocks = array();

  // Generate listing of blocks from this module, for the admin/block page
  $blocks['user_role_summary'] = array(
    'info' => t('User Role Summary')
  );

  // return the built content
  return $blocks;
}

/**
 * Implements hook_block_view()
 *
 * Generate HTML for the user_role_summary block
 * @param op the operation from the URL
 * @param delta offset
 * @returns block HTML
 */
function user_role_summary_block_view($delta=0) {
  // set up an empty array which will contain the block contents
  $block = array();

  // Generate our block content
  $block['subject'] = "User Role Summary";

  $roles = user_roles();
  $block['content'] = theme("user_role_summary_content", $roles);

  // return the built content
  return $block;
}


/**
 * Implements hook_menu().
 *
 * Hook menu registers page callbacks with Drupal's central menu system.
 */
function user_role_summary_menu() {
  $items = array();

  $items['urs/role/%'] = array(
    'title' => 'Dealing with roles',
    'page callback' => 'user_role_summary_role_page',
    'page arguments' => array(2),  // 0=urs, 1=role, 2=%roleid
    'access arguments' => array('use user role summary'), // only users with this permission allowed 
  );
  
  return $items;
}

/**
 * Implements hook_theme().
 * 
 * This allows the building of the bulleted list of roles in a themable manner.  The function
 * to generate the block is passed an array of the roles which it will use to build into 
 * a bulleted list.  This function can thus be overridden by somebody wishing to theme this in
 * a different way. 
 */
function user_role_summary_theme() {
  return array(
    'user_role_summary_content' => array(
      'variables' => array('roles' => NULL))
  );
}

/**
 * Generates the themed content.
 *
 * By default, this will produce a bulleted list of roles with the summary
 * count of how many users there are for each role, e.g.:
 * - Administrator (1)
 * - Basic member (328)
 * - Full member (7251)
 * - On-hold user (114)
 * - Suspended user (504)
 *
 */
function theme_user_role_summary_content($roles) {
  // Build an array with each of the rows of the roles list
  $items = array();
  
  // We add a 'title', 'type' and 'attributes' key 
  $items['title'] = "";
  $items['type'] = "ul";
  $items['attributes'] = array();
  
  foreach ($roles as $role_id => $role_name) {
    // Ignore roleid of anonymous user (1) and authenticated user (2)
    if ($role_id <> 1 
    && $role_id <> 2 
    && is_numeric($role_id)) {
      // Find out how many members have this role type
      $sql = "SELECT count(uid)
        FROM {users_roles} 
        WHERE rid = :role_id";

      $result = db_query($sql, array('role_id' => $role_id));
       
      $count = $result->fetchField();

      $list_item = l($role_name, "urs/role/$role_id");
      $list_item .= " ($count)";
      
      // The $items array has 'items' as a key and
      // contains an array of items: $items['items'][] = $list_item;
      $items['items'][] = $list_item;
    }
  }

  // Add the special case of all users
  $count_all_users = db_query("SELECT COUNT(uid) FROM {users}")->fetchField();
  $list_item = l('All users', "urs/role/0") . ' (' . $count_all_users . ')';
  $items['items'][] = $list_item;
  
  // Return a themed list of items.
  $content = theme_item_list($items);
  
  return $content;
}

/**
 * Page callback for dealing with the user clicking on a urs/role/% link.
 * 
 * When the user goes to a urs/role/% page such as urs/role/4
 * then this function will set the User filter to shown only
 * users with role 4, and then goto the User page with this filter
 * set.
 */
function user_role_summary_role_page($role_id) {
  // Set the session variable to only display the given user role
  if ($role_id == 0) {
  	unset($_SESSION['user_overview_filter']);
  }
  else {
  	$session = &$_SESSION['user_overview_filter'];
  	$session = array();
  	$session[] = array('role', $role_id);
  }
  
  $output = "";

  // Goto the standard user admin page
  drupal_goto("admin/people/user");
  
  return $output;
}
