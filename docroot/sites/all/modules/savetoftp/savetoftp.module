<?php
/**
 * @file
 * Handles saving nodes to a FTP server as html pages.
 * Adds text boxes for logging into FTP server in order to save.
 */

module_load_include('inc', 'savetoftp', 'savetoftp.files');
module_load_include('inc', 'savetoftp', 'savetoftp.form');

/**
 * Implementation of hook_menu().
 * Gives admin section for Save To FTP module
 */

function savetoftp_menu() {
  $items['admin/config/media/savetoftp'] = array(
    'title' => 'Save to FTP',
    'description' => 'Enter HTML into textboxes for use when presenting the page as a static HTML document',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('savetoftp_admin_settings'),
    'access arguments' => array('save to ftp'),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function savetoftp_permission() {
  return array(
    'save to ftp' => array(
      'title' => t('save to ftp'),
      'description' => t('Permission to save html version of a node to a FTP server'),
    ),
    'administer save to ftp' => array(
      'title' => t('Administer save to ftp'),
      'description' => t('Permission to save set configuration settings for Save to FTP'),
    ),
  );
}

/**
 * Implementation of hook_submit().
 * Publish a node to an ftp server based on form values.
 */

function savetoftp_publish_form_submit($form, &$form_state) {
  $node = menu_get_object();
  $path = drupal_lookup_path('alias', 'node/' . $node->nid);
  savetoftp_create_directories($form_state['values']['ftp_all']);
  $file_place = savetoftp_data_process($form_state['values']['ftp_all'], $form_state['values']['ftp_links'], $form_state['values']['ftp_anon']);
  $html_name_array = explode('/', $path);
  $html_name = end($html_name_array);
  $remote_file = check_plain(str_replace(" ", "", $html_name));
  $fp = savetoftp_ftp_connect($form_state);
  if (!ftp_put($fp, $remote_file, $file_place, FTP_BINARY)) {
    drupal_set_message(t('Was unable to put the @remote_file on the server.', array('@remote_file' => $remote_file)));
  }
  savetoftp_ftp_files($fp, $remote_file, $file_place, $form_state['values']['ftp_all']);
  ftp_close($fp);
  drupal_goto('node/' . $node->nid);
}

function savetoftp_delete_form_submit($form, &$form_state) {
  $node = menu_get_object();
  $path = drupal_lookup_path('alias', 'node/' . $node->nid);
  $html_name_array = explode('/', $path);
  $html_name = end($html_name_array);
  $remote_file = check_plain(str_replace(" ", "", $html_name));
  $fp = savetoftp_connect($form_state);
  if (!ftp_delete($fp, $remote_file)) { 
    drupal_set_message(t('Was unable to delete the @remote_file on the server.', array('@remote_file' => $remote_file)));
  }
  ftp_close($fp);
  drupal_goto('node/' . $node->nid);
}

/**
 * Implementation of hook_form_alter().
 * Define the form for saving to FTP
 */

function savetoftp_form_alter(&$form, $form_state, $form_id) {

  if (user_access('save to ftp')) {
    if (isset($form['#node']) && $form_id == $form['#node']->type . '_node_form') {
      drupal_add_js('jQuery().ready(function() {jQuery(\'#dialog\').jqm();});', array('type' => 'inline', 'scope' => JS_DEFAULT));
      drupal_add_js(drupal_get_path('module', 'savetoftp') . '/jqModal.js');
      drupal_add_css(drupal_get_path('module', 'savetoftp') . '/jqModal.css');
      drupal_add_css(drupal_get_path('module', 'savetoftp') . '/savetoftp.css');
      $node = menu_get_object();
      if (is_numeric($node->nid)) {
        $form['#suffix'] = '
          <button type="button" id="savetoftp_publish_button" onclick="document.getElementById(\'ftp1\').style.display = \'block\'">' .
          t('Publish to FTP') . '</button><label for="savetoftp_publish_button" class="labeler">&nbsp;' . t('This publishes the web page live to your FTP Server') . 
          '</label><div class="jqmWindow jqDnR" id="ftp1" style="display:none">' .
          render(drupal_get_form('savetoftp_publish_form')) . 
          '</div><br /><button type="button" id="savetoftp_unpublish_button" onclick="document.getElementById(\'ftp2\').style.display = \'block\'">' .
          t('Unpublish from FTP') .
          '</button><label for="savetoftp_unpublish_button" class="labeler">&nbsp;' .
          t('This removes the web page from the FTP Server') .
          '</label><div class="jqmWindow jqDnR" id="ftp2" style="display:none">' .
          render(drupal_get_form('savetoftp_delete_form')) .
          '</div>';
      }
    }
  }
}
