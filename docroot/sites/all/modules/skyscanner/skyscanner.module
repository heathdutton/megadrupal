<?php

/**
 * @implements hook_menu()
 */
function skyscanner_menu() {

  // Search settings.
  $items['admin/config/skyscanner'] = array(
    'title' => 'Skyscanner',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
  );
  $items['admin/config/skyscanner/config'] = array(
    'title' => 'Configuration',
    'description' => 'Supply your Skyscanner API key.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('skyscanner_config'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}


/**
 * @ingroup forms
 * @see system_settings_form()
 */
function skyscanner_config($form, &$form_state) {

  $form['skyscanner_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Skyscanner API key'),
    '#default_value' => variable_get('skyscanner_key', ''),
    '#description' => t("<a href=\"http://api.skyscanner.net/api/key.html#get_api_key\" target=\"_blank\">Sign up</a> to get an API key."),
  );

  return system_settings_form($form);
}


function _skyscanner_load_api() {
  $loaded = &drupal_static(__FUNCTION__);
  
  if (isset($loaded)) {
    return;
  }
  
  $key = variable_get('skyscanner_key');
  
  if ($key == '') {
    throw new Exception();
  }

  drupal_add_js('http://api.skyscanner.net/api.ashx?key=' . $key);
  drupal_add_js('skyscanner.load("snippets", 1);', 'inline');
  
  $loaded = TRUE;
}


/**
 * @implements hook_theme()
 */
function skyscanner_theme($existing, $type, $theme, $path) {

  return array(
    'skyscanner_who_flys' => array(
      'variables' => array(
        'departure' => NULL,
        'destination' => NULL,
        'lock' => NULL,
        'shape' => NULL,
        'culture' => NULL,
        'new_window' => TRUE,
      ),
    ),
    'skyscanner_flight_search' => array(
      'variables' => array(
        'currency' => NULL,
        'departure' => NULL,
        'destination' => NULL,
        'lock' => NULL,
        'shape' => NULL,
        'culture' => NULL,
        'new_window' => TRUE,
      ),
    ),
    'skyscanner_map' => array(
      'render element' => 'info',
    ),
    'skyscanner_no_key' => array(
      'variables' => array(),
    ),
  );
}


function _skyscanner_style($shape) {

  switch ($shape) {

    case 'leaderboard':
      $width = 728;
      $height = 90;
      break;
      
    case 'box300x250':
      $width = 300;
      $height = 250;
      break;
      
    case 'box400x400':
      $width = 400;
      $height = 400;
      break;
      
    case 'skyscraper':
      $width = 120;
      $height = 600;
      break;
  };
  
  return 'width: ' . $width . 'px; height: ' . $height . 'px;';
}


function theme_skyscanner_no_key($variables) {

  if (!user_access('administer site configuration')) {
    return;
  }
  
  if (current_path() == 'admin/config/skyscanner/config') {
    return;
  }

  return t("<a href=\"!link\">Skyscanner API key</a> required.", array('!link' => url('admin/config/skyscanner/config')));
}


function theme_skyscanner_who_flys($variables) {

  try {
    _skyscanner_load_api();
  }
  catch (Exception $e) {
    return theme('skyscanner_no_key');
  }

  drupal_add_js(array('skyscanner' => array('whoFlys' => $variables)), 'setting');
  drupal_add_js(drupal_get_path('module', 'skyscanner') . '/who_flys.js');
  
  $attributes = array(
    'id' => 'skyscanner-who-flys',
    'style' => _skyscanner_style($variables['shape']),
  );

  return '<div' . drupal_attributes($attributes) . '></div>';
}


function theme_skyscanner_flight_search($variables) {

  try {
    _skyscanner_load_api();
  }
  catch (Exception $e) {
    return theme('skyscanner_no_key');
  }

  drupal_add_js(array('skyscanner' => array('flightSearch' => $variables)), 'setting');
  drupal_add_js(drupal_get_path('module', 'skyscanner') . '/flight_search.js');

  $attributes = array(
    'id' => 'skyscanner-flight-search',
    'style' => _skyscanner_style($variables['shape']),
  );

  return '<div ' . drupal_attributes($attributes) . '></div>';
}


function skyscanner_block_info() {

  $blocks['who_flys'] = array(
    'info' => t("Skyscanner - Who flys"),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['flight_search'] = array(
    'info' => t("Skyscanner - Flight search"),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}


function _skyscanner_block_settings_who_flys() {

  return variable_get('skyscanner_block_settings_who_flys', array());
}


function _skyscanner_block_setting_who_flys($name, $default = NULL) {
  $settings = _skyscanner_block_settings_who_flys();

  return isset($settings[$name]) ? $settings[$name] : $default;
}


function skyscanner_block_configure_who_flys() {
  $settings = _skyscanner_block_settings_who_flys();
  
  $form['settings'] = array(
    '#type' => 'fieldset',
    '#title' => t("Skyscanner settings"),
    '#tree' => TRUE,
  );

  $form['settings']['departure'] = array(
    '#type' => 'textfield',
    '#title' => t("Departure"),
    '#maxlength' => 4,
    '#size' => 8,
    '#default_value' => _skyscanner_block_setting_who_flys('departure'),
    '#description' => t("PlaceID can be ID of airport, city or country. You can find placeID by performing the search on Skyscanner and looking at URL. For example: http://www.skyscanner.net/gbp/flights/lond/pari/cheap-flights-to-paris-from-london.html contains codes for London (LOND) and Paris (PARI). You can also use code wizard to set departure."),
  );
  
  $form['settings']['destination'] = array(
    '#type' => 'textfield',
    '#title' => t("Destination"),
    '#maxlength' => 4,
    '#size' => 8,
    '#default_value' => _skyscanner_block_setting_who_flys('destination'),
    '#description' => t("PlaceID can be ID of airport, city or country. You can find placeID by performing the search on Skyscanner and looking at URL. For example: http://www.skyscanner.net/gbp/flights/lond/pari/cheap-flights-to-paris-from-london.html contains codes for London (LOND) and Paris (PARI). You can also use code wizard to set departure."),
  );
  
  $form['settings']['lock'] = array(
    '#title' => t("Lock"),
    '#type' => 'select',
    '#options' => array(
      'neither' => t("Neither"),
      'departure' => t("Departure"),
      'destination' => t("Destination"),
    ),
    '#default_value' => _skyscanner_block_setting_who_flys('lock'),
  );

  $form['settings']['shape'] = array(
    '#title' => t("Shape"),
    '#type' => 'select',
    '#options' => array(
      'leaderboard' => t("Leaderboard"),
      'box300x250' => t("300x250"),
      'box400x400' => t("400x400"),
      'skyscraper' => t("Skyscraper"),
    ),
    '#default_value' => _skyscanner_block_setting_who_flys('shape'),
  );

  $form['settings']['culture'] = array(
    '#type' => 'textfield',
    '#title' => t("Culture"),
    '#maxlength' => 2,
    '#size' => 4,
    '#description' => t("Sets snippet's culture to specific cultureID."),
    '#default_value' => _skyscanner_block_setting_who_flys('culture'),
  );

  $form['settings']['new_window'] = array(
    '#type' => 'checkbox',
    '#title' => t("New window"),
    '#description' => t("If true, then clicking on \"Search\" button will open target page in new tab/window, otherwise it will open it in the same window."),
    '#default_value' => _skyscanner_block_setting_who_flys('new_window', TRUE),
  );

  return $form;
}


function _skyscanner_block_settings_flight_search() {

  return variable_get('skyscanner_block_settings_flight_search', array());
}


function _skyscanner_block_setting_flight_search($name, $default = NULL) {
  $settings = _skyscanner_block_settings_flight_search();

  return isset($settings[$name]) ? $settings[$name] : $default;
}


function skyscanner_block_configure_flight_search() {
  $settings = _skyscanner_block_settings_flight_search();
  
  $form['settings'] = array(
    '#type' => 'fieldset',
    '#title' => t("Skyscanner settings"),
    '#tree' => TRUE,
  );

  $form['settings']['currency'] = array(
    '#type' => 'textfield',
    '#title' => t("Currency"),
    '#maxlength' => 3,
    '#size' => 6,
    '#default_value' => _skyscanner_block_setting_flight_search('currency'),
    '#description' => t("e.g. GBP"),
  );

  $form['settings']['departure'] = array(
    '#type' => 'textfield',
    '#title' => t("Departure"),
    '#maxlength' => 4,
    '#size' => 8,
    '#default_value' => _skyscanner_block_setting_flight_search('departure'),
    '#description' => t("PlaceID can be ID of airport, city or country. You can find placeID by performing the search on Skyscanner and looking at URL. For example: http://www.skyscanner.net/gbp/flights/lond/pari/cheap-flights-to-paris-from-london.html contains codes for London (LOND) and Paris (PARI). You can also use code wizard to set departure."),
  );
  
  $form['settings']['destination'] = array(
    '#type' => 'textfield',
    '#title' => t("Destination"),
    '#maxlength' => 4,
    '#size' => 8,
    '#default_value' => _skyscanner_block_setting_flight_search('destination'),
    '#description' => t("PlaceID can be ID of airport, city or country. You can find placeID by performing the search on Skyscanner and looking at URL. For example: http://www.skyscanner.net/gbp/flights/lond/pari/cheap-flights-to-paris-from-london.html contains codes for London (LOND) and Paris (PARI). You can also use code wizard to set departure."),
  );
  
  $form['settings']['lock'] = array(
    '#title' => t("Lock"),
    '#type' => 'select',
    '#options' => array(
      'neither' => t("Neither"),
      'departure' => t("Departure"),
      'destination' => t("Destination"),
    ),
    '#default_value' => _skyscanner_block_setting_flight_search('lock'),
  );

  $form['settings']['departing'] = array(
    '#title' => t("Departing"),
    '#type' => 'textfield',
    '#maxlength' => 6,
    '#size' => 4,
    '#default_value' => _skyscanner_block_setting_flight_search('departing'),
  );

  $form['settings']['returning'] = array(
    '#title' => t("Returning"),
    '#type' => 'textfield',
    '#maxlength' => 6,
    '#size' => 4,
    '#default_value' => _skyscanner_block_setting_flight_search('returning'),
  );

  $form['settings']['shape'] = array(
    '#title' => t("Shape"),
    '#type' => 'select',
    '#options' => array(
      'leaderboard' => t("Leaderboard"),
      'box300x250' => t("300x250"),
      'box400x400' => t("400x400"),
      'skyscraper' => t("Skyscraper"),
    ),
    '#default_value' => _skyscanner_block_setting_flight_search('shape'),
  );

  $form['settings']['culture'] = array(
    '#type' => 'textfield',
    '#title' => t("Culture"),
    '#maxlength' => 2,
    '#size' => 4,
    '#description' => t("Sets snippet's culture to specific cultureID."),
    '#default_value' => _skyscanner_block_setting_flight_search('culture'),
  );

  $form['settings']['new_window'] = array(
    '#type' => 'checkbox',
    '#title' => t("New window"),
    '#description' => t("If true, then clicking on \"Search\" button will open target page in new tab/window, otherwise it will open it in the same window."),
    '#default_value' => _skyscanner_block_setting_flight_search('new_window', TRUE),
  );

  return $form;
}


function skyscanner_block_configure($delta = '') {

  switch ($delta) {
  
    case 'who_flys':
      return skyscanner_block_configure_who_flys();

    case 'flight_search':
      return skyscanner_block_configure_flight_search();
  }
}


function skyscanner_block_save($delta = '', $edit = array()) {

  switch ($delta) {

    case 'who_flys':
      variable_set('skyscanner_block_settings_who_flys', $edit['settings']);
      break;

    case 'flight_search':
      variable_set('skyscanner_block_settings_flight_search', $edit['settings']);
      break;
  }

}


function skyscanner_block_view($delta = '') {
  $block = array();

  switch ($delta) {

    case 'who_flys':
      $block['subject'] = t("Who flys");
      $block['content'] = theme('skyscanner_who_flys', _skyscanner_block_settings_who_flys());
      break;

    case 'flight_search':
      $block['subject'] = t("Flight search");
      $block['content'] = theme('skyscanner_flight_search', _skyscanner_block_settings_flight_search());
      break;
  }
  
  return $block;
}

