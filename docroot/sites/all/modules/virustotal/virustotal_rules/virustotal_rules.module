<?php

/**
 * @file
 * File containing hooks needed for VirusTotal API rules integration.
 *
 * See virustotal_rules.rules.inc for the actual rules plugins.
 */

/**
 * Implements of hook_virustotal_query_alter().
 *
 * Triggers right before an API request is send to VirusTotal.
 */
function virustotal_rules_virustotal_query_alter(&$data, $function) {
  rules_invoke_event('virustotal_rules_event_pre_request', $function);
}

/**
 * Implements of hook_virustotal_result_alter().
 *
 * Triggers right before the API results are returned.
 */
function virustotal_rules_virustotal_result_alter(&$data, $function) {
  rules_invoke_event('virustotal_rules_event_post_request', $data, $function);
}

/**
 * Implements hook_token_info().
 *
 * Provides tokens (replacement patterns) for rules integration.
 */
function virustotal_rules_token_info() {
  // Tokens for VT response datatype.
  $types['virustotal_response'] = array(
    'name' => t('Webform data'),
    'description' => t('Tokens related to VirusTotal response data.'),
  );
  $virustotal_response['response_code'] = array(
    'name' => t('Response code'),
    'description' => t('Returned response status code'),
  );
  $virustotal_response['verbose_msg'] = array(
    'name' => t('Verbose message'),
    'description' => t('Versbose message regarding response code'),
  );
  $virustotal_response['resource'] = array(
    'name' => t('Resource'),
    'description' => t('VirusTotal resource ID (same as sha256)'),
  );
  $virustotal_response['scan_id'] = array(
    'name' => t('Scan ID'),
    'description' => t('Resource ID + unique scan id'),
  );
  $virustotal_response['permalink'] = array(
    'name' => t('Permalink'),
    'description' => t('Permanent URL to scan report'),
  );
  $virustotal_response['md5'] = array(
    'name' => t('MD5 Hash'),
    'description' => t('MD5 hash of file sent'),
  );
  $virustotal_response['sha1'] = array(
    'name' => t('SHA1 Hash'),
    'description' => t('SHA1 hash of file sent'),
  );
  $virustotal_response['sha256'] = array(
    'name' => t('SHA256 Hash'),
    'description' => t('SHA256 hash of file sent'),
  );
  $virustotal_response['scan_date'] = array(
    'name' => t('Scan date'),
    'description' => t('Date of scan'),
  );
  $virustotal_response['positives'] = array(
    'name' => t('Positive findings'),
    'description' => t('Number of positive detections'),
  );
  $virustotal_response['total'] = array(
    'name' => t('Used AV´s'),
    'description' => t('Number of AV´s used'),
  );

  // Tokens for VT scan result datatypes.
  $types['virustotal_scan_result'] = array(
    'name' => t('Webform data'),
    'description' => t('Tokens related to VirusTotal scan result data.'),
  );
  $virustotal_scan_result['av'] = array(
    'name' => t('Product'),
    'description' => t('Name of AV software used'),
  );
  $virustotal_scan_result['version'] = array(
    'name' => t('Version'),
    'description' => t('AV version used'),
  );
  $virustotal_scan_result['result'] = array(
    'name' => t('Result'),
    'description' => t('Result type found'),
  );
  $virustotal_scan_result['update'] = array(
    'name' => t('Update'),
    'description' => t('Timestamp of last update'),
  );

  return array(
    'types' => $types,
    'tokens' => array(
      'virustotal_response' => $virustotal_response,
      'virustotal_scan_result' => $virustotal_scan_result,
    ),
  );
}

/**
 * Implements hook_tokens().
 *
 * Returns all replacement values.
 */
function virustotal_rules_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'virustotal_response' || $type == 'virustotal_scan_result') {
    foreach ($tokens as $name => $original) {
      if (isset($data[$type][$name])) {
        // None of these values should contain html-like stuff -> check_pain().
        $replacements[$original] = check_plain($data[$type][$name]);
      }
    }
  }
  return $replacements;
}
