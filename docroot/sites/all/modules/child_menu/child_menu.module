<?php

/**
 * @file
 * Adds a node to the Main Menu as a child of the parent node.
 */


/**
 * Implements hook_field_info_alter().
 * Add default child menu settings to the entity reference field.
 */
function child_menu_field_info_alter(&$info) {

  // Change the default widget for fields of type 'foo'.
  if (isset($info['entityreference'])) {
    $info['entityreference']['settings']['child_menu'] = 'none';
  }
}

/**
 * Implements hook_form_field_ui_field_edit_form_alter().
 * Add child menu settings selector to the entity reference field.
 */
function child_menu_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#field']['type'] == 'entityreference') {
    $default_value = 'none';

    if (isset($form['instance']['settings']['settings']['#instance']['settings']['child_menu'])) {
      $default_value = $form['instance']['settings']['settings']['#instance']['settings']['child_menu'];
    }

    $form['instance']['settings']['child_menu'] = array(
      '#type'          => 'select',
      '#required'      => FALSE,
      '#title'         => t('Child Menu'),
      '#description'   => t('Automatically add nodes created via a parent node to a menu as a child node. Select which menu to add to.'),
      '#default_value' => $default_value,
      '#empty_option'  => t('Do not add to menu'),
      '#options'       => array('main-menu' => t('Main Menu')),
    );
  }

}


/**
 * Implements hook_form_alter().
 * Alter the node form if it uses Inline Entity Form
 */
function child_menu_form_alter(&$form, &$form_state, $form_id) {
  // Check for Inline Entity Form
  if (!empty($form_state['inline_entity_form'])) {

    $child_menu_not_enabled = TRUE;

    foreach ($form_state['inline_entity_form'] as $key => $inline_entity_form) {
      if (isset($inline_entity_form['instance']['settings']['child_menu']) && $inline_entity_form['instance']['settings']['child_menu'] == 'main-menu') {
        $child_menu_not_enabled = FALSE;
      }
    }

    if ($child_menu_not_enabled) {
      return;
    }

    // Node is being created, or has no menu item, hide inline entity form.
    if (empty($form['nid']['#value']) || empty($form['#node']->menu['mlid'])) {

      $form['field_child_pages']['#access'] = FALSE;

      $form['child_pages_message'] = array(
        '#prefix' => '<div class="inline-message">',
        '#suffix' => '</div>',
        '#markup' => t("<strong>Child pages</strong> can be added here once a menu link is set in <em>Menu settings</em> (below), and the page is saved."),
        '#weight' => 10,
      );

      drupal_add_css(drupal_get_path('module', 'child_menu') . '/css/child_menu.css');
    }
    else { // Node has nid and menu item, process it.
      $form['#after_build'][] = 'child_menu_node_form_after_build';
    }
  }
}

function child_menu_node_form_after_build(&$element, &$form_state) {

  $element['#submit'][] = 'child_menu_form_submit';
  return $element;
}

function child_menu_form_submit(&$form, &$form_state) {
  $menu_items = array();
  $parent_mlid = $form_state['node']->menu['mlid'];

  foreach ($form_state['inline_entity_form'] as $key => $node_form) {

    if (!empty($node_form['entities'])) {

      foreach ($node_form['entities'] as $delta => $entity) {
        $mlid = child_menu_add_node_to_menu($entity['needs_save'], $entity['entity'], $parent_mlid);

        if (!empty($mlid)) {
          $menu_items[] = $mlid;
        }
      }

      // Flush the menu cache if any new menu items have been created.
      if (!empty($menu_items)) {
        menu_cache_clear_all();
      }
    }
  }
}

function child_menu_add_node_to_menu($needs_save, $entity, $parent_mlid) {

  if (!$needs_save) {
    return;
  }

  // We save existing menu items here because Inline Entity Form has a bug
  // which loses menu items when the child node is edited.
  // https://drupal.org/node/2207679
  if (isset($entity->menu['mlid']) && !empty($entity->menu['mlid'])) {
    $item = $entity->menu;
  }
  else {
    $item = array(
      'link_path' => 'node/' . $entity->nid,
      'link_title' => $entity->title,
      'menu_name' => 'main-menu',
      'mlid' => 0,
      'plid' => $parent_mlid,
    );
  }

  $mlid = menu_link_save($item);
  return $mlid;
}

