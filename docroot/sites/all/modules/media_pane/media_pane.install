<?php

/**
 * @file
 * Install file to handle tasks when turning module on and off.
 *
 * Creates multiple fields and adds them to the media pane bundle of the 
 * fieldable panels pane entity.
 */

/**
 * Implements hook_install().
 */
function media_pane_install() {
  // Get correct translate function.
  $t = get_t();

  // Create media field on media pane.
  if (!field_info_field('media_pane_media')) {
    $field = array(
      'cardinality' => '1',
      'locked' => TRUE,
      'field_name' => 'media_pane_media',
      'settings' => array(
        'display_default' => 0,
        'display_field' => 0,
        'uri_scheme' => 'public',
      ),
      'type' => 'file',
    );
    field_create_field($field);
  }

  // Create a field instance for media pane media field on media pane.
  if (!field_info_instance('fieldable_panels_pane', 'media_pane_media', 'media_pane')) {
    $instance = array(
      'entity_type' => 'fieldable_panels_pane',
      'bundle' => 'media_pane',
      'field_name' => 'media_pane_media',
      'label' => $t('Media'),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'module' => 'file_entity',
          'settings' => array(),
          'type' => 'file_rendered',
          'weight' => 1,
        ),
      ),
      'required' => 0,
      'settings' => array(
        'description_field' => 0,
        'file_directory' => 'media_panes',
        'file_extensions' => 'pdf xls ppt doc jpg png esp mp4 mp3',
        'max_filesize' => '',
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'media',
        'settings' => array(
          'allowed_schemes' => array(
            'public' => 'public',
            'youtube' => 'youtube',
            'vimeo' => 'vimeo',
          ),
          'allowed_types' => array(
            'audio' => 'audio',
            'default' => 'default',
            'image' => 'image',
            'video' => 'video',
          ),
          'browser_plugins' => array(
            'library' => 0,
            'media_default--media_browser_1' => 'media_default--media_browser_1',
            'media_internet' => 'media_internet',
            'upload' => 'upload',
          ),
          'progress_indicator' => 'throbber',
        ),
        'type' => 'media_generic',
      ),
    );
    field_create_instance($instance);
  }

  // Create select list field to list available view modes.
  if (!field_info_field('media_pane_view_modes')) {
    $field = array(
      'cardinality' => '1',
      'field_name' => 'media_pane_view_modes',
      'type' => 'list_text',
      'settings' => array(
        // Get list of available view modes using a dynamic function.
        'allowed_values_function' => 'media_pane_get_view_mode_options',
      ),
    );
    field_create_field($field);
  }

  // Create a field instance for media pane view modes field on media pane.
  if (!field_info_instance('fieldable_panels_pane', 'media_pane_view_modes', 'media_pane')) {
    $instance = array(
      'entity_type' => 'fieldable_panels_pane',
      'bundle' => 'media_pane',
      'field_name' => 'media_pane_view_modes',
      'label' => $t('Media view modes'),
      'description' => $t('Select which view mode should be used to display the media.'),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
      'required' => 0,
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'type' => 'options_select',
      ),
    );
    field_create_instance($instance);
  }

  // Create boolean field for the media link.
  if (!field_info_field('media_pane_link')) {
    $field = array(
      'cardinality' => '1',
      'field_name' => 'media_pane_link',
      'type' => 'list_boolean',
      'settings' => array(
        'allowed_values' => array(
          0,
          1,
        ),
      ),
    );
    field_create_field($field);
  }

  // Create a field instance for media link boolean field on media pane.
  if (!field_info_instance('fieldable_panels_pane', 'media_pane_link', 'media_pane')) {
    $instance = array(
      'entity_type' => 'fieldable_panels_pane',
      'bundle' => 'media_pane',
      'field_name' => 'media_pane_link',
      'label' => $t('Use Link Path'),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
      'required' => 0,
      'widget' => array(
        'type' => 'options_onoff',
        'settings' => array(
          'display_label' => 1,
        ),
      ),
    );
    field_create_instance($instance);
  }

  // Create text field for the media link.
  if (!field_info_field('media_pane_link_text')) {
    $field = array(
      'cardinality' => '1',
      'field_name' => 'media_pane_link_text',
      'type' => 'text',
    );
    field_create_field($field);
  }

  // Create a field instance for media link field on media pane.
  if (!field_info_instance('fieldable_panels_pane', 'media_pane_link_text', 'media_pane')) {
    $instance = array(
      'entity_type' => 'fieldable_panels_pane',
      'bundle' => 'media_pane',
      'field_name' => 'media_pane_link_text',
      'label' => $t('Link Path'),
      'description' => $t('Can be a drupal path (e.g node/34) or a complete url (e.g http://example.com/page). Only Applicable to Images.'),
      'settings' => array(
        'text_processing' => 0,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
      'required' => 0,
      'widget' => array(
        'type' => 'text_textfield',
      ),
    );
    field_create_instance($instance);
  }

  // Create boolean field for the media overlay.
  if (!field_info_field('media_pane_overlay')) {
    $field = array(
      'cardinality' => '1',
      'field_name' => 'media_pane_overlay',
      'type' => 'list_boolean',
      'settings' => array(
        'allowed_values' => array(
          0,
          1,
        ),
      ),
    );
    field_create_field($field);
  }

  // Create a field instance for media overlay boolean field on media pane.
  if (!field_info_instance('fieldable_panels_pane', 'media_pane_overlay', 'media_pane')) {
    $instance = array(
      'entity_type' => 'fieldable_panels_pane',
      'bundle' => 'media_pane',
      'field_name' => 'media_pane_overlay',
      'label' => $t('Use Overlay Text'),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
      'required' => 0,
      'widget' => array(
        'type' => 'options_onoff',
        'settings' => array(
          'display_label' => 1,
        ),
      ),
    );
    field_create_instance($instance);
  }

  // Create text field for the media overlay.
  if (!field_info_field('media_pane_overlay_text')) {
    $field = array(
      'cardinality' => '1',
      'field_name' => 'media_pane_overlay_text',
      'type' => 'text',
    );
    field_create_field($field);
  }

  // Create a field instance for media overlay field on media pane.
  if (!field_info_instance('fieldable_panels_pane', 'media_pane_overlay_text', 'media_pane')) {
    $instance = array(
      'entity_type' => 'fieldable_panels_pane',
      'bundle' => 'media_pane',
      'field_name' => 'media_pane_overlay_text',
      'label' => $t('Overlay Text'),
      'description' => $t('This text gets overlayed over the bottom of the media pane with a translucent black background.'),
      'settings' => array(
        'text_processing' => 0,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
      'required' => 0,
      'widget' => array(
        'type' => 'text_textfield',
      ),
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function media_pane_uninstall() {
  // Delete fields created in media_pane_install.
  $fields = array(
    'media_pane_media',
    'media_pane_view_modes',
    'media_pane_link',
    'media_pane_link_text',
    'media_pane_overlay',
    'media_pane_overlay_text',
  );

  foreach ($fields as $field_name) {
    field_delete_field($field_name);
  }
}
