<?php

/**
 * @file
 * Custom Help Text install file.
 */

/**
 * Implements hook_uninstall().
 */
function custom_help_text_uninstall() {
  $vars = array(
    'fieldset',
    'collapsed',
    'collapsible',
    'title',
    'user_default',
  );

  foreach ($vars as $var) {
    variable_del('custom_help_text_' . $var);
  }
}

/**
 * Implements hook_schema().
 */
function custom_help_text_schema() {
  $schema['custom_help_text'] = array(
    'description' => 'Stores help text with paths',
    'export' => array(
      'primary key' => 'name',
      'key name' => 'Machine name',
      'identifier' => 'custom_help_text',
      // Exports will be defined as $custom_help_text.
      'default hook' => 'custom_help_text',
      // Function hook name.
      'api' => array(
        'owner' => 'custom_help_text',
        'api' => 'custom_help_text',
        // Base name for api include files.
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'admin_title' => array(
        'type' => 'varchar',
        'length' => 80,
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The Drupal path',
      ),
      'help' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Help text',
      ),
      'weight' => array(
        'description' => 'The weight',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'options' => array(
        'description' => 'Options for the help text',
        'type' => 'blob',
      )
    ),
    'primary key' => array(
      'name',
    ),
  );

  return $schema;
}

/**
 * Adds the 'name' field to the database for use by the import export feature.
 */
function custom_help_text_update_7011(&$sandbox) {

  $name_field_info = array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
    'description' => 'The name of the help text item',
  );

  db_add_field('custom_help_text', 'name', $name_field_info);
}

/**
 * Adds the 'admin_title' and 'roles' field to the database.
 */
function custom_help_text_update_7012(&$sandbox) {
  $field = array(
    'type' => 'varchar',
    'length' => 80,
    'not null' => TRUE,
    'default' => '',
    'description' => 'The admin title of the help text item',
  );

  db_add_field('custom_help_text', 'admin_title', $field);

  $field = array(
    'type' => 'blob',
    'description' => 'Options for the help text',
  );

  db_add_field('custom_help_text', 'options', $field);
}

/**
 * Set an 'admin_title' and 'name' foreach custom help text.
 */
function custom_help_text_update_7013() {
  $result = db_query("SELECT hid, name FROM {custom_help_text} WHERE name = '' OR admin_title = ''");

  foreach ($result as $record) {
    if (!empty($record->name)) {
      db_query("UPDATE {custom_help_text} SET admin_title = :admin_title WHERE hid = :hid", array(
        ':admin_title' => $record->name,
        ':hid' => $record->hid
      ));
    }
    else {
      db_query("UPDATE {custom_help_text} SET admin_title = :name , name = :name WHERE hid = :hid", array(
        ':name' => 'custom_help_text_' . $record->hid,
        ':hid' => $record->hid
      ));
    }
  }
}

/**
 * Move 'custom_help_text_roles' table to 'options'.
 */
function custom_help_text_update_7014() {
  $result = db_query("SELECT hid, rid FROM {custom_help_text_roles} WHERE hid <> 0 OR rid <> 0");

  $options = array();
  foreach ($result as $record) {
    $options[$record->hid]['roles'][] = $record->rid;
  }

  $result = db_query("SELECT hid FROM {custom_help_text}");

  foreach ($result as $record) {
    if (isset($options[$record->hid])) {
      $value = serialize($options[$record->hid]);
      db_query("UPDATE {custom_help_text} SET options = :value WHERE hid = :hid", array(
        ':value' => $value,
        ':hid' => $record->hid
      ));
    }
  }
}

/**
 * Remove 'custom_help_text_roles' table.
 */
function custom_help_text_update_7015() {
  db_drop_table('custom_help_text_roles');
}

/**
 * Cleanup 'custom_help_text'.'hid' field.
 */
function custom_help_text_update_7016() {
  if (db_field_exists('custom_help_text', 'hid')) {
    db_drop_field('custom_help_text', 'hid');
  }
  db_drop_primary_key('custom_help_text');
  db_drop_unique_key('custom_help_text', 'name');
  db_add_primary_key('custom_help_text', array('name'));
}

/**
 * Convert role ID's to role names.
 */
function custom_help_text_update_7017() {
  $result = db_query("SELECT name, options FROM {custom_help_text}");

  foreach ($result as $record) {

    $options = unserialize($record->options);

    if (isset($options['roles'])) {
      $roles = array();
      foreach ($options['roles'] as $rid) {
        if ($rid != 0 && $role = user_role_load($rid)) {
          $roles[] = $role->name;
        }
      }

      $options['roles'] = $roles;
    }

    db_update('custom_help_text')
      ->fields(array(
        'options' => serialize($options)
      ))
      ->condition('name', $record->name)
      ->execute();
  }
}
