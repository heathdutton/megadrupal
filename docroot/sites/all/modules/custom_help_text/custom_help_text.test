<?php

/**
 * @file
 * Custom Help Text module testing classes.
 */

/**
 * Base class for testing Custom Help Text.
 */
class CustomHelpTextBaseTest extends DrupalWebTestCase {

  protected $full_user;
  protected $default_options = array();
  protected $view_roles = array();

  /**
   * Set up.
   */
  public function setUp() {
    parent::setUp('custom_help_text');

    $permissions = array(
      'administer custom help text',
      'view custom help text',
      'administer blocks',
      'administer nodes',
      'administer site configuration',
      'bypass node access',
      'administer users',
      'create page content',
    );

    $this->full_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->full_user);

    $this->view_roles = array_keys(user_roles(FALSE, 'view custom help text'));

    foreach ($this->view_roles as $rid) {
      $this->default_options["options[roles][{$rid}]"] = TRUE;
    }
  }

  protected function helpText($str) {
    return $str . '-' . md5($str);
  }
}

/**
 * Test visibility of help text on correct path.
 */
class CustomHelpTextPathTest extends CustomHelpTextBaseTest {

  /**
   * Create an array of options for the simpletest module.
   *
   * @return array
   *   The array of options
   */
  public static function getInfo() {
    return array(
      'name' => t('Custom Help Text Path Tests'),
      'description' => t('Tests for the custom help text module.'),
      'group' => t('Custom Help Text'),
    );
  }

  /**
   * Test normal path help text.
   */
  public function testNormalPath() {
    $random_string = trim(DrupalTestCase::randomName());

    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => 'admin/structure/custom-help-text',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;

    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on help page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Test two help messages on same path.
   */
  public function testTwoHelpMessages() {
    $random_string1 = trim(DrupalTestCase::randomName());

    $help_item1 = array(
        'name' => strtolower($random_string1),
        'admin_title' => $random_string1,
        'path' => 'admin/structure/custom-help-text',
        'help' => $this->helpText($random_string1),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item1, t('Save'));

    $random_string2 = trim(DrupalTestCase::randomName());

    $help_item2 = array(
        'name' => strtolower($random_string2),
        'admin_title' => $random_string2,
        'path' => 'admin/structure/custom-help-text',
        'help' => $this->helpText($random_string2),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item2, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item1['help'], '(' . $help_item1['path'] . ') Help text 1 is present on help page.');
    $this->assertText($help_item2['help'], '(' . $help_item2['path'] . ') Help text 2 is present on help page.');

    $this->drupalGet('<front>');

    $this->assertNoText($help_item1['help'], '(' . $help_item1['path'] . ') Help text 1 is not present on the front page.');
    $this->assertNoText($help_item2['help'], '(' . $help_item2['path'] . ') Help text 2 is not present on the front page.');
  }

  /**
   * Test that help messages appear on all pages underneath 'admin/structure/*'.
   */
  public function testAdminBuildStar() {
    $random_string = trim(DrupalTestCase::randomName());

    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => 'admin/structure/*',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on help page');

    $this->drupalGet('admin/structure/block');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on block admin page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Test that help messages appear on all pages underneath 'admin/*'.
   */
  public function testAdminStar() {
    $random_string = trim(DrupalTestCase::randomName());

    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => 'admin/*',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on help page');

    $this->drupalGet('admin/structure/block');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on block admin page');

    $this->drupalGet('admin/people');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on main build page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Test that help messages appear on a page called custom_help_text and two
   * directory levels deep.
   */
  public function testStarStarAdmin() {
    $random_string = trim(DrupalTestCase::randomName());

    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => '*/*/custom-help-text',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on help page');

    $this->drupalGet('admin/structure/block');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on block admin page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Test that help text appears on all pages.
   */
  public function testHelpOnAllPages() {
    $random_string = trim(DrupalTestCase::randomName());

    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => '*',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on help page');

    $this->drupalGet('admin/structure/block');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on block admin page');

    $this->drupalGet('admin/people');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on main build page');

    $this->drupalGet('<front>');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on the front page.');
  }

  /**
   * Check that help text doesn't appear on a page that doesn't
   * show on a 404 page.
   */
  public function testHelpOn404Page() {
    $random_string = trim(DrupalTestCase::randomName());

    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => 'a/path/that/doesnt/exist',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on help page');

    $this->drupalGet($help_item['path']);
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the 404 page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Test that help text appears on new node page.
   */
  public function testHelpOnNewPage() {
    // Create new node.
    $node = array(
      'title' => 'a random title',
      'body[und][0][value]' => 'some body text',
      'status' => 1,
    );
    $this->drupalPost('node/add/page', $node, t('Save'));

    $random_string = trim(DrupalTestCase::randomName());

    // Create help item.
    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => 'node/1',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on help page');

    $this->drupalGet('node/1');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on the new node page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Test a help text on the front page.
   */
  public function testFrontPath() {
    $random_string = trim(DrupalTestCase::randomName());

    // Create help item.
    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => '<front>',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on help page');

    $this->drupalGet('<front>');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }
}

/**
 * Test access rights of a custom help text.
 */
class CustomHelpTextAccessTest extends CustomHelpTextBaseTest {

  /**
   * Create an array of options for the simpletest module.
   *
   * @return array
   *   The array of options
   */
  public static function getInfo() {
    return array(
      'name' => t('Custom Help Text Access Tests'),
      'description' => t('Tests for the custom help text module.'),
      'group' => t('Custom Help Text'),
    );
  }

  /**
   * Test that help text is available to default user role.
   */
  public function testNormalPathWithDefaultAccessibleRole() {
    $random_string = trim(DrupalTestCase::randomName());

    $help_item = array(
        'name' => strtolower($random_string),
        'admin_title' => $random_string,
        'path' => 'admin/structure/custom-help-text',
        'help' => $this->helpText($random_string),
      ) + $this->default_options;
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on help page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Check that help text is viewable for correct user role.
   */
  public function testNormalPathWithCustomAccessibleRole() {
    $permissions = array(
      'administer custom help text',
      'view custom help text'
    );

    $this->drupalLogout();

    $user = $this->drupalCreateUser($permissions);

    $this->drupalLogin($user);

    $random_string = trim(DrupalTestCase::randomName());

    $rid = max(array_keys($user->roles));

    $help_item = array(
      'name' => strtolower($random_string),
      'admin_title' => $random_string,
      'path' => 'admin/structure/custom-help-text',
      'help' => $this->helpText($random_string),
      'options[roles][' . $rid . ']' => TRUE,
    );

    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is present on help page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }

  /**
   * Test that help text isn't available for user with no access.
   */
  public function testNormalPathWithNonAccessibleRole() {
    $random_string = trim(DrupalTestCase::randomName());
    $permissions = array(
      'view custom help text',
    );
    $rid = $this->drupalCreateRole($permissions, 'Random Role');

    $help_item = array(
      'name' => strtolower($random_string),
      'admin_title' => $random_string,
      'path' => 'admin/structure/custom-help-text',
      'help' => $this->helpText($random_string),
      'options[roles][' . $rid . ']' => TRUE,
    );
    $this->drupalPost('admin/structure/custom-help-text/add', $help_item, t('Save'));

    $this->drupalGet('admin/structure/custom-help-text');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on help page');

    $this->drupalGet('<front>');
    $this->assertNoText($help_item['help'], 'Help text "' . $help_item['help'] . '" for path "' . $help_item['path'] . '" is not present on the front page.');
  }
}
