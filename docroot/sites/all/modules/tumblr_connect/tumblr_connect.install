<?php


/**
 * @file
 * install , uninstall, database schema.
 */

/**
 * Implements hook_uninstall().
 */
function tumblr_connect_uninstall() {
  cache_clear_all(801, 'cache_tumblr_connect');
  variable_del('tumblr_block_items');
  variable_del('tumblr_block_num_columns');
}

/**
 * Implements hook_schema().
 */
function tumblr_connect_schema() {
  $schema['cache_tumblr_connect'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_tumblr_connect']['description'] = t('Cache table for tumblr connect items.');
  $schema['tumblr_connect_node'] = array(
      'description' => 'stores a copy of remote tumblrs post.',
      'fields' => array(
          'id' => array(
              'description' => 'The primary identifier for tumblr connect.',
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE),
          'nid' => array(
              'description' => 'The primary identifier for the record.',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE),
          'vid' => array(
              'description' => 'Foreign Key to the User table',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0),
          'post_id' => array(
              'description' => 'A short alias or name for this user',
              'type' => 'int',
              'size' => 'big',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0),
      ),
      'indexes' => array(
          'post_nid' => array('nid'),
          'post_id' => array('post_id'),
      ),
      'unique keys' => array(
          'id' => array('id')
      ),
      'primary key' => array('id'),
  );

  $schema['tumblr_connect_batch'] = array(
      'description' => 'Record scheduled for batch update on tumblr.',
      'fields' => array(
          'id' => array(
              'description' => 'The primary identifier for tumblr connect.',
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE),
          'nid' => array(
              'description' => 'The primary identifier for the record.',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE),
          'vid' => array(
              'description' => 'Foreign Key to the User table',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0),
          'post_id' => array(
              'description' => 'A short alias or name for this user',
              'type' => 'int',
              'size' => 'big',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'default' => 0),
          'operation' => array(
              'description' => 'add, modify or delete',
              'type' => 'varchar',
              'length' => 3,
              'not null' => TRUE,
              'default' => ''),
      ),
      'indexes' => array(
          'post_nid' => array('nid'),
          'post_id' => array('post_id'),
      ),
      'unique keys' => array(
          'id' => array('id')
      ),
      'primary key' => array('id', 'nid', 'vid'),
  );

  /*
   * a remote follower who resides on the remote tumblr service
   */
  $schema['tumblr_follower'] = array(
      'description' => 'Someone who is following us on our Tumblr Log.',
      'fields' => array(
          'id' => array(
              'description' => 'The primary identifier for tumblr follower.',
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE),
          'name' => array(
              'description' => 'The followers name or alias',
              'type' => 'varchar',
              'length' => 80,
              'not null' => TRUE,
              'default' => ''),
          'image' => array(
              'description' => 'url locatation of the follower image',
              'type' => 'varchar',
              'length' => 80,
              'not null' => TRUE,
              'default' => ''),
          'url' => array(
              'description' => 'url location of the follower tumblr log',
              'type' => 'varchar',
              'length' => 160,
              'not null' => TRUE,
              'default' => ''),
      ),
      'indexes' => array(
          'follower_id' => array('id'),
      ),
      'unique keys' => array(
          'id' => array('id')
      ),
      'primary key' => array('id'),
  );

  /*
   * configuration settings for our module.
   */
  $schema['tumblr_connect_config'] = array(
      'description' => 'tumblr connect module settins.',
      'fields' => array(
          'id' => array(
              'description' => 'The primary identifier for tumblr config.',
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE),
          'email' => array(
              'description' => 'email login for remote tumblr account',
              'type' => 'varchar',
              'length' => 256,
              'not null' => TRUE,
              'default' => ''),
          'password' => array(
              'description' => 'password for remote tumblr account',
              'type' => 'varchar',
              'length' => 128,
              'not null' => TRUE,
              'default' => ''),
          'url' => array(
              'description' => 'base url locatation for remote tumblr log (blog)',
              'type' => 'varchar',
              'length' => 256,
              'not null' => TRUE,
              'default' => ''),
          'teaser_only' => array(
              'description' => 'boolean setting publish teaser only = 1, full body = 0',
              'type' => 'int',
              'size' => 'tiny',
              'not null' => TRUE,
              'default' => 1),
          'content_types' => array(
              'description' => 'a serialized array of drupal content type names',
              'type' => 'text',
              'not null' => TRUE,
              'size' => 'big',
          ),
      ),
      'indexes' => array(
          'follower_id' => array('id'),
      ),
      'unique keys' => array(
          'id' => array('id')
      ),
      'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Use requirements to ensure that the cURL is present and enabled.
 *
 */
function tumblr_connect_requirements($phase) {
  $t = get_t();
  $requirements = array();

  if (function_exists("curl_version") == 'Enabled') {
    $requirements['tumblr_connnect_curl_dependency'] = array(
        'title' => t('cURL Avialalbe'),
        'severity' => REQUIREMENT_OK,
        'value' => t('Exists'),
    );
  }
  else {
    $requirements['tumblr_connnect_curl_dependency']['description'] = t('Tumblr Connect Requires cURL library installed and enabled.');
    $requirements['tumblr_connnect_curl_dependency']['severity'] = REQUIREMENT_ERROR;
    $requirements['tumblr_connnect_curl_dependency']['value'] = t('Unable to create');
  }
  return $requirements;
}