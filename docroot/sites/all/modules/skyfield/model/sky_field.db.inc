<?php/** * Add new fields in database. * * @param array $field *   Associative field array. * * @return SAVED_NEW/FALSE *   If the record insert failed, returns FALSE. If it succeeded, returns SAVED_NEW. */function sky_field_db_field_insert(&$field) {  return drupal_write_record('sky_field', $field);}/** * Update fields in database. * * @param array $field *   Associative field array. * @param array $keys *   Indexed array of keys. This keys will be added in conditions with values from $field. * * @return SAVED_UPDATED/FALSE *   If the record update failed, returns FALSE. If it succeeded, returns SAVED_UPDATED. */function sky_field_db_field_update(&$field) {  return drupal_write_record('sky_field', $field, 'id');}/** * Delete fields from database. * * @param array $field *   Associative field array. * @param array $keys *   Indexed array of keys. This keys will be added in conditions with values from $field. * * @return numeric *   Count of deleted records. */function sky_field_db_field_delete($values) {  $query = db_delete('sky_field');  foreach ($values as $key => $value) {    $query->condition('sky_field.' . $key, $value);  }  $output = $query->execute();  return $output;}/** * Select sky_fields. *  * @param object $node * @return array of sky_fields  */function sky_field_db_sky_fields_select($entity_type, $entity) {  $entity_id = sky_field_get_entity_id($entity_type, $entity);  $values = array(    'entity_id' => $entity_id,    'entity_type' => $entity_type  );  return sky_field_db_field_select($values);}/** * Get fields from database. * * @param array $field *   Associative field array. * @param array $keys *   Indexed array of keys. This keys will be added in conditions with values from $field. * * @return array *   Array of fields arrays. */function sky_field_db_field_select($values) {  $query = db_select('sky_field');  $query->fields('sky_field');  foreach ($values as $key => $value) {    $query->condition('sky_field.' . $key, $value);  }  $query->orderBy('weight', 'ASC');  $result = $query->execute();  $sky_fields = $result->fetchAll(PDO::FETCH_ASSOC);  foreach ($sky_fields as $key => $sky_field) {    if (!empty($sky_field['settings'])) {      $sky_fields[$key]['settings'] = unserialize($sky_field['settings']);    }    else {      $sky_fields[$key]['settings'] = array();    }  }  return $sky_fields;}