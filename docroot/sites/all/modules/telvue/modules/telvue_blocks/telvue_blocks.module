<?php

/**
 * Implements hook_block_info().
 *
 * This hook declares to Drupal what blocks are provided by the module.
 */
function telvue_blocks_block_info() {
  $blocks['telvue_blocks_playing_now'] = array(
    'info'       => t('Telvue: Now Playing'),
    'status'     => FALSE,
    'region'     => 'sidebar_first',
    'weight'     => -99,
    'visibility' => 1,
    'pages'      => '<front>',
  );

  $blocks['telvue_blocks_next'] = array(
    'info'       => t('Telvue: Next Airing'),
    'status'     => FALSE,
    'region'     => 'sidebar_first',
    'weight'     => 0,
    'visibility' => 1,
    'pages'      => 'node/*',
  );
  
   $blocks['telvue_blocks_now_and_next'] = array(
    'info'       => t('Telvue: Now Playing and Next'),
    'status'     => FALSE,
    'region'     => 'sidebar_first',
    'weight'     => 0,
    'visibility' => 1,
    'pages'      => '<front>',
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function telvue_blocks_block_configure($delta = '') {
  // The $delta parameter tells us which block is being configured.
  // In this example, we'll allow the administrator to customize
  // the text of the 'configurable text string' block defined in this module.

  $form = array();
  if ($delta == 'telvue_blocks_playing_now') {
    // All we need to provide is the specific configuration options for our
    // block. Drupal will take care of the standard block configuration options
    // (block title, page visibility, etc.) and the save button.
    $form['telvue_blocks_string'] = array(
      '#type' => 'textfield',
      '#title' => t('Block contents'),
      '#size' => 60,
      '#description' => t('This text will appear in the example block.'),
      '#default_value' => variable_get('telvue_blocks_string',  t('Some example content.')),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * This hook declares how the configured options for a block
 * provided by this module are saved.
 */
function telvue_blocks_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'telvue_blocks_playing_now') {
    // Have Drupal save the string to the database.
    variable_set('telvue_blocks_string', $edit['telvue_blocks_string']);
  }
  return;
}

/**
 * Implements hook_block_view().
 *
 */
function telvue_blocks_block_view($delta = '') {
  switch ($delta) {
    case 'telvue_blocks_playing_now':
      $block['subject'] = t('Telvue: Now Playing');
      $block['content'] = telvue_blocks_contents($delta);
      break;
    case 'telvue_blocks_next':
      $block['subject'] = t('Telvue: Playing Next');
      $block['content'] = telvue_blocks_contents($delta);
      break;
    case 'telvue_blocks_now_and_next':
      $block['subject'] = t('Tevlue: Now and Next');
      $block['content'] = telvue_blocks_contents($delta);
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function telvue_blocks_contents($which_block) {
  if (!variable_get('telvue_uri', '')) {
    drupal_set_message('Telvue module must be configured before a Playing Now or Next block can be used.', 'error');
    return;
  } 
  switch ($which_block) {
    case 'telvue_blocks_playing_now':
          
      $feed = variable_get('telvue_uri', '') . '/xml/nowplaying';
      $show = telvue_blocks_get_playing_rss($feed);
      
      return theme('telvue_blocks_playing_now', array('show' => $show));
      
      
    case 'telvue_blocks_next':
    
      $feed = variable_get('telvue_uri', '') . '/xml/nextplaying';
      $show = telvue_blocks_get_playing_rss($feed);
      
      return theme('telvue_blocks_show_next', array('show' => $show));
      
      
    case 'telvue_blocks_now_and_next':
      
      drupal_add_css(drupal_get_path('module', 'telvue') . '/css/telvue.css');
    
      $feed = variable_get('telvue_uri', '') . '/xml/nowplaying';
      $now = telvue_blocks_get_playing_rss($feed);
      
      $feed = variable_get('telvue_uri', '') . '/xml/nextplaying';
      $next = telvue_blocks_get_playing_rss($feed);
      
      return theme('telvue_blocks_now_and_next', array('now' => $now, 'next' => $next));
  }
}

/*
 * The following hooks can be used to alter blocks
 * provided by your own or other modules.
 */

/**
 * Implements hook_block_list_alter().
 */
function telvue_blocks_block_list_alter(&$blocks) {
  // We are going to make the search block sticky on bottom of regions. For
  // this example, we will modify the block list and append the search block at
  // the end of the list, so even if the administrator configures the block to
  // be on the top of the region, it will demote to bottom again.
  foreach ($blocks as $bid => $block) {
    if (($block->module == 'search') && ($block->delta == 'form')) {
      // Remove the block from the list and append to the end.
      unset($blocks[$bid]);
      $blocks[$bid] = $block;
      break;
    }
  }
}

/**
 * Implements hook_block_view_alter().
 *
 */
function telvue_blocks_block_view_alter(&$data, $block) {
  // Verify the we have raw text content
  if (!isset($data['content']) || !is_string($data['content'])) {
    return;
  }

  // If the content contains the string: 'magic string', uppercase the title.
  if (strstr($data['content'], 'magic string')) {
    $data['subject'] = isset($data['subject']) ? drupal_strtoupper($data['subject']) : '';
  }
}

/**
 * Returns Show as Array
 */
function telvue_blocks_get_playing_rss($feed) {

  if (variable_get('telvue_blocks_cache', 0)) {
    if (($cache == cache_get($feed)) && !empty($cache->data)) {
      return $cache->data;
    }
  } else {
  
      $rawFeed = file_get_contents($feed);
      $xml = new SimpleXmlElement($rawFeed);
            
      foreach ($xml->channel->item as $item) {   

        $show = array();
        $show['title'] = (string) $item->title;
        
        //IF TELVUE RETURNS NA
        if ($show['title'] == 'NA') {
          
          $error = variable_get('telvue_connection_error', '');
      
          //BECAUSE THE TELVUE DOESN'T RETURN ANYTHING OTHER THAN A TITLE
          //WHEN NA, AN UNSET telvue_blocks_connection_error RETURNS NOTHING
          $show['title'] = $error;
          $show['cleantitle'] = $error;
          $show['starttimestamp'] = NULL;
          return $show;   
        } 
         
        $show['link'] = (string) $item->link;
        $show['description'] = (string) $item->description;
        $show['pubDate'] = (string) $item->pubDate;
        $show['guid'] = (string) $item->guid;
    
        //Clean up Title
        $titleparts = explode(' - ', $show['title']);
        $show['cleantitle'] = $titleparts[0];
        $show['starttimestamp'] = strtotime($titleparts[1]);

        //Multiple categories
        foreach ($item->category as $category) {
          $show['category'][] = (string) $category;
        }
      
        //Telvue Specific Namespace Elements
        // First get the base URI
        $uriparts = explode('/xml/', $feed);
        $dc = $item->children($uriparts[0] . '/psg_namespace/'); 

        $show['eventId'] = (string) $dc->eventId;
        $show['duration'] = (string) $dc->duration;
        $show['elapsed'] = (string) $dc->elapsed;
        $show['eventId'] = (string) $dc->eventId;
        $show['thumbnail'] = (string) $dc->thumbnail;   
        
        if ($show['duration']) {
          $show['endtimestamp'] = ($show['starttimestamp'] + telvue_hms2sec($show['duration']));
        } else {
          $show['endtimestamp'] = NULL;
        }
      }
    
      
    if (variable_get('telvue_blocks_cache', 0)) {
      //since the nextplaying feed doesn't include duration, $show['endtimestamp'] 
      // can't be calculated. Use the start since that will be in the future
      if ($show['endtimestamp']){
        cache_set($feed, $show, 'cache', $show['endtimestamp']);
      } else {
        cache_set($feed, $show, 'cache', $show['starttimestamp']);
      }
    }
  }
  return $show;
}

/**
 * Implements hook_theme().
 *
 */
function telvue_blocks_theme() {

  return array(
    'telvue_blocks_playing_now' => array(
      'template' => 'templates/telvue-blocks-playing-now',
      'variables' => array('show' => NULL),
    ),
    'telvue_blocks_next_' => array(
      'template' => 'templates/telvue-blocks-next',
      'variables' => array('show' => NULL),
    ),
    'telvue_blocks_now_and_next' => array(
      'template' => 'templates/telvue-blocks-now-and-next',
      'variables' => array('now' => NULL, 'next' => NULL),
    ),
  );
}
