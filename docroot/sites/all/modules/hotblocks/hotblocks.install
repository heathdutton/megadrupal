<?php

/**
 * @file
 * Install, update and uninstall functions for the hotblocks module.
 * 
 * @todo - Uninstall hook should remove variables set in the variables table
 */

/**
 * Implements hook_schema().
 * @todo Provide descriptions for table fields
 */
function hotblocks_schema() {
  // Hotblocks table
  $schema['hotblocks'] = array(
    'fields' => array(
      'hid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'weight' => array(
        'type' => 'int',
        'unsigned' => false,
        'not null' => false,
        'default' => null,
      ),
      'delta' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'Unique ID for block within a module.',
      ),
      'vis_type' => array(
        'type' => 'varchar',
        'not null' => false,
        'default' => null,
        'length' => 255,
      ),
      'vis_arg' => array(
        'type' => 'varchar',
        'not null' => false,
        'default' => null,
        'length' => 255,
      ),
      'path' => array(
        'type' => 'varchar',
        'not null' => false,
        'default' => null,
        'length' => 255,
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'not null' => false,
        'default' => null,
        'length' => 255,
      ),
      'global' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('hid'),
    'indexes' => array(
      'hotblocks_entity_id' => array('entity_id'),
      'hotblocks_path' => array('path'),
      'hotblocks_delta' => array('delta'),
    ),
  );

  // Hotblocks weight table
  $schema['hotblocks_weight'] = array(
    'fields' => array(
      'hid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'weight' => array(
        'type' => 'int',
        'unsigned' => false,
        'not null' => false,
        'default' => null,
      ),
      'delta' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'Unique ID for block within a module.',
      ),
      'path' => array(
        'type' => 'varchar',
        'not null' => FALSE,
        'default' => null,
        'length' => 255,
      ),
    ),
    //'primary key' => array('hid'),
    'indexes' => array(
      'hotblocks_weight_hid' => array('hid'),
      'hotblocks_weight_path' => array('path'),
      'hotblocks_weight_delta' => array('delta'),
    ),
  );

  // Hotblocks Settings table
  $schema['hotblocks_settings'] = array(
    'description' => 'Storage for defined hotblocks and their settings.',
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'Unique ID for block within a module.',
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'Human readable label',
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'translatable' => TRUE,
        'serialize' => TRUE,
      ),
    ),
    'export' => array(
      'key' => 'machine_name',
      'identifier' => 'hotblocks_settings',
      'default hook' => 'hotblocks_default_hotblocks',  // Function hook name.
      'api' => array(
        'owner' => 'hotblocks',
        'api' => 'hotblocks',  // Base name for api include files.
        'minimum_version' => 3,
        'current_version' => 3,
      ),
      //'export callback' => 'context_export',
    ),
    'primary key' => array('machine_name'),
  );

  return $schema;
}

/**
 * Clean up unused variables from the variables table.
 */
function hotblocks_update_7200() {
  // This variable is no longer used
  variable_del('hotblocks_assign_sort_default');
}

/**
 * Convert delta field from 'int' to 'varchar'<br />
 * Assign machine names to existing hotblocks<br />
 * Create hotblocks_settings table
 */
function hotblocks_update_7201() {
  // Define our new delta field as it will be used in both the hotblocks and hotblocks_weight tables
  $field = array(
    'type'        => 'varchar',
    'length'      => 128,
    'not null'    => FALSE,
    'default'     => NULL,
    'description' => 'Unique ID for block within a module.',
  );

  // Change for hotblocks_weight table
  $keys = array(
    'indexes' => array(
      'hotblocks_weight_delta' => array('delta'),
    ),
  );
  db_drop_index('hotblocks_weight', 'hotblocks_weight_delta');
  db_change_field('hotblocks_weight', 'delta', 'delta', $field, $keys);

  // Change for hotblocks table
  $keys = array(
    'indexes' => array(
      'hotblocks_delta' => array('delta'),
    ),
  );
  db_drop_index('hotblocks', 'hotblocks_delta');
  db_change_field('hotblocks', 'delta', 'delta', $field, $keys);

  // Create our new settings table
  $hotblocks_settings_table = array(
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'Unique ID for block within a module.',
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'translatable' => TRUE,
        'serialize' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'Human readable label',
      ),
    ),
    'export' => array(
      'key' => 'machine_name',
      'identifier' => 'hotblocks_settings',
      'default hook' => 'hotblocks_default_hotblocks',  // Function hook name.
      'api' => array(
        'owner' => 'hotblocks',
        'api' => 'hotblocks',  // Base name for api include files.
        'minimum_version' => 3,
        'current_version' => 3,
      ),
      //'export callback' => 'context_export',
    ),
    'primary key' => array('machine_name'),
  );
  db_create_table('hotblocks_settings', $hotblocks_settings_table);

  // Rebuild schema right away so we can use drupal_write_record
  drupal_get_schema('hotblocks_settings', TRUE);

  // Get the number of blocks configured in settings
  $iNumBlocks = variable_get('hotblocks_blockcount', 3);

  // Save machine names for any blocks that don't already have them - this makes sure that existing blocks will have
  // deltas/machine names that match what may already be in the hotblocks table (numeric deltas)
  for ($i = 1; $i <= $iNumBlocks; $i++) {
    $record = array(
      'machine_name' => $i,
      'label' => variable_get("hotblocks_block_name_$i", 'Hot Block ' . $i),
      'data' => '',
    );
    drupal_write_record('hotblocks_settings', $record);

    // Remove unused variables
    variable_del("hotblocks_block_name_$i");
    variable_del('hotblocks_blockcount');
  }
}


/**
 * Implements hook_uninstall
 */
function hotblocks_uninstall() {
  // Clean up variables from the variables table
  // @todo - there are quite a few more of these that need to be found and removed on uninstall
  variable_del('hotblocks_block_settings');
  variable_del('hotblocks_assign_sort_default');
}