<?php

/**
 * @file
 * hdfc payment gateway integration with Drupal Commerce.
 */

/**
 * Implements hook_help().
 */
function commerce_hdfc_help($path, $arg) {
  switch ($path) {
    case 'admin/help#commerce_hdfc':
      $output = '';
      $output .= '<h3>' . t('Summary') . '</h3>';

      $output .= '<p>' . t('Integrates HDFC Payment Gateway with Drupal Commerce') . '</p>';

      $output .= '<h3>' . t('Requirements') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('Commerce Kickstart 7.x - https://drupal.org/project/commerce_kickstart') . '</li>';

      $output .= '<p>' . t('OR') . '</p>';

      $output .= '<li>' . t('Drupal 7.x - https://drupal.org/project/drupal') . '</li>';

      $output .= '<ul>';

      $output .= '<li>' . t('commerce module') . '</li>';

      $output .= '<li>' . t('commerce_payment module') . '</li>';

      $output .= '<li>' . t('commerce_ui module') . '</li>';

      $output .= '<li>' . t('commerce_order module') . '</li>';

      $output .= '</ul>';

      $output .= '</ul>';

      $output .= '<h3>' . t('Installation') . '</h3>';
      $output .= '<ol>';
      $output .= '<li>' . t('The module MUST be placed in /sites/all/modules so that the PATH to module will be: [DRUPAL-ROOT-FOLDER]/sites/all/modules/commerce_hdfc. Enable the module') . '</li>';

      $output .= '<li>' . t('Click on configure link next to the enabled module and go to: admin/commerce/config/payment-methods') . '</li>';

      $output .= '<ul>';

      $output .= '<li>' . t('Enable - Commerce HDFC Payment Gateway - payment method rule') . '</li>';

      $output .= '<li>' . t('Click on edit') . '</li>';

      $output .= '<li>' . t('In the Actions - click on edit next to  - Enable payment method: Commerce HDFC Payment Gateway') . '</li>';

      $output .= '<li>' . t('Get your merchant account from HDFC Payment Gateway. Enter the details in Payment Settings') . '</li>';

      $output .= '</ul>';

      $output .= '<li>' . t('Clear cache - admin/config/development/performance') . '</li>';

      $output .= '</ol>';
      return $output;
}
}

/**
 * Payment method callback: settings form.
 */
function hdfc_settings_form($settings = NULL) {
  $form = array();
  $settings = (array) $settings + array(
    'merchant_id' => '',
    'working_key' => '',
    'res_ip_1' => '',
    'res_ip_2' => '',
    'res_ip_3' => '',
    'site_base_url' => '',
    'pg_auth_url' => '',
    'pg_dual_url' => '',
  );
  $form['merchant_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Tranportal ID'),
    '#default_value' => $settings['merchant_id'],
    '#required' => TRUE,
  );
  $form['working_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Tranportal Password'),
    '#default_value' => $settings['working_key'],
    '#required' => TRUE,
  );
  $form['res_ip_1'] = array(
    '#type' => 'textfield',
    '#title' => t('Response IP Address 1'),
    '#default_value' => $settings['res_ip_1'],
    '#required' => TRUE,
  );
  $form['res_ip_2'] = array(
    '#type' => 'textfield',
    '#title' => t('Response IP Address 2'),
    '#default_value' => $settings['res_ip_2'],
    '#required' => TRUE,
  );
  $form['res_ip_3'] = array(
    '#type' => 'textfield',
    '#title' => t('Response IP Address 3'),
    '#default_value' => $settings['res_ip_3'],
    '#required' => TRUE,
  );
  $form['pg_auth_url'] = array(
    '#type' => 'textfield',
    '#title' => t('HDFC Purchase - Auth Request URL'),
    '#description' => t("Payment Gateway's Test / Production Purchase - Auth Request URL"),
    '#default_value' => $settings['pg_auth_url'],
    '#required' => TRUE,
  );
  $form['pg_dual_url'] = array(
    '#type' => 'textfield',
    '#title' => t('HDFC Dual Verification Request URL'),
    '#description' => t("Payment Gateway's Test / Production Dual Verification Request URL"),
    '#default_value' => $settings['pg_dual_url'],
    '#required' => TRUE,
  );
  $form['site_base_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Site URL'),
    '#description' => t('Your drupal site url eg. http://example.com ; http://example.com/drupal - NO trailing slash!'),
    '#default_value' => $settings['site_base_url'],
    '#required' => TRUE,
  );
  return $form;
}

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_hdfc_commerce_payment_method_info() {
  $payment_methods = array();
  $payment_methods['hdfc'] = array(
    'base' => 'hdfc',
    'title' => t("Commerce HDFC Payment Gateway"),
    'display_title' => "Commerce HDFC Payment Gateway",
    'short_title' => 'Commerce HDFC Payment Gateway',
    'description' => t("Payment method - Commerce HDFC Payment Gateway"),
    'terminal' => TRUE,
    'offsite' => TRUE,
    'offsite_autoredirect' => TRUE,
  );
  return $payment_methods;
}

/**
 * Payment method callback: redirect form.
 */
function hdfc_redirect_form($form, &$form_state, $order, $payment_method) {
  $wrapper = entity_metadata_wrapper('commerce_order', $order);
  $currency_code = $wrapper->commerce_order_total->currency_code->value();
  $amount = $wrapper->commerce_order_total->amount->value()/100;
  $return_url = url('checkout/' . $order->order_id . '/payment/return/' . $order->data['payment_redirect_key'], array('absolute' => TRUE));
  $merchant_id = $payment_method['settings']['merchant_id'];
  $working_key = $payment_method['settings']['working_key'];
  $res_ip_1 = $payment_method['settings']['res_ip_1'];
  $res_ip_2 = $payment_method['settings']['res_ip_2'];
  $res_ip_3 = $payment_method['settings']['res_ip_3'];
  $pg_auth_url = $payment_method['settings']['pg_auth_url'];
  $pg_dual_url = $payment_method['settings']['pg_dual_url'];
  $site_base_url = $payment_method['settings']['site_base_url'];
  $order_id = $order->order_id;
  $form['merchant_id'] = array(
    '#type' => 'hidden',
    '#value' => $merchant_id,
  );
  $form['working_key'] = array(
    '#type' => 'hidden',
    '#value' => $working_key,
  );
  $form['res_ip_1'] = array(
    '#type' => 'hidden',
    '#value' => $res_ip_1,
  );
  $form['res_ip_2'] = array(
    '#type' => 'hidden',
    '#value' => $res_ip_2,
  );
  $form['res_ip_3'] = array(
    '#type' => 'hidden',
    '#value' => $res_ip_3,
  );
  $form['pg_auth_url'] = array(
    '#type' => 'hidden',
    '#value' => $pg_auth_url,
  );
  $form['pg_dual_url'] = array(
    '#type' => 'hidden',
    '#value' => $pg_dual_url,
  );
  $form['site_base_url'] = array(
    '#type' => 'hidden',
    '#value' => $site_base_url,
  );
  $form['amount'] = array(
    '#type' => 'hidden',
    '#value' => $amount ,
  );
  $form['order_id'] = array(
    '#type' => 'hidden',
    '#value' => $order_id,
  );
  $form['redirect_url'] = array(
    '#type' => 'hidden',
    '#value' => $return_url,
  );
  $link = $site_base_url . "/" . drupal_get_path('module', 'commerce_hdfc') . "/includes/send_perform_request.php";
  $form['#action'] = $link;
  return $form;
}

/**
 * Implements hook_entity_view_alter().
 */
function commerce_hdfc_entity_view_alter(&$build, $type) {
  switch ($type) {
    case 'commerce_order':
      if ($build['#view_mode'] === 'administrator') {
        $order = $build['#entity'];

        $build['status'] = array(
          '#type' => 'fieldset',
          '#title' => t('Order details'),
          '#weight' => -100,
        );

        $build['status']['markup'] = array(
          '#prefix' => '<dl>',
          '#suffix' => '</dl>',
          array('#markup' => sprintf('<dt>%s</dt><dd>%s<dd>', t('Status'), $order->status)),
          array('#markup' => sprintf('<dt>%s</dt><dd>%s<dd>', t('E-mail'), $order->mail)),
        );
  }
      break;
 }
}
