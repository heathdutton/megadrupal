<?php

/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
function simplyhired_search_permission() {
	return array(
		'use simplyhired search' => array(
			'title' => t('Use SimplyHired search'),
			'description' => t('Allows users to use the SimplyHired basic job search.'),
		),
		'use simplyhired advanced search' => array(
			'title' => t('Use SimplyHired advanced search'),
			'description' => t('Allows users to use the SimplyHired advanced job search.'),
		),
	);
}

function simplyhired_search_search_info() {
	return array(
		'title' => t('Jobs'),
		'path' => 'jobs',
		'conditions_callback' => 'simplyhired_search_callback_search_conditions',
	);
}

function simplyhired_search_callback_search_conditions($keys) {
	$conditions = array();
	// possible search filters.
	$possible = array(
		'location',
		'miles',
		'sort',
		'size',
	);
	for ( $i=0;$i<count($possible);$i++ ) {
		$conditions[$possible[$i]] = urldecode( search_expression_extract( $keys, $possible[$i] ) );
	}

	return $conditions;
}

function simplyhired_search_search_execute($keys = NULL, $conditions = NULL) {
	$results = array();
	$page = pager_find_page();
	/*
	 * The SimplyHired API lets specific searches by company, job title,
	 * and O*net code in the following forms:
	 * 
	 * company:(Apple)
	 * title:(Production Engineer)
	 * onet:(13-205*)
	 * 
	 * To allow for this type of search with the way Drupal passes in search
	 * keys, we'll make a copy of the keys and strip out all $conditions and
	 * pass the remainder to the API.
	 */
	$possible = array(
		'location',
		'miles',
		'sort',
		'size',
		'source',
	);
	
	// Make a copy of the original search keys so we can clean it before
	// sending to SimplyHired.
	$search_query = $keys;
	$s = $r = array();
	foreach ( $possible as $p ) {
		if ( !isset( $conditions[$p] ) ) {
			$conditions[$p] = NULL;
		  continue;
		} else {
			$s[] = $p . ':' . urlencode($conditions[$p]);
			$r[] = '';
		}
	}
	
	if (intval($conditions['size']) <= 0) {
		$conditions['size'] = 10;
	} elseif ( intval($conditions['size']) > 100 ) {
		// SimplyHired only lets you get 100 rows max at a time.
		$conditions['size'] = 100;
	}
	
	if (!isset ($conditions['source'])) {
		$conditions['source'] = variable_get('simplyhired_source', 'us');
	}
	$conditions['page'] = $page;
	// Remove the conditions from the search string
	$search_query = trim(str_replace($s, $r, $search_query));
	$exerpt = variable_get('simplyhired_search_exerpt', 0) == 0 ? TRUE : FALSE;
	// Here is where the SimplyHired library is loaded and the search is called.
	$search = simplyhired_search($search_query, $exerpt, $conditions);
	
	if ( count($search['items']) ) {
		pager_default_initialize($search['total_visible'], $conditions['size']);
	}
	
	foreach ($search['items'] as $item) {
		
		$source = $item->getSource();
		$company = $item->getCompany();
		$extra = array(
			'company' => check_plain($company['name']),
			'location' => check_plain($item->getRawLocation()),
			'date' => $item->getPostDate('F j, Y'),
		);
		
		$results[] = array(
			'title' => $item->getJobTitle(),
			'link' => $source['url'],
			'type' => 'external',
			'date' => $item->getPostDate(),
			'snippet' => $exerpt ? search_excerpt($keys, $item->getExerpt()) : $item->getExerpt(),
			'language' => variable_get('simplyhired_source', 'us'),
			'author' => FALSE,
			'extra' => $extra,
		);
	}
	
	return $results;
}

function simplyhired_search_search_access() {
	return user_access('use simplyhired search');
}

function simplyhired_search_search_validate($form, &$form_state) {
	$keys = $form_state['values']['processed_keys'];
	
	$possible = array(
		'location',
		'miles',
		'sort',
		'size',
		'job_type',
    'employer_type',
    'special',
    'education',
    'post_date'
	);
	
	for ($i=0;$i<count($possible);$i++) {
		if ( isset( $form_state['values'][$possible[$i]] ) ) {
			$value = trim( $form_state['values'][$possible[$i]] );
			if ( empty( $value ) ) {
				continue;
			}
			$keys = search_expression_insert($keys, $possible[$i], urlencode($form_state['values'][$possible[$i]]));
		}
	}
	
	if ( !empty( $keys ) ) {
		form_set_value( $form['basic']['processed_keys'], trim($keys), $form_state );
  }
}

function simplyhired_search_form_search_form_alter(&$form, &$form_state) {
	
	if ( isset($form['module']) && $form['module']['#value'] == 'simplyhired_search' ) {
		$form['basic']['keys']['#default_value'] = urldecode($form['basic']['keys']['#default_value']);
		//drupal_set_title(t('Job Search'));
		// @todo put this in a tooltip of sorts using the
		//       $form['basics']['keys']['#description'] as the trigger.
		//       There's just to much text to display on the form itself.
		$desc = <<<DESC
<div class="clearfix"></div>
<div class="description">
	<ul>
		<li>AND - Match all of the terms connected by AND. The default connector for search terms (case sensitive)</li>
		<li>OR - Match at least one of the terms connected by OR (case sensitive)</li>
		<li>NOT - Exclude matches on these terms (case sensitive)</li>
		<li>( ) - Group order of operations</li>
	</ul>
	<p>The search supports basic Boolean searches as follows. The search also supports these job-related search requests:</p>
	<ul>
		<li>All the words: Engineering AND Manager</li>
		<li>Exact phrase: "Engineering Manager"</li>
		<li>At least one of the words: Engineering OR Manager</li>
		<li>Without words: Engineering NOT Manager</li>
		<li>Job title: title:(Engineering Manager)</li>
		<li>Company name: company:(Apple)</li>
		<li>Occupation onet: onet:(13-205*)<br>(Based on O*net, the U.S. Government's Occupation Classification System. <a href="http://www.onetonline.org" target="_blank">Learn more</a>.)</li>
	</ul>
</div>
DESC;
		$form['#attributes']['class'][] = 'simplyhired-search-form';
		$form['#attached']['css'] = array(
			drupal_get_path('module', 'simplyhired_search') . '/css/simplyhired_search.css',
		);
		
		if (user_access('use simplyhired advanced search')) {
			$form['advanced'] = array(
				'#type' => 'fieldset',
				'#title' => t('Advanced search'),
				'#collapsible' => TRUE,
				'#collapsed' => TRUE,
				'#attributes' => array('class' => array('search-advanced')),
			);
			
			$form['advanced']['location'] = array(
				'#type' => 'textfield',
				'#title' => t('Location'),
				'#size' => 30,
				'#description' => t('Location can be a zipcode, state, or city-state combination. Currently, there is no support for multiple location search.'),
			);
      $opts = array(
				0 => t('Select'),
				10 => t('10 (default)'), 
				20 => '20', 
				30 => '30', 
				50 => '50', 
				100 => '100'
			);
			$form['advanced']['miles'] = array(
				'#type' => 'select',
				'#title' => t('Miles'),
				'#options' => $opts,
				'#default_value' => 0,
			);
			$form['advanced']['sort'] = array(
				'#type' => 'select',
				'#title' => t('Sort by'),
				'#options' => array_merge(array('' => t('Select')), _simplyhired_get_sort_options()),
				'#default_value' => '',
			);

			$form['advanced']['post_date'] = array(
				'#type' => 'select',
				'#title' => t('Date posted'),
				'#default_value' => '',
				'#options' => _simplyhired_get_date_posted_options(),
				'#description' => t('Parameter indicating the date posted filter to use on the result set.'),
			);

			$form['advanced']['job_type'] = array(
				'#type' => 'select',
				'#title' => t('Job type'),
				'#default_value' => '',
				'#options' => _simplyhired_get_job_type_options(),
				'#description' => t('Parameter indicating the job type filter to use on the result set.'),
			);

			$form['advanced']['education'] = array(
				'#type' => 'select',
				'#title' => t('Education'),
				'#default_value' => '',
				'#options' => _simplyhired_get_education_options(),
				'#description' => t('Parameter indicating the education filter to use on the result set.'),
			);

			$form['advanced']['employer_type'] = array(
				'#type' => 'select',
				'#title' => t('Employer type'),
				'#default_value' => '',
				'#options' => _simplyhired_get_employer_type_options(),
				'#description' => t('Parameter indicating the indicating the employer type.'),
			);

			$form['advanced']['special'] = array(
				'#type' => 'select',
				'#title' => t('Special filters'),
				'#default_value' => '',
				'#options' => _simplyhired_get_special_options(),
				'#description' => t('Parameter indicating the special filter to use on the result set.'),
			);
			
			$opts = array(
				0 => t('Select'), 
				10 => t('10 (default)'),
				20 => '20', 
				30 => '30', 
				50 => '50', 
				100 => '100'
			);
			$form['advanced']['size'] = array(
				'#type' => 'select',
				'#title' => t('Results per page'),
				'#options' => $opts,
				'#default_value' => 0,
			);
			
			if (variable_get('simplyhired_search_select_source', 0)) {
				$opts = array('' => t('Select'));
				$sources = _simplyhired_get_endpoints(TRUE);
				asort($sources);
				$form['advanced']['source'] = array(
					'#type' => 'select',
					'#title' => t('Source'),
					'#default_value' => 0,
					'#options' => array_merge($opts, $sources),
				);
			}
		}
			
		
		$form['#validate'][] = 'simplyhired_search_search_validate';
	}
}

function simplyhired_search_search_admin() {
	$form = array();
	
	$form['simplyhired_search'] = array(
		'#type' => 'fieldset',
		'#title' => t('SimplyHired Job Search'),
		'#weight' => 1
	);
	
	$form['simplyhired_search']['simplyhired_search_text'] = array(
		'#markup' => t('Control various settings for the SimplyHired search.'),
		'#prefix' => '<div style="margin: 15px 0"><em>',
		'#suffix' => '</em></div>'
	);
	
	$form['simplyhired_search']['simplyhired_search_select_source'] = array(
		'#type' => 'checkbox',
		'#title' => t('Allow user to select from the available country API\'s on the search form?'),
		'#default_value' => variable_get('simplyhired_search_select_source', 0),
	);
	
	$form['simplyhired_search']['simplyhired_search_exerpt'] = array(
		'#type' => 'radios',
		'#title' => t('Show the full job description or exerpt only?'),
		'#options' => array(0 => t('Exerpt only (default)'), 1 => t('Full job description')),
		'#description' => t(''),
		'#default_value' => variable_get('simplyhired_search_exerpt', 0)
	);
	
	return $form;
}

function simplyhired_search_search_page($results=array()) {
	$output['prefix']['#markup'] = '<ol class="search-results">';

  foreach ($results as $entry) {
    $output[] = array(
      '#theme' => 'search_result',
      '#result' => $entry,
      '#module' => 'simplyhired_search',
    );
  }
	
	$suffix = '</ol>' . theme('pager');
	
	/*
	 * The SimplyHired terms of service (@see https://simply-partner.com/partner-terms/1)
	 * requires that an attribution be on every page that displays data from the
	 * SimplyHired network. We'll tack on this attribution after the pager.
	 */
	if ( count($results) ) {
		$image_file = 'sh-jobsby-' . (variable_get('simplyhired_logo', 'default') ? 'normal' : 'light') . '.png';
		$image_data = array(
			'path' => '/' . drupal_get_path('module', 'simplyhired') . '/images/' . $image_file,
			'width' => 152,
			'height' => 20,
			'alt' => t('Jobs by SimplyHired'),
		);
		$image = theme('image', $image_data);
		$options = array(
			'html' => TRUE,
			'attributes' => array(
				'target' => '_blank',
				'title' => t('Jobs by SimplyHired'),
			),
		);
		$attribution = l($image, 'https://simplyhired.com', $options);

		$suffix .= '<div id="simplyhired-attribution">' . $attribution . '</div>';
	}
  $output['suffix']['#markup'] = $suffix;

  return $output;
}

function simplyhired_search_theme_registry_alter(&$theme_registry) {
	/*
	 * @todo: Can't get this working for some reason .... fix after everything
	 * else is done??
	 */
	// tell the theme system to look in the "templates" subdirectory within our module directory
  //$theme_registry['search_results']['theme paths'] = array(0 => drupal_get_path('module', 'simplyhired_search') . '/templates');
  //$theme_registry['search_results']['theme path'] = drupal_get_path('module', 'simplyhired_search') . '/templates';
  //$theme_registry['search_results']['path'] = drupal_get_path('module', 'simplyhired_search') . '/templates';
	// tell the theme system to use 'search-results.tpl.php' as the template file. Note that you do not include 'tpl.php'
  //$theme_registry['search_results']['template'] = 'search-results--simplyhired-search';
	
	$theme_registry['search_result']['theme paths'] = array(0 => drupal_get_path('module', 'simplyhired_search') . '/templates');
  $theme_registry['search_result']['theme path'] = drupal_get_path('module', 'simplyhired_search') . '/templates';
  $theme_registry['search_result']['path'] = drupal_get_path('module', 'simplyhired_search') . '/templates';
	// tell the theme system to use 'search-result.tpl.php' as the template file. Note that you do not include 'tpl.php'
  $theme_registry['search_result']['template'] = 'search-result--simplyhired-search';
	
}