<?php
/**
 * @file
 * Adds a search page that lets users do a search with forums.
 */

/**
 * Implements hook_search_info().
 */
function forum_search_search_info() {
  return array(
    'title' => 'Forum',
    'path' => 'forum_search',
  );
}

/**
 * Implements hook_search_execute().
 */
function forum_search_search_execute($keys = NULL, $conditions = NULL) {
  // Build matching conditions.
  $query = db_select('search_index', 'i', array('target' => 'slave'))
    ->extend('SearchQuery')
    ->extend('PagerDefault');
  $query->join('forum', 'f', 'f.nid = i.sid');
  $query->join('node', 'n', 'n.nid = i.sid');
  $query->condition('n.status', 1);

  $query->searchExpression($keys, 'forum_search');

  // Only continue if the first pass query matches.
  if (!$query->executeFirstPass()) {
    return array();
  }

  // Add the ranking expressions.
  _node_rankings($query);

  // Load results.
  $find = $query
    ->limit(10)
    ->execute();

  $results = array();
  foreach ($find as $item) {
    // Build the node body.
    $node = node_load($item->sid);
    node_build_content($node, 'search_result');
    // For some reason, comments can not be added to other displays.
    // Seemed to work with index.
    $node->content['comments'] = comment_node_page_additions($node);
    $node->body = drupal_render($node->content);

    // Fetch comments for snippet.
    $node->rendered .= ' ' . module_invoke('comment', 'node_update_index', $node);
    // Fetch terms for snippet.
    $node->rendered .= ' ' . module_invoke('taxonomy', 'node_update_index', $node);

    $extra = module_invoke_all('node_search_result', $node);

    $results[] = array(
      'link' => url('node/' . $item->sid, array('absolute' => TRUE)),
      'type' => check_plain(node_type_get_name($node)),
      'title' => $node->title,
      'user' => theme('username', array('account' => $node)),
      'date' => $node->changed,
      'node' => $node,
      'extra' => $extra,
      'score' => $item->calculated_score,
      'snippet' => search_excerpt($keys, $node->body),
    );
  }

  return $results;
}

/**
 * Implements hook_update_index().
 */
function forum_search_update_index() {
  $limit = (int) variable_get('search_cron_limit', 100);

  $result = db_query_range("SELECT n.nid FROM {node} n
    INNER JOIN {forum} f ON f.nid = n.nid
    LEFT JOIN {search_dataset} d ON d.type = 'forum_search' AND d.sid = n.nid
    WHERE (d.sid IS NULL OR d.reindex <> 0)
    ORDER BY d.reindex ASC, n.nid ASC", 0, $limit);

  foreach ($result as $node) {
    $node = node_load($node->nid);

    // Save the changed time of the most recent indexed node, for the search
    // results half-life calculation.
    variable_set('node_cron_last', $node->changed);

    // Render the node.
    node_build_content($node, 'search_index');
    $node->rendered = drupal_render($node->content);

    $text = '<h1>' . check_plain($node->title) . '</h1>' . $node->rendered;

    // Fetch extra data normally not visible.
    $extra = module_invoke_all('node_update_index', $node);
    foreach ($extra as $t) {
      $text .= $t;
    }

    // Update index.
    search_index($node->nid, 'forum_search', $text);
  }
}

/**
 * Implements hook_search_status().
 */
function forum_search_search_status() {
  $total = db_query('SELECT COUNT(*) FROM {node} n
    INNER JOIN {forum} f ON f.nid = n.nid
    WHERE n.status = 1')->fetchField();
  $remaining = db_query("SELECT COUNT(*) FROM {node} n
    INNER JOIN {forum} f ON f.nid = n.nid
    LEFT JOIN {search_dataset} d ON d.type = 'forum_search' AND d.sid = n.nid
    WHERE n.status = 1
      AND (d.sid IS NULL OR d.reindex <> 0)")->fetchField();
  return array(
    'remaining' => $remaining,
    'total' => $total,
  );
}
