<?php

/**
 * @file
 * DotMailer Integration module.
 */

/**
 * Implements hook_menu().
 */
function dotmailer_integration_menu() {

  $items = array();

  $items['admin/config/services/dotmailer/account_details'] = array(
    'title' => 'DotMailer Itegration',
    'description' => 'Change username and password.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dotmailer_integration_admin_form'),
    'access arguments' => array('manage dotmailer integration'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/services/dotmailer/account_details/admin'] = array(
    'title' => 'DotMailer Itegration',
    'description' => 'Change username and password.',
    'access arguments' => array('manage dotmailer integration'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -40,
  );

  $items['admin/config/services/dotmailer/account_details/test'] = array(
    'title' => 'DotMailer Test',
    'description' => 'Test DotMailer API settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dotmailer_integration_dotmailer_test'),
    'access arguments' => array('manage dotmailer integration'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function dotmailer_integration_permission() {
  return array(
    'manage dotmailer integration' => array(
      'title' => t('Manage DotMailer integration configuration.'),
    ),
  );
}

/**
 * Creates the dotmailer admin form.
 *
 * @param array $form
 *   The current contents of the form.
 *
 * @param array $form_state
 *   The current state of the form.
 *
 * @return array
 *   The form.
 */
function dotmailer_integration_admin_form($form, &$form_state) {

  $username = variable_get('dotmailer_integration_username', '');
  $password = variable_get('dotmailer_integration_password', '');

  $form['account_details'] = array(
    '#type' => 'fieldset',
    '#title' => 'DotMailer account details',
  );

  $form['account_details']['dotmailer_integration_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Set new username'),
    '#description' => t("Username for the DotMailer API."),
    '#required' => TRUE,
    '#default_value' => $username,
  );

  $form['account_details']['dotmailer_integration_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Set new password'),
    '#description' => t("Password for the DotMailer API."),
    '#required' => TRUE,
    '#default_value' => $password,
  );

  return system_settings_form($form);
}

/**
 * The DotMailer test integration form.
 *
 * @param array $form
 *   The current contents of the form.
 *
 * @param array $form_submit
 *   The current submission of the form.
 *
 * @return array
 *   The form.
 */
function dotmailer_integration_dotmailer_test($form, $form_submit) {
  $form['dotmailer_test'] = array(
    '#type' => 'fieldset',
    '#title' => 'DotMailer account test',
    '#submit' => array('dotmailer_integration_dotmailer_test_submit'),
  );

  $username = variable_get('dotmailer_integration_username', '');

  if ($username == '' && $username == '') {
    $help_text = t('In order to run a test you need to enter your DotMailer credentials');
  }
  else {
    $help_text = t('Click the button below to initiate a test on the DotMailer API using the credentials you have enrered.');
  }

  $form['dotmailer_test']['submit_test_help'] = array(
    '#markup' => '<p>' . $help_text . '</p>',
  );

  $form['dotmailer_test']['submit_test'] = array(
    '#type' => 'submit',
    '#value' => 'Test DotMailer API',
  );

  if ($username == '' && $username == '') {
    $form['dotmailer_test']['submit_test']['#disabled'] = TRUE;
  }

  return $form;
}

/**
 * Submit function for dotmailer_integration_dotmailer_test().
 *
 * Run the DotMailer integration test.
 *
 * @param array $form
 *   The current contents of the form.
 *
 * @param array $form_submit
 *   The current submission of the form.
 *
 * @return bool
 *   True if the test passed. Otherwise false.
 */
function dotmailer_integration_dotmailer_test_submit($form, $form_submit) {

  $dotmailer = dotmailer_integration_get_object();
  if ($dotmailer === FALSE) {
    drupal_set_message(t('The DotMailer class is not present. Please install it at /sites/libraries/dotmailer', 'error'));
    return FALSE;
  }

  $address_books = $dotmailer->ListAddressBooks();

  if (is_array($address_books) && count($address_books) > 0) {
    $message = t('The test was sucessful! You have the following address_books in your DotMailer account');

    $message .= '<ul>';
    foreach ($address_books as $address_book) {
      $message .= '<li>' . $address_book->Name . '</li>';
    }
    $message .= '</ul>';

    drupal_set_message(filter_xss($message));
    return TRUE;
  }
  else {
    $error = $dotmailer->getLastFault();
    if ($error->faultstring != '') {
      $message = t('The test failed with the following error message:') . '<br />';
      drupal_set_message($message . $error->faultstring, 'error');
      return FALSE;
    }
  }
}

/**
 * Loads the DotMailer object and tries to initialise it.
 *
 * @return DotMailer
 *   The dotmailer object.
 */
function dotmailer_integration_get_object() {
  if (($library = libraries_load('dotmailer')) && empty($library['loaded'])) {
    if (isset($library['error message'])) {
      $error = $library['error message'];
    }
    else {
      $error = t('Something went wrong whilst trying to load the DotMailer class. Is it installed?');
    }
    drupal_set_message(filter_xss($error, 'error'));
    return FALSE;
  }

  $username = variable_get('dotmailer_integration_username', '');
  $password = variable_get('dotmailer_integration_password', '');

  try {
    $obj = new DotMailer($username, $password);
  }
  catch (UsernameAndPasswordNotFoundException $e) {
    drupal_set_message(t('Dotmailer username or password are invalid.'), 'error');
    return FALSE;
  }

  return $obj;
}

/**
 * Return the DotMailer class version.
 *
 * Until the time when a full version can be created within the DotMailer
 * package this will have to do.
 *
 * @return int
 *   The number 1.
 */
function dotmailer_integration_got_version() {
  return 1;
}

/**
 * Implements hook_libraries_info().
 */
function dotmailer_integration_libraries_info() {
  return array(
    'dotmailer' => array(
      'name' => 'DotMailer',
      'vendor url' => 'https://github.com/philipnorton42/PHP-Dotmailer/',
      'download url' => 'https://github.com/philipnorton42/PHP-Dotmailer/',
      'version callback' => 'dotmailer_integration_got_version',
      'files' => array(
        'php' => array(
          'DotMailer.php',
        ),
      ),
    ),
  );
}
