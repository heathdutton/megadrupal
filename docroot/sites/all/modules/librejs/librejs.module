<?php

/**
 * Implements hook_js_alter().
 */
function librejs_js_alter(&$javascript) {
  static $inline, $librejs;
  // Add inline JavaScript license statement.
  if (!$inline) {
    $inline = array(
      'type' => 'inline',
      'group' => JS_LIBRARY,
      'every_page' => TRUE,
      'weight' => -100,
      'scope' => 'header',
      'cache' => TRUE,
      'defer' => FALSE,
      'preprocess' => TRUE,
      'version' => NULL,
      'data' => theme('librejs_inline_license'),
    );
  }
  $javascript[] = $inline;
  if (!$librejs) {
    $librejs = db_query('SELECT data, license, version FROM {librejs}')->fetchAllAssoc('data');
  }
  foreach ($javascript as $key => $js) {
    if ($js['type'] == 'file' || $js['type'] == 'external') {
      // Aggregated JavaScript will be tagged as GPLv3, so do not aggregate
      // non-GPLv3-compatible JavaScript.
      if (empty($librejs[$js['data']]->license)) {
        $javascript[$key]['preprocess'] = FALSE;
      }
      // Merge JavaScript into database if not present or version has changed.
      if (!isset($librejs[$js['data']]) || (isset($js['version']) && $librejs[$js['data']]->version != $js['version'])) {
        $key = array('data' => $js['data']);
        $fields = $key;
        $fields['type'] = $js['type'];
        if (isset($js['version'])) {
          $fields['version'] = $js['version'];
        }
        db_merge('librejs')->key($key)->fields($fields)->execute();
      }
    }
  }
}

/**
 * Returns a list of LibreJS-compatible licenses.
 */
function librejs_licenses() {
  return array(
    'http://www.gnu.org/licenses/gpl-2.0.html' => 'GNU-GPL-2.0-or-later',
    'http://www.gnu.org/licenses/gpl-3.0.html' => 'GNU-GPL-3.0-or-later',
    'http://www.gnu.org/licenses/lgpl-2.1.html' => 'GNU-LGPL-2.1-or-later',
    'http://www.gnu.org/licenses/lgpl-3.0.html' => 'GNU-LGPL-3.0-or-later',
    'http://www.gnu.org/licenses/agpl-3.0.html' => 'GNU-AGPL-3.0-or-later',
    'http://www.apache.org/licenses/LICENSE-2.0' => 'Apache-2.0-only',
    'http://www.xfree86.org/3.3.6/COPYRIGHT2.html#5' => 'Modified-BSD',
    'http://creativecommons.org/publicdomain/zero/1.0/legalcode' => 'CC0-1.0-only',
    'http://www.jclark.com/xml/copying.txt' => 'Expat',
    'http://www.mozilla.org/MPL/2.0' => 'MPL-2.0-or-later',
    '' => t('Other'),
  );
}

/**
 * Implements hook_menu().
 */
function librejs_menu() {
  $items['librejs/jslicense'] = array(
    'access arguments' => array('access jslicense'),
    'page callback' => 'librejs_jslicense',
    'title' => 'JavaScript license information',
    'description' => 'License and source code of JavaScript used by the site.',
    'file' => 'librejs.pages.inc',
  );
  $items['admin/config/development/librejs'] = array(
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('librejs_admin_settings'),
    'title' => 'LibreJS',
    'description' => 'Configure the license and source of JavaScript used by the site.',
    'file' => 'librejs.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_page_build().
 */
function librejs_page_build(&$page) {
  if (user_access('access jslicense')) {
    $page['page_bottom']['librejs'] = array(
      '#type' => 'markup',
      '#markup' => l('JavaScript license information', 'librejs/jslicense', array('attributes' => array('rel' => 'jslicense', 'style' => 'display: none'))),
    );
  }
}

/**
 * Implements hook_permission().
 */
function librejs_permission() {
  return array(
    'access jslicense' => array(
      'title' => t('Access JavaScript license information'),
      'description' => t('Roles granted this permission can identify and read all JavaScript files used by the site.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function librejs_theme($existing, $type, $theme, $path) {
  return array(
    'librejs_inline_license' => array(
      'template' => 'librejs-inline-license',
      'variables' => array('year' => NULL, 'author' => NULL),
    ),
  );
}

/**
 * Preprocess variables for librejs-inline-license.tpl.php
 */
function template_preprocess_librejs_inline_license(&$variables) {
  $variables['year'] = date('Y');
  $variables['author'] = check_plain(variable_get('site_name', 'Drupal'));
}
