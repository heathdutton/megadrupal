<?php
/**
 * @file
 * Install and uninstall functions for the slideck module.
 */

/**
 * Implements hook_install().
 */
function slidedeck_install() {
  $t = get_t();
  drupal_set_message($t('Slidedeck module is successfully installed. Create slidedeck widgets through <a href="@url">Structure > Slidedeck</a> .', array('@url' => url('admin/structure/slidedeck'))));
}

/**
 * Implements hook_schema().
 */
function slidedeck_schema() {
  $schema['slidedeck'] = array(
    'fields' => array(
      'id' => array(
        'description' => 'id of the slidedeck',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'Title of the slidedeck',
        'type' => 'varchar',
        'length' => 150,
        'not null' => TRUE,
         'default' => '',
      ),
      'skin' => array(
        'description' => 'skin used for the slidedeck',
        'type' => 'varchar',
        'length' => 150,
        'not null' => TRUE,
        'default' => '',
      ),
      'content' => array(
        'description' => 'serailized content used in the slidedeck',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}


/**
 * Implements hook_requirements().
 */
function slidedeck_requirements($phase) {
  $requirements = array();
  $library_path = libraries_get_path('slidedeck.jquery.lite.js');
  $t = get_t();

  if ($phase == 'install') {
    // Check for the Slidedeck Jquery plugin library.
    if (!file_exists($library_path)) {
      $requirements['slidedeck'] = array(
        'title' => $t('Slidedeck Jquery Plugin'),
        'description' => $t('Slidedeck module needs slidedeck.jquery.lite.js to work.Download slidedeck js from  <a  target = "_blank" href="@url">Slidedeck Jquery Plugin</a>  and place the slidedeck.jquery.lite.js file at @path folder', array('@url' => 'http://www.slidedeck.com', '@path' => 'sites/all/libraries')),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}
