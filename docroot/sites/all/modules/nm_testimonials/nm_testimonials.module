<?php
/**
 * @file
 * Code for the nm_testimonials feature.
 */

include_once 'nm_testimonials.features.inc';


/**
 * Implements hook_token_info_alter().
 */
function nm_testimonials_token_info_alter(&$info) {
  //add to the desscription ability to use 'truncated'
  $info['tokens']['node']['field-nm-body']['description'] .= ', ' . t('truncated (trim to 35 characters plus elipses)');
}


/**
 * Implements hook_tokens_alter().
 */
function nm_testimonials_tokens_alter(array &$replacements, array $context) {
  if ($context['type'] == 'node' && !empty($context['data']) && !empty($context['data']['node'])) {
    $node = $context['data']['node'];
    //add truncated body field
    if (isset($node->field_nm_body[$node->language][0]['value']) && !is_null($node->field_nm_body[$node->language][0]['value'])) {
      $replacements['[node:field-nm-body:truncated]'] = drupal_substr(check_plain(strip_tags($node->field_nm_body[$node->language][0]['value'])), 0, 35) . '...';
    }
  }
}


/**
 * Implements hook_block_info().
 */
function nm_testimonials_block_info() {
 $blocks['nm_testimonials_node_add'] = array(
    'info' => t('Create a Testimonial!'),
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function nm_testimonials_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'nm_testimonials_node_add':
      $block['subject'] = t('Create a Testimonial!');
      $block['content'] = array(
        '#type' => 'markup',
        '#markup' => l(t('Create a Testimonial!'), 'node/add/nm-testimonial', array('attributes' => array('title' => t('Create a Testimonial!')))),
      );
      break;
  }
  return $block;
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function nm_testimonials_form_nm_testimonial_node_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  //if the user is logged in
  if (user_is_logged_in()) {

    //if profile2 enabled
    if (function_exists('profile2_load_by_user')) {
      $profile = profile2_load_by_user($user);
      //if first name is filled out
      if (isset($profile['nm_member_profile']->field_nm_first_name['und'][0]['safe_value'])) {
        //prefill their first name
        $form['field_nm_name'][$form['field_nm_name']['#language']][0]['value']['#default_value'] = $profile['nm_member_profile']->field_nm_first_name['und'][0]['safe_value'];
      }
      else {
        //prefill username
        $form['field_nm_name'][$form['field_nm_name']['#language']][0]['value']['#default_value'] = $user->name;
      }
    }
    else {
      //prefill username
      $form['field_nm_name'][$form['field_nm_name']['#language']][0]['value']['#default_value'] = $user->name;
    }

    //prefill their email address
    $form['field_nm_email'][$form['field_nm_email']['#language']][0]['email']['#default_value'] = $user->mail;
  }

}


/**
 * Implements hook_help().
 */
function nm_testimonials_help($path, $arg) {
  switch ($path) {
    case 'admin/help#nm_testimonials':
      $content = array(
        '#group' => 'info',
        '#theme' => 'item_list',
        '#attributes' => array(
          'class' => array('nodemaker-apps-details'),
        ),
        '#items' => nm_testimonials_help_details(),
      );

      return render($content);
      break;
  }
}


/**
  * Content for hook_help().
  */
function nm_testimonials_help_details() {

  //variables used throughout form
  $destination = drupal_get_destination();
  $destination = $destination['destination'];

  $items = array();
  $sub1[] = '<strong>' . t('Optional Subject.') . '</strong>  ' . t('If a subject is not filled out, one is created automcatically from the first 35 characters of the body field.');
  $sub1[] = '<strong>' . t('Body Field.') . '</strong>  ' . t('The main content area.');
  $sub1[] = '<strong>' . t('Rating.') . '</strong>  ' . t('Select how many stars.');
  $sub1[] = '<strong>' . t('Name.') . '</strong>  ' . t('The user\'s name.  The field will be pre-filled if the user is logged in and with either a their Profile name or Username.');
  $sub1[] = '<strong>' . t('Email.') . '</strong>  ' . t('The user\'s email.  The field will be pre-filled if the user is logged in.');
  $sub1[] = '<strong>' . t('Unpublished by default.') . '</strong>  ' . t('Until you approve the Testimonial, the content in not publically visible.');
  $items[] = '<strong>' . t('Testimonial Content Type.') . '</strong>  ' . t('!add.', array('!add' => l('Write a Testimonial', 'node/add/nm-testimonial'))) . theme('item_list', array('items' => $sub1));
  $items[] = '<strong>' . t('Testimonials Page.') . '</strong>  ' . t('There is a listing page:  !view.', array('!view' => l('Check it out', 'testimonials')));
  $items[] = '<strong>' . t('Testimonials Blocks.') . '</strong>  ' . t('Blocks with recent Testimonials are located on the home page, testimonial content pages, static pages, contact, and user registration.');
  $items[] = '<strong>' . t('Thank you note.') . '</strong>  ' . t('A Thank you email is sent to the user.  !edit.', array('!edit' => l('Please confirm the contents of this email', 'admin/config/workflow/rules', array('query' => array('destination' => $destination, 'tag' => 'thank you'), 'attributes' => array('title' => 'Edit Testimonial notifications')))));
  $items[] = '<strong>' . t('Notification.') . '</strong> ' .t('NodeMaker will send you an email every time someone creates a testimonial.  We set this value as the site email address, %site_mail.  !notifications.', array('%site_mail' => variable_get('site_mail'), '!notifications' => l('Please confirm this email address is where you want notifications sent', 'admin/config/workflow/rules', array('query' => array('destination' => $destination, 'tag' => 'notification'), 'attributes' => array('title' => 'Edit Testimonial notifications')))));
  $items[] = '<strong>' . t('Issues?') . '</strong>  ' . t('Have a support question?  Find a bug?  !issue!', array('!issue' => '<a href="http://drupal.org/project/issues/nm_testimonials" title="NodeMaker Testimonials Issue Queue" target="_blank">Please use the issue queue</a>'));
  return $items;
}


function nodemaker_nm_testimonials_getting_started_form() {
  $form = nodemaker_nm_testimonials_getting_started_content();
  return system_settings_form($form);
}

/**
  * Content for nodemaker_getting_started_form().
  * Content for nodemaker_nm_testimonials_getting_started_form().
  */
function nodemaker_nm_testimonials_getting_started_content() {

  //variables used throughout form
  $destination = drupal_get_destination();
  $destination = $destination['destination'];
  //get the icon
  $icon = drupal_get_path('module', 'nm_testimonials') . '/' . 'nm_testimonials' . '-icon.png';
  if (file_exists($icon)) {
    $image = l(theme('image', array('path' => $icon, 'attributes' => array('class' => array('nodemaker-icon')))), 'admin/nodemaker/apps/'. 'nm_testimonials', array('html' => TRUE, 'attributes' => array('class' => array('nodemaker-icon-link'), 'title' => 'NodeMaker Testimonials Details')));
  }
  else {
    $image = '';
  }
  //group
  $form['tabs']['nm_testimonials_getting_started'] = array(
    '#type' => 'fieldset',
    '#title' => t('NodeMaker Testimonials'),
    '#description' => $image . t('<h4>NodeMaker Testimonials Launch Checklist</h4><p>NodeMaker Testimonials provides several default configurations, including ones that were defined during installation. This launch checklist will help you understand some of the configurations that you should verify are correct for your needs prior to launching your new website.</p>'),
    '#attributes' => array(
      'class' => array('getting-started'),
    ),
  );

  //set 'to' email for testimonials
  $description = t('NodeMaker will send you an email every time someone creates a testimonial.  We set this value as the site email address, %site_mail.  !notifications.', array('%site_mail' => variable_get('site_mail'), '!notifications' => l('Please confirm this email address is where you want notifications sent', 'admin/config/workflow/rules', array('query' => array('destination' => $destination, 'tag' => 'notification'), 'attributes' => array('title' => 'Edit Testimonial notifications')))));
  $form['tabs']['nm_testimonials_getting_started']['nm_testimonials_getting_started_notification'] = array(
    '#type' => 'checkbox',
    '#title' => t('Testimonial Notification'),
    '#description' => $description,
    '#default_value' => variable_get('nm_testimonials_getting_started_notification', 0),
    '#title_display' => 'after',
    '#theme' => 'toggleswitch',
  );

  //set 'thank you email' for testimonials
  $description = t('NodeMaker will send a "thank you" email to the person who creates a testimonial.  !notifications.', array('!notifications' => l('Please confirm the contents of this email', 'admin/config/workflow/rules', array('query' => array('destination' => $destination, 'tag' => 'thank you'), 'attributes' => array('title' => 'Edit Testimonial notifications')))));
  $form['tabs']['nm_testimonials_getting_started']['nm_testimonials_getting_started_thank_you'] = array(
    '#type' => 'checkbox',
    '#title' => t('Testimonial Thank You'),
    '#description' => $description,
    '#default_value' => variable_get('nm_testimonials_getting_started_thank_you', 0),
    '#title_display' => 'after',
    '#theme' => 'toggleswitch',
  );

  return $form;

}
