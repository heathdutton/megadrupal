<?php

/**
 * @file
 * Installation functions for Dependency Injection module.
 */

/**
 * Implements hook_install().
 */
function inject_install() {
  db_update('system')
    ->fields(array('weight' => -500))
    ->condition('type', 'module')
    ->condition('name', 'inject')
    ->execute();
}

/**
 * Implements hook_uninstall().
 */
function inject_uninstall() {
  variable_del('inject_dump');
  variable_del('inject_compile');
  variable_del('inject_class');
  variable_del('inject_base_class');
}

/**
 * Implements hook_requirements().
 */
function inject_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime' && !variable_get('inject_dump', TRUE)) {
    $args = array('!dumping' => l(t('dumping configuration to disk'), 'admin/config/development/performance'));

    $requirements['inject'] = array(
      'title' => t('Dump configuration'),
      'value' => t('Disabled'),
      'description' => t('Dependency Injection Container is rebuilt on every request. Consider !dumping to enhance performances.', $args),
      'severity' => REQUIREMENT_WARNING,
    );
  }

  return $requirements;
}

/**
 * Updates the module's weight to -500 to let a chance boot modules to hook
 * between classloader (-1000) and injection (-500).
 */
function inject_update_7001() {
  db_update('system')
    ->fields(array('weight' => -500))
    ->condition('type', 'module')
    ->condition('name', 'inject')
    ->execute();
}

/**
 * Remove unused 'inject_needs_dumping' variable.
 */
function inject_update_7002() {
  variable_del('inject_needs_dumping');
}
