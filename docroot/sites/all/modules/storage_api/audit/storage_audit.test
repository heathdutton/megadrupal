<?php

/**
 * @file
 * Test classes for Audit submodule of Storage API
 */

/**
 * Web tests for Storage Audit module.
 */
class StorageAuditTestCase extends DrupalWebTestCase {

  protected $profile = 'testing';

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Storage Audit',
      'description' => 'Test Storage Audit.',
      'group' => 'Storage',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp('storage', 'storage_audit', 'storage_audit_test');

    $web_user = $this->drupalCreateUser(array('administer storage'));
    $this->drupalLogin($web_user);
  }

  /**
   * Tests storage audit.
   */
  public function testStorageAudit() {
    $container = storage_container_load(1);

    $files = storage_audit($container);
    $this->assertEqual($files, 0, t('No files found in container.'));

    file_unmanaged_copy('CHANGELOG.txt', $container->settings['path']);
    $files = storage_audit($container);
    $this->assertEqual($files, 1, t('One file found in container.'));
  }

  /**
   * Tests storage audit import.
   */
  public function testStorageAuditImport() {
    $container = storage_container_load(1);
    file_unmanaged_copy('CHANGELOG.txt', $container->settings['path']);

    $this->drupalPost('admin/structure/storage/container/1/audit', array(), t('Audit'));

    $storage = storage_load(variable_get('storage_audit_test_storage'));
    $this->assertEqual($storage->selector_id, 'storage_audit_test:test', t('Storage has correct selector.'));
    $this->assertEqual($storage->filename, 'CHANGELOG.txt', t('Storage has correct filename.'));
  }

}
