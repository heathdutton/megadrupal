<?php

/**
 * @file
 * Install file for Storage Core Bridge apart of Storage API.
 */


/**
 * Implements hook_schema().
 */
function storage_core_bridge_schema() {
  $schema = array();

  $schema['storage_core_bridge'] = array(
    'fields' => array(
      'storage_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uri' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'image_style' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('storage_id'),
    'unique keys' => array(
      'uri' => array('uri'),
    ),
    'indexes' => array(
      'image_style' => array('image_style'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function storage_core_bridge_install() {
  // Create selectors for fields.
  variable_set('storage_core_bridge_fields', array());

  foreach (field_read_fields() as $field) {
    if (in_array($field['type'], array('file', 'image'))) {
      storage_core_bridge_field_selector_create($field['field_name']);
    }
  }

  // Create selectors for image styles.
  if (function_exists('image_styles')) {
    foreach (image_styles() as $style) {
      if ($style['storage'] & IMAGE_STORAGE_EDITABLE) {
        storage_core_bridge_image_style_selector($style['isid'])->create();
        storage_core_bridge_image_style_default_selector($style['isid'])->create();
      }
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function storage_core_bridge_uninstall() {
  variable_del('storage_core_bridge_fields');
}

/**
 * Create selectors for styled default images.
 */
function storage_core_bridge_update_7000() {
  // Create selectors for styled default images.
  if (function_exists('image_styles')) {
    foreach (image_styles() as $style) {
      if ($style['storage'] & IMAGE_STORAGE_EDITABLE) {
        $selector = storage_core_bridge_image_style_selector($style['isid']);
        $class_id = $selector->storageClass()->class_id;
        storage_core_bridge_image_style_default_selector($style['isid'])->create($class_id);
      }
    }
  }
}
