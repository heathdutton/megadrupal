<?php

/**
 * Test node fields.
 */
class NodeFieldTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Node field test',
      'description' => 'Node field module test',
      'group' => 'Node field',
    );
  }

  public function setUp() {
    parent::setUp('node_field');
    $permissions = array('administer site configuration', 'administer modules', 'access content', 'create article content', 'delete own article content', 'edit own article content');
    $user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($user);
  }

  public function testCreateDeleteFields() {
    // Enable node fields for Article.
    $node_field_settings = array(
      'node_field_node_types[article]' => TRUE,
    );
    $this->drupalPost("admin/config/content/node-field", $node_field_settings, t('Save configuration'));
    // Create an article.
    $node_settings = array(
      'type' => 'article',
      'title' => $this->randomName(10),
      'body' => array(LANGUAGE_NONE => array(array($this->randomName(64)))),
    );
    $node = $this->drupalCreateNode($node_settings);
    // Create fields of each type.
    $node_field_types = node_field_types_info();
    foreach ($node_field_types as $node_field_type) {
      $field = array(
        'node_fields[new][type]' => $node_field_type['type'],
        'node_fields[new][title]' => $this->randomName(8),
      );
      $this->drupalPost("node/{$node->nid}/node-field", $field, t('Save'));
    }
    // Delete created article.
    $delete = array();
    $this->drupalPost("node/{$node->nid}/delete", $delete, t('Delete'));
  }
}