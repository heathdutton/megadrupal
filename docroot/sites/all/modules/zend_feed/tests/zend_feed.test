<?php

/**
 * @file
 */

/**
 * ZendFeedTestCase class.
 */
class ZendFeedTestCase extends DrupalTestCase {
  
  function get_info() {
    return array(
      'name' => 'Zend_Feed test cases',
      'desc' => 'Makes sure that Zend_Feed is working.',
      'group' => 'Zend Framework',
    );
  }
  
  /**
   * Imports an RSS feed.
   */
  function testZendFeedImportRss() {
    $rss_url = 'http://news.google.com/?output=rss';
    
    $zend_feed_abstract = zend_feed_import($rss_url);
    $this->assertIsA($zend_feed_abstract, 'Zend_Feed_Rss', 'Import an RSS feed test.');
    
    $zend_feed_abstract = zend_feed_import($rss_url);
    $this->assertIsA($zend_feed_abstract, 'Zend_Feed_Rss', 'testZendFeedNotModifiedWithCache.');
    
    cache_clear_all('zend_feed:'. md5($rss_url), 'cache_zend_feed');
    
    $zend_feed_abstract = zend_feed_import($rss_url);
    $this->assertIsA($zend_feed_abstract, 'Zend_Feed_Rss', 'testZendFeedNotModifiedWithoutCache.');
  }
  
  /**
   * Imports an Atom feed.
   */
  function testZendFeedImportAtom() {
    $atom_url = 'http://news.google.com/?output=atom';
    $zend_feed_abstract = zend_feed_import($atom_url);
    $this->assertIsA($zend_feed_abstract, 'Zend_Feed_Atom', 'Import an Atom feed test.');
    
    $cache = cache_get('zend_feed:'. md5($atom_url), 'cache_zend_feed');
    $this->assertNotIdentical($cache, 0, 'Look up cached data right after importing a feed test.');
    
    cache_clear_all('zend_feed:'. md5($atom_url), 'cache_zend_feed');
  }
  
  /**
   * Autodiscovers and imports feed from web page.
   */
  function testZendFeedImportAutodiscovery() {
    $rss_url = 'http://drupal.org';
    
    $zend_feed_abstract = zend_feed_import($rss_url);
    $this->assertIsA($zend_feed_abstract, 'Zend_Feed_Rss', 'Autodiscover and import feed from web page test.');
    
    $zend_feed_abstract = zend_feed_import($rss_url);
    $this->assertIsA($zend_feed_abstract, 'Zend_Feed_Rss', 'testZendFeedAutodiscoveryNotModifiedWithCache.');
    
    cache_clear_all('zend_feed:'. md5('http://drupal.org/node/feed'), 'cache_zend_feed');
    
    $zend_feed_abstract = zend_feed_import($rss_url);
    $this->assertIsA($zend_feed_abstract, 'Zend_Feed_Rss', 'testZendFeedAutodiscoveryNotModifiedWithoutCache.');
  }
  
  /**
   * Import feed from invalid URL.
   */
  function testZendFeedImportInvalid() {
    $zend_feed_abstract = zend_feed_import('localhost');
    $this->assertFalse($zend_feed_abstract, 'Import feed from invalid URL test.');
  }
}
