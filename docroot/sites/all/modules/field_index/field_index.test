<?php

class FieldIndexTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
        'name'        => 'Field index',
        'description' => 'Test case for field index module',
        'group'       => 'FieldIndex',
    );
  }

  protected function setUp() {
    $return = parent::setUp(array('field_index', 'node', 'entity', 'field', 'text'));

    // Create new node type
    $node_info = (object) array(
          'type'        => 'node_test',
          'name'        => 'Node Test',
          'base'        => 'node_content',
          'description' => 'Just for test',
          'custom'      => TRUE,
          'has_title'   => TRUE,
          'module'      => 'node',
    );
    node_type_save($node_info);

    // Add new field to node
    field_create_field(array(
        'field_name'   => 'node_test_text',
        'type'         => 'text',
        'entity_types' => array('node'),
    ));

    field_create_instance(array(
        'field_name'  => 'node_test_text',
        'entity_type' => 'node',
        'bundle'      => 'node_test',
        'label'       => 'Test text',
        'widget'      => array('type' => 'text_textfield'),
    ));

    return $return;
  }

  public function testIndexing() {
    $field_index = entity_create('field_index', array(
        'name'         => 'demo_index',
        'label'        => 'Demo index',
        'published'    => TRUE,
        'entity_type'  => 'node',
        'bundle'       => 'node_test',
        'field_name'   => 'node_test_text',
        'column_names' => array('value'),
    ));
    $field_index->save();

    $field = field_info_field('node_test_text');
    $table = _field_sql_storage_tablename($field);
    $index_name = 'field_index__' . str_replace(' ', '_', strtolower($field_index->name));
    $this->assertTrue(db_index_exists($table, $index_name), 'Index is created.');

    // Drop entity, index should be removed too.
    $field_index->delete();
    $this->assertFalse(db_index_exists($table, $index_name), 'Index is dropped');
  }

}
