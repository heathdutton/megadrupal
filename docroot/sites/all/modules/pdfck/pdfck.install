<?php

/**
 * @file
 * Installation hooks.
 *
 * Creates tables and perform update routines.
 */

/**
 * Implements hook_schema().
 */
function pdfck_schema() {
  $schema = array();
  $schema['pdfck_pdf'] = array(
    'description' => 'Store PDF information.',
    'fields' => array(
      'pdfid' => array(
        'description' => 'The primary identifier for a PDFs.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Name of the PDF',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'Description of the PDF',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uri_scheme' => array(
        'description' => 'Destination of the PDF',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'path' => array(
        'description' => 'Destination path of the PDF',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'filename' => array(
        'description' => 'Filname of the PDF',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'keep' => array(
        'description' => 'Keep mode of the PDF',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => FILE_EXISTS_REPLACE,
      ),
    ),
    'primary key' => array('pdfid'),
  );

  $schema['pdfck_elements'] = array(
    'description' => 'Elements from where the PDF is going to be built.',
    'fields' => array(
      'elid' => array(
        'description' => 'The primary identifier for the element pdf',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pdfid' => array(
        'description' => 'The primary identifier for a PDFs.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Type of the element (node, views, etc.)',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'id' => array(
        'description' => 'ID of the element',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'description' => 'Weight of the element in the PDF',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('elid'),
  );

  $schema['pdfck_files'] = array(
    'description' => 'Map generated files to PDFs.',
    'fields' => array(
      'pdfid' => array(
        'description' => 'The primary identifier for a PDFs.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => 'The primary identifier for a file.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('fid'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function pdfck_uninstall() {
  module_load_include('inc', 'pdfck', 'pdfck.admin');

  // Delete files
  $result = db_select('pdfck_files', 'f')->fields('f', array('fid'))->execute();
  foreach ($result as $row) {
    pdfck_pdf_file_delete($row->fid);
  }
}

/**
 * Implements hook_requirements().
 *
 * Checks the existance of the required libraries for PDF manipulation
 * (FPDF and FPDI)
 */
function pdfck_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if (($phase == 'runtime') || ($phase == 'install')) {
    if (!module_exists('libraries')) {
      module_enable(array('libraries'));
    }
    $requirements['pdfck_fpdf'] = array('title' => $t('FPDF library'));
    $path = libraries_get_path('fpdf');
    if ($path && file_exists(DRUPAL_ROOT . '/' . $path . '/fpdf.php')) {
      require_once DRUPAL_ROOT . '/' . $path . '/fpdf.php';
      $requirements['pdfck_fpdf']['value'] = FPDF_VERSION;
      if (FPDF_VERSION == '1.6') {
        $requirements['pdfck_fpdf']['severity'] = REQUIREMENT_OK;
      }
      else {
        $requirements['pdfck_fpdf']['description'] = $t('Please download version 1.6 of the fpdf library.');
        $requirements['pdfck_fpdf']['severity'] = REQUIREMENT_ERROR;
      }
    }
    else {
      $requirements['pdfck_fpdf']['value'] = $t('Missing');
      $requirements['pdfck_fpdf']['description'] = $t('You must download <a href="http://www.fpdf.org/" target="_blank">FPDF</a> (version 1.6) and place it the site\'s libraries directory.');
      $requirements['pdfck_fpdf']['severity'] = REQUIREMENT_ERROR;
    }

    $requirements['pdfck_fpdi'] = array('title' => $t('FPDI library'));
    $path = libraries_get_path('fpdi');
    if ($path && file_exists(DRUPAL_ROOT . '/' . $path . '/fpdi.php') && file_exists(DRUPAL_ROOT . '/' . $path . '/fpdf_tpl.php')) {
      require_once DRUPAL_ROOT . '/' . $path . '/fpdi.php';
      $requirements['pdfck_fpdi']['value'] = FPDI_VERSION;
      $requirements['pdfck_fpdi']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['pdfck_fpdi']['value'] = $t('Missing');
      $requirements['pdfck_fpdi']['description'] = $t('You must download <a href="http://www.setasign.de/products/pdf-php-solutions/fpdi/downloads/" target="_blank">FPDI and FPDF_TPL</a> and place it the site\'s libraries directory.');
      $requirements['pdfck_fpdi']['severity'] = REQUIREMENT_ERROR;
    }
  }
  return $requirements;
}

/**
 * Remove element column from pdfck_elements table
 */
function pdfck_update_7001() {
  db_drop_field('pdfck_elements', 'name');
}

