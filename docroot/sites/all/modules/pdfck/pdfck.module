<?php

/**
 * @file
 * Drupal hooks and some general menu callbacks.
 *
 * This is the main module file that implements the required drupal hooks as well
 * as some general menu callbacks.
 */

/**
 * Implements hook_menu().
 */
function pdfck_menu() {
  $items = array();

  $items['pdfck/autocomplete/nodes'] = array(
    'title' => 'Nodes autocomplete',
    'access arguments' => array('administer pdfck'),
    'page callback' => 'pdfck_autocomplete_nodes',
    'type' => MENU_CALLBACK,
  );

  $items['admin/content/pdfck'] = array(
    'title' => 'PDF',
    'access arguments' => array('administer pdfck'),
    'description' => 'Generate oen pdf out of different pdf elements.',
    'page callback' => 'pdfck_overview',
    'file' => 'pdfck.admin.inc',
  );
  $items['admin/content/pdfck/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/pdfck/add'] = array(
    'title' => 'Add PDF',
    'access arguments' => array('administer pdfck'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdfck_pdf_form'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'pdfck.admin.inc',
  );

  $items['admin/content/pdfck/manage/%pdfck'] = array(
    'title callback' => 'pdfck_page_title',
    'title arguments' => array(4),
    'access arguments' => array('administer pdfck'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdfck_pdf_form', 4),
    'file' => 'pdfck.admin.inc',
  );
  $items['admin/content/pdfck/manage/%pdfck/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/pdfck/manage/%pdfck/elements'] = array(
    'title' => 'Elements',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdfck_pdf_elements_form', 4),
    'access arguments' => array('administer pdfck'),
    'file' => 'pdfck.admin.inc',
  );
  $items['admin/content/pdfck/manage/%pdfck/elements/%pdfck_element/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdfck_pdf_element_delete_confirm_form', 4, 6),
    'access arguments' => array('administer pdfck'),
    'file' => 'pdfck.admin.inc',
  );
  $items['admin/content/pdfck/manage/%pdfck/files'] = array(
    'title' => 'Files',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'pdfck_pdf_files',
    'page arguments' => array(4),
    'access arguments' => array('administer pdfck'),
    'file' => 'pdfck.admin.inc',
  );
  $items['admin/content/pdfck/manage/%pdfck/files/%file/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdfck_pdf_file_delete_confirm_form', 4, 6),
    'access arguments' => array('administer pdfck'),
    'file' => 'pdfck.admin.inc',
  );
  $items['admin/content/pdfck/manage/%pdfck/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdfck_pdf_delete_confirm_form', 4),
    'access arguments' => array('administer pdfck'),
    'file' => 'pdfck.admin.inc',
  );
  $items['admin/content/pdfck/manage/%pdfck/generate'] = array(
    'title' => 'Generate',
    'page callback' => 'pdfck_generate',
    'page arguments' => array(4),
    'access arguments' => array('administer pdfck'),
    'file' => 'pdfck.generate.inc',
  );
  $items['admin/config/media/pdfck'] = array(
    'title' => 'PDF',
    'description' => 'Configure global-settings of the PDF construction kit module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdfck_settings'),
    'access arguments' => array('administer pdfck'),
  );
  
  return $items;
}

/**
 * Menu page title callback.
 */
function pdfck_page_title($pdfck) {
  return $pdfck->name;
}

/**
 * pdfck data auto-loader.
 */
function pdfck_load($pdfid) {
  $pdfck = db_select('pdfck_pdf', 'p')
    ->fields('p')
    ->condition('pdfid', $pdfid)
    ->execute()
    ->fetchObject();

  $pdfck->elements = db_select('pdfck_elements', 'e')
    ->fields('e')
    ->condition('pdfid', $pdfid)
    ->orderBy('e.weight')
    ->execute()
    ->fetchAll();

  $pdfck->files = db_select('pdfck_files', 'f')
    ->fields('f')
    ->condition('pdfid', $pdfid)
    ->execute()
    ->fetchAll();

  return $pdfck;
}

/**
 * pdfck element auto-loader.
 */
function pdfck_element_load($elid) {
  return db_select('pdfck_elements')
    ->fields('pdfck_elements')
    ->condition('elid', $elid)
    ->execute()
    ->fetchObject();
}

/**
 * Implements hook_theme().
 */
function pdfck_theme() {
  return array(
    'pdfck_pdf_elements_form' => array(
      'render element' => 'form',
      'file' => 'pdfck.admin.inc',
    ),
  );
}

/**
 * Menu callback: Autocomplete of nodes.
 */
function pdfck_autocomplete_nodes($string = '') {
  $matches = array();
  if ($string) {
    $result = db_select('node')
      ->fields('node', array('nid', 'title'))
      ->condition('title', '%' . db_like($string) . '%', 'LIKE')
      ->orderBy('title')
      ->range(0, 15);

    $types = variable_get('pdfck_content_types', array());
    $types_filtered = array_filter($types);

    if (!empty($types_filtered)) {
      $or = db_or();
      foreach ($types_filtered as $type) {
        $or->condition('type', $type);
      }
      $result->condition($or);
    }

    foreach ($result->execute() as $row) {
      $matches[$row->title . " [nid:{$row->nid}]"] = check_plain($row->title);
    }
  }

  drupal_json_output($matches);
}

/**
 * Implements hook_permission().
 */
function pdfck_permission() {
  return array(
    'administer pdfck' => array(
      'title' => t('administer pdfck'),
      'description' => t('TODO Add a description for \'administer pdfck\''),
    ),
  );
}

/**
 * Form builder; Configure the site file handling.
 *
 * @ingroup forms
 * @see system_settings_form()
 */
function pdfck_settings() {
  $types = node_type_get_types();
  foreach ($types as $type) {
    $options[$type->type] = $type->name;
  }
  $form['pdfck_content_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Content types'),
    '#description' => t('You can choose to limit the node element autocomplete to certain content types.'),
    '#options' => $options,
    '#default_value' => variable_get('pdfck_content_types', array()),
  );

  return system_settings_form($form);
}

