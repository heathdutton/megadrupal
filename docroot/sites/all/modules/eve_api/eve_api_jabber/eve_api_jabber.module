<?php
/**
 * @file
 * The main file for Omni EVE API Jabber, where all the magic happens.
 */

require_once dirname(__FILE__) . '/eve_api_jabber.jabber.inc';
require_once dirname(__FILE__) . '/eve_api_jabber.cron.inc';

/**
 * Return the version number.
 * 
 * x.x.x.x
 * | | | `-- Patch Version Number.
 * | | |
 * | | `---- 0 = Alpha.
 * | |       1 = Beta.
 * | |       2 = RC.
 * | |       3 = Release.
 * | |
 * | `------ Minor Version Change.
 * |
 * `-------- Major Version Change.
 */
function eve_api_jabber_version() {
  return '2.0.2.9';
}

/**
 * Implements hook_menu().
 */
function eve_api_jabber_menu() {
  $items = array();

  $admin_base = array(
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer eve_api settings'),
    'file' => 'eve_api_jabber.admin.inc',
  );

  $user_base = array(
    'page callback' => 'drupal_get_form',
    'access callback' => 'eve_api_edit_access',
    'access arguments' => array(1),
    'file' => 'eve_api_jabber.user.inc',
  );

  if (variable_get('eve_api_enable', FALSE)) {
    $items['admin/eve_api/jabber'] = array(
      'title' => 'Jabber',
      'description' => 'Configure and edit Jabber connection settings.',
      'page arguments' => array('eve_api_jabber_admin_form'),
      'weight' => 80,
    ) + $admin_base;

    if (variable_get('eve_api_jabber_enable', FALSE)) {
      $items['user/%user/jabber'] = array(
        'title' => 'Jabber',
        'description' => 'Register on the Jabber server.',
        'page arguments' => array(
          'eve_api_jabber_user_form',
          1,
        ),
        'type' => MENU_LOCAL_TASK,
        'weight' => 1,
      ) + $user_base;
    }
  }

  return $items;
}

/**
 * Implements hook_user_delete().
 */
function eve_api_jabber_user_delete($account) {
  if (variable_get('eve_api_jabber_enable', FALSE)) {
    try {
      eve_api_jabber_url_query('delete', $account->name);
    }
    catch (EveApiException $e) {
      // Log Error ?
    }
  }
}

/**
 * Implements hook_eve_api_user_update().
 */
function eve_api_jabber_eve_api_user_update($data) {
  $account = $data['account'];

  if (variable_get('eve_api_jabber_enable', FALSE)) {
    if (isset($data['old_character'])) {
      try {
        eve_api_jabber_url_query('delete', $data['old_character']);
      }
      catch (EveApiException $e) {
        // Log Error ?
      }
    }

    $queue = DrupalQueue::get('eve_api_jabber_cron_user_sync');
    $queue->createItem(array(
      'uid' => $account->uid,
      'name' => $account->name,
      'runs' => 1,
    ));
  }
}

/**
 * Implements hook_eve_api_user_delete().
 */
function eve_api_jabber_eve_api_user_delete($account) {
  if (variable_get('eve_api_jabber_enable', FALSE)) {
    try {
      eve_api_jabber_url_query('delete', $account->name);
    }
    catch (EveApiException $e) {
      // Log Error ?
    }
  }
}
