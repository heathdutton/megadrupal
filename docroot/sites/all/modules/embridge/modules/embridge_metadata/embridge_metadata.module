<?php

/**
 * @file
 * Defines additional functions for EnterMedia metadata.
 */

/**
 * Settings for Cloud.
 */
function embridge_metadata_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'embridge_settings') {
    $form['#submit'][] = 'embridge_metadata_update_entermedia_table_submit';
  }
  elseif ($form_id == 'embridge_asset_upload_form' && user_access('allow entermedia metadata update')) {
    $catalog_name = $form_state['catalog'];
    $catalog_settings = _embridge_get_catalog_settings_by_name($catalog_name);
    $catalog_id = $catalog_settings['id'];
    $updatable_fields = $catalog_settings['updatable_fields'];
    if (!empty($updatable_fields)) {
      foreach ($updatable_fields as $id => $updatable_field){
        if (!empty($updatable_field)) {
          if (in_array($updatable_field['datatype'], array('list', 'multi_select_list'))) {
            $values = _embridge_get_value_list($id, $catalog_id);
            $form[$id] = array(
              '#title' => $updatable_field['name'],
              '#type' => 'select',
              '#options' => $values,
              '#maxlength' => 255,
            );
            if ($updatable_field['datatype'] == 'multi_select_list') {
              $form[$id]['#multiple'] = TRUE;
              unset($form[$id]['#maxlength']);
            }
          }
          else {
            $form[$id] = array(
              '#title' => $updatable_field['name'],
              '#type' => 'textfield',
              '#maxlength' => 255,
                '#size' => 20,
            );
          }
        }
      }
      $form['#submit'][] = 'embridge_metadata_asset_upload_form_submit';
      if (!empty($form_state['asset'])) {
        $form['submit'] = array(
          '#type' => 'submit',
          '#value' => t('Save'),
          '#attributes' => array('class' => array('save-action')),
          '#prefix' => '<div class="form-item form-item-save-button">',
          '#suffix' => '</div>',
        );
      }
    }
  }
}

/**
 * Implements hook_schema_alter().
 */
function embridge_metadata_schema_alter(&$schema){
  $spec = array(
    'type' => 'varchar',
    'not null' => FALSE,
    'length' => 255,
    'default' => '',
  );
  $updatable_fields = embridge_metadata_get_updatable_fields();
  $default_fields = array(
    'aid',
    'asset_id',
    'catalogid',
    'sourcepath',
    'thumbnail',
    'preview',
    'title',
    'width',
    'height',
    'filemime',
    'filesize',
    'embedcode',
    'timestamp',
  );
  $new_fields = array();
  if (!empty($updatable_fields)) {
    foreach ($updatable_fields as $id => $updatable_field) {
      if ($updatable_field) {
        // We don't recreate default columns.
        if (!in_array($id, $default_fields))
        $new_fields[] = $id;
      }
    }
  }
  foreach ($new_fields as $field) {
    $schema['entermedia']['fields'][$field] = $spec;
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function embridge_metadata_field_widget_form_alter(&$element, &$form_state, $context) {
  if ($context['field']['type'] == 'entermediaasset') {
    // Loop through the element children (there will always be at least one).
    foreach (element_children($element) as $key => $child) {
      if(!empty($element[$key]['#default_value']['aid'])) {
        // Add the new process function to the element.
        if(user_access('allow entermedia metadata update')) {
          $element[$key]['#process'][] = 'embridge_metadata_field_widget_embridge_field_process';
          $element[$key]['#value_callback'] = 'embridge_metadata_field_widget_value';
        }
      }
    }
  }
}

/**
 * Add new elements to embridge field widget.
 */
function embridge_metadata_field_widget_embridge_field_process($element, &$form_state, $form) {
  $instance = field_widget_instance($element, $form_state);
  $catalog_id  = $instance['settings']['asset_catalog'];
  $catalog_tokens = explode('/', $catalog_id);
  $catalog_name = array_pop($catalog_tokens);
  // Add the additional alt and title fields.
  $item = $element['#value'];
  $updatable_fields = embridge_metadata_get_updatable_fields($catalog_name);

  if (!empty($item['aid'])) {
    foreach ($updatable_fields as $id => $updatable_field) {
      if (!empty($updatable_field)) {
        $table_id = str_replace('-', '_', $id);
        if (in_array($updatable_field['datatype'], array('list', 'multi_select_list'))) {
          $values = _embridge_get_value_list($id, $catalog_id);
          $element[$id] = array(
            '#title' => $updatable_field['name'],
            '#type' => 'select',
            '#options' => $values,
            '#maxlength' => 255,
          );
          if (isset($item[$table_id])) {
            $element[$id]['#default_value'] = $item[$table_id];
          }
          elseif (isset($item[$id])) {
            $element[$id]['#default_value'] = $item[$id];
          }
          if ($updatable_field['datatype'] == 'multi_select_list') {
            $element[$id]['#multiple'] = TRUE;
            unset($element[$id]['#maxlength']);
            $element[$id]['#default_value'] = is_array($element[$id]['#default_value']) ? 
                $element[$id]['#default_value'] : explode(' | ', $element[$id]['#default_value']);
          }
        }
        else {
          $element[$id] = array(
            '#title' => $updatable_field['name'],
            '#type' => 'textfield',
            '#value' => isset($item[$table_id]) ? $item[$table_id] : '',
            '#maxlength' => 255,
          );
        }
      }
    }
  }
  $aid = isset($element['#value']['aid']) ? $element['#value']['aid'] : 0;
  $element['#entermediaasset'] = $aid ? embridge_metadata_field_asset_load($aid, $catalog_id) : FALSE;
  return $element;
}

/**
 * The #value_callback for the file_generic field element.
 */
function embridge_metadata_field_widget_value($element, $input = FALSE, $form_state = array()) {
  $instance = field_widget_instance($element, $form_state);
  $catalog_id  = $instance['settings']['asset_catalog'];
  $catalog_tokens = explode('/', $catalog_id);
  $catalog_name = array_pop($catalog_tokens);
  $return = embridge_field_field_widget_value($element, $input, $form_state);

  // Set embedcode if exists.
  if (!empty($return['aid'])) {
    $updatable_fields = embridge_metadata_get_updatable_fields($catalog_name);
    $custom_fields = array();
    foreach($updatable_fields as $id => $updatable_field) {
      if ($updatable_field && !empty($input[$id])) {
        if ($updatable_field['datatype'] == 'multi_select_list') {
          $custom_fields[$id] = implode(' | ', $input[$id]);
        }
        else {
        $custom_fields[$id] = $input[$id];
      }
    }
    }
    if (!empty($custom_fields)) {
      embridge_metadata_update_custom_fields($return['aid'], $catalog_id, $custom_fields);
    }
  }
  return $return;
}

/**
 * The embridge_metadata_asset_upload_form_submit.
 */
function embridge_metadata_asset_upload_form_submit(&$form, &$form_state) {
  if (!empty($form_state['asset']['aid'])) {
    $catalog_name = $form_state['catalog'];
    $catalog_settings = _embridge_get_catalog_settings_by_name($catalog_name);
    $catalog_id = $catalog_settings['id'];
    $updatable_fields = $catalog_settings['updatable_fields'];
    $custom_fields = array();
    foreach($updatable_fields as $id => $updatable_field) {
      if ($updatable_field && !empty($form_state['values'][$id])) {
        if ($updatable_field['datatype'] == 'multi_select_list') {
          $custom_fields[$id] = implode(' | ', $form_state['values'][$id]);
        }
        else {
          $custom_fields[$id] = $form_state['values'][$id];
        }
      }
    }
    if (!empty($custom_fields)) {
      embridge_metadata_update_custom_fields($form_state['asset']['aid'], $catalog_id, $custom_fields);
    }
    $form_state['rebuild'] = TRUE;
  }
}

function embridge_metadata_update_entermedia_table_submit(&$form, &$form_state) {
  $new_schema = array();
  // Get entermedia table altering provided by your module
  embridge_metadata_schema_alter($new_schema);
  foreach ($new_schema['entermedia']['fields'] as $name => $spec) {
    $table_name = str_replace('-', '_', $name);
    if(!db_field_exists('entermedia', $table_name)) {
      db_add_field('entermedia', $table_name, $spec);
    }
  }
}

/**
 * Save embed code to entermedia.
 */
function embridge_metadata_update_custom_fields($aid, $catalog_id, $custom_fields) {
  $asset = _embridge_get_asset_array($aid);
  if (!empty($asset)) {
    $fields_values = array();
    $table_fields_values = array();
    foreach ($custom_fields as $id => $value) {
      $table_id = str_replace('-', '_', $id);
      if ($asset[$table_id] != $value) {
         $fields_values[$id] = $value;
         $table_fields_values[$table_id] = $value;
      }
    }
    if (!empty($fields_values)) {
      // Update default metadata to entermedia asset.
      _embridge_update_asset($asset['asset_id'], $catalog_id, $fields_values);
      db_update('entermedia')
        ->fields($table_fields_values)
        ->condition('aid', $aid)
        ->execute();
    }
  }
}

/**
 * embridge_metadata_get_updatable_fields.
 */
function embridge_metadata_get_updatable_fields($catalog_name = FALSE) {
  $updatable_fields = array();
  $catalogs = empty($catalog_name) ? variable_get('embridge_catalogs', array()) : array($catalog_name);
  foreach ($catalogs as $catalog) {
    $fields = variable_get('embridge_' . drupal_strtolower($catalog) . '_fields', array());
    foreach ($fields as $field_id => $field) {
      if ($field['updatable']) {
        $updatable_fields[$field_id] = $field;
      }
    }
  }
  return $updatable_fields;
}

/**
 * embridge_metadata_field_asset_load.
 */
function embridge_metadata_field_asset_load($aid) {
  $asset = NULL;
  if ($aid) {
    // Get asset data from entermedia table.
    $asset = _embridge_get_asset_object($aid);
  }
  return $asset;
}
