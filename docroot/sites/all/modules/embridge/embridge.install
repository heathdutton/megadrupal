<?php

/**
 * @file
 * embridge.install
 * Provides intall and update functions for embridge.
 */

/**
 * Implements of hook_requirements().
 *
 * Check that the cURL extension exists for PHP.
 */
function embridge_requirements($phase) {
  $requirements = array();
  $t = get_t();

  $has_curl = function_exists('curl_init');

  switch ($phase) {
    case 'runtime':
      $requirements['embridge_curl'] = array(
        'title' => $t('cURL'),
        'value' => $has_curl ? $t('Enabled') : $t('Not found'),
        'severity' => $has_curl ? REQUIREMENT_OK : REQUIREMENT_ERROR,
      );

      $default_host = variable_get('embridge_server_url', 'http://entermedia.databasepublish.com');
      $default_port = variable_get('embridge_server_port', '8080');
      $default_user = variable_get('embridge_login', 'admin');
      $default_password = variable_get('embridge_password', 'admin');
      $url = $default_host . ':' . $default_port;
      $status = _embridge_server_status($default_host, $default_port, $default_user, $default_password);
      $value = $status ? $t('Your site has contacted the EnterMedia server.') : $t('Your site was unable to contact the EnterMedia server.');
      $severity = $status ? REQUIREMENT_OK : REQUIREMENT_ERROR;
      $requirements['embridge_connection'] = array(
        'title' => $t('EMBridge'),
        'value' => $value,
        'description' => $t('Default environment url: <br/> %url',  array('%url' => $url)),
        'severity' => $severity,
      );
      break;

    case 'install':
      if ($has_curl) {
        $requirements['embridge'] = array(
          'title' => $t('cURL'),
          'severity' => REQUIREMENT_OK,
        );
      }
      else {
        $requirements['embridge'] = array(
          'title' => $t('cURL'),
          'severity' => REQUIREMENT_ERROR,
          'description' => $t('Embridge could not be installed because the PHP <a href="!curl_url">cURL</a> library is not available.', array('!curl_url' => 'http://php.net/manual/en/curl.setup.php')),
        );
      }
      break;
  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function embridge_install() {
  $rid = variable_get('user_admin_role', 0);
  if (!empty($rid)) {
    // Set default permissions for Admin role.
    user_role_grant_permissions($rid, array(
      'administer entermedia',
      'allow entermedia metadata update',
      'allow entermedia asset upload',
      'allow entermedia search',
    ));
  }
}

/**
 * Implements hook_schema().
 */
function embridge_schema() {
  $schema['entermedia'] = array(
    'description' => 'Stores entermedia asset related data based on asset id.',
    'fields' => array(
      'aid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The primary identifier for an asset.',
      ),
      'asset_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "EnterMedia asset id.",
      ),
      'catalogid' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'EnterMedia catalog id',
      ),
      'sourcepath' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'EnterMedia asset southpath',
      ),
      'thumbnail' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'EnterMedia asset thumbnail',
      ),
      'preview' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'EnterMedia asset preview',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'EnterMedia asset title',
      ),
      'width' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description' => "EnterMedia asset width.",
      ),
      'height' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description' => "EnterMedia asset height.",
      ),
      'filemime' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'EnterMedia asset file mimetype.',
      ),
      'filesize' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description' => "EnterMedia asset filesize.",
      ),
      'embedcode' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => "EnterMedia asset embed code.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description' => "EnterMedia asset created on.",
      ),
    ),
    'primary key' => array('aid'),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function embridge_uninstall() {
  db_delete('variable')
    ->condition('name', 'embridge%', 'like')
    ->execute();
  cache_clear_all();
}