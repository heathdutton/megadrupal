<?php
/**
 * @file
 *
 * The .module file for the mlist module.
 */

/**
 * Implements hook_block_info().
 */
function mlist_block_info() {
  $blocks = array();
  $blocks['mlists']['info'] = t('Mailing Lists');
  $blocks['mlists']['cache'] = 'BLOCK_NO_CACHE';
  return $blocks;
}
/**
 * Implements hook_block_view().
 */
function mlist_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'mlists':
      module_load_include('inc', 'mlist', 'mlist.callbacks');
      $block['subject'] = t('Mailing Lists');
      $block['content'] = drupal_get_form('mlist_subscribe_form');
  }
  return $block;
}
/**
 * Implements hook_menu().
 */
function mlist_menu() {
  $items = array();

  $items['mailing_lists'] = array(
    'title' => 'Mailing Lists',
    'description' => 'Subscribe or unsbuscribe from a mailing list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mlist_subscribe_form'),
    'access arguments'   => array('subscribe lists'),
    'file' => 'mlist.callbacks.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  // Administrative menu.
  $items['admin/config/system/mlist'] = array(
    'title' => 'Mailing Lists',
    'description' => 'Mailing List Management',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/system/mlist/show'] = array(
    'title' => 'View Mailing Lists',
    'description' => 'Edit a Mailman mailing list that has already been added.',
    'page callback' => 'mlist_show_lists',
    'access arguments' => array('manage mailing lists'),
    'file' => 'mlist.callbacks.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/system/mlist/new'] = array(
    'title' => 'Add a Mailing List',
    'description' => 'Add a new Mailman mailing list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mlist_form'),
    'access arguments' => array('manage mailing lists'),
    'file' => 'mlist.callbacks.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/system/mlist/edit/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mlist_form', 5),
    'access arguments' => array('manage mailing lists'),
    'file' => 'mlist.callbacks.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/system/mlist/delete/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mlist_delete_list_form', 5),
    'access arguments' => array('manage mailing lists'),
    'file' => 'mlist.callbacks.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
 * Implements hook_permission().
 */
function mlist_permission() {
  return array(
    'manage mailing lists' => array(
      'title' => t('Manage mailing lists'),
      'description' => t('Allow users to manage configuration of mailing lists.'),
    ),
    'subscribe lists' => array(
      'title' => t('Subscribe/Unsubscribe to mailing lists'),
      'description' => t('Allow users to subscribe or unsubscribe to mailing lists.'),
    ),
  );
}
/**
 * Implements hook_mail().
 */
function mlist_mail($key, &$message, $params) {
  $message['subject'] = $params['subject'];
}

/**
 * Retrieves the mailing lists available to the current user.
 *
 * @return array
 *   An associative array where the key is the list ID and the
 *   value is an array with the following key values: 'name',
 *   'description', 'subsribe', 'unsubscribe'. Where 'name' is the
 *   name of the list, 'description' is a short text describing the list,
 *   'subscribe' is the email address used for subscribing to the list, and
 *   'unusbscribe' is the email address used for unsubscribing to the list.
 */
function mlist_get_lists() {
  global $user;
  $sql = '
    SELECT
      ML.list_name, ML.description, ML.subscribe_email,
      ML.unsubscribe_email, ML.list_id, R.rid, R.name as role_name
    FROM {mailing_lists} ML
       LEFT JOIN {mailing_lists_roles} MLR ON ML.list_id = MLR.list_id
       LEFT JOIN {role} R on R.rid = MLR.rid
    ORDER BY list_name
  ';
  $lists = db_query($sql);
  $mylists = array();
  while ($list = $lists->fetchObject()) {

    // Check to see if user has the access to this list, if so,
    // include the list in the result.
    if (in_array($list->role_name, array_values($user->roles)) or
    user_access('manage mailing lists')) {
      // Don't add the list more than once.
      if (!in_array($list->list_id, $mylists)) {
        $mylists[$list->list_id] = array(
          'name'        => $list->list_name,
          'description' => $list->description,
          'subscribe'   => $list->subscribe_email,
          'unsubscribe' => $list->unsubscribe_email,
        );
      }
    }
  }
  return $mylists;
}
