<?php
/**
 * @file
 * This modules implements a filter/limit the displays shown in the node edit
 * form under spotbox options. Only the content types that have the
 * "Should user select display ID" options enable will be available.
 */

/**
 * Implements hook_permission().
 */
function nodespotbox_filter_permission() {
  return array(
    'nodespotbox filter administrate' => array(
      'title' => t('Administrate nodespotbox filter'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function nodespotbox_filter_menu() {
  $items = array();

  $items['admin/config/user-interface/nodespotbox'] = array(
    'title' => 'Nodespotbox',
    'description' => 'Rename nodespotbox displays and filter avaliable displays.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nodespotbox_filter_admin_form'),
    'access arguments' => array('nodespotbox filter administrate'),
  );

  return $items;
}

/**
 * Administration form.
 *
 * @return array
 */
function nodespotbox_filter_admin_form() {
  // Add description at top
  $form['nodespotbox_description'] = array(
    '#markup' => '<p>' . t('Here you can filter the displays shown in the node edit form under spotbox options. Only the content types that have the "Should user select display ID" options enable will be shown below.') . '</p>',
  );
  
  // Create vertical tabs wrapper around fieldsets.
  $form['nodespotbox_filter'] = array(
    '#type' => 'vertical_tabs',
    '#tree' => FALSE,
  );

  $types = node_type_get_types();
  foreach ($types as $key => $type) {
    if (($settings = nodespotbox_is_enabled($type)) && $settings['views']['user']) {
      // Create form key and load default values
      $form_key = 'nodespotbox_' . $key . '_filter';
      $defaults = variable_get($form_key, array());
      $form['nodespotbox_filter'][$form_key] = array(
        '#type' => 'fieldset',
        '#title' => check_plain($type->name),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#tree' => TRUE,
      );

      // Find available displays for the spotbox type and view given.
      $displays = _nodespotbox_load_views_info($settings['views']['name']);
      foreach ($displays as $id => $name) {
        $form['nodespotbox_filter'][$form_key][$id]['enabled'] = array(
          '#type' => 'checkbox',          
          '#default_value' => isset($defaults[$id]['enabled']) ? $defaults[$id]['enabled'] : 1,
          '#prefix' => '<div class="nodespotbox-wrapper">',
        );
        $form['nodespotbox_filter'][$form_key][$id]['name'] = array(
          '#type' => 'textfield',
          '#title' => $name,
          '#description' => t('Label shown to editor.'),
          '#size' => 25,
          '#default_value' => isset($defaults[$id]['name']) ? $defaults[$id]['name'] : $name,
          '#suffix' => '</div>',
        );
      }
    }
  }

  drupal_add_css(drupal_get_path('module', 'nodespotbox_filter') . '/css/nodespotbox_filter.admin.css');

  return system_settings_form($form);
}
