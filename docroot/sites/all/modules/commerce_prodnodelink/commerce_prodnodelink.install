<?php

/**
 * @file
 * Take care of module install/uninstall tasks.
 */


/**
 * Implements hook_install().
 */
function commerce_prodnodelink_install() {
  commerce_prodnodelink_set_vars();
}


/**
 * Implements hook_uninstall().
 */
function commerce_prodnodelink_uninstall() {
  commerce_prodnodelink_delete_vars();
}


/**
 * Set up variables for the module.
 */
function commerce_prodnodelink_set_vars() {
  variable_set('commerce_prodnodelink_conf_links_on_ui_product_form', 1);

  $node_types = commerce_prodnodelink_product_reference_field_by_node_type();

  foreach ($node_types as $type => $field_data) {
    for ($i = 0, $length = count($field_data); $i < $length; $i++) {
      variable_set('commerce_prodnodelink_data_' . $type . '_' . $field_data[$i]['instance_id'], $field_data[$i]['name']);
    }
  }
}


/**
 * Delete the module variables.
 */
function commerce_prodnodelink_delete_vars() {
  $deleted = 0;
  $query = db_select('variable', 'v')
    ->fields('v')
    ->condition('v.name', 'commerce_prodnodelink_%', 'LIKE');

  $results = $query->execute();

  foreach ($results as $record) {
    variable_del($record->name);
    $deleted++;
  }

  if ($deleted) {
    watchdog(
      'commerce_prodnodelink',
      'Deleted @number variable records related to module',
      array('@number' => $deleted)
    );
  }
}


/**
 * Update module variable names to new naming convention.
 */
function commerce_prodnodelink_update_7101(&$sandbox) {
  commerce_prodnodelink_delete_vars();
  commerce_prodnodelink_set_vars();

  return t('Updated module variable naming convention');
}
