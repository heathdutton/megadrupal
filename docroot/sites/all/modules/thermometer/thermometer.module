<?php
/**
 * Implements hook_block_info().
 */
function thermometer_block_info() {
  $blocks = array();

  $blocks['thermometer'] = array(
    'info' => t('Thermometer'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function thermometer_block_configure($delta = '') {
  $form = array();

  switch($delta) {
    case 'thermometer':
      $form['thermometer_progress'] = array(
        '#type' => 'textfield',
        '#title' => t('Progress so far'),
        '#default_value' => variable_get('thermometer_progress', 0),
        '#element_validate' => array('element_validate_number'),
      );
      $form['thermometer_goal'] = array(
        '#type' => 'textfield',
        '#title' => t('Goal'),
        '#default_value' => variable_get('thermometer_goal', 0),
        '#element_validate' => array('element_validate_number'),
      );
      $form['thermometer_button_text'] = array(
        '#type' => 'textfield',
        '#title' => t('Button Text'),
        '#description' => t('Text for the donate button. Leave blank to not show a donate button.'),
        '#default_value' => variable_get('thermometer_button_text', ''),
      );
      $form['thermometer_button_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Button URL'),
        '#description' => t('URL to page where people can donate'),
        '#default_value' => variable_get('thermometer_button_url', ''),
        '#element_validate' => array('thermometer_validate_url'),
      );
      $form['thermometer_button_window'] = array(
        '#type' => 'checkbox',
        '#title' => t('Open in new window'),
        '#description' => t('Enable to open the donate button url in a new window'),
        '#default_value' => variable_get('thermometer_button_window', 0),
      );
      break;
    default:
      break;
  }

  return $form;
}

/**
 * Implements hook_block_view().
 */
function thermometer_block_view($delta = '') {
  $block = array();

  switch($delta) {
    case 'thermometer':
      drupal_add_js(drupal_get_path('module', 'thermometer').'/thermometer.js');
      drupal_add_css(drupal_get_path('module', 'thermometer').'/thermometer.css');

      $block['subject'] = t('Contribute');

      $progress = variable_get('thermometer_progress', 0);
      $goal = variable_get('thermometer_goal', 0);
      $button_text = variable_get('thermometer_button_text', '');
      $button_url = variable_get('thermometer_button_url', '');
      $button_window = variable_get('thermometer_button_window', FALSE);

      $block['content'] = theme('thermometer_widget', array(
        'progress' => $progress,
        'goal' => $goal,
        'button_text' => $button_text,
        'button_url' => $button_url,
        'button_window' => $button_window,
        ));

      break;
  }

  return $block;
}

/**
 * Implements hook_block_save().
 */
function thermometer_block_save($delta = '', $edit = array()) {
  if ($delta == 'thermometer') {
    variable_set('thermometer_progress', $edit['thermometer_progress']);
    variable_set('thermometer_goal', $edit['thermometer_goal']);
    variable_set('thermometer_button_text', $edit['thermometer_button_text']);
    variable_set('thermometer_button_url', $edit['thermometer_button_url']);
    variable_set('thermometer_button_window', $edit['thermometer_button_window']);
  }
}

/**
 * Implements hook_theme().
 */
function thermometer_theme($existing, $type, $theme, $path) {
  return array(
    'thermometer_widget' => array(
      'variables' => array('progress', 'goal', 'button_text', 'button_url', 'button_window'),
      'template' => 'thermometer-widget',
    ),
  );
}


function thermometer_validate_url($element, &$form_state) {
  $value = $element['#value'];
  if (!valid_url($value)) {
    form_error($element, t('Not a valid url.'));
  }
}
