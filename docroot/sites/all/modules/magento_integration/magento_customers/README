= Installation

To use this module you need to add a field called "field_magento_customer_id" to
the user entity. This should be a integer field.

This module depends on extending the Core Magento API to support to new calls:
- drupalcart.total_items, paramter: customer_id, returns the total number of items
in a cart
- drupalcart.items, parameter: customer_id, returns information on a customers
cart

You will need to write a custom extension in Magento to provide these two calls
or open a issue for the project and we can post our code as a starting point.

= Using the Magento REST API

The Magento REST API is provided by the Services module via the REST server
module.

To update the Magneto Customer ID from Magento you will need a Drupal account
with sufficient permissions to update user profiles and specifically update
the Magento Customer ID field.

== Authenticating

In order to use the API you must first connect and create a session. This is a
two step process:

=== Step 1: Login

- POST /magpal/user/login
- Pass along a data package of username and password with your Drupal login
information
- Set the Accept header to "application/json"

In Drupal, you might do this like:

  $base_url = 'http://www.example.com';
  // Step 1: Login
  $data = array(
    'username' => 'USERNAME',
    'password' => 'PASSWORD',
  );
  $data = http_build_query($data, '', '&');
  $headers = array();
  $options = array(
    'headers' => array(
      'Accept' => 'application/json',
    ),
    'method' => 'POST',
    'data' => $data
  );
  $response = drupal_http_request($base_url . '/magpal/user/login', $options);
  $login_data = json_decode($response->data);

=== Step 2: Get a CSRF token

In order to prevent cross-site request forgery the Services module requires that
all non-GET requests provide a token obtained after login. You can use the same
token for the duration of your logged in session.

- GET /services/session/token
- Add a header called "Cookie" to pass your session cookie. The response from
step 1 will contain session_name and sessid. Combined these into one string with
"=" between them as the value of the header.

The response will be your CRSF token. Pass this in all future API calls.

You might do this in Drupal PHP like ($login_data is above):
  $options = array();
  $options['headers']['Cookie'] = $login_data->session_name . '=' . $login_data->sessid;
  $options['method'] = 'GET';
  $response = drupal_http_request($base_url . '/services/session/token', $options);
  $token = $response->data;

== Updating the Magento Customer ID field

- PUT /magpal/user/DRUPAL_USER_ID
- Send your session cookie header as you did in step 2 above
- Send the CRSF token in a header called "X-CSRF-Token"
- Pass along a data package of an array of data you want to update on the
account in Drupal format. For a field name field_magento_customer_id, the array
should be
array('data' => array('field_magento_customer_id' => array('und' => array(array('value' => MAGENTO_CUSTOMER_ID)))))

In Drupal PHP you might do:
  $drupal_uid = SOME_UID;
  $data = array('data' => array('field_magento_customer_id' => array(LANGUAGE_NONE => array(array('value' => 15)))));
  $data = http_build_query($data, '', '&');
  $headers = array();
  $options = array(
    'headers' => array(
      'Accept' => 'application/json',
    ),
    'method' => 'PUT',
    'data' => $data
  );
  $options['headers']['Cookie'] = $login_data->session_name . '=' . $login_data->sessid;
  $options['headers']['X-CSRF-Token'] = $token;
  $response = drupal_http_request("{$base_url}/magpal/user/{$drupal_uid}", $options);
