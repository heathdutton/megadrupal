<?php
class RegistryTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => t('Registry tests'),
      'description' => t('Tests for the Registry module'),
      'group' => t('Registry'),
    );
  }

  public function setUp() {
    parent::setUp('registry');
  }

	/**
	 * Method tests
	 */

  public function testRegistryObjectSetString() {
    $registry = Registry::invoke();
    $result = $registry->set('set_string', 'This is a string.');
    $this->assertTrue($result, t('Set a string correctly'));
  }

  public function testRegistryObjectSetInteger() {
    $registry = Registry::invoke();
    $registry->set('set_int', 23904802913581);
    $result = $registry->get('set_int');
    $this->assertIdentical($result, 23904802913581, t('Set an integer correctly'));
  }

  public function testRegistryObjectSetArray() {
    $data = array(
      'first' => 'first item',
      'second' => 'second item',
      3 => 'third item'
    );
    $registry = Registry::invoke();
    $registry->set('set_array', $data);
    $result = $registry->get('set_array');
    $this->assertIdentical($result, $data, t('Set an array correctly'));
  }

  public function testRegistryObjectSetProtected() {
    $registry = Registry::invoke();
    $registry->set('test_set_protected', 'set', TRUE);
    $result = $registry->set('test_set_protected', 'reset');
    $this->assertFalse($result, t('Do not overwrite a protected value'));
  }

  public function testRegistryObjectDelete() {
    $registry = Registry::invoke();
    $registry->set('test_delete', 'set');
    $result = $registry->delete('test_delete');
    $this->assertTrue($result, t('Delete a registry value'));
  }

	/**
	 * API tests
	 */

  public function testRegistryAPISet() {
    $result = registry_set('test_set', 'set');
    $this->assertTrue($result, t('Set a registry value correctly using the API'));
    }

  public function testRegistryAPIGet() {
    registry_set('test_get', 'set');
    $result = registry_get('test_get');
    $this->assertEqual($result,  'set', t('Get a registry value correctly using the API'));
    }

  public function testRegistryAPIDelete() {
    registry_set('test_del', 'set');
    $result = registry_delete('test_del');
    $this->assertTrue($result, t('Delete a registry value correctly using the API'));
    }

}
