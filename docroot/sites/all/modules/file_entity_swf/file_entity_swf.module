<?php

/**
 * @file
 * Module file for File Entity SWF
 */

/**
 * Implements hook_ctools_plugin_api().
 */
function file_entity_swf_ctools_plugin_api($owner, $api) {
  if ($owner == 'file_entity' && $api == 'file_type') {
    return array('version' => 1);
  }
  if ($owner == 'file_entity' && $api == 'file_default_displays') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_file_default_types().
 */
function file_entity_swf_file_default_types() {
  return array(
    'flash' => (object) array(
      'api_version' => 1,
      'type' => 'flash',
      'label' => t('Flash'),
      'description' => t("<em>Flash</em> provides animated and rich media experiences."),
      'mimetypes' => array(
        'application/x-shockwave-flash',
      ),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function file_entity_swf_theme($existing, $type, $theme, $path) {
  return array(
    'file_entity_file_swf' => array(
      'variables' => array(
        'params' => array(
          'movie' => NULL,
          'wmode' => 'transparent',
          'FlashVars' => '',
          'quality' => 'high',
          'menu' => FALSE,
        ),
        'attributes' => array(
          'class' => array(),
          'type' => 'application/x-shockwave-flash',
          'data' => NULL,
        ),
      ),
      'file' => 'file_entity_swf.theme.inc',
    ),
  );
}

/**
 * Implements hook_file_formatter_info().
 */
function file_entity_swf_file_formatter_info() {
  $formatters['file_swf'] = array(
    'label' => t('Flash object'),
    // @todo: Expose width/height
    'default settings' => array(),
    'view callback' => 'file_entity_swf_file_formatter_file_swf_view',
    'settings callback' => 'file_entity_swf_file_formatter_file_swf_settings',
    'hidden' => FALSE,
    'mime types' => array('application/x-shockwave-flash'),
  );
  return $formatters;
}

/**
 * Implements hook_file_formatter_FORMATTER_view().
 */
function file_entity_swf_file_formatter_file_swf_view($file, $display, $langcode) {
  // Prevent PHP notices when trying to read empty files.
  // @see http://drupal.org/node/681042
  if (!$file->filesize) {
    return NULL;
  }

  // This shouldn't happen, but make sure we have right filemime.
  if ($file->filemime != 'application/x-shockwave-flash') {
    return NULL;
  }

  if (!isset($file->metadata)) {
    $file->metadata = array();
  }
  $file->metadata += array('width' => NULL, 'height' => NULL);


  $path = file_create_url($file->uri);
  $element = array(
    '#theme' => 'file_entity_file_swf',
    '#params' => array(
      'movie' => $path,
      'wmode' => 'transparent',
      'FlashVars' => '',
      'quality' => 'high',
      'menu' => FALSE,
    ),
    '#attributes' => array(
      'data' => $path,
      'width' => $file->metadata['width'],
      'height' => $file->metadata['height'],
    ),
  );

  return $element;
}

/**
 * Implements hook_file_formatter_FORMATTER_settings().
 */
function file_entity_swf_file_formatter_file_swf_settings($form, &$form_state, $settings) {
  // @todo: Add some settings.
  return null;
}
