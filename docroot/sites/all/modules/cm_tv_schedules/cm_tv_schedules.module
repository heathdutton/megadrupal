<?php
/**
 * @file
 * Code for the cm_tv_schedules feature.
 */

include_once 'cm_tv_schedules.features.inc';

/**
 * Implements hook_menu().
 */
function cm_tv_schedules_menu() {

  $items['admin/config/communitymedia/cm-tv-schedules'] = array(
    'title' => 'Community Media TV Schedules',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cm_tv_schedules_settings_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_theme_registry_alter().
 * - override calendar_day and date_views_pager templates
 */
function cm_tv_schedules_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'cm_tv_schedules');

  if (isset($theme_registry['calendar_day'])) {
    $theme_registry['calendar_day']['path'] = $path . '/templates';
    $theme_registry['calendar_day']['template'] = 'calendar-day';
  }

  // Drupal core theme bug, custom template altereed above cannot be overridden in theme layer
  // @see https://drupal.org/node/1873856
  global $theme;
  $themes = list_themes();
  $theme_obj = $themes[$theme];
   _theme_process_registry($theme_registry, 'phptemplate', 'theme_engine', $theme_obj->name, dirname($theme_obj->filename));
}

/**
 * Implements hook_css_alter().
 * - remove calendar module css
 */
function cm_tv_schedules_css_alter(&$css) {
  // Remove the unneeded files from the css array
  $path = drupal_get_path('module', 'calendar');
  unset($css[$path . '/css/calendar_multiday.css']);
}

/**
 * Override calendar day view.
 */
function cm_tv_schedules_preprocess_calendar_day(&$variables) {
  $view = &$variables['view'];
  $rows = &$variables['rows'];

  $path = drupal_get_path('module', 'cm_tv_schedules');

  // adding jquery ui datepicker library, called from cm_tv_schedules.js
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_js($path . '/js/cm_tv_schedules.js');

  // If you change the /schedules path, need to update the uri setting
  $settings = array(
    'cm_tv_schedules' => array(
      'path' => $path,
      'uri' => 'schedules',
    ),
  );
  drupal_add_js($settings, 'setting');

  if (!variable_get('cm_tv_schedules_disable_css', FALSE)) {
    drupal_add_css($path . '/css/cm_tv_schedules.css');

    // add user configured css
    if ($instance = file_stream_wrapper_get_instance_by_uri('public://cm_tv_schedules.css')) {
      $url = $instance->getExternalUrl();
      drupal_add_css($url, array('type' => 'external'));
    }
  }

  $current = date('H:i:s', strtotime(date('H:i:s')));
  $primetime = date('H:i:s', strtotime('19:00'));

  foreach ($rows['items'] as $key => $hour) {
    $time_classes = array();
    $time_slot = date('H:i:s', strtotime($key));

    // prime time rows
    if ($time_slot >= $primetime) {
      $time_classes[] = 'primetime';
    }
    // current time row
    $next_row = key(array_slice($rows['items'], array_search($key, array_keys($rows['items'])) + 1, 1));
    $next_time_slot = date('H:i:s', strtotime($next_row));
    if ($current >= $time_slot && $current <= $next_time_slot) {
      $time_classes[] = 'current';
    }

    $time_format = variable_get('cm_tv_schedules_show_time_format', 'ampm');
    if ($time_format == 'ampm') {
      $time = strtotime($hour['hour'] . $hour['ampm']);
      $rows['items'][$key]['hour'] = date('g:i', $time);
      $rows['items'][$key]['ampm'] = date('a', $time);
    }elseif ($time_format == '24h') {
    	$time = strtotime($hour['hour'] . $hour['ampm']);
      $rows['items'][$key]['hour'] = date('G', $time);
      $rows['items'][$key]['ampm'] = 'h';
    }

    $rows['items'][$key]['classes_array'] = $time_classes;
    $rows['items'][$key]['classes'] = implode(' ', $time_classes);
  }
}

function cm_tv_schedules_settings_form($form, &$form_state) {
  $format = array(
    '24h' => t('24 hour (7h, 21h)'),
    'ampm' => t('12 hour with minutes (7:00 am/pm)'),
    '12nomin' => t('12 hour, no minutes (7 am, 5 pm)'),
  );

  $form['cm_tv_schedules_show_time_format'] = array(
    '#type' => 'radios',
    '#title' => t('Show time format'),
    '#default_value' => variable_get('cm_tv_schedules_show_time_format', 'ampm'),
    '#options' => $format,
  );

  $form['cm_tv_schedules_disable_css'] = array(
    '#type' => 'checkbox',
    '#title' => t('Disable TV schedules colors CSS'),
    '#default_value' => variable_get('cm_tv_schedules_disable_css', FALSE),
    '#description' => t('Useful if you plan to theme the TV schedule yourself.'),
  );

  $form['customize'] = array(
    '#type' => 'container',
    '#states' => array(
      'invisible' => array(
        ':input[name="cm_tv_schedules_disable_css"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['customize']['cm_tv_schedules_background'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Main background color'),
    '#default_value' => variable_get('cm_tv_schedules_background', 'd4d5d7'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );
  $form['customize']['cm_tv_schedules_date_header_bg'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Date header background color'),
    '#default_value' => variable_get('cm_tv_schedules_date_header_bg', 'd4d5d7'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );
  $form['customize']['cm_tv_schedules_table_header_bg'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Table header background color'),
    '#default_value' => variable_get('cm_tv_schedules_table_header_bg', '0099d9'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );
  $form['customize']['cm_tv_schedules_table_bg'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Default show background color'),
    '#default_value' => variable_get('cm_tv_schedules_table_bg', 'e7e7e1'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );
  $form['customize']['cm_tv_schedules_table_current_bg'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Current show background color'),
    '#default_value' => variable_get('cm_tv_schedules_table_current_bg', 'fbd714'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );
  $form['customize']['cm_tv_schedules_table_prime_bg'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Prime time show background color'),
    '#default_value' => variable_get('cm_tv_schedules_table_prime_bg', 'f7911e'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );

  $form['customize']['cm_tv_schedules_buttons_bg'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Next and Previous background color'),
    '#default_value' => variable_get('cm_tv_schedules_buttons_bg', 'f7911e'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );

  $form['customize']['cm_tv_schedules_buttons_hover_bg'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Next and Previous background hover color'),
    '#default_value' => variable_get('cm_tv_schedules_buttons_hover_bg', 'f7911e'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );

  $form['customize']['cm_tv_schedules_buttons_a'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Next and Prev text link color'),
    '#default_value' => variable_get('cm_tv_schedules_buttons_a', 'ffffff'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );

  $form['customize']['cm_tv_schedules_buttons_a_hover'] = array(
    '#type' => 'jquery_colorpicker',
    '#title' => t('Next and Prev hover text link color'),
    '#default_value' => variable_get('cm_tv_schedules_buttons_a_hover', 'ffffff'),
    '#size' => 11,
    '#maxlength' => 11,
    '#required' => TRUE,
  );

  $form['actions']['#type'] = 'actions';
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration'),
  );

  if (!empty($_POST) && form_get_errors()) {
    drupal_set_message(t('The settings have not been saved because of the errors.'), 'error');
  }

  $form['#submit'][] = 'cm_tv_schedules_settings_form_submit';

  if (!isset($form['#theme'])) {
    $form['#theme'] = 'system_settings_form';
  }
  return $form;
}

/**
 * Form submit handler for cm_tv_schedules_settings_form.
 * Generate the custom css file on submit.
 */
function cm_tv_schedules_settings_form_submit($form, &$form_state) {
  // Exclude unnecessary elements.
  form_state_values_clean($form_state);
  $values = $form_state['values'];

  foreach ($values as $key => $value) {
    if (is_array($value) && isset($form_state['values']['array_filter'])) {
      $value = array_keys(array_filter($value));
    }
    variable_set($key, $value);
  }

  drupal_set_message(t('The configuration options have been saved.'));

  // generate user configured css
  if (!$values['cm_tv_schedules_disable_css']) {
    $css = _cm_tv_schedules_generate_css();
    $file = file_unmanaged_save_data($css, 'public://cm_tv_schedules.css', FILE_EXISTS_REPLACE);
    if ($file !== FALSE) {
      drupal_set_message(t('Custom css generated.'));
    }
    else {
      drupal_set_message(t('Problem generating custom css.'), 'error');
    }
  }
}

function _cm_tv_schedules_generate_css() {
  $output = '';

  $output .= '.view-tv-schedules .calendar-calendar { background-color: #' . variable_get('cm_tv_schedules_background', 'd4d5d7') . '}';
  $output .= '.view-tv-schedules .calendar-calendar table, .view-tv-schedules .view-header.sticky table { background-color: #' . variable_get('cm_tv_schedules_table_bg', 'e7e7e1') . '}';

  $output .= '.view-tv-schedules .view-header { background-color: #' . variable_get('cm_tv_schedules_date_header_bg', 'd4d5d7') . '}';

  $output .= '.view-tv-schedules .calendar-calendar table th, .view-tv-schedules .view-header.sticky table th { background-color: #' . variable_get('cm_tv_schedules_table_header_bg', '0099d9') . '}';
  // Currently playing bg
  $output .= '.view-tv-schedules .current td { background-color: #' . variable_get('cm_tv_schedules_table_current_bg', 'fbd714') . '}';
  // Primetime bg
  $output .= '.view-tv-schedules .primetime td { background-color: #' . variable_get('cm_tv_schedules_table_prime_bg', 'f7911e') . '}';
  // Next and Prev button bg
  $output .= '.view-tv-schedules .date-nav-wrapper .date-prev, .view-tv-schedules .date-nav-wrapper .date-next { background-color: #' . variable_get('cm_tv_schedules_buttons_bg', '999999') . '}';
  // Next and Prev button bg hover
  $output .= '.view-tv-schedules .date-nav-wrapper .date-prev:hover:hover, .view-tv-schedules .date-nav-wrapper .date-next:hover:hover, .view-tv-schedules .date-nav-wrapper .date-prev:hover:focus, .view-tv-schedules .date-nav-wrapper .date-next:hover:focus, .view-tv-schedules .date-nav-wrapper .date-prev:hover:active, .view-tv-schedules .date-nav-wrapper .date-next:hover:active, .view-tv-schedules .date-nav-wrapper .date-prev:hover.active, .view-tv-schedules .date-nav-wrapper .date-next:hover.active, .view-tv-schedules .date-nav-wrapper .date-prev:hover.disabled, .view-tv-schedules .date-nav-wrapper .date-next:hover.disabled, .view-tv-schedules .date-nav-wrapper .date-prev:hover[disabled], .view-tv-schedules .date-nav-wrapper .date-next:hover[disabled] { background-color: #' . variable_get('cm_tv_schedules_buttons_hover_bg', '999999') . '}';

  $output .= '.view-tv-schedules .date-nav-wrapper .date-prev a, .view-tv-schedules .date-nav-wrapper .date-next a { color: #' . variable_get('cm_tv_schedules_buttons_a', 'ffffff') . '}';

  $output .= '.view-tv-schedules .date-nav-wrapper .date-prev a:hover, .view-tv-schedules .date-nav-wrapper .date-next a:hover { color: #' . variable_get('cm_tv_schedules_buttons_a_hover', 'ffffff') . '}';

  return $output;
}
