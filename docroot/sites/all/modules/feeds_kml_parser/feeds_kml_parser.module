<?php

/**
 * @file
 * Feeds KML Parser
 *
 * @license GPL v2 http://www.fsf.org/licensing/licenses/gpl.html
 * @author Chris Skene chris at xtfer dot com
 * @copyright Copyright(c) 2015 Christopher Skene
 */

/**
 * Implements hook_feeds_plugins().
 */
function feeds_kml_parser_feeds_plugins() {

  $path = drupal_get_path('module', 'feeds_kml_parser') . '/plugins';

  $info['FeedsKMLParser'] = array(
    'name' => 'KML parser',
    'description' => 'Parse KML files.',
    'handler' => array(
      'parent' => 'FeedsParser',
      'class' => 'FeedsKMLParser',
      'file' => 'FeedsKMLParser.php',
      'path' => $path,
    ),
  );

  return $info;
}

/**
 * Parse KML file.
 *
 * @param string $raw
 *   File contents.
 *
 * @return array
 *   An array of the parsed KML file.
 */
function kml_parser_parse($raw) {

  $feeds = $items = array();

  $xml = @ simplexml_load_string($raw);

  $feeds['title'] = (string) $xml->Document->name;

  // @todo Make xpath case insensitive.
  $outlines = $xml->Document->Folder[0]->Placemark;

  foreach ($outlines as $outline) {

    $item = array();
    $item['name'] = (string) $outline->name;
    $item['description'] = (string) $outline->description;
    $geometry_data = explode(',0 ', ',' . (string) $outline->MultiGeometry->Polygon->outerBoundaryIs->LinearRing->coordinates);
    $i = 0;
    foreach ($geometry_data as $geometry_value) {
      if (!empty($geometry_value)) {
        $geometry_data[$i] = str_replace(' 0', '', str_replace(',', ' ', trim(str_replace(', ', '', $geometry_value))));
      }
      $i++;
    }

    $item['geometry'] = 'POLYGON((' . implode(',', $geometry_data) . '))';

    if (isset($item['name']) && isset($item['geometry'])) {
      $items[] = $item;

    }
  }
  $feeds['items'] = $items;

  return $feeds;
}
