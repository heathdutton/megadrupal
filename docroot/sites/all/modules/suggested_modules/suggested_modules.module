<?php

/**
 * Implements hook_theme().
 * @return array
 */
function suggested_modules_theme() {
  return
    array(
      'suggested_modules_fieldset' => array(
        'render element' => 'form',
      ),
  );
}

/**
 * Implements hook_form_alter().
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function suggested_modules_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'system_modules') {
    $result = db_query("SELECT * FROM {system} WHERE type = :type ORDER BY weight ASC, name ASC", array(':type' => 'module'));
    foreach ($result as $record) {
      $suggested_modules = array();
      $info = unserialize($record->info);
      if (empty($info['hidden'])) {
        $modules[$info['package']][$record->name] = array('info' => $info, 'filename' => $record->filename);

        if (!empty($info['suggests'])) {
          foreach ($info['suggests'] as $value) {
            if (preg_match('/ \| /', $value)) {
              $data = explode(' | ', $value);
              $module_name = $data[0];
              $exists = module_exists($module_name);
              $title = ucwords(str_replace('_', ' ', $module_name));
              $url = drupal_parse_url($data[1]);
              $link = preg_match('/http:\/\/drupal\.org\/project/', $url['path']) ? $url['path'] : 'http://drupal.org/project/modules?filters=drupal_core%3A103&solrsort=sis_project_release_usage%20desc&text=' . $title;
              $suggested = $exists ? $title : l($title, $link, array('absolute' => TRUE, 'external' => TRUE, 'attributes' => array('target' => '_blank')));
            } else {
              $module_name = $value;
              $exists = module_exists($value);
              $title = ucwords(str_replace('_', ' ', $value));
              $suggested = $title;
            }

            if ($exists) {
              $suggested .= ' (<span class="admin-enabled">enabled</span>)';
            } else {
              $module_downloaded = db_query("SELECT name FROM {system} WHERE type = :type AND name = :name", array(':type' => 'module', ':name' => $module_name))->fetchField();
              $suggested .= $module_downloaded ? ' (<span class="admin-disabled">disabled</span>)' : ' (<span class="admin-missing">missing</span>)';
            }

            $suggested_modules[] = $suggested;
          }
        }

        $form['modules'][$info['package']][$record->name]['#suggests'] = count($suggested_modules) ? $suggested_modules : FALSE;
      }
    }

    foreach (element_children($form['modules']) as $package) {
      $form['modules'][$package]['#theme'] = 'suggested_modules_fieldset';
    }
  }
}

/**
 * Theme function. Similar to system_modules_fieldset, but adds in suggested module data.
 * @param $variables
 * @return string
 */
function theme_suggested_modules_fieldset($variables) {
  $form = $variables['form'];

  // Individual table headers.
  $rows = array();
  // Iterate through all the modules, which are
  // children of this fieldset.
  foreach (element_children($form) as $key) {
    // Stick it into $module for easier accessing.
    $module = $form[$key];
    $row = array();
    unset($module['enable']['#title']);
    $row[] = array('class' => array('checkbox'), 'data' => drupal_render($module['enable']));
    $label = '<label';
    if (isset($module['enable']['#id'])) {
      $label .= ' for="' . $module['enable']['#id'] . '"';
    }
    $row[] = $label . '><strong>' . drupal_render($module['name']) . '</strong></label>';
    $row[] = drupal_render($module['version']);
    // Add the description, along with any modules it requires.
    $description = drupal_render($module['description']);
    if ($module['#requires']) {
      $description .= '<div class="admin-requirements">' . t('Requires: !module-list', array('!module-list' => implode(', ', $module['#requires']))) . '</div>';
    }
    if ($module['#required_by']) {
      $description .= '<div class="admin-requirements">' . t('Required by: !module-list', array('!module-list' => implode(', ', $module['#required_by']))) . '</div>';
    }
    if ($module['#suggests']) {
      $description .= '<div class="admin-requirements">' . t('Suggested modules: !module-list', array('!module-list' => implode(', ', $module['#suggests']))) . '</div>';
    }
    $row[] = array('data' => $description, 'class' => array('description'));
    // Display links (such as help or permissions) in their own columns.
    foreach (array('help', 'permissions', 'configure') as $key) {
      $row[] = array('data' => drupal_render($module['links'][$key]), 'class' => array($key));
    }
    $rows[] = $row;
  }

  return theme('table', array('header' => $form['#header'], 'rows' => $rows));
}