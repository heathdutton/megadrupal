<?php

/**
 * @file 
 * certify.install php file
 * Install instructions for Drupal module Certify.
 */

/**
 * Implements hook_requirements().
 */
function certify_requirements($phase) {
  $requirements = array();
  $t = get_t();
  
  if ($phase == "runtime") {
    $certificate_path = variable_get('certify_certificate_path', '/var/drupal-content/certify');
    $pathreq = array(
      'title' => $t('Certify path required'),
      'description' => $t('Certificate path needs to be set to a directory writable by the webserver.'),
      'value' => $t("Not set or not writable."),
      'severity' => REQUIREMENT_ERROR,
    );

    if (!$certificate_path || !is_dir($certificate_path)) {
      $requirements['pathexists'] = $pathreq;
    }
    if (!is_writable($certificate_path)) {
      $requirements['pathexists'] = $pathreq;
    }

    $pdftkpath = variable_get('certify_pdftk_path', '/usr/bin/pdftk');
    $pdftkreq = array(
      'title' => $t('Certify pdftk required'),
      'description' => $t('pdftk path needs to point to the pdftk executable on the server.'),
      'value' => $t("Not found."),
      'severity' => REQUIREMENT_ERROR,
    );

    if (!file_exists($pdftkpath) || !is_executable($pdftkpath)) {
      $requirements['pdftkinstalled'] = $pdftkreq;
    }

    if (!count(certify_conditiontypes())) {
      $requirements['noconditions'] = array(
        'title' => t('No conditions enabled'),
        'description' => t('You haven\'t enabled any conditions for Certify. The module makes no sense without any.'),
        'value' => $t("None found."),
        'severity' => REQUIREMENT_WARNING,
      );
    }

  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function certify_install() {
  // Ensure the node type is available.
  node_types_rebuild();
  
  // Add body field.
  $types = node_type_get_types();
  node_add_body_field($types['certificate'], 'Description');
  
  drupal_set_message(st('Certify settings are available under !link', 
    array('!link' => l(st('Administration > Configuration > Certify'),   'admin/config/system/certify' ))
  ));
}

/**
 * Implements hook_uninstall().
 */
function certify_uninstall() {
  variable_del('certify_certificate_path');
  variable_del('certify_og_filter');
  variable_del('certify_pdftk_path');
  variable_del('certify_dateformat');
  variable_del('certify_drm_passphrase');
  variable_del('certify_display_score');
  variable_del('certify_email');
}

/**
 * Implements hook_schema().
 */
function certify_schema() {
  $schema['certify_conditions'] = array(
    'description' => 'Conditions that need to be met for someone to get certified.',
    'fields' => array(
      'cid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "The certificates node identifier.",
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "The certificates version identifier.",
      ),
      'condtype' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The condition type.',
      ),
      'condnode' => array(
        'type' => 'int',
        'description' => 'The node operated on by the condition.',
      ),
    ),
    'primary key' => array('vid', 'condtype', 'condnode'),
    'indexes' => array(
      'cid' => array('cid')
    ),
  );
  return $schema;
}

/**
 * Implements hook_enable().
 */
function certify_enable() {
  drupal_flush_all_caches();
}

/**
 * Remove condnodev from {certify_conditions} table.
 */
function certify_update_7200() {
  db_drop_field('certify_conditions', 'condnodev');
}

/**
 * Fixed index and primary key on {certify_conditions} table.
 */
function certify_update_7201() {
  db_change_field('certify_conditions', 'condtype', 'condtype', array(
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'description' => 'The condition type.'
  ));
  db_drop_index('certify_conditions', 'cid_condtype_condnode');
  db_drop_index('certify_conditions', 'cid');
  db_drop_primary_key('certify_conditions');
  db_add_primary_key('certify_conditions', array('vid', 'condtype', 'condnode'));
  db_add_index('certify_conditions', 'cid', array('cid'));
}