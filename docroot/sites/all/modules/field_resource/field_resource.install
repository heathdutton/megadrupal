<?php
/**
 *
 * @file
 *
 */

/**
 * Implements hook_field_schema().
 *
 * @param $field
 *
 * @return array
 */
function field_resource_field_schema($field) {
  if ($field['type'] == 'field_resource') {
    $schema = array();

    $schema['columns'] = array(
      'field_resource_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'field_resource_machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'field_resource_content_value' => array(
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'field_resource_content_format' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    );

    return $schema;
  }
}

/**
 * Implements hook_install().
 */
function field_resource_install() {
  $endpoint = field_resource_example_service();
  // Export the predefined service.
  $export = ctools_export_crud_export('services_endpoint', $endpoint);
  // Manage the import.
  $item = ctools_export_crud_import('services_endpoint', $export);
  if (is_string($item)) {
    watchdog('field_resource', t('The example field resource service import has faild.'));
  }
  $item->export_ui_allow_overwrite = FALSE;
  $item->export_ui_code = $export;
  // Save as a new service.
  ctools_export_crud_save('services_endpoint', $item);
}

/**
 * An example service. This could be useful to try out the module.
 *
 * @return stdClass
 */
function field_resource_example_service() {
  $endpoint = new stdClass();
  $endpoint->disabled = FALSE; /* Edit this to true to make a default endpoint disabled initially */
  $endpoint->api_version = 3;
  $endpoint->name = 'endpoint';
  $endpoint->server = 'rest_server';
  $endpoint->path = 'endpoint';
  $endpoint->authentication = array(
    'services' => 'services',
  );
  $endpoint->server_settings = array(
    'rest_server' => array(
      'formatters' => array(
        'json' => TRUE,
        'bencode' => FALSE,
        'jsonp' => FALSE,
        'php' => FALSE,
        'rss' => FALSE,
        'xml' => FALSE,
        'yaml' => FALSE,
      ),
      'parsers' => array(
        'application/json' => TRUE,
        'application/vnd.php.serialized' => FALSE,
        'application/x-www-form-urlencoded' => FALSE,
        'application/x-yaml' => FALSE,
        'multipart/form-data' => FALSE,
      ),
    ),
  );
  $endpoint->resources = array(
    'resource' => array(
      'operations' => array(
        'retrieve' => array(
          'enabled' => 1,
        ),
      ),
    ),
  );
  $endpoint->debug = 0;

  return $endpoint;
}
