<?php

/**
 * @file
 */

/**
 * Implements hook_menu().
 */
function amocrm_widget_mail_menu() {
  $items['amocrm-widget-mail/email-form'] = array(
    'title' => 'amoCrm mail confirm form',
    'page callback' => 'amocrm_widget_mail_form',
    'access arguments' => array('access content'),
    'delivery callback' => 'ajax_deliver',
  );

  return $items;
}

/**
 * Implements hook_amocrm_widget_info().
 */
function amocrm_widget_mail_amocrm_widget_info() {
  return array(
    array(
      'title' => t('Mail widget'),
      'description' => '',
      'settings_form_path' => 'admin/amocrm-widget/links',
      'links' => array(
        array(
          'content' => l('Send Mail', '', array('attributes' => array('id' => 'drupal-send-mail'))),
          'group' => 'Mailing',
          'ammocrm_page' => 'contacts',
        ),
      ),
    ),
  );
}

/**
 * Email form for amoCRM.
 */
function amocrm_widget_mail_form() {
  module_load_include('inc', 'amocrm_widget', 'amocrm_widget.ajax');

  $card_id = isset($_POST['card_id']) ? trim($_POST['card_id']) : NULL;
  $card_entity = isset($_POST['card_entity']) ? check_plain(trim($_POST['card_entity'])) : NULL;

  if (isset($card_entity, $card_id)) {
    $client = amocrm_api_get_default_client();

    if (!empty($client)) {
      switch($card_entity) {
        case AMOCRM_TYPE_CONTACT:
          $current_entity = amocrm_api_contact_load($client, $card_id);
        break;

        case AMOCRM_TYPE_COMPANY:
          $current_entity = amocrm_api_company_load($client, $card_id);
          break;
      }
    }
  }

  foreach ($current_entity['custom_fields'] as $custom_fields) {
    if ($custom_fields['code'] == 'EMAIL') {
      foreach ($custom_fields['values'] as $email) {
        $card_email[] = $email['value'];
      }
    }
  }

  $form = array();

  $form['fields']['email'] = array(
    'type' => 'textfield',
    'is_textarea' => FALSE,
    'name' => 'mail_form_email',
    'placeholder' => 'To',
    'label' => t('To'),
    'weight' => 1,
    'defaultValue' => (!empty($card_email) && is_array($card_email)) ? implode(', ', $card_email) : '',
    'validators' => array(
      'required' => TRUE,
      'max_length' => 30,
    ),
  );

  $form['fields']['subject'] = array(
    'type' => 'textfield',
    'is_textarea' => FALSE,
    'name' => 'mail_form_subject',
    'placeholder' => 'Subject',
    'label' => t('Subject'),
    'weight' => 2,
    'validators' => array(
      'required' => TRUE,
      'max_length' => 100,
    ),
  );

  $form['fields']['body'] = array(
    'type' => 'textfield',
    'is_textarea' => TRUE,
    'name' => 'mail_form_body',
    'placeholder' => 'Body',
    'label' => t('Body'),
    'weight' => 3,
    'validators' => array(
      'required' => TRUE,
      'max_length' => 500,
    ),
  );

  $form['message'] = t('Send email');
  $form['button_confirm'] = t('Send mail');
  $form['button_cancel'] = t('Cancel');
  $form['callback'] = 'amocrm_widget_mail_send_mail';

  $commands[] = amocrm_widget_ajax_command_open_form($form);

  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}

/**
 * Submit callback for amoCRM amocrm_widget_mail_form.
 */
function amocrm_widget_mail_send_mail($form_data) {
  global $language;

  require_once DRUPAL_ROOT . '/includes/ajax.inc';

  $emails = !empty($form_data['email']) ? explode(',', $form_data['email']) : '';
  $params['subject'] = !empty($form_data['subject']) ? $form_data['subject'] : '';
  $params['body'] = !empty($form_data['body']) ? check_plain($form_data['body']) : '';

  if (isset($emails, $params['subject'])) {
    $emails = array_map('trim', $emails);

    foreach ($emails as $email) {
      if (!empty($email)) {
        drupal_mail('amcrm_widget_send_mail', 'amocrm_widget_mail', $email, $language->language, $params);
      }
    }
  }

  return array(ajax_command_alert('Mail was send'));
}

/**
 * Implements hook_mail().
 */
function amcrm_widget_send_mail_mail($key, &$message, $params) {
  if ($key == 'amocrm_widget_mail') {
    $message['subject'] = $params['subject'];
    $message['body'][] = $params['body'];
  }
}
