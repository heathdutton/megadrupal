<?php
class vrListTestCase extends DrupalWebTestCase {
  public function setUp() {
    parent::setUp('content', 'vr', 'vr_list');
    $path = drupal_get_path('module', 'vr');
    $filepath = $path . '/tests/settings.php';
    include_once DRUPAL_ROOT . '/' . $filepath;
  }
}

class vrListTests extends vrListTestCase {
  public static function getInfo() {
    return array(
      'name' => t('List Management'),
      'description' => t('Add, edit, delete VR lists and list members.'),
      'group' => 'VerticalResponse',
    );
  }

  function testBasicListManagement() {
    $perms = array(
      'access content',
      'access comments',
      'administer VerticalResponse',
    );
    $this->privileged_user = $this->drupalCreateUser($perms);
    $this->drupalLogin($this->privileged_user);

    // Create List
    $form['list_name'] = $this->randomName(32);
    $this->drupalPost('admin/structure/vr/list', $form, t('Create List'));

    $param = array(
      'name' => $form['list_name'],
    );

    $this->vrList = vr_api('enumerateLists', $param);
    $this->vrList = reset($this->vrList);
    $message = t('Created list @title.', array('@title' => $this->vrList->name));
    $this->assertTrue(is_object($this->vrList), $message);

    // Add list member
    $list_member['email_address'] = $this->randomName(8) . '@email.com';
    $list_member['first_name'] = $this->randomName(6);
    $list_member['last_name'] = $this->randomName(6);
    $form_location = 'admin/structure/vr/list/' . $this->vrList->id . '/add-member';
    $this->drupalPost($form_location, $list_member, t('Save'));

    unset($param);
    $param = array(
      'email_address' => $list_member['email_address'],
      'list_id' => $this->vrList->id,
    );
    $this->list_member = vr_api('getListMemberByEmailAddress', $param);
    $tokens = array('@email' => $list_member['email_address']);
    $message = t('Created list member @email', $tokens);
    $this->assertTrue(is_object($this->list_member), $message);

    // Delete new list member.
    $path = drupal_get_path('module', 'vr_list');
    include_once DRUPAL_ROOT . '/' . $path . '/vr_list_member.inc';
    $member = new vr_list_member($this->vrList->id, $this->list_member);
    $member_removal['member[' . $member->member_array['hash'] . '][operation]'] = -1;
    $form_location = 'admin/structure/vr/list/' . $this->vrList->id . '/edit';
    $this->drupalPost($form_location, $member_removal, t('Save Changes'));
    $this->drupalPost(NULL, array(), t('Confirm'));
    $list = vr_api('enumerateLists', array('list_id' => $this->vrList->id));
    $this->assertEqual(0, $list[0]->size, t('List member has been removed.'));

    // Delete list
    $form_location = 'admin/structure/vr/list/' . $this->vrList->id . '/delete';
    $this->drupalPost($form_location, array(), t('Confirm'));
    $text = t('@list has been deleted.', array('@list' => $this->vrList->name));
    $this->assertText($text, $text);
  }
}
