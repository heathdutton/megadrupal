<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:vrns="http://api.verticalresponse.com/1.0/VRAPI" xmlns:vrtypens="http://api.verticalresponse.com/1.0/VRAPI.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:vr="http://www.verticalresponse.com/vrns" targetNamespace="http://api.verticalresponse.com/1.0/VRAPI" name="VRAPI">
  <wsdl:types>
    <xsd:schema targetNamespace="http://api.verticalresponse.com/1.0/VRAPI.xsd">
      <xsd:import namespace="http://schemas.xmlsoap.org/wsdl/"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <xsd:complexType name="ArrayOfCampaignContentLink">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:CampaignContentLink[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfCompany">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:Company[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfDomainCount">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:DomainCount[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfInteger">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="xsd:int[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfList">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:List[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfListMember">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:ListMember[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfNVDictionary">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:NVDictionary[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfOrderByField">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:OrderByField[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfRejectedRecordDetail">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:RejectedRecordDetail[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfString">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="xsd:string[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="ArrayOfUser">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:User[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="BackgroundTaskStatus">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="start_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="end_date" type="xsd:dateTime"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="status" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="percent_complete" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="CampaignContentLink">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="position" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="redirect_url" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="click_text" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="hash" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_item_id" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="Company">
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="address_1" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="address_2" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="city" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="state" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postalcode" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="country" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="phone" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="fax" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="url" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="creation_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="support_email" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="emails_per_hour" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="logo" type="vrtypens:FileSpec"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="users" type="vrtypens:ArrayOfUser"/>
        
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="DomainCount">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="domain" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="count" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="Email">
    
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="email_hash" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="description" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="email_type" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="status" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="hosted_email" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="from_label" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="reply_to_email" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="company_name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="send_friend" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="creation_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_updated" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="mail_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="additional_costs" type="xsd:float"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="subject" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="freeform_html" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="freeform_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="unsub_message" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="unsub_link_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postal_addr_1" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postal_addr_2" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postal_city" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postal_state" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postal_code" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postal_country" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="tested" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="previewed_html" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="previewed_text" type="xsd:boolean"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmail">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:Email[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaign">
    
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="hash" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="template_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="status" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="display_status" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="tested" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="declined" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="from_label" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="support_email" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="send_friend" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="redirect_url" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="sent_size" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="creation_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_updated" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="mail_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="additional_costs" type="xsd:float"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="contents" type="vrtypens:ArrayOfEmailCampaignContent"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="modules" type="vrtypens:ArrayOfTemplateCampaignModule"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="lists" type="vrtypens:ArrayOfList"/>
        
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaign">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaign[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaignContent">
    
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="copy" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaignContent">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaignContent[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaignDecline">
    
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="reason" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="date" type="xsd:dateTime"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaignDecline">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaignDecline[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaignDomainStats">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="domain_name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="emails_sent" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="open_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="reopen_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="click_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="sale_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="purchase_total" type="xsd:float"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="bounce_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="unsub_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="responder_count" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaignDomainStats">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaignDomainStats[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaignLinkStats">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="click_text" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="link_url" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="link_type" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="link_hash" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="click_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="distinct_clicker_count" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaignLinkStats">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaignLinkStats[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaignListStats">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_size" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="emails_sent" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="open_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="reopen_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="click_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="sale_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="purchase_total" type="xsd:float"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="bounce_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="unsub_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="responder_count" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaignListStats">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaignListStats[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaignResponseHistogram">
    
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="response_type" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="response_data" type="vrtypens:Histogram"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaignResponseHistogram">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaignResponseHistogram[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailCampaignStats">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_type" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="status" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="sent_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="sales_locale" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="email_credit_cost" type="xsd:float"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="local_email_credit_cost" type="xsd:float"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="local_email_credit_currency" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="additional_costs" type="xsd:float"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="currency_conversion_rate" type="xsd:float"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="roi" type="xsd:float"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="emails_sent" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="open_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="reopen_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="click_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="sale_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="purchase_total" type="xsd:float"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="bounce_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="unsub_count" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="forward_count" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="responder_count" type="xsd:int"/>
        
        
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="link_stats" type="vrtypens:ArrayOfEmailCampaignLinkStats"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="domain_stats" type="vrtypens:ArrayOfEmailCampaignDomainStats"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="list_stats" type="vrtypens:ArrayOfEmailCampaignListStats"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailCampaignStats">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailCampaignStats[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailLayout">
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="layout_name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="layout_category" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="small_thumbnail_path" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="large_thumbnail_path" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailLayout">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailLayout[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EmailLayoutCategory">
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="parent_category_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="category_name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="category_description" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEmailLayoutCategory">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:EmailLayoutCategory[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Event">
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="description" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="start_date" type="xsd:dateTime"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="end_date" type="xsd:dateTime"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfEvent">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:Event[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="FileSpec">
    
    
    <xsd:sequence>
       <xsd:element minOccurs="1" maxOccurs="1" name="filename" type="xsd:string"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="delimiter" type="xsd:string"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="location" type="xsd:string"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="contents" type="soapenc:base64"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="media_library_directory" type="xsd:string"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="is_directory" type="xsd:boolean"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="size" type="xsd:int"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_modified" type="xsd:dateTime"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfFileSpec">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:FileSpec[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="HistogramBin">
    
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="category" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="count" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="Histogram">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:HistogramBin[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="List">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="size" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="type" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_mailed" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="form_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="creation_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="mailable" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="mailable_last_updated" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="status" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="delete_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="deleted_by" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="fields" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="indexed_fields" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="displayed_fields" type="vrtypens:ArrayOfString"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ListMember">
    
    <xsd:sequence>
       <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="list_name" type="xsd:string"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="list_type" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="member_data" type="vrtypens:NVDictionary"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="NVDictionary">
    <xsd:complexContent>
        <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:NVPair[]"/>
        </xsd:restriction>
    </xsd:complexContent>
</xsd:complexType>
      <xsd:complexType name="NVPair">
    
    <xsd:sequence>
       <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="value" type="xsd:string" nillable="true"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="OptinForm">
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="company_id" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="redirect_url" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="logo_name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confimation_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="from_label" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confirmation_html" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confirmation_subject" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confirmation_from_email" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confirmation_greeting_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confirmation_link_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confirmation_closing_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="notification_frequency" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="next_notification" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="border_color" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="background_color" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="field_text_color" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="title_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="required_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="submit_button_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="confirmation_redirect_url" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="list_name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="list_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="question_collection" type="vrtypens:ArrayOfOptinQuestion"/>
        
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="OptinQuestion">
    
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="question" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="position" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="required" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfOptinQuestion">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:OptinQuestion[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="OrderByField">
    
    <xsd:sequence>
       <xsd:element minOccurs="1" maxOccurs="1" name="field_name" type="xsd:string"/>
       <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="direction" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="PricingStructureTier">
    
    
    <xsd:sequence>
       <xsd:element minOccurs="1" maxOccurs="1" name="minimum" type="xsd:int"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="maximum" type="xsd:int"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="unit_price" type="xsd:float"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfPricingStructureTier">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:PricingStructureTier[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="PurchaseLineItem">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="product_type" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="product_details" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="quantity" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfPurchaseLineItem">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:PurchaseLineItem[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RejectedRecordDetail">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="reason_code" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="reason" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="num_records" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="SegmentationQuery">
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="operation_type" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="description" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="inputs" type="vrtypens:ArrayOfSegmentationQueryInput"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="status" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="display_context" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="deleted_by" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="delete_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_run_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_run_size" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfSegmentationQuery">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:SegmentationQuery[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SegmentationQueryInput">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="input_type" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="ids" type="vrtypens:ArrayOfInteger"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="constraints" type="vrtypens:ArrayOfSegmentationQueryInputConstraint"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="input_constraint_conjunction" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_run_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_run_size" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfSegmentationQueryInput">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:SegmentationQueryInput[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SegmentationQueryInputConstraint">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="constrained_entity" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="constrained_field" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="constraint_operator" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="constraint_values" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="constrained_field_start_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="constrained_field_end_date" type="xsd:dateTime"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="match_if_field_missing" type="xsd:boolean"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfSegmentationQueryInputConstraint">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:SegmentationQueryInputConstraint[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SegmentationQueryOutputList">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_type" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="num_records" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfSegmentationQueryOutputList">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:SegmentationQueryOutputList[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SfMergedFieldRecord">
    
    <xsd:sequence>
       <xsd:element minOccurs="1" maxOccurs="1" name="sf_field" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="vr_field" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfSfMergedFieldRecords">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:SfMergedFieldRecord[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="StreetAddress">
    <xsd:sequence>
       <xsd:element minOccurs="1" maxOccurs="1" name="address_1" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="address_2" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="city" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="state" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="postalcode" type="xsd:string"/>
       <xsd:element minOccurs="1" maxOccurs="1" name="country" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="Survey">
    
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="description" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="status" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="survey_hash" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfSurvey">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:Survey[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SurveyInvitation">
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="survey_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfSurveyInvitation">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:SurveyInvitation[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="TemplateCampaignModule">
    
    
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="position" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="template_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="hash" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="title" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="copy" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="redirect_url" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="click_text" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="images" type="vrtypens:ArrayOfFileSpec"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="ArrayOfTemplateCampaignModule">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="vrtypens:TemplateCampaignModule[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="User">
    <xsd:sequence>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="email_address" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="company_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="password" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="first_name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_name" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="address_1" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="address_2" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="city" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="state" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="postalcode" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="country" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="timezone" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="creation_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="phone" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="fax" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="url" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="last_activity_date" type="xsd:dateTime"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="offer_optin" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="newsletter_optin" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="password_question" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="promotion" type="xsd:string"/>
        
        
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="addListMemberArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_member" type="vrtypens:ListMember"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="validate_postal_address" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="appendFileToListArgs">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="file" type="vrtypens:FileSpec"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="fields" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="validate_postal_addresses" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="favor_existing_values" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="overwrite_non_nulls_with_nulls_ok" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="overwrite_partial_postal_addresses_ok" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="ignore_first_line" type="xsd:boolean"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="notification_email_address" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="appendFileToListResult">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="total_records" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="records_loaded" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="records_rejected" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="new_list_size" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="new_mailable_size" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="records_already_in_list" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="records_added_to_list" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="records_already_in_master_list" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="records_added_to_master_list" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="new_master_list_size" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="new_master_list_mailable_size" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="records_restricted" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restricted_records_file" type="vrtypens:FileSpec"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="rejected_records_detail" type="vrtypens:ArrayOfRejectedRecordDetail"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="rejected_records_file" type="vrtypens:FileSpec"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="appendTemplateCampaignModuleArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="module" type="vrtypens:TemplateCampaignModule"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="calculateCampaignAudienceArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="calculateCampaignAudienceResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="audience_size" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="total_size" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="total_mailable" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="rejected_records_detail" type="vrtypens:ArrayOfRejectedRecordDetail"/>
                    
                    
                    
                    
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="canCallMethodArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="method_name" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="compileCampaignRecipientResultsArgs">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_name" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="fields_to_include" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_responses" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_lists" type="vrtypens:ArrayOfInteger"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="notification_email_address" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="compileCampaignRecipientResultsResult">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="num_records" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="compileSegmentationQueryArgs">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="segmentation_query_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="output_lists" type="vrtypens:ArrayOfSegmentationQueryOutputList"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="notification_email_address" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="createEmailArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="email" type="vrtypens:Email"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="createEmailCampaignArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="email_campaign" type="vrtypens:EmailCampaign"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="createFileArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="file" type="vrtypens:FileSpec"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="force" type="xsd:boolean"/>
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="createListArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:string"/>
                    
                    <xsd:element name="custom_field_names" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="createOptinFormArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="optin_form" type="vrtypens:OptinForm"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="createSegmentationQueryArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="segmentation_query" type="vrtypens:SegmentationQuery"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="deleteCampaignArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="deleteFileArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="file" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="move_to_trash" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="force" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="deleteListArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="deleteListMemberArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_member" type="vrtypens:ListMember"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="deleteSegmentationQueryArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="segmentation_query_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="deleteTemplateCampaignModuleArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="position" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="downloadCampaignRecipientResultsArgs">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="delimiter" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="remove_duplicates" type="xsd:boolean"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="fields_to_include" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_responses" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_lists" type="vrtypens:ArrayOfInteger"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="notification_email_address" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="start_date" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="end_date" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="downloadCampaignRecipientResultsResult">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="num_records" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="contents" type="vrtypens:FileSpec"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="included_fields" type="vrtypens:ArrayOfString"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="restricted_responses" type="vrtypens:ArrayOfString"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="restricted_lists" type="vrtypens:ArrayOfInteger"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="downloadCompanyUnsubscribesAndBouncesArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="delimiter" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_org_linked_unsubs" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="exclude_campaign_unsubs" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="start_date" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="end_date" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="downloadCompanyUnsubscribesAndBouncesResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="num_records" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="contents" type="vrtypens:FileSpec"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="downloadListArgs">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="delimiter" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="fields_to_include" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_to" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="notification_email_address" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="downloadListResult">
    <xsd:sequence>
        <xsd:element name="list_id" type="xsd:int"/>
        <xsd:element name="num_records" type="xsd:int"/>
        <xsd:element name="contents" type="vrtypens:FileSpec"/>
        <xsd:element name="delimiter" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="included_fields" type="vrtypens:ArrayOfString"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restricted_to" type="vrtypens:ArrayOfString"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="editCompanyArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="company" type="vrtypens:Company"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="editListAttributeArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="attribute_name" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="attribute_value" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="editListMemberArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_member" type="vrtypens:ListMember"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="validate_postal_address" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="editListMembersArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_members" type="vrtypens:ArrayOfListMember"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="validate_postal_address" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="editSegmentationQueryArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="segmentation_query" type="vrtypens:SegmentationQuery"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="editUserArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="user" type="vrtypens:User"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="emptyTrashArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="enumerateEmailCampaignsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="campaign_ids" type="vrtypens:ArrayOfInteger"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="statuses" type="vrtypens:ArrayOfString"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_content" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_deleted" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_lists" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="order_by_fields" type="vrtypens:ArrayOfOrderByField"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="limit" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="offset" type="xsd:int"/>
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="enumerateEmailLayoutCategoriesArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_to_users_cobrand" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="enumerateEmailLayoutsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="categories" type="vrtypens:ArrayOfInteger"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="enumerateFilesArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="base_directory" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="recurse_subdirectories" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="enumerateListsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="list_id" type="xsd:int"/>
                    
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="type" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="name" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="form_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_field_info" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_deleted_lists" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="order_by" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="limit" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="offset" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="enumerateSegmentationQueriesArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="segmentation_query_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_query_detail" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="eraseListMembersArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="fetchBackgroundResultArgs">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="background_task_id" type="xsd:int"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="getBackgroundTaskStatusArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="background_task_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getCampaignDomainCountArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="max_domains" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_domains" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getCampaignDomainCountResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="domain_counts" type="vrtypens:ArrayOfDomainCount"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getCompanyArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="company_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_users" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getCompanySummaryArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    
                    <xsd:element minOccurs="1" maxOccurs="1" name="categories" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getEmailCampaignDeclineHistoryArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getEmailCampaignResponseHistogramsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_ids" type="vrtypens:ArrayOfInteger"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="response_types" type="vrtypens:ArrayOfString"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="bins" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="min_minutes_since_launch" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="max_minutes_since_launch" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getEmailCampaignStatsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_link_stats" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_domain_stats" type="xsd:boolean"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="include_list_stats" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getEmailCreditBalanceArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="company_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getListDomainCountArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="max_domains" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="restrict_domains" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getListDomainCountResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="domain_counts" type="vrtypens:ArrayOfDomainCount"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getListMemberByAddressHashArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="address_hash" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getListMemberByEmailAddressArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="email_address" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getListMemberByHashArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="hash" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getListMembersArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="max_records" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="offset" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="order_by_fields" type="vrtypens:ArrayOfOrderByField"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="first_order_by_field_start_at" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getPricingStructureArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="product_type" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="product_details" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getPurchaseQuotationArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="product_type" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="product_details" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="quantity" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="promotion_code" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getPurchaseQuotationResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="quoted_price" type="xsd:float"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="promotion_code" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="promotion_description" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getSentEmailCampaignsSummaryArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="order_by" type="vrtypens:OrderByField"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="limit" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="offset" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getSentEmailCampaignsSummaryResult">
              <xsd:sequence>
                  <xsd:element minOccurs="1" maxOccurs="1" name="total_sent_email_campaigns" type="xsd:int"/>
                  <xsd:element minOccurs="1" maxOccurs="1" name="email_campaign_stats" type="vrtypens:ArrayOfEmailCampaignStats"/>
              </xsd:sequence>
          </xsd:complexType>
      <xsd:complexType name="getUserArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="user_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getUserByEmailAddressArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="email_address" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="getUserSignonURLArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="ttl" type="xsd:integer"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="logout_url" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="login_url" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="user" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="partner_integration_user" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="partner_integration" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="post_login_path" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="launchEmailCampaignArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="dry_run" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="launchEmailCampaignResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="total_size" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="total_mailable" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="merge_fields" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="loginArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="username" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="password" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_duration_minutes" type="xsd:integer"/>
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="makeCreditCardPurchaseResult">
    <xsd:sequence>
        <xsd:element name="purchase_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="gateway_used" type="xsd:string"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="decline_message" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="moveFileArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="source" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="force" type="xsd:boolean"/>
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="refreshArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="renderCampaignContentArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="campaign_hash" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="content_type" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="view_type" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="max_text_line_length" type="xsd:int"/>
                    
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="renderCampaignContentResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rendered_content" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="content_links" type="vrtypens:ArrayOfCampaignContentLink"/>
                    
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="runSegmentationQueryArgs">
    <xsd:sequence>
        <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="segmentation_query_id" type="xsd:int"/>
        <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="notification_email_address" type="xsd:string"/>
    </xsd:sequence>
</xsd:complexType>
      <xsd:complexType name="searchListMembersArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="field_name" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="field_value" type="xsd:string"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element nillable="true" minOccurs="0" maxOccurs="1" name="max_records" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="sendEmailCampaignTestArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="recipients" type="vrtypens:ArrayOfNVDictionary"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="sendEmailCampaignTestResult">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="text_content_links" type="vrtypens:ArrayOfCampaignContentLink"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="html_content_links" type="vrtypens:ArrayOfCampaignContentLink"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="setCampaignListsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_ids" type="vrtypens:ArrayOfInteger"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="setCustomListFieldsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="fields" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="setDisplayedListFieldsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="displayed_fields" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="setEmailCampaignAttributeArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="value" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="setEmailCampaignContentArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="content" type="vrtypens:EmailCampaignContent"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="setIndexedListFieldsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="indexed_fields" type="vrtypens:ArrayOfString"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="setTemplateCampaignModuleArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="module" type="vrtypens:TemplateCampaignModule"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="transferEmailCreditsArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="from_company_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="to_company_id" type="xsd:int"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="credits_to_transfer" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="undeleteCampaignArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="undeleteListArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="list_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="undeleteSegmentationQueryArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="segmentation_query_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
      <xsd:complexType name="unlaunchEmailCampaignArgs">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="session_id" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="campaign_id" type="xsd:int"/>
                </xsd:sequence>
            </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="addListMemberRequest">
            <wsdl:part name="args" type="vrtypens:addListMemberArgs"/>
        </wsdl:message>
  <wsdl:message name="addListMemberResponse">
            <wsdl:part name="result" type="vrtypens:ListMember"/>
        </wsdl:message>
  <wsdl:message name="appendFileToListBackgroundRequest">
            <wsdl:part name="args" type="vrtypens:appendFileToListArgs"/>
        </wsdl:message>
  <wsdl:message name="appendFileToListBackgroundResponse">
            <wsdl:part name="background_task_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="appendFileToListRequest">
            <wsdl:part name="args" type="vrtypens:appendFileToListArgs"/>
        </wsdl:message>
  <wsdl:message name="appendFileToListResponse">
            <wsdl:part name="result" type="vrtypens:appendFileToListResult"/>
        </wsdl:message>
  <wsdl:message name="appendTemplateCampaignModuleRequest">
            <wsdl:part name="args" type="vrtypens:appendTemplateCampaignModuleArgs"/>
        </wsdl:message>
  <wsdl:message name="appendTemplateCampaignModuleResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="calculateCampaignAudienceRequest">
            <wsdl:part name="args" type="vrtypens:calculateCampaignAudienceArgs"/>
        </wsdl:message>
  <wsdl:message name="calculateCampaignAudienceResponse">
            <wsdl:part name="result" type="vrtypens:calculateCampaignAudienceResult"/>
        </wsdl:message>
  <wsdl:message name="canCallMethodRequest">
            <wsdl:part name="args" type="vrtypens:canCallMethodArgs"/>
        </wsdl:message>
  <wsdl:message name="canCallMethodResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="compileCampaignRecipientResultsBackgroundRequest">
            <wsdl:part name="args" type="vrtypens:compileCampaignRecipientResultsArgs"/>
        </wsdl:message>
  <wsdl:message name="compileCampaignRecipientResultsBackgroundResponse">
            <wsdl:part name="background_task_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="compileCampaignRecipientResultsRequest">
            <wsdl:part name="args" type="vrtypens:compileCampaignRecipientResultsArgs"/>
        </wsdl:message>
  <wsdl:message name="compileCampaignRecipientResultsResponse">
            <wsdl:part name="result" type="vrtypens:compileCampaignRecipientResultsResult"/>
        </wsdl:message>
  <wsdl:message name="compileSegmentationQueryBackgroundRequest">
            <wsdl:part name="args" type="vrtypens:compileSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="compileSegmentationQueryBackgroundResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="compileSegmentationQueryRequest">
            <wsdl:part name="args" type="vrtypens:compileSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="compileSegmentationQueryResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfList"/>
        </wsdl:message>
  <wsdl:message name="createEmail">
            <wsdl:part name="args" type="vrtypens:createEmailArgs"/>
        </wsdl:message>
  <wsdl:message name="createEmailCampaignRequest">
            <wsdl:part name="args" type="vrtypens:createEmailCampaignArgs"/>
        </wsdl:message>
  <wsdl:message name="createEmailCampaignResponse">
            <wsdl:part name="result" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="createEmailResponse">
            <wsdl:part name="result" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="createFileRequest">
            <wsdl:part name="args" type="vrtypens:createFileArgs"/>
        </wsdl:message>
  <wsdl:message name="createFileResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="createListRequest">
            <wsdl:part name="args" type="vrtypens:createListArgs"/>
        </wsdl:message>
  <wsdl:message name="createListResponse">
            <wsdl:part name="list_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="createOptinFormRequest">
            <wsdl:part name="args" type="vrtypens:createOptinFormArgs"/>
        </wsdl:message>
  <wsdl:message name="createOptinFormResponse">
            <wsdl:part name="optin_form_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="createSegmentationQueryRequest">
            <wsdl:part name="args" type="vrtypens:createSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="createSegmentationQueryResponse">
            <wsdl:part name="query_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="deleteCampaignRequest">
            <wsdl:part name="args" type="vrtypens:deleteCampaignArgs"/>
        </wsdl:message>
  <wsdl:message name="deleteCampaignResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="deleteFileRequest">
            <wsdl:part name="args" type="vrtypens:deleteFileArgs"/>
        </wsdl:message>
  <wsdl:message name="deleteFileResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="deleteListMemberRequest">
            <wsdl:part name="args" type="vrtypens:deleteListMemberArgs"/>
        </wsdl:message>
  <wsdl:message name="deleteListMemberResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="deleteListRequest">
            <wsdl:part name="args" type="vrtypens:deleteListArgs"/>
        </wsdl:message>
  <wsdl:message name="deleteListResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="deleteSegmentationQueryRequest">
            <wsdl:part name="args" type="vrtypens:deleteSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="deleteSegmentationQueryResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="deleteTemplateCampaignModuleRequest">
            <wsdl:part name="args" type="vrtypens:deleteTemplateCampaignModuleArgs"/>
        </wsdl:message>
  <wsdl:message name="deleteTemplateCampaignModuleResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="downloadCampaignRecipientResultsBackgroundRequest">
            <wsdl:part name="args" type="vrtypens:downloadCampaignRecipientResultsArgs"/>
        </wsdl:message>
  <wsdl:message name="downloadCampaignRecipientResultsBackgroundResponse">
            <wsdl:part name="background_task_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="downloadCampaignRecipientResultsRequest">
            <wsdl:part name="args" type="vrtypens:downloadCampaignRecipientResultsArgs"/>
        </wsdl:message>
  <wsdl:message name="downloadCampaignRecipientResultsResponse">
            <wsdl:part name="result" type="vrtypens:downloadCampaignRecipientResultsResult"/>
        </wsdl:message>
  <wsdl:message name="downloadCompanyUnsubscribesAndBouncesRequest">
            <wsdl:part name="args" type="vrtypens:downloadCompanyUnsubscribesAndBouncesArgs"/>
        </wsdl:message>
  <wsdl:message name="downloadCompanyUnsubscribesAndBouncesResponse">
            <wsdl:part name="result" type="vrtypens:downloadCompanyUnsubscribesAndBouncesResult"/>
        </wsdl:message>
  <wsdl:message name="downloadListBackgroundRequest">
            <wsdl:part name="args" type="vrtypens:downloadListArgs"/>
        </wsdl:message>
  <wsdl:message name="downloadListBackgroundResponse">
            <wsdl:part name="background_task_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="downloadListRequest">
            <wsdl:part name="args" type="vrtypens:downloadListArgs"/>
        </wsdl:message>
  <wsdl:message name="downloadListResponse">
            <wsdl:part name="result" type="vrtypens:downloadListResult"/>
        </wsdl:message>
  <wsdl:message name="editCompanyRequest">
            <wsdl:part name="args" type="vrtypens:editCompanyArgs"/>
        </wsdl:message>
  <wsdl:message name="editCompanyResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="editListAttributeRequest">
            <wsdl:part name="args" type="vrtypens:editListAttributeArgs"/>
        </wsdl:message>
  <wsdl:message name="editListAttributeResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
            
        </wsdl:message>
  <wsdl:message name="editListMemberRequest">
            <wsdl:part name="args" type="vrtypens:editListMemberArgs"/>
        </wsdl:message>
  <wsdl:message name="editListMemberResponse">
            <wsdl:part name="result" type="vrtypens:ListMember"/>
        </wsdl:message>
  <wsdl:message name="editListMembersRequest">
            <wsdl:part name="args" type="vrtypens:editListMembersArgs"/>
        </wsdl:message>
  <wsdl:message name="editListMembersResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="editSegmentationQueryRequest">
            <wsdl:part name="args" type="vrtypens:editSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="editSegmentationQueryResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="editUserRequest">
            <wsdl:part name="args" type="vrtypens:editUserArgs"/>
        </wsdl:message>
  <wsdl:message name="editUserResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="emptyTrashRequest">
            <wsdl:part name="args" type="vrtypens:emptyTrashArgs"/>
        </wsdl:message>
  <wsdl:message name="emptyTrashResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="enumerateEmailCampaignsRequest">
            <wsdl:part name="args" type="vrtypens:enumerateEmailCampaignsArgs"/>
        </wsdl:message>
  <wsdl:message name="enumerateEmailCampaignsResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfEmailCampaign"/>
        </wsdl:message>
  <wsdl:message name="enumerateEmailLayoutCategoriesRequest">
            <wsdl:part name="args" type="vrtypens:enumerateEmailLayoutCategoriesArgs"/>
        </wsdl:message>
  <wsdl:message name="enumerateEmailLayoutCategoriesResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfEmailLayoutCategory"/>
        </wsdl:message>
  <wsdl:message name="enumerateEmailLayoutsRequest">
            <wsdl:part name="args" type="vrtypens:enumerateEmailLayoutsArgs"/>
        </wsdl:message>
  <wsdl:message name="enumerateEmailLayoutsResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfEmailLayout"/>
        </wsdl:message>
  <wsdl:message name="enumerateFilesRequest">
            <wsdl:part name="args" type="vrtypens:enumerateFilesArgs"/>
        </wsdl:message>
  <wsdl:message name="enumerateFilesResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfFileSpec"/>
        </wsdl:message>
  <wsdl:message name="enumerateListsRequest">
            <wsdl:part name="args" type="vrtypens:enumerateListsArgs"/>
        </wsdl:message>
  <wsdl:message name="enumerateListsResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfList"/>
        </wsdl:message>
  <wsdl:message name="enumerateSegmentationQueriesRequest">
            <wsdl:part name="args" type="vrtypens:enumerateSegmentationQueriesArgs"/>
        </wsdl:message>
  <wsdl:message name="enumerateSegmentationQueriesResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfSegmentationQuery"/>
        </wsdl:message>
  <wsdl:message name="eraseListMembersRequest">
            <wsdl:part name="args" type="vrtypens:eraseListMembersArgs"/>
        </wsdl:message>
  <wsdl:message name="eraseListMembersResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="fetchAppendFileToListBackgroundResultRequest">
            <wsdl:part name="args" type="vrtypens:fetchBackgroundResultArgs"/>
        </wsdl:message>
  <wsdl:message name="fetchAppendFileToListBackgroundResultResponse">
            <wsdl:part name="result" type="vrtypens:appendFileToListResult"/>
        </wsdl:message>
  <wsdl:message name="fetchCompileCampaignRecipientResultsBackgroundResultRequest">
            <wsdl:part name="args" type="vrtypens:fetchBackgroundResultArgs"/>
        </wsdl:message>
  <wsdl:message name="fetchCompileCampaignRecipientResultsBackgroundResultResponse">
            <wsdl:part name="result" type="vrtypens:compileCampaignRecipientResultsResult"/>
        </wsdl:message>
  <wsdl:message name="fetchDownloadCampaignRecipientResultsBackgroundResultRequest">
            <wsdl:part name="args" type="vrtypens:fetchBackgroundResultArgs"/>
        </wsdl:message>
  <wsdl:message name="fetchDownloadCampaignRecipientResultsBackgroundResultResponse">
            <wsdl:part name="result" type="vrtypens:downloadCampaignRecipientResultsResult"/>
        </wsdl:message>
  <wsdl:message name="fetchDownloadListBackgroundResultRequest">
            <wsdl:part name="args" type="vrtypens:fetchBackgroundResultArgs"/>
        </wsdl:message>
  <wsdl:message name="fetchDownloadListBackgroundResultResponse">
            <wsdl:part name="result" type="vrtypens:downloadListResult"/>
        </wsdl:message>
  <wsdl:message name="fetchRunSegmentationQueryBackgroundResultRequest">
            <wsdl:part name="args" type="vrtypens:fetchBackgroundResultArgs"/>
        </wsdl:message>
  <wsdl:message name="fetchRunSegmentationQueryBackgroundResultResponse">
            <wsdl:part name="result_size" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="getBackgroundTaskStatusRequest">
            <wsdl:part name="args" type="vrtypens:getBackgroundTaskStatusArgs"/>
        </wsdl:message>
  <wsdl:message name="getBackgroundTaskStatusResponse">
            <wsdl:part name="result" type="vrtypens:BackgroundTaskStatus"/>
        </wsdl:message>
  <wsdl:message name="getCampaignDomainCountRequest">
            <wsdl:part name="args" type="vrtypens:getCampaignDomainCountArgs"/>
        </wsdl:message>
  <wsdl:message name="getCampaignDomainCountResponse">
            <wsdl:part name="result" type="vrtypens:getCampaignDomainCountResult"/>
        </wsdl:message>
  <wsdl:message name="getCompanyRequest">
            <wsdl:part name="args" type="vrtypens:getCompanyArgs"/>
        </wsdl:message>
  <wsdl:message name="getCompanyResponse">
            <wsdl:part name="result" type="vrtypens:Company"/>
        </wsdl:message>
  <wsdl:message name="getCompanySummaryRequest">
            <wsdl:part name="args" type="vrtypens:getCompanySummaryArgs"/>
        </wsdl:message>
  <wsdl:message name="getCompanySummaryResponse">
            <wsdl:part name="result" type="vrtypens:NVDictionary"/>
        </wsdl:message>
  <wsdl:message name="getEmailCampaignDeclineHistoryRequest">
            <wsdl:part name="args" type="vrtypens:getEmailCampaignDeclineHistoryArgs"/>
        </wsdl:message>
  <wsdl:message name="getEmailCampaignDeclineHistoryResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfEmailCampaignDecline"/>
        </wsdl:message>
  <wsdl:message name="getEmailCampaignResponseHistogramsRequest">
            <wsdl:part name="args" type="vrtypens:getEmailCampaignResponseHistogramsArgs"/>
        </wsdl:message>
  <wsdl:message name="getEmailCampaignResponseHistogramsResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfEmailCampaignResponseHistogram"/>
        </wsdl:message>
  <wsdl:message name="getEmailCampaignStatsRequest">
            <wsdl:part name="args" type="vrtypens:getEmailCampaignStatsArgs"/>
        </wsdl:message>
  <wsdl:message name="getEmailCampaignStatsResponse">
            <wsdl:part name="result" type="vrtypens:EmailCampaignStats"/>
        </wsdl:message>
  <wsdl:message name="getEmailCreditBalanceRequest">
            <wsdl:part name="args" type="vrtypens:getEmailCreditBalanceArgs"/>
        </wsdl:message>
  <wsdl:message name="getEmailCreditBalanceResponse">
            <wsdl:part name="result" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="getListDomainCountRequest">
            <wsdl:part name="args" type="vrtypens:getListDomainCountArgs"/>
        </wsdl:message>
  <wsdl:message name="getListDomainCountResponse">
            <wsdl:part name="result" type="vrtypens:getListDomainCountResult"/>
        </wsdl:message>
  <wsdl:message name="getListMemberByAddressHashRequest">
            <wsdl:part name="args" type="vrtypens:getListMemberByAddressHashArgs"/>
        </wsdl:message>
  <wsdl:message name="getListMemberByAddressHashResponse">
            <wsdl:part name="result" type="vrtypens:ListMember"/>
        </wsdl:message>
  <wsdl:message name="getListMemberByEmailAddressRequest">
            <wsdl:part name="args" type="vrtypens:getListMemberByEmailAddressArgs"/>
        </wsdl:message>
  <wsdl:message name="getListMemberByEmailAddressResponse">
            <wsdl:part name="result" type="vrtypens:ListMember"/>
        </wsdl:message>
  <wsdl:message name="getListMemberByHashRequest">
            <wsdl:part name="args" type="vrtypens:getListMemberByHashArgs"/>
        </wsdl:message>
  <wsdl:message name="getListMemberByHashResponse">
            <wsdl:part name="result" type="vrtypens:ListMember"/>
        </wsdl:message>
  <wsdl:message name="getListMembersRequest">
            <wsdl:part name="args" type="vrtypens:getListMembersArgs"/>
        </wsdl:message>
  <wsdl:message name="getListMembersResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfListMember"/>
        </wsdl:message>
  <wsdl:message name="getPricingStructureRequest">
            <wsdl:part name="args" type="vrtypens:getPricingStructureArgs"/>
        </wsdl:message>
  <wsdl:message name="getPricingStructureResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfPricingStructureTier"/>
        </wsdl:message>
  <wsdl:message name="getPurchaseQuotationRequest">
            <wsdl:part name="args" type="vrtypens:getPurchaseQuotationArgs"/>
        </wsdl:message>
  <wsdl:message name="getPurchaseQuotationResponse">
            <wsdl:part name="result" type="vrtypens:getPurchaseQuotationResult"/>
        </wsdl:message>
  <wsdl:message name="getSentEmailCampaignsSummaryRequest">
            <wsdl:part name="args" type="vrtypens:getSentEmailCampaignsSummaryArgs"/>
        </wsdl:message>
  <wsdl:message name="getSentEmailCampaignsSummaryResponse">
          <wsdl:part name="result" type="vrtypens:getSentEmailCampaignsSummaryResult"/>
      </wsdl:message>
  <wsdl:message name="getUserByEmailAddressRequest">
            <wsdl:part name="args" type="vrtypens:getUserByEmailAddressArgs"/>
        </wsdl:message>
  <wsdl:message name="getUserByEmailAddressResponse">
            <wsdl:part name="result" type="vrtypens:User"/>
        </wsdl:message>
  <wsdl:message name="getUserRequest">
            <wsdl:part name="args" type="vrtypens:getUserArgs"/>
        </wsdl:message>
  <wsdl:message name="getUserResponse">
            <wsdl:part name="result" type="vrtypens:User"/>
        </wsdl:message>
  <wsdl:message name="getUserSignonURLRequest">
            <wsdl:part name="args" type="vrtypens:getUserSignonURLArgs"/>
        </wsdl:message>
  <wsdl:message name="getUserSignonURLResponse">
            <wsdl:part name="result" type="xsd:string"/>
        </wsdl:message>
  <wsdl:message name="launchEmailCampaignRequest">
            <wsdl:part name="args" type="vrtypens:launchEmailCampaignArgs"/>
        </wsdl:message>
  <wsdl:message name="launchEmailCampaignResponse">
            <wsdl:part name="args" type="vrtypens:launchEmailCampaignResult"/>
        </wsdl:message>
  <wsdl:message name="loginRequest">
            <wsdl:part name="args" type="vrtypens:loginArgs"/>
        </wsdl:message>
  <wsdl:message name="loginResponse">
            <wsdl:part name="sessionId" type="xsd:string"/>
        </wsdl:message>
  <wsdl:message name="moveFileRequest">
            <wsdl:part name="args" type="vrtypens:moveFileArgs"/>
        </wsdl:message>
  <wsdl:message name="moveFileResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="refreshRequest">
            <wsdl:part name="args" type="vrtypens:refreshArgs"/>
        </wsdl:message>
  <wsdl:message name="refreshResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="renderCampaignContentRequest">
            <wsdl:part name="args" type="vrtypens:renderCampaignContentArgs"/>
        </wsdl:message>
  <wsdl:message name="renderCampaignContentResponse">
            <wsdl:part name="result" type="vrtypens:renderCampaignContentResult"/>
        </wsdl:message>
  <wsdl:message name="runSegmentationQueryBackgroundRequest">
            <wsdl:part name="args" type="vrtypens:runSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="runSegmentationQueryBackgroundResponse">
            <wsdl:part name="background_task_id" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="runSegmentationQueryRequest">
            <wsdl:part name="args" type="vrtypens:runSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="runSegmentationQueryResponse">
            <wsdl:part name="result_size" type="xsd:int"/>
        </wsdl:message>
  <wsdl:message name="searchListMembersRequest">
            <wsdl:part name="args" type="vrtypens:searchListMembersArgs"/>
        </wsdl:message>
  <wsdl:message name="searchListMembersResponse">
            <wsdl:part name="result" type="vrtypens:ArrayOfListMember"/>
        </wsdl:message>
  <wsdl:message name="sendEmailCampaignTestRequest">
            <wsdl:part name="args" type="vrtypens:sendEmailCampaignTestArgs"/>
        </wsdl:message>
  <wsdl:message name="sendEmailCampaignTestResponse">
            <wsdl:part name="args" type="vrtypens:sendEmailCampaignTestResult"/>
        </wsdl:message>
  <wsdl:message name="setCampaignListsRequest">
            <wsdl:part name="args" type="vrtypens:setCampaignListsArgs"/>
        </wsdl:message>
  <wsdl:message name="setCampaignListsResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="setCustomListFieldsRequest">
            <wsdl:part name="args" type="vrtypens:setCustomListFieldsArgs"/>
        </wsdl:message>
  <wsdl:message name="setCustomListFieldsResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="setDisplayedListFieldsRequest">
            <wsdl:part name="args" type="vrtypens:setDisplayedListFieldsArgs"/>
        </wsdl:message>
  <wsdl:message name="setDisplayedListFieldsResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="setEmailCampaignAttributeRequest">
            <wsdl:part name="args" type="vrtypens:setEmailCampaignAttributeArgs"/>
        </wsdl:message>
  <wsdl:message name="setEmailCampaignAttributeResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="setEmailCampaignContentRequest">
            <wsdl:part name="args" type="vrtypens:setEmailCampaignContentArgs"/>
        </wsdl:message>
  <wsdl:message name="setEmailCampaignContentResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="setIndexedListFieldsRequest">
            <wsdl:part name="args" type="vrtypens:setIndexedListFieldsArgs"/>
        </wsdl:message>
  <wsdl:message name="setIndexedListFieldsResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="setTemplateCampaignModuleRequest">
            <wsdl:part name="args" type="vrtypens:setTemplateCampaignModuleArgs"/>
        </wsdl:message>
  <wsdl:message name="setTemplateCampaignModuleResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="transferEmailCreditsRequest">
            <wsdl:part name="args" type="vrtypens:transferEmailCreditsArgs"/>
        </wsdl:message>
  <wsdl:message name="transferEmailCreditsResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="undeleteCampaignRequest">
            <wsdl:part name="args" type="vrtypens:undeleteCampaignArgs"/>
        </wsdl:message>
  <wsdl:message name="undeleteCampaignResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="undeleteListRequest">
            <wsdl:part name="args" type="vrtypens:undeleteListArgs"/>
        </wsdl:message>
  <wsdl:message name="undeleteListResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="undeleteSegmentationQueryRequest">
            <wsdl:part name="args" type="vrtypens:undeleteSegmentationQueryArgs"/>
        </wsdl:message>
  <wsdl:message name="undeleteSegmentationQueryResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:message name="unlaunchEmailCampaignRequest">
            <wsdl:part name="args" type="vrtypens:unlaunchEmailCampaignArgs"/>
        </wsdl:message>
  <wsdl:message name="unlaunchEmailCampaignResponse">
            <wsdl:part name="result" type="xsd:boolean"/>
        </wsdl:message>
  <wsdl:portType name="VRAPIPortType">
    <wsdl:operation name="addListMember">
      <wsdl:documentation>
    The addListMember() method adds a single member to the specified list.
    If the new list member fails validation, an exception is thrown. 
    Method should not be used to add more than one list member record at a time.
    Please refer to appendFileToList() or appendFileToListBackground() methods instead.
</wsdl:documentation>
      <wsdl:input message="vrns:addListMemberRequest"/>
      <wsdl:output message="vrns:addListMemberResponse"/>
    </wsdl:operation>
    <wsdl:operation name="appendFileToList">
      <wsdl:documentation>
    The appendFileToList() method adds the members listed in the specified file to the specified list. For the file argument, provide a filename and contents. For PHP, Perl, Ruby, .NET, there is no need to base64-encode the list. Records that fail validation are returned to the user with an explanation, and the location of a file containing the rejected records is returned for downloading as well.
</wsdl:documentation>
      <wsdl:input message="vrns:appendFileToListRequest"/>
      <wsdl:output message="vrns:appendFileToListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="appendFileToListBackground">
      <wsdl:documentation>
    The appendFileToListBackground() method performs the same tasks as the appendFileToList() method,
    but does so after detaching and running as a background process. As a result, no meaningful data
    is returned to the caller (unless a fault is thrown during the data validation stage).
</wsdl:documentation>
      <wsdl:input message="vrns:appendFileToListBackgroundRequest"/>
      <wsdl:output message="vrns:appendFileToListBackgroundResponse"/>
    </wsdl:operation>
    <wsdl:operation name="appendTemplateCampaignModule">
      <wsdl:documentation>
    The appendTemplateCampaignModule() adds a module to the end of a template campaign's list of modules.
</wsdl:documentation>
      <wsdl:input message="vrns:appendTemplateCampaignModuleRequest"/>
      <wsdl:output message="vrns:appendTemplateCampaignModuleResponse"/>
    </wsdl:operation>
    <wsdl:operation name="calculateCampaignAudience">
      <wsdl:documentation>
    The calculateCampaignAudience() method determines the number of list members that will receive a
    given campaign, and provides details about the number of records rejected due to duplication,
    address validation failure, etc.
</wsdl:documentation>
      <wsdl:input message="vrns:calculateCampaignAudienceRequest"/>
      <wsdl:output message="vrns:calculateCampaignAudienceResponse"/>
    </wsdl:operation>
    <wsdl:operation name="canCallMethod">
      <wsdl:documentation>
    The canCallMethod() method determines whether the current session is allowed to call the specified server method.
</wsdl:documentation>
      <wsdl:input message="vrns:canCallMethodRequest"/>
      <wsdl:output message="vrns:canCallMethodResponse"/>
    </wsdl:operation>
    <wsdl:operation name="compileCampaignRecipientResults">
      <wsdl:documentation>
    The compileCampaignRecipientResults() method compiles a new mailing list
    based on the recipient responses to a given campaign. This new list can be pulled from all, or a subset, 
    of the lists that were mailed in the campaign and/or to a subset of the recipient responses
    (OPEN, CLICK, SALE, NONE) of interest. In addition, the user may specify which
    standard or custom fields will be copied from the mailed list(s) into the compiled list.
</wsdl:documentation>
      <wsdl:input message="vrns:compileCampaignRecipientResultsRequest"/>
      <wsdl:output message="vrns:compileCampaignRecipientResultsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="compileCampaignRecipientResultsBackground">
      <wsdl:documentation>
    The asynchronous version of compileCampaignRecipientResults(). This method is invoked and
    the results are emailed to the caller.
</wsdl:documentation>
      <wsdl:input message="vrns:compileCampaignRecipientResultsBackgroundRequest"/>
      <wsdl:output message="vrns:compileCampaignRecipientResultsBackgroundResponse"/>
    </wsdl:operation>
    <wsdl:operation name="compileSegmentationQuery">
      <wsdl:documentation>
    The compileSegmentationQuery() method compiles one or more mailing lists
    based on the results of a given segmentation query.
</wsdl:documentation>
      <wsdl:input message="vrns:compileSegmentationQueryRequest"/>
      <wsdl:output message="vrns:compileSegmentationQueryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="compileSegmentationQueryBackground">
      <wsdl:documentation>
    The asynchronous version of compileSegmentationQuery(). This method is invoked and the results are emailed to the caller.
</wsdl:documentation>
      <wsdl:input message="vrns:compileSegmentationQueryBackgroundRequest"/>
      <wsdl:output message="vrns:compileSegmentationQueryBackgroundResponse"/>
    </wsdl:operation>
    <wsdl:operation name="createEmail">
      <wsdl:documentation>
    The createEmail() method creates the specified email.
</wsdl:documentation>
      <wsdl:input message="vrns:createEmail"/>
      <wsdl:output message="vrns:createEmailResponse"/>
    </wsdl:operation>
    <wsdl:operation name="createEmailCampaign">
      <wsdl:documentation>
    The createEmailCampaign() method creates the specified email campaign.
</wsdl:documentation>
      <wsdl:input message="vrns:createEmailCampaignRequest"/>
      <wsdl:output message="vrns:createEmailCampaignResponse"/>
    </wsdl:operation>
    <wsdl:operation name="createFile">
      <wsdl:documentation>
    The createFile() method adds a file to your Library. If the new file will overwrite an existing file, the "force"
    argument must be provided in order to prevent a fault from being thrown.
    <br/>
    The "file" argument must be a FileSpec with a "filename" specified and either its "contents" or "location" specified. If the
    "contents" are specified, they should be Base64-encoded. Alternately the URL of the file to upload can be given in the
    "location" part of the FileSpec.
</wsdl:documentation>
      <wsdl:input message="vrns:createFileRequest"/>
      <wsdl:output message="vrns:createFileResponse"/>
    </wsdl:operation>
    <wsdl:operation name="createList">
      <wsdl:documentation>
    The createList() method creates a new email or mailing list in the VR system, but does not append any members to that list.
</wsdl:documentation>
      <wsdl:input message="vrns:createListRequest"/>
      <wsdl:output message="vrns:createListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="createOptinForm">
      <wsdl:input message="vrns:createOptinFormRequest"/>
      <wsdl:output message="vrns:createOptinFormResponse"/>
    </wsdl:operation>
    <wsdl:operation name="createSegmentationQuery">
      <wsdl:documentation>
    The createSegmentationQuery() method creates a new database segmentation query.
</wsdl:documentation>
      <wsdl:input message="vrns:createSegmentationQueryRequest"/>
      <wsdl:output message="vrns:createSegmentationQueryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteCampaign">
      <wsdl:documentation>
    The deleteCampaign() method soft deletes a campaign. This operation can be undone with a call to undeleteCampaign().
</wsdl:documentation>
      <wsdl:input message="vrns:deleteCampaignRequest"/>
      <wsdl:output message="vrns:deleteCampaignResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteFile">
      <wsdl:documentation>
    The deleteFile() method removes a file from your Library. If the file to delete is a non-empty directory, then
    the "force" argument must be present to avoid a fault being thrown.
</wsdl:documentation>
      <wsdl:input message="vrns:deleteFileRequest"/>
      <wsdl:output message="vrns:deleteFileResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteList">
      <wsdl:documentation>
    The deleteList() method deletes a single VR mailing list.
</wsdl:documentation>
      <wsdl:input message="vrns:deleteListRequest"/>
      <wsdl:output message="vrns:deleteListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteListMember">
      <wsdl:documentation>
    The deleteListMember() method deletes a single member from a VR mailing list.
    The list member's hash must be provided inside its member_data so that the member can be identified.
</wsdl:documentation>
      <wsdl:input message="vrns:deleteListMemberRequest"/>
      <wsdl:output message="vrns:deleteListMemberResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteSegmentationQuery">
      <wsdl:documentation>
    The deleteSegmentationQuery() method deletes an existing database segmentation query.
</wsdl:documentation>
      <wsdl:input message="vrns:deleteSegmentationQueryRequest"/>
      <wsdl:output message="vrns:deleteSegmentationQueryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteTemplateCampaignModule">
      <wsdl:documentation>
    The deleteTemplateCampaignModule() method removes a module (specified by position) from a template campaign's list of modules. Any module whose position is higher than the given module will be shifted down in the list.
</wsdl:documentation>
      <wsdl:input message="vrns:deleteTemplateCampaignModuleRequest"/>
      <wsdl:output message="vrns:deleteTemplateCampaignModuleResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadCampaignRecipientResults">
      <wsdl:documentation>
    The downloadCampaignRecipientResults() method creates a downloadable file containing the results of each
    recipient a given campaign. This file can be restricted to a subset of the lists that were
    mailed in the campaign and/or to a subset of the recipient responses
    (SALE, BOUNCE, UNSUBSCRIBE, CLICK, OPEN, NONE) of interest. In addition, the user may specify which
    fields will be included in the downloaded file. The response indicates the location of the generated file.
</wsdl:documentation>
      <wsdl:input message="vrns:downloadCampaignRecipientResultsRequest"/>
      <wsdl:output message="vrns:downloadCampaignRecipientResultsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadCampaignRecipientResultsBackground">
      <wsdl:documentation>
    The asynchronous version of downloadCampaignRecipientResults(). This method is invoked and
    the results are emailed to the caller.
</wsdl:documentation>
      <wsdl:input message="vrns:downloadCampaignRecipientResultsBackgroundRequest"/>
      <wsdl:output message="vrns:downloadCampaignRecipientResultsBackgroundResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadCompanyUnsubscribesAndBounces">
      <wsdl:documentation>
    The downloadCompanyUnsubscribesAndBounces() method creates a file containing all the unsubscribe and bounce
    records available for the company calling it. This file is returned as a FileSpec in which the location field
    indicates a URL pointing to the generated file. To return only unsubscribe events that are not related to
    any campaign, set the "exclude_campaign_unsubs" argument to true. If your unsubscribes and bounces are linked
    to other companies within your organization, set the "include_org_linked_unsubs" argument to true to include unsubscribes and bounces
    from those other companies as well. The downloaded file will contain the email address, the event (UNSUBSCRIBE or
    BOUNCE), and the event date. If the "exclude_campaign_unsubs" argument is not used, the file will also contain
    a campaign id for those records that are associated with any campaign.
</wsdl:documentation>
      <wsdl:input message="vrns:downloadCompanyUnsubscribesAndBouncesRequest"/>
      <wsdl:output message="vrns:downloadCompanyUnsubscribesAndBouncesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadList">
      <wsdl:documentation>
    The downloadList() method downloads a single member list, optionally restricting the download to members who have unsubscribed and/or bounced. To specify such restrictions, include "bounces" or "unsubs" (or both) in the restrict_to argument. The fields_to_include argument can be filled with the names of fields in the specified list. A delimiter or "csv" or "tab" must be provided. The resulting file will be available for download, and its location will be provided in the result.
</wsdl:documentation>
      <wsdl:input message="vrns:downloadListRequest"/>
      <wsdl:output message="vrns:downloadListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadListBackground">
      <wsdl:documentation>
    The asynchronous version of downloadList(). The method is invoked and the results are emailed to the caller.
</wsdl:documentation>
      <wsdl:input message="vrns:downloadListBackgroundRequest"/>
      <wsdl:output message="vrns:downloadListBackgroundResponse"/>
    </wsdl:operation>
    <wsdl:operation name="editCompany">
      <wsdl:documentation>
    The editCompany() method updates the specified Company object.
</wsdl:documentation>
      <wsdl:input message="vrns:editCompanyRequest"/>
      <wsdl:output message="vrns:editCompanyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="editListAttribute">
      <wsdl:documentation>
    The editListAttribute() method edits one attribute an existing list. Currently supported attributes are "name" and "form_id".
</wsdl:documentation>
      <wsdl:input message="vrns:editListAttributeRequest"/>
      <wsdl:output message="vrns:editListAttributeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="editListMember">
      <wsdl:documentation>
    The editListMember() method edits a single list member.
    If the new list member values fail validation, an exception is thrown.
    The list member's hash must be provided inside its member_data so that the member can be identified.
    Note that the list member's hash will change if its email address changes.
</wsdl:documentation>
      <wsdl:input message="vrns:editListMemberRequest"/>
      <wsdl:output message="vrns:editListMemberResponse"/>
    </wsdl:operation>
    <wsdl:operation name="editListMembers">
      <wsdl:documentation>
    The editListMembers() method edits one or more list members. If the new list member values fail validation, an exception is thrown.
</wsdl:documentation>
      <wsdl:input message="vrns:editListMembersRequest"/>
      <wsdl:output message="vrns:editListMembersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="editSegmentationQuery">
      <wsdl:documentation>
    The editSegmentationQuery() method edits an existing database segmentation query.
</wsdl:documentation>
      <wsdl:input message="vrns:editSegmentationQueryRequest"/>
      <wsdl:output message="vrns:editSegmentationQueryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="editUser">
      <wsdl:documentation>
    The editUser() method updates the specified User object.
</wsdl:documentation>
      <wsdl:input message="vrns:editUserRequest"/>
      <wsdl:output message="vrns:editUserResponse"/>
    </wsdl:operation>
    <wsdl:operation name="emptyTrash">
      <wsdl:documentation>
    The emptyTrash() method removes all the files from the /Trash directory in the Library.
</wsdl:documentation>
      <wsdl:input message="vrns:emptyTrashRequest"/>
      <wsdl:output message="vrns:emptyTrashResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enumerateEmailCampaigns">
      <wsdl:documentation>
    The enumerateEmailCampaigns() method provides a way to list email campaigns.
    To restrict the listed campaigns to a set of particular statuses, provide those statuses in the statuses argument.
    Valid statuses are "active", "deleted", and "sent". A list of campaign ids can also be provided to restrict the
    listing to a particular set. By default campaign contents and template campaign modules are not included in the
    listing unless the include_content argument is set. The limit and offset arguments can be used to specify a
    "window" of matching campaigns. By default, deleted campaigns will not be included in the result.
    Set the include_deleted argument to true if you want to see deleted campaigns.
</wsdl:documentation>
      <wsdl:input message="vrns:enumerateEmailCampaignsRequest"/>
      <wsdl:output message="vrns:enumerateEmailCampaignsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enumerateEmailLayoutCategories">
      <wsdl:documentation>
    The enumerateEmailLayoutCategories() method enumerates all email layout categories.
</wsdl:documentation>
      <wsdl:input message="vrns:enumerateEmailLayoutCategoriesRequest"/>
      <wsdl:output message="vrns:enumerateEmailLayoutCategoriesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enumerateEmailLayouts">
      <wsdl:documentation>
    The enumerateEmailLayouts() method provides a way to list all layouts within a given layout category.
    Multiple layout categories can be specified.
</wsdl:documentation>
      <wsdl:input message="vrns:enumerateEmailLayoutsRequest"/>
      <wsdl:output message="vrns:enumerateEmailLayoutsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enumerateFiles">
      <wsdl:documentation>
    The enumerateFiles() method provides a way to list files and directories in your Library.
</wsdl:documentation>
      <wsdl:input message="vrns:enumerateFilesRequest"/>
      <wsdl:output message="vrns:enumerateFilesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enumerateLists">
      <wsdl:documentation>
    The enumerateLists() method returns an array of zero or more VerticalResponse mailing lists that belong to the current user. Provide the list_id argument to retrieve just one list. Provide the type argument to limit the response to only lists of that type. The name argument can be used to search lists for one with a particular name. Provide a campaign_id argument to find the lists that have been associated with the given campaign for mailing. Provide a form_id argument to find the list that's associated with a given opt-in form. The limit and offset arguments can be used to specify a "window" of matching lists.
</wsdl:documentation>
      <wsdl:input message="vrns:enumerateListsRequest"/>
      <wsdl:output message="vrns:enumerateListsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enumerateSegmentationQueries">
      <wsdl:documentation>
    The enumerateSegmentationQueries() method returns an array of zero or more database segmentation queries that belong to the current user. Provide the segmentation_query_id argument to retrieve just one segmentation query object. Use the include_query_detail argument (set to true) to retrieve the full detail of of the SegmentationQuery object.
</wsdl:documentation>
      <wsdl:input message="vrns:enumerateSegmentationQueriesRequest"/>
      <wsdl:output message="vrns:enumerateSegmentationQueriesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="eraseListMembers">
      <wsdl:documentation>
    The eraseListMembers() deletes all of the members from a list permanently, but leaves the list (now with zero members) intact.
</wsdl:documentation>
      <wsdl:input message="vrns:eraseListMembersRequest"/>
      <wsdl:output message="vrns:eraseListMembersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="fetchAppendFileToListBackgroundResult">
      <wsdl:documentation>
    The fetchAppendFileToListBackgroundResult() method returns the results of appendFileToListBackground() method call that has since completed. If a fault occurred during the asynchronous execution of the appendFileToListBackground() method, that fault will be returned to the caller of fetchAppendFileToListBackgroundResult(). Otherwise, the return value of this method will be structured the same as the value returned by a successful call to the appendFileToList() method.
    If the method has not yet completed, a fault will be thrown. The status a appendFileToListBackground() call can be checked using the getBackgroundTaskStatus() method.
</wsdl:documentation>
      <wsdl:input message="vrns:fetchAppendFileToListBackgroundResultRequest"/>
      <wsdl:output message="vrns:fetchAppendFileToListBackgroundResultResponse"/>
    </wsdl:operation>
    <wsdl:operation name="fetchCompileCampaignRecipientResultsBackgroundResult">
      <wsdl:documentation>
    The fetchCompileCampaignRecipientResultsBackgroundResult() method returns the results of compileCampaignRecipientResultsBackground() method call that has since completed. If a fault occurred during the asynchronous execution of the compileCampaignRecipientResultsBackground() method, that fault will be returned to the caller of fetchCompileCampaignRecipientResultsBackgroundResult(). Otherwise, the return value of this method will be structured the same as the value returned by a successful call to the compileCampaignRecipientResults() method.
    If the method has not yet completed, a fault will be thrown. The status a compileCampaignRecipientResultsBackground() call can be checked using the getBackgroundTaskStatus() method.
</wsdl:documentation>
      <wsdl:input message="vrns:fetchCompileCampaignRecipientResultsBackgroundResultRequest"/>
      <wsdl:output message="vrns:fetchCompileCampaignRecipientResultsBackgroundResultResponse"/>
    </wsdl:operation>
    <wsdl:operation name="fetchDownloadCampaignRecipientResultsBackgroundResult">
      <wsdl:documentation>
    The fetchDownloadCampaignRecipientResultsBackgroundResult() method returns the results of downloadCampaignRecipientResultsBackground() method call that has since completed. If a fault occurred during the asynchronous execution of the downloadCampaignRecipientResultsBackground() method, that fault will be returned to the caller of fetchDownloadCampaignRecipientResultsBackgroundResult(). Otherwise, the return value of this method will be structured the same as the value returned by a successful call to the downloadCampaignRecipientResults() method.
    If the method has not yet completed, a fault will be thrown. The status a downloadCampaignRecipientResultsBackground() call can be checked using the getBackgroundTaskStatus() method.
</wsdl:documentation>
      <wsdl:input message="vrns:fetchDownloadCampaignRecipientResultsBackgroundResultRequest"/>
      <wsdl:output message="vrns:fetchDownloadCampaignRecipientResultsBackgroundResultResponse"/>
    </wsdl:operation>
    <wsdl:operation name="fetchDownloadListBackgroundResult">
      <wsdl:documentation>
    The fetchDownloadListBackgroundResult() method returns the results of downloadListBackground() method call that has since completed. If a fault occurred during the asynchronous execution of the downloadListBackground() method, that fault will be returned to the caller of fetchDownloadListBackgroundResult(). Otherwise, the return value of this method will be structured the same as the value returned by a successful call to the downloadListBackgroundResult() method.
    If the method has not yet completed, a fault will be thrown. The status a downloadListBackground() call can be checked using the getBackgroundTaskStatus() method.
</wsdl:documentation>
      <wsdl:input message="vrns:fetchDownloadListBackgroundResultRequest"/>
      <wsdl:output message="vrns:fetchDownloadListBackgroundResultResponse"/>
    </wsdl:operation>
    <wsdl:operation name="fetchRunSegmentationQueryBackgroundResult">
      <wsdl:documentation>
    The fetchRunSegmentationQueryBackgroundResult() method returns the results of runSegmentationQueryBackground() method call that has since completed. If a fault occurred during the asynchronous execution of the runSegmentationQueryBackground() method, that fault will be returned to the caller of fetchRunSegmentationQueryBackgroundResult(). Otherwise, the return value of this method will be structured the same as the value returned by a successful call to the runSegmentationQuery() method.
    If the method has not yet completed, a fault will be thrown. The status of a runSegmentationQueryBackground() call can be checked using the getBackgroundTaskStatus() method.
</wsdl:documentation>
      <wsdl:input message="vrns:fetchRunSegmentationQueryBackgroundResultRequest"/>
      <wsdl:output message="vrns:fetchRunSegmentationQueryBackgroundResultResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getBackgroundTaskStatus">
      <wsdl:documentation>
    The getBackgroundTaskStatus() method returns status information about a background task that was started with one of the &lt;MethodName&gt;Background() methods. The information returned includes the current status of the task (running, completed, or failed); the starting timestamp of the task; the ending timestamp (if any) of the task, and the percent complete (in cases where this information is available).
    Once a task has a status of 'completed' (or 'failed') the corresponding fetch&lt;MethodName&gt;BackgroundResult() method can be called to retrieve the result (or fault) of the method call, respectvely. The return value of the fetch&lt;MethodName&gt;BackgroundResult will be the datatype that is documented for the &lt;MethodName&gt; function.
</wsdl:documentation>
      <wsdl:input message="vrns:getBackgroundTaskStatusRequest"/>
      <wsdl:output message="vrns:getBackgroundTaskStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getCampaignDomainCount">
      <wsdl:documentation>
    The getCampaignDomainCount() method retrieves the number of recipients for a specified email campaign,
    by domain (optionally limited to the top N results or to a specified set of domains)
</wsdl:documentation>
      <wsdl:input message="vrns:getCampaignDomainCountRequest"/>
      <wsdl:output message="vrns:getCampaignDomainCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getCompany">
      <wsdl:documentation>
    The getCompany() method returns the specified company.
    Please note that if User information is requested, this method will never provide any User's password.
</wsdl:documentation>
      <wsdl:input message="vrns:getCompanyRequest"/>
      <wsdl:output message="vrns:getCompanyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getCompanySummary">
      <wsdl:documentation>
    The getCompanySummary() method reports various summary statistics such as list count and campaign count for a company.
</wsdl:documentation>
      <wsdl:input message="vrns:getCompanySummaryRequest"/>
      <wsdl:output message="vrns:getCompanySummaryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getEmailCampaignDeclineHistory">
      <wsdl:documentation>
    The getEmailCampaignDeclineHistory() method returns a list of instances when a launched campaign has been declined for mailing by VerticalResponse staff (e.g., an email campaign is declined because it lacks a postal address). The decline history is provided as a list of timestamps and decline reasons.
</wsdl:documentation>
      <wsdl:input message="vrns:getEmailCampaignDeclineHistoryRequest"/>
      <wsdl:output message="vrns:getEmailCampaignDeclineHistoryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getEmailCampaignResponseHistograms">
      <wsdl:documentation>
    The getEmailCampaignResponseHistorgrams() method provides campaign response stats such as opens, clicks, bounces, and unsubscribes in histogram form suitable for input into graphing tools.
</wsdl:documentation>
      <wsdl:input message="vrns:getEmailCampaignResponseHistogramsRequest"/>
      <wsdl:output message="vrns:getEmailCampaignResponseHistogramsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getEmailCampaignStats">
      <wsdl:documentation>
    The getEmailCampaignStats() method provides a variety of statistical information for a given campaign specified by id.
</wsdl:documentation>
      <wsdl:input message="vrns:getEmailCampaignStatsRequest"/>
      <wsdl:output message="vrns:getEmailCampaignStatsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getEmailCreditBalance">
      <wsdl:documentation>
    The getEmailCreditBalance() method returns the email credit balance of the specified company.
</wsdl:documentation>
      <wsdl:input message="vrns:getEmailCreditBalanceRequest"/>
      <wsdl:output message="vrns:getEmailCreditBalanceResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getListDomainCount">
      <wsdl:documentation>
    The getListDomainCount() method retrieves the number of recipients on a specified list, by domain
    (optionally limited to the top N results or to a specified set of domains).
</wsdl:documentation>
      <wsdl:input message="vrns:getListDomainCountRequest"/>
      <wsdl:output message="vrns:getListDomainCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getListMemberByAddressHash">
      <wsdl:documentation>
    The getListMemberByAddressHash() method retrieves exactly one member with the specified address_hash from a specified list.
</wsdl:documentation>
      <wsdl:input message="vrns:getListMemberByAddressHashRequest"/>
      <wsdl:output message="vrns:getListMemberByAddressHashResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getListMemberByEmailAddress">
      <wsdl:documentation>
    The getListMemberByEmailAddress() method retrieves exactly one member with the specified email address from a specified list.
</wsdl:documentation>
      <wsdl:input message="vrns:getListMemberByEmailAddressRequest"/>
      <wsdl:output message="vrns:getListMemberByEmailAddressResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getListMemberByHash">
      <wsdl:documentation>
    The getListMemberByHash() method retrieves exactly one member with the specified hash from a specified list.
</wsdl:documentation>
      <wsdl:input message="vrns:getListMemberByHashRequest"/>
      <wsdl:output message="vrns:getListMemberByHashResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getListMembers">
      <wsdl:documentation>
    The getListMembers() method retrieves a fixed number of members from a specified list.
    Ordering and offset information can be used to created "windowed" views of list member data.
</wsdl:documentation>
      <wsdl:input message="vrns:getListMembersRequest"/>
      <wsdl:output message="vrns:getListMembersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPricingStructure">
      <wsdl:documentation>
    The getPricingStructure() method returns the pricing "tiers" for purchasing the specified type of credits. The "product_type" can be "email" or "postcard". The "product_details" field should be undefined for "email" and either "4x6" or "6x9" for "postcard".
</wsdl:documentation>
      <wsdl:input message="vrns:getPricingStructureRequest"/>
      <wsdl:output message="vrns:getPricingStructureResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPurchaseQuotation">
      <wsdl:documentation>
    The getPurchaseQuotation() method returns the quoted price for a given number of email or postcard credits.
</wsdl:documentation>
      <wsdl:input message="vrns:getPurchaseQuotationRequest"/>
      <wsdl:output message="vrns:getPurchaseQuotationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSentEmailCampaignsSummary">
      <wsdl:documentation>
    The getSentEmailCampaignsSummary() method returns a paginated window of campaign stats along with the total number of sent campaigns.
</wsdl:documentation>
      <wsdl:input message="vrns:getSentEmailCampaignsSummaryRequest"/>
      <wsdl:output message="vrns:getSentEmailCampaignsSummaryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <wsdl:documentation>
    The getUser() method retrieves one VerticalResponse user with the specified id.
    Please note that this method will never provide any User's password.
</wsdl:documentation>
      <wsdl:input message="vrns:getUserRequest"/>
      <wsdl:output message="vrns:getUserResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getUserByEmailAddress">
      <wsdl:documentation>
    The getUserByEmailAddress() method retrieves one VerticalResponse user with the specified email address.
    Please note that this method will never provide any User's password.
</wsdl:documentation>
      <wsdl:input message="vrns:getUserByEmailAddressRequest"/>
      <wsdl:output message="vrns:getUserByEmailAddressResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getUserSignonURL">
      <wsdl:documentation>
The getUserSignonURL() method authenticates the specified VerticalResponse user and returns a URL that can be used once to log in as the specified user without entering a password. The URL will be valid for the specified number of seconds, the maximum allowed time to live is 120 seconds. When the user logs out, they will be redirected to the logout_url specified when requesting the signon URL. When the user's session times out or the signon URL is invalid, the user will be redirected to the specified login URL or to the partner's specified login page if no login URL was specified.
</wsdl:documentation>
      <wsdl:input message="vrns:getUserSignonURLRequest"/>
      <wsdl:output message="vrns:getUserSignonURLResponse"/>
    </wsdl:operation>
    <wsdl:operation name="launchEmailCampaign">
      <wsdl:documentation>

    The launchEmailCampaign() method is used to launch a campaign once it is ready.
    Before launching a campaign must have its from_label and support_email attributes set.
    <br/><br/>
    
    For <b>template</b> (wizard) campaigns, the following contents must be set:
    <ul>
        <li>subject</li>
        <li>unsub_message</li>
        <li>unsub_link_text</li>
        <li>postal_address</li>
    </ul>
    
    For <b>freeform</b> and <b>canvas</b> campaigns, the following contents must be set:
    <ul>
        <li>subject</li>
        <li>freeform_html</li>
        <li>freeform_text</li>
        <li>unsub_message</li>
        <li>unsub_link_text</li>
        <li>postal_address</li>
    </ul>
    
    For <b>freeform_text</b> campaigns, the following contents must be set:
    <ul>
        <li>subject</li>
        <li>freeform_text</li>
        <li>unsub_message</li>
        <li>unsub_link_text</li>
        <li>postal_address</li>
    </ul>
    
    Your company must have enough credits to cover the number of recipients that will receive the campaign,
    and any merge field in the campaign must be covered by fields in all the attached lists.
    
    After launching, the campaign will mail out on its mail_date.
    
</wsdl:documentation>
      <wsdl:input message="vrns:launchEmailCampaignRequest"/>
      <wsdl:output message="vrns:launchEmailCampaignResponse"/>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:documentation>
    The login() method authenticates a VerticalResponse user and returns a session_id token that can be used for subsequent VRAPI calls. The maximum allowed session length is 120 minutes.
    
</wsdl:documentation>
      <wsdl:input message="vrns:loginRequest"/>
      <wsdl:output message="vrns:loginResponse"/>
    </wsdl:operation>
    <wsdl:operation name="moveFile">
      <wsdl:documentation>
    The moveFile() method moves a file within your Library from one location to another. A file move that would result in
    the replacement of an existing file requires presence of the "force" argument.
</wsdl:documentation>
      <wsdl:input message="vrns:moveFileRequest"/>
      <wsdl:output message="vrns:moveFileResponse"/>
    </wsdl:operation>
    <wsdl:operation name="refresh">
      <wsdl:documentation>
    The refresh() method refreshes an existing session created by login(), extending the timeout
    window of the existing session by the amount specified in the session_duration_minutes
    argument to the login() call that created the session.
</wsdl:documentation>
      <wsdl:input message="vrns:refreshRequest"/>
      <wsdl:output message="vrns:refreshResponse"/>
    </wsdl:operation>
    <wsdl:operation name="renderCampaignContent">
      <wsdl:documentation>
    The renderCampaignContent() method is used to provide a picture of what the finished campaign looks like. The campaign can be specifed by id or by hash. The content_type should be set to either "html" or "text". The only view_type currently supported is "preview".
</wsdl:documentation>
      <wsdl:input message="vrns:renderCampaignContentRequest"/>
      <wsdl:output message="vrns:renderCampaignContentResponse"/>
    </wsdl:operation>
    <wsdl:operation name="runSegmentationQuery">
      <wsdl:documentation>
    The runSegmentationQuery() method compiles the results associated with each input for a given segmentation query, and then finally for the segmentation query itself. This method can be called by itself, or will be implicitly called by compileSegmentationQuery() on an as-needed basis. The output of the method will be the total number of email addresses found that matched the query.
</wsdl:documentation>
      <wsdl:input message="vrns:runSegmentationQueryRequest"/>
      <wsdl:output message="vrns:runSegmentationQueryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="runSegmentationQueryBackground">
      <wsdl:documentation>
    The runSegmentationQueryBackground() method performs the same tasks as the runSegmentationQuery() method,
    but does so after detaching and running as a background process. The return value of the runSegmentationQueryBackground()
    method is a background task ID that can be used to poll for the task status using getBackgroundTaskStatus(). The final
    results of the runSegmentationQueryBackground() method can be retrieved using the fetchRunSegmentationQueryBackgroundResult()
    method.
</wsdl:documentation>
      <wsdl:input message="vrns:runSegmentationQueryBackgroundRequest"/>
      <wsdl:output message="vrns:runSegmentationQueryBackgroundResponse"/>
    </wsdl:operation>
    <wsdl:operation name="searchListMembers">
      <wsdl:documentation>
    The searchListMembers() searches across all member lists for records containing a specified value in a specified field. Only field names that have been set in a call to setIndexedListFields() can be used in a search.
</wsdl:documentation>
      <wsdl:input message="vrns:searchListMembersRequest"/>
      <wsdl:output message="vrns:searchListMembersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="sendEmailCampaignTest">
      <wsdl:documentation>
    The sendEmailCampaignTest() method mails a test version of the specified campaign to a specified list of recipients. Provide each recipient as a list of name/value pairs. Each recipient must contain an "email_address" name/value pair. The number of test emails is limited to 10 per call.
</wsdl:documentation>
      <wsdl:input message="vrns:sendEmailCampaignTestRequest"/>
      <wsdl:output message="vrns:sendEmailCampaignTestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setCampaignLists">
      <wsdl:documentation>
  The setCampaignLists() method is used to specify which lists a campaign should be mailed to when launched. If the campaign contains a merge field that's not present in one of the lists, then a fault is thrown.
</wsdl:documentation>
      <wsdl:input message="vrns:setCampaignListsRequest"/>
      <wsdl:output message="vrns:setCampaignListsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setCustomListFields">
      <wsdl:documentation>

    The setCustomListFields() method changes the list of custom (non-standard) fields for the specified list.
    <br/><br/>
    
    <span class="warning">Warning:</span> This call will remove any custom fields that are already present in
    a list if those custom fields aren't provided in the fields argument. When adding new custom fields to a
    list, you should first obtain a list of the current custom fields, add the new fields to it, and call
    setCustomListFields() with the combined list of field names.

</wsdl:documentation>
      <wsdl:input message="vrns:setCustomListFieldsRequest"/>
      <wsdl:output message="vrns:setCustomListFieldsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setDisplayedListFields">
      <wsdl:documentation>
    The setDisplayedListFields() method sets the fields which are displayed when viewing a list in the VerticalResponse application.
</wsdl:documentation>
      <wsdl:input message="vrns:setDisplayedListFieldsRequest"/>
      <wsdl:output message="vrns:setDisplayedListFieldsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setEmailCampaignAttribute">
      <wsdl:documentation>
  
  The setEmailCampaignAttribute() method is used to specify a field for the given campaign.
  <br/><br/>
  
  Attributes that can be set for a campaign are:
  <ul>
      <li>name</li>
      <li>template_id (for template campaigns)</li>
      <li>send_friend</li>
      <li>from_label</li>
      <li>support_email</li>
      <li>redirect_url</li>
      <li>mail_date</li>
  </ul>
  
</wsdl:documentation>
      <wsdl:input message="vrns:setEmailCampaignAttributeRequest"/>
      <wsdl:output message="vrns:setEmailCampaignAttributeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setEmailCampaignContent">
      <wsdl:documentation>
  
  The setEmailCampaignContent() method is used to add or change a block of copy for an email campaign.
  The content type must be valid for the specified campaign's type, and the number of bytes in the copy must not exceed the freeform upload limit for your company.
  <br/><br/>
  
  Valid content types for <b>template</b> (wizard) campaigns are:
  <ul>
      <li>subject</li>
      <li>salutation</li>
      <li>greeting</li>
      <li>closing</li>
      <li>unsub_message</li>
      <li>unsub_link_text</li>
      <li>postal_address</li>
      <li>custom_color</li>
  </ul>
  
  Valid content types for <b>freeform</b> and <b>canvas</b> campaigns are:
  <ul>
      <li>subject</li>
      <li>freeform_html</li>
      <li>freeform_text</li>
      <li>unsub_message</li>
      <li>unsub_link_text</li>
      <li>postal_address</li>
  </ul>

  Valid content types for <b>freeform_text</b> campaigns are:
  <ul>
      <li>subject</li>
      <li>freeform_text</li>
      <li>unsub_message</li>
      <li>unsub_link_text</li>
      <li>postal_address</li>
  </ul>
  
</wsdl:documentation>
      <wsdl:input message="vrns:setEmailCampaignContentRequest"/>
      <wsdl:output message="vrns:setEmailCampaignContentResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setIndexedListFields">
      <wsdl:documentation>
    The setIndexedListFields() method sets the fields which are indexed for a given list. Only fields
    that are indexed may be specified in calls to searchListMembers().
</wsdl:documentation>
      <wsdl:input message="vrns:setIndexedListFieldsRequest"/>
      <wsdl:output message="vrns:setIndexedListFieldsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setTemplateCampaignModule">
      <wsdl:documentation>
    
  The setTemplateCampaignModule() method is used to replace the contents of an existing template campaign module.
  The specified email campaign must be a template (wizard) campaign, and a module with the specified position must already exist within that campaign.
  
</wsdl:documentation>
      <wsdl:input message="vrns:setTemplateCampaignModuleRequest"/>
      <wsdl:output message="vrns:setTemplateCampaignModuleResponse"/>
    </wsdl:operation>
    <wsdl:operation name="transferEmailCredits">
      <wsdl:documentation>
    The transferEmailCredits() method transfers email credits from one company's account to another. The number of credits transfered must be a whole number greater than or equal to one, and the company from which the credits are being transferred must have sufficient credits in its account for the requested transaction.
</wsdl:documentation>
      <wsdl:input message="vrns:transferEmailCreditsRequest"/>
      <wsdl:output message="vrns:transferEmailCreditsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="undeleteCampaign">
      <wsdl:documentation>
    The undeleteCampaign() method restores a campaign to the state it was in prior to being deleted.
</wsdl:documentation>
      <wsdl:input message="vrns:undeleteCampaignRequest"/>
      <wsdl:output message="vrns:undeleteCampaignResponse"/>
    </wsdl:operation>
    <wsdl:operation name="undeleteList">
      <wsdl:documentation>
    The undeleteList() method restores a deleted list back to an active (undeleted) status.
</wsdl:documentation>
      <wsdl:input message="vrns:undeleteListRequest"/>
      <wsdl:output message="vrns:undeleteListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="undeleteSegmentationQuery">
      <wsdl:documentation>
    The undeleteSegmentationQuery() method restores a segmentation query to the state it was in prior to being deleted.
</wsdl:documentation>
      <wsdl:input message="vrns:undeleteSegmentationQueryRequest"/>
      <wsdl:output message="vrns:undeleteSegmentationQueryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="unlaunchEmailCampaign">
      <wsdl:documentation>
  The unlaunchEmailCampaign() method is used to cancel the launch of a campaign. It simply changes the campaign's status to "active". If the campaign is already in the process of mailing or if it has already been mailed, then a fault is thrown.
</wsdl:documentation>
      <wsdl:input message="vrns:unlaunchEmailCampaignRequest"/>
      <wsdl:output message="vrns:unlaunchEmailCampaignResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="VRAPIBinding" type="vrns:VRAPIPortType">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="addListMember">
      <soap:operation soapAction="VR/API/1_0#addListMember"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="appendFileToList">
      <soap:operation soapAction="VR/API/1_0#appendFileToList"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="appendFileToListBackground">
      <soap:operation soapAction="VR/API/1_0#appendFileToListBackground"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="appendTemplateCampaignModule">
      <soap:operation soapAction="VR/API/1_0#appendTemplateCampaignModule"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="calculateCampaignAudience">
      <soap:operation soapAction="VR/API/1_0#calculateCampaignAudience"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="canCallMethod">
      <soap:operation soapAction="VR/API/1_0#canCallMethod"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="compileCampaignRecipientResults">
      <soap:operation soapAction="VR/API/1_0#compileCampaignRecipientResults"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="compileCampaignRecipientResultsBackground">
      <soap:operation soapAction="VR/API/1_0#compileCampaignRecipientResultsBackground"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="compileSegmentationQuery">
      <soap:operation soapAction="VR/API/1_0#compileSegmentationQuery"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="compileSegmentationQueryBackground">
      <soap:operation soapAction="VR/API/1_0#compileSegmentationQueryBackground"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createEmail">
      <soap:operation soapAction="VR/API/1_0#createEmail"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createEmailCampaign">
      <soap:operation soapAction="VR/API/1_0#createEmailCampaign"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createFile">
      <soap:operation soapAction="VR/API/1_0#createFile"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createList">
      <soap:operation soapAction="VR/API/1_0#createList"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createOptinForm">
      <soap:operation soapAction="VR/API/1_0#createOptinForm"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createSegmentationQuery">
      <soap:operation soapAction="VR/API/1_0#createSegmentationQuery"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteCampaign">
      <soap:operation soapAction="VR/API/1_0#deleteCampaign"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteFile">
      <soap:operation soapAction="VR/API/1_0#deleteFile"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteList">
      <soap:operation soapAction="VR/API/1_0#deleteList"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteListMember">
      <soap:operation soapAction="VR/API/1_0#deleteListMember"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteSegmentationQuery">
      <soap:operation soapAction="VR/API/1_0#deleteSegmentationQuery"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteTemplateCampaignModule">
      <soap:operation soapAction="VR/API/1_0#deleteTemplateCampaignModule"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadCampaignRecipientResults">
      <soap:operation soapAction="VR/API/1_0#downloadCampaignRecipientResults"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadCampaignRecipientResultsBackground">
      <soap:operation soapAction="VR/API/1_0#downloadCampaignRecipientResultsBackground"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadCompanyUnsubscribesAndBounces">
      <soap:operation soapAction="VR/API/1_0#downloadCompanyUnsubscribesAndBounces"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadList">
      <soap:operation soapAction="VR/API/1_0#downloadList"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadListBackground">
      <soap:operation soapAction="VR/API/1_0#downloadListBackground"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editCompany">
      <soap:operation soapAction="VR/API/1_0#editCompany"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editListAttribute">
      <soap:operation soapAction="VR/API/1_0#editListAttribute"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editListMember">
      <soap:operation soapAction="VR/API/1_0#editListMember"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editListMembers">
      <soap:operation soapAction="VR/API/1_0#editListMembers"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editSegmentationQuery">
      <soap:operation soapAction="VR/API/1_0#editSegmentationQuery"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editUser">
      <soap:operation soapAction="VR/API/1_0#editUser"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="emptyTrash">
      <soap:operation soapAction="VR/API/1_0#emptyTrash"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enumerateEmailCampaigns">
      <soap:operation soapAction="VR/API/1_0#enumerateEmailCampaigns"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enumerateEmailLayoutCategories">
      <soap:operation soapAction="VR/API/1_0#enumerateEmailLayoutCategories"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enumerateEmailLayouts">
      <soap:operation soapAction="VR/API/1_0#enumerateEmailLayouts"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enumerateFiles">
      <soap:operation soapAction="VR/API/1_0#enumerateFiles"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enumerateLists">
      <soap:operation soapAction="VR/API/1_0#enumerateLists"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enumerateSegmentationQueries">
      <soap:operation soapAction="VR/API/1_0#enumerateSegmentationQueries"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="eraseListMembers">
      <soap:operation soapAction="VR/API/1_0#eraseListMembers"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchAppendFileToListBackgroundResult">
      <soap:operation soapAction="VR/API/1_0#fetchAppendFileToListBackgroundResult"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchCompileCampaignRecipientResultsBackgroundResult">
      <soap:operation soapAction="VR/API/1_0#fetchCompileCampaignRecipientResultsBackgroundResult"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchDownloadCampaignRecipientResultsBackgroundResult">
      <soap:operation soapAction="VR/API/1_0#fetchDownloadCampaignRecipientResultsBackgroundResult"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchDownloadListBackgroundResult">
      <soap:operation soapAction="VR/API/1_0#fetchDownloadListBackgroundResult"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchRunSegmentationQueryBackgroundResult">
      <soap:operation soapAction="VR/API/1_0#fetchRunSegmentationQueryBackgroundResult"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBackgroundTaskStatus">
      <soap:operation soapAction="VR/API/1_0#getBackgroundTaskStatus"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCampaignDomainCount">
      <soap:operation soapAction="VR/API/1_0#getCampaignDomainCount"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCompany">
      <soap:operation soapAction="VR/API/1_0#getCompany"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCompanySummary">
      <soap:operation soapAction="VR/API/1_0#getCompanySummary"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEmailCampaignDeclineHistory">
      <soap:operation soapAction="VR/API/1_0#getEmailCampaignDeclineHistory"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEmailCampaignResponseHistograms">
      <soap:operation soapAction="VR/API/1_0#getEmailCampaignResponseHistograms"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEmailCampaignStats">
      <soap:operation soapAction="VR/API/1_0#getEmailCampaignStats"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEmailCreditBalance">
      <soap:operation soapAction="VR/API/1_0#getEmailCreditBalance"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getListDomainCount">
      <soap:operation soapAction="VR/API/1_0#getListDomainCount"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getListMemberByAddressHash">
      <soap:operation soapAction="VR/API/1_0#getListMemberByAddressHash"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getListMemberByEmailAddress">
      <soap:operation soapAction="VR/API/1_0#getListMemberByEmailAddress"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getListMemberByHash">
      <soap:operation soapAction="VR/API/1_0#getListMemberByHash"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getListMembers">
      <soap:operation soapAction="VR/API/1_0#getListMembers"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPricingStructure">
      <soap:operation soapAction="VR/API/1_0#getPricingStructure"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPurchaseQuotation">
      <soap:operation soapAction="VR/API/1_0#getPurchaseQuotation"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSentEmailCampaignsSummary">
      <soap:operation soapAction="VR/API/1_0#getSentEmailCampaignsSummary"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <soap:operation soapAction="VR/API/1_0#getUser"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserByEmailAddress">
      <soap:operation soapAction="VR/API/1_0#getUserByEmailAddress"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserSignonURL">
      <soap:operation soapAction="VR/API/1_0#getUserSignonURL"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="launchEmailCampaign">
      <soap:operation soapAction="VR/API/1_0#launchEmailCampaign"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation soapAction="VR/API/1_0#login"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="moveFile">
      <soap:operation soapAction="VR/API/1_0#moveFile"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refresh">
      <soap:operation soapAction="VR/API/1_0#refresh"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renderCampaignContent">
      <soap:operation soapAction="VR/API/1_0#renderCampaignContent"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="runSegmentationQuery">
      <soap:operation soapAction="VR/API/1_0#runSegmentationQuery"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="runSegmentationQueryBackground">
      <soap:operation soapAction="VR/API/1_0#runSegmentationQueryBackground"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchListMembers">
      <soap:operation soapAction="VR/API/1_0#searchListMembers"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendEmailCampaignTest">
      <soap:operation soapAction="VR/API/1_0#sendEmailCampaignTest"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setCampaignLists">
      <soap:operation soapAction="VR/API/1_0#setCampaignLists"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setCustomListFields">
      <soap:operation soapAction="VR/API/1_0#setCustomListFields"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setDisplayedListFields">
      <soap:operation soapAction="VR/API/1_0#setDisplayedListFields"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setEmailCampaignAttribute">
      <soap:operation soapAction="VR/API/1_0#setEmailCampaignAttribute"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setEmailCampaignContent">
      <soap:operation soapAction="VR/API/1_0#setEmailCampaignContent"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setIndexedListFields">
      <soap:operation soapAction="VR/API/1_0#setIndexedListFields"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setTemplateCampaignModule">
      <soap:operation soapAction="VR/API/1_0#setTemplateCampaignModule"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="transferEmailCredits">
      <soap:operation soapAction="VR/API/1_0#transferEmailCredits"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="undeleteCampaign">
      <soap:operation soapAction="VR/API/1_0#undeleteCampaign"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="undeleteList">
      <soap:operation soapAction="VR/API/1_0#undeleteList"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="undeleteSegmentationQuery">
      <soap:operation soapAction="VR/API/1_0#undeleteSegmentationQuery"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unlaunchEmailCampaign">
      <soap:operation soapAction="VR/API/1_0#unlaunchEmailCampaign"/>
      <wsdl:input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="VR/API/1_0"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="VRAPI">
    <wsdl:documentation>
                    The VerticalResponse API Server - Enterprise Edition
                </wsdl:documentation>
    <wsdl:port binding="vrns:VRAPIBinding" name="VRAPIPort">
      <soap:address location="https://api.verticalresponse.com/1.0/VRAPI"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>

