<?php

/**
 * Implementation of hook_entity_info_alter
 * 
 * @param type $entity_info 
 */
function media_fevm_entity_info_alter(&$entity_info) {
    $view_modes = media_fevm_get_view_modes();
    
    foreach($view_modes as $name => $mode) {
        $entity_info['file']['view modes'][$name] = array(
            'label' => t($mode['label']),
            'custom settings' => $mode['custom settings'],
        );
    }
}

/**
 * Implementation of hook_menu
 * 
 * @return type 
 */
function media_fevm_menu() {
    $items = array();
    
    $items['admin/config/media/file-types/view'] = array(
        'title' => t('View'),
        'type' => MENU_DEFAULT_LOCAL_TASK,
    );
    
    $items['admin/config/media/file-types/view-modes'] = array(
        'title' => t('View modes'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('media_fevm_admin_overview'),
        'access callback' => 'user_access',
        'access arguments' => array('administer site configuration'),
        'type' => MENU_LOCAL_TASK,
        'file' => 'media_fevm.admin.inc',
    );
    
    return $items;
}

/**
 * Implementation of hook_theme
 * 
 * @return type 
 */
function media_fevm_theme() {
    return array(
        'media_fevm_admin_overview_form' => array(
            'render element' => 'elements',
            'file' => 'media_fevm.admin.inc',
        ),
    );
}

/**
 * Generate list of available view modes
 * 
 * @param type $view_mode
 * @return type 
 */
function media_fevm_get_view_modes($view_mode = NULL) {
    $view_modes = variable_get('media_fevm_view_modes', array());
    
    if(!$view_modes) {
        $entity_info = entity_get_info('file');
        $view_modes = $entity_info['view modes'];
    }
    
    if(!is_null($view_mode)) {
        return isset($view_modes[$view_mode]) ? $view_modes[$view_mode] : NULL;
    }
    
    return $view_modes;
}
