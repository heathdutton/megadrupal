<?php

/**
 * @file
 * Main module file for Context.IO Feeds Plugins.
 */

/**
 * Implements hook_feeds_plugins().
 */
function contextio_feeds_plugins_feeds_plugins() {
  $info = array();
  $info['ContextIOMessageFetcher'] = array(
    'name' => 'Context.IO Message Fetcher',
    'description' => 'Download email messages from Context.IO',
    'handler' => array(
      'parent' => 'FeedsFetcher',
      'class' => 'ContextIOMessageFetcher',
      'file' => 'ContextIOMessageFetcher.inc',
      'path' => drupal_get_path('module', 'contextio_feeds_plugins') . '/plugins',
    ),
  );
  $info['ContextIOMessageParser'] = array(
    'name' => 'Context.IO Message Parser',
    'description' => 'Parse Context.IO specific email message data.',
    'handler' => array(
      'parent' => 'FeedsParser',
      'class' => 'ContextIOMessageParser',
      'file' => 'ContextIOMessageParser.inc',
      'path' => drupal_get_path('module', 'contextio_feeds_plugins') . '/plugins',
    ),
  );
  return $info;
}

/**
 * Check if a given derivative source machine name is exist or not.
 *
 * @param string $value
 *   The machine name to check.
 * @param array $element
 *   A machine_name type form element.
 * @param array $form_state
 *   A keyed array containing the current state of the form.
 *
 * @return bool
 *   Return TRUE if the given machine name is exit or not.
 *
 * @see ContextIOMessageParser::configForm()
 */
function contextio_feeds_plugins_derivative_source_exists($value, array $element, array &$form_state) {
  if (in_array($value, $element['#used_machine_names'])) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function contextio_feeds_plugins_form_contextiomessageparser_feeds_form_alter(&$form, &$form_state, $form_id) {
  // Add cancel button to derivative sources related config forms.
  if (!empty($form['derivative_source'])) {
    // Rename the submit button in case of delete operation.
    if ($form['derivative_source']['op']['#value'] == CONTEXTIOPARSER_DELETE_DERIVATIVE) {
      $form['submit']['#value'] = t('Delete');
    }
    $form['cancel_button'] = array(
      '#markup' => l(t('Cancel'), current_path()),
      '#weight' => $form['submit']['#weight'] + 1,
    );
  }
}
