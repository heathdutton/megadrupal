<?php
/**
 * @file
 * Administrative UI for Context.IO module.
 */

/**
 * Implements hook_permission().
 */
function contextio_admin_permission() {
  return array(
    'administer contextio' => array(
      'title' => t('Administer Context.IO'),
      'description' => t('Access the Context.IO administration page.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function contextio_admin_menu() {
  $items = array();

  $base = 'admin/config/services/contextio';

  $items[$base] = array(
    'title' => 'Context.IO',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contextio_admin_form'),
    'access arguments' => array('administer contextio'),
  );

  $items["{$base}/general"] = array(
    'title' => 'General',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );

  return $items;
}

/**
 * Form builder for Context.IO admin page.
 */
function contextio_admin_form($form, &$form_state) {
  $form['credentials'] = array(
    '#type' => 'fieldset',
    '#title' => t('OAuth consumer key and secret'),
  );

  $form['credentials']['contextio_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Key'),
    '#required' => TRUE,
    '#default_value' => contextio_decrypt(variable_get('contextio_key', '')),
  );

  $show_secret = array(
    '#type' => 'checkbox',
    '#title' => t('Reveal'),
    '#attributes' => array(
      'id' => 'contextio-show-hide-secret',
    ),
  );

  $form['credentials']['contextio_secret'] = array(
    '#type' => 'password',
    '#title' => t('Secret'),
    '#required' => TRUE,
    '#field_suffix' => render($show_secret),
    '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'contextio_admin') . '/css/show-hide-checkbox.css',
      ),
      'js' => array(
        drupal_get_path('module', 'contextio_admin') . '/js/show-hide-checkbox.js',
      ),
    ),
    '#attributes' => array(
      'value' => contextio_decrypt(variable_get('contextio_secret', '')),
    ),
  );

  $form['actions'] = array(
    '#type' => 'actions',
  );
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save credentials'),
  );
  $form['actions']['delete'] = array(
    '#type' => 'submit',
    '#value' => t('Delete credentials'),
    '#delete_credentials' => TRUE,
  );

  return $form;
}

/**
 * Validation callback for context_io_admin_form().
 */
function contextio_admin_form_validate(&$form, &$form_state) {
  // Don't validate form when deleting credentials.
  if (!empty($form_state['triggering_element']['#delete_credentials'])) {
    return;
  }

  // Test credentials.
  try {
    $contextio = contextio_get_object($form_state['values']['contextio_key'], $form_state['values']['contextio_secret']);
    $token = $contextio->listConnectTokens();
    if ($token === FALSE) {
      form_error($form['credentials']['contextio_key'], t("Couldn't connect to Context.IO."));
      form_error($form['credentials']['contextio_secret'], '');
    }
  }
  catch (Exception $e) {
    // Nothing here, the empty key/secret fields are handled with Drupal's
    // validator.
  }
}

/**
 * Submit callback for context_io_admin_form().
 */
function contextio_admin_form_submit($form, &$form_state) {
  if (!empty($form_state['triggering_element']['#delete_credentials'])) {
    // Delete credentials.
    variable_del('contextio_key');
    variable_del('contextio_secret');

    drupal_set_message(t('The credentials has been successfully deleted!'));
  }
  else {
    // Save credentials.
    variable_set('contextio_key', contextio_encrypt($form_state['values']['contextio_key']));
    variable_set('contextio_secret', contextio_encrypt($form_state['values']['contextio_secret']));

    drupal_set_message(t('The settings has been successfully saved!'));
  }
}
