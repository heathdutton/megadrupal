<?php
/**
 * @file
 * Install file for Context.IO module.
 */

/**
 * Implements hook_requirements().
 */
function contextio_requirements($phase) {
  $t = get_t();
  // Try to enable the Libraries API module if its function is not available.
  if (!function_exists('libraries_get_path')) {
    module_enable(array('libraries'));
  }
  // Check if a Libraries API module related function is available or not.
  if (function_exists('libraries_get_path')) {
    // Load main module file to be able to use its constant variables.
    module_load_include('module', 'contextio');
    // Initialize requirement properties.
    $requirement = array(
      'title' => $t('@library_name PHP library', array(
        '@library_name' => CONTEXTIO_LIBRARY_NAME,
      )),
    );

    // Check if the required Context.IO PHP library is exist or not.
    $library_path = libraries_get_path(CONTEXTIO_LIBRARY_NAME);
    if (!$library_path) {
      $requirement['severity'] = REQUIREMENT_ERROR;
      $requirement['description'] = $t("The PHP library @library_name is not found. Please install it first and try again.", array(
        '@library_name' => CONTEXTIO_LIBRARY_NAME,
      ));
    }
    elseif (!is_file(DRUPAL_ROOT . '/' . $library_path . '/vendor/autoload.php')) {
      $requirement['severity'] = REQUIREMENT_ERROR;
      $requirement['description'] = $t("The PHP library @library_name is not properly installed. Please run 'composer install' in the library's folder.", array(
        '@library_name' => CONTEXTIO_LIBRARY_NAME,
      ));
    }
    else {
      $requirement['severity'] = REQUIREMENT_OK;
      $requirement['description'] = $t("Installed");
    }

    return array(
      'contextio_php_library' => $requirement,
    );
  }

  return array(
    'contextio_libraries_api' => array(
      'title' => $t('Libraries API'),
      'description' => $t('Libraries API module is not found. Please install it first and try again.'),
      'severity' => REQUIREMENT_ERROR,
    ),
  );
}

/**
 * Implements hook_uninstall().
 */
function contextio_uninstall() {
  // Delete credentials.
  variable_del('contextio_key');
  variable_del('contextio_secret');
}
