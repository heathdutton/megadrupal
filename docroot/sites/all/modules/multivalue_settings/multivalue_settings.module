<?php

/**
 * @file
 * Main module file for Multivalue Settings
 */

require_once('multivalue_settings.admin.inc');

/**
 * Implements field_attach_form().
 */
function multivalue_settings_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
  // get the fields on this form, or return if there are none
  if (isset($form_state['field'])) $fields = $form_state['field'];
  else return;

  // chceck if we are in an ajax callback
  if (isset($form_state['triggering_element'])) {
    $ajax = TRUE;
  }
  else $ajax = FALSE;

  // iterate over the fields
  foreach ($fields as $field_name => $field) {
    // check whether they need to be altered by Multivalue Settings
    if (!isset($field[$langcode]['field']['settings']['multivalue_settings']) ||
        $field[$langcode]['field']['settings']['multivalue_settings']['enable'] == 0) {
          continue;
    }
    else $settings = $field[$langcode]['field']['settings']['multivalue_settings'];

    $allowed = $settings['allowed'];
    $required = $settings['required'];
    $initial = $settings['initial'];
    $extra = $settings['extra'];

    $element = &$form[$field_name][$langcode];

    // add a validation function to this element
    $form[$field_name][$langcode]['#element_validate'][] = 'multivalue_settings_validate_element';

    $element_num = $element['#max_delta'] + 1;

    if (!$ajax) {
      // find the number of values the field already has
      $value_num = $form_state['field'][$field_name][$langcode]['items_count'];
      // get the actual values
      if ($value_num > 0) {
        $values = $entity->$field_name;
        $values = $values[$langcode];
      }
      // find the number of extra empty fields we have
      $extra_num = $element_num - $value_num;
      // find the number of extra fields we want to have
      if ($extra == -1) {
        $extra = $allowed - $value_num;
      }
      // if there are no values in the field, we want to show $initial fields
      if ($value_num == 0) {
        // really $element_num in this case will always be 1
        if ($element_num < $initial) {
          $add = $initial - $element_num;
          multivalue_settings_add_items($element, $add, $field_name, $langcode, $form_state);
        }
      }
      elseif ($allowed != -1 && $element_num > $allowed) {
        // we have to remove unallowed fields
        $remove = $element_num - $allowed;
        multivalue_settings_remove_items($element, $remove, $field_name, $langcode, $form_state);
      }
      elseif ($extra_num != $extra) {
        if ($extra_num > $extra) {
          // we have to remove unwanted extra fields
          $remove = $extra_num - $extra;
          multivalue_settings_remove_items($element, $remove, $field_name, $langcode, $form_state);
        }
        if ($extra > $extra_num) {
          // we have to add extra fields
          $add = $extra - $extra_num;
          multivalue_settings_add_items($element, $add, $field_name, $langcode, $form_state);
        }
      }
      if ($required > 0) {
        $element['#pre_render'][] = 'multivalue_settings_mark_required';
      }
    } // end if ($ajax)
    // remove add more button if necessary
    $element_num = $element['#max_delta'] + 1;
    if ($allowed != -1 && $element_num >= $allowed) {
      unset($element['add_more']);
    }
  }
}

/**
 * This marks the field required
 */
function multivalue_settings_mark_required($element) {
  $element['#required'] = TRUE;
  return $element;
}

/**
 * Validate handler to handle 'required' settings
 */
function multivalue_settings_validate_element($element, &$form_state, $form) {
  // get language and field name
  $langcode = $form_state['values']['language'];
  $field_name = $element['#field_name'];
  // get this field's info
  $field = field_info_field($field_name);
  // filter out empty field items
  $values = $form_state['values'][$field_name]['und'];
  if (isset($values['add_more'])) unset($values['add_more']);
  $filtered = _field_filter_items($field, $values);
  // get multivalue_settings settings
  $settings = $form_state['field'][$field_name][$langcode]['field']['settings']['multivalue_settings'];
  $required = $settings['required'];
  // trigger validation error if there are not enough values
  if (count($filtered) < $required) {
    if (isset($element['#title'])) $title = $element['#title'];
    else $title = $element['#field_name'];
    $args = array('%field' => $title);
    $message = format_plural($required, '%field: 1 value is required', '%field: @count values are required', $args);
    form_error($element, $message);
  }
}

/**
 * Helper function - removes items from the given element
 */
function multivalue_settings_remove_items(&$element, $remove, $field_name, $langcode, &$form_state) {
  foreach (range(1, $remove) as $i) {
    multivalue_settings_remove_item($element, $field_name, $langcode, $form_state);
  }
}

/**
 * Helper function - removes one item from the given element
 */
function multivalue_settings_remove_item(&$element, $field_name, $langcode, &$form_state) {
  $max_delta = $element['#max_delta'];
  unset($element[$max_delta]);
  $delta  = $max_delta - 1;
  $element['#max_delta'] = $delta;
  $element['#prefix'] = '<div id="field-test-add-more-wrapper' . '--' . $delta . '">';
  $element['add_more']['#ajax']['wrapper'] = 'field-test-add-more-wrapper' . '--' . $delta ;
  $form_state['field'][$field_name][$langcode]['items_count'] = $delta;
}

/**
 * Helper function - adds items to the given element
 */
function multivalue_settings_add_items(&$element, $add, $field_name, $langcode, &$form_state) {
  foreach (range(1, $add) as $i) {
    multivalue_settings_add_item($element, $field_name, $langcode, $form_state);
  }
}

/**
 * Helper function - adds one item to the given element
 */
function multivalue_settings_add_item(&$element, $field_name, $langcode, &$form_state) {
  $old_delta = $element['#max_delta'];
  $delta = $old_delta + 1;
  // initialize new item
  $element[$delta] = $element[$old_delta];
  // incremenet item settings
  $element[$delta]['#delta'] = $delta;
  $element[$delta]['value']['#delta'] = $delta;
  $element[$delta]['#weight'] = $delta;
  $element[$delta]['value']['#weight'] = $delta;
  $element[$delta]['_weight']['#delta'] = $delta;
  $element[$delta]['_weight']['#default_value'] = $delta;
  // incremenet element settings
  $element['#max_delta'] = $delta;
  //$element['#prefix'] = '<div id="field-test-add-more-wrapper' . '--' . $i . '">';
  //$element['add_more']['#ajax']['wrapper'] = 'field-test-add-more-wrapper' . '--' . $i;
  // update the item count. Necessary for add_more ajax to work
  $form_state['field'][$field_name][$langcode]['items_count'] = $delta;
}

