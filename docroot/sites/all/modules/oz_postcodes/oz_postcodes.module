<?php 

/**
 * Implements hook_entity_info().
 */
function oz_postcodes_entity_info() {
  $info = array();
  $info['oz_postcodes'] = array(
    'label' => t('Aussie Postcode'),
    'entity class' => 'OzPostcodes',
    'controller class' => 'OzPostcodesController',
    'views controller class' => 'OzPostcodesViewsController',
    'base table' => 'oz_postcodes',
    'load hook' => 'oz_postcodes_load',
    'entity keys' => array(
      'id' => 'pid',
      'label' => 'postcode',
    ),
    'fieldable' => FALSE,
    'access callback' => 'oz_postcodes_access',
    'label callback' => 'entity_class_label',
    'admin ui' => array(
      'path' => 'admin/structure/postcodes',
      'controller class' => 'OzPostcodesUIController',
    ),
  );
  return $info;
}

/**
 * Implements hook_entity_property_info_alter().
 */
function oz_postcodes_entity_property_info_alter(&$info) {
  $properties = &$info['oz_postcodes']['properties'];
  $properties['pid']['label'] = t('Postcode ID');
  $properties['postcode']['label'] = t('Postcode');
  $properties['postcode']['description'] = t('The postcode');
  $properties['suburb']['description'] = t('The suburb that the postcde applies to.');
  $properties['state']['description'] = t('The state that the postcode applies to.');
  $properties['dc']['label'] = t('Delivery centre');
  $properties['dc']['description'] = t('The delivery centre for this postcode.');
  $properties['type']['label'] = t('Type of deivery');
  $properties['type']['description'] = t('The type of delivery for this postcode.');
  $properties['lat']['label'] = t('Latitude');
  $properties['lat']['description'] = t('The latitude for this postcode.');
  $properties['lon']['label'] = t('Longitude');
  $properties['lon']['description'] = t('The longitude for this postcode.');
}

/**
 * Access callback for Postcode.
 */
function oz_postcodes_access($op, $task, $account = NULL, $entity_type = NULL) {
  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  if ($op == 'view') {
    return user_access('view postcodes', $account);
  }
  return user_access('administer postcodes', $account);
}

/**
 * Implements hook_permission().
 */
function oz_postcodes_permission() {
  $permissions = array(
    'administer postcodes' => array(
      'title' => t('Administer postcodes'),
      'restrict access' => TRUE,
    ),
    'view postcodes' => array(
      'title' => t('View postcodes'),
    ),
  );
  return $permissions;
}

/**
 * This is the form for adding a new postcode.
 */
function oz_postcodes_form($form, &$form_state, $postcode = NULL) {
  $form['postcode'] = array(
    '#title' => t('Postcode'),
    '#type' => 'textfield',
    '#default_value' => isset($postcode->postcode) ? $postcode->postcode : '',
    '#required' => TRUE,
  );
  $form['suburb'] = array(
    '#title' => t('Suburb'),
    '#type' => 'textfield',
    '#default_value' => isset($postcode->suburb) ? $postcode->suburb : '',
    '#required' => TRUE,
  );
  $form['state'] = array(
    '#title' => t('State'),
    '#type' => 'select',
    '#options' => _oz_postecodes_get_states(),
    '#default_value' => isset($postcode->state) ? $postcode->state : '',
    '#required' => TRUE,
  );
  $form['dc'] = array(
    '#title' => t('Delivery Centre'),
    '#type' => 'textfield',
    '#default_value' => isset($postcode->dc) ? $postcode->dc : '',
    '#required' => FALSE,
  );
  $form['type'] = array(
    '#title' => t('Delivery Centre Type'),
    '#type' => 'select',
    '#options' => _oz_postecodes_get_dc_types(),
    '#default_value' => isset($postcode->type) ? $postcode->type : '',
    '#required' => FALSE,
  );
  $form['lat'] = array(
    '#title' => t('Latitude'),
    '#type' => 'textfield',
    '#default_value' => isset($postcode->lat) ? $postcode->lat : '',
    '#required' => TRUE,
  );
  $form['lon'] = array(
    '#title' => t('Longitude'),
    '#type' => 'textfield',
    '#default_value' => isset($postcode->lon) ? $postcode->lon : '',
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => isset($postcode->id) ? t('Update project') : t('Save project'),
    '#weight' => 50,
  );
  return $form;
}

function oz_postcodes_form_validate($form, &$form_state) {
  
  if ($form_state['values']['postcode'] && $form_state['values']['suburb']) {
    $result = db_select('oz_postcodes', 'p')
          ->fields('p', array('pid', 'postcode', 'suburb'))
          ->condition('postcode', $form_state['values']['postcode'])
          ->condition('suburb', $form_state['values']['suburb'])
          ->execute();
    if ($result->rowCount()) {
      form_set_error('suburb', t('There is already an entry with that postcode and suburb'));
    }
  }
  if (!preg_match('/^[0-9]{4}$/', $form_state['values']['postcode'])) {
    form_set_error('postcode', t('Postcode must be a 4 digit number.'));
  }
}

function oz_postcodes_form_submit($form, &$form_state) {
  $postcode = entity_ui_form_submit_build_entity($form, $form_state);
  $postcode->save();
  drupal_set_message(t('The postcode: @postcode has been saved.', array('@postcode' => $postcode->postcode)));
  $form_state['redirect'] = 'admin/structure/postcodes';
}

/**
 * This is the batch that is called from the install function (in the .install file)
 */
function oz_postcodes_initial_batch($filepath, &$context){
  $limit = 100;
  $insert_values = array();
  $finished = false;
  if (empty($context['sandbox'])) {
    $context['sandbox']['filepath'] = $filepath;
    $context['sandbox']['current'] = 0;
  }
  $handle = fopen($context['sandbox']['filepath'], 'r');
  if($handle){
    if(isset($context['sandbox']['pos'])){
      fseek($handle, $context['sandbox']['pos']);
    }
    for($i = 0; $i < $limit; $i++){
      $data = fgetcsv($handle, 1000, ",");
      if($data === false || $data == NULL){
        $context['finished'] = 1;
      }else{
        $context['finished'] = 0;
        if((int)$data[0] != 0){
          $v = array();
          $v['postcode'] = (int)$data[0];
          $v['suburb'] = ucwords(strtolower($data[1]));
          $v['state'] = strtoupper($data[2]);
          $v['dc'] = $data[3];
          $v['type'] = $data[4];
          $v['lat'] = floatval($data[5]);
          $v['lon'] = floatval($data[6]);
          $insert_values[] = $v;
          $context['sandbox']['current']++;
        }
      }
    }
    $context['sandbox']['pos'] = ftell($handle);
    $context['message'] = 'Processed '.$context['sandbox']['current'];
  }else{
    $context['finished'] = 1;
  }
  if(count($insert_values)){
    $query = db_insert('oz_postcodes')->fields(array('postcode', 'suburb', 'state', 'dc', 'type', 'lat', 'lon'));
    foreach ($insert_values as $record) {
      $query->values($record);
    }
    $query->execute();
  }
}

function _oz_postecodes_get_states() {
  return array(
    'ACT' => 'ACT',
    'NSW' => 'NSW',
    'VIC' => 'VIC',
    'QLD' => 'QLD',
    'SA' => 'SA',
    'WA' => 'WA',
    'TAS' => 'TAS',
    'NT' => 'NT',
  );
}

function _oz_postecodes_get_dc_types() {
  return array(
    'Delivery Area' => 'Delivery Area',
    'Post Office Boxes ' => 'Post Office Boxes ',
    'LVR' => 'LVR',
  );
}

/**
 * Implements hook_view_api().
 */
function oz_postcodes_views_api() {
  return array(
    'api' => '3',
    'path' => drupal_get_path('module', 'oz_postcodes') . '/views',
  );
}
