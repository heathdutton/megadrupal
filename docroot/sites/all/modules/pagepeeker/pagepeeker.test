<?php

/**
 * @file
 * Pagepeeker module unit tests
 */

class SimpletestUnitTestPagepeekerTestCase extends DrupalUnitTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Pagepeeker unit tests',
      'description' => 'Test that formatting of the URL works properly.',
      'group' => 'Pagepeeker',
    );
  }

  function setUp() {
    drupal_load('module', 'pagepeeker');
    parent::setUp();
  }

  function testFormatURL() {
    $group = t('Validate and format URL.');

    $url = 'http://invalid_url';
    $result = _pagepeeker_format_url($url);
    $this->assertFalse($result, t('%url : Invalid URL should return FALSE.', array('%url' => $url)), $group);

    $url = 'http://домейн_на_кирилица.com';
    $result = _pagepeeker_format_url($url);
    $this->assertFalse(
      $result,
      t('%url : Internationalized domain names should return FALSE (filter_var() limitation).', array('%url' => $url)),
      $group
    );

    $url = 'example.com';
    $result = _pagepeeker_format_url($url);
    $this->assertFalse(
      $result,
      t('%url : URL Scheme (http:// or https://) should exists.', array('%url' => $url)),
      $group
    );

    $url = 'http://example.com';
    $expected = 'example.com';
    $result = _pagepeeker_format_url($url);
    $this->assertIdentical($expected, $result, '', $group);

    $url = 'http://example.com:8080';
    $expected = 'example.com:8080';
    $result = _pagepeeker_format_url($url);
    $this->assertIdentical($expected, $result, '', $group);

    $url = 'http://example.com:8080/some_page/';
    $expected = 'example.com:8080/some_page/';
    $result = _pagepeeker_format_url($url);
    $this->assertIdentical($expected, $result, '', $group);

    $url = 'http://example.com:8080/some_page/some_value';
    $expected = 'example.com:8080/some_page/some_value';
    $result = _pagepeeker_format_url($url);
    $this->assertIdentical($expected, $result, '', $group);

    $url = 'http://example.com:8080/some_page/some_value?val1=1&val2=2';
    $expected = 'example.com:8080/some_page/some_value?val1=1&val2=2';
    $result = _pagepeeker_format_url($url);
    $this->assertIdentical($expected, $result, '', $group);

    $url = 'http://example.com:8080/some_page/some_value?val1=1&val2=2#fragment';
    $expected = 'example.com:8080/some_page/some_value?val1=1&val2=2#fragment';
    $result = _pagepeeker_format_url($url);
    $this->assertIdentical($expected, $result, '', $group);
  }
}
