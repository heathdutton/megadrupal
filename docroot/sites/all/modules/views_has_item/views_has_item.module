<?php

/**
 * @file
 * Provide a simple boolean filter for fields in views.
 */


/**
 * Implements hook_views_api().
 */
function views_has_item_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'views_has_item') . '/includes',
  );
}

/**
 * Form element validation handler.
 *
 * This function invokes views_has_item_validate_options()
 * and then see if the value is numeric.
 */
function views_has_item_validate_options_numeric($element, &$form_state) {
  // First modify the values ​​"no_value" if you do not have the
  // particular column marked.
  views_has_item_validate_options($element, $form_state);
  $array_parents = $element['#array_parents'];
  // We replace the value should be modified in
  // views_has_item_validate_options().
  $element['#value'] = $form_state['values']['options']['column'][$array_parents[2]]['no_value'];
  element_validate_number($element, $form_state);
}


/**
 * Form element validation handler.
 */
function views_has_item_validate_options($element, &$form_state) {
  $array_parents = $element['#array_parents'];
  if (!$form_state['values']['options']['column'][$array_parents[2]]['use_it']) {
    // If not checked use, then delete the possible input value.
    $form_state['values']['options']['column'][$array_parents[2]]['no_value'] = '';
  }
}
