<?php

/**
 * @file reuse_cached_$04.module
 *
 * This module intercepts the page delivery process and cross-caches an existing
 * cached 404 if one is found. Normally, Drupal caches a 404 using its
 * request path. The cache hit rate of that approach is low. This module
 * acts later than the normal page cache, but it still speeds up page delivery
 * noticeably. It only works when the page cache is enabled.
 *
 * Cached 404s are keyed by language.
 */

/**
 * Implements hook_page_delivery_callback_alter().
 */
function reuse_cached_404_page_delivery_callback_alter(&$callback) {
  $cache_enabled = variable_get('cache');
  if ($cache_enabled && user_is_anonymous()) {
    // If we still have a 404 at this point (Interstitial Popup hasn't hijacked
    // control from us, for example) then we should render the page like
    // drupal_deliver_html_page() does, but use our own version of
    // drupal_page_footer() so we can cache the 404 page a bit differently.

    global $reuse_cached_404_fallback_callback;
    if (isset($reuse_cached_404_fallback_callback) === FALSE) {
      $reuse_cached_404_fallback_callback = $callback;
    }
    $callback = 'reuse_cached_404_intercept_404';
  }
}

function reuse_cached_404_intercept_404($page_callback_result) {
  // If not a 404, we don't do anything.
  if ($page_callback_result != MENU_NOT_FOUND) {
    // Pass through control immediately.
    global $reuse_cached_404_fallback_callback;
    $reuse_cached_404_fallback_callback($page_callback_result);
    return;
  }

  // Otherwise...showtime!
  global $language;
  $language_cid = 'reuse_cached_404:404:' . $language->language;
  $language_cache = cache_get($language_cid, 'cache_page');

  if ($language_cache === FALSE) {
    // We don't have this cached, so we render it here prematurely, cache it,
    // by language, and then serve it and end the request.
    reuse_cached_404_print_404();
    reuse_cached_404_page_set_cache();
  }
  else {
    // We have a cached 404 page we can fall back on, and we serve that
    // prematurely (and cache it at this path also).
    reuse_cached_404_serve_404_from_cache($language_cache);
    // The previous function called exit;
  }
}

// Adapted from drupal_deliver_html_page's MENU_NOT_FOUND case.
// We do it ourselves because that function always calls
// drupal_page_footer(), which causes the page to be cached before
// we can cache it ourselves.
// @see drupal_deliver_html_page
function reuse_cached_404_print_404() {
  // Print a 404 page.
  drupal_add_http_header('Status', '404 Not Found');

  watchdog('page not found', check_plain($_GET['q']), NULL, WATCHDOG_WARNING);

  // Check for and return a fast 404 page if configured.
  drupal_fast_404();

  // Keep old path for reference, and to allow forms to redirect to it.
  if (!isset($_GET['destination'])) {
    $_GET['destination'] = $_GET['q'];
  }

  $path = drupal_get_normal_path(variable_get('site_404', ''));
  if ($path && $path != $_GET['q']) {
    // Custom 404 handler. Set the active item in case there are tabs to
    // display, or other dependencies on the path.
    menu_set_active_item($path);
    $return = menu_execute_active_handler($path, FALSE);
  }

  if (empty($return) || $return == MENU_NOT_FOUND || $return == MENU_ACCESS_DENIED) {
    // Standard 404 handler.
    drupal_set_title(t('Page not found'));
    $return = t('The requested page "@path" could not be found.', array('@path' => request_uri()));
  }

  drupal_set_page_content($return);
  $page = element_info('page');
  print drupal_render_page($page);
}

// Adapted from drupal_page_footer().
// No way to hook into that, but we need to cache it in two places, so.
// @see drupal_page_footer
function reuse_cached_404_page_set_cache() {
  global $language;

  module_invoke_all('exit');

  // Commit the user session, if needed.
  drupal_session_commit();

  $cache = drupal_page_set_cache();

  // Store one for us too.
  cache_set('reuse_cached_404:404:' . $language->language, $cache->data, 'cache_page', $cache->expire);

  drupal_serve_page_from_cache($cache);

  _registry_check_code(REGISTRY_WRITE_LOOKUP_CACHE);
  drupal_cache_system_paths();
  module_implements_write_cache();
  system_run_automated_cron();
}

function reuse_cached_404_serve_404_from_cache($cache) {
  // Adapted from _drupal_bootstrap_page_cache() upon cache hit.
  global $base_root;

  // If there is a cached page, display it.
  if (is_object($cache)) {
    // Replaces the earlier MISS
    header('X-Drupal-Cache: HIT');
    // Restore the metadata cached with the page.
    $_GET['q'] = $cache->data['path'];
    drupal_set_title($cache->data['title'], PASS_THROUGH);
    date_default_timezone_set(drupal_get_user_timezone());
    // If the skipping of the bootstrap hooks is not enforced, call
    // hook_boot.
    if (variable_get('page_cache_invoke_hooks', TRUE)) {
      bootstrap_invoke_all('boot');
    }
    // Cache it at the current path also so next time
    // will be an earlier cache hit.
    cache_set($base_root . request_uri(), $cache->data, 'cache_page', $cache->expire);

    // Before serving,
    drupal_serve_page_from_cache($cache);
    // If the skipping of the bootstrap hooks is not enforced, call
    // hook_exit.
    if (variable_get('page_cache_invoke_hooks', TRUE)) {
      bootstrap_invoke_all('exit');
    }
    // We are done.
    exit;
  }
}
