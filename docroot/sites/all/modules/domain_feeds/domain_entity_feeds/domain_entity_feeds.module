<?php

/**
 * @file
 * This file contains integration of Domain Access Entity fields to Feeds importing.
 */

/**
 * Implements hook_feeds_processor_targets_alter().
 *
 * @see FeedsNodeProcessor::getMappingTargets().
 */
function domain_entity_feeds_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  $fields = domain_entity_field_instances();
  // Multiple domains in a cell.
  foreach ($fields as $field_name) {
    $targets['domain_entity:' . $field_name] = array(
      'name' => 'Domain Entity: ' . $field_name . ' (multiple)',
      'callback' => 'domain_entity_feeds_set_target_multiple',
      'description' => t('Domain access options.'),
    );
    $targets['domain_entity_all:' . $field_name] = array(
      'name' => 'Domain Entity: ' . $field_name . ' (Send to All)',
      'callback' => 'domain_entity_feeds_send_to_all',
      'description' => t('Domain access options.'),
    );
  }
}

/**
 * Callback for mapping. Here is where the actual mapping happens.
 *
 * When the callback is invoked, $target contains the name of the field the
 * user has decided to map to and $value contains comma-separated list of values
 * of the feed item element the user has picked as a source.
 */
function domain_entity_feeds_set_target_multiple($source, $entity, $target, $values, $mapping) {
  $domains = domain_id_list();
  $values = explode(',', reset($values));
  list($sub_field, $target) = explode(':', $target);
  $attach_domains = array();
  foreach ($values as $domain_id) {
    if (!in_array($domain_id, $domains)) {
      continue;
    }
    $attach_domains[] = array('domain_id' => $domain_id);
  }
  $entity->{$target}[LANGUAGE_NONE] = $attach_domains;
}

/**
 * Callback for mapping. Here is where the actual mapping happens.
 *
 * When the callback is invoked, if $target is presented, send item to all domains.
 */
function domain_entity_feeds_send_to_all($source, $entity, $target, $values, $mapping) {
  $value = reset($values);
  if (empty($value)) {
    return;
  }

  list($sub_field, $target) = explode(':', $target);
  $entity->{$target}[LANGUAGE_NONE] = array(array('domain_id' => DOMAIN_ENTITY_SEND_TO_ALL));
}
