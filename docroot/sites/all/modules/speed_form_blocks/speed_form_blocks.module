<?php

/**
 * @file
 * Handles the module hooks for Speed_form_blocks and the form handler.
 */

/**
 * Implements hook_menu().
 */
function speed_form_blocks_menu() {

  $items = array();

  $items['speed_form_blocks/csv_export'] = array(
    'page callback' => array('speed_form_blocks_csv_export'),
    'access arguments' => array('see speed form blocks feedback'),
    'type' => MENU_CALLBACK,
    'file' => 'speed_form_blocks.csv_export.inc',
  );

  $items['admin/structure/speed_form_blocks'] = array(
    'title' => 'Speed Form Blocks',
    'description' => 'Create Speed form blocks',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('speed_form_blocks_admin'),
    'access arguments' => array('administer speed form blocks'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'speed_form_blocks.admin.inc',
  );

  $items['admin/structure/speed_form_blocks/management'] = array(
    'title' => 'Manage / Delete',
    'description' => 'Management',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('speed_form_blocks_management'),
    'access arguments' => array('administer speed form blocks'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'speed_form_blocks.management.inc',
  );
  
  $items['admin/structure/speed_form_blocks/manage_blocks'] = array(
    'title' => 'Manage blocks',
    'description' => 'Manage individual blocks',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('speed_form_blocks_manage_blocks'),
    'access arguments' => array('administer speed form blocks'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'speed_form_blocks.manage_blocks.inc',
  );

  $items['admin/structure/speed_form_blocks/creation'] = array(
    'title' => 'Creation',
    'description' => 'Creation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('speed_form_blocks_creation'),
    'access arguments' => array('administer speed form blocks'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'speed_form_blocks.block_creation.inc',
  );

  $items['admin/structure/speed_form_blocks/responses'] = array(
    'title' => 'Responses',
    'description' => 'Feedback responses',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('speed_form_blocks_responses'),
    'access arguments' => array('administer speed form blocks'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'speed_form_blocks.responses.inc',
  );

  $items['admin/structure/speed_form_blocks/export'] = array(
    'title' => 'Data Export',
    'description' => 'Data Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('speed_form_blocks_export_data'),
    'access arguments' => array('see speed form blocks feedback'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'speed_form_blocks.export.inc',
  );

  $items['admin/structure/speed_form_blocks/default'] = array(
    'title' => 'Admin',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;

}

/**
 * Does form creation for this module.
 */
function speed_form_blocks_form_maker($form, $form_state, $delta) {

  $form_to_get = $delta;

  $result = db_query('SELECT block_name, message, extra, button, pre_html, post_html, class from {speed_form_blocks_created} where block_name = :block', array(":block" => $form_to_get));

  foreach ($result as $data) {

    $form = array();
    $form_elements = unserialize($data->extra);
    $form[$form_to_get] = array(

      '#markup' => '<div class="' . $data->class . '" id="replace_textfield_' . $form_to_get . '">' . filter_xss($data->pre_html),

    );

    for ($x = 0; $x < count($form_elements); $x++) {

      $description = $form_elements[$x]['desc'];
      $name = $form_elements[$x]['name'];

      switch ($form_elements[$x]['type']) {

        case 0:
          $type = 'checkbox';
          break;

        case 1:
          $type = 'date';
          break;

        case 2:
          $type = 'textformat';
          break;

        case 3:
          $type = 'textarea';
          break;

        case 4:
          $type = 'textfield';
          break;

        default:
          break;

      }

      $form[$form_to_get . "_" . trim($name) . "_" . $type] = array(
        '#type' => $type,
        '#title' => filter_xss($description),
      );

    }

    if ($data->message !== "") {

      $message = filter_xss($data->message);

    }
    else {

      $message = t('Thank you');

    }

    $form[$form_to_get . '_message'] = array(
      '#type' => 'hidden',
      '#value' => $message,
    );

    $form['delta'] = array(
      '#type' => 'hidden',
      '#value' => $form_to_get,
    );

    $form[$form_to_get . '_page'] = array(
      '#type' => 'hidden',
      '#value' => request_uri(),
    );

    if ($data->button !== "") {

      $button = check_plain($data->button);

    }
    else {

      $button = t('Submit');

    }

    $form[$form_to_get . '_submit']['actions'] = array('#type' => 'actions');

    $form[$form_to_get . '_submit'][$form_to_get . '_submit'] = array(
      '#type' => 'submit',
      '#value' => $button,
      '#ajax' => array(
        'callback' => 'speed_form_blocks_callback',
        'wrapper' => 'replace_textfield_' . $form_to_get,
        'effect' => 'fade',
        'progress' => 'throbber',
      ),
      '#suffix' => filter_xss($data->post_html) . '</div>',
    );

  }

  if (isset($form)) {

    return $form;

  }

}

/**
 * Does the processing of the AJAX callback for forms using this module.
 *
 * @param array $form
 *   Drupal form passed.
 * @param array $form_state
 *   Drupal form data submitted.
 */
function speed_form_blocks_callback($form, $form_state) {

  $delta = $form_state['values']['delta'];
  $message = $form_state['values'][$delta . '_message'];
  unset($form_state['values'][$delta . '_message']);
  $page = $form_state['values'][$delta . '_page'];
  unset($form_state['values'][$delta . '_page']);
  unset($form_state['values'][$delta . '_submit']);

  foreach ($form_state['values'] as $key => $value) {

    if (strpos($key, $delta) === FALSE) {

      unset($form_state['values'][$key]);

    }

  }

  $record = array(
    'page' => $page,
    'block' => $delta,
    'extra' => serialize($form_state['values']),
    'obtained' => time(),
  );

  drupal_write_record('speed_form_blocks_feedback', $record);

  return $message;

}

/**
 * Implements hook_block_view().
 */
function speed_form_blocks_block_view($delta = '') {

  $block = array();
  $block['content'] = drupal_get_form("speed_form_blocks_form_maker", $delta);

  return $block;

}

/**
 * Implements hook_block_info().
 */
function speed_form_blocks_block_info() {

  $result = db_query('SELECT block_name from {speed_form_blocks_created}');
  $blocks = array();

  foreach ($result as $block) {

    $blocks[$block->block_name] = array(
      'info' => t($block->block_name),
    );

  }

  if (isset($blocks)) {

    if (count($blocks) != 0) {

      if (isset($blocks)) {

        return $blocks;

      }

    }
    else {

      return $blocks;

    }

  }
  else {

    return $blocks;

  }

}


/**
 * Implements hook_help().
 */
function speed_form_blocks_help($path, $arg) {

  switch ($path) {

    case 'admin/help#speed_form_blocks':

      return t('Speed Form Blocks is a module designed to allow a simple form to be created within a block on a Drupal site. Blocks can be created under Structure | Speed Form Blocks.');

  }


}

/**
 * Implements hook_permissions().
 */
function speed_form_blocks_permission() {

  return array(
    'administer speed form blocks' => array(
      'title' => t('Administer Speed Form Blocks'),
      'description' => t('Perform administration tasks for speed form blocks.'),
    ),
    'see speed form blocks feedback' => array(
      'title' => t('See Speed Form Blocks feedback'),
      'description' => t('Access the responses given via speed form blocks.'),
    ),
  );

}
