<?php
/**
 * @file
 * Install, update and uninstall functions for the members module.
 */

include_once 'members.inc';

// The next 2 defines are the default greetings for logged in & anon visitors.
define('MEMBERS_PAGE_VISITOR',
'<h2>Welcome</h2>
<p>In order to comment, vote or participate on this site, you must first login with your username and password.</p>

<p>If you do not have a username yet, click on the link below and fill in the form with your preferred username. You will need to provide a valid e-mail address. A confirmation e-mail will be sent to you to complete the registration.</p>

<p>The confirmation email will have a link and a temporary password. Either can be used to complete the registration process.</p>

<p>Thank you for your interest and patience.</p>'
);

define('MEMBERS_PAGE_MEMBER',
'<h2>Welcome to the new Members page</h2>

<p>You are currently logged in.</p>

<p>A cookie has been set on your device so you don\'t have to login every time you visit this site.  This cookie is erased when you log out.</p>'
);

/**
 * Implements hook_install().
 */
function members_install() {
  global $argv;
  $t = get_t();

  if (variable_get('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL) == USER_REGISTER_VISITORS) {
    // Set a default or register a warning message and link upon install.
    watchdog('members', 'Current account settings allow any visitor to register without approval.', NULL, WATCHDOG_WARNING, l($t('see Account Settings'), 'admin/config/people/accounts'));
    drupal_set_message($t('Current account settings allow any visitor to register without approval.') . l($t('see Account Settings'), 'admin/config/people/accounts'), 'warning');
  }

  $login_greeting = array('value' => MEMBERS_PAGE_VISITOR, 'format' => 'filtered_html');
  variable_set('members_greeting_anonymous', $login_greeting);

  $loggedin_greeting = array('value' => MEMBERS_PAGE_MEMBER, 'format' => 'filtered_html');;
  variable_set('members_greeting_authenticated', $loggedin_greeting);

  // Check to see that curl library is installed.
  $curl_installed = function_exists('curl_init');
  if ($curl_installed === FALSE) {
    watchdog('members', 'The Members Page module works best with the PHP curl library installed and enabled.');
    drupal_set_message($t('The Members Page module works best with the PHP curl library installed and enabled.'));
  }

  // Check for a drush command line enable, flag for later.
  $drush_install = isset($argv) && strpos($argv[0], 'drush.php');
  if ($drush_install) {
    watchdog('members', "A drush enable of the members module has been detected");
    drupal_set_message($t('A drush enable of the members module has been detected'));
  }

  // Check for existing 'members' url, if it exists then try a different name.
  $members_url = 'members'; $count = 1;
  while (TRUE) {
    $path = '/' . $members_url;
    drupal_set_message($t("checking for @path", array('@path' => $path)));
    if (members_check_url_free($members_url)) {
      break;
    }
    $members_url = 'members' . ++$count;
    if ($count > 3) {
      // Quit after 3 tries.
      members_install_fail();
      break;
    }
  }
  variable_set('members_page_url', $members_url);

  // Check for existing 'register/user' url, if it exists then try a different name.
  $register_url = 'register/user'; $count = 1;
  while (TRUE) {
    $path = '/' . $register_url;
    drupal_set_message($t("checking for @path", array('@path' => $path)));
    if (members_check_url_free($register_url)) {
      break;
    }
    $register_url = 'register/user' . ++$count;
    // Quit after 3 tries.
    if ($count > 3) {
      members_install_fail();
      break;
    }
  }
  variable_set('members_register_url', $register_url);
}

/**
 * Helper function for Members Page install.
 */
function members_install_fail() {
  $t = get_t();
  watchdog('members', 'Members Page install failed to find an available url.');
  drupal_set_message($t('Members Page install failed to find an available url.'));
}

/**
 * Implements hook_uninstall().
 */
function members_uninstall() {
  variable_del('members_register_url');
  variable_del('members_page_url');
  variable_del('members_greeting_anonymous');
  variable_del('members_greeting_authenticated');
  variable_del('members_links');
  variable_del('members_panel_width');
}
