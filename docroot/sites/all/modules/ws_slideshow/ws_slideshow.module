<?php
/**
 * @file
 *
 * WS Slideshow integration module
 */

/**
 * Implements hook_enable().
 */
function ws_slideshow_enable() {
	
}

/**
 * Implements hook_libraries_info().
 */
function ws_slideshow_libraries_info() {
  $libraries['ws-slideshow'] = array(
    'name' => 'WS Slideshow',
    'vendor url' => 'http://www.ws-slideshow.com',
    'download url' => 'http://www.ws-slideshow.com/downloads.php',
    'version arguments' => array(
      'file' => 'readme.txt',
      // 2.x: WS Slideshow v2.0.5
      'pattern' => '/WS Slideshow v(\d+\.+\d+\.+\d+)/',
      'lines' => 1,
    ),
    'files' => array(
      'js' => array(
        'deploy/object.js',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_image_default_styles().
 */
function ws_slideshow_image_default_styles() {
  $styles = array();

  $styles['ws_slideshow_thumb']['label'] = 'WS Slideshow thumb';
  $styles['ws_slideshow_thumb']['effects'] = array(
    array(
      'name' => 'image_scale',
      'data' => array(
        'width' => 50,
        'height' => 50,
				'upscale' => '0',
      ),
      'weight' => 0,
    ),
  );

  return $styles;
}

/**
 * Implements hook_image_style_save().
 */
function ws_slideshow_image_style_save($style) {
	if ($style['name'] == 'ws_slideshow_thumb') {
		foreach ($style['effects'] AS $effect) {
			if (strpos($effect['name'], 'scale') !== FALSE) {
				//change variables for thums size when thumb size is changed
		    variable_set('ws_slideshow_thumb_width', $effect['data']['width']);
				variable_set('ws_slideshow_thumb_height', $effect['data']['height']);
			}
		}
	}
}

/**
 *  Implements hook_menu().
 */
function ws_slideshow_menu() {
  $items['ws-slideshow'] = array(
    'title' => 'WS Slideshow view all', 
    'page callback' => '_ws_slideshow_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
	
	$items['admin/config/content/ws-slideshow'] = array(
    'title' => 'WS Slideshow',
		'description' => t('Set size of WS Slideshow page.'),
    'page callback' => 'drupal_get_form',
		'page arguments' => array('ws_slideshow_settings'),
    'access arguments' => array('administer content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function ws_slideshow_settings() {
	$form = array();
	
	$form['ws_slideshow_width'] = array(
		'#type' => 'textfield',
    '#title' => t('Width of WS Slideshow'),
    '#default_value' => variable_get('ws_slideshow_width', 630),
    '#size' => 4,
    '#required' => TRUE,
	);
	$form['ws_slideshow_height'] = array(
		'#type' => 'textfield',
    '#title' => t('Height of WS Slideshow'),
    '#default_value' => variable_get('ws_slideshow_height', 450),
    '#size' => 4,
    '#required' => TRUE,
	);
	$form['ws_slideshow_description'] = array(
		'#type' => 'textarea',
    '#title' => t('Description'),
		'#description' => t('Description on top of page "/ws-slideshow"'),
    '#default_value' => variable_get('ws_slideshow_description', ''),
	);
	$form['ws_slideshow_thumb_style'] = array(
		'#markup' => l(t('Change thumb size'), 'admin/config/media/image-styles/edit/ws_slideshow_thumb'),
	);
	
	return system_settings_form($form);
}

/**
 * All node albums
 */
function _ws_slideshow_page() {
  $output = '';
	$wss_lib = lib_ws_slideshow();
	$output .= variable_get('ws_slideshow_description', '') . '<p>';
  $output .= '<div id="flashcontent">
		<p>To use WS-Slideshow update your 
	    <a href="http://www.adobe.com/go/getflashplayer" class="error">Flash Player Plugin</a>, 
	    please. You have to install the version 10 or later.</p>
	</div>';
    
		drupal_add_js($wss_lib['library path'] . '/deploy/swfobject.js', 'file');
    
    drupal_add_js('	
		var flashvars = {
			XMLPath: "/' . variable_get('file_public_path', '') . '/ws-slideshow/slides.xml"
		};
	
		var params = {
			quality: "best",
			allowFullScreen: "true",
			bgcolor: "#000000"
		};
		var attributes = {
			id: "ws-slideshow",
			name: "ws-slideshow"
		};

		swfobject.embedSWF(	"/' . $wss_lib['library path'] . '/deploy/ws-slideshow.swf", 
							"flashcontent", 
							"' . variable_get('ws_slideshow_width', 630) . '", 
							"' . variable_get('ws_slideshow_height', 450) . '", 
							"10.0",
							null, 
							flashvars, 
							params, 
							attributes);
      ', 'inline');
  
  //
  return $output;
}

/**
 * Implements hook_node_insert().
 */
function ws_slideshow_node_insert($node) {
  if (isset($node -> field_ws_file)) {
    _ws_slideshow_create_list($node);
	}
}

/**
 * Implements hook_node_update().
 */
function ws_slideshow_node_update($node) {
	if (isset($node -> field_ws_file)) {
    _ws_slideshow_create_list($node);
	}
}

/**
 * Helper function
 * create / update all nodes gallery xml file
 * create / update current node xml file
 */
function _ws_slideshow_create_list($node) {
	$xml_slideshow = '';
	$album_xml = _create_album_xml($node);
	$node_album_file = 'node_' . $node -> nid . '.xml';
	$site_dir = $_SERVER['DOCUMENT_ROOT'] . '/';
	$file_system = variable_get('file_public_path','') . '/';
	//create file for current gallery
	$xml_slideshow .= '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
	<slideshow>
		<!--
		
			WS-Slideshow 2 
			@see: http://www.ws-slideshow.com
		
			Standard configuration / Standard Konfiguration
		
		-->	
		
		<preferences 
			thumbSize="' . variable_get('ws_slideshow_thumb_width', 50) . '"
			/>
	
		<albums>' . "\n";
		
		$xml_slideshow .= $album_xml . "\n";
		
		$xml_slideshow .= '</albums>
	</slideshow>';
	
	//create slideshow file for current node
	$slideshow_node_file = $site_dir . $file_system . 'ws-slideshow/node_' . $node -> nid . '.xml';
	//dpm($xml_slideshow);
	file_put_contents($slideshow_node_file, $xml_slideshow);

	//create album xml for current file
	$node_album_file = $site_dir . $file_system . 'ws-slideshow/albums/node_' . $node -> nid . '.txt';
	file_put_contents($node_album_file, $album_xml);
	
	//create slides.xml - for all nodes
	$xml_slideshow_all = '';
	$dir = $site_dir . $file_system . 'ws-slideshow/albums/';
	$dh = opendir($dir); 
	$albums = array();
	$files = array();
	
	$xml_slideshow_all .= '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
	<slideshow>
		<!--
		
			WS-Slideshow 2 
			@see: http://www.ws-slideshow.com
		
			Standard configuration / Standard Konfiguration
		
		-->	
		
		<preferences 
			thumbSize="' . variable_get('ws_slideshow_thumb_width', 50) . '"
			/>
	
		<albums>' . "\n";
		
	while (($file = readdir($dh)) !== false) {
		
		if($file !== '.' && $file !== '..') {
			$files[] = $file;
			$albums[] = file_get_contents($dir . $file);
			$xml_slideshow_all .= file_get_contents($dir . $file) . "\n";
		} 
	}
	$xml_slideshow_all .= '</albums>
	</slideshow>';
	
	//create file for all gallery
	$slideshow_all_filename = $site_dir . $file_system . 'ws-slideshow/slides.xml';
	file_put_contents($slideshow_all_filename, $xml_slideshow_all);
}

/**
 * Helper function
 * Create structured 'album' xml for node
 */
function _create_album_xml($node) {
  $file_system = variable_get('file_public_path','') . '/';
  $field_dir = '';
  $field_info_instance = field_info_instance('node', 'field_ws_file', $node -> type);
  $field_dir = $field_info_instance['settings']['file_directory'] . '/';
  //
  $file_items = field_get_items('node', $node, 'field_ws_file');
	
	$effect = image_effect_load(1, 'ws_slideshow_thumb', $include = NULL);
	
  $xml_output = '';
  
  $album = new SimpleXMLElement("<album></album>");
  $album -> addAttribute('slidePath', '/' . $file_system . $field_dir);
  $album -> addAttribute('thumbPath', '/' . $file_system . $field_dir . 'ws_slideshow_thumbs/');
  
  $album -> addChild ('description', $node -> title);
  $slides = $album -> addChild('slides');
	
  foreach ($file_items AS $file_item) {
    $file = file_load($file_item['fid']);
		
		$slide = $slides -> addChild('slide', $file_item['description']);
    $slide -> addAttribute('name', $file -> filename);
		
		//create thumbs
    $image = image_load($file -> uri);
    image_effect_apply($image, $effect);
    $destination = 'public://ws-slideshow/images/ws_slideshow_thumbs/' . $file -> filename;
    image_save($image, $destination);
  }
  
  //remove xml definition from output
  $xml_output = str_replace('<?xml version="1.0"?>', '', $album -> asXml());
  
  return $xml_output;
}

/**
 * Implements hook_field_formatter_info().
 */
function ws_slideshow_field_formatter_info() {
  return array(
    'field_ws_slideshow' => array(
      'label' => t('WS Slideshow'),
      'field types' => array('file'),
      'settings' => array(
	      'ws_slideshow_width' => 930,
	      'ws_slideshow_height' => 650,
      ),
      'module' => 'ws_slideshow',
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function ws_slideshow_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element['ws_slideshow_width'] = array(
    '#title' => t('WS Slideshow Width'),
    '#type' => 'textfield',
    '#default_value' => $settings['ws_slideshow_width'],
    '#size' => 3,
    '#element_validate' => array('element_validate_integer_positive'), 
    '#required' => TRUE,
  );

  $element['ws_slideshow_height'] = array(
    '#title' => t('WS Slideshow Height'),
    '#type' => 'textfield',
    '#default_value' => $settings['ws_slideshow_height'],
    '#size' => 3,
    '#element_validate' => array('element_validate_integer_positive'), 
    '#required' => TRUE,
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function ws_slideshow_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = '';

  if ($display['type'] == 'field_ws_slideshow') {
    $summary = t('WS Slideshow: @wss_width x @wss_height', array('@wss_width' => $settings['ws_slideshow_width'], '@wss_height' => $settings['ws_slideshow_height']));
  }

  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function ws_slideshow_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
	$wss_lib = libraries_load('ws-slideshow');

  switch ($display['type']) {
    case 'field_ws_slideshow':      
      drupal_add_js($wss_lib['library path'] . '/deploy/swfobject.js', 'file');
    
      drupal_add_js('	
		var flashvars = {
			XMLPath: "/' . variable_get('file_public_path', '') . '/ws-slideshow/node_' . $entity -> nid . '.xml"
		};
	
		var params = {
			quality: "best",
			allowFullScreen: "true",
			bgcolor: "#000000"
		};
		var attributes = {
			id: "ws-slideshow",
			name: "ws-slideshow"
		};

		swfobject.embedSWF(	"/' . $wss_lib['library path'] . '/deploy/ws-slideshow.swf", 
				    "flashcontent", 
		    	      "' . $display['settings']['ws_slideshow_width'] . '", 
			      "' . $display['settings']['ws_slideshow_height'] . '", 
							"10.0",
							null, 
							flashvars, 
							params, 
							attributes);
      ', 'inline');
      
      $element[0] = array(
        '#markup' => _ws_slideshow_markup(),
      );
      
      break;
  }

  return $element;
}

function _ws_slideshow_markup() {
  return '<div id="flashcontent">
		<p>To use WS-Slideshow update your 
	    <a href="http://www.adobe.com/go/getflashplayer" class="error">Flash Player Plugin</a>, 
	    please. You have to install the version 10 or later.</p>
	</div>';
}

/**
 * Load ws-library
 */
function lib_ws_slideshow() {
	return libraries_load('ws-slideshow');
}
