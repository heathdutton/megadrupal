<?php

/**
 * @file
 * General functions and hook implementations.
 *
 * @see https://github.com/fronteed/iCheck
 */

/**
 * Implement hook_menu().
 */
function icheck_menu() {
  $items = array();
  $items['admin/config/icheck'] = array(
    'title' => t('iCheck Settings'),
    'description' => 'Change iCheck settings.',
    'position' => 'left',
    'weight' => -100,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/icheck/icheck'] = array(
    'title'            => t('iCheck Settings'),
    'description'      => 'Change iCheck settings.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('icheck_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file'             => 'icheck.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_libraries_info().
 */
function icheck_libraries_info() {
  $libraries['iCheck'] = array(
    'name' => 'iCheck',
    'vendor url' => 'https://github.com/fronteed/iCheck/',
    'download url' => 'https://github.com/fronteed/iCheck/archive/1.0.2.tar.gz',
    'version arguments' => array(
      'file' => 'icheck.min.js',
      // iCheck v1.0.2
      'pattern' => '/iCheck v(\d+\.+\d+\.+\d+)/',
      'lines' => 1,
    ),
    'files' => array(
      'js' => array(
        'icheck.js',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_element_info_alter().
 */
function icheck_element_info_alter(&$info) {
  // Element types need to be replaced.
  $element_types = array(
    'radio',
    'radios',
    'checkboxes',
    'checkbox'
  );

  foreach($element_types as $type) {
    $info[$type]['#process'][] = 'icheck_element_process_callback';
  }
}

/**
 * Element process callback.
 */
function icheck_element_process_callback($element) {
  $icheck_enabled = variable_get('icheck_enabled', TRUE);

  if (path_is_admin(current_path())) {
    $icheck_enabled = variable_get('icheck_admin_theme_enabled', FALSE);
  }

  // Activate iCheck when enabled or explicitly set on element.
  if ($icheck_enabled || isset($element['#icheck'])) {
    $defaults = array(
      'skin' => variable_get('icheck_skin', 'minimal'),
      'color' => variable_get('icheck_skin_color', 'blue'),
    );

    if (isset($element['#icheck']) && is_array($element['#icheck'])) {
      $element['#icheck'] += $defaults;
    } else {
      $element['#icheck'] = $defaults;
    }

    icheck_add_js_settings($element);
  }

  return $element;
}

/**
 * Add iCheck js settings
 *
 * @staticvar boolean $libraries_added
 *
 * @param  $element
 *
 * @return void
 */
function icheck_add_js_settings($element) {
  static $libraries_added = FALSE;

  $id = isset($element['#attributes']['id']) ? $element['#attributes']['id'] : $element['#id'];

  $skin = $element['#icheck']['skin'];
  $color = $element['#icheck']['color'];

  $js_settings = array(
    'icheck' => array(
      $id => array(
        'skin' => $skin,
        'color' => $color
      )
    ),
  );

  drupal_add_js($js_settings, 'setting');

  $css_file_path = libraries_get_path('iCheck') . '/skins/' . $skin . '/' . $color . '.css';
  if (file_exists($css_file_path)) {
    drupal_add_css($css_file_path);
  }
  else {
    drupal_set_message(t('File %file is not exists!', array('%file' => $css_file_path)), 'error');
  }

  if (!$libraries_added) {
    libraries_load('iCheck');
    drupal_add_js(drupal_get_path('module', 'icheck') . '/js/icheck.js');
    $libraries_added = TRUE;
  }
}
