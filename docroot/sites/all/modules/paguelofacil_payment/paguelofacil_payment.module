<?php
/**
 * @file
 * Paguelofacil Payment module.
 */

/**
 * Implements hook_menu().
 */
function paguelofacil_payment_menu() {
  $items['paguelofacil_payment/return'] = array(
    'title' => 'PagueloFacil return url',
    'page callback' => 'paguelofacil_payment_return',
    'access callback' => 'paguelofacil_payment_return_access',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_payment_method_controller_info().
 */
function paguelofacil_payment_payment_method_controller_info() {
  return array('PaguelofacilPaymentMethodController');
}

/**
 * Implements hook_entity_load().
 */
function paguelofacil_payment_entity_load(array $entities, $entity_type) {
  if ($entity_type == 'payment_method') {
    $pmids = array();
    foreach ($entities as $payment_method) {
      if ($payment_method->controller->name == 'PaguelofacilPaymentMethodController') {
        $pmids[] = $payment_method->pmid;
      }
    }
    if ($pmids) {
      $query = db_select('paguelofacil_payment')
        ->fields('paguelofacil_payment')
        ->condition('pmid', $pmids);
      $result = $query->execute();
      while ($data = $result->fetchAssoc()) {
        $payment_method = $entities[$data['pmid']];
        $payment_method->controller_data = (array) $data;
        unset($payment_method->controller_data['pmid']);
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_ACTION().
 */
function paguelofacil_payment_payment_method_insert(PaymentMethod $payment_method) {
  if ($payment_method->controller->name == 'PaguelofacilPaymentMethodController') {
    $payment_method->controller_data += $payment_method->controller->controller_data_defaults;

    $query = db_insert('paguelofacil_payment');
    $values = array_merge($payment_method->controller_data, array(
      'pmid' => $payment_method->pmid,
    ));
    $query->fields($values);
    $query->execute();
  }
}

/**
 * Implements hook_ENTITY_TYPE_ACTION().
 */
function paguelofacil_payment_payment_method_update(PaymentMethod $payment_method) {
  if ($payment_method->controller->name == 'PaguelofacilPaymentMethodController') {
    $query = db_update('paguelofacil_payment');
    $values = array_merge($payment_method->controller_data, array(
      'pmid' => $payment_method->pmid,
    ));
    $query->fields($values);
    $query->condition('pmid', $payment_method->pmid);
    $query->execute();
  }
}

/**
 * Implements hook_ENTITY_TYPE_ACTION().
 */
function paguelofacil_payment_payment_method_delete($entity) {
  if ($entity->controller->name == 'PaguelofacilPaymentMethodController') {
    db_delete('paguelofacil_payment')
      ->condition('pmid', $entity->pmid)
      ->execute();
  }
}

/**
 * Implements PaymentMethodController::payment_method_configuration_form_elements_callback.
 */
function paguelofacil_payment_payment_method_configuration_form_elements(array $form, array &$form_state) {
  return $form_state['payment_method']->controller
    ->payment_method_configuration_form_elements($form, $form_state);
}

/**
 * Implements form validate callback for paguelofacil_payment_payment_method_configuration_form_elements().
 */
function paguelofacil_payment_payment_method_configuration_form_elements_validate(array $element, array &$form_state) {
  $values = drupal_array_get_nested_value($form_state['values'], $element['#parents']);

  $controller_data = &$form_state['payment_method']->controller_data;
  $controller_data['cclw'] = $values['authentication']['cclw'];
}

/**
 * Return callback.
 */
function paguelofacil_payment_return() {
  $payment = entity_load_single('payment', $_GET['PID']);

  if (!$_GET['TotalPagado'] == $payment->totalAmount(TRUE)) {
    $payment->setStatus(new PaymentStatusItem(PAYMENT_STATUS_FAILED));
  }

  $payment->finish();
}

/**
 * Access callback for the return URL.
 *
 * @return bool
 *   Checks if the PID is set on the return form paguelofacil.
 */
function paguelofacil_payment_return_access() {
  return isset($_GET['PID']);
}
