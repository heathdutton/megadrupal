<?php

/**
 * @file
 * Adds URL Redirect and UI to set paths to redirect.
 */

/**
 * Implements hook_permission().
 */
function url_redirect_permission() {
  return array(
    'access url redirect settings page' => array(
      'title' => t('Access URL Redirect Settings'),
      'description' => t('Url Redirect page.'),
    ),
    'access url redirect edit page' => array(
      'title' => t('Access URL Redirect Edit Page'),
      'description' => t('Url Redirect Edit page.'),
    ),
    'access url redirect delete page' => array(
      'title' => t('Access URL Redirect Delete'),
      'description' => t('Url Redirect delete page.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function url_redirect_menu() {
  $items = array();
  $items['admin/config/url_redirect'] = array(
    'title' => 'URL Redirect',
    'description' => 'Configuration Page for Url Redirect',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('url_redirect_settings_form'),
    'file' => 'url_redirect.admin.inc',
    'access arguments' => array('access url redirect settings page'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/url_redirect/list'] = array(
    'title' => 'List URL Redirect',
    'description' => 'Url Redirect add',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('url_redirect_list_form'),
    'file' => 'url_redirect_list.inc',
    'access arguments' => array('access url redirect settings page'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/url_redirect/edit'] = array(
    'title' => 'URL Redirect Edit',
    'description' => 'Edit URL Redirect',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('url_redirect_edit_form'),
    'file' => 'url_redirect_edit.inc',
    'access arguments' => array('access url redirect edit page'),
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items['admin/config/url_redirect/delete'] = array(
    'title' => 'Url Redirect Delete',
    'description' => 'Delete Url Redirect',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('url_redirect_delete_form'),
    'file' => 'url_redirect_delete.inc',
    'access arguments' => array('access url redirect delete page'),
    'type' => MENU_SUGGESTED_ITEM,
  );
  return $items;
}

/**
 * Implements hook_page_build().
 */
function url_redirect_page_build(&$page) {
  global $user;
  // Check URL path in url_redirect table.
  if (drupal_is_front_page()) {
    $path = check_plain('<front>');
    $path_check = url_redirect_path_check($path);
  }
  else {
    $path = check_plain($_GET['q']);
    $path_check = url_redirect_path_check($path);
  }
  if ($path_check) {
    $check_for = $path_check['check_for'];
    $message = $path_check['message'];
    if ($message == 'Yes') {
      drupal_set_message(t("You have been redirected to '@link_path'.", array('@link_path' => $path_check['redirect_path'])));
    }
    // Check for Role.
    if ($check_for == 'Role') {
      $role_check = (array) json_decode($path_check['roles']);
      $role_check_array = array_keys($role_check);
      $user_role_check_array = array_keys($user->roles);
      $checked_result = array_intersect($role_check_array, $user_role_check_array);
      if ($checked_result) {
        drupal_goto($path_check['redirect_path']);
      }
    }
    // Check for User.
    elseif ($check_for == 'User') {
      $user_check = (array) json_decode($path_check['users']);
      $user_check_array = array_keys($user_check);
      $uid = array($user->uid);
      $checked_user_result = array_intersect($user_check_array, $uid);
      if ($checked_user_result) {
        drupal_goto($path_check['redirect_path']);
      }
    }
  }
}

/**
 * Fetch list of all the users.
 */
function url_redirect_user_fetch() {
  $query = db_select('users', 'u')
      ->fields('u', array('uid', 'name'))
      ->condition('uid', 0, '!=')
      ->orderBy('name');
  $result = $query->execute()->fetchAllKeyed();
  return $result;
}

/**
 * Checking the path.
 */
function url_redirect_path_check($path) {
  $query = db_select('url_redirect', 'u')
      ->fields('u')
      ->condition('path', $path, '=')
      ->condition('status', 1, '=');
  $result = $query->execute()->fetchAssoc();
  return $result;
}

/**
 * Edit the path.
 */
function url_redirect_path_edit($path) {
  $query = db_select('url_redirect', 'u')
      ->fields('u')
      ->condition('path', $path, '=');
  $result = $query->execute()->fetchAssoc();
  return $result;
}
