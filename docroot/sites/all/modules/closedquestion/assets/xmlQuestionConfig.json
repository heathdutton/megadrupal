{
  "valid_children": ["question"],
  "xml_specific_config": [
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": " "
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": []
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "option"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "options", "prompt"],
            "attributes": {
              "cssclass": {
                "title": "Style",
                "values": [
                  {
                    "title": "Normal",
                    "value": " "
                  },
                  {
                    "title": "Horizontal gallery",
                    "value": "cq_horizontal_gallery"
                  },
                  {
                    "title": "Vertical image gallery",
                    "value": "cq_vertical_image_gallery"
                  }
                ]
              }
            }
          },
          "option": {
            "attributes": {
              "correct": {
                "values": [
                  {
                    "title": "No",
                    "value": " "
                  },
                  {
                    "title": "Yes",
                    "value": "1"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "sequence"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["question"]
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "dragdrop"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "matchimg", "startstate", "mappings"]
          },
          "match": {
            "attributes": {
              "matchall": {
                "title": "Match all items",
                "values": [
                  {
                    "title": "No, Stop after first success",
                    "value": " "
                  },
                  {
                    "title": "All selected hotspots should have one of the selected draggables",
                    "value": "h"
                  },
                  {
                    "title": "All selected draggables should be on one of the selected hotspots",
                    "value": "d"
                  },
                  {
                    "title": "Both",
                    "value": "b"
                  }
                ]
              },
              "hotspot": {
                "title": "hotspot",
                "description": "Type hotspot id (e.g. 'A'). To match several hotspot ids, place them between square brackets (e.g. '[abf]' to match hotspots with id 'a', 'b' or 'f')",
                "type": "regexp"
              },
              "draggable": {
                "title": "draggable",
                "description": "Select the Draggable item, that you want to match with a Hotspot, in the left panel. Copy the name in the field 'identifier' over there and paste it here.'"
              },
              "inlinechoice": null,
              "inlineoption": null,
              "pattern": null
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "arrow"
      },
      "config_changes": {
        "types": {
          "hotspot": {
            "attributes": {
              "shape": {
                "values": ["rect"]
              }
            }
          },
          "question": {
            "valid_children": ["text", "textlabel", "hints", "matchimg", "mappings"],
            "attributes": {
              "duplicates": null,
              "alignment": null,
              "inlinefeedback": null,
              "optionheight": null,
              "linenumbering": {
                "title": "Numbered lines?",
                "values": ["yes", "no"],
                "description": "Selected whether lines the user draws should be numbered or not"
              },
              "linestyle": {
                "title": "Line style",
                "values": ["curved", "straight"],
                "description": "Select line style",
                "feedback": [
                  {
                    "correct": 1,
                    "match": "straight",
                    "text": "Straight lines",
                    "fatal": 0,
                    "stop": 0
                  },
                  {
                    "correct": 1,
                    "match": "curved",
                    "text": "Curved lines",
                    "fatal": 0,
                    "stop": 0
                  }
                ]
              },
              "startarrow": {
                "title": "Arrow at start of lines?",
                "values": ["yes", "no"],
                "description": "Should the lines have an arrowhead at their start?"
              },
              "endarrow": {
                "title": "Arrow at end of lines?",
                "values": ["yes", "no"],
                "description": "Should the lines have an arrowhead at their end?"
              }
            }
          },
          "match": {
            "attributes": {
              "matchall": null,
              "hotspot": null,
              "draggable": null,
              "pattern": "regexp",
              "timestart": null,
              "timeend": null,
              "inlinechoice": null,
              "inlineoption": null
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "hotspotmovie"
      },
      "config_changes": {
        "types": {
          "question": {
            "attributes": {
              "clicksubmittreshold": {
                "title": "Click treshold",
                "description": "The number of clicks after which the answer is automatically submitted",
                "feedback": [
                  {
                    "correct": 1,
                    "match": "^[0-9]*$",
                    "text": "",
                    "fatal": 0,
                    "stop": 1
                  },
                  {
                    "correct": 0,
                    "match": ".",
                    "text": "Enter only numbers, e.g. 1",
                    "fatal": 1,
                    "stop": 1
                  }
                ]
              },
              "starttitle": {
                "title": "Start title",
                "description": "The title shown on video asking users to start it. Default: Click to start movie"
              }
            }
          },
          "match": {
            "atts_in_title": ["hotspot", "correct", "timestart", "timeend"],
            "attributes": {
              "timestart": {
                "title": "Start of time interval (in seconds)",
                "description": "Start of time interval when this match is active.",
                "feedback": [
                  {
                    "correct": 1,
                    "match": "^[0-9]*\\.?[0-9]+?$",
                    "text": "",
                    "fatal": 0,
                    "stop": 1
                  },
                  {
                    "correct": 0,
                    "match": ".",
                    "text": "Enter only numbers, e.g. 1.5.",
                    "fatal": 1,
                    "stop": 1
                  }
                ]
              },
              "timeend": {
                "title": "End of time interval (in seconds)",
                "description": "End of time interval when this match is active.",
                "feedback": [
                  {
                    "correct": 1,
                    "match": "^[0-9]*\\.?[0-9]+?$",
                    "text": "",
                    "fatal": 0,
                    "stop": 1
                  },
                  {
                    "correct": 0,
                    "match": ".",
                    "text": "Enter only numbers, e.g. 1.5.",
                    "fatal": 1,
                    "stop": 1
                  }]
              }
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "hotspot"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "matchimg", "startstate", "mappings"]
          },
          "matchimg": {
            "valid_children": ["hotspot"]
          },
          "hotspot": {
            "description": "A hotspot is a clickable area on an image or movie. Feedback can be provided based on which hotspot is clicked."
          },
          "match": {
            "attributes": {
              "matchall": {
                "title": "Match all items",
                "values": [
                  {
                    "title": "No, Stop after first success",
                    "value": " "
                  },
                  {
                    "title": "All selected hotspots should have one of the draggables",
                    "value": "h"
                  },
                  {
                    "title": "All draggables should be on one of the selected hotspots",
                    "value": "d"
                  },
                  {
                    "title": "Both",
                    "value": "b"
                  }
                ]
              },
              "hotspot": {
                "title": "hotspot",
                "description": "Select the Hotspot item you want to match with a Draggable, in the left panel. Copy the name in the field 'identifier' over there and paste it here.",
                "type": "regexp"
              },
              "inlinechoice": null,
              "inlineoption": null,
              "pattern": null,
              "draggable": null
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "option|check|value|fillblanks|selectorder"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "startstate", "mappings"]
          },
          "matchimg": {
            "valid_children": ["hotspot"]
          },
          "match": {
            "attributes": {
              "matchall": {
                "title": "Match all items",
                "values": [
                  {
                    "title": "No, Stop after first success",
                    "value": " "
                  },
                  {
                    "title": "Yes, All must match for success",
                    "value": "1"
                  }
                ]
              },
              "inlinechoice": {
                "title": "inlinechoice",
                "description": "A select box or text input defined in the question text",
                "auto_values": {
                  "path": ["question", "text"],
                  "contentsTagNameMatch": "inlineChoice",
                  "valueSrc": ["identifier", "id"],
                  "titleSrc": ["identifier", "id"]
                }
              },
              "inlineoption": {
                "title": "inlineoption",
                "description": "An option belonging to a select box defined in the question text",
                "auto_values": {
                  "path": ["question", "inlineOption"],
                  "valueSrc": "id",
                  "titleSrc": "@innerHTML"
                },
                "attributeOptionGroup": "pattern"
              },
              "pattern": {
                "title": "pattern",
                "description": "Enter a regular expression to match against the given answer.",
                "attributeOptionGroup": "pattern",
                "type": "regexp"
              },
              "hotspot": null,
              "draggable": null
            }
          },
          "range": {
            "attributes": {
              "inlinechoice": {
                "title": "inlinechoice",
                "description": "A select box or text input defined in the question text",
                "auto_values": {
                  "path": ["question", "text"],
                  "contentsTagNameMatch": "inlineChoice",
                  "valueSrc": ["identifier", "id"],
                  "titleSrc": ["identifier", "id"]
                }
              }
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "check"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "correct", "options", "prompt", "mappings"],
            "attributes": {
              "cssclass": {
                "title": "Style",
                "values": [
                  {
                    "title": "Normal",
                    "value": " "
                  },
                  {
                    "title": "Horizontal image gallery",
                    "value": "cq_horizontal_image_gallery"
                  },
                  {
                    "title": "Vertical image gallery",
                    "value": "cq_vertical_image_gallery"
                  }
                ],
                "description": "Should the feedback apear between the options, or all together at the bottom?",
                "feedback": [
                  {
                    "correct": 1,
                    "match": "1",
                    "text": "Yes means that the feedback text will appear directly under each offered choice.",
                    "fatal": 0,
                    "stop": 0
                  },
                  {
                    "correct": 1,
                    "match": " ",
                    "text": "No means that the feedback text will appear in the feedback field at the bottom of the page.",
                    "fatal": 0,
                    "stop": 0
                  }
                ]
              }
            }
          },
          "match": {
            "attributes": {
              "inlineoption": null,
              "inlinechoice": null,
              "pattern": {
                "attributeOptionGroup": null
              }
            }
          }

        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "fillblanks"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "inlineoption", "mappings"]
          },
          "range": {
            "attributes": {
              "matchall": null
            }
          }

        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "flash"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport"]
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "selectorder"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "options", "startstate", "mappings"]
          },
          "option": {
            "valid_children": ["choice", "description"],
            "attributes": {
              "id": {
                "description": "A letter (a-zA-Z) for options, a number (0-9) for groups.",
                "feedback": [
                  {
                    "correct": 0,
                    "match": "^.{2,}$",
                    "text": "You should use only 1 character for the ID in a select and order option.",
                    "fatal": 0,
                    "stop": 1
                  },
                  {
                    "correct": 1,
                    "match": "^[0-9]$",
                    "text": "This option is now a target-box.",
                    "fatal": 0,
                    "stop": 1
                  },
                  {
                    "correct": 1,
                    "match": "^[a-zA-Z]$",
                    "text": "This option is now a normal selectable option.",
                    "fatal": 0,
                    "stop": 1
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "value"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "range", "unit"]
          },
          "range": {
            "content": 0,
            "attributes": {
              "matchall": null,
              "inlinechoice": null,
              "value": null,
              "minval": null,
              "maxval": null
            },
            "valid_children": ["minval", "maxval", "feedback"],
            "max_children": -1,
            "icon": {
              "image": "icons/mapping_icon.png"
            },
            "in_group": "mappings",
            "atts_in_title": ["correct"]
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "check|dragdrop|hotspot|fillblanks|selectorder"
      },
      "config_changes": {
        "types": {
          "mappings": {
            "content": 0,
            "attributes": {},
            "valid_children": ["mapping"],
            "max_children": -1,
            "is_group": 1
          },
          "range": {
            "valid_children": [],
            "max_children": 0,
            "attributes": {
              "correct": null
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "selectorder|dragdrop|hotspot|value|fillblanks|flash|sequence"
      },
      "config_changes": {
        "types": {
          "question": {
            "attributes": {
              "inlinefeedback": null
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "balance"
      },
      "config_changes": {
        "types": {
          "question": {
            "valid_children": ["text", "hints", "acc", "flow", "prod", "correct"]
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "question",
        "attribute": "type",
        "attributeValue": "option|check|dragdrop|hotspot|balance|value|fillblanks|flash|sequence"
      },
      "config_changes": {
        "types": {
          "question": {
            "attributes": {
              "duplicates": null,
              "alignment": null,
              "optionheight": null
            }
          }
        }
      }
    },
    {
      "conditions": {
        "family_node": "mapping",
        "attribute": "correct",
        "attributeValue": "0|1"
      },
      "config_changes": {
        "types": {
          "feedback": {
            "title": "feedback"
          }
        }
      }
    }
  ],
  "types": {
    "question": {
      "content": 0,
      "valid_children": ["text", "matheval", "mathimport", "textlabel", "hints", "correct", "options", "inlineoption", "matchimg", "prompt", "startstate", "mappings", "range", "question", "acc", "flow", "prod", "database"],
      "max_children": -1,
      "description": "Explanation about Question.",
      "attributes": {
        "type": {
          "title": "Question type",
          "values": [" ", "arrow", "balance", "check", "dragdrop", "fillblanks", "flash", "hotspot", "hotspotmovie", "option", "selectorder", "sequence", "value"],
          "value_aliases": {
            "pattern": "selectorder"
          },
          "mandatory": " ",
          "description": "Select question type",
          "feedback": [
            {
              "correct": 1,
              "match": "arrow",
              "text": "A question in which the user should draw arrows",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "option",
              "text": "A question in which the user should select 1 option from a number of options.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "check",
              "text": "A question in which the user should select 1 or more options from a number of options.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "dragdrop",
              "text": "A question in which the user should drag 'draggables' to 'hotspots'",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "hotspot",
              "text": "A question in which the user should point out a 'hotspot' in an image.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "balance",
              "text": "A question in which the user should create a mass balance.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "value",
              "text": "A question in which the user should fill out one value.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "fillblanks",
              "text": "A question in which the user should fill out one or more values.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "selectorder",
              "text": "A question in which the user should put items in the correct order.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "flash",
              "text": "A wrapper to present Adobe Flash questions.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "sequence",
              "text": "Allows to create a sequence of closed questions.",
              "fatal": 0,
              "stop": 0
            }
          ]
        },
        "inlinefeedback": {
          "title": "Feedback between options",
          "values": [
            {
              "title": "No",
              "value": " "
            },
            {
              "title": "Yes",
              "value": 1
            }
          ],
          "description": "Should the feedback apear between the options, or all together at the bottom?",
          "feedback": [
            {
              "correct": 1,
              "match": "1",
              "text": "Yes means that the feedback text will appear directly under each offered choice.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": " ",
              "text": "No means that the feedback text will appear in the feedback field at the bottom of the page.",
              "fatal": 0,
              "stop": 0
            }
          ]
        },
        "duplicates": {
          "title": "Allow duplicates",
          "values": [
            {
              "title": "No",
              "value": " "
            },
            {
              "title": "Yes",
              "value": 1
            }
          ],
          "description": "Can options be chosen more than once?",
          "feedback": [
            {
              "correct": 1,
              "match": "1",
              "text": "Yes means that options can be copied from the source box to one or more target boxes. So an option can be dragged to the target boxes more than once",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": " ",
              "text": "No means that options can be moved from the source box to one or more target boxes. So an option can be dragged to the target boxes only once",
              "fatal": 0,
              "stop": 0
            }
          ]
        },
        "cssclass": {
          "title": "Style",
          "values": [
            {
              "title": "Default",
              "value": ""
            }]
        },
        "alignment": {
          "title": "Alignment",
          "description": "Should the options be aligned horizontally or vertically.",
          "values": [
            {
              "title": "Default",
              "value": " "
            },
            {
              "title": "Horizontal",
              "value": "horizontal"
            }
          ],
          "feedback": [
            {
              "correct": 1,
              "match": " ",
              "text": "'Default' means that options will be placed  below one another in the target box, when dropped there.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "horizontal",
              "text": "'Horizontal' means that options will be placed next to one another in the target box, when dropped there.",
              "fatal": 0,
              "stop": 0
            }
          ]
        },
        "optionheight": {
          "title": "Option Height",
          "description": "Give a CSS heigt value here to fix the hight of the options."
        },
        "width": {
          "depricated": 1,
          "title": "Width (This should be moved to the Matchimg)",
          "feedback": [
            {
              "correct": 0,
              "match": ".+",
              "text": "Width should be moved to the Matchimg"
            }
          ]
        },
        "height": {
          "depricated": 1,
          "title": "Height (This should be moved to the Matchimg)",
          "feedback": [
            {
              "correct": 0,
              "match": ".+",
              "text": "Height should be moved to the Matchimg"
            }
          ]
        }
      },
      "atts_in_title": ["type"]
    },
    "text": {
      "content": 1,
      "attributes": {},
      "valid_children": [],
      "icon": {
        "image": "icons/text_icon.png"
      },
      "max_children": 0,
      "max_count": 1
    },
    "prompt": {
      "content": 1,
      "attributes": {},
      "valid_children": [],
      "icon": {
        "image": "icons/text_icon.png"
      },
      "max_children": 0,
      "max_count": 1,
      "description": "Shown above the list of options in a MC question, for instance: Pick One"
    },
    "unit": {
      "content": 1,
      "attributes": {},
      "valid_children": [],
      "icon": {
        "image": "icons/text_icon.png"
      },
      "max_children": 0,
      "max_count": 1,
      "description": "The unit of the answer."
    },
    "matheval": {
      "content": 0,
      "description": "Evaluate a mathematical expression.",
      "attributes": {
        "e": {
          "title": "e",
          "description": "An expression. Examples: a=random(); a=round(a*0.8+0.11,2); min=min(round(ans,1),(ans-0.01)); etc. See advanced help."
        },
        "expression": {
          "alias_of": "e"
        },
        "store": {
          "description": "Store all variables after this point?",
          "values": [
            {
              "title": "No",
              "value": " "
            },
            {
              "title": "Yes",
              "value": "1"
            }
          ]
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/matheval_icon.png"
      },
      "atts_in_title": ["store", "e"]
    },
    "mathexport": {
      "content": 0,
      "description": "Export the value of a variable.",
      "attributes": {
        "varname": {
          "title": "varname",
          "description": "Name of the variable."
        },
        "exportname": {
          "title": "exportname",
          "description": "Exported name of the variable."
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/matheval_icon.png"
      },
      "atts_in_title": ["varname", "exportname"]
    },
    "mathimport": {
      "content": 0,
      "description": "Import the value of a variable.",
      "attributes": {
        "varname": {
          "title": "varname",
          "description": "Name of the variable."
        },
        "importname": {
          "title": "importname",
          "description": "Exported name of the variable."
        },
        "importnode": {
          "title": "importnode",
          "description": "Node where the variable was exported."
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/matheval_icon.png"
      },
      "atts_in_title": ["varname", "importname", "importnode"]
    },
    "textlabel": {
      "content": 0,
      "description": "A text label that can change based on math values.",
      "attributes": {
        "id": {
          "title": "Identifier",
          "description": "A unique name for this item."
        },
        "identifier": {
          "alias_of": "id"
        }
      },
      "valid_children": ["triggernumber"],
      "max_children": -1,
      "atts_in_title": ["id"]
    },
    "triggernumber": {
      "content": 1,
      "description": "A trigger that gives a textlabel a text depending on a variable.",
      "attributes": {
        "min": {
          "title": "Minimum",
          "description": "The minimum value the variable can have for this Trigger to match."
        },
        "max": {
          "title": "Maximim",
          "description": "The maximum value the variable can have for this Trigger to match."
        }
      },
      "valid_children": [],
      "max_children": 0,
      "atts_in_title": ["min", "max"]
    },
    "hints": {
      "content": 0,
      "description": "Here all hints are grouped together.",
      "attributes": {},
      "valid_children": ["hint"],
      "max_children": -1,
      "max_count": 1,
      "is_group": 1
    },
    "hint": {
      "content": 1,
      "description": "Hints can be used to guide the user to the answer.",
      "attributes": {
        "mintries": {
          "title": "Minimum tries",
          "description": "The minimum number of tries before showing the hint.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "This should be a positive number!",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "maxtries": {
          "title": "Maximum tries",
          "description": "The maximum number of tries during which the hint will appear. If nothing is entered, the hint will not disappear once it is shown.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "This should be a positive number!",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "block": {
          "title": "block",
          "description": "The feedback block in which the hint should appear. Feedback blocks can be added to the question text.",
          "auto_values": {
            "path": ["question", "text"],
            "contentsTagNameMatch": "feedbackblock",
            "valueSrc": ["identifier", "id"],
            "titleSrc": ["identifier", "id"]
          }
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/hint_icon.png"
      },
      "in_group": "hints",
      "atts_in_title": ["mintries", "maxtries", "block"]
    },
    "correct": {
      "content": 1,
      "description": "This is the feedback shown when the the answer is correct.",
      "attributes": {},
      "valid_children": [],
      "max_children": 0,
      "max_count": 1,
      "icon": {
        "image": "icons/correct_icon.png"
      }
    },
    "options": {
      "content": 0,
      "description": "Here all the options are grouped together.",
      "attributes": {},
      "valid_children": ["option"],
      "max_children": -1,
      "max_count": 1,
      "is_group": 1
    },
    "option": {
      "content": 0,
      "attributes": {
        "id": {
          "title": "Identifier",
          "description": "A unique name for this item."
        },
        "identifier": {
          "alias_of": "id"
        },
        "name": {
          "alias_of": "id"
        },
        "correct": {
          "title": "This option is correct (inline feedback only)",
          "description": "Describes whether this option is correct, not correct or irrelevant. This information is used to show inline feedback (see Add/remove below)",
          "values": [
            {
              "title": "No",
              "value": " "
            },
            {
              "title": "Yes",
              "value": "1"
            },
            {
              "title": "Irrelevant",
              "value": "-1"
            }
          ]
        }
      },
      "atts_in_title": ["id", "correct"],
      "icon": {
        "image": "icons/option_icon.png"
      },
      "valid_children": ["choice", "description", "feedback", "feedbackunselected"],
      "auto_children": ["choice"],
      "children_in_editor": ["choice"],
      "max_children": -1,
      "in_group": "options"
    },
    "choice": {
      "title": "Text",
      "content": 1,
      "attributes": {},
      "valid_children": [],
      "max_children": 0,
      "max_count": 1,
      "icon": {
        "image": "icons/text_icon.png"
      },
      "hidden": 1
    },
    "description": {
      "content": 1,
      "description": "A description of the option, shown in a mouse-over of the option.",
      "attributes": {},
      "valid_children": [],
      "max_children": 0,
      "max_count": 1
    },
    "feedback": {
      "content": 1,
      "attributes": {
        "mintries": {
          "title": "Minimum tries",
          "description": "The minimum number of tries before showing the hint. If nothing is entered, the hint will be shown after the first try.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "This should be a positive number!",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "maxtries": {
          "title": "Maximum tries",
          "description": "The maximum number of tries during which the hint will appear. If nothing is entered, the hint will not disappear once it is shown.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "This should be a positive number!",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "block": {
          "title": "block",
          "description": "The feedbackblock in which the hint should appear.",
          "auto_values": {
            "path": ["question", "text"],
            "contentsTagNameMatch": "feedbackblock",
            "valueSrc": ["identifier", "id"],
            "titleSrc": ["identifier", "id"]
          }
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/feedback_icon.png"
      },
      "atts_in_title": ["mintries", "maxtries", "block"],
      "title": "Feedback",
      "description": "Feedback to the user."
    },
    "feedbackunselected": {
      "content": 1,
      "attributes": {
        "mintries": {
          "title": "Minimum tries",
          "description": "The minimum number of tries before showing the hint. If nothing is entered, the hint will be shown after the first try.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "This should be a positive number!",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "maxtries": {
          "title": "Maximum tries",
          "description": "The maximum number of tries during which the hint will appear. If nothing is entered, the hint will not disappear once it is shown.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "This should be a positive number!",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "block": {
          "title": "block",
          "description": "The feedbackblock in which the hint should appear.",
          "auto_values": {
            "path": ["question", "text"],
            "contentsTagNameMatch": "feedbackblock",
            "valueSrc": ["identifier", "id"],
            "titleSrc": ["identifier", "id"]
          }
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/feedback_icon.png"
      },
      "atts_in_title": ["mintries", "maxtries", "block"],
      "title": "Feedback",
      "description": "Feedback to the user."
    },
    "inlineoption": {
      "content": 1,
      "attributes": {
        "id": {
          "title": "Identifier",
          "description": "A unique name for this item."
        },
        "identifier": {
          "alias_of": "id"
        },
        "group": {
          "title": "Group",
          "description": "Define here to which group (a dropdownbox) the option should be added."
        }
      },
      "atts_in_title": ["id", "group"],
      "valid_children": [],
      "max_children": 0
    },
    "matchimg": {
      "content": 0,
      "attributes": {
        "src": {
          "description": "The name of the uploaded image file in 'File Attachments'. This name should be entered here like this: [attachurl:image_name.png]"
        },
        "height": {
          "description": "The desired height of the picture in pixel units. If nothing is entered here nor in width, the actual size of the image will be used.",
          "hint_on_empty": "Type a number",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "Enter only numbers.",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "width": {
          "description": "The desired width of the picture in pixel units. If nothing is entered here nor in height, the actual size of the image will be used.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "Enter only numbers.",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "maxchoices": {
          "description": "the maximum number of choices that can be entered.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "Enter only numbers.",
              "fatal": 1,
              "stop": 1
            }
          ]
        }
      },
      "valid_children": ["hotspot", "draggable"],
      "max_children": -1,
      "max_count": 1
    },
    "matchvid": {
      "content": 0,
      "attributes": {
        "src": {
          "description": "The name of the uploaded movie in 'File Attachments'. This name should be entered here like this: [attachurl:filename]. Multiple names can be provided, separated by commas."
        },
        "height": {
          "description": "The desired height of the video in pixel units. If nothing is entered here nor in width, the actual size of the video will be used.",
          "hint_on_empty": "Type a number",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "Enter only numbers.",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "width": {
          "description": "The desired width of the video in pixel units. If nothing is entered here nor in height, the actual size of the video will be used.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9]",
              "text": "Enter only numbers.",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "startat": {
          "title": "Start movie at",
          "description": "Starttime (in s) of this video (leave blank to set no start time)",
          "feedback": [
            {
              "correct": 1,
              "match": "^[0-9]*\\.?[0-9]+?$",
              "text": "",
              "fatal": 0,
              "stop": 1
            },
            {
              "correct": 0,
              "match": ".",
              "text": "Enter only numbers, e.g. 1.5.",
              "fatal": 1,
              "stop": 1
            }
          ]
        },
        "stopat": {
          "title": "Stop movie at",
          "description": "Endtime (in s) of this video (leave blank to set no end time). Note: The user answer will be submitted when the video stops",
          "feedback": [
            {
              "correct": 1,
              "match": "^[0-9]*\\.?[0-9]+?$",
              "text": "",
              "fatal": 0,
              "stop": 1
            },
            {
              "correct": 0,
              "match": ".",
              "text": "Enter only numbers, e.g. 1.5.",
              "fatal": 1,
              "stop": 1
            }
          ]
        }
      },
      "valid_children": ["hotspot"],
      "max_children": -1,
      "max_count": 1
    },
    "hotspot": {
      "content": 1,
      "attributes": {
        "shape": {
          "values": ["rect", "circle", "poly"],
          "description": "In the dropdown box you can choose a shape to draw the hotspot",
          "feedback": [
            {
              "correct": 1,
              "match": "rect",
              "text": "Click on two points in the picture. The first click determines the top-left point of the rectangle, the second click determines the bottom-right point.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "circle",
              "text": "Click on two points in the picture. The first click determines the center point of the circle, the second click determines the radius.",
              "fatal": 0,
              "stop": 0
            },
            {
              "correct": 1,
              "match": "poly",
              "text": "Click on multiple points in the picture. The first click determines the start of the polygonal; the polygonal is closed by clicking on the first point again.",
              "fatal": 0,
              "stop": 0
            }
          ]
        },
        "id": {
          "title": "Identifier",
          "description": "A unique name for this item.",
          "css": {
            "width": "100px"
          }
        },
        "identifier": {
          "alias_of": "id"
        },
        "coords": {
          "title": "coords",
          "description": "These coordinates are automatically generated when you draw the rectangle, the circle, or the polygonal of the hotspot. If you prefer entering them yourself, you can also type in the numbers seperated by kommas.",
          "feedback": [
            {
              "correct": 0,
              "match": "[^0-9,]",
              "text": "Enter only numbers - seperated by komma's - to define the coordinates. Spaces are not allowed!",
              "fatal": 1,
              "stop": 1
            }
          ]
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/hotspot_icon.png"
      },
      "atts_in_title": ["id"]
    },
    "draggable": {
      "content": 1,
      "attributes": {
        "id": {
          "title": "Identifier",
          "description": "A unique name for this item."
        },
        "identifier": {
          "alias_of": "id"
        },
        "class": {
          "title": "class",
          "description": "The CSS class used to style this draggable."
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/draggable_icon.png"
      },
      "atts_in_title": ["id"]
    },
    "default": {
      "alias_of": "startstate"
    },
    "startstate": {
      "content": 0,
      "description": "If the student has not answered the question yet, this 'answer' is used to show the question.",
      "attributes": {
        "value": {
          "title": "value",
          "description": "When you have finished designing a drag and drop  question in the editor, and saved it, all the draggables will appear on top of each other in the top-left corner. Now you can drag them one by one to the desired positions that you want your students to see when they open the question for the first time. Then click the Submit button. When you are a teacher, you now will see a green bar just above the submit button. In this bar you will see someting like this: Current answer=d1,590,11;d2,566.5,228;d3,587,83;d4,567,204; Copy everything after  the '= ' character. Then open the editor again and paste it here in this textbox."
        }
      },
      "valid_children": [],
      "max_children": 0,
      "max_count": 1,
      "icon": {
        "image": "icons/startstate_icon.png"
      }
    },
    "mappings": {
      "content": 0,
      "attributes": {},
      "valid_children": ["mapping"],
      "max_children": -1,
      "is_group": 1,
      "max_count": 1,
      "title": "Feedback",
      "description": "A container for all feedback"
    },
    "mapping": {
      "content": 0,
      "title": "Answer feedback",
      "description": "Give feedback based on one or more conditions, e.g. a certain answer or a combination of answers.",
      "attributes": {
        "correct": {
          "title": "This option is correct",
          "description": "Describes whether this option is correct",
          "values": [
            {
              "title": "No",
              "value": " "
            },
            {
              "title": "Yes",
              "value": "1"
            }
          ]
        },
        "stop": {
          "title": "If this mapping matches",
          "description": "Choose whether to stop or continue processing other answer feedbacks. If 'stop processing' is selected, the user will only get the feedback generated so far. If 'continue processing' is selected the systeem will look if the next answer feedbacks trigger some feedback.",
          "values": [
            {
              "title": "Continue processing",
              "value": " "
            },
            {
              "title": "Stop processing",
              "value": "1"
            }
          ]
        }
      },
      "valid_children": ["and", "or", "not", "match", "range", "feedback", "mathexport"],
      "max_children": -1,
      "auto_children": ["feedback"],
      "icon": {
        "image": "icons/mapping_icon.png"
      },
      "in_group": "mappings",
      "atts_in_title": ["correct", "stop"]
    },
    "and": {
      "description": "Combines conditions to a new condition. All conditions inside the group must be met to trigger the feedback.",
      "content": 0,
      "attributes": {
      },
      "valid_children": ["and", "or", "not", "match", "range"],
      "max_children": -1,
      "icon": {
        "image": "icons/and_icon.png"
      }
    },
    "or": {
      "description": "Combines conditions to a new condition. At least one condition in this group must be met to trigger the feedback.",
      "content": 0,
      "attributes": {
      },
      "valid_children": ["and", "or", "not", "match", "range"],
      "max_children": -1,
      "icon": {
        "image": "icons/or_icon.png"
      }
    },
    "not": {
      "description": "Inverses a condition, e.g. 'trigger  feedback when the answer lies <u>not</u> between 1 and 9'",
      "content": 0,
      "attributes": {
      },
      "valid_children": ["and", "or", "not", "match", "range"],
      "max_children": 1,
      "icon": {
        "image": "icons/not_icon.png"
      }
    },
    "match": {
      "content": 0,
      "title": "Condition: match",
      "description": "Used to define a match to trigger feedback. A match is typically used when the answer contains text.",
      "attributes": {
        "matchall": "string",
        "inlinechoice": "string",
        "inlineoption": "string",
        "pattern": "regexp",
        "hotspot": "regexp",
        "hotspotpattern": {
          "alias_of": "hotspot"
        },
        "draggable": "string",
        "draggablepattern": {
          "alias_of": "draggable"
        }
      },
      "valid_children": [],
      "max_children": 0,
      "icon": {
        "image": "icons/match_icon.png"
      },
      "atts_in_title": ["inlinechoice", "inlineoption", "hotspot", "draggable", "pattern"]
    },
    "combination": {
      "alias_of": "match"
    },
    "range": {
      "content": 0,
      "title": "Condition: range",
      "description": "Used to define a numerical range to trigger feedback. E.g. 'when the answer lies between 1 and 9'",
      "attributes": {
        "matchall": {
          "title": "matchall",
          "description": "If more than one inlinechoice is selected, do all of them have to be in this range or only one?",
          "values": [
            {
              "title": "One is enough",
              "value": " "
            },
            {
              "title": "All must match",
              "value": "1"
            }
          ]
        },
        "inlinechoice": "string",
        "minval": {
          "title": "Minimum value",
          "description": "The minimum value of the answer to fulfill this condition."
        },
        "maxval": {
          "title": "Maximum value",
          "description": "The maximum value of the answer to fulfill this condition."
        },
        "correct": {
          "title": "This option is correct",
          "description": "Describes whether this option is correct",
          "values": [
            {
              "title": "No",
              "value": " "
            },
            {
              "title": "Yes",
              "value": "1"
            }
          ]
        }
      },
      "valid_children": ["minval", "maxval", "feedback"],
      "max_children": -1,
      "icon": {
        "image": "icons/range_icon.png"
      },
      "atts_in_title": ["correct", "inlinechoice", "value", "minval", "maxval"]
    },
    "minval": {
      "content": 1,
      "max_children": 0,
      "max_count": 1
    },
    "maxval": {
      "content": 1,
      "max_children": 0,
      "max_count": 1
    },
    "sequence": {
      "alias_of": "mapping"
    },
    "pattern": {
      "alias_of": "match",
      "content_to_attribute": "pattern"
    },
    "acc": {
      "title": "Accumulation",
      "valid_children": ["option", "correct"],
      "max_count": 1
    },
    "prod": {
      "title": "Production",
      "valid_children": ["option", "correct"],
      "max_count": 1
    },
    "flow": {
      "title": "Transport",
      "valid_children": ["option", "correct"],
      "max_count": 1
    },
    "database": {
      "content": 0,
      "attributes": {
        "server": {
          "title": "Server",
          "description": "The database server to connect to.",
          "mandatory": "localhost"
        },
        "username": "string",
        "password": "string",
        "database": "string"
      },
      "valid_children": ["query"],
      "max_children": -1,
      "atts_in_title": ["server", "database"]
    },
    "query": {
      "content": 0,
      "description": "The query to execute, using % placeholders for arguments: %s for string, %d for decimal, %f for floating point and %% for a % sign.",
      "attributes": {
        "string": {
          "title": "Query",
          "description": "The query to execute."
        }
      },
      "valid_children": ["param"],
      "max_children": -1,
      "atts_in_title": ["string"]
    },
    "param": {
      "content": 0,
      "description": "A query parameter. Each parameter replaces 1 %s, %d or %f in the query, in order of appearance.",
      "attributes": {
        "type": {
          "title": "The type of parameter.",
          "values": [
            {
              "title": "From client",
              "value": "remote",
              "text": "The value of this parameter will be given by the client, in the post variable with the name specified below."
            },
            {
              "title": "User ID",
              "value": "uid",
              "text": "The value of this parameter will be the user id of the user."
            },
            {
              "title": "User Name",
              "value": "uname",
              "text": "The value of this parameter will be the user name of the user."
            }
          ]
        },
        "name": {
          "title": "Name",
          "description": "If type='From Client'; Letters and numers only, starting with a letter.",
          "feedback": [
            {
              "correct": 0,
              "match": "^[^a-zA-Z]+",
              "text": "Starting with a letter!",
              "fatal": 1,
              "stop": 1
            },
            {
              "correct": 1,
              "match": "^[a-zA-Z][a-zA-Z0-9]+$",
              "fatal": 0,
              "stop": 0
            }
          ]
        }
      },
      "max_children": 0,
      "atts_in_title": ["type", "name"]
    }
  }
}
