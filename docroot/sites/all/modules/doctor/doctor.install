<?php
/**
 * @file
 * Install file for the doctor module.
 */

/**
 * Get the schema of the Doctor module.
 */
function _doctor_schema() {
  $schema = array();

  $schema['doctor'] = array(
    'fields' => array(
      'id' => array(
        'description' => 'The entry ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of the doctor entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => 'doctor',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp when the entry was created.',
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'The arbitrary data for the item.',
      ),
      'watched' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Determine if the item has been watched in the CLI.',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['doctor_type'] = array(
    'description' => 'Stores information about all defined {node} types.',
    'fields' => array(
      'type' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'translatable' => TRUE,
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
    ),
    'primary key' => array('type'),
  );

  return $schema;
}

/**
 * Implements hook_schema().
 */
function doctor_schema() {
  $schema = _doctor_schema();

  return $schema;
}

/**
 * Adding a bundle support to the Doctor entity.
 */
function doctor_update_7000() {
  db_add_field('doctor', 'type', array(
    'description' => 'The type of the doctor entity.',
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'default' => 'doctor',
  ));

  $schema = _doctor_schema();
  db_create_table('doctor_type', $schema['doctor_type']);
}

/**
 * Adding a status property to the doctor schema.
 */
function doctor_update_7002() {
  db_add_field('doctor', 'watched', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Determine if the item has been watched in the CLI.',
  ));
}
