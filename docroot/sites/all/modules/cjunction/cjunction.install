<?php

/**
 * @file
 * Install, update and uninstall functions for the cjunction module.
 */

/**
 * Implements hook_install().
 */
function cjunction_install() {
// create CJ vocabulary
  $vocabulary = (object) array(
    'name' => 'CJ',
    'description' => st('A vocabulary for saving queries of Commission Junction'),
    'machine_name' => 'cj',
    'help' => '',
  );
  taxonomy_vocabulary_save($vocabulary);

  // Create all the fields we are adding to our taxonomy items.
  foreach (_cjtaxonomy_installed_fields($vocabulary->machine_name) as $field) {
    $a = field_create_field($field);
  }

  // Create all the instances for our fields.
  foreach (_cjtaxonomy_installed_instances() as $instance) {
    $instance['entity_type'] = 'taxonomy_term';
    $instance['bundle'] = 'cj';
    field_create_instance($instance);
  }


  // Create all the fields we are adding to our content type.
  foreach (_cjproduct_installed_fields($vocabulary->machine_name) as $field) {
    $a = field_create_field($field);
  }

  // Create all the instances for our fields.
  foreach (_cjproduct_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'cjproduct';
    field_create_instance($instance);
  }

}

/**
 * Return a structured array defining the fields created by cjunction taxonomy item.
 */
function _cjtaxonomy_installed_fields($machine_name) {
  $t = get_t();
  return array(
    'cj_taxonomy_advertiser_ids' => array(
      'field_name' => 'cj_taxonomy_advertiser_ids',
      'label'       => st("Advertiser's ids"),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_keywords' => array(
      'field_name' => 'cj_taxonomy_keywords',
      'label'       => st('Keywords'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_serviceable_area' => array(
      'field_name' => 'cj_taxonomy_serviceable_area',
      'label'       => st("Advertiser’s targeted areas"),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_isbn' => array(
      'field_name' => 'cj_taxonomy_isbn',
      'label'       => st('ISBN'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_upc' => array(
      'field_name' => 'cj_taxonomy_upc',
      'label'       => st('UPC'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_manufacturer_name' => array(
      'field_name' => 'cj_taxonomy_manufacturer_name',
      'label'       => st("Manufacturer's name"),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_manufacturer_sku' => array(
      'field_name' => 'cj_taxonomy_manufacturer_sku',
      'label'       => st("Manufacturer's SKU"),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_advertiser_sku' => array(
      'field_name' => 'cj_taxonomy_advertiser_sku',
      'label'       => st('Advertiser SKU'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_low_price' => array(
      'field_name' => 'cj_taxonomy_low_price',
      'label'       => st('Low-price'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_high_price' => array(
      'field_name' => 'cj_taxonomy_high_price',
      'label'       => st('High-price'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_low_sale_price' => array(
      'field_name' => 'cj_taxonomy_low_sale_price',
      'label'       => st('Low-sale-price'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_high_sale_price' => array(
      'field_name' => 'cj_taxonomy_high_sale_price',
      'label'       => st('High-sale-price'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_currency' => array(
      'field_name' => 'cj_taxonomy_currency',
      'label'       => st('Currency'),
      'cardinality' => 1,
      'type'        => 'list_text',
      'settings'    => array(
        'max_length' => 250,
        'allowed_values' => array("USD" => "USD", "EUR" => "EUR", "GBP" => "GBP"),
      ),
    ),
    'cj_taxonomy_sort_by' => array(
      'field_name' => 'cj_taxonomy_sort_by',
      'label'       => st('Sort-by'),
      'cardinality' => 1,
      'type'        => 'list_text',
      'settings'    => array(
        'max_length' => 250,
        'allowed_values' => array("Name" => "Name", "Advertiser ID" => "Advertiser ID", "Advertiser Name" => "Advertiser Name", "Currency" => "Currency", "Price" => "Price", "salePrice" => "salePrice", "Manufacturer" => "Manufacturer", "SKU" => "SKU", "UPC" => "UPC"),
      ),
    ),
    'cj_taxonomy_sort_order' => array(
      'field_name' => 'cj_taxonomy_sort_order',
      'label'       => st('Sort-order'),
      'cardinality' => 1,
      'type'        => 'list_text',
      'settings'    => array(
        'max_length' => 250,
        'allowed_values' => array("asc" => "ascending", "ndec" => "descending"),
      ),
    ),
    'cj_taxonomy_page_number' => array(
      'field_name' => 'cj_taxonomy_page_number',
      'label'       => st('Page number'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),
    'cj_taxonomy_records_per_page' => array(
      'field_name' => 'cj_taxonomy_records_per_page',
      'label'       => st('Records per page'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 250,
      ),
    ),

  );
}

/**
 * Return a structured array defining the instances for cjunction taxonomy item.
 */
function _cjtaxonomy_installed_instances() {
  $t = get_t();
  return array(
    'cj_taxonomy_advertiser_ids' => array(
      'field_name' => 'cj_taxonomy_advertiser_ids',
      'entity_type' => 'taxonomy_term',
      'label' => st("Advertiser's ids"),
      'description' => st('Limits the results to a set of particular advertisers (CIDs) using one of the following four values: CIDs - you may provide list of one or more advertiser CIDs, separated by commas, to limit the results to a specific sub-set of merchants; Empty String - you may provide an empty string to remove any advertiser-specific restrictions on the search; joined - this special value (joined) restricts the search to advertisers with which you have a relationship; notjoined - this special value (not-joined) restricts the search to advertisers with which you do not have a relationship.
'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_keywords' => array(
      'field_name' => 'cj_taxonomy_keywords',
      'entity_type' => 'taxonomy_term',
      'label' => st('Keywords'),
      'description' => st('Example: "kitchen sink" - any product with the word "kitchen" or "sink"; "+kitchen +sink" - any product with the words "kitchen" and "sink"; "+kitchen -sink" - any product with "kitchen" and without "sink"; "kitchen +sink" - all the products with the word "sink" and if they also contain "kitchen", it increases the product’s relevancy.'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_serviceable_area' => array(
      'field_name' => 'cj_taxonomy_serviceable_area',
      'entity_type' => 'taxonomy_term',
      'label' => st("Advertiser’s targeted areas"),
      'description' => st("Limits the results to a specific set of advertisers’ targeted areas."),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_isbn' => array(
      'field_name' => 'cj_taxonomy_isbn',
      'entity_type' => 'taxonomy_term',
      'label' => st('ISBN'),
      'description' => st('Limits the results to a specific product from multiple merchants identified by the appropriate unique identifier; ISBN.'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_upc' => array(
      'field_name' => 'cj_taxonomy_upc',
      'entity_type' => 'taxonomy_term',
      'label' => st('UPC'),
      'description' => st('Limits the results to a specific product from multiple merchants identified by the appropriate unique identifier; UPC.'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_manufacturer_name' => array(
      'field_name' => 'cj_taxonomy_manufacturer_name',
      'entity_type' => 'taxonomy_term',
      'label' => st("Manufacturer's name"),
      'description' => st("Limits the results to a particular manufacturer's name."),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_manufacturer_sku' => array(
      'field_name' => 'cj_taxonomy_manufacturer_sku',
      'entity_type' => 'taxonomy_term',
      'label' => st("Manufacturer's SKU"),
      'description' => st("Limits the results to a particular manufacturer's SKU number."),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_advertiser_sku' => array(
      'field_name' => 'cj_taxonomy_advertiser_sku',
      'entity_type' => 'taxonomy_term',
      'label' => st('Advertiser SKU'),
      'description' => st('Limits the results to a particular advertiser SKU.'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_low_price' => array(
      'field_name' => 'cj_taxonomy_low_price',
      'entity_type' => 'taxonomy_term',
      'label' => st('Low-price'),
      'description' => st('Limits the results to products with a price greater than or equal to the low-price.'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_high_price' => array(
      'field_name' => 'cj_taxonomy_high_price',
      'entity_type' => 'taxonomy_term',
      'label' => st('High-price'),
      'description' => st('Limits the results to products with a price less than or equal to the high-price.'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_low_sale_price' => array(
      'field_name' => 'cj_taxonomy_low_sale_price',
      'entity_type' => 'taxonomy_term',
      'label' => st('Low-sale-price'),
      'description' => st('Limits the results to products with a price greater than or equal to the Advertiser offered low-sale-price.'),
      'bundle' => 'cj',
      'widget' => array(
        'type' => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_high_sale_price' => array(
      'field_name' => 'cj_taxonomy_high_sale_price',
      'entity_type' => 'taxonomy_term',
      'label' => st('High-sale-price'),
      'description' => st('Limits the results to products with a price less than or equal to the Advertiser offered high-sale-price.'),
      'bundle' => 'cj',
      'widget' => array(
        'type' => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_currency' => array(
      'field_name' => 'cj_taxonomy_currency',
      'entity_type' => 'taxonomy_term',
      'label' => st('Currency'),
      'description' => st('Limits the results to one of the following currencies.'),
      'bundle' => 'cj',
      'widget' => array(
        'type' => 'list_text',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_sort_by' => array(
      'field_name' => 'cj_taxonomy_sort_by',
      'entity_type' => 'taxonomy_term',
      'label' => st('Sort-by'),
      'description' => st('Sort the results in the response by one of the following values.'),
      'bundle' => 'cj',
			'widget' => array(
        'type' => 'list_text',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_sort_order' => array(
      'field_name' => 'cj_taxonomy_sort_order',
      'entity_type' => 'taxonomy_term',
      'label' => st('Sort-order'),
      'description' => st('Specifies the order in which the results are sorted; the following case-insensitive values are acceptable.'),
      'bundle' => 'cj',
      'widget' => array(
        'type' => 'list_text',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_page_number' => array(
      'field_name' => 'cj_taxonomy_page_number',
      'entity_type' => 'taxonomy_term',
      'label' => st('Page number'),
      'description' => st('Specifies the first record to return in the request. The first record is 0. Leaving this parameter blank assigns a default value of 0. Please refer to the notes below the table for more information.'),
      'bundle' => 'cj',
      'widget' => array(
        'type' => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),
    'cj_taxonomy_records_per_page' => array(
      'field_name' => 'cj_taxonomy_records_per_page',
      'entity_type' => 'taxonomy_term',
      'label' => st('Records per page'),
      'description' => st('Specifies the number of records to return in the request. Leaving this parameter blank assigns a default value of 50.'),
      'bundle' => 'cj',
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
					'weight' => 2,
        ),
      ),
    ),

  );
}


/**
 * Return a structured array defining the fields created by cjunction content type.
 */
function _cjproduct_installed_fields($machine_name) {
  $t = get_t();
  return array(
    'cj_ad_id' => array( // The associated ad identification number.
      'field_name' => 'cj_ad_id',
      'label'       => st('Ad id'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 160,
      ),
    ),
    'cj_advertiser_id' => array( // The advertiser’s CID.
      'field_name' => 'cj_advertiser_id',
      'label'       => st('Advertiser id'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 160,
      ),
    ),
    'cj_advertiser_name' => array( // The advertiser’s name.
      'field_name' => 'cj_advertiser_name',
      'label'       => st('Advertiser name'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 260,
      ),
    ),
    'cj_buy_url' => array( // The URL on the advertiser's Web site where you may purchase the product.
      'field_name' => 'cj_buy_url',
      'label'       => st('Buy URL'),
      'cardinality' => 1,
      'type'        => 'cjunction_buy_url',
      'settings'    => array(
        'max_length' => 500,
      ),
    ),
    'cj_catalog_id' => array( // The identification number for the associated Commission Junction product catalog.
      'field_name' => 'cj_catalog_id',
      'label'       => st('Catalog ID'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 160,
      ),
    ),
    'cj_currency' => array( // The 3-letter currency code associated with the product.
      'field_name' => 'cj_currency',
      'label'       => st('Currency'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 160,
      ),
    ),
    'cj_description' => array( // A description of the product.
      'field_name' => 'cj_description',
      'label'       => st('Description'),
      'cardinality' => 1,
      'type'        => 'text_long',
    ),
    'cj_image_url' => array( // A direct link to an image of the product.
      'field_name' => 'cj_image_url',
      'label'       => st('Image URL'),
      'cardinality' => 1,
      'type'        => 'cjunction_image_url',
      'settings'    => array(
        'max_length' => 260,
      ),
    ),
    'cj_image' => array(
      'field_name' => 'cj_image',
      'label'       => st('Image'),
      'cardinality' => 1,
      'type'        => 'image',
      'settings'    => array(
        'max_length' => 160,
      ),
    ),
    'cj_in_stock' => array( // Displays whether the product is currently in stock.
      'field_name' => 'cj_in_stock',
      'label'       => st('In stock'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 60,
      ),
    ),
    'cj_isbn' => array( // Unique identifier (ISBN) for a product or products that would identify the same product from multiple merchants.
      'field_name' => 'cj_isbn',
      'label'       => st('ISBN'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 100,
      ),
    ),
    'cj_manufacturer_name' => array( // The name of the manufacturer of the associated product.
      'field_name' => 'cj_manufacturer_name',
      'label'       => st('Manufacturer name'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 260,
      ),
    ),
    'cj_manufacturer_sku' => array( // The manufacturer sku number for the associated product.
      'field_name' => 'cj_manufacturer_sku',
      'label'       => st('Manufacturer SKU'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 160,
      ),
    ),
    'cj_name' => array( // The name of the product.
      'field_name' => 'cj_name',
      'label'       => st('Name'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 260,
      ),
    ),
    'cj_price' => array( // The actual price of the associated product.
      'field_name' => 'cj_price',
      'label'       => st('Price'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 60,
      ),
    ),
    'cj_retail_price' => array( // The suggested retail price of the product.
      'field_name' => 'cj_retail_price',
      'label'       => st('Retail price'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 60,
      ),
    ),
    'cj_sale_price' => array( // The advertiser offered sale price of the product.
      'field_name' => 'cj_sale_price',
      'label'       => st('Sale price'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 260,
      ),
    ),
    'cj_sku' => array( // The associated product’s SKU number.
      'field_name' => 'cj_sku',
      'label'       => st('SKU'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 160,
      ),
    ),
    'cj_upc' => array( // Unique identifier (UPC) for a product or products that identifies the same product from multiple merchants.
      'field_name' => 'cj_upc',
      'label'       => st('UPC'),
      'cardinality' => 1,
      'type'        => 'text',
      'settings'    => array(
        'max_length' => 60,
      ),
    ),
    'cj_query' => array( // to connect a query
      'field_name'  => 'cj_query',
      'type'        => 'taxonomy_term_reference',
      'cardinality' => 1,
      'settings'    => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $machine_name,
            'parent' => 0,
          ),
        ),
      ),
    ),

  );
}

/**
 * Return a structured array defining the instances for cjunction content type.
 */
function _cjproduct_installed_instances() {
  $t = get_t();
  return array(
    'cj_ad_id' => array(
      'field_name' => 'cj_ad_id',
      'label'       => st('Ad ID'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_advertiser_id' => array(
      'field_name' => 'cj_advertiser_id',
      'label'       => st('Advertiser ID'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_advertiser_name' => array(
      'field_name' => 'cj_advertiser_name',
      'label'       => st('Advertiser name'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_buy_url' => array(
      'field_name' => 'cj_buy_url',
      'label'       => st('Buy URL'),
      'widget'      => array(
        'type'    => 'cjunction_buy_url_field',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'cjunction_buy_url_default',
        ),
      ),
    ),
    'cj_catalog_id' => array(
      'field_name' => 'cj_catalog_id',
      'label'       => st('Catalog ID'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_currency' => array(
      'field_name' => 'cj_currency',
      'label'       => st('Currency'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_image_url' => array(
      'field_name' => 'cj_image_url',
      'label'       => st('Image URL'),
      'widget'      => array(
        'type'    => 'cjunction_image_url_field',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'cjunction_image_url_default',
        ),
      ),
    ),
    'cj_image' => array(
      'field_name' => 'cj_image',
      'label'       => st('Image'),
      'widget'      => array(
        'type'    => 'image_image',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_description' => array(
      'field_name' => 'cj_description',
      'label'       => st('Description'),
      'widget'      => array(
        'type'    => 'text_textarea',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text',
        ),
      ),
    ),
    'cj_in_stock' => array(
      'field_name' => 'cj_in_stock',
      'label'       => st('In stock'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_isbn' => array(
      'field_name' => 'cj_isbn',
      'label'       => st('ISNB'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_manufacturer_name' => array(
      'field_name' => 'cj_manufacturer_name',
      'label'       => st('Manufacturer name'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_manufacturer_sku' => array(
      'field_name' => 'cj_manufacturer_sku',
      'label'       => st('Manufacturer SKU'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_name' => array(
      'field_name' => 'cj_name',
      'label'       => st('Name'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_price' => array(
      'field_name' => 'cj_price',
      'label'       => st('Price'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_retail_price' => array(
      'field_name' => 'cj_retail_price',
      'label'       => st('Retail price'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_sale_price' => array(
      'field_name' => 'cj_sale_price',
      'label'       => st('Sale price'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_sku' => array(
      'field_name' => 'cj_sku',
      'label'       => st('SKU'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_upc' => array(
      'field_name' => 'cj_upc',
      'label'       => st('UPC'),
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
        ),
      ),
    ),
    'cj_query' => array(
			'field_name' => 'cj_query',
			'label' => 'CJ query',
			'widget' => array(
			  'type' => 'taxonomy_autocomplete',
			  'weight' => 4,
			),
			'display' => array(
			  'default' => array(
			    'type' => 'taxonomy_term_reference_link',
			    'weight' => 10,
			    'label' => 'hidden',
			    'type' => 'hidden',
			  ),
			),
    ),
  );
}


/**
 * Implements hook_uninstall().
 */
function cjunction_uninstall() {

  $voc = taxonomy_vocabulary_get_names();

  // Gather all the cjunction content that might have been created while this
  // module was enabled.
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'cjproduct'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  node_delete_multiple($nids);

  foreach (array_keys(_cjproduct_installed_fields($voc['cj']->vid)) as $field) {
    field_delete_field($field);
  }

  $instances = field_info_instances('node', 'cjproduct');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // http://drupal.org/node/951566
/*  $instances = field_info_instances('comment', 'comment_node_cjproduct');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }*/

  // Delete our content type
  node_type_delete('cjproduct');


  // Remove all terms
  $terms = taxonomy_get_children($tid = 0, $voc['cj']->vid);
  foreach ($terms as $term) {
    taxonomy_del_term($term->tid);
  }

  foreach (array_keys(_cjtaxonomy_installed_fields($voc['cj']->vid)) as $field) {
    field_delete_field($field);
  }

  // Delete taxonomy fields and values
  $instances = field_info_instances('taxonomy_term', 'cj');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  taxonomy_vocabulary_delete($voc['cj']->vid);

  // Purge all field infromation
  field_purge_batch(1000);

  variable_del('cjunction_website_id');
  variable_del('cjunction_developer_key');
  variable_del('cjunction_advertiser_id');
  variable_del('cjunction_refresh_schedule');
}

/**
* Implementation of hook_update_N()
*/
/*function cjunction_update_7000() {

  $updated_fields = array(
    'cj_buy_url' => array( // The URL on the advertiser's Web site where you may purchase the product.
      'field_name' => 'cj_buy_url',
      'type'        => 'cjunction_buy_url',
    ),
    'cj_image_url' => array( // A direct link to an image of the product.
      'field_name' => 'cj_image_url',
      'type'        => 'cjunction_image_url',
    ),
  );

  foreach ($updated_fields as $field) {
    $a = field_update_field($field);
  }

  $updated_fields_instances = array(
    'cj_buy_url' => array(
      'field_name' => 'cj_buy_url',
      'label'       => st('Buy URL'),
      'widget'      => array(
        'type'    => 'cjunction_buy_url_field',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'cjunction_buy_url_default',
        ),
      ),
    ),
    'cj_image_url' => array(
      'field_name' => 'cj_image_url',
      'label'       => st('Image URL'),
      'widget'      => array(
        'type'    => 'cjunction_image_url_field',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'cjunction_image_url_default',
        ),
      ),
    ),
  );

  foreach ($updated_fields_instances as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'cjproduct';
    field_update_instance($instance);
  }


  return t('The update is completed');

  throw new DrupalUpdateException('Something went wrong.');
}*/

