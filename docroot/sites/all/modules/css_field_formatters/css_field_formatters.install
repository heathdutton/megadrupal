<?php

/**
 *
 * Migrate old css field formatter settings to new format
 */
function css_field_formatters_update_7001(&$sandbox) {

  // Get a list of all field instances.
  $field_info = field_info_field_map();
  $fields = array();
  $indent = '  ';

  foreach ($field_info as $field_name => $field) {
    foreach ($field['bundles'] as $entity_type => $bundles) {
      foreach ($bundles as $bundle) {
        $fields[] = array(
          'field_name' => $field_name,
          'entity_type' => $entity_type,
          'bundle' => $bundle,
        );
      }
    }
  }

  // Initialize the batch process.
  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['current_field'] = 0;
    $sandbox['max'] = count($fields);
  }

  // Get the field settings of current field.
  $field = $fields[$sandbox['current_field']];

  // Get the field instance.
  $instance = db_select('field_config_instance', 'fci')
    ->fields('fci', array('data'))
    ->condition('field_name', $field['field_name'])
    ->condition('entity_type', $field['entity_type'])
    ->condition('bundle', $field['bundle'])
    ->execute()
    ->fetchField();

  $instance = unserialize($instance);
  $modified = FALSE;

  // Modify the settings.
  foreach ($instance['display'] as &$display) {
    $settings = &$display['settings'];

    // Avoid changing field settings of other modules.
    if ($display['module'] !== 'css_field_formatters') {
      continue;
    }

    // Allow updating only for old field settings.
    if (!(isset($settings['css_selector'])
      && isset($settings['media_query'])
      && isset($settings['important']))) {
      continue;
    }

    if (isset($settings['property'])) {

      // Update settings for fields with css_property_formatter.
      $css = array();
      $css[] = '@media ' . $settings['media_query'] . ' {';
      $css[] = $indent . $settings['css_selector'] . ' {';
      $css[] = $indent . $indent . $settings['property'] . ': ' . $settings['prefix'] . '[field-value:value]' . $settings['suffix'] . ';';
      $css[] = $indent . '}';
      $css[] = '}';
      $settings['css'] = implode("\n", $css);

      unset($settings['css_selector']);
      unset($settings['media_query']);
      unset($settings['property']);
      unset($settings['prefix']);
      unset($settings['suffix']);
      unset($settings['important']);

      $modified = TRUE;

    } elseif (isset($settings['styles']) && isset($settings['css_selector'])) {

      // Update settings for fields with css_style_switch_formatter.
      $css = array();
      $css[] = '@media only screen and (min-width: 0) {';
      $css[] = $indent . '.selector {';
      $css[] = $indent . $indent . 'color: [field-value:value];';
      $css[] = $indent . '}';
      $css[] = '}';
      $settings['default_css'] = implode("\n", $css);

      foreach($settings['styles'] as $style => $style_css) {
        $css = array();
        $css[] = '@media ' . $settings['media_query'] . ' {';
        $css[] = $indent . $settings['css_selector'] . ' {';
        $css[] = $indent . $indent . $style_css;
        $css[] = $indent . '}';
        $css[] = '}';
        $settings['styles'][$style] = array(
          'css' => implode("\n", $css)
        );
      }

      unset($settings['css_selector']);
      unset($settings['media_query']);
      unset($settings['important']);

      $modified = TRUE;
    }
  }

  // Update field settings.
  if ($modified) {

    if (function_exists("drush_log")) {
      drush_log("Updated " . $field['field_name']);
    }

    $instance = serialize($instance);

    // Finally we update the current field instance.//
    db_update('field_config_instance')//
      ->fields(array('data' => $instance))//
      ->condition('field_name', $field['field_name'])//
      ->condition('entity_type', $field['entity_type'])//
      ->condition('bundle', $field['bundle'])//
      ->execute();
  }

  // Prepeare the values for the next step.
  $sandbox['progress']++;
  $sandbox['current_field']++;

  // Update process is finished when all settings have been ran.
  $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];

  // Clear caches if all fields are processed.
  if (intval($sandbox['#finished'])) {
    if (function_exists("drush_log")) {
      drush_log("Finished updating all the field instance settings.");
    }
    field_cache_clear();
  }
};