<?php

/**
 * @file
 * This module takes block headers, separates out the uppercase and lowercase
 * text, and formats them separately, according to user settings.
 */

/**
 * Implements hook_menu().
 */
function format_headers_menu() {
  $items = array();

  $items['admin/config/content/headers'] = array(
    'title' => 'Format Headers',
    'description' => 'Separately format uppercase and lowercase text in headers',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('format_headers_form'),
    'access arguments' => array('format headers'),
  );

  return $items;
}

/**
 * The form for editing header format settings.
 *
 * @param array $form_state
 *   A keyed array containing the current state of the form.
 *
 * @ingroup forms
 */
function format_headers_form($form, &$form_state) {
  $form = array();

  $form['global'] = array(
    '#type'         => 'fieldset',
    '#title'        => t('Global Settings'),
    '#description'  => t('These settings will apply to all the headers you select.  See below to select header types.'),
  );
  $form['global']['format_headers_uppercase'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Uppercase'),
    '#default_value' => format_headers_check_settings('uppercase'),
    '#description'   => t('Formatting for uppercase letters.  You can use standard CSS code.'),
  );
  $form['global']['format_headers_lowercase'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Lowercase'),
    '#default_value' => format_headers_check_settings('lowercase'),
    '#description'   => t('Formatting for lowercase letters.  You can use standard CSS code.'),
  );
  $form['selectors'] = array(
    '#type'         => 'fieldset',
    '#title'        => t('Headers:'),
    '#description'  => t('Select headers to modify.  If you leave the box unchecked, the headers will be formatted by the theme as usual.'),
  );
  $form['selectors']['format_headers_blocks'] = array(
    '#type' => 'checkbox',
    '#title' => t('Blocks'),
    '#default_value' => format_headers_check_settings('blocks'),
    '#tree' => FALSE,
    '#description' => t('Standard block titles, part of Drupal core.'),
  );
  $form['selectors']['format_headers_panels'] = array(
    '#type' => 'checkbox',
    '#title' => t('Panels'),
    '#default_value' => format_headers_check_settings('panels'),
    '#tree' => FALSE,
    '#description' => t('Panel pane titles, part of the <a href="http://drupal.org/project/panels">Panels module</a>.'),
  );

  $form['submit'] = array('#type' => 'submit', '#value' => t('Submit'));

  return $form;
}

/**
 * Stores the settings for the form.
 *
 * @param array $form_state
 *   A keyed array containing the current state of the form.
 *
 * @ingroup forms
 */
function format_headers_form_submit($form, &$form_state) {
  $query = db_update('format_headers')
      ->fields(array(
          'uppercase' => $form_state['values']['format_headers_uppercase'],
          'lowercase' => $form_state['values']['format_headers_lowercase'],
          'blocks' => $form_state['values']['format_headers_blocks'],
          'panels' => $form_state['values']['format_headers_panels'],
      ))
      ->execute();
  drupal_set_message(t('Your configuration has been saved.'));
}

/**
 * Implements hook_permission().
 */
function format_headers_permission() {
  return array(
    'format headers' => array(
      'title' => t('Format headers'),
      'description' => t(''),
    ),
  );
}

/**
 * Implements preprocess_block.
 *
 * Function to process block headers
 *
 * @param array $variables
 *   Grabs all the theme variables and then pulls out the block title
 */
function format_headers_preprocess_block(&$variables) {
  if (format_headers_check_settings('blocks')) {
    $result = format_headers_regex($variables['block']->subject);
    $variables['block']->subject = $result;
  }
}

/**
 * Implements preprocess_panels pane.
 *
 * Function to process panel headers.  Same as above, but this time for
 * panel panes.  Actual processing is outsourced to format_headers_regex.
 *
 * @param array $variables
 *   Grabs all the theme variables and then pulls out the block title
 */
function format_headers_preprocess_panels_pane(&$variables) {
  if (format_headers_check_settings('panels')) {
    $result = format_headers_regex($variables['title']);
    $variables['title'] = $result;
  }
}

/**
 * Actual regex processing happens here.
 *
 * @param string $string
 *   This is the header to be modified; comes from block or pane title.
 */
function format_headers_regex($string) {
  $words = preg_split('/([A-Z]+)([^A-Z]+)/', $string, -1, PREG_SPLIT_DELIM_CAPTURE);
  $newtitle = array();
  foreach ($words as $w) {
    if (strtolower($w) === $w) {
      $newtitle[] = '<span style="' . format_headers_check_settings('lowercase') . '">' . $w . '</span>';
    }
    else {
      $newtitle[] = '<span style="' . format_headers_check_settings('uppercase') . '">' . $w . '</span>';
    }
  }
  $result = implode("", $newtitle);
  return $result;
}

/**
 * Retrieve settings for this module.
 */
function format_headers_check_settings($var) {
  $query = db_query("SELECT * FROM {format_headers}", array());
  $result = $query->fetchAssoc();
  $return = $result[$var];
  return $return;
}
