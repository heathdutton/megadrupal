<?php
// YML Export module
// created by: Anton Sidashin ( http://russianwebstudio.com ) for audioproshop.ru

function yml_export_menu() {
  $items = array();
  $items['yml_products.xml'] = array(
    'title' => t('YML export'),
    'page callback' => 'yml_export_get_xml',    
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'), 
  );
  $items['admin/config/yml_export'] = array(
    'title' => 'Yml export for Yandex.market',   
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yml_export_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function yml_export_admin_settings() {
  $form = array();
  
    
  
  $ctypes = uc_product_types();
  $ctype_first = $ctypes[0]; // we use first ctype to get available fields for now..
  $ctypes = array_combine($ctypes, $ctypes);
  
  $form['yml_export_types'] = array(
    '#required' => TRUE,
    '#type' => 'checkboxes',
    '#options' => $ctypes,
    '#default_value' => variable_get('yml_export_types', array('product' => 'product')),
    '#title' => t('Select node types for export'),
  );
  $instances = field_info_instances('node');
  
  $instance = $instances[$ctype_first];
  
  $term_fields = array();
  $descr_fields = array();
  
  foreach ($instance as $field_name => $field) {
    $info = field_info_field($field_name);
    if ($info['type'] == 'taxonomy_term_reference') {
      $term_fields[] = $field_name;
    }
    
    if ($info['module'] == 'text') {
      $descr_fields[] = $field_name;
    } 
  }
  
  if (count($term_fields) == 0) {
    drupal_set_message(t("No term fields attached to product node! Export can't work properly. Please create at least one taxonomy vocabulary and use it for your products."), 'warning');
  } else {  
    $term_fields = array_combine($term_fields, $term_fields);
  }
  
  if (count($descr_fields) == 0) {
    drupal_set_message(t("No text fields attached to product node! Export can't work properly. Please create at least one text field and use it for your products."), 'warning');
  } else {  
    $descr_fields = array_combine($descr_fields, $descr_fields);
  }
  
  
  
  $form['yml_export_term_field'] = array(
    '#required' => TRUE,
    '#type' => 'select',
    '#empty_value' => '',
    '#options' => $term_fields,
    '#default_value' => variable_get('yml_export_term_field', ''),
    '#description' => t('Select product term field where primary product categories are stored'),
    '#title' => t('Category field'),
  );
  
  $form['yml_export_descr_field'] = array(
    '#required' => TRUE,
    '#type' => 'select',
    '#empty_value' => '', 
    '#options' => $descr_fields,
    '#default_value' => variable_get('yml_export_descr_field', ''),
    '#description' => t('Select text field which will be used as product description'),
    '#title' => t('Description field'),
  );
  
  
  
  
  $form['yml_export_delivery'] = array(
    '#type' => 'select',
    '#options' => array('true' => t("true"), 'false' => t("false")),
    '#title' => t('Select if delivery is enabled'),    
    '#default_value' => variable_get('yml_export_delivery', 'true'),
    '#description' => t('Yandex.Market has "delivery" field. Select if it is enabled'),
  );
  
  $form['yml_export_currency'] = array(
    '#type' => 'item',   
    '#title' => t('Ubercart currency'),    
    '#markup' => variable_get('uc_currency_code', 'USD') . ' (' . l(t("Change"), 'admin/store/settings/store/edit/format') . ')',
    '#description' => t("Should be 'RUR' for Russia"),
  );
  
  $form['yml_export_image_field'] = array(
    '#type' => 'item',   
    '#title' => t('Ubercart image field'),    
    '#markup' => variable_get('uc_image_' . $ctype_first, 'uc_product_image') . ' (' . l(t("Change"), 'admin/structure/types/manage/' . $ctype_first . '/edit') . ')',
    '#description' => t("This field will be used for images in export."),
  );
  
  $url = url('yml_products.xml', array('absolute' => TRUE));
  $form['generated_url'] = array(
    '#type' => 'item',  
    '#title' => t("Generated file"),
    '#markup' => $url . ' (' . l(t("View"), $url) . ')',
    '#description' => t("Use this url in Yandex.Market"),
  );
  
  $form['yml_export_image_field'] = array(
    '#type' => 'value',
    '#value' => variable_get('uc_image_' . $ctype_first, 'uc_product_image')
  );
  
  $form['#submit'][] = 'yml_export_admin_settings_submit';
  
  return system_settings_form($form); 
}

function yml_export_admin_settings_submit($form, $form_state) {
  $term_field = $form_state['values']['yml_export_term_field'];
  $term_field  = field_info_field($term_field);
  
  $vocab = taxonomy_vocabulary_machine_name_load($term_field['settings']['allowed_values'][0]['vocabulary']);
  variable_set('yml_export_vid', $vocab->vid);
  
 
}

function yml_export_get_xml() {
  if (variable_get('yml_export_vid', '') == '') {
    die('Please select primary vocabulary on YML export settings page!');
  }
  
  $ctypes = variable_get('yml_export_types', array('product' => 'product'));
  $enabled_ctypes = array();
  foreach ($ctypes as $type_name => $enabled) {
    if ($enabled) {
      $enabled_ctypes[$type_name] = $type_name;
    }
  }
  
  if (empty($enabled_ctypes)) {
    die('Please select at least one node type on YML export settings page!');
  }  
  
  $node_types = variable_get('yml_export_types', array('product' => 'product'));
  $nids = db_query("SELECT nid FROM {node} WHERE type IN (:node_types) AND status=:status", array(':node_types' => $node_types, ':status' => 1))->fetchCol();
  
  
  $nodes = node_load_multiple($nids);
  
  
  /*
  $context = array(
    'revision' => 'altered',
    'type' => 'product',
    'class' => array('product'),
  ); 
  
  $nodes = array();
  while ($nid = db_fetch_object($r)) {
    $product = node_load($nid -> nid);
    
    if (function_exists('uc_price')) {
      $context['subject']['node'] = $product;
      $context['subject']['field'] = 'list_price';
      $product -> list_price = uc_price($product -> list_price, $context);
      
      $context['subject']['field'] = 'sell_price';
      $product -> sell_price = uc_price($product -> sell_price, $context);
    }
  
    $nodes[] = $product; 
  }*/
  
  $categories = db_query("SELECT d.tid, d.name, h.* FROM {taxonomy_term_data} d LEFT JOIN {taxonomy_term_hierarchy} h USING(tid) WHERE d.vid=:vid", array(':vid' => variable_get('yml_export_vid', '')))->fetchAllAssoc('tid');
  
  header('Content-type: application/xhtml+xml; charset=utf-8');
  echo theme('yml_products', array(
    'nodes' => $nodes, 
    'categories' => $categories
  ));
  exit();
}

function yml_export_theme() {
  return array(    
    'yml_products' => array(
      'variables' => array('nodes' => NULL, 'categories' => NULL),
      'template' => 'yml_products',
    ));
}

// prepare all strings so they are valid for Yandex.Market format
function yml_safe($str) {
  $rep = array(
    '"' => '&quot;',
    '&' => '&amp;',
    '>' => '&gt;',
    '<' => '&lt;',
    "'" => '&apos;'
  );
  
  return strtr($str, $rep);
}

// shortcut for usage in html templates
function ys($str) {
  return yml_safe($str);
}
