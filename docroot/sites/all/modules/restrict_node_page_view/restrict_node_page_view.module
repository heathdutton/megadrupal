<?php
/**
 * implementation hook_node_access()
 * Limit access to node pages bases on nodetype
 * @param unknown_type $node
 * @param unknown_type $op
 * @param unknown_type $account
 */
function restrict_node_page_view_node_access($node, $op, $account) { 
  if (! is_object($node)) {
    return NODE_ACCESS_IGNORE;
  }
  
  $type = is_string($node) ? $node : $node->type;

  if($op == 'view' && arg(0) == 'node' && arg(1) === $node->nid) {
    // Deny access if the user does not have the proper permissions.
    if (!user_access('view any node page', $account) && !user_access('view any node ' . $type . ' page', $account)) {
      return NODE_ACCESS_DENY;
    }
  }

  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}


/**
 * implementation hook_permission()
 */
function restrict_node_page_view_permission() {
  $nodetypes = node_type_get_types();

  $permissions['view any node page'] = array(
    'title' => t('View any node page'), 
    'description' => t('Be able to access any node page.'),
  );

  foreach($nodetypes as $type =>  $object) {
    $permissions['view any node '.$type.' page'] = array(
      'title' => t('View full node !nodetype page', array('!nodetype' => $object->name)), 
      'description' => t('Be able to access !nodetype node page', array('!nodetype' => $object->name)),
    );
  }

  return $permissions;
}
