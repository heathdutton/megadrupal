<?php
/**
 * @file
 * Provide configuration and theme options for view effects.
 */

/**
 * Implements hook_views_api().
 */
function views_list_effect_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'views_list_effect') . '/views',
  );
}

/**
 * Implements hook_permission().
 */
function views_list_effect_permission() {
  return array(
    'administer views_list_effect' => array(
      'title' => t('Administer views list effect configuration'),
      'description' => t('Set configuration options for views list effect'),
    ),
  );
}

/**
 * Implements hook_theme().
 *
 * Defines the theming capabilities provided by this module.
 *
 * A default 'instance' of NULL means an optionset should apply to all instances
 * on the page, unless restricted to one or more.
 */
function views_list_effect_theme($existing, $type, $theme, $path) {
  return array(
    'views_list_effect' => array(
      'variables' => array(
        'items' => array(),
        'mode' => NULL,
        'delay' => NULL,
        'duration' => NULL,
        'random' => NULL,
        'waypoints' => NULL,
      ),
    ),
  );
}

/**
 * Default theme implementation for view effects.
 *
 * @param array $vars
 *   Variables for theming.
 *
 * @return string
 *   Markup.
 */
function theme_views_list_effect(array $vars) {
  // Make sure the instance name is unique per page load.
  $global_instances = &drupal_static(__FUNCTION__);
  $global_instances = isset($global_instances) ? $global_instances : array();
  for ($i = 0; $i >= 0; $i++) {
    if (!array_key_exists('views-list-effect-instance-' . $i, $global_instances)) {
      $instance_id = $i;
      // Break the infinite loop when successful.
      break;
    }
  }

  if (!empty($vars['waypoints']) && module_exists('waypoints')) {
    drupal_add_library('waypoints', 'waypoints');
  }

  $module_path = drupal_get_path('module', 'views_list_effect');
  ob_start();
  $vars['instance'] = $instance_id;
  require $module_path . '/css/' . $vars['mode'] . '.css.php';
  $views_list_effects_css = ob_get_contents();
  ob_end_clean();
  drupal_add_css($views_list_effects_css, array('type' => 'inline', 'preprocess' => FALSE));

  $settings = array(
    'delay' => $vars['delay'],
    'random' => $vars['random'],
  );
  $global_instances['views-list-effect-instance-' . $instance_id] = $settings;
  drupal_add_js(array('views_list_effect' => $global_instances), 'setting');
  drupal_add_js(drupal_get_path('module', 'views_list_effect') . '/js/views_list_effect.js');

  $return = array(
    '#theme' => 'item_list',
    '#items' => $vars['items'],
    '#type' => 'ul',
    '#attributes' => array(
      'data-views-list-effect' => $vars['mode'],
      'id' => 'views-list-effect-instance-' . $instance_id,
    ),
  );
  return drupal_render($return);
}
