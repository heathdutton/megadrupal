<?php

/**
 * Implements hook_schema().
 */
function relify_schema() {
  $schema = array();

  $schema['relify_data_set'] = array(
    'description' => 'Stores information about your application data sets.',
    'fields' => array(
      'data_set_id' => array(
        'description' => 'The machine-readable ID of the data set defined by Relify.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The human-readable name of this data set.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'client_id' => array(
        'description' => 'The machine-readable client ID of the application to which this data set belongs.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('data_set_id'),
  );

  $schema['relify_data_set_key'] = array(
    'description' => 'Stores information about the keys defined for your data sets.',
    'fields' => array(
      'data_set_id' => array(
        'description' => 'The machine-readable ID of the data set defined by Relify.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The human-readable name of this key.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'The data type (number or string) of the values stored with this key.',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('data_set_id', 'name'),
    'foreign keys' => array(
      'data_set' => array(
        'table' => 'relify_data_set',
        'columns'=> array('data_set_id' => 'data_set_id'),
      ),
    ),
  );

  $schema['relify_recommender'] = array(
    'description' => 'Stores information about your recommenders.',
    'fields' => array(
      'recommender_id' => array(
        'description' => 'The machine-readable recommender ID defined by Relify.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'data_set_id' => array(
        'description' => 'The machine-readable ID of the data set on which the recommender is used.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The human-readable name of this recommender.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'user_identifier' => array(
        'description' => 'The name of the key on the data set that identifies a user to the recommender.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'user_keys' => array(
        'description' => 'A comma-separated list of keys on the data set that describe the user.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
      ),
      'item_identifier' => array(
        'description' => 'The name of the key on the data set that identifies an item to the recommender.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'item_keys' => array(
        'description' => 'A comma-separated list of keys on the data set that describe the item.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
      ),
    ),
    'primary key' => array('recommender_id'),
    'indexes' => array(
      'data_set_id' => array('data_set_id'),
    ),
    'foreign keys' => array(
      'data_set' => array(
        'table' => 'relify_data_set',
        'columns'=> array('data_set_id' => 'data_set_id'),
      ),
    ),
  );

  return $schema;
}
