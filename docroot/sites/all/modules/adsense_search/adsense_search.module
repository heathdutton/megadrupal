<?php

/**
 * Implements hook_ad_manager_providers().
 */
function adsense_search_ad_manager_providers() {
  return array(
    'version' => 1,
    'provides' => array(
      // The key acts as the callback function for the configuration form, and
      // as the theme output name.
      // Do not wrap the value in t() as it is cached and will be wrapped with
      // t() on output.
      'adsense_search_ads' => 'AdSense Custom Search Ads',
    ),
  );
}

/**
 * Form element validate callback wrapper.
 *
 * Required to place in .module for global scope to avoid issue with AJAX calls.
 */
function adsense_search_ad_regex_validate($element, &$form_state, $form) {
  ctools_include('adsense_search.admin', 'adsense_search', FALSE);
  _adsense_search_ad_regex_validate($element, $form_state, $form);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter settings form to provide needed configuration.
 */
function adsense_search_form_ad_manager_settings_form_alter(&$form, &$form_state) {
  // Load in logic that is needed for the settings form.
  require_once drupal_get_path('module', 'adsense_search') . '/adsense_search.admin.inc';

  // Call the form function, used to keep the .module light weight.
  adsense_search_ads_settings_form($form, $form_state);
}

/**
 * Handle caching of ad registrations on the page until hook_page_alter().
 *
 * @param string|NULL $name
 *   The machine name of the ad.
 * @param array|NULL $settings
 *   The stored settings of the ad.
 *
 * @return array|NULL
 *   Returns array of settings, or null if no settings have been registered.
 */
function adsense_search_ad_register($name = NULL, $settings = NULL, $index = NULL) {
  $ads = &drupal_static(__FUNCTION__);

  // If $name is set and less than three ads have been registered.
  if (!is_null($name) && count($ads) < 3) {
    if (!is_array($settings)) {
      $settings = array();
    }
    // Attach the container ID to the settings.
    $settings['container'] = 'ad-manager-ad-' . $name . '-' . $index;
    // Attach the settings to $ads.
    $ads[$name] = $settings;
  }

  return $ads;
}

/**
 * Ad Manager ad provider form for AdSense Custom Search Ads.
 */
function adsense_search_ads(&$form, &$form_state) {
  // Load in logic that is needed for the provider form.
  require_once drupal_get_path('module', 'adsense_search') . '/adsense_search.admin.inc';

  // Call the form function, used to keep the .module light weight.
  adsense_search_ads_form($form, $form_state);
}

/**
 * Implements hook_page_build().
 */
function adsense_search_page_build(&$page) {
  $ads = adsense_search_ad_register();

  if (!empty($ads)) {
    $page_options = array(
      'pubId' => variable_get('adsense_search__pub_id', ''),
      'query' => check_plain(arg(2)),
      'channel' => variable_get('adsense_search__channel', ''),
    );
    drupal_alter('adsense_search_ad_page_options', $page_options);

    // Ensure values that are required are present.
    if (empty($page_options['pubId']) && empty($page_options['query'])) {
      return;
    }

    // Prepare values needed for JS below due to dynamic nature of ads.
    $ad_blocks = '';
    for ($i = 0; $i < count($ads); $i++) {
      $ad_blocks .= ', s.adBlocks[' . $i . ']';
    }

    // Prepare JS objects.
    $page['page_bottom']['adsense_search'] = array(
      '#attached' => array('js' => array()),
      '#markup' => '<script src="//www.google.com/adsense/search/ads.js" type="text/javascript"></script>'
        . '<script type="text/javascript" charset="utf-8">'
        . 'var s = Drupal.settings.adsenseSearch;'
        . 'new google.ads.search.Ads(s.pageOptions' . $ad_blocks . ');'
        . '</script>'
    );
    $attached_js = &$page['page_bottom']['adsense_search']['#attached']['js'];
    $attached_js[] = array(
      'data' => array('adsenseSearch' => array(
        'pageOptions' => $page_options,
        'adBlocks' => array_values($ads),
      )),
      'type' => 'setting',
    );
  }
}

/**
 * Implements hook_theme().
 */
function adsense_search_theme($existing, $type, $theme, $path) {
  return array(
    'adsense_search_ads' => array(
      'variables' => array('name' => NULL, 'settings' => NULL, 'index' => NULL),
    ),
  );
}

/**
 * Theme AdSense Custom Search Ads.
 */
function theme_adsense_search_ads($vars) {
  // Register the settings for the Javascript.
  adsense_search_ad_register($vars['name'], $vars['settings']['adsense_search_ads'], $vars['index']);
}

