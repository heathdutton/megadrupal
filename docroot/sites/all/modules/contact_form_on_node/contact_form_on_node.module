<?php

/**
 * @file
 * Creates a link or a form to contact the author, above node link.
 */

define('CONTACT_FORM_ON_NODE_MODE_USER', 1);
define('CONTACT_FORM_ON_NODE_MODE_SYSTEM', 2);

/**
 * Implements hook_help().
 */
function contact_form_on_node_help($path, $arg) {
  // Declare the output variable.
  $output = '';

  switch ($path) {
    case "admin/help#contact_form_on_node":
      $output = '<p>' . t("Displays contact form or contact link under a node") . '</p>';
      break;
  }

  return $output;
}

/**
 * Implements hook_permission().
 */
function contact_form_on_node_permission() {
  return array(
    'administer contact_form_on_node' => array(
      'title' => t('Administer Contact on Node Form'),
      'description' => t('Perform administration tasks for Contact on Node Form module.'),
    ),
    'access personal contact form' => array(
      'title' => t('Access personal contact form'),
      'description' => t('Allow people to access personal contact form.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function contact_form_on_node_menu() {
  $menu = array();
  $menu['admin/config/system/contact_form_on_node'] = array(
    'title' => 'Contact Form On Node',
    'description' => 'Configure Contact Form On Node',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contact_form_on_node_settings'),
    'access arguments' => array('administer contact_form_on_node'),
    'file' => 'contact_form_on_node.admin.inc',
  );
  return $menu;
}

/**
 * Implements hook_node_view().
 */
function contact_form_on_node_node_view($node, $view_mode) {
  // Do we show the link?
  $show_link = variable_get('contact_form_on_node_show_link', FALSE);
  // Do we show the form?
  $show_form = variable_get('contact_form_on_node_show_form', TRUE);

  // Are we in teaser?
  if ($view_mode == "teaser") {
    $show_link = variable_get('contact_form_on_node_show_link_in_teaser', TRUE);
    $show_form = variable_get('contact_form_on_node_show_form_in_teaser', FALSE);
  }

  if ($show_link) {
    // Get the list of enabled content types.
    $enabled_types = variable_get('contact_form_on_node_types', array());
    // If the contact form was enabled for this node type, go to the next check.
    if (!empty($enabled_types) && $enabled_types[$node->type] != "0") {
      // Test if this content type needs a link added to it.
      if (user_access('access personal contact form')) {
        // Add the link.
        $node->content['links']['contact-node'] = array(
          '#links' => array(
            array(
              'title' => t('Contact author'),
              'href' => "user/" . $node->uid . "/contact",
            ),
          ),
        );
      }
    }
  }

  if ($show_form) {
    // Get the list of enabled content types.
    $enabled_types = variable_get('contact_form_on_node_types', array());
    // If the contact form was enabled for this node type, go to the next level.
    if (!empty($enabled_types) && $enabled_types[$node->type] != "0") {
      $mode = variable_get('contact_form_on_node_mode', CONTACT_FORM_ON_NODE_MODE_USER);
      switch ($mode) {
        case CONTACT_FORM_ON_NODE_MODE_USER:
          global $user;
          // Do not show the form, if the current user is not the author of the
          // content.
          if ($node->uid != $user->uid) {
            // Add a field set for the contact form, to set it apart from the node
            // content.
            $node->content['contact_form'] = array(
              '#type' => 'fieldset',
              '#title' => t('Contact author'),
              '#weight' => 99,
            );

            // If the current user is allowed to use the user contact form,
            // display it.
            if (user_access('access user contact forms')) {
              // We load contact helpers.
              module_load_include("inc", "contact", "contact.pages");
              // Then we load the author as a user.
              $author = user_load($node->uid);
              // Add the contact form.
              $node->content['contact_form']['contact_form'] = drupal_get_form('contact_personal_form', $author);
              if (variable_get('contact_form_on_node_subject_is_title', FALSE) == TRUE) {
                $node->content['contact_form']['contact_form']['subject']['#value'] = t('Re: ') . $node->title;
              }
            }
            else {
              // Add the message.
              $node->content['contact_form']['contact_form']['#markup'] = t("You have to be logged to send a message");
            }
          }
          break;

        case CONTACT_FORM_ON_NODE_MODE_SYSTEM:
          // If the current user is allowed to use the site wide contact form,
          // display it.
          if (user_access('access site-wide contact form')) {
            // Load contact helpers from the Contact module.
            module_load_include("inc", "contact", "contact.pages");
            // Add a field set for the contact form, to set it apart from the
            // node content.
            $node->content['contact_form'] = array(
              '#type' => 'fieldset',
              '#title' => t('Contact'),
              '#weight' => 99,
            );
            // Add the contact form.
            $node->content['contact_form']['contact_form'] = drupal_get_form('contact_site_form');
            if (variable_get('contact_form_on_node_subject_is_title', FALSE) == TRUE) {
              $node->content['contact_form']['contact_form']['subject']['#value'] = t('Re: ') . $node->title;
            }
          }
          break;
      }
    }
  }

  // Set the page title.
  if ($view_mode == "page") {
    drupal_set_title($node->title);
  }
}
