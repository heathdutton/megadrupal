<?php

/**
 * @file
 * Signup Services provides Services integration for Signup module 
 * (http://drupal.org/project/signup).
 */

/**
 * Implements hook_help().
 */
function signup_services_help($path) {
  switch ($path) {
    case 'admin/help#signup_services':
      $output = '<p>' . t('Signup Service module Provides services for the Signup module. ') . '</p>';
      return $output;
  }
}

/**
 * Implementation of hook_services_resources().
 */
function signup_services_services_resources() {
  $resources = array();

  $resources['signup']['actions']['signup_total'] = array(
    'file' => array(
      'type' => 'inc',
      'module' => 'signup_services',
      'name' => 'signup_services',
    ),
    'help' => t('Call back the total signup of the node.'),
    'access callback' => '_signup_services_total_access',
    'access arguments' => array('user_login'),
    'callback' => 'signup_services_total',
    'args' => array(
      array(
        'name' => 'nid',
        'type' => 'int',
        'description' => t('The id of the signup node.'),
        'source' => 'data',
        'optional' => FALSE,
      ),
    ),
  );

  $resources['signup']['actions']['user_load_signup'] = array(
    'file' => array(
      'type' => 'inc',
      'module' => 'signup_services',
      'name' => 'signup_services',
    ),
    'help' => t('Load the information of the user is signuped to the node(s).'),
    'access callback' => '_signup_services_user_load_signup_access',
    'access arguments' => array('user_login'),
    'callback' => 'signup_services_user_load_signup',
    'args' => array(
      array(
        'name' => 'uid',
        'type' => 'int',
        'description' => t('The user id of who to signup a node.'),
        'source' => 'data',
        'optional' => FALSE,
      ),
    ),
  );

  $resources['signup']['actions']['signup_user'] = array(
    'file' => array(
      'type' => 'inc',
      'module' => 'signup_services',
      'name' => 'signup_services',
    ),
    'help' => t('The action of signup a user to node.'),
    'access callback' => '_signup_services_signup_user_access',
    'access arguments' => array('user_login'),
    'callback' => 'signup_services_signup_user',
    'args' => array(
      array(
        'name' => 'nid',
        'type' => 'int',
        'description' => t('The node Id to be signed.'),
        'source' => 'data',
        'optional' => FALSE,
      ),
      array(
        'name' => 'uid',
        'type' => 'int',
        'description' => t('The user Id to sign up.'),
        'source' => 'data',
        'optional' => FALSE,
      ),
      array(
        'name' => 'signup_form_data',
        'type' => 'array',
        'description' => t('Other info for sign up.'),
        'source' => 'data',
        'optional' => TRUE,
      ),
    ),
  );

  $resources['signup']['actions']['cancel_node_signups'] = array(
    'file' => array(
      'type' => 'inc',
      'module' => 'signup_services',
      'name' => 'signup_services',
    ),
    'help' => t('Cancel the node\'s signups.'),
    'access arguments' => array('administer users'),
    'callback' => 'signup_services_cancel_node_signups',
    'args' => array(
      array(
        'name' => 'nid',
        'type' => 'int',
        'description' => t('The node Id.'),
        'source' => 'data',
        'optional' => FALSE,
      ),
    ),
  );

  $resources['signup']['actions']['cancel_user_signups'] = array(
    'file' => array(
      'type' => 'inc',
      'module' => 'signup_services',
      'name' => 'signup_services',
    ),
    'help' => t('Cancel the user\'s signups.'),
    'access arguments' => array('administer users'),
    'callback' => 'signup_services_cancel_user_signups',
    'args' => array(
      array(
        'name' => 'uid',
        'type' => 'int',
        'description' => t('The user Id.'),
        'source' => 'data',
        'optional' => FALSE,
      ),
    ),
  );

  return $resources;
}

