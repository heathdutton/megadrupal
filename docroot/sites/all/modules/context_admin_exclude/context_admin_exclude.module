<?php
/**
 * @file
 * Module for Context Admin Exclude.
 */

/**
 * Implements hook_form_alter().
 */
function context_admin_exclude_form_alter(&$form, $form_state, $form_id) {
  if (arg(0) != 'admin' || arg(1) != 'structure' || arg(2) != 'context') {
    return;
  }
  switch ($form_id) {
    case 'context_ui_settings':
      // Context settings page.
      $form['context_admin_exclude_exception'] = array(
          '#type' => 'fieldset',
          '#title' => t('Context Admin Exclude'),
        );
      $form['context_admin_exclude_exception']['description'] = array(
        '#markup' => t('Out of the box, contexts set to display Sitewide without specific URLs will get executed on every
        page, including admin pages. Sometimes the context doesn\'t really need to be executed on admin pages, such as
        node/add. <br/>These contexts cause Drupal to bootstrap and do some work that is not really needed. If you want
        to change the list below, you can implement the hook_context_admin_exclude_admin_paths_alter(). <br/>If you need
        a certain context to run on admin paths, you can edit the context and tick "Execute this context on Admin paths".'),
      );
      $form['context_admin_exclude_exception']['paths'] = array(
        '#prefix' => '<div><p><strong>' . t('Contexts will not be executed on the following paths:') . '</strong></p>',
        '#markup' => implode("<br/>", context_admin_exclude_get_admin_paths()),
        '#suffix' => '</div>',
      );
      break;
    case 'ctools_export_ui_edit_item_form':
      // Context edit page.
      $default = FALSE;
      if (isset($form['info']['name']['#value'])) {
        $contexts = variable_get('context_admin_exclude_exception', array());
        if (isset($contexts[$form['info']['name']['#value']])) {
          $default = $contexts[$form['info']['name']['#value']];
        }
      }
      $form['context_admin_exclude_exception'] = array(
          '#type' => 'checkbox',
          '#title' => t('Execute this context on Admin paths'),
          '#default_value' => $default,
          '#description' => t('If you tick this box, this context will be executed on admin paths. <a href="/admin/structure/context/settings">See list of admin paths</a>.'),
          '#weight' => 0,
      );
      $form['#submit'][] = 'context_admin_exclude_save_context';
      break;
  }
}

/**
 * Save the configuration for a individual context.
 */
function context_admin_exclude_save_context(&$form, &$form_state) {
  // Get list of stored settings.
  $contexts = variable_get('context_admin_exclude_exception', array());
  // Save setting for this context.
  $context_name = $form['info']['name']['#value'];
  $contexts[$context_name] = $form_state['values']['context_admin_exclude_exception'];
  if ($contexts[$context_name] == FALSE) {
    unset ($contexts[$context_name]);
  }
  // save list
  variable_set('context_admin_exclude_exception', $contexts);
}

/**
 * Implements hook_context_load_alter().
 */
function context_admin_exclude_context_load_alter(&$context) {
  // Get list of stored settings.
  $exception_list = variable_get('context_admin_exclude_exception', array());

  // Check if this context is allowed to be executed in admin paths.
  if (isset($exception_list[$context->name]) && $exception_list[$context->name] == TRUE) {
    // Allow the context to be executed normally.
  }
  else {
    // Do not allow the context to be executed in admin paths.
    if (drupal_match_path(current_path(), implode("\r\n", context_admin_exclude_get_admin_paths()))) {
      // Clear the context.
      $context = new StdClass();
      $context->name = NULL;
    }
  }
}

/**
 * Implements hook_context_admin_exclude_admin_paths().
 */
function hook_context_admin_exclude_admin_paths(&$paths) {

}

/**
 * Generate a list of admin paths to be excluded.
 */
function context_admin_exclude_get_admin_paths() {
  $paths = &drupal_static(__FUNCTION__, array());
  $patterns = array();

  if (empty($paths)) {
    $paths = module_invoke_all('admin_paths');
    drupal_alter('admin_paths', $paths);

    $paths['admin'] = TRUE;
    $paths['admin/*'] = TRUE;
    $paths['system/ajax'] = TRUE;
    $paths['system/ajax/*'] = TRUE;
    $paths['media/browser'] = TRUE;
    $paths['media/browser/*'] = TRUE;
    $paths['*/edit'] = TRUE;
    $paths['*/autocomplete'] = TRUE;
    $paths['*/files/*'] = TRUE;

    drupal_alter('context_admin_exclude_admin_paths', $paths);
  }

  foreach ($paths as $path => $enabled) {
    if ($enabled) {
      $patterns[] = $path;
    }
  }

  return $patterns;
}
