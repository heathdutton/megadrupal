<?php

/**
 * @file
 * Create tables for entity and entity revisions. Attach fields to the entity.
 */

/**
 * Implements hook_schema().
 */
function typical_entity_example_5_schema() {
  $schema = array();

  // Table for storing data of entities.
  $schema['typical_entity_example_5'] = array(
    'description' => 'The base table for typical_entity_example_5.',
    'fields' => array(
      'teid' => array(
        'description' => 'The primary identifier.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Entity bundle.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'Entity title.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'Entity description.',
        'type' => 'text',
      ),
      // Column for storing current revision ID of entity.
      'revision_id' => array(
        'description' => 'The ID of the entity\'s default revision.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
      ),
    ),
    'primary key' => array('teid'),
  );

  // Table for storing revisions of entities.
  $schema['typical_entity_example_5_revision'] = $schema['typical_entity_example_5'];
  $schema['typical_entity_example_5_revision']['fields']['revision_id'] = array(
    'description' => 'The primary identifier.',
    'type' => 'serial',
    'not null' => TRUE,
  );
  $schema['typical_entity_example_5_revision']['fields']['teid'] = array(
    'description' => 'The ID of the attached entity.',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => FALSE,
    'default' => NULL,
  );
  $schema['typical_entity_example_5_revision']['primary key'] = array('revision_id');

  return $schema;
}

/**
 * Implements hook_modules_enabled().
 */
function typical_entity_example_5_modules_enabled($modules) {
  if (in_array('typical_entity_example_5', $modules)) {
    // Create a text field.
    if (!field_read_field('typical_entity_example_5_field_1')) {
      $field = array(
        'field_name' => 'typical_entity_example_5_field_1',
        'type' => 'text',
      );
      field_create_field($field);
    }

    // Attach created field to proper bundle.
    if (!field_read_instance('typical_entity_example_5', 'typical_entity_example_5_field_1', 'typical_entity_example_5_bundle_1')) {
      field_attach_create_bundle('typical_entity_example_5', 'typical_entity_example_5_bundle_1');
      $instance = array(
        'field_name' => 'typical_entity_example_5_field_1',
        'label' => t('Field 1 of typical_entity_example_5_bundle_1 bundle'),
        'entity_type' => 'typical_entity_example_5',
        'bundle' => 'typical_entity_example_5_bundle_1',
      );
      field_create_instance($instance);
    }
  }
}

/**
 * Implements hook_uninstall(). 
 */
function typical_entity_example_5_uninstall() {
  // Delete previousely created field.
  field_delete_field('typical_entity_example_5_field_1');
}
