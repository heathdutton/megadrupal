<?php

/**
 * @file
 * Describe the entity with limited number of bundles and attached fields.
 */

/**
 * Implements hook_entity_info().
 */
function typical_entity_example_3_entity_info() {
  $info = array(
    'typical_entity_example_3' => array(
      'label' => t('Typical Entity 3'),
      'base table' => 'typical_entity_example_3',
      'entity keys' => array(
        'id' => 'teid',
        // Database field where bundle types of entities are saved.
        'bundle' => 'type',
      ),
      // Describe which property of entity object shall be used to
      // identify entity bundle.
      'bundle keys' => array(
        'bundle' => 'type',
      ),
      // Describe bundles of this entity.
      'bundles' => array(
        'typical_entity_example_3_bundle_1' => array(
          'label' => t('Typical Entity 3 Bundle 1'),
        ),
        'typical_entity_example_3_bundle_2' => array(
          'label' => t('Typical Entity 3 Bundle 2'),
        ),
      ),
      'entity class' => 'Entity',
      'controller class' => 'EntityAPIController',
      'metadata controller class' => '',
      // Is it possible to attach fields to bundles.
      'fieldable' => TRUE,
    ),
  );
  return $info;
}

/**
 * Implements hook_entity_property_info().
 * 
 * It is not necessary to describe metadata for fields created with 
 * field_create_instance function. Metadata for these fields is
 * created automatically.
 */
function typical_entity_example_3_entity_property_info() {
  $info = array();
  $properties = &$info['typical_entity_example_3']['properties'];
  $properties['teid'] = array(
    'type' => 'integer',
    'schema field' => 'teid',
    'label' => t('Custom entity v3 ID'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $properties['type'] = array(
    'type' => 'text',
    'schema field' => 'type',
    'required' => TRUE,
    'label' => t('Custom entity v3 type (bundle)'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $properties['title'] = array(
    'type' => 'text',
    'schema field' => 'title',
    'required' => TRUE,
    'label' => t('Custom entity v3 title'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $properties['description'] = array(
    'type' => 'text',
    'schema field' => 'description',
    'label' => t('Custom entity v3 description'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  return $info;
}
