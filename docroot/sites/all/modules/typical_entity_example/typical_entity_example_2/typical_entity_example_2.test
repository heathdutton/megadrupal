<?php

/**
 * @file
 * Tests for typical_entity_example_2 module.
 */

/**
 * Make sure that we can create, edit and delete instances of 
 * typical_entity_example_2 with Entity Metadata Wrappers.
 */
class TypicalEntityExample2UnitTestCase extends DrupalWebTestCase {
  /**
   * Provide information about this test.
   */
  public static function getInfo() {
    return array(
      'name' => 'Typical entity 2 unit tests',
      'description' => 'Make sure that we can create, edit and delete instances of typical_entity_example_2 with Entity Metadata Wrappers.',
      'group' => 'Typical Entity Example',
    );
  }

  /**
   * Declare the module dependencies for the test.
   */
  public function setUp() {
    parent::setUp('typical_entity_example_2');
  }

  /**
   * Make sure that it is possible to operate with typical_entity_example_2.
   */
  public function testTypicalEntity2() {
    // Make sure that "typical_entity_example_2" entity type exists.
    $entity_description = entity_get_info('typical_entity_example_2');
    $this->assertEqual($entity_description['base table'], 'typical_entity_example_2', t("Entity type 'typical_entity_example_2' exists."));

    // Create new entity.
    $entity = entity_create('typical_entity_example_2', array());
    $this->assertTrue($entity, t("New 'typical_entity_example_2' entity was successfully created."));

    // Save created entity.
    $wrapper_1 = entity_metadata_wrapper('typical_entity_example_2', $entity);
    $wrapper_1->title = $this->randomName(7);
    $wrapper_1->description = $this->randomName(16);
    $wrapper_1->save();
    $this->assertEqual(strlen($wrapper_1->title->value()), 7, t("Created 'typical_entity_example_2' entity was successfully saved."));

    // Load saved entity.
    $entities = entity_load('typical_entity_example_2', array($wrapper_1->teid->value()));
    $this->assertEqual(count($entities), 1, t('Saved entity successfully loaded from database.'));
    $wrapper_2 = entity_metadata_wrapper('typical_entity_example_2', reset($entities));
    $this->assertEqual($wrapper_2->title->value(), $wrapper_1->title->value(), t('Title of loaded entity is equal to title of saved entity.'));

    // Edit loaded entity.
    $wrapper_2->title = $this->randomName(9);
    $wrapper_2->description = $this->randomName(18);
    $wrapper_2->save();
    $this->assertNotEqual($wrapper_2->title->value(), $wrapper_1->title->value(), t('Loaded entity was successfully edited.'));

    // Delete loaded entity.
    $wrapper_2->delete();
    $entities = entity_load('typical_entity_example_2', array($wrapper_1->teid->value()));
    $this->assertEqual(count($entities), 0, t('Loaded entity was successfully deleted.'));
  }
}
