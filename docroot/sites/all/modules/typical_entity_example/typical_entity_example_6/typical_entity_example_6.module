<?php

/**
 * @file
 * Describe the entity with interface for managing bundles.
 */

/**
 * Implements hook_entity_info().
 */
function typical_entity_example_6_entity_info() {
  $info = array(
    'typical_entity_example_6' => array(
      'label' => t('Typical Entity 6'),
      'base table' => 'typical_entity_example_6',
      'entity keys' => array(
        'id' => 'id',
        'bundle' => 'type',
      ),
      'bundle keys' => array(
        'bundle' => 'type',
      ),
      'bundles' => array(),
      'entity class' => 'TypicalEntityExample6',
      'controller class' => 'TypicalEntityExample6Controller',
      'metadata controller class' => '',
      'fieldable' => TRUE,
      'uri callback' => 'entity_class_uri',
      'label callback' => 'entity_class_label',
      'module' => 'typical_entity_example_6',
    ),
  );
  $info['typical_entity_example_6_type'] = array(
    'label' => t('Typical Entity 6 Type'),
    'base table' => 'typical_entity_example_6_type',
    'entity keys' => array(
      'id' => 'id',
      'name' => 'type',
      'label' => 'label',
    ),
    'bundle of' => 'typical_entity_example_6',
    'entity class' => 'TypicalEntityExample6Type',
    'controller class' => 'TypicalEntityExample6TypeController',
    'metadata controller class' => '',
    'fieldable' => FALSE,
    'exportable' => TRUE,
    'module' => 'typical_entity_example_6',
    // Automatically create page for managing entity bundles.
    'admin ui' => array(
      'path' => 'admin/structure/typical_entity_example_6',
      'file' => 'typical_entity_example_6.admin.inc',
      'controller class' => 'TypicalEntityExample6TypeUiController',
    ),
    // Access callback is necessary for admin UI.
    // @see http://drupal.org/node/1021576
    'access callback' => 'typical_entity_example_6_type_access',
  );
  return $info;
}

/**
 * Implements hook_entity_property_info().
 */
function typical_entity_example_6_entity_property_info() {
  $info = array();

  // Describe properties of entity.
  $properties = &$info['typical_entity_example_6']['properties'];
  $properties['id'] = array(
    'type' => 'integer',
    'schema field' => 'id',
    'label' => t('Custom entity v6 ID'),
    'description' => t('The internal ID of custom entity v6.'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $properties['type'] = array(
    'type' => 'text',
    'schema field' => 'type',
    'required' => TRUE,
    'label' => t('Custom entity v6 type (bundle)'),
    'description' => t('Type of custom entity v6.'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $properties['title'] = array(
    'type' => 'text',
    'schema field' => 'title',
    'required' => TRUE,
    'label' => t('Custom entity v6 title'),
    'description' => t('Title of custom entity v6.'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $properties['description'] = array(
    'type' => 'text',
    'schema field' => 'description',
    'label' => t('Custom entity v6 description'),
    'description' => t('Description of custom entity v6.'),
    'setter callback' => 'entity_property_verbatim_set',
  );

  // Describe properties of entity type.
  $type_properties = &$info['typical_entity_example_6_type']['properties'];
  $type_properties['id'] = array(
    'type' => 'integer',
    'schema field' => 'id',
    'label' => t('Type ID'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $type_properties['type'] = array(
    'type' => 'text',
    'schema field' => 'type',
    'required' => TRUE,
    'label' => t('Type name'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $type_properties['label'] = array(
    'type' => 'text',
    'schema field' => 'label',
    'required' => TRUE,
    'label' => t('Type label'),
    'setter callback' => 'entity_property_verbatim_set',
  );
  $type_properties['description'] = array(
    'type' => 'text',
    'schema field' => 'description',
    'required' => TRUE,
    'label' => t('Type description'),
    'setter callback' => 'entity_property_verbatim_set',
  );

  return $info;
}

/**
 * Implements hook_entity_info_alter().
 * 
 * Specify admin pages for all existing entity bundles.
 */
function typical_entity_example_6_entity_info_alter(&$entity_info) {
  foreach (typical_entity_example_6_type_load_multiple() as $type => $info) {
    $entity_info['typical_entity_example_6']['bundles'][$type] = array(
      'label' => $info->label,
      'admin' => array(
        'path' => 'admin/structure/typical_entity_example_6/manage/%typical_entity_example_6_type',
        'real path' => 'admin/structure/typical_entity_example_6/manage/' . $type,
        'bundle argument' => 4,
      ),
    );
  }
}

/**
 * Implements hook_views_api().
 */
function typical_entity_example_6_views_api() {
  // Describe the folder where "typical_entity_example_6.views_default.inc" file
  // is located.
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'typical_entity_example_6'),
  );
}

/**
 * Implements hook_menu().
 */
function typical_entity_example_6_menu() {
  $items = array();

  // Base URI for dealing with entity.
  $base_uri = 'typical_entity_example_6/%typical_entity_example_6';
  $base_uri_argument_position = 1;

  // URI for choosing bundle of entity to add.
  $items['typical_entity_example_6/add'] = array(
    'title' => 'Add Typical Entity 6',
    'page callback' => 'typical_entity_example_6_choose_bundle',
    'access arguments' => array('administer typical_entity_example content'),
    'file' => 'typical_entity_example_6.admin.inc',
    'type' => MENU_LOCAL_ACTION,
  );

  // URI for adding entity of proper bundle.
  foreach (typical_entity_example_6_type_load_multiple() as $type => $info) {
    $items['typical_entity_example_6/add/' . $type] = array(
      'title' => 'Add Typical Entity 6',
      'page callback' => 'typical_entity_example_6_add',
      'page arguments' => array(2),
      'access arguments' => array('administer typical_entity_example content'),
      'file' => 'typical_entity_example_6.admin.inc',
    );
  }

  // URI for viewing entity instances.
  $items[$base_uri] = array(
    'title callback' => 'entity_label',
    'title arguments' => array('typical_entity_example_6', $base_uri_argument_position),
    'page callback' => 'typical_entity_example_6_view',
    'page arguments' => array($base_uri_argument_position),
    'access arguments' => array('view typical_entity_example content'),
    'file' => 'typical_entity_example_6.pages.inc',
  );
  $items[$base_uri . '/view'] = array(
    'title' => 'View Typical Entity 6',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  // URI for editing entity instances.
  $items[$base_uri . '/edit'] = array(
    'title' => 'Edit Typical Entity 6',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('typical_entity_example_6_form', $base_uri_argument_position),
    'access arguments' => array('administer typical_entity_example content'),
    'file' => 'typical_entity_example_6.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  // URI for deleting entity instances.
  $items[$base_uri . '/delete'] = array(
    'title callback' => 'typical_entity_example_6_label',
    'title arguments' => array($base_uri_argument_position),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('typical_entity_example_6_delete_form', $base_uri_argument_position),
    'access arguments' => array('administer typical_entity_example content'),
    'file' => 'typical_entity_example_6.admin.inc',
  );

  // URI for deleting entity bundles.
  $items['admin/structure/typical_entity_example_6/%typical_entity_example_6_type/delete'] = array(
    'title' => 'Delete Typical Entity 6 Type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('typical_entity_example_6_type_form_delete_confirm', 4),
    'access arguments' => array('administer typical_entity_example content'),
    'weight' => 1,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'typical_entity_example_6.admin.inc',
  );

  return $items;
}

/**
 * Load an instance of typical_entity_example_6.
 * 
 * @param int $id
 *   Entity identifier.
 * @param bool $reset
 *   Whether to reset the internal cache for typical_entity_example_6.
 * 
 * @return mixed
 *   An actual entity, or false.
 */
function typical_entity_example_6_load($id, $reset = FALSE) {
  $entities = typical_entity_example_6_load_multiple(array($id), array(), $reset);
  return reset($entities);
}

/**
 * Load multiple instances of typical_entity_example_6.
 * 
 * @param array $ids
 *   Entity identifiers.
 * @param array $conditions
 *   (deprecated) An associative array of conditions on the base entity table.
 * @param bool $reset
 *   Whether to reset the internal cache for typical_entity_example_6.
 * 
 * @return array
 *   Founded entities.
 */
function typical_entity_example_6_load_multiple($ids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('typical_entity_example_6', $ids, $conditions, $reset);
}

/**
 * Load an instance of typical_entity_example_6_type.
 * 
 * @param string $entity_type
 *   Name of the entity type to load.
 * 
 * @return mixed
 *   Founded entity type, or false.
 */
function typical_entity_example_6_type_load($entity_type) {
  return typical_entity_example_6_type_load_multiple($entity_type);
}

/**
 * Load multiple instances of typical_entity_example_6_type.
 * 
 * @param string $type_name
 *   Name of the entity type to load.
 * 
 * @return mixed
 *   Founded entity type, or false.
 */
function typical_entity_example_6_type_load_multiple($type_name = NULL) {
  $types = entity_load_multiple_by_name('typical_entity_example_6_type', isset($type_name) ? array($type_name) : FALSE);
  return isset($type_name) ? reset($types) : $types;
}

/**
 * Access callback for typical_entity_example_6_type.
 */
function typical_entity_example_6_type_access($op, $entity = NULL) {
  return user_access('administer typical_entity_example content');
}
