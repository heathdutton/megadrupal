<?php
/**
 * @file
 * Main file for the Yandex.Webmaster Reports module.
 */

/**
 * Implements hook_permission().
 */
function yandex_webmaster_reports_permission() {
  return array(
    'access yandex_webmaster reports' => array(
      'title' => t('View Yandex.Webmaster reports'),
      //'description' => '',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function yandex_webmaster_reports_menu() {
  $items = array();

  $items['admin/reports/yandex_webmaster_reports'] = array(
    'title' => 'Yandex.Webmaster',
    'description' => 'Reports based on information from Yandex.Webmaster.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yandex_webmaster_reports_form'),
    'access arguments' => array('access yandex_webmaster reports'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'yandex_webmaster_reports.reports.inc',
  );
  $items['admin/reports/yandex_webmaster_reports/summary'] = array(
    'title' => 'Summary',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/reports/yandex_webmaster_reports/top'] = array(
    'title' => 'Top queries',
    'page arguments' => array('yandex_webmaster_reports_top_form'),
    'access arguments' => array('access yandex_webmaster reports'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'yandex_webmaster_reports.reports.inc',
    'weight' => 10,
  );
  $items['admin/reports/yandex_webmaster_reports/last'] = array(
    'title' => 'Last index',
    'page arguments' => array('yandex_webmaster_reports_last_form'),
    'access arguments' => array('access yandex_webmaster reports'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'yandex_webmaster_reports.reports.inc',
    'weight' => 20,
  );
  $items['admin/reports/yandex_webmaster_reports/errors'] = array(
    'title' => 'Excluded pages',
    'page arguments' => array('yandex_webmaster_reports_excluded_form'),
    'access arguments' => array('access yandex_webmaster reports'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'yandex_webmaster_reports.reports.inc',
    'weight' => 30,
  );
  $items['admin/reports/yandex_webmaster_reports/links'] = array(
    'title' => 'External links',
    'page arguments' => array('yandex_webmaster_reports_links_form'),
    'access arguments' => array('access yandex_webmaster reports'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'yandex_webmaster_reports.reports.inc',
    'weight' => 40,
  );

  return $items;
}

/**
 * Implements hook_cron().
 */
function yandex_webmaster_reports_cron() {
  // Check for viruses.
  $hosts = yandex_webmaster_get_hosts();
  foreach ($hosts as $item) {
    if ($item['url-count'] > 0 && $item['virused'] != 'false') {
      watchdog('yandex_webmaster_reports', 'Danger! Site "@site" is virused!', array('@site' => $item['name']));
    }
  }
  // Update site statistics.
  yandex_webmaster_reports_update_stats($hosts);
}

/**
 * Get Yandex.Webmaster statistics and save it to the database.
 *
 * @param $hostlist
 *   Array returned by yandex_webmaster_get_hosts() function.
 */
function yandex_webmaster_reports_update_stats($hostlist) {
  foreach ($hostlist as $host_id => $host) {
    if ($host['url-count'] > 0) {
      $stats = yandex_webmaster_get_host_stats($host_id);
      // Check for existed record.
      $count = db_select('yandex_webmaster_reports')
        ->condition('host_id', (int) $host_id)
        ->condition('timestamp', (int) $stats['last-access'])
        ->countQuery()
        ->execute()
        ->fetchField();
      if ($count == 0) {
        db_insert('yandex_webmaster_reports')
          ->fields(array(
            'host_id' => (int) $host_id,
            'timestamp' => (int) $stats['last-access'],
            'tcy' => (int) $stats['tcy'],
            'url_count' => (int) $stats['url-count'],
            'url_errors' => (int) $stats['url-errors'],
            'index_count' => (int) $stats['index-count'],
            'links_count' => (int) $stats['links-count'],
          ))
          ->execute();
      }
    }
  }
}
