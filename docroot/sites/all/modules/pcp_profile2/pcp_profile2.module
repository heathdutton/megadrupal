<?php

/**
 * Implements hook_menu().
 */
function pcp_profile2_menu() {
  $items['admin/config/people/pcp_profile2'] = array(
      'title' => 'Profile2 Complete Percentage Configuration',
      'description' => 'Configure Calculation logic of Complete Percentage.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('pcp_profile2_admin_settings'),
      'access arguments' => array('administer pcp'),
      'file' => 'pcp_profile2.admin.inc',
      'file path' => drupal_get_path('module', 'pcp_profile2') . '/includes',
      'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function pcp_profile2_block_info() {

  // Create block for core user profiles.
  $blocks['pcp_profile2_percent_complete'] = array(
      'info' => t('Profile Complete Percentage - Profile2'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function pcp_profile2_block_view($delta = '') {

  $block = array();

  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'pcp_profile2_percent_complete':
      global $user;
      $out = pcp_profile2_get_complete_percentage_data_all($user);

      drupal_add_css(drupal_get_path('module', 'pcp') . '/css/pcp.theme.css');
      $subject = '';
      $content = theme('pcp_template', $out);
      $block['subject'] = $subject;
      $block['content'] = $content;
      break;
  }

  return $block;
}

function pcp_profile2_get_complete_percentage_data_all($user) {
  // Define minimal array
  $data = array();
  $data['entity_type'] = 'profile2';
  $data['bundle'] = 'all';
  $data['uid'] = $user->uid;

  // All fields
  $fields_count = 0;
  $empty_fields_count = 0;
  $fields_count_offset = variable_get('pcp_profile2_offset', '0');
   
  $profile2_entity = entity_get_info('profile2');
   
  // Collect all fields from all profile2 entities
  foreach ($profile2_entity['bundles'] as $bundle => $values) {
    $out = pcp_get_complete_percentage_data('profile2', $bundle, $user);
    if (array_key_exists('total', $out)) {
      $fields_count = $fields_count + $out['total'];
      $empty_fields_count = $empty_fields_count + $out['incomplete'];
    }
  }

  // Compute percantages
  $completed_fields = $fields_count - $empty_fields_count;
  if ($empty_fields_count > $fields_count_offset){
    $current_percent = number_format(($completed_fields / ($fields_count - $fields_count_offset)), 0) * 100;
    $next_percent = number_format((($completed_fields + 1) / ($fields_count - $fields_count_offset)), 0) * 100;
  }else {
    $current_percent = 100;
    $next_percent = 100;
  }

  $data['completed']  = $completed_fields;
  $data['incomplete'] = $empty_fields_count;
  $data['total'] = $fields_count;
  $data['current_percent'] = $current_percent;
  $data['next_percent'] = $next_percent;

  return $data;
}
