<?php
/**
 * @file
 * The FlickrUp module.
 */

/**
 * Includes.
 */
// Functions for working with Flickr photos.
require_once 'flickrup.inc';
// Code relating to using Flickr photos as a field.
require_once 'flickrup.field.inc';

/**
 * Implements hook_menu().
 */
function flickrup_menu() {
  $items['admin/config/media/flickrup'] = array(
    'title' => 'FlickrUp',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('flickrup_admin_settings'),
    'access arguments' => array('administer flickrup'),
    'description' => 'Change settings for the FlickrUp module.',
    'file' => 'flickrup.admin.inc',
  );
  $items['flickrup/auth'] = array(
    'page callback' => 'flickrup_auth',
    'access callback' => 'flickrup_auth_access',
    'type' => MENU_CALLBACK,
    'file' => 'flickrup.admin.inc',
  );
  $items['flickrup/ajax'] = array(
    'title' => 'Remove item callback',
    'page callback' => 'flickrup_ajax',
    'delivery callback' => 'ajax_deliver',
    'access arguments' => array('access content'),
    'theme callback' => 'ajax_base_page_theme',
    'type' => MENU_CALLBACK,
    'file path' => 'includes',
    'file' => 'form.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function flickrup_permission() {
  return array(
    'administer flickrup' => array(
      'title' => t('Administer FlickrUp module settings'),
    ),
  );
}

/**
 * Access to authorization callback.
 */
function flickrup_auth_access() {
  $auth_process_step = variable_get('flickrup_auth_process_step', 0);
  return ($auth_process_step === 1 || $auth_process_step === 2) ? TRUE : FALSE;
}

/**
 * Implements hook_libraries_info().
 */
function flickrup_libraries_info() {
  $libraries['galleria'] = array(
    'name' => 'Galleria  plugin',
    'vendor url' => 'http://galleria.io/',
    'download url' => 'http://galleria.io/download/',
    'version arguments' => array(
      'file' => 'galleria.js',
      'pattern' => '@(?i:Galleria v)\sv?([0-9\.a-z]+)@',
      'lines' => 5,
    ),
    'files' => array(
      'js' => array(
        'galleria.js',
        'themes/classic/galleria.classic.js',
      ),
      'css' => array(
        'themes/classic/galleria.classic.css',
      ),
    ),
    'variants' => array(
      'minified' => array(
        'files' => array(
          'js' => array(
            'galleria.min.js',
          ),
        ),
      ),
    ),
  );
  $libraries['phpflickr'] = array(
    'name' => 'phpFlickr',
    'vendor url' => 'https://github.com/dan-coulter/phpflickr/',
    'download url' => 'https://github.com/dan-coulter/phpflickr/archive/master.zip',
    'files' => array(
      'php' => array('phpFlickr.php'),
    ),
    'version callback' => '_flickrup_phpFlickr_version',
  );

  return $libraries;
}

/**
 * Library phpFlickr not have version in own files.
 */
function _flickrup_phpFlickr_version() {
  return TRUE;
}

/**
 * Implements hook_image_default_styles().
 */
function flickrup_image_default_styles() {
  $styles = array();

  $styles['flickrup_preview'] = array(
    'label' => 'FlickrUp photo file preview',
    'effects' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 200,
          'height' => 200,
          'upscale' => 1,
        ),
        'weight' => 0,
      ),
    ),
  );

  return $styles;
}

/**
 * Implements hook_drupal_goto_alter().
 */
function flickrup_drupal_goto_alter(&$path, &$options) {
  if ($path === 'https://www.flickr.com/services/auth' && isset($options['query']['render'])) {
    unset($options['query']['render']);
  }
}

/**
 * Implements hook_module_implements_alter().
 *
 * The authorization process on the service Flickr is a multistep.
 * After saving the settings form begins first step authentication.
 * Redirect to:
 * flickr.com/services/auth/?api_key=xxxx&perms=delete&api_sig=xxxx.
 * Authorization parameters are passed as GET parameters.
 * When the module "overlay" is enabled, the redirect to:
 * flickr.com/.../?api_key=xxxx&perms=delete&api_sig=хххх&render=overlay
 * “&render=overlay” - in the path causes an authorization error.
 * “&render=overlay” parameter is added in the method
 * overlay_drupal_goto_alter ().
 * Implementation of hook_drupal_goto_alter() and
 * hook_module_implements_alter() for removing that parameter for flickrup's
 * administrative page.
 */
function flickrup_module_implements_alter(&$implementations, $hook) {
  if ($hook === 'drupal_goto_alter') {
    $group = $implementations['flickrup'];
    unset($implementations['flickrup']);
    $implementations['flickrup'] = $group;
  }
}

/**
 * Implements hook_help().
 */
function flickrup_help($path) {
  $output = '';
  switch ($path) {
    case 'admin/help#flickrup':
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The FlickrUp module allows to upload photos to Flickr. The module provides its own field type, widget and formatters. It allow use Flickr photo as a field.') . '</p>';
      $output .= '<h3><a name="auth"></a>' . t('Get Flickr API authorization information') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Flick App') . '</dt>';
      $output .= '<dd>' . t('You should create a Flickr app <a href="@url">here</a>. In the App\'s Authentication Flow set the following options:', array('@url' => 'https://www.flickr.com/services/apps/create/apply'));
      $output .= '<ul>';
      $output .= '<li>' . t('App Type: Web Application') . '</li>';
      $output .= '<li>' . t('Callback URL: <a href="@url">@url</a>', array('@url' => url('flickrup/auth', array('absolute' => TRUE)))) . '</li>';
      $output .= '</ul>';
      $output .= '</dd>';
      $output .= '<dt>' . t('Set authorization parameters') . '</dt>';
      $output .= '<dd>' . t('After created Flickr App, return to the your site. Set the API Key and API Secret in FlickrUp module settings. Save settings to finish authorization process.') . '</dd>';
      $output .= '</dl>';
      break;
  }
  return $output;
}
