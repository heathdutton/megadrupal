<?php
/**
 * @file
 * Defines schema for email field confirm
 */

/**
 * Implements hook_uninstall().
 */
function email_field_confirm_uninstall() {
  variable_del('email_field_confirm_confirm_email_subject');
  variable_del('email_field_confirm_confirm_email_body');
  variable_del('email_field_confirm_original_email_notify_subject');
  variable_del('email_field_confirm_original_email_notify_body');
}

/**
 * Implements hook_schema().
 */
function email_field_confirm_schema() {
  $schema = array();

  $schema['email_field_confirm'] = array(
    'description' => 'Storage of email field addresses that require email confirmation.',
    'fields' => array(
      'email' => array(
        'description' => 'Contains the new email address entered in the email field.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'email_original' => array(
        'description' => 'Contains the original email address (if any) that is being changed.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      'entity_type' => array(
        'description' => 'Contains the entity type the email field was attached to when confirming the email address.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'bundle' => array(
        'description' => 'Contains the bundle the email field was attached to when confirming the email address.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'entity_id' => array(
        'description' => 'Contains the entity id the email field was attached to when confirming the email address.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'revision_id' => array(
        'description' => 'The entity revision ID the original email address was entered in.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'field_name' => array(
        'description' => 'Contains the field name the email address was entered into.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid to confirm the email address.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'confirmed_by_uid' => array(
        'description' => 'The {users}.uid that confirmed the email address. May differ from uid if confirming user has bypass permission.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the record was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the record was updated (e.g. confirmed).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'expiration' => array(
        'description' => 'The Unix timestamp when the confirmation link is no longer valid.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => '0 = new (awaiting confirmation), 1 = confirmed, 2 = confirmed bypass.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'email' => array('email'),
      'entity_type' => array('entity_type'),
      'bundle' => array('bundle'),
      'field_name' => array('field_name'),
      'uid' => array('uid'),
      'expiration' => array('expiration'),
      'status' => array('status'),
    ),
    'foreign keys' => array(
      'email_confirmer' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  return $schema;
}
