<?php
function sponsoring404_menu() {
	$items = array();

	$items['admin/config/sponsoring404'] = array(
    'title' => '404 Page not found', 
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('sponsoring404_settings_form'),
    'access arguments' => array('administer'), 
    'type' => MENU_NORMAL_ITEM,
	);

	$items['sponsoring404'] = array(
    'title' => 'Sponsoring 404', 
    'page callback' => 'sponsoring404_page',
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK,
	);

	return $items;
}

/**
 * Implements hook_help().
 */
function sponsoring404_help($path, $arg) {
	switch ($path) {
		case 'admin/config/sponsoring404':
			return t('Select at least one option.');
	}
}

/**
 * Administrator form.
 */
function sponsoring404_settings_form() {
	$form = array();

	$data = sponsoring404_get_begunstigden();
	$settings = variable_get('sponsoring404_begunstigden', array());

	if (variable_get('site_404', '') != 'sponsoring404') {
		drupal_set_message(t('The default 404 page is not set to sponsoring 404. If you save this configuration, the default 404 page will automaticly be set.'), 'warning');
	}

	if (!empty($data)) {
		foreach ($data as $row) {
			$form['sponsoring404_begunstigden_' . $row['id']] = array(
        '#type' => 'checkbox',
        '#title' => $row['naam'],
			  '#default_value' => isset($settings[$row['id']]) || empty($settings) ? '1' : '0',
			);
		}

		$form['submit'] = array('#type' => 'submit', '#value' => t('Save'));

	}

	return $form;
}

/**
 * Administrator form validate.
 */
function sponsoring404_settings_form_validate($form, &$form_state) {
	$count = 0;
	foreach ($form_state['values'] as $key => $value) {
		if (substr($key, 0, 27) == 'sponsoring404_begunstigden_' && $value == '1') {
			$count++;
		}
	}

	if (!$count) {
		form_set_error('', t('Please select at least one option. Disable the module if you want to go back to your regular 404 page.'));
	}
}

/**
 * Administrator form submit.
 */
function sponsoring404_settings_form_submit($form, &$form_state) {
	$data = sponsoring404_get_begunstigden();

	$settings = array();

	if(!empty($data)) {
		foreach ($form_state['values'] as $key => $value) {
			if (substr($key, 0, 27) == 'sponsoring404_begunstigden_' && $value == '1') {
				$id = substr($key, 27);
				if (isset($data[$id])) {
					$settings[$id] = $data[$id]['localhtml'];
				}
			}
		}
	}

	if (!empty($settings)) {
		variable_set('sponsoring404_begunstigden', $settings);
	}

	drupal_set_message(t('The configuration options have been saved.'));
}

/**
 * Get the data from 404sponsoring.info.
 */
function sponsoring404_get_begunstigden() {
	$sponsoring404_path = drupal_realpath(file_default_scheme() . '://') . '/sponsoring404';

	// Remove the old files.
	file_unmanaged_delete_recursive($sponsoring404_path);

	// Create the directory.
	if (!file_exists($sponsoring404_path)) {
		mkdir($sponsoring404_path, 0777);
	}

	// Get the file from 404sponsoring.info.
	$txt = '';
	if (!file_exists($sponsoring404_path . '/begunstigden.txt')) {
		$txt = @file_get_contents('http://www.404sponsoring.info/begunstigden/begunstigden.txt');

		if (!$txt) {
			drupal_set_message(t('Unable to fetch data from 404sponsoring.info.'), 'error');
		}
		else {
			file_put_contents($sponsoring404_path . '/begunstigden.txt', $txt);
		}
	}
	else {
		$txt = file_get_contents($sponsoring404_path . '/begunstigden.txt');
	}

	$data = array();
	$txt = trim($txt);
	if ($txt) {
		$rows = explode("\n", $txt);
		if (!count($rows) || count($rows) == 1) {
			drupal_set_message(t('Invalid data. Try flushing the cache.'), 'error');
		}
		else {
			$keys = explode(';', $rows[0]);
			for ($i = 1; $i < count($rows); $i++) {
				$row = array_combine($keys, explode(';', $rows[$i]));

				if (!empty($row)) {
					$data[$row['id']] = $row;

					if (!file_exists($sponsoring404_path . '/' . $row['id'])) {
						mkdir($sponsoring404_path . '/' . $row['id'], 0777);
					}

					$local_zip_path = $sponsoring404_path . '/' . $row['id'] . '/' . basename($row['zip']);
					$local_zip = file_put_contents($local_zip_path, file_get_contents($row['zip']));
					if ($local_zip) {
						sponsoring404_unzip($local_zip_path, $sponsoring404_path . '/' . $row['id']);
						if (file_exists($sponsoring404_path . '/' . $row['id'] . '/index.html')) {
							$data[$row['id']]['localhtml'] = $sponsoring404_path . '/' . $row['id'] . '/index.html';
						}
						else {
							$d = dir($sponsoring404_path . '/' . $row['id']);

							$data[$row['id']]['localhtml'] = '';
							while (empty($data[$row['id']]['localhtml']) && false !== ($entry = $d->read())) {
								if ($entry != '.' && $entry != '..' && !is_file($sponsoring404_path . '/' . $row['id'] . '/' . $entry)) {
									if (file_exists($sponsoring404_path . '/' . $row['id'] . '/' . $entry . '/index.html')) {
										$data[$row['id']]['localhtml'] = $sponsoring404_path . '/' . $row['id'] . '/' . $entry . '/index.html';
									}
								}
							}
						}
						
						if ($data[$row['id']]['localhtml']) {
							// Change link.
							$html = file_get_contents($data[$row['id']]['localhtml']);
							$html2 = str_replace('"/"', '"/" target="_top"', $html);
							if ($html != $html2) {
								unlink($data[$row['id']]['localhtml']);
							  file_put_contents($data[$row['id']]['localhtml'], $html2);
							}
						  $data[$row['id']]['localhtml'] = str_replace($_SERVER['DOCUMENT_ROOT'], '', $data[$row['id']]['localhtml']);
						}
					}
				}
			}
		}
	}

	return $data;
}

/**
 * The actual 404 page.
 */
function sponsoring404_page() {
	$settings = variable_get('sponsoring404_begunstigden', array());

	if (empty($settings)) {
		return '404 Page not found.';
	}
	else {
		drupal_add_js('jQuery(document).ready(function () { jQuery("#sponsoring404link").triggerHandler("click"); });', 'inline');
			
		$id = array_rand($settings);
		return '<a id="sponsoring404link" href="' . $settings[$id] . '" rel="lightframe[|width:1000px;height:800px;border:none]">This website sponsors it\'s 404 page. Click here to see the charity.</a>';
	}
}

/**
 * Untars a file (copied and adapted from plugin_manager).
 *
 * @param $file
 *   The file to untar.
 * @return
 *   An array containing the locations of the extracted files.
 */
function sponsoring404_unzip($file, $dir) {
	$zip = new ZipArchive;
	if ($zip->open($file) === TRUE) {
		$zip->extractTo($dir);
		$zip->close();
		return TRUE;
	} else {
		return FALSE;
	}
}