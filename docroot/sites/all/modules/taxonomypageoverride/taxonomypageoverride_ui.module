<?php
/**
 * @file taxonomypageoverride.module
 */


function taxonomypageoverride_form_taxonomy_form_vocabulary_alter(&$form, &$form_state, $form_id) {
  $vocabulary = $form_state['vocabulary'];

  if ($vocabulary->machine_name) {
    $override_page = variable_get('tpo_vocabulary_page_' . $vocabulary->machine_name);
    $override_feed = variable_get('tpo_vocabulary_feed_' . $vocabulary->machine_name);
  }

  // page
  $form['pageoverride']['override_page'] = array(
    '#type' => 'checkbox',
    '#title' => 'Override term page',
    '#description' => t('Use a customized page for all terms of this vocabulary'),
    '#default_value' => $override_page != NULL,
  );
  $form['pageoverride']['override_page_path'] = array(
    '#type' => 'textfield',
    '#title' => 'Path to custom page',
    '#description' => t('Use this path to generate the page for the terms in this vocabulary. Use % as a placeholder for the tid.'),
    '#default_value' => $override_page != NULL ? $override_page['path'] : '',
    '#states' => array(
      'visible' => array(
        ':input[name="override_page"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['pageoverride']['override_page_restore_title'] = array(
    '#type' => 'checkbox',
    '#title' => 'Restore title',
    '#description' => t('Use original page title i.e. term name'),
    '#default_value' => $override_page != NULL ? $override_page['restore_title'] : '',
    '#states' => array(
      'visible' => array(
        ':input[name="override_page"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['pageoverride']['override_page_restore_breadcrumb'] = array(
    '#type' => 'checkbox',
    '#title' => 'Restore breadcrumb',
    '#description' => t('Use original breadcrumb'),
    '#default_value' => $override_page != NULL ? $override_page['restore_breadcrumb'] : '',
    '#states' => array(
      'visible' => array(
        ':input[name="override_page"]' => array('checked' => TRUE),
      ),
    ),
  );

  // feed
  $form['pageoverride']['override_feed'] = array(
    '#type' => 'checkbox',
    '#title' => 'Override term feed',
    '#description' => t('Use a custom handler for all feeds of this vocabulary'),
    '#default_value' => $override_feed != NULL,
  );
  $form['pageoverride']['override_feed_path'] = array(
    '#type' => 'textfield',
    '#title' => 'Path to custom feed',
    '#description' => t('Use this path to generate the feeds for the terms in this vocabulary. Use % as a placeholder for the tid.'),
    '#default_value' => $override_feed != NULL ? $override_feed['path'] : '',
    '#states' => array(
      'visible' => array(
        ':input[name="override_feed"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['feedoverride']['override_feed_restore_title'] = array(
    '#type' => 'checkbox',
    '#title' => 'Restore title',
    '#description' => t('Use original feed title i.e. term name'),
    '#default_value' => $override_feed != NULL ? $override_feed['restore_title'] : '',
    '#states' => array(
      'visible' => array(
        ':input[name="override_feed"]' => array('checked' => TRUE),
      ),
    ),
  );

  $form['#validate'][] = 'taxonomypageoverride_form_taxonomy_form_vocabulary_validate';
  $form['#submit'][] = 'taxonomypageoverride_form_taxonomy_form_vocabulary_submit';
}

function taxonomypageoverride_form_taxonomy_form_vocabulary_validate($form, &$form_state) {
  if ($form_state['values']['override_page']) {
    if (!drupal_valid_path($form_state['values']['override_page_path'], TRUE)) {
      form_error($form['pageoverride']['override_page_path'], t('Please enter an existing path'));
    }
  }

  if ($form_state['values']['override_feed']) {
    if (!drupal_valid_path($form_state['values']['override_feed_path'], TRUE)) {
      form_error($form['feedoverride']['override_feed_path'], t('Please enter an existing path'));
    }
  }
}

function taxonomypageoverride_form_taxonomy_form_vocabulary_submit($form, &$form_state) {
  $vocabulary = $form_state['vocabulary'];

  if ($form_state['values']['override_page']) {
    variable_set('tpo_vocabulary_page_' . $vocabulary->machine_name,
      array(
        'path' => $form_state['values']['override_page_path'],
        'restore_title' => $form_state['values']['override_page_restore_title'],
        'restore_breadcrumb' => $form_state['values']['override_page_restore_breadcrumb'],
      ));
  }
  else {
    variable_del('tpo_vocabulary_page_' . $vocabulary->machine_name);
  }

  if ($form_state['values']['override_feed']) {
    variable_set('tpo_vocabulary_feed_' . $vocabulary->machine_name,
      array(
        'path' => $form_state['values']['override_feed_path']
      ));
  }
  else {
    variable_del('tpo_vocabulary_feed_' . $vocabulary->machine_name);
  }
}


/**
 * Implementation of hook_taxonomypageoverride_path
 */
function taxonomypageoverride_ui_taxonomypageoverride_info() {
  $vocabularies = taxonomy_get_vocabularies();

  foreach($vocabularies as $vocabulary) {
    $page = variable_get('tpo_vocabulary_page_' . $vocabulary->machine_name);
    if ($page) {
      $items['vocabulary'][$vocabulary->machine_name]['page'] = $page;
    }

    $feed = variable_get('tpo_vocabulary_feed_' . $vocabulary->machine_name);
    if ($feed) {
      $items['vocabulary'][$vocabulary->machine_name]['feed'] = $feed;
    }
  }

  return $items;
}
