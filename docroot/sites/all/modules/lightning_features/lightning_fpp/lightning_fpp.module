<?php
/**
 * @file
 * Code for the lightning_fpp feature.
 */

include_once 'lightning_fpp.features.inc';
include_once 'lightning_fpp.widgets.inc';

/**
 * Implements hook_entity_info_alter().
 */
function lightning_fpp_entity_info_alter(&$entity_info) {

  // Add our custom FPP types.
  $fpp_types = _lightning_fpp_fpp_types();
  foreach ($fpp_types as $type => $info) {
    $entity_info['fieldable_panels_pane']['bundles'][$type] = array(
      'label' => t('@title', array('@title' => ucwords($info['title']))),
      'pane category' => t('Custom'),
      'pane top level' => TRUE,
      'pane icon' => $info['icon'],
      'admin' => array(
        'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
        'bundle argument' => 4,
        'real path' => 'admin/structure/fieldable-panels-panes/manage/' . $info['path'],
        'access arguments' => array('administer fieldable panels panes'),
      ),
    );
  }

}

/**
 * Implements hook_migrate_api().
 */
function lightning_fpp_migrate_api() {
  $api = array(
    'api' => 2,
    'migrations' => array(
      'LightningFPPContent' => array('class_name' => 'LightningFPPContent'),
      'LightningFPPContentNodes' => array('class_name' => 'LightningFPPContentNodes'),
    ),
  );
  return $api;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function lightning_fpp_form_views_form_alter(&$form, &$form_state, $form_id) {
  if (!isset($form['entityreference_view_widget'])) {
    return;
  }

  // Change the form submit text from 'Submit' to 'Add'.
  $form['actions_ervw']['ervw_submit']['#value'] = t('Add');
}
