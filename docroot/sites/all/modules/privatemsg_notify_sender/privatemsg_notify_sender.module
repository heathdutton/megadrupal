<?php

/**
 * @file
 * Allows setting a private message's sender's email address
 * as the notification email's "from" header.
 */

/**
 * Implements hook_menu().
 */
function privatemsg_notify_sender_menu() {
  return array(
    'admin/config/messaging/pns_convert' => array(
      'access arguments' => array('administer modules'),
      'type' => MENU_CALLBACK,
      'page callback' => '_privatemsg_notify_sender_user_data_convert',
    ),
  );
}

/**
 * Implements hook_mail_alter().
 */
function privatemsg_notify_sender_mail_alter(&$message) {
  if ($message['id'] == 'pm_email_notify_notice') {
    // Replace the email's sender conditionally.
    global $user;
    $user_setting = _privatemsg_notify_sender_user_data($user);
    if (
      (
        !isset($user_setting)
        &&
        variable_get('privatemsg_setting_show_sender_mail', 0)
      ) || (
        // User's individual settings override global setting.
        isset($user_setting)
        &&
        $user_setting
      )
    ) {
      $message['headers']['Sender'] = $message['headers']['From'] = $user->mail;
      $message['from'] = sprintf("%s <%s>", $user->name, $user->mail);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function privatemsg_notify_sender_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'privatemsg_admin_settings':
      // Prepare checkbox.
      $form['pm_email_notify']['privatemsg_setting_show_sender_mail'] = array(
        '#type' => 'checkbox',
        '#title' => t("Use sender's email address"),
        '#description' => t("Use the sender's private email address instead of a generic sender for notification mails. This is the site default setting; users may override it individually."),
        '#default_value' => variable_get('privatemsg_setting_show_sender_mail', 0),
        '#weight' => 2,
      );
      // Conditionally add conversion messages.
      if (user_access('administer_modules') && db_table_exists('pm_setting')) {
        // Already using privatemsg 2.x
        if (function_exists('_pm_email_notify_show_sender')) {
          // Already using an actual snapshot.
          if (!variable_get('privatemsg_notify_sender_converted', 0)) {
            // Not converted yet.
            drupal_set_message(t("You are using both the privatemsg 2.x branch and privatemsg_notify_sender module. The <em>use sender's email address</em> option is now part of privatemsg. It is recommended that you merge your existing settings and uninstall privatemsg_notify_sender module afterwards. <a href='!conversion_url'>Click here to start the conversion.</a>", array(
              '!conversion_url' => url('admin/config/messaging/pns_convert'),
            )), 'warning');
          }
          else {
            drupal_set_message(t('Please uninstall the privatemsg_notify_sender module. It is no longer needed.'), 'warning');
          }
        }
        else {
          drupal_set_message(t("The <em>use sender's email</em> feature is now part of privatemsg 2.x. You should update your privatemsg installation."), 'warning');
        }
      }
      break;
    case 'user_profile_form':
      if (privatemsg_user_access('read privatemsg')) {
        // The user account in question is already in the form data.
        $account = $form['#user'];
        // Load its status, if available.
        $user_setting = _privatemsg_notify_sender_user_data($account);
        // Create the form element.
        $form['privatemsg']['pm_show_sender_mail'] = array(
          '#type' => 'checkbox',
          '#title' => t('Show my email address'),
          '#description' => t('Use my private email address as a sender for notification mails to users I have sent private messages to. If unchecked, the notification will be sent by a generic account.'),
          '#default_value' => $user_setting !== FALSE ? $user_setting : variable_get('privatemsg_setting_show_sender_mail', 0),
          '#weight' => 1,
          '#access' => privatemsg_user_access('write privatemsg', $account),
        );
        $form['#submit'][] = '_privatemsg_notify_sender_user_data_submit';
      }
      break;
  }
}

/**
 * User settings handler.
 *
 * No longer use the user data object.
 * @see http://drupal.org/node/224333#user_data_change
 *
 * @param $account
 *   The affected user account.
 * @param $new_value (optional)
 *   If provided, the new value to set for the user.
 *
 * @return
 *   The actual value, optionally the new value after saving
 *   or FALSE, if there is no value for either reason.
 */
function _privatemsg_notify_sender_user_data($account, $new_value = NULL) {
  if (is_object($account) && isset($account->uid) && $account->uid) {
    // Only work on valid accounts.
    if (isset($new_value)) {
      // Evaluate the new value to boolean and store it.
      $new_value = (int) (boolean) $new_value;
      db_merge('pm_notify_sender')
        ->key(array('uid' => $account->uid))
        ->fields(array(
          'show_sender_mail' => $new_value,
        ))
        ->execute();
    }
    // db-load the value in any case.
    $ret = db_select('pm_notify_sender', 'p')
      ->fields('p', array('show_sender_mail'))
      ->condition('uid', $account->uid, '=')
      ->execute()
      ->fetchField()
    ;
    return $ret;
  }
}

/**
 * Save data submitted by the user form.
 */
function _privatemsg_notify_sender_user_data_submit($form, &$form_state) {
  _privatemsg_notify_sender_user_data($form['#user'], $form_state['values']['pm_show_sender_mail']);
}

/**
 * Convert settings into privatemsg 2.x settings API.
 */
function _privatemsg_notify_sender_user_data_convert() {
  // Don't work unless privatemsg 2.x is installed.
  if (db_table_exists('pm_setting')) {
    // Don't work, if there already exists at least one 'show_sender_mail' entry
    // in the pm_setting table. This would mean the site admin didn't update properly.
    if (!db_select('pm_setting', 'pms')->fields('pms', array('id'))->condition('setting', 'show_sender_mail', '=')->execute()->fetchField()) {
      // Build the subselect query to insert into pm_setting.
      $source = db_select('pm_notify_sender', 'pns');
      $source->addField('pns', 'show_sender_mail', 'value');
      $source->addField('pns', 'uid', 'id');
      $source->addExpression("'user'", 'type');
      $source->addExpression("'show_sender_mail'", 'setting');
      // Insert into pm_setting.
      db_insert('pm_setting')
        ->from($source)
        ->execute();
      // Make sure the number of settings is equal.
      $source_count = db_select('pm_notify_sender')->countQuery()->execute()->fetchField();
      $dest_count = db_select('pm_setting')
        ->condition('setting', 'show_sender_mail', '=')
        ->condition('type', 'user', '=')
        ->countQuery()
        ->execute()
        ->fetchField();
      if ($source_count == $dest_count) {
        drupal_set_message(t('Successfully converted all !count setting(s).', array(
          '!count' => $source_count,
        )));
        variable_set('privatemsg_notify_sender_converted', 1);
      }
      else {
        drupal_set_message(t('Converted !num_dest of !num_source settings. Sorry, you should counter-check manually.', array(
          '!num_source' => $source_count,
          '!num_dest' => $dest_count,
        )), 'error');
      }
    }
    else {
      drupal_set_message(t('Conversion failed. Some settings have already been updated by pm_email_notify module. Sorry, there is no way back in this case. You need to migrate manually or inform your users to verify their settings.'), 'error');
    }
  }
  else {
    drupal_set_message(t('Conversion failed. Make sure that you have installed the 2.x branch of the privatemsg module.'), 'error');
  }
  drupal_goto('admin/config/messaging/privatemsg');
}
