<?php

/**
 * @file
 * Translate set test file.
 */

/**
 * Test the Translate set functionality.
 */
class TranslateSetTestCase extends DrupalWebTestCase {

  /**
   * The admin user used in this test.
   */
  protected $admin;

  /**
   * The translator user used in this test.
   */
  protected $translator;

  /**
   * A default user with no permissions.
   */
  protected $normal;

  public static function getInfo() {
    return array(
      'name' => 'Translate set',
      'description' => 'All functionality of Translate set.',
      'group' => 'Translate set',
    );
  }

  function setUp() {
    parent::setUp(array('locale', 'translate_set', 'translate_set_test'));
    $this->admin = $this->drupalCreateUser(array('translate interface', 'translate set', 'administer languages for translate set per user', 'manage translate set', 'administer languages', 'administer users', 'administer translate set settings'));
    $this->translator = $this->drupalCreateUser(array('translate set'));
    $this->normal = $this->drupalCreateUser();
  }

  /**
   * Test all Translate set functionality.
   */
  function testTranslateSet() {

    // Assert 403 for all our page callbacks for a normal user.
    $this->drupalLogin($this->normal);
    foreach (array('user/' . $this->normal->uid . '/translate-set', 'admin/config/regional/translate/translate-set', 'admin/config/regional/translate/translate-set-action', 'admin/config/regional/translate/translate-set/manage-set', 'admin/config/regional/translate/translate-set/settings') as $url) {
      $this->drupalGet($url);
      $this->assertResponse(403);
    }

    // Assert 403 for per user url and group action for the translator.
    $this->drupalLogin($this->translator);
    foreach (array('user/' . $this->normal->uid . '/translate-set', 'admin/config/regional/translate/translate-set-action', 'admin/config/regional/translate/translate-set/manage-set', 'admin/config/regional/translate/translate-set/settings') as $url) {
      $this->drupalGet($url);
      $this->assertResponse(403);
    }

    // Assert 200 for 'admin/config/regional/translate/translate-set' and
    // that there are no languages configured.
    $this->drupalGet('admin/config/regional/translate/translate-set');
    $this->assertResponse(200);
    $this->assertText('No languages found to translate to. Either add new languages or contact an administrator.');

    // Login as administrator.
    $this->drupalLogin($this->admin);

    // Assert no languages are available to translate.
    $this->drupalGet('user/' . $this->translator->uid . '/translate-set');
    $this->assertText('No languages found to translate to.');

    // Add new language and assert we now see a form.
    $edit = array('langcode' => 'nl');
    $this->drupalPost('admin/config/regional/language/add', $edit, t('Add language'));
    $this->drupalGet('user/' . $this->translator->uid . '/translate-set');
    $this->assertText('Select languages this user can translate on the Translate set interface. Toggle nothing if you want to allow all.');

    // Add another language so we can test restricting languages.
    $edit = array('langcode' => 'de');
    $this->drupalPost('admin/config/regional/language/add', $edit, t('Add language'));

    // Turn on URL detection method.
    $this->drupalPost('admin/config/regional/language/configure', array('language[enabled][locale-url]' => TRUE), t('Save settings'));

    // Go to the translate interface and test adding/removing strings
    // with the translate-set-action callback. We only have few strings which
    // we can use for now, but that's fine.
    $this->drupalGet('admin/config/regional/translate/translate');
    $this->assertText('add to translate set');

    // Test invalid params.
    $invalid_urls = array(
      'admin/config/regional/translate/translate-set-action',
      'admin/config/regional/translate/translate-set-action/add',
      'admin/config/regional/translate/translate-set-action/remove',
      'admin/config/regional/translate/translate-set-action/invalid',
      'admin/config/regional/translate/translate-set-action//1',
      'admin/config/regional/translate/translate-set-action/invalid/1',
      'admin/config/regional/translate/translate-set-action/add/10000',
    );
    foreach ($invalid_urls as $url) {
      $this->drupalGet($url);
      $this->assertText('Invalid action');
    }

    // Add a string.
    $this->drupalGet('admin/config/regional/translate/translate-set-action/add/1');
    $this->assertText('The string has been added to the translate set.');
    $this->drupalGet('admin/config/regional/translate/translate-set');
    $this->assertText('An AJAX HTTP error occurred.');
    $this->drupalGet('admin/config/regional/translate/translate-set-action/remove/1');
    $this->assertText('The string has been removed from the translate set.');
    $this->drupalGet('admin/config/regional/translate/translate-set');
    $this->assertNoText('An AJAX HTTP error occurred.');

    // Add more strings so we can play with them.
    $this->drupalGet('admin/config/regional/translate/translate-set-action/add/2');
    $this->drupalGet('admin/config/regional/translate/translate-set');
    $this->assertText('HTTP Result Code: !status');
    $this->drupalGet('admin/config/regional/translate/translate-set-action/add/3');
    $this->drupalGet('admin/config/regional/translate/translate-set');
    $this->assertText('An AJAX HTTP request terminated abnormally.');

    // Translate in Dutch.
    $this->assertRaw('<th>Dutch</th>');
    $this->assertText('Number of strings: 2 - Untranslated strings: 2');
    $edit = array(
      'strings[string-3][nl]' => 'Wreed accident',
      'strings[string-2][nl]' => 'Wa\'k terug krijg: !status'
    );
    $this->drupalPost('admin/config/regional/translate/translate-set', $edit, t('Save translations'));
    $this->assertText('Strings saved: 2 created - 0 updated - 0 deleted');
    $this->assertText('Number of strings: 2 - Untranslated strings: 0');
    $edit = array(
      'strings[string-3][nl]' => 'Wreed accident',
      'strings[string-2][nl]' => 'Wa\'k terug krijge: !status'
    );
    $this->drupalPost('admin/config/regional/translate/translate-set', $edit, t('Save translations'));
    $this->assertText('Strings saved: 0 created - 2 updated - 0 deleted');
    $edit = array(
      'strings[string-3][nl]' => '',
    );
    $this->drupalPost('admin/config/regional/translate/translate-set', $edit, t('Save translations'));
    $this->assertText('Strings saved: 0 created - 1 updated - 1 deleted');
    $this->assertText('Number of strings: 2 - Untranslated strings: 1');

    // Use filters.
    $edit = array('select_language' => 'de', 'type' => 'all');
    $this->drupalPost('admin/config/regional/translate/translate-set', $edit, t('Apply'));
    $this->assertText('Number of strings: 2 - Untranslated strings: 2');
    $this->assertRaw('<th>German</th>');

    // Try to go to non-existing language.
    $this->drupalGet('admin/config/regional/translate/translate-set', array('query' => array('language' => 'fr', 'type' => 'all')));
    $this->assertRaw('<th>Dutch</th>');

    // Use type.
    $edit = array('select_language' => 'nl', 'type' => 'untranslated');
    $this->drupalPost('admin/config/regional/translate/translate-set', $edit, t('Apply'));
    $this->assertText('Number of strings: 1 - Untranslated strings: 1');
    $this->assertNoText('HTTP Result Code: !status');
    $this->assertText('An AJAX HTTP request terminated abnormally.');
    $edit = array('select_language' => 'nl', 'type' => 'translated');
    $this->drupalPost('admin/config/regional/translate/translate-set', $edit, t('Apply'));
    $this->assertText('Number of strings: 1 - Untranslated strings: 0');
    $this->assertText('HTTP Result Code: !status');
    $this->assertNoText('An AJAX HTTP request terminated abnormally.');

    // Delete string.
    $edit = array();
    $this->drupalGet('admin/config/regional/translate/translate-set-action/add/4');
    $this->assertTrue(db_query('SELECT lid FROM {locales_translate_set} WHERE lid = :lid', array(':lid' => 4))->fetchField());
    $this->drupalPost('admin/config/regional/translate/delete/4', $edit, t('Delete'));
    $this->assertFalse(db_query('SELECT lid FROM {locales_translate_set} WHERE lid = :lid', array(':lid' => 4))->fetchField());

    // Test the Manage set screen.
    $this->drupalGet('admin/config/regional/translate/translate-set/manage-set');
    $edit = array(
      'strings[string-1][toggle]' => TRUE,
    );
    $this->drupalPost('admin/config/regional/translate/translate-set/manage-set', $edit, t('Save'));
    $this->assertTrue(db_query('SELECT lid FROM {locales_translate_set} WHERE lid = :lid', array(':lid' => 1))->fetchField());
    $this->assertText('Saved translate set: 1 added - 0 deleted');
    $edit = array(
      'strings[string-1][toggle]' => FALSE,
    );
    $this->drupalPost('admin/config/regional/translate/translate-set/manage-set', $edit, t('Save'));
    $this->assertFalse(db_query('SELECT lid FROM {locales_translate_set} WHERE lid = :lid', array(':lid' => 1))->fetchField());
    $this->assertText('Saved translate set: 0 added - 1 deleted');
    $edit = array(
      'strings[string-1][toggle]' => TRUE,
      'strings[string-3][toggle]' => FALSE,
      'strings[string-5][toggle]' => TRUE,
    );
    $this->drupalPost('admin/config/regional/translate/translate-set/manage-set', $edit, t('Save'));
    $this->assertTrue(db_query('SELECT lid FROM {locales_translate_set} WHERE lid = :lid', array(':lid' => 1))->fetchField());
    $this->assertFalse(db_query('SELECT lid FROM {locales_translate_set} WHERE lid = :lid', array(':lid' => 3))->fetchField());
    $this->assertTrue(db_query('SELECT lid FROM {locales_translate_set} WHERE lid = :lid', array(':lid' => 5))->fetchField());
    $this->assertText('Saved translate set: 2 added - 1 deleted');
    $this->assertText('An AJAX HTTP error occurred.');
    $this->assertText('Changes made in this table will not be saved until the form is submitted.');
    $edit = array(
      'only_in_set' => TRUE,
    );
    $this->drupalPost('admin/config/regional/translate/translate-set/manage-set', $edit, t('Apply'));
    $this->assertNoText('Changes made in this table will not be saved until the form is submitted.');
    $this->assertText('An AJAX HTTP error occurred.');

    // Restrict languages for Translator.
    $edit = array(
      'languages[nl]' => 'checked',
    );
    $this->drupalPost('user/' . $this->translator->uid . '/translate-set', $edit, t('Save'));
    $this->assertText(t('The configuration options have been saved.'));
    $this->assertTrue(db_query('SELECT uid FROM {locales_translate_set_user_languages} WHERE language = :language AND uid = :uid', array(':language' => 'nl', ':uid' => $this->translator->uid))->fetchField());

    // Test tracking.
    $this->drupalGet('admin/config/regional/translate/translate-set/settings');
    $edit = array(
      'translate_set_tracking_enabled' => TRUE,

    );
    $this->drupalPost('admin/config/regional/translate/translate-set/settings', $edit, t('Save configuration'));
    $this->assertText('Tracking contexts is required');
    $edit = array(
      'translate_set_tracking_enabled' => TRUE,
      'translate_set_tracking_contexts' => "custom\ncustom:*:wildcard*",
    );
    $this->drupalPost('admin/config/regional/translate/translate-set/settings', $edit, t('Save configuration'));
    $this->drupalGet('nl/translate-set-test-page');
    $this->assertResponse(200);
    $this->drupalGet('admin/config/regional/translate/translate-set');
    $this->assertText('A string with the custom context');
    $this->assertText('A string with the wildcard context');

    // Login as Translator and assert the the German language can not be
    // translated.
    $this->drupalLogin($this->translator);
    $this->drupalGet('admin/config/regional/translate/translate-set');
    $this->assertRaw('<option value="nl"');
    $this->assertNoRaw('<option value="de"');
    $this->assertRaw('<th>Dutch</th>');
    $this->drupalGet('admin/config/regional/translate/translate-set', array('query' => array('language' => 'de', 'type' => 'all')));
    $this->assertText('Number of strings: 5 - Untranslated strings: 4');
    $this->assertRaw('<th>Dutch</th>');

    // Remove Translator.
    $this->drupalLogin($this->admin);
    $edit = array('user_cancel_method' => 'user_cancel_delete');
    $this->drupalPost('user/' . $this->translator->uid . '/cancel', $edit, t('Cancel account'));
    $this->assertFalse(db_query('SELECT uid FROM {locales_translate_set_user_languages} WHERE language = :language AND uid = :uid', array(':language' => 'nl', ':uid' => $this->translator->uid))->fetchField());
  }

}
