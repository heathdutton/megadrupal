<?php
/**
 * @file
 * Provides an cash payment method for Drupal Commerce.
 */

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_manual_payment_commerce_payment_method_info() {
  $payment_methods = array();
  $payment_methods['commerce_manual_payment'] = array(
    'title' => t('Manual payment'),
    'description' => t('Completes an order using a manual payment from the customer.'),
    'active' => TRUE,
    'checkout' => FALSE,
    'terminal' => TRUE,
  );

  return $payment_methods;
}

/**
 * Payment method callback: submit form.
 */
function commerce_manual_payment_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  $form = array();

  // Merge in values from the order.
  if (!empty($order->data['commerce_manual_payment'])) {
    $pane_values += $order->data['commerce_manual_payment'];
  }

  // Merge in default values.
  $pane_values += array(
    'Message' => '',
    'Remote ID' => '',
  );

  $form['remote_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Remote ID'),
    '#description' => t('A remote id to associate with this order.'),
    '#default_value' => $pane_values['remote_id'],
    '#required' => FALSE,
  );

  $form['message'] = array(
    '#type' => 'textfield',
    '#title' => t('Message'),
    '#description' => t('A message to associate with this payment.'),
    '#default_value' => $pane_values['message'],
    '#required' => FALSE,
  );

  return $form;
}

/**
 * Payment method callback: submit form submission.
 */
function commerce_manual_payment_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {
  $order->data['commerce_manual_payment'] = $pane_values;
  commerce_manual_payment_transaction($payment_method, $order, $charge, $pane_values['message'], $pane_values['remote_id']);
}

/**
 * Creates an manual payment transaction for the specified charge amount.
 *
 * @param string $payment_method
 *   The payment method instance object used to charge this payment.
 * @param string $order
 *   The order object the payment applies to.
 * @param string $charge
 *   An array indicating the amount and currency code to charge.
 * @param string $message
 *   The message entered on the submission form.
 * @param string $remote_id
 *   The remote id entered on the submission form.
 */
function commerce_manual_payment_transaction($payment_method, $order, $charge, $message, $remote_id) {
  $transaction = commerce_payment_transaction_new('commerce_manual_payment', $order->order_id);
  $transaction->instance_id = $payment_method['instance_id'];
  $transaction->amount = $charge['amount'];
  $transaction->currency_code = $charge['currency_code'];
  $transaction->status = COMMERCE_PAYMENT_STATUS_SUCCESS;
  $transaction->message = $message;
  $transaction->remote_id = $remote_id;
  commerce_payment_transaction_save($transaction);
}
