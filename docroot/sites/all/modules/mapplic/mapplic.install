<?php
/**
 * @file
 * Mapplic module install tasks.
 */

define("MAPPLIC_THUMB_STYLE", "mapplic_thumb");

/**
 * Implements hook_install().
 */
function mapplic_install() {
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['mapplic_landmark']);
  _mapplic_create_image_styles();
  _mapplic_create_vocabularies();
  _mapplic_add_custom_fields();
}

/**
 * Implements hook_uninstall().
 */
function mapplic_uninstall() {
  $ournewtype = 'Mapplic_landmark';
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => $ournewtype));
  $nodeids = array();
  foreach ($result as $row) {
    $nodeids[] = $row->nid;
  }
  node_delete_multiple($nodeids);
  _mapplic_delete_custom_fields();
  _mapplic_delete_vocabularies();
  node_type_delete($ournewtype);
  _mapplic_delete_image_styles();

  // Delete used variables.
  $used_variables = array(
    'mapplic_height',
    'mapplic_map_height',
    'mapplic_map_width',
    'mapplic_sidebar',
    'mapplic_minimap',
    'mapplic_locations',
    'mapplic_fullscreen',
    'mapplic_hovertip',
    'mapplic_search',
    'mapplic_animate',
    'mapplic_mapfill',
    'mapplic_zoombuttons',
    'mapplic_clearbutton',
    'mapplic_developer_mode',
    'mapplic_zoom',
    'mapplic_max_scale',
  );
  foreach ($used_variables as $variable) {
    variable_del($variable);
  }
  cache_clear_all('variables', 'cache_bootstrap');
  field_purge_batch(500);
}

/**
 * Function to list all vocabulary parameters used by Mapplic.
 */
function _mapplic_used_vocabularies() {
  return array(
    (object) array(
      'name' => 'Mapplic landmark categories',
      'description' => 'This vocabulary is used by the mapplic module to categorize landmarks',
      'machine_name' => 'mapplic_landmark_category',
    ),
    (object) array(
      'name' => 'Mapplic landmark floors',
      'description' => 'This vocabulary is used by the mapplic module to arrange landmarks into floors',
      'machine_name' => 'mapplic_landmark_floor',
    ),
  );
}

/**
 * Function to create default vocabularies.
 */
function _mapplic_create_vocabularies() {
  foreach (_mapplic_used_vocabularies() as $vocabulary) {
    taxonomy_vocabulary_save($vocabulary);
  }

  // Adding the default floor term to the vocabulary.
  $vocab = taxonomy_vocabulary_machine_name_load('mapplic_landmark_floor');
  $term = (object) array(
    'name' => 'Basement',
    'vid' => $vocab->vid,
  );
  taxonomy_term_save($term);
}

/**
 * Function to delete the default vocabularies.
 */
function _mapplic_delete_vocabularies() {
  foreach (_mapplic_used_vocabularies() as $vocabulary) {
    $vocabulary_del = taxonomy_vocabulary_machine_name_load($vocabulary->machine_name);
    taxonomy_vocabulary_delete($vocabulary_del->vid);
  }
}

/**
 * Function to create default image styles.
 */
function _mapplic_create_image_styles() {
  $style = image_style_save(array('name' => MAPPLIC_THUMB_STYLE));
  $effect = array(
    'name' => 'image_scale',
    'data' => array(
      'width' => 50,
      'height' => 50,
      'upscale' => TRUE,
    ),
    'isid' => $style['isid'],
  );
  image_effect_save($effect);
}


/**
 * Function to delete default image styles.
 */
function _mapplic_delete_image_styles() {
  $style = image_style_load(MAPPLIC_THUMB_STYLE);
  image_style_delete($style);
}


/**
 * Function to define fields for the content type.
 */
function _mapplic_fields() {
  $t = get_t();
  return array(
    'mapplic_svg_id' => array(
      'field_name' => 'mapplic_svg_id',
      'label' => $t('ID of the landmark in the SVG file'),
      'type' => 'text',
    ),
    'mapplic_pos_x' => array(
      'field_name' => 'mapplic_pos_x',
      'label' => $t('X position of the landmark on the Mapplic map'),
      'type' => 'number_float',
    ),
    'mapplic_pos_y' => array(
      'field_name' => 'mapplic_pos_y',
      'label' => $t('Y position of the landmark on the Mapplic map'),
      'type' => 'number_float',
    ),
    'mapplic_thumb' => array(
      'field_name' => 'mapplic_thumb',
      'label' => $t('Thumbnail for the landmark'),
      'type' => 'image',
    ),
    'mapplic_map_svg' => array(
      'field_name' => 'mapplic_map_svg',
      'label' => $t('SVG map file'),
      'type' => 'file',
    ),
    'mapplic_map_jpg' => array(
      'field_name' => 'mapplic_map_jpg',
      'label' => $t('Overview image of the map'),
      'type' => 'image',
    ),
    'mapplic_category' => array(
      'field_name' => 'mapplic_category',
      'label' => $t('Category of the landmark'),
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array('vocabulary' => 'mapplic_landmark_category', 'parent' => 0),
        ),
      ),
    ),
    'mapplic_floor' => array(
      'field_name' => 'mapplic_floor',
      'label' => $t('Floor of the landmark'),
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array('vocabulary' => 'mapplic_landmark_floor', 'parent' => 0),
        ),
      ),
    ),
  );
}

/**
 * Function to create default field instances.
 */
function _mapplic_landmark_field_instances() {
  $t = get_t();
  return array(
    'mapplic_svg_id' => array(
      'field_name' => 'mapplic_svg_id',
      'type' => 'text',
      'label' => $t('ID of the landmark in the SVG file'),
      'widget' => array(
        'type' => 'text_textfield',
      ),
    ),
    'mapplic_pos_x' => array(
      'field_name' => 'mapplic_pos_x',
      'type' => 'number_float',
      'label' => $t('X position of the landmark on the Mapplic map'),
      'widget' => array(
        'type' => 'number',
      ),
    ),
    'mapplic_pos_y' => array(
      'field_name' => 'mapplic_pos_y',
      'type' => 'number_float',
      'label' => $t('Y position of the landmark on the Mapplic map'),
      'widget' => array(
        'type' => 'number',
      ),
    ),
    'mapplic_thumb' => array(
      'field_name' => 'mapplic_thumb',
      'type' => 'image',
      'label' => $t('Thumbnail for the landmark'),
      'widget' => array(
        'type' => 'image',
      ),
      'settings' => array(
        'file_extensions' => 'png jpg jpeg',
        'file_directory' => 'mapplic_thumbs',
        'max_filesize' => '20 MB',
        'alt_field' => 0,
        'title_field' => 0,
        'min_resolution' => '50x50',
        'default_image' => 0,
      ),
    ),
    'mapplic_category' => array(
      'field_name' => 'mapplic_category',
      'type' => 'taxonomy_term_reference',
      'label' => $t('Category of the landmark'),
      'widget' => array(
        'type' => 'options_select',
      ),
    ),
    'mapplic_floor' => array(
      'field_name' => 'mapplic_floor',
      'type' => 'taxonomy_term_reference',
      'label' => $t('Floor of the landmark'),
      'widget' => array(
        'type' => 'options_select',
      ),
    ),
  );
}

/**
 * Function to create default field instances.
 */
function _mapplic_floor_field_instances() {
  $t = get_t();
  return array(
    'mapplic_map_svg' => array(
      'field_name' => 'mapplic_map_svg',
      'type' => 'file',
      'label' => $t('SVG map file'),
      'widget' => array(
        'type' => 'file',
      ),
      'settings' => array(
        'file_extensions' => 'svg',
        'file_directory' => 'mapplic_map_svg',
      ),
    ),
    'mapplic_map_jpg' => array(
      'field_name' => 'mapplic_map_jpg',
      'type' => 'image',
      'label' => $t('Overview image of the map'),
      'widget' => array(
        'type' => 'image',
      ),
      'settings' => array(
        'file_extensions' => 'jpg',
        'file_directory' => 'mapplic_map_jpg',
        'alt_field' => 0,
        'title_field' => 0,
        'default_image' => 0,
      ),
    ),
  );
}

/**
 * Function to create custom fields for the content type.
 */
function _mapplic_add_custom_fields() {
  foreach (_mapplic_fields() as $field) {
    field_create_field($field);
  }
  // Creating the landmark CT instances.
  foreach (_mapplic_landmark_field_instances() as $fieldinstance) {
    $fieldinstance['entity_type'] = 'node';
    $fieldinstance['bundle'] = 'mapplic_landmark';
    field_create_instance($fieldinstance);
  }
  // Creating the floor taxonomy instances.
  foreach (_mapplic_floor_field_instances() as $fieldinstance) {
    $fieldinstance['entity_type'] = 'taxonomy_term';
    $fieldinstance['bundle'] = 'mapplic_landmark_floor';
    field_create_instance($fieldinstance);
  }
}

/**
 * Function to delete custom fields for the content type.
 */
function _mapplic_delete_custom_fields() {
  // Creating the landmark CT instances.
  $instances = field_info_instances('node', 'mapplic_landmark');
  foreach ($instances as $fieldinstance) {
    field_delete_instance($fieldinstance);
  }
  // Deleting the floor taxonomy instances.
  $instances = field_info_instances('node', 'mapplic_landmark');
  foreach ($instances as $fieldinstance) {
    field_delete_instance($fieldinstance);
  }
  foreach (array_keys(_mapplic_fields()) as $field) {
    field_delete_field($field);
  }
}
