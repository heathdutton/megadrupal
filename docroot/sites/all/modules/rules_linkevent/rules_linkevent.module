<?php

/**
 * Implements hook_menu().
 */
function rules_linkevent_menu() {
  $items = array();

  $items['admin/config/workflow/rules/links'] = array(
    'title' => t('Links'),
    'description' => t('Create special links that act as actions to trigger rules'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rules_linkevent_page_admin'),
    'access arguments' => array('configure linkevent'),
    'type' => MENU_LOCAL_TASK,
  );

  foreach (rules_linkevent_get_links() as $link) {
    $items[$link->path] = array(
      'page callback' => 'rules_linkevent_dispatch',
      'page arguments' => array($link->name),
      'access arguments' => array('access content'),
      'title' => check_plain($link->label),
      'type' => MENU_CALLBACK,
    );
  }

  return $items;
}

/**
 * Implements hook_permission().
 */
function rules_linkevent_permission() {
  return array(
    'configure linkevent' => array(
      'title' => 'Configure Rules link event',
    ),
  );
}

/**
 * Administration page.
 *
 * @todo Build a nice UI for this.
 */
function rules_linkevent_page_admin() {
  $form = array();

  $form['rules_linkevent'] = array(
    '#type' => 'textarea',
    '#title' => t('Links'),
    '#description' => t('Enter your links in the form machine_name|path|label, e.g. "purchase|shop/buye/%|Quick cart add link"'),
    '#default_value' => variable_get('rules_linkevent', ''),
  );

  $form['#submit'][] = 'rules_linkevent_page_admin_submit';

  return system_settings_form($form);
}

/**
 * Administration page submit.
 */
function rules_linkevent_page_admin_submit($form, $form_state) {
  menu_rebuild();
  drupal_set_message(t('Menu rebuilt'));
}

/**
 * Return all configured links.
 *
 * @todo This is a temporary cludge, this should pull the links from the database table.
 */
function rules_linkevent_get_links() {
  $rules_string = variable_get('rules_linkevent', '');

  $rules_list = array();

  if (!empty($rules_string)) {
    $rules_list = explode("\n", $rules_string);
  }

  $rules = array();
  foreach ($rules_list as $rule) {
    $rule_parts = explode("|", $rule);
    if (count($rule_parts) > 1) {
      $link = new stdClass;
      $link->name = $rule_parts[0];
      $link->path = $rule_parts[1];
      $link->label = $rule_parts[2];
      $rules[] = $link;
    }
  }
  return $rules;
}

/**
 * Dispatch the rules event.
 *
 * @todo Pass variables to the event in a useful way.
 */
function rules_linkevent_dispatch($rule_name) {
  rules_invoke_event('rules_linkevent_' . $rule_name, arg());
  drupal_goto();
}
