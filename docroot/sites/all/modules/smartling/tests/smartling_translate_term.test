<?php

/**
 * @file
 * Tests for smartling.
 */

/**
 * SmartlingTranslateTermTest.
 */
class SmartlingTranslateTermTest extends SmartlingWebTestCase {
  /**
   * Test info.
   *
   * @return array
   *   Return test info.
   */
  public static function getInfo() {
    return array(
      'name' => 'Content - Translate taxonomy term',
      'description' => 'Test translate taxonomy term by fields and entities method.',
      'group' => 'Smartling',
    );
  }

  /**
   * TestCorrectTranslateTermWithEntitiesMethod.
   */
  public function testCorrectTranslateTermWithEntitiesMethod() {
    // Add demo content.
    module_enable(array('smartling_demo_content'));
    // Set correct account settings.
    $this->smartlingSetCorrectSettings();
    // Set pseudo for smartling.
    $this->smartlingSetRetrievalType('pseudo');
    // Set method.
    $this->smartlingSetTermMethodSettings('travel');
    // Set fields.
    $this->smartlingSetTermFieldSettings('travel', 'name_property_field');
    $this->drupalGet('taxonomy/term/1');
    // Translate.
    $this->smartlingUploadDownloadTerm(1, array('nl'));
    $this->drupalGet('taxonomy/term/6');

    $original_term = taxonomy_term_load(1);
    $translate_term = taxonomy_term_load(6);

    // Check.
    $this->assertTrue(($translate_term->i18n_tsid == 1), t('Translate i18n_tsid = 1'), t('Browser'));
    $this->assertTrue(($original_term->name != $translate_term->name), t('Original name != translated name for NL'), t('Browser'));
  }

  /**
   * TestCorrectTranslateTermWithFieldsMethod.
   */
  public function testCorrectTranslateTermWithFieldsMethod() {
    // Add demo content.
    module_enable(array('smartling_demo_content'));
    // Set correct account settings.
    $this->smartlingSetCorrectSettings();
    // Set pseudo for smartling.
    $this->smartlingSetRetrievalType('pseudo');
    // Set method.
    $this->smartlingSetTermMethodSettings('travel', 1);
    // Set fields.
    $this->smartlingSetTermFieldSettings('travel', 'name', TRUE);
    $this->drupalGet('taxonomy/term/1');
    // Translate.
    $this->smartlingUploadDownloadTerm(1, array('nl'));


    $original_term = entity_load('taxonomy_term', array(1), array(), TRUE);
    $original_term = $original_term[1];

    // Check.
    $this->assertTrue(($original_term->name_field['en'][0]['value'] != $original_term->name_field['nl'][0]['value']), t('Original name != translated name for NL'), t('Browser'));
  }

}
