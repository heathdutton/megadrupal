<?php
/**
 * Installation and uninstallation procedures for uc_node_attributes.
 */

/**
 * Implements hook_schema().
 */
function uc_product_as_attribute_option_schema() {
  $schema['uc_product_as_attribute_option'] = array(
    'description' => 'Maps attribute options to nodes.',
    'fields' => array(
      'oid' => array(
        'description' => 'Primary key: the option ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'The {node}.nid of the associated node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('oid'),
    'indexes' => array(
      'nid' => array('nid'),
    ),
    'foreign keys' => array(
      'uc_attributes_options' => array(
        'table' => 'uc_attributes_options',
        'columns' => array('oid' => 'oid'),
      ),
      'node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function uc_product_as_attribute_option_uninstall() {
  variable_del('uc_node_attribute_cart_display');
}

/**
 * Remove configuration for associated products for attribute options that have
 * been deleted.
 */
function uc_product_as_attribute_option_update_7101($node) {
  $oids = db_query("SELECT ucpao.oid FROM {uc_product_as_attribute_option} ucpao LEFT JOIN {uc_attribute_options} ucao ON ucpao.oid = ucao.oid WHERE ucao.oid IS NULL")->fetchCol();
  if ($oids) {
    db_query("DELETE FROM {uc_product_as_attribute_option} WHERE oid IN (:oids)", array(':oids' => $oids));
  }
}
