<?php

/**
 * @file
 * Enables Pure360 Email Integration in system emails.
 */
 
 /**
 * Implements hook_menu().
 */
function pure360_menu() {
	$items['admin/settings/pure360'] = array(
	'title' => 'Pure360 Configuration',
	'description' => 'Configure Pure360 Mail system-wide settings.',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('pure360_admin_settings'),
	'access arguments' => array('administer site configuration'),
	'file' => 'pure360.admin.inc',
	);
	$items['admin/settings/pure360/settings'] = array(
		'title' => 'Settings',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => '-2'
	);
	$items['admin/settings/pure360/test'] = array(
		'title' => 'Send Test',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('pure360_test_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_LOCAL_TASK,
		'file' => 'pure360.admin.inc',
	);
	return $items;
}

 /**
 * Implements drupal_mail_wrapper().
 */
function drupal_mail_wrapper($message) {
	try {
		/*------------------------------------
		* CREATION OF EMAIL DELIVERY
		*------------------------------------
		*/
		$deliveryOutput = null;
		$deliveryId		= null;
		$paint = new PaintMethods();
		$paint->loginName = variable_get('pure360_username', 'username.sys');
		$paint->password = variable_get('pure360_password', 'password');
		$paint->proxy_host = variable_get('proxy_host', '');
		$paint->proxy_port = variable_get('proxy_port', '');
		$paint->proxy_username = variable_get('proxy_username', '');
		$paint->proxy_password = variable_get('proxy_password', '');
		$paint->login();
		$paint->createEmail($message['subject'], $message['subject'], 
		$message['body'], nl2br($message['body']));
		/*
		*------------------------------------
		* CREATION OF ONE TO ONE DELIVERY
		*------------------------------------
		*/
		$paint->createOne2One($message['to'], $message['subject'], null);
		if (isset($message['test']))
		watchdog('pure360_mail', 'Test Mail sent successfully<pre>%debug</pre>',
		array('%debug' => print_r($message,true)),WATCHDOG_INFO);
		else {
			unset($message['body'],$message['language'],
			$message['params'],$message['headers']);
			watchdog('pure360_mail', 'Mail sent successfully<pre>%debug</pre>',
			array('%debug' => print_r($message,true)),WATCHDOG_INFO);
		}
		$paint->logout();
		return TRUE;
	}
	catch (PaintValidationException $pve) {
		watchdog('pure360_error', 'Validation Error<br/><br/>%error<br/>
		<br/>To: %to<br/>Subject: %subject',
		array(
			'%error' => $paint->convertResultToDebugString($pve->getErrors()),
			'%to' => $message['to'],'%subject' => $message['subject']
		),WATCHDOG_ERROR);
	}
	catch (PaintSecurityException $psece)	{
		watchdog('pure360_error', 'Security Exception<br/><br/>%error<br/><br/>
		To: %to<br/>Subject: %subject',
		array(
			'%error' => $psece->getMessage(),
			'%to' => $message['to'],
			'%subject' => $message['subject']
		),WATCHDOG_ERROR);
	}
	catch (PaintSystemException $pse)	{
		watchdog('pure360_error', 'System Exception<br/><br/>%error<br/><br/>
		To: %to<br/>Subject: %subject',
		array(
			'%error' => $pse->getMessage(),
			'%to' => $message['to'],
			'%subject' => $message['subject']
		),WATCHDOG_ERROR);
	}
	catch (Exception $exp) {
		watchdog('pure360_error', 'Unhandled Exception<br/><br/>%error<br/><br/>
		To: %to<br/>Subject: %subject',
		array(
			'%error' => $exp->getMessage(),
			'%to' => $message['to'],
			'%subject' => $message['subject']
		),WATCHDOG_ERROR);
	}
}

/**
 * Implements pure360_appendList().
 * First argument should be match with your Pure360 Contact list.
 * In Second Arguments you need to specify your data as string. Where first row
 * will have your column with comma separator(,) and from second line you need specify
 * your column data with comma separator.
 * Third arguments for email where Pure360 will notify you after successfully creation.
 */
function pure360_appendList($listName, $listDataSource, $notifyUri) {
	try {
		include_once './'. variable_get('smtp_library', '');
		$paint = new PaintMethods();
		$paint->loginName = variable_get('pure360_username', 'username.sys');
		$paint->password = variable_get('pure360_password', 'password');
		$paint->proxy_host = variable_get('proxy_host', '');
		$paint->proxy_port = variable_get('proxy_port', '');
		$paint->proxy_username = variable_get('proxy_username', '');
		$paint->proxy_password = variable_get('proxy_password', '');
		$paint->login();
		$response = $paint->appendList($listName, $listDataSource, $notifyUri);
		$paint->logout();
		return $response;
	}
	catch (PaintValidationException $pve) {
		watchdog('pure360_error', 'Validation Error<br/><br/>%error',
		array(
			'%error' => $paint->convertResultToDebugString($pve->getErrors())
		),WATCHDOG_ERROR);
	}
	catch (PaintSecurityException $psece)	{
		watchdog('pure360_error', 'Security Exception<br/><br/>%error',
		array(
			'%error' => $psece->getMessage()
		),WATCHDOG_ERROR);
	}
	catch (PaintSystemException $pse)	{
		watchdog('pure360_error', 'System Exception<br/><br/>%error',
		array(
			'%error' => $pse->getMessage()
		),WATCHDOG_ERROR);
	}
	catch (Exception $exp) {
		watchdog('pure360_error', 'Unhandled Exception<br/><br/>%error',
		array(
			'%error' => $exp->getMessage()
		),WATCHDOG_ERROR);
	}
}
