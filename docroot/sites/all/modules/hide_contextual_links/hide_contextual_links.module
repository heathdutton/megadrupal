<?php
function hide_contextual_links_permission() {
  return array(
    'administer contextual links' => array(
      'title' => t('Administer contextual links'), 
      'description' => t('Provides the ability to disable contextual links on a per block basis.'),
    ),
  );
}
function hide_contextual_links_form_alter(&$form, &$form_state, $form_id) {
  // Retrieve the current setting for the block
  if ($form_id == 'block_admin_configure' && user_access('administer contextual links')) {
    $form['contextual_links'] = array(
      '#type' => 'fieldset',
      '#title' => t('Contextual Links'),
      '#weight' => 1,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
    $form['contextual_links']['hide_contextual_link'] = array(
      '#type' => 'checkbox',
      '#title' => t('Hide this block\'s contextual link'),
//      '#default_value' => $result[0]
      '#default_value' => hide_contextual_links_is_hidden($form['delta']['#value']),
    );
    $form['#submit'][] = 'hide_contextual_links_block_form_submit';
  }
  if ($form_id == 'block_custom_block_delete') {
    $form['#submit'][] = 'hide_contextual_links_block_custom_block_delete_submit';
  }
}

function hide_contextual_links_block_form_submit($form, &$form_state) {
  // Get the block id
  $delta = $form_state['build_info']['args'][1];
  // Get the contextual link setting
  $hcl = $form_state['values']['hide_contextual_link'];
  // Get the stored setting for this block if any.
  // There is a setting for this block already and the setting in the form is to disable it.
  // Delete it
  if (!$hcl) {
    if (hide_contextual_links_is_hidden($delta)) {
      $bid_deleted = db_delete('hide_contextual_links')
        ->condition('delta', $delta)
        ->execute();
    }
  } 
  elseif ($hcl) {
    if (!hide_contextual_links_is_hidden($delta)) {
      $bid_inserted = db_insert('hide_contextual_links')
        ->fields(array('delta' => $delta))
        ->execute();
    }
  }
}
/* When a block is deleted, delete it's matching delta in the "hide_contextual_links" table
 */
function hide_contextual_links_block_custom_block_delete_submit($form, &$form_state) {
  $delta_deleted = db_delete('hide_contextual_links')
    ->condition('delta', $form_state['build_info']['args'][1])
    ->execute();
}

/**
* Return TRUE if given block delta should be hidden and FALSE if visible.
*/
function hide_contextual_links_is_hidden($block_delta) {
  $settings = &drupal_static(__FUNCTION__);
  if (!isset($settings)) {
    $settings = db_select('hide_contextual_links', 'hcl')
      ->fields('hcl', array('delta'))
      ->execute()
      ->fetchCol();
  }
  return in_array($block_delta, $settings);
}

/**
* Implements hook_contextual_links_view_alter().
*/
function hide_contextual_links_contextual_links_view_alter(&$element, $items) {
  if (isset($element['#element']['#block']) && hide_contextual_links_is_hidden($element['#element']['#block']->delta)) {
    unset($element['#links']);
  }
}