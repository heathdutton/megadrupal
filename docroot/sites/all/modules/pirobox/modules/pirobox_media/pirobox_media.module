<?php
/**
 * @file
 * Provides Media module support for the Pirobox module.
 */

/**
 * Implements hook_field_formatter_info().
 */
function pirobox_media_field_formatter_info() {
  $formatters = array(
    'pirobox_media' => array(
      'label' => t('Media (Pirobox)'),
      'field types' => array('media'),
      'settings' => pirobox_field_formatter_get_settings()
    )
  );

  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function pirobox_media_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];

  $element = pirobox_field_formatter_settings_form_get_element($field, $instance, $view_mode, $form);

  /**
   * Media module not support image description to use for pirobox caption.
   *
   * @todo Check Media module if support available.
   */
  if ($display['type'] == 'pirobox_media') {
    unset($element['pirobox_caption']['#options']['title']);
    unset($element['pirobox_caption']['#options']['alt']);
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function pirobox_media_field_formatter_settings_summary($field, $instance, $view_mode) {
  $summary = pirobox_field_formatter_settings_summary_get_summary($field, $instance, $view_mode);

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function pirobox_media_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  $i = 1;
  foreach ($items as $delta => $item) {
    if ($display['type'] == 'pirobox_media') {
      $element[$delta] = array(
        '#theme' => 'pirobox_formatter',
        '#item' => (array) $item['file'],
        '#entity_type' => $entity_type,
        '#entity' => $entity,
        '#field' => $field,
        '#display_settings' => $display['settings'],
        '#cover_class' => ' gallerycover'
      );
      if ($i > 1 && $display['settings']['pirobox_gallery_covering'] == TRUE) {
        $element[$delta]['#cover_class'] = ' gallerycover-no';
      }
      ++$i;
    }
  }

  return $element;
}

/**
 * Implements hook_field_formatter_prepare_view().
 */
function pirobox_media_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays) {
  // Collect all file ids that need loading.
  $fids = array();
  foreach ($entities as $id => $entity) {
    foreach ($items[$id] as $delta => $item) {
      if (is_array($item) && !empty($item['fid'])) {
        $fids[$item['fid']] = $item['fid'];
      }
    }
  }
  // Load the files and add the loaded file entity to the item data.
  $files = file_load_multiple(array_values($fids));
  foreach ($entities as $id => $entity) {
    foreach ($items[$id] as $delta => $item) {
      if (is_array($item) && !empty($item['fid'])) {
        $items[$id][$delta]['file'] = $files[$item['fid']];
      }
    }
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function pirobox_media_field_widget_form_alter(&$element, &$form_state, $context) {
  // Provide content editors an information if gallery covering active.
  // This hook requires Drupal 7.8 or higher.
  if ($context['field']['type'] != 'media') {
    return;
  }

  $instance = $context['instance'];

  $extend = FALSE;
  foreach (element_children($instance['display']) as $display) {
    if ($instance['display'][$display]['type'] != 'pirobox_media' || count($instance['display'][$display]['settings']) == 0) {
      continue;
    }
    if ($instance['display'][$display]['settings']['pirobox_gallery_covering'] == TRUE) {
      $extend = TRUE;
    }
  }

  if ($extend == TRUE && $element['#delta'] == 0) {
    $element['filename']['#markup'] = '<div class="description">' . _pirobox_get_covering_message() . '</div>';
  }
}
