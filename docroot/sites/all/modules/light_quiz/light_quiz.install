<?php

/**
 * Implementation of hook_schema().
 */
function light_quiz_schema() {
  $schema = array();

  $schema['light_quiz_results'] = array(
    'fields' => array(
      'id' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'Test ID',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'User ID.',
      ),
      'percentage' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The percentage of correct answers.',
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'unique keys' => array(
      'id_uid' => array('id', 'uid'),
    ),
    'foreign keys' => array(
      'account' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'indexes' => array(
      'timestamp' => array('timestamp'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function light_quiz_requirements($phase) {
  $t = get_t();
  $requirements = array();

  if ($phase == 'runtime') {
    $libs = array(
      'angular-timer' => array(
        'url' => 'http://siddii.github.io/angular-timer/',
        'path' => 'dist/angular-timer.js',
      ),
      'humanize-duration' => array(
        'url' => 'https://github.com/EvanHahn/HumanizeDuration.js',
        'path' => 'humanize-duration.js',
      ),
      'moment' => array(
        'url' => 'http://momentjs.com',
        'path' => 'moment.js',
      ),
    );

    foreach ($libs as $name => $info) {
      $path = libraries_get_path($name);

      if (!$path || !is_file($path . '/' . $info['path'])) {
        $requirements['light_quiz:' . $name] = array(
          'title' => 'Light Quiz',
          'value' => $t('The library %path does not exist! Please, install !name.', array(
            '%path' => 'sites/all/libraries/' . $info['path'],
            '!name' => l($name, $info['url']),
          )),
          'severity' => REQUIREMENT_ERROR,
        );
      }
    }
  }

  // Check AngularJS version.
  $angularjs_version = variable_get('angularjs_version', ANGULARJS_DEFAULT_VERSION);
  if (version_compare($angularjs_version, '1.3.4') < 0) {
    $requirements['light_quiz:angularjs_version'] = array(
      'title' => 'Light Quiz',
      'value' => $t('Current version of AngularJS is %current_version. It should be >= %required_version. !settings.', array(
        '%required_version' => '1.3.4',
        '%current_version' => $angularjs_version,
        '!settings' => l($t('AngularJS settings'), 'admin/config/development/angularjs'),
      )),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  // Check angular-route lib.
  if (!array_search('angular-route', variable_get('angularjs_files', array()))) {
    $requirements['light_quiz:angular-route'] = array(
      'title' => 'Light Quiz',
      'value' => $t('%library library is required to be loaded. !settings.', array(
        '%library' => 'angular-route',
        '!settings' => l($t('AngularJS settings'), 'admin/config/development/angularjs'),
      )),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  // Check angular-sanitize lib.
  if (!array_search('angular-sanitize', variable_get('angularjs_files', array()))) {
    $requirements['light_quiz:angular-sanitize'] = array(
      'title' => 'Light Quiz',
      'value' => $t('%library library is required to be loaded. !settings.', array(
        '%library' => 'angular-sanitize',
        '!settings' => l($t('AngularJS settings'), 'admin/config/development/angularjs'),
      )),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  return $requirements;
}
