<?php

/**
 * Implements hook_menu().
 */
function light_quiz_menu() {
  $items = array();

  $items['quizzes'] = array(
    'title' => 'Quizzes',
    'page callback' => 'light_quiz_list_page',
    'access arguments' => array('light_quiz: access statistics'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'light_quiz.pages.inc',
  );

  $items['quiz/%light_quiz'] = array(
    'title callback' => 'light_quiz_page_title',
    'title arguments' => array(1),
    'page callback' => 'light_quiz_page',
    'page arguments' => array(1),
    'access callback' => 'light_quiz_view_access',
    'access arguments' => array(1),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'light_quiz.pages.inc',
  );

  $items['api/light-quiz/result-incoming'] = array(
    'title' => 'Result',
    'page callback' => 'light_quiz_result_incoming',
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
    'file' => 'light_quiz.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function light_quiz_permission() {
  $permissions = array();

  $permissions['light_quiz: access statistics'] = array(
    'title' => t('Access statistics'),
    'description' => t('Allows users to access statistics'),
  );

  foreach (_light_quiz_load_tests() as $id => $test) {
    $permissions['light_quiz: access ' . $id] = array(
      'title' => t('Access %test', array('%test' => $test['name'])),
      'description' => t('Allows users to access %test test.', array('%test' => $test['name'])),
    );
  }

  return $permissions;
}

/**
 * Test view access callback.
 *
 * @param $test
 */
function light_quiz_view_access($test) {
  return user_access('light_quiz: access ' . $test['_id']);
}

/**
 * Loads a test object.
 *
 * @param $id
 *   The test ID.
 *
 * @return
 *   A fully-populated test object, or FALSE if the node is not found.
 */
function light_quiz_load($id) {
  $tests = _light_quiz_load_tests();
  return $tests[$id];
}

function _light_quiz_load_tests() {
  //@TODO: add static caching.
  $dir = 'sites/all/imports/light_quiz';
  $files = file_scan_directory($dir, '/\.json/', array('recurse' => TRUE));

  $output = array();

  foreach ($files as $file) {
    $test = drupal_json_decode(file_get_contents($file->uri));
    $output[$test['_id']] = $test;
  }

  return $output;
}

/**
 * Implements hook_theme().
 */
function light_quiz_theme($existing, $type, $theme, $path) {
  return array(
    'light_quiz' => array(
      'path' => $path .'/templates',
      'template' => 'light-quiz',
      'variables' => array(),
    ),

    'light_quiz_stats' => array(
      'path' => $path .'/templates',
      'template' => 'light-quiz--stats',
      'variables' => array(),
    ),
    
    'light_quiz_test' => array(
      'path' => $path .'/templates',
      'template' => 'light-quiz--test',
      'variables' => array(),
    ),
    'light_quiz_question' => array(
      'path' => $path .'/templates',
      'template' => 'light-quiz--question',
      'variables' => array(),
    ),
    'light_quiz_result' => array(
      'path' => $path .'/templates',
      'template' => 'light-quiz--result',
      'variables' => array(),
    ),
    'light_quiz_feedback' => array(
      'path' => $path .'/templates',
      'template' => 'light-quiz--feedback',
      'variables' => array(),
    ),
  );
}

/**
 * Implements template_preprocess_theme().
 */
function template_preprocess_light_quiz(&$vars) {
  // Attach dependencies.
  drupal_add_library('angularjs', 'angularjs');

  drupal_add_js(libraries_get_path('angular-timer') . '/dist/angular-timer.js');
  drupal_add_js(libraries_get_path('humanize-duration') . '/humanize-duration.js');
  drupal_add_js(libraries_get_path('moment') . '/moment.js');

  drupal_add_js(array(
    'light_quiz' => array(
      'test' => $vars['test'],
    ),
  ), 'setting');

  // Attach application.
  $module_path = drupal_get_path('module', 'light_quiz');
  drupal_add_js($module_path . '/js/light-quiz--app.js');
  drupal_add_js($module_path . '/js/light-quiz--controllers.js');
  drupal_add_js($module_path . '/js/light-quiz--services.js');
}
