<?php
// $Id$

/**
 * Implements hook_node_view().
 */
function denynodenidpath_node_view($node, $view_mode, $langcode) {
  if ($view_mode == 'full' && arg(0) == 'node' && arg(1) == $node->nid) {
    // Is node page view block active on this type?
    if (variable_get('denynodenidpath_enable_' . $node->type, 0)) {
      // Get the redirect destination.
      $redirect = variable_get('denynodenidpath_redirect_' . $node->type, '');
      
      // If empty, get default 403.
      if (!$redirect) {
        $redirect = variable_get('site_403', '');
      }
      
      // If !empty -> redirect, else goto homepage.
      if ($redirect) {
        drupal_goto($redirect);
      }
      else {
        drupal_goto();
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function denynodenidpath_form_node_type_form_alter(&$form, &$form_state, $form_id) {
  $form ['denynodenidpath'] = array(
      '#type' => 'fieldset', 
      '#title' => t('Deny node/nid path'), 
      '#collapsible' => TRUE, 
      '#collapsed' => TRUE, 
      '#group' => 'additional_settings' );
  $form ['denynodenidpath'] ['denynodenidpath_enable'] = array(
      '#title' => t('Block page view of this node'), 
      '#type' => 'checkbox', 
      '#default_value' => variable_get('denynodenidpath_enable_' . $form ['#node_type']->type, 0), 
      '#options' => array(
          0, 
          1 ) );
  $form ['denynodenidpath'] ['denynodenidpath_redirect'] = array(
      '#title' => t('Redirect to'), 
      '#type' => 'textfield', 
      '#default_value' => variable_get('denynodenidpath_redirect_' . $form ['#node_type']->type, '') );
  
  $form ['#validate'] [] = 'denynodenidpath_form_node_type_form_validate';
}
function denynodenidpath_form_node_type_form_validate($form, &$form_state) {
  // Check if the redirect is a valid path.
  if (!empty($form_state ['values'] ['denynodenidpath_redirect']) && !drupal_valid_path($form_state ['values'] ['denynodenidpath_redirect'])) {
    form_set_error('denynodenidpath_redirect', t('Invalid path.'));
  }
  
  // No need for a submit handler, Drupal automagically saves the values.
}

/**
 * Implements hook_node_type_update().
 */
function denynodenidpath_node_type_update($info) {
  if (!empty($info->old_type) && $info->old_type != $info->type) {
    variable_set('denynodenidpath_enable_' . $info->type, variable_get('denynodenidpath_enable_' . $info->old_type, 0));
    variable_set('denynodenidpath_redirect_' . $info->type, variable_get('denynodenidpath_redirect_' . $info->old_type, ''));
    variable_del('denynodenidpath_enable_' . $info->old_type);
    variable_del('denynodenidpath_redirect_' . $info->old_type);
  }
}

/**
 * Implements hook_node_type_delete().
 */
function denynodenidpath_node_type_delete($info) {
  variable_del('denynodenidpath_enable_' . $info->type);
  variable_del('denynodenidpath_redirect_' . $info->type);
}
