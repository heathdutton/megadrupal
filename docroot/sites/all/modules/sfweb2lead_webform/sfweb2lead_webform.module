<?php
/**
 * @file sfweb2lead_webform.module
 *
 * @author Chris Calip, updated to D7 by Adrian Rollett.
 * @date 2012-02-02
 */

/**
 * Implemens hook_permission()
 * @return array
 */
function sfweb2lead_webform_permission() {
  $perms = array();
  $perms['administer salesforce webform'] = array(
    'title' => t('Administer Salesforce webform'),
    'description' => t('Administer the salesforce webform module.'),
  );
  return $perms;
}

/**
 * Implements hook_menu()
 *
 * @return array
 */
function sfweb2lead_webform_menu() {
  $items = array();
  $items['admin/config/services/salesforce_webform'] = array(
    'title' => 'Salesforce Webform',
    'description' => 'Configure webform salesforce integration settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sfweb2lead_webform_form'),
    'access arguments' => array('administer salesforce webform'),
  );
  $items['node/%webform_menu/webform/sfweb2lead_webform'] = array(
    'title' => 'Salesforce Web2Lead',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sfweb2lead_nodesettings_form', 1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Form builder; Provides the form for adding Salesforce Web2Lead Settings to a webform node.
 */
function sfweb2lead_nodesettings_form($form, &$form_state, $node) {
  if (!_sfweb2lead_webform_check_settings()) {
    drupal_set_message(t('Salesforce Web-to-Lead Settings not set! You can configure the settings <a href="@url">SF Web-To-Lead settings page</a>.', array('@url' => url('admin/config/services/salesforce_webform'))), 'warning');
    return;
  }
  $result = db_select('sfweb2lead_webform', 's')
    ->fields('s', array('active', 'lead_source'))
    ->condition('vid', $node->vid)
    ->execute()->fetchAssoc();
  $form['#node'] = $node;
  $form['settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('SalesForce Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#weight' => -2,
  );
  $form['settings']['use_sfweb2lead_webform'] = array(
    '#type' => 'radios',
    '#title' => t('Submit to SalesForce'),
    '#options' => array(
      1 => t('Yes'), 0 => t('No')
    ),
    '#description' => t('If yes, the form will be sent via CURL to SalesForce.'),
    '#default_value' => isset($result['active']) ? $result['active'] : 0,
  );
  $form['settings']['lead_source_sfweb2lead_webform'] = array(
    '#type' => 'textfield',
    '#title' => t('Lead Source for this Webform'),
    '#default_value' => isset($result['lead_source']) ? $result['lead_source'] : '',
  );
  $form['settings']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Node Web2Lead Settings'),
  );
  return $form;
}

/**
 * Submit handler for webform_conditionals_form().
 */
function sfweb2lead_nodesettings_form_submit($form, &$form_state) {
  $node = $form['#node'];
  $table_name = 'sfweb2lead_webform';
  $record = array();
  $record['vid'] = $node->vid;
  $record['active'] = $form_state['values']['use_sfweb2lead_webform'];
  $record['lead_source'] = $form_state['values']['lead_source_sfweb2lead_webform'];
  // Store the  Webform SalesForce settings.
  $query = db_merge('sfweb2lead_webform')
    ->key(array('vid' => $record['vid']))
    ->fields($record)
    ->execute();
  drupal_set_message(t('Web2Lead Settings for %title saved.', array('%title' => $node->title)));
}

/**
 * Check if one of the settings is not set.
 * @return bool
 */
function _sfweb2lead_webform_check_settings() {
  $sfweb2lead_webform_oid = variable_get('sfweb2lead_webform_oid', '');
  $sfweb2lead_webform_url = variable_get('sfweb2lead_webform_url', '');
  // if one of the settings is not set
  if (empty ($sfweb2lead_webform_oid) || empty ($sfweb2lead_webform_url)) {
    return FALSE;
  }
  else {
    return TRUE;
  }
}

/**
 * Respond to a Webform submission being inserted.
 *
 * Note that this hook is called after a submission has already been saved to
 * the database. If needing to modify the submission prior to insertion, use
 * hook_webform_submission_presave().
 *
 * @param $node
 *   The Webform node on which this submission was made.
 * @param $submission
 *   The Webform submission that was just inserted into the database.
 */
function sfweb2lead_webform_webform_submission_insert($node, $submission) {
  $result = db_select('sfweb2lead_webform', 's')
    ->fields('s', array('active', 'lead_source'))
    ->condition('vid', $node->vid)
    ->execute()->fetchAssoc();
  if ( !isset($result['active']) ) {
    return;
  }
  if ($result['active'] != TRUE) {
    return;
  }
  if ($submission->is_draft == 1 ) {
    return;
  }
  $posted_fields = array();
  $posted_fields_multi_value = array();
  // $posted_fields
  foreach ($submission->data as $key => $value) {
    $values_count = count($value);
    if (is_int($key) && $values_count == 1) {
      $field_key = $node->webform['components'][$key]['form_key'];
      $field_value = $value[0];
      $posted_fields[$field_key] = $field_value;
    }
    elseif ($values_count > 1) {
      // Multivalue logic here.
      $field_key = $node->webform['components'][$key]['form_key'];
      foreach ($value as $value_key => $value_content) {
        $posted_fields_multi_value[$field_key][$value_key] = $value_content;
      }
    }
  }

  $curl = curl_init();
  // $data is an array of processed webform data about to be passed to salesforce
  $data = sfweb2lead_webform_hidden_fields($node, $result['lead_source']);
  $sfweb2lead_webform_mapping_settings = variable_get('sfweb2lead_webform_mapping_settings', array());
  $sfweb2lead_webform_url = variable_get('sfweb2lead_webform_url', 'https://www.salesforce.com/servlet/servlet.WebToLead?encoding=UTF-8');
  foreach ($posted_fields as $post_field => $post_field_value) {
    $data[sfweb2lead_webform_to_salesforce_field($post_field, $sfweb2lead_webform_mapping_settings)] = $post_field_value;
  }
  $context = array(
    // webform submission object containing data like $submission->nid (webform node id), $submission->uid (uid of person)..
    'webform_submission' => $submission,
  );
  drupal_alter('sfweb2lead_webform_posted_data', $data, $context);
  // Insert the single value fields.
  $query_data = http_build_query($data, '', '&');
  // Insert the multivalue fields.
  foreach ($posted_fields_multi_value as $post_field => $post_field_value) {
    $saleforce_post_field = sfweb2lead_webform_to_salesforce_field($post_field, $sfweb2lead_webform_mapping_settings);
    $query_data .= "&$saleforce_post_field=" . implode("&$saleforce_post_field=", $post_field_value);
  }
  curl_setopt($curl, CURLOPT_URL, $sfweb2lead_webform_url);
  curl_setopt($curl, CURLOPT_POST, 1);
  curl_setopt($curl, CURLOPT_POSTFIELDS, $query_data);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_HEADER, 1);
  curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
  curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);
  curl_setopt($curl, CURLOPT_USERAGENT, "sfweb2lead_webform module for Drupal");
  $response = curl_exec($curl);

  if (curl_error($curl)) {
    watchdog('sfweb2lead_webform', 'Error submitting Salesforce WebToLead: ' . curl_errno($curl) . ' ' . curl_error($curl), array(), WATCHDOG_ERROR, NULL);
  }
  curl_close($curl);
  $sfweb2lead_webform_debug = variable_get('sfweb2lead_webform_debug', FALSE);
  if ( $sfweb2lead_webform_debug ) {
    watchdog('sfweb2lead_webform', "$query_data", array(), WATCHDOG_NOTICE, NULL);
  }
}

/**
 * Return the Salesforce equivalent to a given webform field
 * @param string $field
 * @param array  $sfweb2lead_webform_mapping_settings
 * @return string Salesforce field name, when available, else $field
 */
function sfweb2lead_webform_to_salesforce_field($field, $sfweb2lead_webform_mapping_settings) {
  $salesforce_fields = array();
  foreach ($sfweb2lead_webform_mapping_settings as $key => $value) {
    $salesforce_fields[$key] = $value;
  }
  $old_salesforce_fields = array(
    'first_name' => 'first_name',
  );
  if (empty($salesforce_fields)) {
    $salesforce_fields = $old_salesforce_fields;
  }
  if (array_key_exists($field, $salesforce_fields)) {
    return $salesforce_fields[$field];
  }
  else {
    return $field;
  }
}

/**
 * Add meta-data fields to the form submission.
 *
 * @param $node
 * @param $source_code
 * @return
 */
function sfweb2lead_webform_hidden_fields($node, $source_code = '') {
  // @TODO looking for community feedback whether to deactivate the fallback position of leadsource as node title or page title.
  if (empty($source_code)) {
    if (!empty($node->title)) {
      $source_code = $node->title;
    }
    elseif (!empty($node->page_title)) {
      $source_code = $node->page_title;
    }
  }
  $sfweb2lead_webform_oid = variable_get('sfweb2lead_webform_oid', '');
  return array(
    'oid' => $sfweb2lead_webform_oid,
    'submit' => 'submit',
    'lead_source' => $source_code,
  );
}

/**
 * Admin settings form.
 *
 * @param $form_id
 *
 * @return
 */
function sfweb2lead_webform_form($form_id) {
  $sfweb2lead_webform_mapping_settings= variable_get('sfweb2lead_webform_mapping_settings', array());
  $sfweb2lead_webform_oid = variable_get('sfweb2lead_webform_oid', '');
  $sfweb2lead_webform_url = variable_get('sfweb2lead_webform_url', 'https://www.salesforce.com/servlet/servlet.WebToLead?encoding=UTF-8');
  $sfweb2lead_webform_debug = variable_get('sfweb2lead_webform_debug', FALSE);
  $sfweb2lead_webform_debug_email = variable_get('sfweb2lead_webform_debug_email', NULL);
  $description = <<<EOT
      <p>
      Webform Fields To Salesforce Fields Mapping Table <br />
      Required Fields are: Salesforce OID and Salesforce URL
      </p>
EOT;
  $form = array();
  $form['description'] = array(
    '#type' => 'markup',
    '#value' => check_plain($description),
  );
  $form['oid'] = array(
    '#type' => 'textfield',
    '#title' => t('Salesforce OID'),
    '#description' => t('The OID value (shorthand for Organizational Wide Default) is your instance of Salesforce.com. That doesn’t show up in very many places, but if you navigate to Setup > Administration Setup > Company Profile > Company Information – you’ll see your OID listed as a field on that page as well.'),
    '#default_value' => $sfweb2lead_webform_oid,
    '#size' => 15,
    '#required' => TRUE,
  );
  $form['url'] = array(
    '#type' => 'textfield',
    '#title' => t('Salesforce URL'),
    '#default_value' => $sfweb2lead_webform_url,
    '#size' => 70,
    '#required' => TRUE,
  );
  $form['debug'] = array(
    '#type' => 'checkbox',
    '#title' => t('<strong>DEBUG MODE</strong>'),
    '#default_value' => $sfweb2lead_webform_debug,
    '#description' => t('Check to enable debug mode'),
  );
  // @TODO: modify this temporary measure when key/value titles get's fixed.
  $form['options_description'] = array(
    '#type' => 'item',
    '#title' => t('Webform Fields to Salesforce Fields Mapping Table'),
    '#description' => t('Legend: KEY is the Webform Field Key, VALUE is the Salesforce Web-To-Lead form field'),
  );
  $form['options'] = array(
    // @TODO: Figure out a way to change the key/value titles?
    '#type' => 'options',
    '#key_type' => 'custom',
    '#key_type_toggled' => TRUE,
    '#limit' => 200,
    '#optgroups' => FALSE,
    '#options' => $sfweb2lead_webform_mapping_settings,
    '#default_value_allowed' => FALSE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Save',
  );
  return $form;
}

/**
 * Admin settings form submit handler.
 *
 * @param $form
 * @param $form_state
 *
 * @return
 */
function sfweb2lead_webform_form_submit($form, &$form_state) {
  $sfweb2lead_webform_mapping_settings = array();
  foreach ($form_state['values']['options']['options'] as $key => $value) {
    if (!empty($key) && !empty($value)) {
      $sfweb2lead_webform_mapping_settings[$key] = $value;
    }
  }
  variable_set('sfweb2lead_webform_mapping_settings', $sfweb2lead_webform_mapping_settings);
  variable_set('sfweb2lead_webform_oid', $form_state['values']['oid']);
  variable_set('sfweb2lead_webform_url', $form_state['values']['url']);
  variable_set('sfweb2lead_webform_debug', $form_state['values']['debug']);
  drupal_set_message(t('Salesforce Web2Lead Configuration Settings Saved!'));
}
