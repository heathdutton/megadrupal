<?php
/**
 * @file
 * Install, update and uninstall functions for the Google Store Locator module.
 */

 /**
  * Implements hook_requirements().
  */
function google_store_locator_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    drupal_load('module', 'libraries');

    if (!is_dir(libraries_get_path('storelocator'))) {
      // Verify that Google's Store Locator library is present.
      $requirements['google_store_locator'] = array(
        'title' => $t('Google Store Locator'),
        'description' => $t(
        'The required Google Store Locator library is missing.
        The library can be found at <a href="@url">@url</a>. Please add it to
        your library directory.',
        array(
          '@url' => 'http://code.google.com/p/storelocator/source/checkout')
        ),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    else {
      $requirements['google_store_locator'] = array(
        'title' => $t('Google Store Locator'),
        'severity' => REQUIREMENT_OK,
        'value' => $t('Google Store Locator library Installed'),
      );
    }
    if (!is_dir(libraries_get_path('markerclusterer'))) {
      // Verify that the Marker Clusterer library is present.
      $requirements['marker_clusterer'] = array(
        'title' => $t('Marker Clusterer'),
        'description' => $t(
        'The Marker Clusterer library is missing, and is required to enable
          the marker clustering option.
        The library can be found at <a href="@url">@url</a>. Please add it to
        your library directory.',
        array(
          '@url' => 'http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer')
        ),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    else {
      $requirements['marker_clusterer'] = array(
        'title' => $t('Marker Clusterer'),
        'severity' => REQUIREMENT_OK,
        'value' => $t('Marker Clusterer library Installed'),
      );
    }
    if (!module_exists('contextual_range_filter')) {
      // Verify that the Views Contextual Range Filter module is present.
      $requirements['contextual_range_filter'] = array(
        'title' => $t('Views Contextual Range Filter'),
        'description' => $t(
        'The Views Contextual Range Filter is required to enable Viewport Marker
          Management. The module can be found at <a href="@url">@url</a>. Please
          download and enable it.',
        array(
          '@url' => 'https://drupal.org/project/contextual_range_filter')
        ),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    else {
      $requirements['contextual_range_filter'] = array(
        'title' => $t('Views Contextual Range Filter'),
        'severity' => REQUIREMENT_OK,
        'value' => $t('Views Contextual Range Filter Module Installed'),
      );
    }

  }
  return $requirements;
}

/**
 * Place we put the field config and instance arrays.
 *
 * @return array
 *   The fields and their instances this module creates.
 */
function google_store_locator_installed_fields() {
  $fields = array();

  // Exported field: 'node-store_location-gsl_addressfield'.
  $fields['node-store_location-gsl_addressfield'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'gsl_addressfield',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'addressfield',
      'settings' => array(),
      'translatable' => '0',
      'type' => 'addressfield',
    ),
    'field_instance' => array(
      'bundle' => 'store_location',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'checkout_pane' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'default' => array(
          'label' => 'above',
          'module' => 'addressfield',
          'settings' => array(
            'diff_custom' => 0,
            'diff_custom_settings' => array(),
            'format_handlers' => array(
              0 => 'address',
            ),
            'use_widget_handlers' => 1,
          ),
          'type' => 'addressfield_default',
          'weight' => 0,
        ),
        'product_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'gsl_addressfield',
      'label' => 'Store Locator Address',
      'required' => FALSE,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'module' => 'addressfield',
        'settings' => array(
          'available_countries' => array(),
          'format_handlers' => array(
            0 => 'address',
          ),
        ),
        'type' => 'addressfield_standard',
        'weight' => 0,
      ),
    ),
  );

  // Exported field: 'node-store_location-gsl_geofield'.
  $fields['node-store_location-gsl_geofield'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'gsl_geofield',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'geofield',
      'settings' => array(),
      'translatable' => '0',
      'type' => 'geofield',
    ),
    'field_instance' => array(
      'bundle' => 'store_location',
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'checkout_pane' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'default' => array(
          'label' => 'above',
          'module' => 'geofield',
          'settings' => array(
            'data' => 'full',
            'diff_custom' => 0,
            'diff_custom_settings' => array(),
          ),
          'type' => 'geofield_wkt',
          'weight' => 1,
        ),
        'product_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'gsl_geofield',
      'label' => 'Store Locator Geofield',
      'required' => 0,
      'settings' => array(
        'local_solr' => array(
          'enabled' => FALSE,
          'lat_field' => 'lat',
          'lng_field' => 'lng',
        ),
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'geocoder',
        'settings' => array(
          'delta_handling' => 'default',
          'geocoder_field' => 'gsl_addressfield',
          'geocoder_handler' => 'google',
          'handler_settings' => array(
            'google' => array(
              'all_results' => 0,
              'geometry_type' => 'point',
              'reject_results' => array(
                'APPROXIMATE' => 0,
                'GEOMETRIC_CENTER' => 0,
                'RANGE_INTERPOLATED' => 0,
                'ROOFTOP' => 0,
              ),
            ),
          ),
        ),
        'type' => 'geocoder',
        'weight' => 1,
      ),
    ),
  );

  // Exported field: 'node-store_location-gsl_feature_filter_list'.
  $fields['node-store_location-gsl_feature_filter_list'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '-1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'gsl_feature_filter_list',
      'foreign keys' => array(),
      'indexes' => array(
        'value' => array(
          0 => 'value',
        ),
      ),
      'locked' => '0',
      'module' => 'list',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'list_text',
    ),
    'field_instance' => array(
      'bundle' => 'store_location',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(),
          'type' => 'list_default',
          'weight' => 4,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'gsl_feature_filter_list',
      'label' => 'Feature Filter List',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_buttons',
        'weight' => '4',
      ),
    ),
  );

  $fields['gsl_props_misc'] = array(
    'field_config' => array(
      'translatable' => '0',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'field_name' => 'gsl_props_misc',
      'type' => 'text_long',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    ),
    'field_instance' => array(
      'label' => 'Misc. Properties',
      'widget' => array(
        'weight' => '5',
        'type' => 'text_textarea',
        'active' => 1,
        'settings' => array(
          'rows' => '7',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
          'settings' => array(),
          'weight' => 5,
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => 0,
      'description' => '',
      'default_value' => NULL,
      'field_name' => 'gsl_props_misc',
      'entity_type' => 'node',
      'bundle' => 'store_location',
    ),
  );
  $fields['gsl_props_phone'] = array(
    'field_config' => array(
      'translatable' => '0',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'field_name' => 'gsl_props_phone',
      'type' => 'text',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    ),
    'field_instance' => array(
      'label' => 'Store Phone',
      'widget' => array(
        'weight' => '6',
        'type' => 'text_textfield',
        'active' => 1,
        'settings' => array(
          'size' => '25',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
          'settings' => array(),
          'weight' => 6,
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => 0,
      'description' => '',
      'default_value' => NULL,
      'field_name' => 'gsl_props_phone',
      'entity_type' => 'node',
      'bundle' => 'store_location',
    ),
  );
  $fields['gsl_props_web'] = array(
    'field_config' => array(
      'translatable' => '0',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'field_name' => 'gsl_props_web',
      'type' => 'text',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    ),
    'field_instance' => array(
      'label' => 'Store Website',
      'widget' => array(
        'weight' => '7',
        'type' => 'text_textfield',
        'active' => 1,
        'settings' => array(
          'size' => '60',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
          'settings' => array(),
          'weight' => 7,
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => 0,
      'description' => 'Enter website as a comma separated value (note: do not include white space and use a fully qualified URL) e.g. Some Store,http://www.some-store.com',
      'default_value' => NULL,
      'field_name' => 'gsl_props_web',
      'entity_type' => 'node',
      'bundle' => 'store_location',
    ),
  );
  return $fields;
}

/**
 * Implements hook_install().
 */
function google_store_locator_install() {

  $fields = google_store_locator_installed_fields();
  // Add all fields and their instances.
  foreach ($fields as $field) {
    // Look for existing field.
    $field_config = field_info_field($field['field_config']['field_name']);
    if (empty($field_config)) {
      field_create_field($field['field_config']);
    }
    // Look for existing instance.
    $instance = field_info_instance($field['field_instance']['entity_type'], $field['field_config']['field_name'], $field['field_instance']['bundle']);
    if (empty($instance)) {
      field_create_instance($field['field_instance']);
    }
  }

  // Set variables.
  $contextual_range_filter_numeric = variable_get('contextual_range_filter_numeric_field_names', array());
  $contextual_range_filter_numeric += array(
    'field_data_gsl_geofield:gsl_geofield_lat' => 'field_data_gsl_geofield:gsl_geofield_lat',
    'field_data_gsl_geofield:gsl_geofield_lon' => 'field_data_gsl_geofield:gsl_geofield_lon',
  );
  variable_set('contextual_range_filter_numeric_field_names', $contextual_range_filter_numeric);

}

/**
 * Implements hook_uninstall().
 */
function google_store_locator_uninstall() {
  // Delete all the variables we set with system_settings_form().
  variable_del('gsl_search_label');
  variable_del('gsl_title');
  variable_del('gsl_json_path');
  variable_del('gsl_display_path');
  variable_del('gsl_map_long');
  variable_del('gsl_map_lat');
  variable_del('gsl_map_zoom');
  variable_del('gsl_map_cluster');
  variable_del('gsl_cluster_zoom_limit');
  variable_del('gsl_map_cluster_grid');
  variable_del('gsl_viewport');
  variable_del('gsl_marker_zoom_limit');
  variable_del('gsl_marker_icon');
  variable_del('gsl_items_per_panel');
  variable_del('gsl_loc_aware');
  variable_del('gsl_loc_aware_zoom');

  // Collect all store nodes that were created when this module was enabled.
  $query = db_select('node', 'n');
  $query->fields('n', array('nid'));
  $query->condition('type', 'store_location', '=');
  $results = $query->execute()->fetchAllAssoc('nid');

  // ...and delete them all.
  node_delete_multiple(array_keys($results));

  // Delete the field bases, and instances, and their data that this module
  // creates.
  $fields = google_store_locator_installed_fields();
  foreach($fields as $field) {
    field_delete_field($field['field_config']['field_name']);
  }

  // Loop over any remaining field instances attached to the 'store_location'
  // bundle and delete them individually.
  $instances = field_info_instances('node', 'store_location');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete the content type
  node_type_delete('store_location');

  // Purge all field information.
  field_purge_batch(1000);
}

/**
 * Implements hook_update_N().
 */
function google_store_locator_update_7100(&$sandbox) {
  variable_set('gsl_items_per_panel', variable_get('items_per_panel'));
}

/**
 * A hook update that adds the Feature Filter List field.
 */
function google_store_locator_update_7101() {

  $fields = google_store_locator_installed_fields();
  // Look for existing field.
  $field_config = field_info_field('gsl_feature_filter_list');
  if (empty($field_config)) {
    field_create_field($fields['node-store_location-gsl_feature_filter_list']['field_config']);
  }
  // Look for existing instance.
  $instance = field_info_instance($fields['node-store_location-gsl_feature_filter_list']['field_instance']['entity_type'], $fields['node-store_location-gsl_feature_filter_list']['field_config']['field_name'], $fields['node-store_location-gsl_feature_filter_list']['field_instance']['bundle']);
  if (empty($instance)) {
    field_create_instance($fields['node-store_location-gsl_feature_filter_list']['field_instance']);
  }

  return t('Feature Filter List field has been added to the Store Location content type');
}

/**
 * Adds phone, web, and misc. fields to the Store Location content type.
 */
function google_store_locator_update_7102() {

  $fields = google_store_locator_installed_fields();

  foreach ($fields as $field) {
    // Look for existing field.
    $field_config = field_info_field($field['field_config']['field_name']);
    if (empty($field_config)) {
      field_create_field($field['field_config']);
    }
    // Look for existing instance.
    $instance = field_info_instance($field['field_instance']['entity_type'], $field['field_config']['field_name'], $field['field_instance']['bundle']);
    if (empty($instance)) {
      field_create_instance($field['field_instance']);
    }
  }

  return t('Phone, web, and misc. fields have been added to the Store Location content type.');
}

/**
 * Set contextual range filter variables.
 */
function google_store_locator_update_7103() {
  $contextual_range_filter_numeric = variable_get('contextual_range_filter_numeric_field_names', array());
  $contextual_range_filter_numeric += array(
    'field_data_gsl_geofield:gsl_geofield_lat' => 'field_data_gsl_geofield:gsl_geofield_lat',
    'field_data_gsl_geofield:gsl_geofield_lon' => 'field_data_gsl_geofield:gsl_geofield_lon',
  );
  variable_set('contextual_range_filter_numeric_field_names', $contextual_range_filter_numeric);
  return t('Contextual Range filter variables set.');
}
