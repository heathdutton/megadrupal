<?php

/**
 * @file
 * Schema, install, uninstall, and update functions for Shipwire commerce.
 */

/**
 * Implements hook_install().
 */
function shipwire_commerce_install() {
  if (!field_info_instance('commerce_order', 'shipwire_shipments', 'commerce_order')) {
    $t = get_t();
    $instance = array(
      'field_name' => 'shipwire_shipments',
      'entity_type' => 'commerce_order',
      'label' => $t('Shipwire shipment ID'),
      'bundle' => 'commerce_order',
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function shipwire_commerce_uninstall() {
  $instance = field_info_instance('commerce_order', 'shipwire_shipments', 'commerce_order');
  if ($instance) {
    field_delete_instance($instance);
  }

  db_delete('variable')
    ->condition('name', "shipwire_commerce_%", "LIKE")
    ->execute();
  cache_clear_all('variables', 'cache_bootstrap');
}

/**
 * Implements hook_requirements().
 */
function shipwire_commerce_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    $commerce_currencies = commerce_currencies(TRUE);
    $shipwire_currencies = Shipwire::getCurrencies();
    $unsupported_currencies = array();
    foreach ($commerce_currencies as $currency) {
      if (empty($shipwire_currencies[$currency['code']])) {
        $unsupported_currencies[] = $currency['code'];
      }
    }

    if (!empty($unsupported_currencies)) {
      $unsupported_csv = implode(', ', $unsupported_currencies);
      $requirements[] = array(
        'title' => t('Shipwire Commerce: Commerce store using unsupported currencies'),
        'value' => $unsupported_csv,
        'description' => t('Please <a href="admin/commerce/config/currency">'
          . 'disable the unsupported currencies</a> or <a href="admin/modules">'
          . 'disable the Shipwire Commerce module</a>. Supported currencies'
          . ' currently include: @supported_currencies.', array(
          '@supported_currencies' => implode(', ', array_keys($shipwire_currencies)),
        )),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}
