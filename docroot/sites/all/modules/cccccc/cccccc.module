<?php

/**
 * @file
 *   Protect against caching of credit card data in CiviCRM cache table.
 */

/**
 * Implements hook_cron().
 */
function cccccc_cron() {
  _cccccc_clear_cached_creditcards(1800);
}

/**
 * Implementation of CRM-10264 fix for earlier releases of CiviCRM.
 *
 * @param Integer seconds of (sensitive) cached data to retain.
 */
function _cccccc_clear_cached_creditcards($seconds = 1800) {
  civicrm_initialize();
  $until = time() - $seconds;
  $transaction_paths = array(
    'CRM_Contribute_Controller_Contribution',
    'CRM_Event_Controller_Registration',
  );
  $params = array(
    1 => array(date('Y-m-d H:i:s', $until), 'String'),
  );
  foreach ($transaction_paths as $path) {
    $params[] = array('%'.$path.'%', 'String');
    $where[] = 'path LIKE %' . sizeof($params);
  }
  $sql = "
DELETE FROM civicrm_cache
WHERE       group_name = 'CiviCRM Session'
AND         created_date <= %1
AND         ("  . implode(' OR ', $where) . ")";
  CRM_Core_DAO::executeQuery($sql, $params);
  if (function_exists('drush_log')) {
    drush_log(dt('Cache cleared up to: !until.', array('!until' => date('Y-m-d H:i:s', $until))), 'ok');
  }
}

/**
 * Implements hook_civicrm_postProcess().
 */
/*
function cccccc_civicrm_postProcess($form_name, &$form) {
  switch ($form_name) {
    case 'CRM_Contribute_Form_Contribution_Main':
      // Optionally, dispense with the confirm screen. CiviCRM will
      // save and delete the CC number in the same process.
      // Thanks https://github.com/emotive/CiviCRM-No-Confirmation
      // Does not appear to improve the situation :(
      if (variable_get('cccccc_skip_confirm_contribution', FALSE)) {
        if ($confirm_form =& $form->controller->_pages['Confirm']) {
          $confirm_form->preProcess();
          $data =& $form->controller->container();
          $data['valid']['Confirm'] = 1;
          $confirm_form->postProcess();
          $qf_key = $form->controller->_key;
          $url = CRM_Utils_System::url('civicrm/contribute/transact', "_qf_ThankYou_display=1&qfKey=$qf_key", TRUE, NULL, FALSE);
          // Redirect will end the request, so clear data first.
          // register_shutdown_function('cccccc_clear_current_creditcard', $qf_key);
          CRM_Utils_System::redirect($url);
        }
      }
      break;
    case 'CRM_Contribute_Form_Contribution_Confirm':
      // $qf_key = $form->controller->_key;
      // register_shutdown_function('cccccc_clear_current_creditcard', $qf_key);
      // cccccc_clear_current_creditcard($form);
      break ;
  }
}
*/

/**
 * Clear the entry for a specific form generation.
 */
/*
function cccccc_clear_current_creditcard($qf_key) {
  $sql = "DELETE FROM civicrm_cache WHERE path LIKE %1";
  $params = array(
    1 => array(
      '%' . $qf_key,
      'String',
    ),
  );
  CRM_Core_DAO::executeQuery($sql, $params);
}
*/
