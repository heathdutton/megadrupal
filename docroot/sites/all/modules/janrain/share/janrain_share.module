<?php
/**
 * @file
 * Janrain Share submodule.
 */

/**
 * Implements hook_init().
 */
function janrain_share_init() {
  $sdk = JanrainSdk::instance();
  $config = $sdk->getConfig();
  $sdk->addFeatureByName('ShareWidget');
}

/**
 * Implements hook_field_info().
 */
function janrain_share_field_info() {
  return array(
    'janrain_share_field' => array(
      'label' => t('Janrain Share'),
      'description' => t('Janrain Social Share Widget.'),
      'default_widget' => 'janrain_share_field_widget',
      'default_formatter' => 'janrain_share_field_formatter',
      'settings' => array(
        'formFactor' => 'bar',
        'orientation' => 'horizontal',
        'shareCountMin' => '-1',
        'shareCountMode' => 'none',
        'mode' => 'broadcast',
      ),
    ),
  );
}

/**
 * Implements hook_field_settings_form().
 */
function janrain_share_field_settings_form($field, $instance) {
  $settings = $field['settings'];
  $form['orientation'] = array(
    '#type' => 'select',
    '#title' => 'Orientation',
    '#options' => array('horizontal' => 'horizontal', 'vertical' => 'vertical'),
    '#default_value' => $settings['orientation'],
  );
  $form['formFactor'] = array(
    '#type' => 'select',
    '#title' => 'Form Factor',
    '#options' => array('bar' => 'bar', 'drawer' => 'drawer'),
    '#default_value' => $settings['formFactor'],
  );
  $form['shareCountMin'] = array(
    '#type' => 'textfield',
    '#title' => 'Share Count Min',
    '#default_value' => $settings['shareCountMin'],
  );
  $form['shareCountMode'] = array(
    '#type' => 'select',
    '#title' => 'Share Count Mode',
    '#options' => array(
      'none' => 'none',
      'combined' => 'combined',
      'provider' => 'provider',
    ),
    '#default_value' => $settings['shareCountMode'],
  );
  $form['mode'] = array(
    '#type' => 'select',
    '#title' => 'Mode',
    '#options' => array('broadcast' => 'broadcast', 'contact' => 'contact'),
    '#default_value' => $settings['mode'],
  );
  return $form;
}

/**
 * Implements hook_field_widget_info().
 */
function janrain_share_field_widget_info() {
  return array(
    'janrain_share_field_widget' => array(
      'label' => t('Janrain Share Widget'),
      'description' => t('Janrain Share Widget Description'),
      'field types' => array('janrain_share_field'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function janrain_share_field_formatter_info() {
  return array(
    'janrain_share_field_formatter' => array(
      'label' => t('Janrain Share Formatter'),
      'field types' => array('janrain_share_field'),
    ),
  );
}

/**
 * Implements hook_field_prepare_view().
 */
function janrain_share_field_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items) {
  if ($field['type'] == 'janrain_share_field') {
    foreach ($items as $key => $item) {
      if (!isset($item[0]['value'])) {
        $items[$key][0]['value'] = 'Dummy value';
      }
    }
  }
}

/**
 * Implements hook_field_is_empty().
 */
function janrain_share_field_is_empty($item, $field) {
  // Never empty.
  return FALSE;
}

/**
 * Implements hook_field_formatter_view().
 *
 * @todo-3.1 auto render settings with rest of widgets output using
 * sdk::renderJs.
 */
function janrain_share_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, &$items, $display) {
  $sdk = JanrainSdk::instance();
  $widget = $sdk->ShareWidget;
  // Check for share widget config.
  if (!$sdk->getConfig()->getItem('social.providers')) {
    if (user_access('administer site configuration')) {
      drupal_set_message(t('No share providers detected.'));
    }
    watchdog('janrain_share', 'Janrain Share not configured displayed on site!', array(), WATCHDOG_ERROR);
    return;
  }
  $element = array();
  $element['#markup'] = $widget->getHtml($field['settings']);
  foreach ($widget->getHeadJsSrcs() as $src) {
    $element['#attached']['js'][] = array('data' => $src, 'type' => 'external');
  }
  $js = $widget->getStartHeadJs() . $widget->getSettingsHeadJs() . $widget->getEndHeadJs();
  $element['#attached']['js'][] = array('data' => $js, 'type' => 'inline');
  return array($element);
}
