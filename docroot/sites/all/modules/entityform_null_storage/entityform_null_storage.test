<?php

/**
 * @file
 * Contains tests for the module.
 */


/**
 * Ensures that entity form null storage does what it says on the box.
 */
class EntityFormNullStorageTest extends DrupalWebTestCase {

  /**
   * Profile to use.
   */
  protected $profile = 'testing';

  /**
   * Admin user
   *
   * @var \StdClass
   */
  protected $adminUser;

  /**
   * Modules to enable.
   *
   * @var array
   */
  public static $modules = array(
    'entityform',
    'entity',
    'field_test',
    'entityform_null_storage',
  );

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'EntityForm Null Storage',
      'description' => 'Tests entity form null storage does what it says on the box.',
      'group' => 'EntityForm Null Storage',
    );
  }

  /**
   * Permissions to grant admin user.
   *
   * @var array
   */
  protected $permissions = array(
    'access administration pages',
    'administer entityform types',
    'edit own entityform',
  );

  /**
   * Sets up the test.
   */
  protected function setUp() {
    parent::setUp(self::$modules);
    $this->adminUser = $this->drupalCreateUser($this->permissions);
  }

  /**
   * Tests an entity form type with and without null storage.
   */
  public function testEntityFormNullStorage() {
    $this->drupalLogin($this->adminUser);
    // Create a new entity form type.
    $this->drupalPost('admin/structure/entityform_types/add', array(
      'type' => 'pony_order_form',
      'label' => 'Order ponies',
      'data[roles][' . DRUPAL_ANONYMOUS_RID . ']' => TRUE,
      'data[roles][' . DRUPAL_AUTHENTICATED_RID . ']' => TRUE,
      'data[redirect_path]' => 'user',
    ), t('Save entityform type'));

    $this->assertText('The Entityform Order ponies has been created. Add fields to this form below');
    $edit = array(
      'fields[_add_new_field][label]' => 'Foobar',
      'fields[_add_new_field][field_name]' => 'foobar',
      'fields[_add_new_field][type]' => 'test_field',
      'fields[_add_new_field][widget_type]' => 'test_field_widget',
    );
    $this->drupalPost(NULL, $edit, t('Save'));
    $this->drupalPost(NULL, array(), t('Save field settings'));

    $this->drupalPost(NULL, array(
      'field[cardinality]' => '-1',
    ), t('Save settings'));
    $this->assertRaw(t('Saved %name configuration', array('%name' => 'Foobar')));
    $this->drupalGet('eform/submit/pony-order-form');
    $this->assertFieldByName('field_foobar[und][0][value]');
    $this->drupalPost(NULL, array(), t('Submit Form'));
    $submissions = entity_load('entityform');
    $this->assertTrue(count($submissions), 1);
    $this->assertUrl('user');

    // Now turn on null storage.
    $this->drupalGet('admin/structure/entityform_types/manage/pony_order_form');
    $this->drupalPost(NULL, array(
      'data[entityform_null_storage]' => TRUE,
    ), t('Save entityform type'));
    $this->assertUrl('admin/structure/entityform_types');
    $this->drupalGet('eform/submit/pony-order-form');
    $this->assertFieldByName('field_foobar[und][0][value]');
    $this->drupalPost(NULL, array(), t('Submit Form'));
    $submissions = entity_load('entityform', FALSE, array(), TRUE);
    $this->assertTrue(count($submissions), 1);
    $this->assertUrl('user');
    $this->assertNoText('Your submission has been saved.');
    $this->assertText('Thank you for your submission.');

    // Now setup a null redirect and verify error is shown.
    $this->drupalGet('admin/structure/entityform_types/manage/pony_order_form');
    $this->drupalPost(NULL, array(
      'data[redirect_path]' => '',
    ), t('Save entityform type'));
    $this->assertText('You must provide a redirect path if you are not storing Entity-form submissions');

    // Now turn off null storage.
    $this->drupalGet('admin/structure/entityform_types/manage/pony_order_form');
    $this->drupalPost(NULL, array(
      'data[entityform_null_storage]' => FALSE,
    ), t('Save entityform type'));
    $this->assertUrl('admin/structure/entityform_types');
    $this->drupalGet('eform/submit/pony-order-form');
    $this->assertFieldByName('field_foobar[und][0][value]');
    $this->drupalPost(NULL, array(), t('Submit Form'));
    $submissions = entity_load('entityform', FALSE, array(), TRUE);
    $this->assertTrue(count($submissions), 2);
    $this->assertText('Your submission has been saved.');
    $this->assertNoText('Thank you for your submission.');
  }

}
