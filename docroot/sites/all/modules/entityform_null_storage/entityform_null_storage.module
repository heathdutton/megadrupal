<?php

/**
 * @file
 * Contains main functionality for the module.
 */

/**
 * Implements hook_form_FORM_ID_alter() for entityform_type_form().
 */
function entityform_null_storage_form_entityform_type_form_alter(&$form, $form_state) {
  $entityform_type = $form['#entityform_type'];
  $form['data']['entityform_null_storage_set'] = array(
    '#type' => 'fieldset',
    '#title' => t('Storage'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#group' => 'additional_settings',
    '#tree' => FALSE,
    '#weight' => 100,
  );
  $form['data']['entityform_null_storage_set']['entityform_null_storage'] = array(
    '#type' => 'checkbox',
    '#title' => t('Do not store form submissions'),
    '#description' => t("Check to prevent Entity Form submissions from being saved in the database. Note that you will most likely want to setup email notifications if you don't plan to store the submissions. With this option set but no redirect path provided, form submission will redirect to the front page."),
    '#default_value' => isset($entityform_type->data['entityform_null_storage']) ? $entityform_type->data['entityform_null_storage'] : FALSE,
    '#parents' => array(
      'data',
      'entityform_null_storage',
    ),
  );
  $form['#validate'][] = 'entityform_null_storage_type_validate';
}

/**
 * Implements hook_entity_info_alter().
 */
function entityform_null_storage_entity_info_alter(&$info) {
  $info['entityform']['controller class'] = 'EntityFormNullStorage';
}

/**
 * Implements hook_form_FORM_ID_alter() for entityform_edit_form().
 */
function entityform_null_storage_form_entityform_edit_form_alter(&$form, $form_state) {
  $entityform = $form_state['entityform'];
  $entityform_type = entityform_type_load($entityform->type);
  if (!empty($entityform_type->data['entityform_null_storage'])) {
    // Add the field related form elements.
    $form['actions']['submit']['#submit'][] = 'entityform_null_storage_form_submit';
  }
}

/**
 * Submit handler.
 */
function entityform_null_storage_form_submit(&$form, &$form_state) {
  // Remove the original submission message.
  if (($messages = &drupal_set_message()) && !empty($messages['status'])) {
    $key = array_search(t('Your submission has been saved.'), $messages['status']);
    if ($key !== FALSE) {
      unset($_SESSION['messages']['status'][$key]);
      $_SESSION['messages']['status'] = array_values($_SESSION['messages']['status']);
      drupal_set_message(t('Thank you for your submission.'));
    }
  }
}

/**
 * Form submission validator.
 */
function entityform_null_storage_type_validate($form, $form_state) {
  if (!empty($form_state['values']['data']['entityform_null_storage']) && empty($form_state['values']['data']['redirect_path'])) {
    form_set_error('data][redirect_path', t('You must provide a redirect path if you are not storing Entity-form submissions'));
  }
}
