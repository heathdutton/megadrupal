<?php
/**
 * @file
 * Commerce Xero tests
 */


/**
 * Installation test.
 */
class CommerceXeroInstallTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => t('Install test'),
      'description' => t('Assert that commerce xero can be installed.'),
      'group' => t('Commerce Xero'),
    );
  }

  public function setUp() {
    parent::setUp(array('entity', 'addressfield', 'rules', 'commerce', 'commerce_ui', 'commerce_line_item', 'commerce_customer', 'commerce_order', 'commerce_payment'));

    // Create an admin user and login.
    $this->admin_user = $this->drupalCreateUser(array('administer modules', 'administer site configuration', 'administer themes', 'access administration pages', 'access site reports', 'administer nodes', 'administer users', 'administer permissions'));
    $this->drupalLogin($this->admin_user);
  }

  public function testInstallXeroFirst() {
    // Enable Xero
    $edit = array(
      'modules[Xero][xero][enable]' => 1,
    );
    $this->drupalPost('admin/modules', $edit, t('Save configuration'));
    $this->assertText('The configuration options have been saved.');

    // Enable Commerce Xero
    $edit = array(
      'modules[Commerce (Contrib)][commerce_xero][enable]' => 1,
    );
    $this->drupalPost('admin/modules', $edit, t('Save configuration'));
    $this->assertText('The configuration options have been saved.');
  }

  public function testInstallXeroSameTime() {
    $edit = array(
      'modules[Xero][xero][enable]' => 1,
      'modules[Commerce (Contrib)][commerce_xero][enable]' => 1,
    );
    $this->drupalPost('admin/modules', $edit, t('Save configuration'));
    $this->assertText('The Xero Reference field type is not available.');

    // Now try to install Commerce Xero again.
    $edit = array(
      'modules[Commerce (Contrib)][commerce_xero][enable]' => 1,
    );
    $this->drupalPost(NULL, $edit, t('Save configuration'));
    $this->assertText('The configuration options have been saved.');
  }

}
