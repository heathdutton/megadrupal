<?php
/**
 * @file
 * Markdownizer.
 */

define('MARKDOWNIZER_MODULE_NAME', 'markdownizer');

/**
 * Get instance of Parsedown.
 *
 * @return \Parsedown
 *   An instance of Parsedown.
 */
function markdownizer() {
  static $parsedown;

  if (empty($parsedown)) {
    libraries_load('parsedown');

    $parsedown = new \Parsedown();
    $parsedown->addEventListener('Table', function (array &$block) {
      $item = 0;

      // "thead" and "tbody".
      foreach ($block['element']['text'] as &$section) {
        // "tr".
        foreach ($section['text'] as &$rows) {
          $rows['attributes']['class'] = $item++ % 2 ? 'odd' : 'even';
        }
      }
    });
  }

  return $parsedown;
}

/**
 * Implements hook_libraries_info().
 */
function markdownizer_libraries_info() {
  $libraries = array();

  // @todo Change "download url" by original library when it will be updated.
  // Fork by BR0kEN- is used because a pull request, which adds an event
  // listeners, is not merged yet.
  //
  // @link https://github.com/erusev/parsedown/pull/333
  $libraries['parsedown'] = array(
    'name' => 'Parsedown',
    'vendor url' => 'http://parsedown.org/',
    'download url' => 'https://github.com/BR0kEN-/parsedown/archive/master.zip',
    'version arguments' => array(
      'file' => 'Parsedown.php',
      'lines' => 25,
      'pattern' => "/const version = '(\d\.\d\.\d)'/i",
    ),
    'files' => array(
      'php' => array(
        'Parsedown.php',
      ),
    ),
  );

  return $libraries;
}
