<?php

/**
 * @file
 * Twitter Tags module hooks.
 */

/**
 * Implements hook_menu().
 */
function twitter_tags_menu() {
  $items = array();

  $items['admin/config/services/twitter/tags'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Tags',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('twitter_tags_admin_form'),
    'access arguments' => array('administer twitter accounts'),
    'file' => 'twitter_tags.admin.inc',
  );

  return $items;
}

/**
 * Impelements hook_twitter_status_save().
 *
 * @param object $status
 *   Twitter status.
 */
function twitter_tags_twitter_status_save($status) {
  twitter_tags_set_tags($status);
}

/**
 * Implements hook_views_api().
 */
function twitter_tags_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Update the tag data for a status (Tweet).
 *
 * @param object $status
 *   Twitter status.
 */
function twitter_tags_set_tags($status) {
  // Find all hashtags in the tweet.
  $tags = twitter_tags_find_tags($status);

  // Clear all references.
  db_delete('twitter_tags')->condition('twitter_id', $status->id)->execute();

  // Write references.
  $query = db_insert('twitter_tags')->fields(array('twitter_id', 'tag'));
  foreach ($tags as $tag) {
    $values = array(
      'twitter_id' => (!empty($status->id)) ? $status->id : $status->twitter_id,
      'tag' => $tag,
    );
    $query->values($values);
  }
  $query->execute();
}

/**
 * Analyze Tweet text, looking for hashtags.
 *
 * This is similar in regex logic to the formatter for the tweet in
 * _twitter_filter_text() in twitter.module.
 *
 * @param object $status
 *   Twitter status.
 *
 * @return array
 *   An array of strings representing tags found within the status.
 */
function twitter_tags_find_tags($status) {
  $patterns = array(
    '/\>#(\w+)/ui',
    '/^#(\w+)/ui',
    '/\s+#(\w+)/ui',
  );
  $tags = array();
  foreach ($patterns as $pattern) {
    preg_match_all($pattern, $status->text, $matches);
    foreach ($matches[1] as $match) {
      $tags[] = $match;
    }
  }
  $tags = array_unique($tags);
  return $tags;
}
