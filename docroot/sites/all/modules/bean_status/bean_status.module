<?php
/**
 * @file
 *  Bean status module main file.
 */

/**
 * Implements hook_entity_insert().
 */
function bean_status_entity_insert($entity, $type) {
  if ($type == 'bean') {
      db_insert('bean_status')
        ->fields(array(
          'bid' => $entity->bid,
          'status' => 1,
          'changed' => time(),
        ))
        ->execute();
  }
}

/**
 * Implements hook_entity_update().
 */
function bean_status_entity_update($entity, $type) {
  if ($type == 'bean') {
    if (isset($entity->status)) {
      db_merge('bean_status')
        ->key(array('bid' => $entity->bid))
        ->fields(array(
          'status' => $entity->status
        ))
        ->execute();
    }
  }
}

/**
 * Implements hook_entity_delete().
 */
function bean_status_entity_delete($entity, $type) {
  if ($type == 'bean') {
    db_delete('bean_status')
      ->condition('bid', $entity->bid)
      ->execute();
  }
}

/**
 * Implements hook_entity_load().
 */
function bean_status_entity_load($entities, $type) {
  if ($type == 'bean') {
    $bids = array();
    foreach ($entities as $entity) {
      $bids[] = $entity->bid;
    }
    $result = db_select ('bean_status', 'bs')
      ->fields('bs', array('bid', 'status'))
      ->condition('bs.bid', $bids)
      ->execute()
      ->fetchAllKeyed();
    if ($result) {
      foreach ($result as $bid => $status) {
        $entities[$bid]->status = $status;
      }
    }
  }
}

/**
 * Implements hook_bean_access().
 */
function bean_status_bean_access($bean, $op, $account) {
  if ($op == "view" && isset($bean->status) && !$bean->status) {
    return FALSE;
  }
  return TRUE;
}

/**
 * Implements hook_page_build().
 */
function bean_status_page_build(&$page) {
  if (!empty($page['content']['system_main']['bean_content'])) {
    $header = &$page['content']['system_main']['bean_content']['#header'];
    $rows = &$page['content']['system_main']['bean_content']['#rows'];
    $columns = array(
      'title',
      'type',
      'status',
      'operations',
    );
    $statuses = array('not published', 'published');
    // Header.
    $new_header = array();
    foreach ($columns as  $column) {
      if (!empty($header[$column])) {
        $new_header[$column] = $header[$column];
      }
      else {
        $new_header[$column] = array(
          'data' => t('Status'),
          'field' => 'status',
        );
      }
    }
    $header = $new_header;
    // Rows,
    $new_rows = array();
    $beans = bean_load_multiple(array_keys($rows));
    foreach ($rows as $bid => $row) {
      $new_row = array();
      foreach ($columns as $column) {
        if (!empty($row[$column])) {
          $new_row[$column] = $row[$column];
        }
        else {
          $new_row[$column] = $statuses[$beans[$bid]->status];
        }
      }
      $new_rows[$bid] = $new_row;
    }
    $rows = $new_rows;
  }
}
