<?php

/**
 * @file
 * Contains PriorityQueueTestCase.
 */

class PriorityQueueTestCase extends DrupalWebTestCase {

  protected $profile = 'testing';

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Priority Queue',
      'description' => 'Tests the priority queue class.',
      'group' => t('Priority Queue'),
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp(array('priority_queue'));
    variable_set('queue_class_priority_queue', 'PriorityQueue');
  }

  public function testPriorityQueue() {
    /** @var PriorityQueue $queue */
    $queue = DrupalQueue::get('priority_queue');
    $this->assertIdentical(get_class($queue), 'PriorityQueue');

    $queue->createItem('LAST', -10);
    sleep(1);
    $queue->createItem('FIRST', 10);
    sleep(1);
    $queue->createItem('MIDDLE', 0);

    $this->assertIdentical($queue->claimItem()->data, 'FIRST');
    $this->assertIdentical($queue->claimItem()->data, 'MIDDLE');
    $this->assertIdentical($queue->claimItem()->data, 'LAST');
    $this->assertFalse($queue->claimItem());

    /** @var SystemQueue $queue */
    $queue = DrupalQueue::get('normal_queue');
    $this->assertIdentical(get_class($queue), 'SystemQueue');

    $queue->createItem('LAST', -10);
    sleep(1);
    $queue->createItem('FIRST', 10);
    sleep(1);
    $queue->createItem('MIDDLE', 0);

    $this->assertIdentical($queue->claimItem()->data, 'LAST');
    $this->assertIdentical($queue->claimItem()->data, 'FIRST');
    $this->assertIdentical($queue->claimItem()->data, 'MIDDLE');
    $this->assertFalse($queue->claimItem());
  }

  public function testSchemaAlter() {
    $this->assertTrue(db_field_exists('queue', 'priority'));
    $this->assertTrue(db_index_exists('queue', 'name_priority'));

    module_disable(array('priority_queue'));
    drupal_uninstall_modules(array('priority_queue'));

    $this->assertFalse(db_field_exists('queue', 'priority'));
    $this->assertFalse(db_index_exists('queue', 'name_priority'));
  }
}
