<?php

/**
 * Implements hook_scrollshow_redirect_fallback_alter().
 */
function scrollshow_mobile_tools_scrollshow_redirect_fallback_alter(&$redirect, $fallback_url, $browser) {
  $device_groups = mobile_tools_device_group_load_all();

  // Get the list of devices that we redirect on
  $fallback_groups = variable_get('scrollshow_mobile_tools_fallback_groups', array());

  // Find which groups are active
  foreach ($device_groups as $device_group) {
    if (!empty($device_group->detector) && !empty($device_group->detection_settings[$device_group->detector]['activation callback'])) {
      if (!empty($fallback_groups[$device_group->dgid])) {
        if (call_user_func($device_group->detection_settings[$device_group->detector]['activation callback'], $device_group)) {
          $redirect = TRUE;
          return;
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function scrollshow_mobile_tools_form_mobile_tools_admin_settings_form_alter(&$form, &$form_state) {
  $device_groups = mobile_tools_device_group_load_all();

  $options = array();
  foreach ($device_groups as $device_group) {
    $options[$device_group->dgid] = $device_group->title;
  }

  $form['scrollshow_mobile_tools_fallback_groups'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Scrollshow fallback groups'),
    '#description' => t('Scrollshow will automatically redirect users to the fallback URL if they\'re browser falls into one of these device groups.'),
    '#options' => $options,
    '#default_value' => variable_get('scrollshow_mobile_tools_fallback_groups', array()),
  );

  // push the 'HTTP Headers' to the bottom
  $form['mobile_tools_global_httpheaders']['#weight'] = 1;
}

