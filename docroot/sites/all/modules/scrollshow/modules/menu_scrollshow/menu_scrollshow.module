<?php

/**
 * Implements hook_menu().
 */
function menu_scrollshow_menu() {
  $items = array();
  $items['scrollshow'] = array(
    'page callback'  => 'menu_scrollshow_page',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Returns the variable name for this menu's settings.
 */
function _menu_scrollshow_get_variable($menu_name) {
  return 'menu_scrollshow_' . str_replace('-', '_', $menu_name);
}

/**
 * Returns the settings for a particular menu.
 */
function menu_scrollshow_get_settings($menu_name) {
  return variable_get(_menu_scrollshow_get_variable($menu_name), array());
}

/**
 * Implements hook_form_alter().
 */
function menu_scrollshow_form_menu_edit_menu_alter(&$form, &$form_state, $form_id) {
  $menu_name = $form['old_name']['#value'];
  $settings = menu_scrollshow_get_settings($menu_name);

  $form['scrollshow'] = array(
    '#type' => 'fieldset',
    '#title' => t('Scrollshow'),
    '#description' => t('Configure the <a href="!url" target="_blank">scrollshow</a> for this menu.',
      array('!url' => url('scrollshow/' . $menu_name))),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#tree' => TRUE,
  );
  $form['scrollshow'] = array_merge($form['scrollshow'], scrollshow_build_settings_form($settings));

  $form['#validate'][] = 'menu_scrollshow_menu_edit_menu_validate';
  $form['#submit'][] = 'menu_scrollshow_menu_edit_menu_submit';
}

/**
 * Validation callback for menu_edit_menu() form.
 */
function menu_scrollshow_menu_edit_menu_validate($form, &$form_state) {
  // TODO: allow plugins to validate!
}

/**
 * Submit callback for menu_edit_menu() form.
 */
function menu_scrollshow_menu_edit_menu_submit($form, &$form_state) {
  $old_menu_name = $form_state['values']['old_name'];
  $menu_name = $form_state['values']['menu_name'];

  // delete old settings if the menu name changes
  if ($old_menu_name != $menu_name) {
    $old_variable_name = _menu_scrollshow_get_variable($old_menu_name);
    variable_del($old_variable_name);
  }

  // save menu settings
  $variable_name = _menu_scrollshow_get_variable($menu_name);
  variable_set($variable_name, $form_state['values']['scrollshow']);
}

/**
 * Return a rendered scrollshow page for a menu.
 *
 * Callback for hook_menu().
 */
function menu_scrollshow_page($menu_name = NULL) {
  // Default to the main menu
  if (empty($menu_name)) {
    $menu_name = variable_get('menu_main_links_source', 'main-menu');
  }
  $settings = menu_scrollshow_get_settings($menu_name);

  $tree = menu_build_tree($menu_name, array(
    'min_depth' => 1,
    // TODO: how can we disable this sometimes?
    'max_depth' => 1,
  ));

  // turn the menu into a collection of slides
  $slides = array();
  foreach ($tree as &$menu_item) {
    if ($menu_item['link']['access'] && !$menu_item['link']['hidden']) {
      $slide = array(
        'title'   => $menu_item['link']['link_title'],
        'href'    => $menu_item['link']['link_path'],
        'id'      => NULL,
        'content' => NULL,
        'entity'  => NULL,
      );

      // TODO: currently we only add nodes
      if ($menu_item['link']['router_path'] == 'node/%') {
        list($unused, $nid) = explode('/', $slide['href']);

        $slide['id'] = $nid;
        $slide['entity'] = node_load($nid);
        $slide['content'] = node_view($slide['entity']);
      }

      $slides[$menu_item['link']['mlid']] = $slide;
    }
  }

  return scrollshow_render_page($slides, $settings);
}

