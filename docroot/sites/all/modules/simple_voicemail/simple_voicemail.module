<?php
// Implements hook_menu
function simple_voicemail_menu() {
  $items['admin/config/voicemail'] = array(
    'title' => t('Voicemail'),
    'description' => t('Configure your Voicemail'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simple_voicemail_admin_settings'),
    'access arguments' => array('administer site configuration'),
  );

  $items['voicemail/tropo.php'] = array(
    'description' => t('Tropo Script for running voicemail'),
    'page callback' => 'simple_voicemail_script',
    'access callback' => true,
  );

  $items['voicemail/message/%'] = array(
    'page callback' => 'simple_voicemail_message',
    'page arguments' => array(2),
    'access callback' => true,
  );

  $items['voicemail/transcription/%'] = array(
    'page callback' => 'simple_voicemail_transcription',
    'page arguments' => array(2),
    'access callback' => true
  );

  return $items;
}

function simple_voicemail_admin_settings() {
  $form['voicemail_tropo_script'] = array(
    '#markup' =>  t('Enter this URL as your Application Script in the Tropo UI') .': <code>' . url('voicemail/tropo.php', array('absolute' => true)) . '</code> ',
  );

  $form['mail_to'] = array(
    '#type' => 'textfield',
    '#title' => t('Email messages to'),
    '#default_value' => variable_get('mail_to', ''),
    '#description' => t('The email address to send voicemails to'),
    '#required' => TRUE,
  );

  $form['voicemail_greeting'] = array(
    '#type' => 'textfield',
    '#title' => t('Voicemail greeting'),
    '#default_value' => variable_get('voicemail_greeting', ''),
    '#description' => t('URL or Text to be spoken as a greeting. Leave blank for default.'),
  );

  $form['transfer_to'] = array(
    '#type' => 'textfield',
    '#title' => t('Before sending to voicemail, forward to'),
    '#default_value' => variable_get('transfer_to', ''),
    '#description' => t('A phone number to ring before sending to voicemail. Format as +12125551212. Leave blank for voicemail only'),
  );
  return system_settings_form($form);
}

// Catcher URL for Tropo to hoload recordings
function simple_voicemail_message($id) {
  # Drupal has an odd strucure for the filename, Tropo uploads with a fixed
  # format. Convert Tropo's format to what Drupal expects.
  # See https://api.drupal.org/comment/23883#comment-23883
  foreach ($_FILES['filename'] as $k => $v) {
    $_FILES['files'][$k]['filename'] = $v;
  }
  $file = file_save_upload('filename', array('file_validate_extensions' => array('wav mp3')), FALSE, FILE_EXISTS_RENAME);
  if ($file === false) {
    print "error";
  } elseif ($file == null) {
    print "nothing uploaded";
  } else {
    $file->status = 1;
    file_save($file);
    $dir = 'public://voicemail';
    file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
    $public = file_move($file, "$dir/$id.wav");
    $url = file_create_url("$dir/$id.wav");
  }
}

// Catcher URL for Tropo to upload Transcriptions to
function simple_voicemail_transcription($id) {
  $json = file_get_contents("php://input");
  $transcript = json_decode($json);

  file_save_data($json, "public://voicemail/$id.txt");

  $caller = explode('-', $id);
  $attachment = array(
    'filepath' => "public://voicemail/$id.wav",
    'filename' => $id . '.wav',
    'filemime' => 'audio/wav'
  );

  $params = array(
    'key' => 'voicemail_email_template',
    'to' => variable_get('mail_to', ''),
    'subject' => 'Voicemail from ' . $caller[0],
    'body' => "From: {$caller[0]}\n\n{$transcript->result->transcription}",
    'attachment' => $attachment
  );

  $mail = drupal_mail('simple_voicemail', $params['key'], $params['to'], language_default(), $params, null, 1);
  if ($mail['result'] != 1) {
    watchdog('simple_voicemail', 'Email not sent', WATCHDOG_ERROR);
  }
  print_r($mail);
}

// implements hook_mail
function simple_voicemail_mail($key, &$message, $params) {
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['body'];

  // Add attachment when available.
  if (isset($params['attachment'])) {
    $message['params']['attachments'][] = $params['attachment'];
  }
}

// Print the Tropo Script
function simple_voicemail_script() {
  $baseurl = url('voicemail', array('absolute' => true));
  $ring = url(drupal_get_path('module', 'simple_voicemail') . '/ring.wav', array('absolute' => true));
  $greeting = variable_get('voicemail_greeting', '');
  $transfer = variable_get('transfer_to', '');
  if (empty($greeting)) {
    $greeting = 'The person at $mynum is not available. Leave a message after the beep';
  }

  drupal_add_http_header('Content-Type', 'text/plain');

  print <<< EOF
<?php
if (\$currentCall->channel == 'TEXT') {
  say('This number cannot receive text messages');
} else {
  \$callerID = \$currentCall->callerID;
  \$time = date('Y-m-d-His');
  \$id = \$callerID . '-' . \$time;

  \$mynum = implode(' ',str_split(\$currentCall->calledID));
  \$greeting = "$greeting";

  \$transfer = '$transfer';
  if (empty(\$transfer)) {
    _log('Straight to voicemail');
    voicemail();
  } else {
    _log('Transfering to ' . \$transfer);
    \$result = transfer(\$transfer, array(
      'playvalue' => "$ring",
      'playrepeat' => 2000,
      'timeout' => 20,
      'onTimeout' => "voicemail",
      'onBusy' => "voicemail",
      'onError' => "voicemail",
      'onCallFailure' => "voicemail",
      ));
  }
}

function voicemail() {
  record(\$GLOBALS['greeting'], array (
    "beep" => true,
    "maxTime" => 900,
    "bargein" => false,
    "recordURI"=>"$baseurl/message/{\$GLOBALS['id']}",
    "transcriptionOutURI" => "$baseurl/transcription/{\$GLOBALS['id']}",
    "transcriptionID" => \$GLOBALS['id'],
    "voice" => "Veronica"
    )
  );
}

?>
EOF;
}
