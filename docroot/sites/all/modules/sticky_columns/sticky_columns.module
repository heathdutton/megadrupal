<?php

/**
 * @file
 * Allows to use sticky table columns in Views table.
 */

/**
 * Implements hook_views_plugins_alter().
 */
function sticky_columns_views_plugins_alter(&$plugins) {
  $module_path = drupal_get_path('module', 'sticky_columns');

  $plugins['style']['table']['handler'] = 'views_plugin_style_sticky_columns';
  $plugins['style']['table']['file'] = 'views_plugin_style_sticky_columns.inc';
  $plugins['style']['table']['path'] = $module_path;

  if (!empty($plugins['style']['views_aggregator'])) {
    $plugins['style']['views_aggregator']['handler'] = 'views_plugin_style_sticky_columns_aggregator';
    $plugins['style']['views_aggregator']['file'] = 'views_plugin_style_sticky_columns_aggregator.inc';
    $plugins['style']['views_aggregator']['path'] = $module_path;
  }

  if (!empty($plugins['style']['flipped'])) {
    $plugins['style']['flipped']['handler'] = 'views_plugin_style_sticky_columns_flipped';
    $plugins['style']['flipped']['file'] = 'views_plugin_style_sticky_columns_flipped.inc';
    $plugins['style']['flipped']['path'] = $module_path;
  }

  if (!empty($plugins['style']['matrix'])) {
    $plugins['style']['matrix']['handler'] = 'views_plugin_style_sticky_columns_matrix';
    $plugins['style']['matrix']['file'] = 'views_plugin_style_sticky_columns_matrix.inc';
    $plugins['style']['matrix']['path'] = $module_path;
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function sticky_columns_theme_registry_alter(&$info) {
  if (isset($info['views_ui_style_plugin_table'])) {
    $info['views_ui_style_plugin_table']['function'] = 'sticky_columns_theme_views_ui_style_plugin_table';
  }
  if (isset($info['views_ui_style_plugin_table'])) {
    $info['views_aggregator_plugin_style_table']['function'] = 'sticky_columns_theme_views_aggregator_plugin_style_table';
  }
}

/**
 * Overrides theme_views_ui_style_plugin_table() with sticky columns selection.
 */
function sticky_columns_theme_views_ui_style_plugin_table($variables) {
  $form = $variables['form'];

  $output = drupal_render($form['description_markup']);

  $header = array(
    t('Field'),
    t('Column'),
    t('Align'),
    t('Separator'),
    array(
      'data' => t('Sortable'),
      'align' => 'center',
    ),
    array(
      'data' => t('Default order'),
      'align' => 'center',
    ),
    array(
      'data' => t('Default sort'),
      'align' => 'center',
    ),
    array(
      'data' => t('Hide empty column'),
      'align' => 'center',
    ),
    array(
      'data' => t('Sticky Column'),
      'align' => 'center',
    ),
  );
  $rows = array();
  foreach (element_children($form['columns']) as $id) {
    $row = array();
    $row[] = drupal_render($form['info'][$id]['name']);
    $row[] = drupal_render($form['columns'][$id]);
    $row[] = drupal_render($form['info'][$id]['align']);
    $row[] = drupal_render($form['info'][$id]['separator']);
    if (!empty($form['info'][$id]['sortable'])) {
      $row[] = array(
        'data' => drupal_render($form['info'][$id]['sortable']),
        'align' => 'center',
      );
      $row[] = array(
        'data' => drupal_render($form['info'][$id]['default_sort_order']),
        'align' => 'center',
      );
      $row[] = array(
        'data' => drupal_render($form['default'][$id]),
        'align' => 'center',
      );
    }
    else {
      $row[] = '';
      $row[] = '';
      $row[] = '';
    }
    $row[] = array(
      'data' => drupal_render($form['info'][$id]['empty_column']),
      'align' => 'center',
    );
    $row[] = array(
      'data' => drupal_render($form['info'][$id]['sticky_column']),
      'align' => 'center',
    );
    $rows[] = $row;
  }

  // Add the special 'None' row.
  $rows[] = array(
    t('None'),
    '',
    '',
    '',
    '',
    '',
    array('align' => 'center', 'data' => drupal_render($form['default'][-1])),
    '',
    '',
  );

  $output .= theme('table', array('header' => $header, 'rows' => $rows));
  $output .= drupal_render_children($form);
  return $output;
}

/**
 * Overrides theme_views_aggregator_plugin_style_table() to add sticky columns.
 */
function sticky_columns_theme_views_aggregator_plugin_style_table($variables) {
  $form = $variables['form'];

  $output = drupal_render($form['description_markup']);

  // Note these are currently in the Views Calc rather than Views table order.
  $header = array(
    t('Field'),
    t('Align'),
    t('Group aggregation'),
    t('Column aggregation'),
    t('Render column'),
    t('Separator'),
    array(
      'data' => t('Sortable'),
      'align' => 'center',
    ),
    array(
      'data' => t('Default sort'),
      'align' => 'center',
    ),
    array(
      'data' => t('Default order'),
      'align' => 'center',
    ),
    array(
      'data' => t('Hide empty column'),
      'align' => 'center',
    ),
    array(
      'data' => t('Sticky Column'),
      'align' => 'center',
    ),
  );

  $rows = array();
  foreach (element_children($form['columns']) as $id) {
    $row = array();
    $row[] = drupal_render($form['info'][$id]['name']);
    $row[] = drupal_render($form['info'][$id]['align']);
    $row[]
      = drupal_render($form['info'][$id]['has_aggr'])
      . drupal_render($form['info'][$id]['aggr'])
      . drupal_render($form['info'][$id]['aggr_par']);
    $row[]
      = drupal_render($form['info'][$id]['has_aggr_column'])
      . drupal_render($form['info'][$id]['aggr_column'])
      . drupal_render($form['info'][$id]['aggr_par_column']);
    $row[] = drupal_render($form['columns'][$id]);
    $row[] = drupal_render($form['info'][$id]['separator']);
    if (!empty($form['info'][$id]['sortable'])) {
      $row[] = array(
        'data' => drupal_render($form['info'][$id]['sortable']),
        'align' => 'center',
      );
      $row[] = array(
        'data' => drupal_render($form['default'][$id]),
        'align' => 'center',
      );
      $row[] = array(
        'data' => drupal_render($form['info'][$id]['default_sort_order']),
        'align' => 'center',
      );
    }
    else {
      $row[] = '';
      $row[] = '';
      $row[] = '';
    }
    $row[] = array(
      'data' => drupal_render($form['info'][$id]['empty_column']),
      'align' => 'center',
    );
    $row[] = array(
      'data' => drupal_render($form['info'][$id]['sticky_column']),
      'align' => 'center',
    );
    $rows[] = $row;
  }

  // Add the special 'None' row.
  $rows[] = array(
    t('None'),
    '',
    '',
    '',
    '',
    '',
    '',
    array(
      'align' => 'center',
      'data' => drupal_render($form['default'][-1]),
    ),
    '',
    '',
    '',
  );

  $output .= theme('table', array('header' => $header, 'rows' => $rows));
  $output .= drupal_render_children($form);
  return $output;
}

/**
 * Implements hook_preprocess_theme().
 */
function sticky_columns_preprocess_views_view_table(&$vars) {
  $view = $vars['view'];
  $options = $view->style_plugin->options;
  $sticky_columns = FALSE;
  // Header cells classes.
  foreach ($vars['header_classes'] as $field => $classes) {
    if (!empty($options['info'][$field]['sticky_column'])) {
      $vars['header_classes'][$field] .= (!empty($classes) ? ' ' : '') . 'sticky-column';
      $sticky_columns = TRUE;
    }
  }
  // Body cells classes.
  foreach ($vars['field_classes'] as $field => $rows) {
    if (!empty($options['info'][$field]['sticky_column'])) {
      foreach ($rows as $num => $classes) {
        $vars['field_classes'][$field][$num] .= (!empty($classes) ? ' ' : '') . 'sticky-column';
      }
    }
  }
  // Main script and styles.
  if ($sticky_columns) {
    $vars['classes_array'][] = 'sticky-columns';
    drupal_add_js(drupal_get_path('module', 'sticky_columns') . '/sticky-columns.js');
    drupal_add_css(drupal_get_path('module', 'sticky_columns') . '/sticky-columns.css');
  }
}

/**
 * Implements hook_preprocess_HOOK() for views_aggregator_results_table.
 */
function sticky_columns_preprocess_views_aggregator_results_table(array &$variables) {
  $view = $variables['view'];
  $options = $view->style_plugin->options;
  $sticky_columns = FALSE;
  // Header cells classes.
  foreach ($variables['header_classes'] as $field => $classes) {
    if (!empty($options['info'][$field]['sticky_column'])) {
      $variables['header_classes'][$field] .= (!empty($classes) ? ' ' : '') . 'sticky-column';
      $sticky_columns = TRUE;
    }
  }
  // Body cells classes.
  foreach ($variables['field_classes'] as $field => $rows) {
    if (!empty($options['info'][$field]['sticky_column'])) {
      foreach ($rows as $num => $classes) {
        $variables['field_classes'][$field][$num] .= (!empty($classes) ? ' ' : '') . 'sticky-column';
        $sticky_columns = TRUE;
      }
    }
  }
  // Main script and styles.
  if ($sticky_columns) {
    $variables['classes_array'][] = 'sticky-columns';
    $module_path = drupal_get_path('module', 'sticky_columns');
    drupal_add_js($module_path . '/sticky-columns.js');
    drupal_add_css($module_path . '/sticky-columns.css');
  }
}

/**
 * Implements hook_preprocess_HOOK() for views_flipped_table.
 */
function sticky_columns_preprocess_views_flipped_table(array &$variables) {
  $view = $variables['view'];
  $options = $view->style_plugin->options;
  if (!empty($options['sticky_column'])) {
    drupal_add_js(drupal_get_path('module', 'sticky_columns') . '/sticky-columns.js');
    drupal_add_css(drupal_get_path('module', 'sticky_columns') . '/sticky-columns.css');

    $variables['classes_array'][] = 'sticky-columns';
    foreach ($variables['header_classes'] as $key => $classes) {
      $variables['header_classes'][$key] .= ' sticky-column';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for views_view_matrix.
 */
function sticky_columns_preprocess_views_view_matrix(array &$variables) {
  $view = $variables['view'];
  $options = $view->style_plugin->options;
  if (!empty($options['sticky_column'])) {
    drupal_add_js(drupal_get_path('module', 'sticky_columns') . '/sticky-columns.js');
    drupal_add_css(drupal_get_path('module', 'sticky_columns') . '/sticky-columns.css');

    $variables['matrix_attributes']['class'][] = 'sticky-columns';
    foreach ($variables['rows'] as $i => $classes) {
      $variables['rows'][$i]['header']['attributes']['class'][] = 'sticky-column';
    }
  }
}
