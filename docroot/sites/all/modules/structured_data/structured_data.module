<?php

/**
 * Implements hook_help().
 */
function structured_data_help($path, $arg) {
  switch ($path) {
    case 'admin/help#structured-data':
      return '<p>' . t('This is the Help page for the Structured Data module') . '</p>';
  }
}

/**
 * Implements hook_menu().
 */
function structured_data_menu() {
  $items['admin/config/structured-data'] = array(
    'title' => 'Structured data (Rich Snippets) - Main config',
    'description' => 'The main configuration page of all settings supported by this module',
    'page callback' => 'structured_data_main_page',
    'page arguments' => array(),
    'access arguments' => array(''),
//    'type' => ,
//    'file' => ,
  );

  $items['admin/config/structured-data/knowledge-graph/site-name'] = array(
    'title' => 'Structured data (Rich Snippets) - Site Name in Search Results',
    'description' => 'Use structured data markup on your public website to indicate the preferred name you want Google to display in Search results. .See <a href="https://developers.google.com/structured-data/site-name">Google Developers page</a> for more info.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('structured_data_admin_site_name_settings'),
    'file' => 'structured_data.admin.inc',
    'access arguments' => array('administer site configuration'),
  );
  $items['admin/config/structured-data/knowledge-graph/logos'] = array(
    'title' => 'Structured data (Rich Snippets) - Your Logo',
    'description' => 'You can specify which image Google should use as your organization\'s logo in search results and the Knowledge Graph. .See <a href="https://developers.google.com/structured-data/customize/logos">Google Developers page</a> for more info.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('structured_data_admin_logo_settings'),
    'file' => 'structured_data.admin.inc',
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements template_preprocess_html().
 *
 * Add the necesarry json-ld
 */
function structured_data_preprocess_html(&$vars) {
  $structured_data = array();

  if(drupal_is_front_page()) {
    $structured_data += structured_data_add_site_name_script();
    $structured_data += structured_data_add_site_logo_script();

    $json_ld_script = array(
      '#tag' => 'script',
      '#attributes' => array('type' => 'application/ld+json'),
      '#value' => json_encode($structured_data, JSON_UNESCAPED_SLASHES),
    );

    drupal_add_html_head($json_ld_script, 'structured_data_json_ld');
  }
}

function structured_data_add_site_name_script()
{
  $data = structured_data_get_setting('site_name');
  return array(
    'name' => $data['site_name'],
    'alternateName' => $data['alternative_site_name'],
    'url' => $data['canonical_url']
  );
}

function structured_data_add_site_logo_script()
{
  $data = structured_data_get_setting('site_logo');
  return array(
    'logo' => $data['site_logo'],
  );
}

/**
 * Retrieves a setting for the structured data given
 * @param  $setting_name The name of the setting to be retrieved.
 * @return The value of the requested setting, NULL if the setting does not exist.
 */
function structured_data_get_setting($setting_name)
{
  switch ($setting_name) {
    case 'site_name':
      //Pass no arguments (or NULL for both) to retrieve the currently stored elements.
      $head_elements = drupal_add_html_head();

      if(!empty($head_elements['metatag_canonical'])) {
        $canonical_url = $head_elements['metatag_canonical']['#value'];
      }

      if(variable_get('structured_data_site_name_default', FALSE)) {
        $site_name = variable_get('site_name','');
      }
      else
      {
        $site_name = variable_get('structured_data_site_name_custom','');
      }

      $alternative_site_name = variable_get('structured_data_site_name_alternative', '');
      if(empty($alternative_site_name)) {
        $alternative_site_name = $site_name;
      }
      return array(
        'site_name' => $site_name,
        'alternative_site_name' => $alternative_site_name,
        'canonical_url' => $canonical_url,
      );
      break;
    case 'site_logo':
      if(variable_get('structured_data_site_logo_default', TRUE)) {
        $site_logo = theme_get_setting('logo');
      }
      else
      {
        $logo = file_load(variable_get('structured_data_site_logo_custom'));
        $site_logo = file_create_url($logo->uri);
      }
      return array(
        'site_logo' => $site_logo,
      );
      break;
  }

}

function structured_data_main_page()
{
  $items['items'] = array(
    l('Structured data (Rich Snippets) - Site Name in Search Results', 'admin/config/structured-data/knowledge-graph/site-name'),
    l('Structured data (Rich Snippets) - Your Logo', 'admin/config/structured-data/knowledge-graph/logos'),
  );
  return theme('item_list', $items);
}
