<?php

/**
 * @file
 * Adds a handler for Dreambroker videos to Video Embed Field.
 *
 * @see video_embed_field.api.php
 */

/**
 * Implements hook_video_embed_handler_info().
 */
function video_embed_dreambroker_video_embed_handler_info() {
  $handlers['dreambroker'] = array(
    'title' => 'Dreambroker Video',
    'function' => 'video_embed_dreambroker_handle_video',
    'form' => 'video_embed_dreambroker_form',
    'form_validate' => 'video_embed_dreambroker_field_handler_dreambroker_form_validate',
    'domains' => array(
      'dreambroker.com',
      'www.dreambroker.com',
    ),
    'defaults' => array(
      'width' => 480,
      'height' => 270,
    ),
  );
  return $handlers;
}

/**
 * Defines the form elements for the Dreambroker videos configuration form.
 *
 * @param array $defaults
 *   The form default values.
 *
 * @return array
 *   The provider settings form array.
 */
function video_embed_dreambroker_form(array $defaults) {
  $form = array();

  $form['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Width'),
    '#description' => t('The width of the player.'),
    '#default_value' => $defaults['width'],
  );

  $form['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Height'),
    '#description' => t('The height of the player.'),
    '#default_value' => $defaults['height'],
  );

  return $form;
}

/**
 * Validates the form elements for the Dreambroker video configuration form.
 *
 * @param array $element
 *   The form element to validate.
 * @param array $form_state
 *   The form to validate state.
 * @param array $form
 *   The form to validate structure.
 */
function video_embed_dreambroker_field_handler_dreambroker_form_validate(array $element, array &$form_state, array $form) {
  video_embed_field_validate_dimensions($element);
}

/**
 * Handler for Dreambroker videos.
 *
 * @param string $url
 *   The video URL.
 * @param array $settings
 *   The settings array.
 *
 * @return array|bool
 *   The video iframe, or FALSE in case the ID can't be retrieved from the URL.
 */
function video_embed_dreambroker_handle_video($url, array $settings) {
  $id = _video_embed_dreambroker_get_video_id($url);

  if ($id) {
    $video = array(
      '#theme' => 'video_embed_dreambroker',
      '#url' => 'https://www.dreambroker.com/channel/' . $id[0] . '/iframe/' . $id[1],
      '#width' => $settings['width'],
      '#height' => $settings['height'],
    );
    return $video;
  }

  return FALSE;
}

/**
 * Helper function to get the Dreambroker video's id.
 *
 * @param string $url
 *   The video URL.
 *
 * @return array|bool
 *   The video IDs in an array, or FALSE in case the ID can't be retrieved from
 *   the URL.
 */
function _video_embed_dreambroker_get_video_id($url) {
  $matches = array();
  preg_match('#(?:https?:\/\/)?(?:www\.)?(?:dreambroker\.com\/(?:channel\/([a-z0-9]{8})\/([a-z0-9]{8})))#', $url, $matches);
  if ($matches && !empty($matches[1]) && !empty($matches[2])) {
    // Security check, this is the only place where we use user input.
    return array(check_plain($matches[1]), check_plain($matches[2]));
  }
  // Otherwise return FALSE.
  return FALSE;
}

/**
 * Implements hook_theme().
 *
 * Using video_embed_dreambroker.tpl.php as template.
 */
function video_embed_dreambroker_theme() {
  return array(
    'video_embed_dreambroker' => array(
      'template' => 'video_embed_dreambroker',
      'variables' => array(
        'url' => NULL,
        'width' => NULL,
        'height' => NULL,
      ),
    ),
  );
}
