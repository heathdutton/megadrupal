<?php

/**
 * @file
 * Table schema for the tables used by Social Stats module.
 */

/**
 * Implements hook_schema().
 */
function social_stats_schema() {
  $schema['social_stats_facebook'] = array(
    'description' => 'Table containing stats from Facebook for Social Stats module.',
    'fields' => array(
      'nid' => array(
        'description' => 'Node id of a node.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'fb_likes' => array(
        'description' => 'Number of facebook likes for this node.',
        'type' => 'int',
        'default' => 0,
      ),
      'fb_shares' => array(
        'description' => 'Number of facebook shares for this node.',
        'type' => 'int',
        'default' => 0,
      ),
      'fb_comments' => array(
        'description' => 'Number of facebook comments for this node.',
        'type' => 'int',
        'default' => 0,
      ),
      'fb_total' => array(
        'description' => 'Facebook likes + shares + comments for this node.',
        'type' => 'int',
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'Time at which the data was last fetched.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['social_stats_twitter'] = array(
    'description' => 'Table containing Twitter data for Social Stats module.',
    'fields' => array(
      'nid' => array(
        'description' => 'Node id of a node.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'tweets' => array(
        'description' => 'Number of times this node has been tweeted.',
        'type' => 'int',
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'Time at which the data was last fetched.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['social_stats_gplus'] = array(
    'description' => 'Table containing stats from Google Plus for Social Stats module.',
    'fields' => array(
      'nid' => array(
        'description' => 'Node id of a node.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'plusone' => array(
        'description' => 'Number of times this node has been plus oned.',
        'type' => 'int',
        'default' => 0,
      ),
      'share' => array(
        'type' => 'int',
        'description' => "GooglePlus Shares",
        'not null' => FALSE,
      ),
      'total' => array(
        'type' => 'int',
        'description' => "GooglePlus Total",
        'not null' => FALSE,
      ),
      'changed' => array(
        'description' => 'Time at which the data was last fetched.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['social_stats_linkedin'] = array(
    'description' => 'Table containing stats from LinkedIn for Social Stats module.',
    'fields' => array(
      'nid' => array(
        'description' => 'Node id of a node.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'linkedin_shares' => array(
        'description' => 'Number of this node has been shared on LinkedIn.',
        'type' => 'int',
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'Time at which the data was last fetched.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['social_stats_total'] = array(
    'description' => 'Value of (Facebook total + Twitter Shares + LinkedIn Shares + Google plus shares).',
    'fields' => array(
      'nid' => array(
        'description' => 'Node id of a node.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'total_virality' => array(
        'description' => '(Facebook total + Twitter Shares + LinkedIn Shares + Google plus shares)',
        'type' => 'int',
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function social_stats_uninstall() {
  $query = db_select('variable', 'v')
    ->fields('v', array('name'))
    ->condition('name', db_like('social_stats') . '%', 'LIKE')
    ->execute();
  while ($variable = $query->fetchAssoc()) {
    variable_del($variable['name']);
  }
}

/**
 * Implements hook_update_N().
 */
function social_stats_update_7001() {
  $spec = array(
    'type' => 'int',
    'description' => "GooglePlus Shares",
    'not null' => FALSE,
  );
  if (!db_field_exists('social_stats_gplus', 'share')) {
    db_add_field('social_stats_gplus', 'share', $spec);
  }
  $spec = array(
    'type' => 'int',
    'description' => "GooglePlus Total",
    'not null' => FALSE,
  );
  if (!db_field_exists('social_stats_gplus', 'total')) {
    db_add_field('social_stats_gplus', 'total', $spec);
  }
}

/**
 * Implements hook_update_N().
 */
function social_stats_update_7002() {
  $spec = array(
    'description' => 'Time at which the data was last fetched.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  if (!db_field_exists('social_stats_facebook', 'changed')) {
    db_add_field('social_stats_facebook', 'changed', $spec);
  }
  $spec = array(
    'description' => 'Time at which the data was last fetched.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  if (!db_field_exists('social_stats_twitter', 'changed')) {
    db_add_field('social_stats_twitter', 'changed', $spec);
  }
  $spec = array(
    'description' => 'Time at which the data was last fetched.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  if (!db_field_exists('social_stats_gplus', 'changed')) {
    db_add_field('social_stats_gplus', 'changed', $spec);
  }
  $spec = array(
    'description' => 'Time at which the data was last fetched.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  if (!db_field_exists('social_stats_linkedin', 'changed')) {
    db_add_field('social_stats_linkedin', 'changed', $spec);
  }
}
