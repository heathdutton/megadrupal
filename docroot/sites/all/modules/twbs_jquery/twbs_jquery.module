<?php

/**
 * @file
 * jQuery library integration.
 */

/**
 * Implements hook_help().
 */
function twbs_jquery_help($path, $arg) {
  $output = '';

  switch ($path) {
  case 'admin/help#twbs_jquery':
    return '<p>' . t('jQuery is a fast, small, and feature-rich JavaScript library.') . '</p>';
  }

  return $output;
}

/**
 * Implements hook_init().
 */
function twbs_jquery_init() {
  drupal_load('module', 'libraries');

  $libraries = twbs_jquery_libraries_info();
  foreach ($libraries as $name => $info) {
    libraries_load($name);
  }
}

/**
 * Implements hook_libraries_info().
 */
function twbs_jquery_libraries_info() {
  $libraries['jquery'] = array(
    'name' => 'jQuery',
    'version' => '1.10.2',
    'vendor url' => 'http://jquery.com',
    'download url' => 'http://code.jquery.com/jquery-1.10.2.min.js',
    'version arguments' => array(
      'file' => 'jquery.min.js',
      'pattern' => '/jQuery ([0-9a-zA-Z\.-]+)/',
    ),
    'files' => array(
      'js' => array(
        'jquery.min.js' => array(
          'every_page' => TRUE,
          'group' => JS_LIBRARY,
          'weight' => -39,
        ),
      ),
    ),
  );

  $libraries['jquery-ui'] = array(
    'name' => 'jQuery UI',
    'version' => '1.10.3',
    'vendor url' => 'http://jqueryui.com',
    'download url' => 'http://jqueryui.com/resources/download/jquery-ui-1.10.3.zip',
    'version arguments' => array(
      'file' => 'ui/minified/jquery-ui.min.js',
      'pattern' => '/jQuery UI - v([0-9a-zA-Z\.-]+)/',
    ),
    'files' => array(
      'js' => array(
        'ui/minified/jquery-ui.min.js' => array(
          'every_page' => TRUE,
          'group' => JS_LIBRARY,
          'weight' => -38,
        ),
      ),
      'css' => array(
        'themes/base/minified/jquery-ui.min.css' => array(
          'every_page' => TRUE,
        ),
      ),
    ),
  );

  $libraries['jquery-once'] = array(
    'name' => 'jQuery Once',
    'version' => '1.2.6',
    'vendor url' => 'http://plugins.jquery.com/once',
    'download url' => 'https://github.com/RobLoach/jquery-once/archive/1.2.6.zip',
    'version arguments' => array(
      'file' => 'jquery.once.min.js',
      'pattern' => '/jquery-once - v([0-9a-zA-Z\.-]+)/',
    ),
    'files' => array(
      'js' => array(
        'jquery.once.min.js' => array(
          'every_page' => TRUE,
          'group' => JS_LIBRARY,
          'weight' => -37,
        ),
      ),
    ),
  );

  $libraries['jquery-form'] = array(
    'name' => 'jQuery Form',
    'version' => '3.46.0',
    'vendor url' => 'http://jquery.malsup.com/form',
    'download url' => 'https://github.com/malsup/form/archive/3.46.0.zip',
    'version arguments' => array(
      'file' => 'jquery.form.js',
      'pattern' => '/version: ([0-9a-zA-Z\.]+)-[0-9\.]*/',
    ),
    'files' => array(
      'js' => array(
        'jquery.form.js' => array(
          'every_page' => TRUE,
        ),
      ),
    ),
    'dependencies' => array(
      'jquery-cookie',
    ),
  );

  $libraries['jquery-bbq'] = array(
    'name' => 'jQuery BBQ',
    'version' => '1.3pre',
    'vendor url' => 'http://benalman.com/projects/jquery-bbq-plugin',
    'download url' => 'https://github.com/hswong3i/jquery-bbq/archive/master.zip',
    'version arguments' => array(
      'file' => 'jquery.ba-bbq.min.js',
      'pattern' => '/jQuery BBQ: Back Button & Query Library - v([0-9a-zA-Z\.-]+)/',
    ),
    'files' => array(
      'js' => array(
        'jquery.ba-bbq.min.js' => array(
          'every_page' => TRUE,
        ),
      ),
    ),
  );

  $libraries['jquery-cookie'] = array(
    'name' => 'jQuery Cookie',
    'version' => '1.4.0',
    'vendor url' => 'http://plugins.jquery.com/cookie',
    'download url' => 'https://github.com/carhartl/jquery-cookie/archive/v1.4.0.zip',
    'version arguments' => array(
      'file' => 'jquery.cookie.js',
      'pattern' => '/jQuery Cookie Plugin v([0-9a-zA-Z\.-]+)/',
    ),
    'files' => array(
      'js' => array(
        'jquery.cookie.js' => array(
          'every_page' => 'TRUE',
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_css_alter().
 */
function twbs_jquery_css_alter(&$css) {
  $path = drupal_get_path('module', 'twbs_jquery');

  // Automatically replace CSS that conflict with TWBS.
  $files = file_scan_directory($path . '/css', '/\.css$/');
  foreach ($files as $file) {
    $hook = preg_replace(
      '/^.*\/css\/(modules|themes)*\/*/',
      '',
      $file->uri
    );
    $pattern = '/' . preg_quote($hook, '/') . '$/';

    if ($key = array_shift(preg_grep($pattern, array_keys($css)))) {
      // Only restore settings with replacement if placeholder is not empty.
      if (filesize($file->uri) > 0) {
        $css[$file->uri] = $css[$key];
        $css[$file->uri]['data'] = $file->uri;
      }

      // Exclude original CSS.
      unset($css[$key]);
    }
  }
}

/**
 * Implements hook_js_alter().
 */
function twbs_jquery_js_alter(&$javascript) {
  $path = drupal_get_path('module', 'twbs_jquery');

  // Automatically replace JS that conflict with TWBS.
  $files = file_scan_directory($path . '/js', '/\.js$/');
  foreach ($files as $file) {
    $hook = preg_replace(
      '/^.*\/js\/(modules|themes)*\/*/',
      '',
      $file->uri
    );
    $pattern = '/' . preg_quote($hook, '/') . '$/';

    if ($key = array_shift(preg_grep($pattern, array_keys($javascript)))) {
      // Only restore setting with replacement if placeholder is not empty.
      if (filesize($file->uri) > 0) {
        $javascript[$file->uri] = $javascript[$key];
        $javascript[$file->uri]['data'] = $file->uri;
      }

      // Exclude original JS.
      unset($javascript[$key]);
    }
  }
}
