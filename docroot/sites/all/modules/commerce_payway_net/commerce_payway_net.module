<?php

/**
 * @file
 * Provides a Payway Net payment method for Drupal Commerce
 *
 */

// module_load_include('inc', 'commerce_payway_net', 'commerce_payway_net.forms');
// module_load_include('inc', 'commerce_payway_net', 'commerce_payway_net.cruft');

/**
 * Implements hook_menu().
 */
function commerce_payway_net_menu() {
  $items['checkout/payway_net_notify'] = array(
    'title' => t('Callback handler'),
    'page callback' => 'commerce_payway_net_notify_handler',
    'callback arguments' => array(1, 4),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'file' => 'commerce_payway_net.pages.inc',
  );
  return $items;
}

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_payway_net_commerce_payment_method_info() {
  $payment_methods = array();
  $payment_methods['commerce_payway_net'] = array(
    'title' => t('Pay by credit card via PayWay Net'),
    'short_title' => t('Pay by credit card via PayWay Net'),
    'display_title' => t('Pay by credit card via PayWay Net'),
    'description' => t('Pay by credit card via PayWay Net'),
    'active' => TRUE,
    'terminal' => FALSE,
    'offsite' => TRUE,
    //'offsite_autoredirect' => TRUE,
  );
  return $payment_methods;
}

/**
 * Payment method callback: settings form.
 */
function commerce_payway_net_settings_form($settings = NULL) {
  $form = array();
  $settings = (array)$settings + array(
  'commerce_payway_net_encryptionKey' => '',
  'commerce_payway_net_billerCode' => '',
  'commerce_payway_net_username' => '',
  'commerce_payway_net_password' => '',
  'commerce_payway_net_caCertsFile' => '',
  'commerce_payway_net_merchantId' => 'TEST',
  'commerce_payway_net_paypalEmail' => 'test@example.com',
  'commerce_payway_net_payWayBaseUrl' => 'https://www.payway.com.au/',
  );
  $form['commerce_payway_net_encryptionKey'] = array(
    '#type' => 'textfield',
    '#title' => t('Encryption Key'),
    '#size' => 80,
    '#description' => t('eg. 123456789'),
    '#default_value' => $settings['commerce_payway_net_encryptionKey'],
    '#required' => TRUE,
  );
  $form['commerce_payway_net_billerCode'] = array(
    '#type' => 'textfield',
    '#title' => t('Biller Code'),
    '#size' => 80,
    '#description' => t('eg. 123456'),
    '#default_value' => $settings['commerce_payway_net_billerCode'],
    '#required' => TRUE,
  );
  $form['commerce_payway_net_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#size' => 80,
    '#description' => t('eg. K12345'),
    '#default_value' => $settings['commerce_payway_net_username'],
    '#required' => TRUE,
  );
  $form['commerce_payway_net_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#size' => 80,
    '#description' => t('eg. abcdefghijk'),
    '#default_value' => $settings['commerce_payway_net_password'],
    '#required' => TRUE,
  );
  $form['commerce_payway_net_caCertsFile'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to cacerts.crt file'),
    '#size' => 80,
    '#description' => t('eg. /home/username/dev/certs/cacerts.crt'),
    '#default_value' => $settings['commerce_payway_net_caCertsFile'],
    '#required' => TRUE,
  );
  $form['commerce_payway_net_merchantId'] = array(
    '#type' => 'textfield',
    '#title' => t('Merchant Id'),
    '#size' => 80,
    '#description' => t('eg. TEST'),
    '#default_value' => $settings['commerce_payway_net_merchantId'],
    '#required' => TRUE,
  );
  $form['commerce_payway_net_paypalEmail'] = array(
    '#type' => 'textfield',
    '#title' => t('PayPal email address'),
    '#size' => 80,
    '#description' => t('eg. test@example.com'),
    '#default_value' => $settings['commerce_payway_net_paypalEmail'],
    '#required' => TRUE,
  );
  $form['commerce_payway_net_payWayBaseUrl'] = array(
    '#type' => 'textfield',
    '#title' => t('PayWay Base URL'),
    '#size' => 80,
    '#description' => t('eg. https://www.payway.com.au/'),
    '#default_value' => $settings['commerce_payway_net_payWayBaseUrl'],
    '#required' => TRUE,
  );
  return $form;
}

/**
 * Payment method callback: submit form.
 */
function commerce_payway_net_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  $form = array();
  // Merge in values from the order.
  if (!empty($order->data['commerce_payway_net'])) {
    $pane_values += $order->data['commerce_payway_net'];
  }
  return $form;
}

/**
 * Generate form which will be used to redirect browser to PayWay.
 *
 * I'd prefer to move the drupal_goto() to $form['#redirect'] or even the hook_submit() for the previous 
 * form, but that interferes with the other submit functions. So here it is.
 */
function commerce_payway_net_redirect_form($form, &$form_state, $order, $payment_method) {
  module_load_include('inc', 'commerce_payway_net');
  
  $return_link_url = url('checkout/' . $order->order_id . '/payment/return/' . $order->data['payment_redirect_key'], array(), array('absolute' => TRUE));
  // Commerce has price in cents, Payway wants dollars
  $payment_amount = $order->commerce_order_total['und'][0]['amount'] / 100;
  $return_link_url = url($return_link_url, array('absolute' => TRUE));
  $payway_base_url = $payment_method['settings']['commerce_payway_net_payWayBaseUrl'];
  $biller_code = $payment_method['settings']['commerce_payway_net_billerCode'];
  $token_variables = array(
    'payway_url'        => $payway_base_url,
    'payment_reference' => $order->order_id,
    'payment_amount'    => $payment_amount,
    'return_link_url'   => $return_link_url,
    'biller_code'       => $biller_code,
    'username'          => $payment_method['settings']['commerce_payway_net_username'],
    'password'          => $payment_method['settings']['commerce_payway_net_password'],
    'merchant_id'       => $payment_method['settings']['commerce_payway_net_merchantId'],
    'paypal_email'      => $payment_method['settings']['commerce_payway_net_paypalEmail'],
    'cert_path'         => $payment_method['settings']['commerce_payway_net_caCertsFile'],
  );
  try {
    $token = _commerce_payway_net_get_token($token_variables);
    $url = $payway_base_url .
      'MakePayment?biller_code=' . $biller_code . 
      '&token=' . $token;
    drupal_goto($url);
  }
  catch (Exception $e) {
    form_set_error('Unable to communicate with PayWay Net payment gateway.');    
  }
}
