<?php

/**
 * @file
 * Embed Import module.
 */

define('EMBED_IMPORT_PATH', 'sites/all/imports/embed');

/**
 * Implements hook_page_build().
 */
function embed_import_page_build(&$page) {
  $tags = embed_import_get_tags();

  // Allow other modules to interact directly with tags before output.
  drupal_alter('embed_import', $tags);

  if (!empty($tags)) {
    foreach ($tags as $region => $tags_in_region) {
      $output = array(
        '#weight' => 25,
        '#type' => 'markup',
        '#markup' => implode('', $tags_in_region),
      );

      if ($region == 'head') {
        // Add the import in page head tag.
        drupal_add_html_head($output, 'embed_import');
      }
      else {
        // Add the import to specified page region.
        $page['page_' . $region]['embed_import'] = $output;
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function embed_import_theme($existing, $type, $theme, $path) {
  $templates = embed_import_get_templates();
  $themes = array();

  if (!empty($templates)) {
    foreach ($templates as $type => $template) {
      foreach ($template as $hook => $theme_array) {
        $themes['embed_import_' . $type . '_' . $hook] = $theme_array;
      }
    }
  }

  return $themes;
}

/**
 * Scans a import directory for template files.
 *
 * @return array
 */
function embed_import_get_templates() {
  $templates = array();

  foreach (array('top', 'bottom', 'head') as $type) {
    $path = EMBED_IMPORT_PATH . '/' . $type;
    $regex = '/' . '\.tpl\.php' . '$' . '/';

    // Because drupal_system_listing works the way it does, we check for real
    // templates separately from checking for patterns.
    $files = drupal_system_listing($regex, $path, 'name', 0);
    foreach ($files as $template => $file) {
      // Chop off the remaining extensions if there are any. $template already
      // has the rightmost extension removed, but there might still be more,
      // such as with .tpl.php, which still has .tpl in $template at this point.
      if (($pos = strpos($template, '.')) !== FALSE) {
        $template = substr($template, 0, $pos);
      }
      // Transform - in filenames to _ to match function naming scheme
      // for the purposes of searching.
      $hook = strtr($template, '-', '_');

      $templates[$type][$hook] = array(
        'template' => $template,
        'path' => $path,
      );
    }
  }

  return $templates;
}

/**
 * Get rendered templates content.
 *
 * @return array
 */
function embed_import_get_tags() {
  if ($cache = cache_get('embed_import_tags')) {
    $tags = $cache->data;
  }
  else {
    $tags = array();
    $templates = embed_import_get_templates();

    if (!empty($templates)) {
      foreach ($templates as $type => $template) {
        foreach ($template as $hook => $theme) {
          $tags[$type]['embed_import_' . $type . '_' . $hook] = theme('embed_import_' . $type . '_' . $hook);
        }
      }
    }

    cache_set('embed_import_tags', $tags);
  }

  return $tags;
}
