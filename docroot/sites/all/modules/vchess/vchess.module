<?php

/**
 * @file
 * Drupal chess module
 * VChess is based on OCC chess by Michael Speck
 * VChess for Drupal 7 is based on VChess for Drupal 6 by Andrej Prochazka
 *
 */

// Gamer module files
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'gamer') . '/rating.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'gamer') . '/player.inc';

// require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'pos') . '/pos.install';

// VChess module files
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/vchess.pages.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/vchess.utils.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/vchess.rules.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/stats.inc';

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/io.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/render.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/game.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/scoresheet.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/piece.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/board.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/move.inc';
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'vchess') . '/square.inc';

global $base_url; // e.g. http://localhost/chess_drupal-7.14

// The name of a blank piece
define("BLANK", " ");

// Define the default time per move
define("DEFAULT_TIME_PER_MOVE", 3);
define("DEFAULT_TIME_UNITS", 'days');

define("VCHESS_PENDING_LIMIT", 3);

// During testing, it is sometimes useful to allow the possiblity to play against
// oneself.
define("MAY_PLAY_SELF", FALSE);

// Only set the error display on if debugging locally
if (strpos($base_url, "localhost") > 0) {
  ini_set('display_errors', 'On');
  error_reporting(E_ALL);
}






/**
 * Implementation of hook_block_info().
 */
function vchess_block_info($delta = 0) {
  $block = array();

  // The "Outstanding Moves" Block
  $block[0]['info'] = t('VChess menu');

  // The "Random Chess Game" Block
//   $block[1]['info'] = t('Chess - Random Chess Game');

  return $block;
}

/**
 * Implementation of hook_block_view().
 */
function vchess_block_view($delta = 0) {
  $block = array();
  // Treat each block seperately
  switch ($delta) {
    // The "Outstanding Moves" Block
    case 0:
      if ($block['content'] = generate_vchess_menu()) {
        $block['subject'] = t('VChess menu');
      }
      break;

    // The "Random Chess Game" Block
//     case 1:
//       // If there are games to show
//       if ($block['content'] = generate_html_random_game()) {
//         // Add the style-sheet
//         drupal_add_css(drupal_get_path('module', 'chess') . '/chess.css');
//         // Set the subject
//         $block['subject'] = t('Random Chess Game');
//       }
//       break;
  }
  return $block;
}

/**
 * Generate the HTML for the VChess block
 */
function generate_vchess_menu() {
  $html = "";
  
  $html .= "Status:";
  $html .= "<ul>";
  $html .= "<li><a href='" . "?q=vchess/main'>Main</a>";
  $html .= "<li><a href='" . "?q=vchess/my_current_games'>My current games</a>";
  $html .= "<li><a href='" . "?q=vchess/all_current_games'>All current games</a>";
  $html .= "<li><a href='" . "?q=vchess/players'>Players</a>";
  $html .= "</ul>";
  
  $html .= "Challenges:";
  $html .= "<ul>";
  $html .= "<li><a href='" . "?q=vchess/challenges'>Challenges</a>";
  $html .= "<li><a href='" . "?q=vchess/create_challenge'>Create challenge</a>";  
  $html .= "<li><a href='" . "?q=vchess/default_challenge'>Default challenge</a>";
  $html .= "</ul>";
  
  $html .= "New games:";
  $html .= "<ul>";
  $html .= "<li><a href='" . "?q=vchess/random_game_form'>New random game</a>";
  $html .= "<li><a href='" . "?q=vchess/opponent_game_form'>New opponent game</a>";
  $html .= "</ul>";
   
  $html .= "Admin:";
  $html .= "<ul>";
  $html .= "<li><a href='" . "?q=admin/config/development/testing'>Run tests</a>";
  $html .= "<li><a href='" . "?q=vchess/test'>Run single test</a>";
  $html .= "<li><a href='" . "?q=vchess/reset_games'>Reset games</a>";
  $html .= "</ul>";
  
  return $html;
}

/**
 * Display help and module information
 */
function vchess_help($path, $arg) {
  if ($path == 'admin/help#vchess') {
    $txt = t('VChess module.  Chess games between site users');
    return $txt;
  }
}

/**
 * VChess permissions
 */
function vchess_permission() {
  return array(
      'view player' => array(
          'title' => t('View player'),
          'description' => t('Access to be able to view details of a particular player')),
      'basic access' => array(
          'title' => t('Basic access'),
          'description' => t('Access basic VChess functions such as ability to create a game')),
      'view game' => array(
          'title' => t('View a particular game'),
          'description' => t('Ability to see a particular game.')),
      'view challenges' => array(
          'title' => t('View the table of open challenges'),
          'description' => t('Ability to see the table of open challenges.')),
      'accept challenge' => array(
          'title' => t('Accept a challenge'),
          'description' => t('Ability to accept a challenge.')),
      'my current games' => array(
          'title' => t('My current games'),
          'description' => t('Ability for a user to see a list of their own games.  This should be only for authenticated users.')),
      'all current games' => array(
          'title' => t('All current games'),
          'description' => t('Ability to see a list of all current games.')),
      'view players table' => array(
          'title' => t('View players table'),
          'description' => t('View the list of all players with their statistics')),
      'reset games' => array(
          'title' => t('Reset games'),
          'description' => t('This enables someone to completely reset the games database.'),
          'restrict access' => TRUE),
  );
}

/**
 * hook_menu() implementation
 */
function vchess_menu() {
  $items = array();

  $items['vchess/main'] = array(
      'page callback' => 'vchess_main_page',
      'access arguments' => array('basic access'),
      'title' => 'Main',
      'type' => MENU_NORMAL_ITEM,
  );

  $items['vchess/opponent_game_form'] = array(
      'page callback' => 'drupal_get_form',
      'access arguments' => array('basic access'),
      'page arguments' => array('vchess_opponent_game_form'),
      'title' => 'Create chess game against named player',
      'type' => MENU_CALLBACK,
  );
  
  $items['vchess/random_game_form'] = array(
      'page callback' => 'drupal_get_form',
      'access arguments' => array('basic access'),
      'page arguments' => array('vchess_random_game_form'),
      'title' => 'Create chess game against random player',
      'type' => MENU_CALLBACK,
  );
  
  $items['vchess/default_challenge'] = array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('vchess_create_default_challenge'),
      'access arguments' => array('basic access'),
      'title' => 'Create chess game challenge',
      'type' => MENU_CALLBACK,
  );
  
  $items['vchess/create_challenge'] = array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('vchess_create_challenge_form'),
      'access arguments' => array('basic access'),
      'title' => 'Create chess game challenge',
      'type' => MENU_CALLBACK,
  );
  
  $items['vchess/challenges'] = array(
      'page callback' => 'vchess_challenges',
      'access arguments' => array('view challenges'),
      'title' => 'Challenges',
      'type' => MENU_NORMAL_ITEM,
  );
  
  $items['vchess/accept_challenge/%'] = array(
      'page callback' => 'vchess_accept_challenge',
      'page arguments' => array(2),
      'access arguments' => array('accept challenge'),
      'type' => MENU_CALLBACK,
  );
  
  $items['vchess/my_current_games'] = array(
      'page callback' => 'vchess_my_current_games',
      'access arguments' => array('my current games'),
      'title' => 'My current games',
      'type' => MENU_NORMAL_ITEM,
  );
  
  $items['vchess/current_games/%'] = array(
      'page callback' => 'vchess_users_current_games',
      'page arguments' => array(2),
      'access arguments' => array('basic access'),
      'title' => "Current games",
      'type' => MENU_CALLBACK,
  );
  
  $items['vchess/all_current_games'] = array(
      'page callback' => 'vchess_all_current_games_page',
      'access arguments' => array('all current games'),
      'title' => 'All current games',
      'type' => MENU_NORMAL_ITEM,
  );

  $items['vchess/players'] = array(
      'page callback' => 'vchess_players',
      'access arguments' => array('view players table'),
      'type' => MENU_NORMAL_ITEM,
  );

  $items['vchess/game/%'] = array(
      'page callback' => 'vchess_game',
      'page arguments' => array(2),
      'access arguments' => array('view game'),
      'type' => MENU_CALLBACK,
  );

  $items['vchess/player/%'] = array(
      'page callback' => 'vchess_player',
      'page arguments' => array(2),
      'access arguments' => array('view player'),
      'type' => MENU_CALLBACK,
  );
  
  $items['vchess/reset_games'] = array(
      'page callback' => 'drupal_get_form',
      'access arguments' => array('reset games'),
      'page arguments' => array('vchess_reset_games_form'),
      'title' => 'Reset ALL games!',
      'type' => MENU_CALLBACK,
   );
      
  $items['vchess/test'] = array(
      'page callback' => 'vchess_test',
      'access arguments' => array('reset games'),
      'title' => 'Perform a test',
      'type' => MENU_CALLBACK,
  );

  return $items;
}




