<?php
/** 
 * @file
 */ 

/**
 * Implements hook_menu(). Provides the geolocation callback.
 */
function geolocate_menu() {

  $items = array();

  $items['geo/locate'] = array (
    'title' => 'HTML5 Geolocate callback',
    'page callback' => 'geolocate_callback',
    'access arguments' => array('access content'),
    'delivery callback' => 'drupal_json_output' 
    
  );
    $items['admin/config/system/geolocate'] = array(
    'title'            => 'Geolocate',
    'description'      => 'Enable console logging of user location.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('geolocate_admin_settings'),
    'access arguments' => array('administer geolocate'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'geolocate.admin.inc',
  );
  
 
  return $items;
}
 
 /**
 * Implements hook_permission().
 */
function geolocate_permission() {
  return array(
  'administer geolocate' => array(
    'title' => t('Administer Geolocate'),
  ),
  );
}
 
/**
 * Adds geolocate javascript to page.
 */   
function geolocate_page_build(&$page) {

  // @TODO: Provide a way for other modules to tell Drupal which pages to add Geolocate to. 

  $mainjs = drupal_get_path('module', 'geolocate') . '/main.js';
  
  $settings = array(
    'debug' => _geolocate_debug(),
    'basepath' => '/' . $_SERVER['HTTP_HOST'] . base_path(), // @Sorry, jQuery made me do it. 
    );
    
  // drupal_add_js() is deprecated, so we don't use it. 
  // drupal_add_js(array($mainjs => $settings), 'setting');
  
  $page['header']['#attached']['js'] = array(
    array(
      'data' => $mainjs,
      'options' => array(
        'type' => 'file',
        'every_page' => TRUE, 
        'scope' => 'footer',
        //'preprocess' => MEH,
      ),
    ),
  );

  $page['header']['#attached']['js'][] = array(
    'data' => array('geolocate' => $settings),
    'type' => 'setting'
  );  
  
}

/**
 * Callback handler for HTML5 geolocation. 
 * This function allows Drupal to access our service class.
 * @TODO: Move everything into service class except for invocation. 
 * No return value. 
 */
function geolocate_callback($data) { 

  // @FIXME (try/catch)
  //if ( empty($_POST["lat"]) || empty($_POST['lng']) ) { die('this should be a try/catch'); }

  $latlong = array('lat' => $_POST["lat"], 'long' => $_POST["lng"]);
  
  $geolocate = new geolocateProvider($latlong);

  session_start(); 
    $_SESSION['geolocate'] = array();
    $_SESSION['geolocate']['lat'] = $geolocate->getLat();
    $_SESSION['geolocate']['long'] = $geolocate->getLong();

  // Now invoke any geolocate hooks implemented by location subscribers 
  geolocate_provider();

  // @DEBUG
   return 'user location is ' . $_SESSION['geolocate']['lat'] . ' + ' . $geolocate->getLong();

}

/** 
 * @class geolocateProvider
 *  $geodata: array containing current user's latitude & longitude.
 *
 */
class geolocateProvider {      

  protected $userLat;
  protected $userLong;
  
  public function __construct($geodata) {
    
    $this->userLat = $this->setLat($geodata);
    $this->userLong = $this->setLong($geodata);
    
  }
  
  protected function setLat($geodata) {
    
    return $geodata['lat'];
    
  }

  protected function setLong($geodata) {
    
    return $geodata['long'];  
    
  }

  public function getLat() {
    
   return $this->userLat;
    
  }

  public function getLong() {

    return $this->userLong; 
    
  }
  
}

/**
 * Implements hook_hook_info().
 */ 
function geolocate_hook_info() {
  $hooks['geolocate_info'] = array(
    'group' => 'geolocate',
  );
  
  return $hooks;
} 

/**
 * @function hook_geolocate_info
 * Allows other Drupal modules to subscribe to geolocate services using HOOK_geolocate_info.
 */ 
function geolocate_provider() {
    
  if (sizeof(module_implements('geolocate_info')) > 0) {
    module_invoke_all('geolocate_info');
  }
 
} 

/**
 * Implementation of hook_views_api
 */
function geolocate_views_api() {
  return array(
//    'api' => '3.0',
    'api' => 3,

    'path' => drupal_get_path('module', 'geolocate') . '/views',
  );
}

 /**
 * Implements hook_permission().
 */
function _geolocate_debug() {
  return variable_get('geolocate_debug', '');
 
}

// @FIXME: Why is this needed here? Both files should load from geolocate.info. 
include_once 'geolocate.views.inc';
include_once 'views/views_handler_geolocate_proximity.inc';
