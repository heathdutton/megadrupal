<?php

/**
 * @file
 * Adds Swedish canonical courses on install.
 */

function cp_swedish_courses_install() {
  if (!cp_swedish_courses_get_vid()) {
    drupal_set_message(t('Cannot find vocabulary for canonical courses. Cannot add canonical courses to it.'), 'warning');
    return;
  }

  // The array structure for the canonical courses to add.
  $courses = array(
    'Matematik' => array(
      'Matematik 1a',
      'Matematik 1b',
      'Matematik 1c',
      'Matematik 2a',
      'Matematik 2b',
      'Matematik 2c',
      'Matematik 3b',
      'Matematik 3c',
      'Matematik 4',
      'Matematik 5',
      'Matematik 1a',
      'Matematik â€“ specialisering',
    ),
    'Fysik' => array(
      'Fysik 1a',
      'Fysik 1b1',
      'Fysik 1b2',
      'Fysik 2',
      'Fysik 3',
    ),
  );

  cp_swedish_courses_add_course_recursive($courses);
}

/**
 * Helper function for fetching the VID used for cp_canonical.
 */
function cp_swedish_courses_get_vid() {
  static $vid;
  if ($vid) {
    return $vid;
  }

  // Get the vocabulary ID for the canonical courses.
  if (!($vid = taxonomy_vocabulary_machine_name_load('cp_canonical')->vid)) {
    return FALSE;
  }

  return $vid;
}

/**
 * Creates term names based on an associative array of names.
 *
 * @param $courses
 *   Either an array with term names, keyed by parent name, or a single term
 *   name.
 * @param $parent_id
 *   Any parent ID to use when creating new terms. Only used internally.
 */
function cp_swedish_courses_add_course_recursive($courses, $parent_id = 0) {
  // Case one: We have a parent term with children.
  if (is_array($courses)) {
    foreach ($courses as $parent => $children) {
      // Create the parent taxonomy term.
      $values = array(
        'name' => $parent,
        'vid' => cp_swedish_courses_get_vid(),
        'vocabulary_machine_name' => 'cp_canonical',
        'parent' => $parent_id,
      );
      $parent_term = entity_create('taxonomy_term', $values);
      entity_save('taxonomy_term', $parent_term);

      // Loop through the children, calling this same function â€“ they might be
      // parents as well.
      foreach ($children as $child) {
        cp_swedish_courses_add_course_recursive($child, $parent_term->tid);
      }
    }
  }
  // Case two, the easy one: We have a flat child term, with no additional
  // children.
  else {
    $values = array(
      'name' => $courses,
      'vid' => cp_swedish_courses_get_vid(),
      'vocabulary_machine_name' => 'cp_canonical',
      'parent' => $parent_id,
    );
    $parent_term = entity_create('taxonomy_term', $values);
    entity_save('taxonomy_term', $parent_term);
  }
}
