<?php

/**
 * @file
 * Install Mica Core module.
 */

require_once('mica_core.default_data.inc');

/**
 * Implements hook_install().
 */
function mica_core_install() {
  $text_formats = _mica_core_default_text_formats();
  _mica_core_default_content_types();
  _mica_core_default_variables();

  $filtered_html_permission = filter_permission_name($text_formats['filtered_html']);
  _mica_core_default_permissions($filtered_html_permission);

  _mica_core_default_admin_theme();

  node_types_rebuild();

  // need to create default content here because other modules are based on this
  _mica_core_default_pages();
  module_disable(array('update_manager'));
  module_enable(array('admin_views'));
  _mica_core_disable_view(array('admin_views_node'));
}

function _mica_core_disable_view($names) {
  // grab list of views that are already disabled
  $views_status = variable_get('views_defaults', array());

  // add our views to be disabled to the list
  foreach ($names as $key => $viewname) {
    $views_status[$viewname] = TRUE;
  }

  // reset the variable with the new list
  variable_set('views_defaults', $views_status);

  // empty cache now
  if (function_exists('views_invalidate_cache')) {
    views_invalidate_cache();
  }
}

/**
 * Update script for release 1.2
 */
function mica_core_update_7120(&$sandbox) {
  $result = db_query('SELECT * FROM {mica_relation}')->fetchAll();
  if (!empty($result)) {
    variable_set('mica_relation_export', $result);
  }
  db_drop_table('mica_relation');

  _mica_core_rebuild_registry();
}

/**
 * Replace built-in node title by title_field.
 * Disable auto_nodetitle module as it is replaced by auto_entitylabel
 */
function mica_core_update_7500(&$sandbox) {
  cache_clear_all();
  _mica_core_rebuild_registry();

  module_enable(array('menu_view_unpublished'));

  _mica_core_set_features_rebuild_variable('mica_community');
  _mica_core_set_features_rebuild_variable('mica_data_access');
  _mica_core_set_features_rebuild_variable('mica_datasets');
  _mica_core_set_features_rebuild_variable('mica_networks');
  _mica_core_set_features_rebuild_variable('mica_projects');
  _mica_core_set_features_rebuild_variable('mica_studies');

  mica_core_replace_titles(array('page', 'article'));

  // Disable module auto_nodetitle
  variable_del('ant_pattern_study');
  variable_del('ant_php_study');
  variable_del('ant_study');
  variable_del('ant_pattern_network');
  variable_del('ant_php_network');
  variable_del('ant_network');
  module_disable(array('auto_nodetitle'));
}

/**
 * Move queries from Mica Datasets to Mica Query module
 */
function mica_core_update_7600(&$update) {
  _mica_core_export_queries();
  _mica_core_export_connectors();
  _mica_core_rebuild_registry();
}

/**
 * Add new variable for Bootstrap theme
 */
function mica_core_update_7700(&$update) {
  features_rebuild(array('mica_core' => array('variable')));
}

/**
 * Enable module JQuery Ui Multiselect to enhance select widgets
 */
function mica_core_update_7800(&$update) {
  module_enable(array('jquery_ui_multiselect_widget', 'profile2'));
  features_revert(array('mica_core' => array('field')));

  // Exported format: Bootstrap.
  $bootstrap_format = array(
    'format' => 'bootstrap',
    'name' => 'Bootstrap',
    'cache' => 1,
    'status' => 1,
    'weight' => 30,
    'filters' => array(),
  );
  $bootstrap_format = (object) $bootstrap_format;
  filter_format_save($bootstrap_format);
}

function mica_core_update_7802(&$update) {
  features_revert(array(
    'mica_core' => array(
      'dependencies',
      'variable',
      'field_base',
      'field_instance',
      'profile2_type',
      'ckeditor_profile',
    )
  ));
}

function _mica_core_export_queries() {
  $result = db_query('SELECT * FROM mica_dataset_query')->fetchAll();
  if (!empty($result)) {
    variable_set('mica_query_export', $result);
  }
  db_drop_table('mica_dataset_query');

  $result = db_query('SELECT * FROM mica_dataset_query_term')->fetchAll();
  if (!empty($result)) {
    variable_set('mica_query_term_export', $result);
  }
  db_drop_table('mica_dataset_query_term');
}

function _mica_core_export_connectors() {
  $result = db_query('SELECT * FROM mica_dataset_connector')->fetchAll();
  if (!empty($result)) {
    variable_set('mica_connector_export', $result);
  }
  db_drop_table('mica_dataset_connector');
}

function mica_core_replace_titles($types) {

  spl_autoload_register('_search_api_solr_autoload');

  foreach ($types as $type) {
    $batch = batch_get();
    if (!title_field_replacement_enabled('node', $type, 'title')) {
      $batch['operations'][] = array('title_field_replacement_toggle', array('node', $type, 'title'));
      $batch['operations'][] = array('title_field_replacement_batch', array('node', $type, 'title'));

      batch_set($batch);
    }
  }

  cache_clear_all();
}

/**
 * Rebuild registry tables
 */
function _mica_core_rebuild_registry() {
  cache_clear_all('lookup_cache', 'cache_bootstrap');
  cache_clear_all('variables', 'cache_bootstrap');
  cache_clear_all('module_implements', 'cache_bootstrap');

  registry_rebuild(); // At lower level
}

function _mica_core_set_features_rebuild_variable($module) {
  if (module_exists($module)) {
    variable_set($module . '_features_rebuild_completed', TRUE);
  }
}
