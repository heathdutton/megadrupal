<?php
/**
 * Copyright 2012(c) OBiBa, All rights reserved.
 *
 * This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @file
 * Install, update and uninstall functions for the Mica Field Description module.
 */


/**
 * Implements hook_install().
 */
function mica_field_description_install() {
  mica_core_configure_feeds_tamper('mica_field_description');
}

/**
 *
 * Updates the mapping of field_value_type. Values will be changed from-to:<br>
 * 'INTEGER' = 'integer'<br>
 * 'DATE' = 'date'<br>
 * 'DECIMAL' = 'decimal'<br>
 * 'BOOLEAN' = 'boolean'<br>
 * 'TEXT' = 'text'<br>
 */
function mica_field_description_update_7120() {

  watchdog('mica', 'Import dataschema domains', array(), WATCHDOG_INFO);

  db_update('field_data_field_value_type')
    ->fields(array('field_value_type_value' => 'text'))
    ->condition('field_value_type_value', 'TEXT')
    ->execute();

  db_update('field_data_field_value_type')
    ->fields(array('field_value_type_value' => 'date'))
    ->condition('field_value_type_value', 'DATE')
    ->execute();

  db_update('field_data_field_value_type')
    ->fields(array('field_value_type_value' => 'integer'))
    ->condition('field_value_type_value', 'INTEGER')
    ->execute();

  db_update('field_data_field_value_type')
    ->fields(array('field_value_type_value' => 'boolean'))
    ->condition('field_value_type_value', 'BOOLEAN')
    ->execute();

  db_update('field_data_field_value_type')
    ->fields(array('field_value_type_value' => 'decimal'))
    ->condition('field_value_type_value', 'DECIMAL')
    ->execute();

  // set the column field_value_type_value type to BINARY so the string comparisons will be case sensitive,
  // allowing list.module._list_values_in_use to return an empty array
  db_query('ALTER TABLE {field_data_field_value_type} MODIFY field_value_type_value varchar(255) BINARY DEFAULT NULL');

  features_revert(array('mica_field_description' => array('field', 'node', 'user_permission')));

  db_query('ALTER TABLE {field_data_field_value_type} MODIFY field_value_type_value varchar(255) DEFAULT NULL');

  mica_core_configure_feeds_tamper('mica_field_description');
}

/**
 * Update Mica Field Description views
 */
function mica_field_description_update_7700(&$update) {
  features_revert(array('mica_field_description' => array('views_view')));
}

/**
 * Implements hook_update_dependencies().
 * Update to 7120 depends on the update of mica_core
 */
function mica_field_description_update_dependencies() {
  $dependencies = array();
  $dependencies['mica_field_description'][7120] = array('mica_core' => 7120);
  return $dependencies;
}

