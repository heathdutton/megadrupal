<?php
/**
 * @file
 * The main file for Noindex Block module.
 */

/**
 * Implements hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function noindex_block_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id != 'block_admin_configure' && $form_id != 'block_add_block_form') {
    return;
  }

  // Search engine settings.
  $form['seo'] = array(
    '#type' => 'fieldset',
    '#title' => t('SEO'),
  );

  $variable_name = 'noindex_block_' . $form['module']['#value'] . '_' . $form['delta']['#value'];

  // Add Noindex checkbox to configuration form of all blocks.
  $form['seo']['noindex'] = array(
    '#type' => 'checkbox',
    '#title' => t('Noindex block'),
    '#default_value' => variable_get($variable_name, 0),
    '#description' => t('Please note this setting is currently working for <a href="!link">Yandex</a> search engine only.', array('!link' => 'http://yandex.com')),
    '#weight' => 1,
  );

  // Add own submit handler.
  $form['#submit'][] = 'noindex_block_form_save_settings';
}

/**
 * Submit handler; saves Nolindex block setting.
 *
 * @param $form
 * @param $form_state
 */
function noindex_block_form_save_settings($form, &$form_state) {

  $variable_name = 'noindex_block_' . $form_state['values']['module'] . '_' . $form_state['values']['delta'];

  variable_set($variable_name, $form_state['values']['noindex']);
}

/**
 * Implements hook_block_view_alter().
 *
 * @param $data
 * @param $block
 */
function noindex_block_block_view_alter(&$data, $block) {

  $variable_name = 'noindex_block_' . $block->module . '_' . $block->delta;

  // Ignore if there is no content in this block.
  if (!isset($data['content'])) {
    return;
  }

  // Do nothing if checkbox was not enabled for this block.
  if (!variable_get($variable_name, 0)) {
    return;
  }

  // Process modul-generated blocks with forms.
  if (is_array($data['content'])) {
    $data['content']['#theme_wrappers'][] = 'noindex_block_wrapper';
  }
  // Process custom content blocks.
  else {
    $data['content'] = _noindex_block_wrap($data['content']);
  }
}

/**
 * Implements hook_theme().
 */
function noindex_block_theme() {
  $items = array(
    'noindex_block_wrapper' => array(
      'render element' => 'element',
    ),
  );
  return $items;
}

/**
 * Helper function to wrap content in noindex tags.
 *
 * @param $content
 * @return mixed
 */
function _noindex_block_wrap($content) {
  return '<!--noindex-->' . $content . '<!--/noindex-->';
}

/**
 * Wraps a div around the already-rendered #children.
 */
function theme_noindex_block_wrapper($variables) {
  $element = $variables['element'];
  $output = _noindex_block_wrap($element['#children']);
  return $output;
}
