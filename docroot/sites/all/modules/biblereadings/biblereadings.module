<?php

define('ONE_HOUR', 60 * 60);
define('ONE_DAY', ONE_HOUR * 24);

module_load_include('inc', 'biblereadings', 'includes/admin');
module_load_include('inc', 'biblereadings', 'includes/util');
module_load_include('inc', 'biblereadings', 'includes/theme');
module_load_include('inc', 'biblereadings', 'includes/forms');

/**
 * Implementation of hook_cron().
 */
function biblereadings_cron() {

  $now = time();
  $last_sent = variable_get('biblereadings_last_sent', 0);
  $midnight = strtotime(date('m/d/Y'));
  $cutoff_time = $midnight + (3 * ONE_HOUR); // 3:00 am today

  $ready_to_send = TRUE;
  // Make sure it hasn't been sent today
  if (date('m/d/Y', $last_sent) == date('m/d/Y')) {
    $ready_to_send = FALSE;
  }
  elseif (time() < $cutoff_time) {
    $ready_to_send = FALSE;
  }

  if ($ready_to_send == true) {

    // Pull a list of subscribers
    $list = biblereadings_get_subscribers();

    // Pull today's readings using our API function
    // Loop through list of subscribers and send a message to each
    foreach ($list as $item) {
      // Send message here
      biblereadings_email_daily_readings_to_user(time(), $item);
    }

    variable_set('biblereadings_last_sent', time());
  }
}

/*
 * Implementation of hook_mail()
 */

function biblereadings_mail($key, &$message, $params) {

  /*
   * This function is used to hook into drupal_mail function to send the mail
   * Everytime drupal_mail is used, this function is called to setup the mail to be sent
   */
  $language = $message['language'];
  switch ($key) {
    /*
     * Here we will be switching the key values, therefore different mails can be sent differently using different keys.
     * As demonstrated above, we have different keys for the admin and other users to send normal mail to admins, and html mails to users
     */
    case 'biblereadings_normal_mail':
      /* Emails with this key will be normal emails, so we just set body and subject accordingly */
      $message['subject'] = $params['subject'];
      //the email body is here, inside the $message array
      $message['body'][] = theme('biblereadings_daily_email_text', array('name' => $params['name'], 'date' => time(), 'readings' => $params['readings']));
      break;
    case 'biblereadings_html_mail':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';

      /* This refers to line 20 and calls the subject */
      $message['subject'] = $params['subject'];
      /* the email body is here, inside the $message array */
      $message['body'][] = theme('biblereadings_daily_email_html', array('name' => $params['name'], 'date' => time(), 'readings' => $params['readings']));
      break;
  }
}

/**
 * Implementation of hook_permission().
 */
function biblereadings_permission() {
  $items = array();

  $items['administer bible readings'] = array(
      'title' => 'administer bible readings',
      'description' => t('Allows the user to administer bible readings settings'),
  );

  return $items;
}

/**
 * Implementation of hook_menu().
 */
function biblereadings_menu() {
  $items = array();

  $items['biblereadings/unsubscribe'] = array(
      'title' => 'Unsubscribe from Daily Bible Readings',
      'page callback' => 'biblereadings_page_unsubscribe',
      'access callback' => TRUE,
      'file' => 'includes/pages.inc',
  );

  $items['admin/config/biblereadings'] = array(
      'title' => 'Bible Readings',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('biblereadings_admin_settings_form'),
      'access arguments' => array('administer bible readings'),
      'file' => 'includes/admin.inc',
  );

  $items['admin/config/biblereadings/schedule'] = array(
      'title' => 'Schedule',
      'page callback' => 'biblereadings_schedule_page',
      'access arguments' => array('administer bible readings'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/admin.inc',
  );

  $items['admin/config/biblereadings/%biblereading/edit'] = array(
      'title' => 'Edit Bible Reading',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('biblereadings_edit_form', 3),
      'access arguments' => array('administer bible readings'),
      'file' => 'includes/admin.inc',
  );

  $items['admin/config/biblereadings/general'] = array(
      'title' => 'General Settings',
      'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/config/biblereadings/import'] = array(
      'title' => 'Import Reading Plan',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('biblereadings_admin_import_text_form'),
      'access arguments' => array('administer bible readings'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/admin.inc',
  );

  $items['admin/config/biblereadings/populate-books'] = array(
      'title' => 'Populate Books',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('biblereadings_admin_populate_books_form'),
      'access callback' => 'biblereadings_populate_books_access',
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_requirements().
 */
function biblereadings_requirements($phase) {
  $requirements = array();
  $t = get_t();

  switch ($phase) {
    case 'install':
    case 'runtime':

      $requirements['biblereadings_books'] = array(
          'title' => $t('Books of the Bible'),
      );
      $requirements['biblereadings_readings'] = array(
          'title' => $t('Bible Readings for Current Year'),
      );

      if (biblereadings_books_table_is_empty()) {
        $link = l(t('Click here to populate books of the Bible'), 'admin/config/biblereadings/populate-books');
        $requirements['biblereadings_books']['severity'] = REQUIREMENT_ERROR;
        $requirements['biblereadings_books']['value'] = t('Books of the Bible have not been populated in the database.  !link', array('!link' => $link));
      }
      else {
        $requirements['biblereadings_books']['severity'] = REQUIREMENT_OK;
        $requirements['biblereadings_books']['value'] = t('Books of the Bible have been populated in the database.');
      }

      $start_date = strtotime('1/1/' . date('Y'));
      $end_date = strtotime('12/31/' . date('Y'));

      $days_in_year = date('z', $end_date);
      $sql = 'select count(*) from {biblereadings_readings} where date between :start and :end';
      $result = db_query($sql, array(':start' => $start_date, ':end' => $end_date))->fetchField();

      if ($result == 0) {
        $link = l(t('Click here to import readings'), 'admin/config/biblereadings/import');
        $requirements['biblereadings_readings']['severity'] = REQUIREMENT_ERROR;
        $requirements['biblereadings_readings']['value'] = t('No Bible readings have been set up for this year.  !link', array('!link' => $link));
      }
      elseif ($result < $days_in_year) {
        $link = l(t('Click here to update the Bible readings schedule'), 'admin/config/biblereadings/schedule');
        $requirements['biblereadings_readings']['severity'] = REQUIREMENT_WARNING;
        $requirements['biblereadings_readings']['value'] = t('There are only !num Bible readings for this year, and there are !days days in the year.  !link', array('!link' => $link, '!num' => $result, '!days' => $days_in_year));
      }
      else {
        $link = l(t('Click here to update the Bible readings schedule'), 'admin/config/biblereadings/schedule');
        $requirements['biblereadings_readings']['severity'] = REQUIREMENT_OK;
        $requirements['biblereadings_readings']['value'] = t('!num Bible Readings for the current year have been populated in the database.  !link', array('!num' => $result, '!link' => $link));
      }

      break;
  }

  return $requirements;
}

/**
 * Implementation of hook_theme().
 */
function biblereadings_theme() {
  $items = array();

  $items['biblereadings_readings_this_week'] = array(
      'arguments' => array('readings' => array(), 'show_downloads' => true, 'abbreviated' => false),
  );

  $items['biblereadings_daily_email_html'] = array(
      'file' => 'includes/theme.inc',
      'variables' => array(
          'name' => NULL,
          'date' => NULL,
          'readings' => array(),
      ),
      'template' => 'templates/biblereadings_daily_email_html',
  );

  $items['biblereadings_daily_email_text'] = array(
      'file' => 'includes/theme.inc',
      'variables' => array(
          'name' => NULL,
          'date' => NULL,
          'readings' => array(),
      ),
      'template' => 'templates/biblereadings_daily_email_text',
  );

  return $items;
}

/**
 * Implementation of hook_block_info().
 */
function biblereadings_block_info() {
  $blocks = array();
  $blocks['weekly_readings']['info'] = t('Weekly Bible Readings');
  $blocks['subscription']['info'] = t('Bible Readings Subscription Form');
  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function biblereadings_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'weekly_readings':
      $readings = biblereadings_readings_this_week();
      $block['content'] = theme('biblereadings_readings_this_week', array('readings' => $readings, 'show_downloads' => TRUE));
      break;
    case 'subscription':
      $form = drupal_get_form('biblereadings_subscribe_form');
      $block['content'] = drupal_render($form);
      break;
  }
  return $block;
}

function biblereadings_ctools_plugin_directory($module, $plugin) {
  if ($module == 'biblereadings' || $module == 'webmobilize' || $module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implementation of hook_views_api().
 */
function biblereadings_views_api() {
  return array(
      'api' => 2,
      'path' => drupal_get_path('module', 'biblereadings') . '/includes/views',
  );
}