<?php

/**
 * EnvayaSMS callback.
 */
function sms_envaya_callback() {
  if (empty($_POST)) {
    return MENU_ACCESS_DENIED;
  }
  $request = EnvayaSMS::get_request();
  $settings = variable_get('sms_envaya_settings', array('passwords' => ''));
  $lines = preg_split('/[\n\r]/', $settings['passwords'], -1, PREG_SPLIT_NO_EMPTY);
  foreach ($lines as $line) {
    $parts = preg_split('/ /', $line, -1, PREG_SPLIT_NO_EMPTY);
    if (isset($parts[1]) && $request->phone_number == $parts[0]) {
      $password = $parts[1];
      break;
    }
  }
  if (!isset($password) || !$request->is_validated($password)) {
    return MENU_ACCESS_DENIED;
  }
  if (!empty($request->log)) {
    watchdog('EnvayaSMS', nl2br(check_plain($request->log)), NULL, WATCHDOG_NOTICE, $request->phone_number);
  }
  $action = $request->get_action();
  switch ($action->type) {
    case EnvayaSMS::ACTION_INCOMING:
      sms_incoming($action->from, $action->message, array('gw_number' => $request->phone_number, 'sms_envaya_action' => $action));
    case EnvayaSMS::ACTION_OUTGOING:
      $messages = array();
      $unclaimed = array();
      $queue = new SystemQueue('sms_envaya');
      while ($item = $queue->claimItem(3600)) {
        if (!isset($item->data['options']['sms_envaya_from']) || $item->data['options']['sms_envaya_from'] == $request->phone_number) {
          $sms = new EnvayaSMS_OutgoingMessage();
          $sms->id = $item->item_id;
          $sms->message = $item->data['message'];
          $sms->priority = isset($item->data['options']['sms_envaya_priority']) ? $item->data['options']['sms_envaya_priority'] : NULL;
          $sms->to = $item->data['number'];
          $messages[] = $sms;
        }
        else {
          $unclaimed[] = $item;
        }
      }
      foreach ($unclaimed as $item) {
        $queue->releaseItem($item);
      }
      drupal_add_http_header('Content-Type', $request->get_response_type());
      print $request->render_response(array(new EnvayaSMS_Event_Send($messages)));
      return;
    case EnvayaSMS::ACTION_SEND_STATUS:
      $number = NULL;
      // Look up the number from the queue.
      if ($data = db_query('SELECT data FROM {queue} WHERE name = :name AND item_id = :item_id', array(':name' => 'sms_envaya', ':item_id' => $action->id))->fetchField()) {
        $data = unserialize($data);
        $number = $data['number'];
      }
      $queue = new SystemQueue('sms_envaya');
      $item = new stdClass();
      $item->item_id = $action->id;
      $status = SMS_MSG_STATUS_UNKNOWN;
      if ($action->status == EnvayaSMS::STATUS_SENT) {
        $queue->deleteItem($item);
        $status = SMS_MSG_STATUS_OK;
      }
      elseif ($action->status == EnvayaSMS::STATUS_FAILED) {
        $queue->releaseItem($item);
        $status = SMS_MSG_STATUS_ERROR;
      }
      elseif ($action->status == EnvayaSMS::STATUS_QUEUED) {
        $status = SMS_MSG_STATUS_QUEUED;
      }
      // @todo Figure out what to do for EnvayaSMS::STATUS_CANCELLED.
      sms_receipt($number, $action->id, $status, array('sms_envaya_action' => $action));
    case EnvayaSMS::ACTION_AMQP_STARTED:
    case EnvayaSMS::ACTION_FORWARD_SENT:
      // @todo Not yet implemented.
    case EnvayaSMS::ACTION_DEVICE_STATUS:
    case EnvayaSMS::ACTION_TEST:
      print $request->render_response();
      return;
    default:
      return MENU_NOT_FOUND;
  }
}

/**
 * EnvayaSMS configure form callback.
 */
function sms_envaya_configure_form() {
  $settings = variable_get('sms_envaya_settings', array('passwords' => ''));
  $form['passwords'] = array(
    '#default_value' => $settings['passwords'],
    '#description' => t('For each device running the EnvayaSMS app, enter one line consisting of the phone number, a space, and the password.'),
    '#required' => TRUE,
    '#title' => t('EnvayaSMS passwords'),
    '#type' => 'textarea',
  );
  return $form;
}

/**
 * Implements hook gateway_info().
 */
function sms_envaya_gateway_info() {
  return array(
    'envaya' => array(
      'configure form' => 'sms_envaya_configure_form',
      'format number' => NULL,
      'name' => 'EnvayaSMS',
      'receive' => TRUE,
      'send' => 'sms_envaya_send',
      'send form' => 'sms_envaya_send_form',
      'validate number' => NULL,
    ),
  );
}

/**
 * Implements hook_init().
 */
function sms_envaya_init() {
  // Build a Drupal-style $_FILES array so transliteration module and
  // file_save_upload() work.
  if (!empty($_FILES) && empty($_FILES['files'])) {
    foreach ($_FILES as $key => $file) {
      foreach (array('name', 'type', 'tmp_name', 'error', 'size') as $file_element) {
        $_FILES['files'][$file_element][$key] = $file[$file_element];
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function sms_envaya_menu() {
  $items['sms/envaya'] = array(
    'access callback' => TRUE,
    'page callback' => 'sms_envaya_callback',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * SMS Framework send callback.
 */
function sms_envaya_send($number, $message, $options) {
  $queue = new SystemQueue('sms_envaya');
  $result['status'] = $queue->createItem(array('number' => $number, 'message' => $message, 'options' => $options));
  return $result;
}

/**
 * SMS Framework send form callback.
 */
function sms_envaya_send_form($required = FALSE) {
  $form = array();
  return $form;
}
