<?php
/**
 * @file
 * Install, update, and uninstall functions for the uc_element module.
 */

/**
 * Implements hook_install().
 */
function uc_element_install() {
  $t = get_t();
  drupal_set_message($t("Your Module settings are available under !link",
    array('!link' => l($t('Store > Configuration > Payment Methods > Credit Card'), 'admin/store/settings/payment/method/credit'))
  ));
}

/**
 * Implements hook_requirements().
 *
 * Verifies that PHP SoapClient library is installed on the server.
 */
function uc_element_requirements($phase) {
  $t = get_t();

  $has_soapclient = class_exists('SoapClient');

  $requirements['uc_element_soap'] = array(
    'title' => $t('SoapClient'),
    'value' => $has_soapclient ? $t('Enabled') : $t('Not found'),
  );
  if (!$has_soapclient) {
    $requirements['uc_element_soap']['severity'] = REQUIREMENT_ERROR;
    $requirements['uc_element_soap']['description'] = $t("Element Payment Module requires the PHP <a href='!soapclient_url'>SoapClient</a> library.", array('!soapclient_url' => 'http://php.net/manual/en/class.soapclient.php'));
  }

  return $requirements;
}

/**
 * Implements hook_schema().
 */
function uc_element_schema() {
  $schema = array();

  $schema['uc_element_tokens'] = array(
    'description' => 'Stores Element tokens for users who have chosen to keep a credit card on file.',
    'fields' => array(
      'uid' => array(
        'description' => 'The user id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'token' => array(
        'description' => 'The Element token for the user\' stored PASS account.',
        'type' => 'varchar',
        'length' => 80,
        'not null' => TRUE,
        'default' => '0',
      ),
      'last_4' => array(
        'description' => 'The last 4 numbers of the stored card.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'exp_year' => array(
        'description' => 'The expiration year of the stored card.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'exp_month' => array(
        'description' => 'The expiration month of the stored card.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'added' => array(
        'description' => 'Date the token was added.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
    ),
    'unique keys' => array(
      'token' => array('token'),
    ),
    'primary key' => array('uid'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 *
 * Deletes all variables set by the uc_element module.
 */
function uc_element_uninstall() {
  // Delete related variables.
  variable_del('uc_element_acceptor_id');
  variable_del('uc_element_account_id');
  variable_del('uc_element_account_token');
  variable_del('uc_element_allow_stored_cards');
  variable_del('uc_element_application_id');
  variable_del('uc_element_AVS');
  variable_del('uc_element_CVV');
  variable_del('uc_element_debug');
  variable_del('uc_element_email');
  variable_del('uc_element_gateway_url');
  variable_del('uc_element_gateway_url_backup');
  variable_del('uc_element_ignore_AVS');
  variable_del('uc_element_services_gateway_url');
  variable_del('uc_element_services_gateway_url_backup');
  variable_del('uc_pg_elementgateway_cc_txn_type');
}
