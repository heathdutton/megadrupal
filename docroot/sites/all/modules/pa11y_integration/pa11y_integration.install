<?php

/**
 * @file
 * Install, update and uninstall functions for the strongarm module.
 */

/**
 * Implements hook_schema().
 */
function pa11y_integration_schema() {

  $schema['pa11y_task_registry'] = array(
    'description' => 'Local registry for pa11y tasks.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key with type; a unique id for the item.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'task' => array(
        'description' => 'Task id on pa11y server.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'timestamp for creation.',
        'type' => 'varchar',
        'length' => 13,
        'not null' => TRUE,
        'default' => time(),
      ),
      'url' => array(
        'description' => 'url of content.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'nid' => array(
        'description' => 'nid of content.',
        'type' => 'int',
        'length' => 13,
        'not null' => FALSE,
      ),
      'has_run' => array(
        'description' => 'timestamp for when result was retrieved',
        'type' => 'int',
        'length' => 1,
        'not null' => FALSE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function pa11y_integration_install() {
  $t = get_t();
  drupal_set_message($t("PA11Y Integration module settings are available under !link",
    array('!link' => l($t('Administer') . ' > ' . $t('Site configuration') . ' > ' . $t('PA11Y Integration'), 'admin/config/content/pa11y_integration')))
  );
}

/**
 * Implements hook_uninstall().
 */
function pa11y_integration_uninstall() {
  variable_del('pa11y_integration_url');
  variable_del('pa11y_integration_test_standard');
  variable_del('pa11y_integration_admin_path');

}

/**
 * Implements hook_requirements().
 */
function pa11y_integration_requirements($phase) {

  $requirements = array();

  // Ensure translations don't break during installation.
  $t = get_t();

  switch ($phase) {
    case 'install':
      break;

    case 'runtime':
      $requirements['pa11y_integration_url'] = array('title' => $t('PA11Y Integration URL'));

      // Check for webservice ID.
      $webservice_url = variable_get('pa11y_integration_url', '') . '/tasks';
      if ($webservice_url) {
        $test_request = drupal_http_request($webservice_url, array('method' => 'GET'));

        if ($test_request->code == 200) {
          $requirements['pa11y_integration_url']['severity'] = REQUIREMENT_OK;
          $requirements['pa11y_integration_url']['value']    = $t('Webservice url entered');
        }
        else {
          $requirements['pa11y_integration_url']['severity']    = REQUIREMENT_ERROR;
          $requirements['pa11y_integration_url']['value']       = $t('Webservice url entered is incorrect');
          $requirements['pa11y_integration_url']['description'] = $t('Please enter the url of a working <a href="!url_id">PA11Y webservice</a> at the <a href="!url_settings">setting page</a>.', array(
          '!url_id'        => 'https://github.com/nature/pa11y-webservice/',
          '!url_settings'  => '/admin/config/content/pa11y_integration',
          ));
        }
      }
      else {
        $requirements['pa11y_integration_url']['severity']    = REQUIREMENT_ERROR;
        $requirements['pa11y_integration_url']['value']       = $t('Webservice url not entered');
        $requirements['pa11y_integration_url']['description'] = $t('Please enter the url of a working <a href="!url_id">PA11Y webservice</a> at the <a href="!url_settings">setting page</a>.', array(
          '!url_id'        => 'https://github.com/nature/pa11y-webservice/',
          '!url_settings'  => '/admin/config/content/pa11y_integration',
        ));
      }
      break;
  }

  return $requirements;
}
