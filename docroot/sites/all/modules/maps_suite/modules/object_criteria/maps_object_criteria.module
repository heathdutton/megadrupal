<?php

use Drupal\maps_import\Converter\ConverterInterface;
use Drupal\maps_object_criteria\Mapping\ObjectCriteria\ObjectCriteria;
use Drupal\maps_import\Mapping\Source\MapsSystem\EntityInterface as MapsEntityInterface;
use Drupal\maps_import\Mapping\Target\Drupal\EntityInterface as DrupalEntityInterface;
use Drupal\maps_import\Mapping\Mapping;

/**
 * Implements hook_menu().
 */
function maps_object_criteria_menu() {
  $items = array();

  $types = array('object', 'media');

  foreach ($types as $type) {
    $items['admin/maps-suite/profiles/%maps_import_profile/' . $type . '/%maps_import_converter/object_criteria_mapping'] = array(
      'title' => 'Object criteria',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('maps_object_criteria_object_criteria_mapping_overview', 3, 5, 8),
      'access callback' => 'maps_import_converter_access',
      'access arguments' => array(5, 'mapping'),
      'load arguments' => array(3, 5),
      'type' => MENU_LOCAL_TASK,
      'weight' => 35,
      'file' => 'admin/maps_object_criteria.admin.inc',
    );

    $items['admin/maps-suite/profiles/%maps_import_profile/' . $type . '/%maps_import_converter/object_criteria_mapping/add'] = array(
      'title' => 'Add object criteria mapping',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('maps_object_criteria_add_object_criteria_mapping_form', 3, 5, 8),
      'access callback' => 'maps_import_converter_access',
      'access arguments' => array(5, 'mapping'),
      'load arguments' => array(3, 5),
      'type' => MENU_LOCAL_ACTION,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
      'weight' => 35,
      'file' => 'admin/maps_object_criteria.admin.inc',
    );

    $items['admin/maps-suite/profiles/%maps_import_profile/' . $type . '/%maps_import_converter/object_criteria_mapping/delete/%maps_object_criteria'] = array(
      'title' => 'Delete object criteria mapping',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('maps_object_criteria_delete_object_criteria_mapping_form', 3, 5, 8),
      'access callback' => 'maps_import_converter_access',
      'access arguments' => array(5, 'mapping'),
      'load arguments' => array(3, 5),
      'type' => MENU_LOCAL_ACTION,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
      'weight' => 35,
      'file' => 'admin/maps_object_criteria.admin.inc',
    );
  }

  return $items;
}

/**
 * Implements hook_maps_import_converter_actions().
 */
function maps_object_criteria_maps_import_converter_actions(ConverterInterface $converter) {
  return array(
    'object_criteria' => array(
      'href' => strtr('admin/maps-suite/profiles/%maps_import_profile/%type/%maps_import_converter/object_criteria_mapping', array(
        '%maps_import_profile' => $converter->getProfile()->getName(),
        '%maps_import_converter' => $converter->getCid(),
        '%type' => $converter->getType(),
      )),
      'title' => t('object criteria'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function maps_object_criteria_theme($existing, $type, $theme, $path) {
  return array(
    'maps_object_criteria_object_criteria_mapping_overview' => array(
      'render element' => 'form',
      'file' => 'admin/maps_object_criteria.admin.inc',
    ),
  );
}

/**
 * Implements hook_maps_import_entity_mapping_finished().
 */
function maps_object_criteria_maps_import_entity_mapping_finished(DrupalEntityInterface $drupalEntity, MapsEntityInterface $mapsEntity, $entity_type, $bundle, ConverterInterface $converter) {
  $object_criterias = ObjectCriteria::loadAllForConverter($converter);
  foreach ($object_criterias as $object_criteria) {
    // Get the entity attributes.
    $attributes = $mapsEntity->getAttributes();
    $attribute = $attributes[$object_criteria->getAttributeId()];

    foreach ($attribute as $id_language => $translated_values) {
      // @todo manage different translations.
      // Loop through the values.
      foreach ($translated_values as $id_object_criteria => $value) {
        // Load the Drupal entity from the MaPS id object criteria.
        $entity = Mapping::getEntityFromMapsId($converter->getType(), $id_object_criteria, $converter->getUidScope(), $converter->getProfile()->getPid());

        if (empty($entity)) {
          continue;
        }

        $entity = reset($entity);

        // If the relation already exists, we load it.
        // Else we create the relation.
        if (!$relation = $object_criteria->getRelation($id_object_criteria, $entity['uid'])) {
          // Create the relation object.
          $relation = relation_create($object_criteria->getRelationType(), array());
        }

        $source_wrapper = $drupalEntity->getEntities();
        $source_wrapper = reset($source_wrapper);

        $target_entity = entity_load($entity['entity_type'], array($entity['entity_id']));
        $target_entity = reset($target_entity);

        $target_wrapper = entity_metadata_wrapper($entity['entity_type'], $target_entity);
        $endpoints = array($source_wrapper, $target_wrapper);

        $wrapper = entity_metadata_wrapper('relation', $relation, array('bundle' => $object_criteria->getRelationType()));

        // Set the endpoints.
        $wrapper->endpoints->set($endpoints);

        // Set the field value.
        $wrapper->{$object_criteria->getFieldName()}->set($value);
        $wrapper->save();

        if ($id = $wrapper->getIdentifier()) {
          $object_criteria->saveMapping($id, $id_object_criteria, $entity['uid']);
        }
      }
    }

  }

}

function maps_object_criteria_load($mapping_id, $pid, $cid) {
  if (empty($mapping_id)) {
    return FALSE;
  }

  if (is_numeric($mapping_id)) {
    // Load the object criteria object.
    return ObjectCriteria::load($mapping_id);
  }

  return FALSE;
}