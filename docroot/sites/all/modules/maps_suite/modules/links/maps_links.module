<?php

/**
 * @file
 * Provide tools to import links from MaPS SystemÂ®.
 */

use Drupal\maps_links\Cache\Object\Link as CacheLink;
use Drupal\maps_import\Cache\Object\Profile as CacheProfile;

/**
 * @defgroup Drupal hooks
 * @{
 */

/**
 * Implements hook_theme().
 */
function maps_links_theme($existing, $type, $theme, $path) {
  return array(
    'maps_links_converters_overview_form' => array(
      'render element' => 'form',
      'file' => 'admin/maps_links.converter.inc',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function maps_links_menu() {
  $items = array();

  $items['admin/maps-suite/profiles/%maps_import_profile/link'] = array(
    'title' => 'Links',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('maps_links_converters_overview_form', 3),
    'access callback' => 'maps_import_access',
    'access arguments' => array(3),
    'type' => MENU_LOCAL_TASK,
    'file' => 'admin/maps_links.converter.inc',
    'weight' => 3,
  );

  $items['admin/maps-suite/profiles/%maps_import_profile/add/link'] = array(
    'title' => 'Add a new link converter',
    'page callback' => 'maps_links_converter_add',
    'page arguments' => array(3),
    'access callback' => 'maps_import_access',
    'access arguments' => array(3),
    'type' => MENU_CALLBACK,
    'file' => 'admin/maps_links.converter.inc',
  );

  $items['admin/maps-suite/profiles/%maps_import_profile/link/%maps_links_converter/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('maps_links_converter_edit_form', 3, 5),
    'access callback' => 'maps_links_converter_access',
    'access arguments' => array(5, 6),
    'load arguments' => array(3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'admin/maps_links.converter.inc',
  );

  $items['admin/maps-suite/profiles/%maps_import_profile/link/%maps_links_converter/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('maps_links_converter_delete_confirm_form', 3, 5),
    'access callback' => 'maps_links_converter_access',
    'access arguments' => array(5, 6),
    'load arguments' => array(3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'admin/maps_links.converter.inc',
    'weight' => 100,
  );

  $items['admin/maps-suite/profiles/%maps_import_profile/link/%maps_links_converter/mapping'] = array(
    'title' => 'Mapping',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('maps_import_converter_mapping_form', 3, 5),
    'access callback' => 'maps_links_converter_access',
    'access arguments' => array(5, 6),
    'load arguments' => array(3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => '../import/admin/maps_import.mapping.inc',
  );

  $items['admin/maps-suite/profiles/%maps_import_profile/link/%maps_links_converter/mapping/%maps_links_mapping_item/delete'] = array(
    'title' => 'Delete mapping',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'maps_import_converter_mapping_delete_form',
      3,
      5,
      7,
    ),
    'access callback' => 'maps_links_converter_access',
    'access arguments' => array(5, 6),
    'load arguments' => array(3, 5),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
    'file' => '../import/admin/maps_import.mapping.inc',
  );

  return $items;
}

/**
 * Implements hook_admin_menu_map().
 */
function maps_links_admin_menu_map() {
  $map = array();

  if (!user_access('administer menu')) {
    return $map;
  }

  if ($profiles = array_keys(CacheProfile::getInstance()->loadAll())) {
    $args = array();
    $links_converters = array_fill_keys($profiles, array());

    foreach (maps_links_get_converters() as $link_converter) {
      $links_converters[$link_converter->getProfile()->getPid()][] = $link_converter->getCid();
    }

    foreach ($links_converters as $pid => $converter) {
      $map['admin/maps-suite/profiles/%maps_import_profile/link/%maps_links_converter'] = array(
        'parent' => 'admin/maps-suite/profiles/%maps_import_profile/link',
        'arguments' => array(
          array(
            '%maps_import_profile' => array($pid),
            '%maps_links_converter' => $converter,
          ),
        ),
      );
    }
  }

  return $map;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function maps_links_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (empty($router_item['fake']) && array_shift($router_item['page_arguments']) === 'maps_links_converters_overview_form') {
    $profile = array_shift($router_item['page_arguments']);

    $data['actions']['count']++;
    $data['actions']['output'][] = array(
      '#theme' => 'menu_local_action',
      '#link' => array(
        'title' => t('Add a new converter'),
        'href' => 'admin/maps-suite/profiles/' . $profile->getName() . '/add/link',
      ),
    );
  }
}

/**
 * @} End of "defgroup Drupal hooks".
 */

/**
 * Loads a link converter.
 *
 * @param int $cid
 *   The link converter id.
 * @param int $pid
 *   The profile id.
 *
 * @return Drupal\maps_import\Converter\ConverterInterface
 *   The loaded converter.
 */
function maps_links_converter_load($cid, $pid = NULL) {
  if (empty($cid)) {
    return FALSE;
  }

  if (is_numeric($cid)) {
    return CacheLink::getInstance()->loadSingle($cid);
  }
}

/**
 * Loads a mapping item.
 *
 * @param int $id
 *   The mapping item id.
 * @param int $pid
 *   The profile id.
 * @param int $cid
 *   The converter id.
 *
 * @return Drupal\maps_import\Mapping\Item
 *   The loaded mapping item.
 */
function maps_links_mapping_item_load($id, $pid, $cid) {
  $converter = maps_links_converter_load($cid, $pid);
  $items = $converter->getMapping()->getItems(FALSE) + $converter->getMapping()->getItems(TRUE);
  return !empty($items[$id]) ? $items[$id] : FALSE;
}

/**
 * Return all links converters.
 *
 * @param int $pid
 *   The related profile id.
 *
 * @return array
 *   The links converters.
 */
function maps_links_get_converters($pid = NULL) {
  return is_null($pid) ? CacheLink::getInstance()->loadAll() : CacheLink::getInstance()->load(array($pid), 'pid');
}


/**
 * Load the title of the given converter.
 * 
 * Almost used  for title callback in menus.
 */
function maps_links_get_converter_title($converter) {
  return $converter->getTitle();
}

/**
 * Access callback.
 */
function maps_links_converter_access($converter, $operation, $id_language = FALSE, $permission = 'administer maps suite') {
  if (!maps_import_access($converter->getProfile(), 'link_type', $id_language, $permission)) {
    return FALSE;
  }

  return in_array($operation, array('mapping', 'delete', 'edit'));
}
