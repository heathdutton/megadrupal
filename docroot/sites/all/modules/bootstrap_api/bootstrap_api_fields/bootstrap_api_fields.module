<?php
/**
 * @file
 * provides fields based features like:
 * - configurable popover in widget settings
 *
 * @todo: better field type mapping
 *
 * @author Dennis BrÃ¼cke (blackice2999) | TWD - team:Werbedesign UG
 * @see http://drupal.org/user/413429
 * @see http://team-wd.de
 */

/**
 * Implements hook_form_alter();
 * - add popover options to field widgets
 *
 * @param $form
 * @param $form_state
 */
function bootstrap_api_fields_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  $field = $form['#field'];
  $instance = $form['#instance'];

  $form['instance']['widget']['settings']['bootstrap_api_popover'] = array(
    '#type' => 'fieldset',
    '#title' => t('Bootstrap Popover Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['instance']['widget']['settings']['bootstrap_api_popover']['enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use Popover'),
    '#description' => t('If checked the popover will be used on this field'),
    '#default_value' => isset($instance['widget']['settings']['bootstrap_api_popover']['enable']) ? $instance['widget']['settings']['bootstrap_api_popover']['enable'] : FALSE,
  );

  // @TODO: add token support
  $form['instance']['widget']['settings']['bootstrap_api_popover']['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#default_value' => isset($instance['widget']['settings']['bootstrap_api_popover']['title']) ? $instance['widget']['settings']['bootstrap_api_popover']['title'] : '',
    '#description' => t('the popover title'),
  );

  $opt = array(
    'none' => t('no description'),
    'clean' => t('Use and clean description'),
    'hide' => t('Use and hide description'),
  );

  $form['instance']['widget']['settings']['bootstrap_api_popover']['use_description'] = array(
    '#type' => 'select',
    '#title' => t('Use description'),
    '#options' => $opt,
    '#default_value' => isset($instance['widget']['settings']['bootstrap_api_popover']['use_description']) ? $instance['widget']['settings']['bootstrap_api_popover']['use_description'] : 'none',
  );

  // @TODO: add token support
  $form['instance']['widget']['settings']['bootstrap_api_popover']['content'] = array(
    '#type' => 'textarea',
    '#title' => t('Content'),
    '#default_value' => isset($instance['widget']['settings']['bootstrap_api_popover']['content']) ? $instance['widget']['settings']['bootstrap_api_popover']['content'] : '',
  );

  $form['instance']['widget']['settings']['bootstrap_api_popover']['html'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use HTML'),
    '#description' => t('Insert html into the popover. If false, jquerys text method will be used to insert content into the dom. Use text if youre worried about XSS attacks.'),
    '#default_value' => isset($instance['widget']['settings']['bootstrap_api_popover']['html']) ? $instance['widget']['settings']['bootstrap_api_popover']['html'] : 0,
  );

  $form['instance']['widget']['settings']['bootstrap_api_popover']['placement'] = array(
    '#type' => 'select',
    '#title' => t('Placement'),
    '#description' => t('how to position the popover - top | bottom | left | right'),
    '#options' => drupal_map_assoc(array('use default', 'top', 'bottom', 'left', 'right')),
    '#default_value' => isset($instance['widget']['settings']['bootstrap_api_popover']['placement']) ? $instance['widget']['settings']['bootstrap_api_popover']['placement'] : 'use default',
  );

  $form['instance']['widget']['settings']['bootstrap_api_popover']['trigger'] = array(
    '#type' => 'select',
    '#title' => t('Trigger on'),
    '#description' => t('how popover is triggered - click | hover | focus | manual'),
    '#options' => drupal_map_assoc(array('use default', 'click', 'hover', 'focus', 'manual')),
    '#default_value' => isset($instance['widget']['settings']['bootstrap_api_popover']['trigger']) ? $instance['widget']['settings']['bootstrap_api_popover']['trigger'] : 'use default',
  );

  $form['instance']['widget']['settings']['bootstrap_api_popover']['animation'] = array(
    '#type' => 'checkbox',
    '#title' => t('Animation'),
    '#description' => t('enable the css fade transition to the tooltip (need bootstrap-transition css loaded)'),
  );

}

/**
 * Implement hook_field_widget_form_alter()
 * - add popover element to field elements
 *
 * @param $element
 * @param $form_state
 * @param $context
 */
function bootstrap_api_fields_field_widget_form_alter(&$element, &$form_state, $context) {
  if (isset($context['instance']['widget']['settings']['bootstrap_api_popover']) && $context['instance']['widget']['settings']['bootstrap_api_popover']['enable']) {
    // @todo: this is a workaround for multivalue fields... we need better support for fields
    if ($childs = element_children($element)) {
      foreach ($childs as $key) {
        $element[$key]['#bootstrap_api_popover'] = $context['instance']['widget']['settings']['bootstrap_api_popover'];
      }
    }
    else {
      $element['#bootstrap_api_popover'] = $context['instance']['widget']['settings']['bootstrap_api_popover'];
    }
  }
}
