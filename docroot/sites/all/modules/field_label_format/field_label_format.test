<?php
/**
 * @file
 * Module test suite.
 */

class FieldLabelFormatTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Label format functionality',
      'description' => 'Test the label format settings, summary and display.',
      'group' => 'Field label format',
    );
  }

  public function setUp() {
    parent::setUp('field_label_format');
  }

  /**
   * Test existence of label delegate formatters.
   */
  public function testLabelFormatters() {
    $types = field_info_formatter_types();
    $this->assertTrue(isset($types['text_default']), 'Text formatter exists.');
    $this->assertTrue(isset($types['field_label_format_text_default']), 'Label format delegate for text formatter exists.');
  }

  /**
   * Test label format summary and settings form.
   */
  public function testFormatSettings() {
    $user = $this->drupalCreateUser(array('administer content types'));
    $this->drupalLogin($user);

    $edit = array(
      'fields[body][type]' => 'field_label_format_text_trimmed',
    );
    $this->drupalPost('admin/structure/types/manage/page/display', $edit, t('Save'));
    $this->assertText('Trim length: 600', 'Original field formatter summary is produced.');
    $this->assertRaw('Label element: <code>div</code>', 'Label format summary is produced.');

    $this->drupalPostAJAX(NULL, array(), 'body_formatter_settings_edit');
    $edit = array(
      'fields[body][settings_edit_form][settings][trim_length]' => '5',
      'fields[body][settings_edit_form][settings][field_label_format][element]' => 'h3',
      'fields[body][settings_edit_form][settings][field_label_format][css_id]' => 'test-id',
      'fields[body][settings_edit_form][settings][field_label_format][css_class]' => 'test-class',
      'fields[body][settings_edit_form][settings][field_label_format][override_label]' => 'Override',
    );
    $this->drupalPostAJAX(NULL, $edit, 'body_formatter_settings_update');
    $this->assertRaw('Label element: <code>h3</code>', 'Label element setting is saved.');
  }

  /**
   * Test label customization in field output.
   */
  public function testLabelOutput() {
    $instance = field_info_instance('node', 'body', 'page');
    $display = &$instance['display']['default'];
    $display['type'] = 'field_label_format_text_trimmed';
    $display['module'] = 'field_label_format';
    $display['settings'] = array(
      'trim_length' => 5,
      'field_label_format' => array(
        'element' => 'h2',
        'css_id' => 'test-id',
        'css_class' => 'test-class',
        'override_label' => 'Override label',
      ),
    );
    field_update_instance($instance);

    $node = $this->drupalCreateNode(array(
      'body' => array(LANGUAGE_NONE => array(array(
        'value' => 'abcdefg',
        'format' => 'plain_text',
      ))),
    ));
    $output = field_view_field('node', $node, 'body', 'default');
    $rendered_output = drupal_render($output);

    $this->assertTrue(preg_match('`<h2 class="([^"]*)" id="([^"]*)">([^<]*)</h2>`', $rendered_output, $match), 'Custom label element is found.');
    $this->assertEqual('test-id', $match[2], 'Custom label ID is found.');
    $this->assertTrue(FALSE !== strpos($match[1], 'test-class'), 'Custom label class is found.');
    $this->assertTrue(preg_match('`^\s*Override label\s*$`', $match[3]), 'Custom label text is found.');
    $this->assertTrue(preg_match('`><p>ab</p></div>`', $rendered_output), 'Original formatter settings are used.');
  }
}
