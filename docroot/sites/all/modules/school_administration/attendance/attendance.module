<?php

/**
 * @file
 * attendance module for school administration.
 *
 * Copyright 2011 by Murat Tutumlu ("tutumlum", http://drupal.org/user/413570)
 */

/**
 * implementation of hook_help.
 */
function attendance_help($path, $arg) {
  switch ($path) {
    case '/admin/help#attendance' :
      return t('<p>Attendance module is keeping attendance records of students session by session
        By using this module you can track teaching hours of teachers too.</p>');
  }
}

/**
 * Implements hook_permission()
 */
function attendance_permission() {
  return array(
    'view all attendance' => array(
    'title' => t('View all attendance'),
    'description' => t('Allow users to view all attendance records.'),
  ),
    'edit all attendance' => array(
    'title' => t('Edit all attendance'),
    'description' => t('Allow users to edit all attendance records.'),
  ),
  );
}

/**
 * Implements hook_menu()
 */
function attendance_menu() {
  $items['admin/config/attendance'] = array(
    'title' => 'Attendance Settings',
    'description' => 'Ateendance Module Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('attendance_settings_form'),
    'access arguments' => array('edit all attendance'),
  );
  $items['attendance'] = array(
    'title' => 'Attendance',
    'page callback' => 'attendance_page',
    'access callback' => 'attendance_access',
  );
  $items['attendance/stats'] = array(
    'title' => 'Statistics',
    'page callback' => 'attendance_statistics',
    'access callback' => 'attendance_access',
  );
  $items['attendance/stats/1'] = array(
    'title' => 'Absent Records',
    'description' => 'Absence Records',
    'weight' => -2,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['attendance/stats/2'] = array(
    'title' => 'Tardiness Records',
    'description' => 'Tardiness Records',
    'access callback' => 'attendance_access',
    'page arguments' => array(2),
    'weight' => -1,
    'type' => MENU_LOCAL_TASK,
  );
  $items['attendance/teacher'] = array(
    'title' => 'Teacher Records',
    'description' => 'Teacher Records',
    'page callback' => 'attendance_teacher_stats',
    'access callback' => 'attendance_access',
    'weight' => -1,
  );
  $items['attendance/class'] = array(
    'title' => 'Class Records',
    'description' => 'Class Records',
    'page callback' => 'attendance_class_records',
    'access callback' => 'attendance_access',
    'weight' => -2,
  );
  $items['attendance/date/%'] = array(
    'title' => 'Attendance',
    'page callback' => 'attendance_page',
    'page arguments' => array(2),
    'access callback' => 'attendance_access',
    'type' => MENU_CALLBACK,
  );
  $items['attendance/add/%/%'] = array(
    'title' => 'Add Attendance',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('attendance_add_form', 2, 3),
    'access callback' => 'attendance_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  $items['attendance/edit/%/%'] = array(
    'title' => 'Add Attendance',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('attendance_edit_form', 2, 3),
    'access callback' => 'attendance_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * 
 */
function attendance_access($op = 'view') {
  GLOBAL $user;
  switch($op) {
    case 'view' :
      if (user_access('view all attendance') 
        || classes_and_lessons_teaching($user->uid)
        || classes_and_lessons_listof_student_classes($user->uid)
      ) {
        return TRUE;
      }
    case 'add' :
      if (user_access('view all attendance') 
        || classes_and_lessons_teaching($user->uid)
      ) {
        return TRUE;
      }
    case 'edit' :
      //limit for past (teachers) and future (all)
      if (user_access('view all attendance') 
        || classes_and_lessons_teaching($user->uid)
        || classes_and_lessons_listof_student_classes($user->uid)
      ) {
        return TRUE;
      }
  }
  return FALSE;
}

/**
 * Menu callback; Admin form
 * Form to add lessons / edit lesson names.
 *
 * @return
 *   rendered form
 */
function attendance_settings_form($form_state) {
  $form['attendance_max_sessions'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of Sessions'),
    '#size' => 2,
    '#default_value' => variable_get('attendance_max_sessions'),
  );
  return system_settings_form($form);
}

/**
 * 
 */
function attendance_add_form($form, &$form_state, $session, $date, $class = NULL) {
  GLOBAL $user;
  $theday = format_date($date, 'custom', "d F Y");
  if ($date == mktime(0, 0, 0)) {
    $theday .= ' (' . t('Today') . ')';
  }
  else {
    $theday .= ' (' . format_date($date, 'custom', "l") . ')';
  }

  if ($date > mktime(0, 0, 0)) {
      drupal_set_message(t('Sorry, You cannot record attendance for future classes.'), 'warning');
      drupal_goto("attendance/date/$date");
  }
  if ($date < mktime(0, 0, 0) && !user_access('edit all attendance')) {
      drupal_set_message(t('Sorry, You cannot record attendance for past days. Please contact your administrator'), 'warning');
      drupal_goto("attendance/date/$date");
  }
  $no_js_use = FALSE;
  $form['#attached']['css'] = array(
    drupal_get_path('module', 'attendance') . '/attendance.css',
  );
  $form['#attached']['js'] = array(
    drupal_get_path('module', 'attendance') . '/attendance.js',
  );

  $options[''] = '- Select -';
  if (user_access('edit all attendance') && $class != NULL) {
    $t_classes = classes_and_lessons_tcl_details('class', $class);
      foreach ($t_classes as $id => $info) {
        $options[$id] = "$info->value1 " . school_administration_formatted_full_name($info->value2);
      }
  }
  else {
    $t_classes = classes_and_lessons_teaching($user->uid);
    foreach ($t_classes as $id => $class) {
      $info = classes_and_lessons_tcl_by_id($id);
      $options[$id] = "$info->class $info->lesson";
    }
  }
  
  $form['class_select'] = array(
    '#type' => 'select',
    '#title' => t('Class & Lesson'),
    '#options' => $options,
    '#ajax' => array(
      'wrapper' => 'class-fieldset-wrapper',
      'callback' => 'attendance_dynamic_sections_select_callback',
    ),
  );
  
  // The CSS for this module hides this next button if JS is enabled.
  $form['class_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Choose'),
    '#attributes' => array('class' => array('next-button')),
    '#limit_validation_errors' => array(),  // No need to validate when submitting this.
    '#validate' => array(),
  );
  if ($no_js_use) {
    // Remove the #ajax from the above, so ajax.js won't be loaded.
    unset($form['class_select']['#ajax']);
  }
  
  $form['class_fieldset'] = array(
    '#type' => 'fieldset',
    // These provide the wrapper referred to in #ajax['wrapper'] above.
    '#prefix' => '<div id="class-fieldset-wrapper">',
    '#suffix' => '</div>',
  );
  if (!empty($form_state['values']['class_select'])) {
    
    $tcl_id = $form_state['values']['class_select'];

    $classes = classes_and_lessons_teaching($user->uid);
    if (!isset($classes[$tcl_id]) && !user_access('edit all attendance')) {
      drupal_set_message(t('Sorry, according to database records you are not teaching to this lesson.'), 'warning');
      drupal_goto('attendance');
    }
    $info = classes_and_lessons_tcl_by_id($tcl_id);
    $students = classes_and_lessons_class_list($info->class);

    $form['class_fieldset']['form_name'] = array(
      '#weight' => -10,
      '#markup' => '<h1>' 
        . t('Attendace for :class :lesson (:teacher)', array(
            ':class' => $info->class,
            ':lesson' => $info->lesson,
            ':teacher' => school_administration_formatted_full_name($info->teacher),
          )) 
        . ' '
        . $theday
        . t(' Session ')
        . $session
        . '</h1><br />',
    );
    $default = user_access('edit all attendance') ? 'Present' : 'Absent';
    drupal_add_css(drupal_get_path('module', 'attendance') . '/attendance.css', array('weight' => -10));
    foreach ($students as $st_cl_id => $data) {
      $prefix = '
        <div class="container-inline" style="
          border: solid 1px;
          padding: 6px;
          margin: 3px;
          height: 70px;
          width: 700px;
          "><div style="float:left;">'
          . school_administration_portrait_photo_link($data, array('height' => 70))
          . '</div><div style="margin-top:25px; float:left;">'
      ;
      $form['class_fieldset']['id_' . $st_cl_id . '_' . $data] = array(
        '#type' => 'radios',
        '#title' => ' ' . $data . ' ' . school_administration_formatted_full_name($data) . ' ',
        '#options' => drupal_map_assoc(variable_get('attendance_types')),
        '#prefix' => $prefix,
        '#suffix' => '</div></div>',
        '#required' => TRUE,
        '#default_value' => $default,
      );
    }
    /* square divs
    foreach ($students as $st_cl_id => $data) {
      $prefix = '
        <div style="
          border: solid 1px;
          padding: 3px;
          margin: 3px;
          width: 180px;
          height: 250px;
          float: left; 
          text-align:center;">'
          . school_administration_portrait_photo_link($data, array('width' => 110));
      $form['class_fieldset']['id_' . $st_cl_id . '_' . $data] = array(
        '#type' => 'select',
        '#title' => "$data " . school_administration_formatted_full_name($data),
        '#options' => drupal_map_assoc(variable_get('attendance_types')),
        '#prefix' => $prefix,
        '#suffix' => '</div>',
        '#required' => TRUE,
        '#default_value' => $default,
      );
    }
    */
    $form['class_fieldset']['tcl_id'] = array(
      '#type' => 'value',
      '#value' => $tcl_id,
    );
    $form['class_fieldset']['session'] = array(
      '#type' => 'value',
      '#value' => $session,
    );
    $form['class_fieldset']['date'] = array(
      '#type' => 'value',
      '#value' => $date,
    );
    $form['class_fieldset']['submit'] = array(
      '#weight' => -9,
      '#type' => 'submit',
      '#value' => t('Record'),
      '#suffix' => '<br /><br />',
    );
  }
  return $form;
}

/*
 * 
 */
function attendance_edit_form($form, &$form_state, $id, $date) {
  GLOBAL $user;
  $theday = format_date($date, 'custom', "d F Y");
  if ($date == mktime(0, 0, 0)) {
    $theday .= ' (' . t('Today') . ')';
  }
  else {
    $theday .= ' (' . format_date($date, 'custom', "l") . ')';
  }

  //$id is attendance id
  $students = attendance_get_session_data_byid($id);
  //keys of $students array is unknown, so..
  $session_data = array_values($students);
  $tcl_id = $session_data[0]->tcl_id;
  $classes = classes_and_lessons_teaching($user->uid);
  if (!isset($classes[$tcl_id]) && !user_access('edit all attendance')) {
    drupal_set_message(t('Sorry, according to database records you are not teaching to this lesson.'), 'warning');
    drupal_goto('attendance/date/' . $date);
  }
  if (isset($classes[$tcl_id]) && $date != mktime(0, 0, 0) && !user_access('edit all attendance')) {
    drupal_set_message(t('Sorry, You cannot edit attendance unless it is today.'), 'warning');
    drupal_goto('attendance/date/' . $date);
  }
  $session = t(' Session :sess', array(':sess' => $session_data[0]->session));
  $form['session'] = array(
    '#type' => 'value',
    '#value' => $session_data[0]->session,
  );
  $info = classes_and_lessons_tcl_by_id($tcl_id);

  $form['form_name'] = array(
    '#weight' => -10,
    '#markup' => '<h1>' 
      . t('Attendace for :class :lesson (:teacher)', array(
          ':class' => $info->class,
          ':lesson' => $info->lesson,
          ':teacher' => school_administration_formatted_full_name($info->teacher),
        )) 
      . '<br />'
      . $theday
      . ' '
      . t('Session :sess', array(':sess' => $session_data[0]->session))
      . '</h1><br />',
  );
  /*
  foreach ($students as $st_cl_id => $data) {
    $prefix = '
      <div style="
        border: solid 1px;
        padding: 3px;
        margin: 3px;
        width: 180px;
        height: 250px;
        float: left; 
        text-align:center;">'
        . school_administration_portrait_photo_link($data->school_no, array('width' => 110));
    $form['id_' . $st_cl_id . '_' . $data->school_no] = array(
      '#type' => 'select',
      '#title' => "$data->school_no " . school_administration_formatted_full_name($data->school_no),
      '#options' => drupal_map_assoc(variable_get('attendance_types')),
      '#prefix' => $prefix,
      '#suffix' => '</div>',
      '#required' => TRUE,
      '#default_value' => $data->result,
    );
  }
  */
  foreach ($students as $st_cl_id => $data) {
    $prefix = '
      <div class="container-inline" style="
        border: solid 1px;
        padding: 6px;
        margin: 3px;
        height: 70px;
        width: 700px;
        "><div style="float:left;">'
        . school_administration_portrait_photo_link($data->school_no, array('height' => 70))
        . '</div><div style="margin-top:25px; float:left;">'
    ;
    $form['id_' . $st_cl_id . '_' . $data->school_no] = array(
      '#type' => 'radios',
      '#title' => ' ' . $data->school_no . ' ' . school_administration_formatted_full_name($data->school_no) . ' ',
      '#options' => drupal_map_assoc(variable_get('attendance_types')),
      '#prefix' => $prefix,
      '#suffix' => '</div></div>',
      '#required' => TRUE,
      '#default_value' => $data->result,
    );
  }
  $form['tcl_id'] = array(
    '#type' => 'value',
    '#value' => $tcl_id,
    '#title' => t('TCL ID'),
    '#weight' => 3,
  );
  $form['date'] = array(
    '#type' => 'value',
    '#value' => $date,
  );
  $form['submit'] = array(
    '#weight' => -9,
    '#type' => 'submit',
    '#value' => t('Update'),
    '#suffix' => '<br /><br />',
  );
  return $form;
}

/**
 * 
 */
function attendance_is_dublicate($st_cl_id, $date, $session) {
  $result = db_query('SELECT COUNT(*)
    FROM {attendance}
    WHERE st_cl_id = :st_cl_id
    AND date = :date
    AND session = :session', array(
      ':st_cl_id' => $st_cl_id,
      ':date' => $date,
      ':session' => $session,
    ))
    ->fetchField();
  return ($result > 0) ? TRUE : FALSE;
}

/**
 * 
 */
function attendance_get_session_data_byid($id) {
  $row = db_query('SELECT *
    FROM {attendance}
    WHERE id = :id', array(
      ':id' => $id,
    ))->fetchObject();
  return  db_query("
    SELECT 
      c.id AS st_cl_id,
      a.id AS att_id,
      a.school_no, 
      a.session,
      a.tcl_id,
      a.result,
      a.date
    FROM 
      {attendance} a, 
      {classes_and_lessons_tcl} t,
      {classes_and_lessons_student_classes} c
    WHERE a.tcl_id = t.id
    AND t.class = c.class
    AND a.school_no = c.school_no
    AND date = :date
    AND a.tcl_id = :tcl
    AND session = :session", array(
      ':tcl' => $row->tcl_id,
      ':date' => $row->date,
      ':session' => $row->session,
    )
  )->fetchAllAssoc('st_cl_id');
}


/**
 * implementation of hook_form_validate()
 */
function attendance_add_form_validate($form_id, &$form_state) {
  //echo'<pre>';print_r($form_state);die();//echo "$op, $id";//menu_rebuild();//
  $error = 0;
  $date = $form_state['values']['date'];
  $tcl_id = $form_state['values']['tcl_id'];
  $session = $form_state['values']['session'];
  foreach ($form_state['values'] as $key => $value) {
    $result = explode('_', $key);
    if (isset($result[2]) && school_administration_student($result[2])) {
      if (attendance_is_dublicate($result[1], $date, $session)) {
        $error = 1;
      }
    }
  }
  if ($error == 1) {
    form_set_error('submit', t("There is arecord for this session. Please do not use URL to enter record.", array(':sess' => $session)));
  }
}

/**
 * implementation of hook_form_submit()
 */
function attendance_edit_form_submit($form_id, &$form_state) {
  $date = $form_state['values']['date'];
  foreach ($form_state['values'] as $key => $value) {
    attendance_write_record($form_state['values'], $key, array('date', 'session', 'st_cl_id'));
  }
  drupal_set_message(t('Attendance record is updated.'), 'status', FALSE);
  drupal_goto("attendance/date/$date");
}

/**
 * implementation of hook_form_submit()
 */
function attendance_add_form_submit($form_id, &$form_state) {
  foreach ($form_state['values'] as $key => $value) {
    attendance_write_record($form_state['values'], $key);
  }
  drupal_set_message(t('Attendance is recorded.'), 'status', FALSE);
  drupal_goto("attendance/date/" . $form_state['values']['date']);
}

/**
 * implementation of hook_node_insert()
 */
function attendance_write_record($values, $key, $conditions = NULL) {
  GLOBAL $user;
  $result = explode('_', $key);
  if (isset($result[2]) && school_administration_student($result[2])) {
    $attendance = array(
      'academic_year' => SCHOOL_ADMINISTRATION_C_YEAR,
      'term'          => SCHOOL_ADMINISTRATION_C_TERM,
      'date'          => $values['date'],
      'session'       => $values['session'],
      'tcl_id'        => $values['tcl_id'],
      'result'        => $values[$key],
      'st_cl_id'      => $result[1],
      'school_no'     => $result[2],
      'entry_time'    => time(),
      'recorded_by'   => $user->uid,
    );
    if ($conditions == NULL) {
      drupal_write_record('attendance', $attendance);
    }
    else {
      return $result[2] . '__' . drupal_write_record('attendance', $attendance, $conditions);
    }
  }
}

function attendance_class_records() {
  $build['progress'] = array(
    '#theme' => 'attendance_class_progress',
    '#title' => t('Class Progress'),
    '#data' => attendance_by_class(),
  );
  $build['progress']['#attached']['library'][] = array('system', 'ui.accordion');
  $build['progress']['#attached']['js'][] = array('data' => '(function($){$(function() { $("#accordion").accordion(); })})(jQuery);', 'type' => 'inline');
  $output = drupal_render($build);
  return $output;
}

/**
 * 
 */
function attendance_statistics($type = 1) {
  switch ($type) {
    
    case 1:
      $result = 'Absent';
      $title = t('Absent Records');
      break;
      
    case 2:
      $result = 'Tardy';
      $title = t('Tardiness Records');
      break;
      
  }
  $data = array();
  $i = 0;
  GLOBAL $user;
  foreach (attendance_top_results($result) as $student => $num) {
    //if user is a student show only own results
    if (classes_and_lessons_listof_student_classes($user->uid) && $student != $user->uid) {
      continue;
    }
    $att_records = array();
    foreach (attendance_student_records_by_type($student, $result) as $rec) {
      $att_records[] = format_date($rec->date, 'custom', "d M Y") . " $rec->lesson, session: $rec->session";
    }
    $classes = classes_and_lessons_listof_student_classes($student);
    $data[$i]['name'] = school_administration_formatted_full_name($student);
    $data[$i]['num'] = format_plural($num, '1 session', '@count sessions');
    $data[$i]['image'] = school_administration_portrait_photo_link($student, array('width' => 110));
    $data[$i]['data'] = array($student, $classes, $att_records);
    $i++;
  }
  $build['myelement'] = array(
    '#theme' => 'attendance_stats',
    '#title' => $title,
    '#data' => $data,
  );
  $build['myelement']['#attached']['library'][] = array('system', 'ui.accordion');
  $build['myelement']['#attached']['js'][] = array('data' => '(function($){$(function() { $("#accordion").accordion(); })})(jQuery);', 'type' => 'inline');
  $output = drupal_render($build);
  return $output;
}

/**
 * 
 */
function attendance_page($date = NULL) {
  GLOBAL $user;
  $teaching = array();
  $theday = ($date == NULL) ? mktime(0, 0, 0) : $date;
  //if user is teaching
  $t_classes = classes_and_lessons_teaching($user->uid);
  if (!empty($t_classes)) {
    $type = 'teacher';
    $records = attendance_teacher_records($user->uid, $theday);
  }
  
  //if user is student
  $s_classes = classes_and_lessons_listof_student_classes($user->uid);
  if (!empty($s_classes)) {
    $type = 'student';
    $records = attendance_student_daily_records($user->uid, $theday);
  }
  
  //if user has "view all attendance" permission
  if (user_access('view all attendance')) {
    $type = 'admin';
    $records = attendance_daily_records($theday);
  }

  //view attendance records
  return theme('attendance_page_view', array(
    'type'     => $type,
    'day'      => $theday,
    'records'  => $records,
  ));
}

/**
 * 
 */
function attendance_navigation_form($form, &$form_state, $day) {
  list($theday['day'], $theday['month'], $theday['year']) = explode('-', date("j-n-Y", $day));
  $form['goto'] = array(
    '#type' => 'date',
    '#title' => t('Go to date'),
    '#default_value' => $theday
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('View'),
  );
  return $form;
}


/**
 * 
 */
function attendance_navigation_form_submit($form, &$form_state) {
  $date = strtotime(implode('/', $form_state['values']['goto']));
  drupal_goto("attendance/date/$date");
}

/**
 * 
 */
function theme_attendance_page_view($input) {
  drupal_add_css(".attendance_page { float:left; clear:both; }", 'inline');
  $max_session = variable_get('attendance_max_sessions', 8);
  $no_link = 0;
  $day = drupal_render(drupal_get_form('attendance_navigation_form', $input['day']));
  if ($input['day'] == mktime(0, 0, 0)) {
    $day_name = t('Today');
  }
  else {
    $day_name = format_date($input['day'], 'custom', "l");
  }
  $text = '<center>'
    . $day
    . '<br /><br /><h2>'
    . t("Attendance records for !day", array('!day' => $day_name))
    . date(" (d M Y) ", $input['day'])
    . '</h2><br /></center>'
  ;
  if (count($input['records']) == 0 && $no_link == 1) {
    $text .= '<br /><br />'
      . t('There is no record for this day. Click sessions to add.') 
      . '<br /><br />';
  }

  switch ($input['type']) {
    
    case 'student' :
      $title = t("Your attendance records for today:");
      foreach ($input['records'] as $record) {
        $att[$record->session][$record->lesson][$record->id] = $record->result;
      }
      for ($session = 1; $session <= $max_session; $session++) {
        if (!isset($att[$session])) {
          $attendance[$session] = array(array());
        }
        else {
          $attendance[$session] = $att[$session];
        }
      }
      foreach ($attendance as $session => $att) {
        $text .= '<div class="attendance_page">';
        foreach ($att as $class => $val) {
          $text .= attendance_show_day($input['day'], 'student', $session, $class, $val);
        }
        $text .= '</div>';
      }
      break;
    
    case 'teacher' :
      $title = t("Your records for today:");
      foreach ($input['records'] as $record) {
        $att[$record->session][$record->class][$record->id] = $record->result;
      }

      for ($session = 1; $session <= $max_session; $session++) {
        if (!isset($att[$session])) {
          $attendance[$session] = array(array());
        }
        else {
          $attendance[$session] = $att[$session];
        }
      }
      foreach ($attendance as $session => $att) {
        $text .= '<div class="attendance_page">';
        foreach ($att as $class => $val) {
          $text .= attendance_show_day($input['day'], 'teacher', $session, $class, $val);
        }
        $text .= '</div>';
      }
      break;
    
    case 'admin' :
      foreach (classes_and_lessons_tcl_classes() as $class => $tot) {
        $att[$class] = array();
      }
      $title = t("Today's attendance records:");
      foreach ($input['records'] as $record) {
        $att[$record->class][$record->session][$record->id] = $record->result;
      }
      foreach ($att as $class => $tot) {
        for ($session = 1; $session <= $max_session; $session++) {
          if (!isset($tot[$session])) {
            $attendance[$class][$session] = array();
          }
          else {
            $attendance[$class][$session] = $att[$class][$session];
          }
          //$attendance[$class][$session] = array();
        }
      }

      foreach ($attendance as $class => $att) {
        $text .= '<div class="attendance_page">';
        foreach ($att as $session => $value) {
          $text .= attendance_show_day($input['day'], 'admin', $session, $class, $value);
        }
        $text .= '</div>';
      }
      break;
  }

  return $text;
}

/**
 * 
 */
function attendance_show_day($day, $type, $session, $class, $att) {
  drupal_add_css("
    .attendance_show_day { 
      border: solid 1px;
      padding: 3px;
      margin: 3px;
      width: 70px;
      height: 100px;
      float: left; 
      text-align: center;
    }
  ", 'inline');
  $class = ($class == '0') ? NULL : $class;
  $div = "<div class=\"attendance_show_day\">$session<br /><b>$class</b><br />";
  if (count($att) > 0) {
    //send to edit form with attendave serial row id
    $link = "attendance/edit/" . key($att) . '/' . $day;
    $summary = array_count_values($att);
    arsort($summary);
    $t = array();
    foreach ($summary as $att_type => $number) {
      $t[] = ($type != 'student') ? "$number $att_type" : $att_type;
    }
    $div .= implode('<br>', $t);
    $link_title = t('Update');
  }
  else {
    //send to add form with session no
    if ($type == 'admin') {
      $link = "attendance/add/" . $session . '/' . $day . '/' . $class;
    }
    else {  
      $link = "attendance/add/" . $session . '/' . $day;
    }
    $link_title = t('Record Attendance ');
  }
  $div .= '</div>';
  
  $div_link = l($div, $link, 
    array(
      'attributes' => array(
        'Title' => $link_title,
      ),
      'html' => TRUE,
    )
  );
  
  if (mktime(0, 0, 0) != $day && user_access('edit all attendance')) {
    return $div_link;
  }
  if (mktime(0, 0, 0) == $day && $type != 'student') {
    return $div_link;
  }
  else {
    return $div;
  }
}

/**
 * 
 */
function attendance_dynamic_sections_select_callback($form, $form_state) {
  return $form['class_fieldset'];
}

/**
 * 
 */
function attendance_student_daily_records($uid, $date) {
  return db_query("
    SELECT 
      a.id, 
      session, 
      c.class, 
      a.school_no, 
      result, 
      date, 
      tcl_id, 
      lesson, 
      teacher, 
      a.term, 
      a.academic_year
    FROM 
      {attendance} a, 
      {classes_and_lessons_student_classes} c,
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND t.class = c.class
    AND a.school_no = :uid
    AND date = :date", array(
      ':uid' => $uid,
      ':date' => $date,
    )
  )->fetchAllAssoc('id');
}

/**
 * 
 */
function attendance_student_records_by_type($uid, $type) {
  return db_query("
    SELECT 
      a.id, 
      session, 
      date,
--      c.class, 
      lesson
    FROM 
      {attendance} a, 
      {classes_and_lessons_student_classes} c,
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND t.class = c.class
    AND a.school_no = :uid
    AND result = :type
    AND a.term = :term
    ORDER BY date",
    array(
      ':uid' => $uid,
      ':type' => $type,
      ':term'  => SCHOOL_ADMINISTRATION_C_TERM,
    )
  )->fetchAllAssoc('id');
}

/**
 * 
 */
function attendance_daily_records($date) {
  return db_query("
    SELECT 
      a.id, 
      session, 
      c.class, 
      a.school_no, 
      result, 
      date, 
      tcl_id, 
      lesson, 
      teacher, 
      a.term, 
      a.academic_year
    FROM 
      {attendance} a, 
      {classes_and_lessons_student_classes} c,
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND t.class = c.class
    AND date = :date", array(
      ':date' => $date,
    )
  )->fetchAllAssoc('id');
}

/**
 * 
 */
function attendance_teacher_records($uid, $date) {
  return db_query("
    SELECT 
      a.id, 
      session, 
      c.class, 
      a.school_no, 
      result, 
      date, 
      tcl_id, 
      lesson, 
      teacher, 
      a.term, 
      a.academic_year
    FROM 
      {attendance} a, 
      {classes_and_lessons_student_classes} c,
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND t.class = c.class
    AND teacher = :uid
    AND date = :date", array(
      ':uid' => $uid,
      ':date' => $date,
    )
  )->fetchAllAssoc('id');
}

/**
 * 
 */
function attendance_top_results($result) {
  return db_query("
    SELECT 
      a.school_no,
      COUNT(id)
    FROM 
      {attendance} a,
      {school_administration_student_main} s
    WHERE a.school_no = s.school_no
    AND term = :term
    AND a.academic_year = :cyear
    AND result = :result
    AND withdraw_date IS NULL
    GROUP BY school_no
    ORDER BY 2 DESC",
    array(
      ':result' => $result,
      ':cyear'  => SCHOOL_ADMINISTRATION_C_YEAR,
      ':term'   => SCHOOL_ADMINISTRATION_C_TERM,
    )
  )
  ->fetchAllKeyed();
}

/**
 * 
 */
function attendance_by_class() {
  $a = db_query("
    SELECT 
      class,
      lesson,
      date,
      session,
      a.id
    FROM 
      {attendance} a, 
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND a.term = :term
    AND a.academic_year = :cyear
    ORDER BY 1, 2, 3, 4",
    array(
      ':cyear' => SCHOOL_ADMINISTRATION_C_YEAR,
      ':term'  => SCHOOL_ADMINISTRATION_C_TERM,
    )
  );
  $result = array();
  $data = array();
  foreach ($a as $b) {
    $result[$b->class][$b->lesson]["$b->date - $b->session"] = 1;
  }
  foreach ($result as $class => $value) {
    foreach ($value as $lesson => $val) {
      $data[$class][$lesson] = count($val);
    }
  }

  return $data;
  //second way not very reliable
  $a = db_query("
    SELECT 
      school_no,
      COUNT(*)
    FROM 
      {attendance} a, 
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND a.term = :term
    AND a.academic_year = :cyear
    AND class = :class
    GROUP BY school_no
    ORDER BY 2 DESC",
    array(
      ':class' => $class,
      ':cyear' => SCHOOL_ADMINISTRATION_C_YEAR,
      ':term'  => SCHOOL_ADMINISTRATION_C_TERM,
    )
  )->fetchField();
  return db_query("
    SELECT 
      lesson, 
      COUNT(a.id)
    FROM 
      {attendance} a, 
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND a.term = :term
    AND a.academic_year = :cyear
    AND school_no = $a
    GROUP BY tcl_id
    ORDER BY 1", array(
      ':cyear' => SCHOOL_ADMINISTRATION_C_YEAR,
      ':term'  => SCHOOL_ADMINISTRATION_C_TERM,
    ))->fetchAllKeyed();
}

/**
 * 
 */
function attendance_theme() {
  return
  array(
    'attendance_page_view' => array(
      'variables' => array('text' => NULL),
    ),
    'attendance_stats' => array(
      'variables' => array('title' => NULL, 'data' => array()),
    ),
    'attendance_class_progress' => array(
      'variables' => array('title' => NULL, 'data' => array()),
    ),
    'attendance_teacher_progress' => array(
      'variables' => array('title' => NULL, 'data' => array()),
    ),
  );
}

/**
 * 
 */
function theme_attendance_stats($input) {
  $output = '<div class="demo">
    <h2>' . $input['title'] . '</h2>
    <div id="accordion">';
  if (count($input['data']) == 0) {
    $output .= '<br/>' . t('There is no record.');
  }
  foreach ($input['data'] as $student) {
    $output .= '
      <div><a href="#">' . $student['name'] .' ' . $student['num'] . '</a></div>
      <div style="height: 200px">
        <div style="float: left; margin-right:8px">' . $student['image'] . '</div>
        <div style="float: left; width:100px">' . t('Student ID:') . '</div><div>' . $student['data'][0] . '</div>
        <div style="float: left; width:100px">' . t('Class:') . '</div><div>' . implode(', ', $student['data'][1]) . '</div>
        <div>' . t('Records:') . '</div>
        <div style="margin-left:150px">' . implode('<br>', $student['data'][2]) . '</div>
      </div>';
  }
  $output .= '</div></div>';
  return $output;
}

/**
 * 
 */
function theme_attendance_class_progress($input) {
  $output = '<div class="demo">
    <h2>' . $input['title'] . '</h2>
    <div id="accordion">';
  foreach ($input['data'] as $class => $info) {
    $output .= '
      <div><a href="#"><b>' . $class . '</b> Total ' . array_sum($info) . ' sessions</a></div>
      <div style="height: 150px">';
    foreach ($info as $lesson => $sessions) {
      $output .= '<div style="float: left; width:200px">' . $lesson . '</div><div>' . $sessions . ' sessions</div>';
    }
    $output .= '</div>';
  }
  $output .= '</div>';
  return $output;
}

/**
 * 
 */
function theme_attendance_teacher_progress($input) {
  $output = '<div class="demo">
    <h2>' . $input['title'] . '</h2>
    <div id="accordion">';
  foreach ($input['data'] as $teacher => $info) {
    $output .= '
      <div><a href="#"><b>' . school_administration_formatted_full_name($teacher) . '</b></a></div>
      <div style="height: 150px">';
    foreach ($info as $lesson => $sessions) {
      foreach ($sessions as $session => $ex) {
        $sess = explode(' - ', $session);
        $output .= '<div style="float: left; width:400px">' . $lesson . '</div><div>' . format_date($sess[0], 'custom', "d M Y"). ' (' . $sess[1] . '. session)</div>';
      }
    }
    $output .= '</div>';
  }
  $output .= '</div>';
  return $output;
}

/**
 * 
 */
function attendance_teacher_stats() {
  $build['progress'] = array(
    '#theme' => 'attendance_teacher_progress',
    '#title' => t('Teachers\'  Compensation Records'),
    '#data' => attendance_by_teacher(),
  );
  $build['progress']['#attached']['library'][] = array('system', 'ui.accordion');
  $build['progress']['#attached']['js'][] = array('data' => '(function($){$(function() { $("#accordion").accordion(); })})(jQuery);', 'type' => 'inline');
  $output = drupal_render($build);
  return $output;
}

/**
 * 
 */
function attendance_by_teacher() {
  $a = db_query("
    SELECT 
      teacher,
      class,
      lesson,
      date,
      session,
      a.id
    FROM 
      {attendance} a, 
      {classes_and_lessons_tcl} t
    WHERE a.tcl_id = t.id
    AND a.term = :term
    AND a.academic_year = :cyear
    AND session > 4
    ORDER BY 1, 2, 3, 4",
    array(
      ':cyear' => SCHOOL_ADMINISTRATION_C_YEAR,
      ':term'  => SCHOOL_ADMINISTRATION_C_TERM,
    )
  );
  $result = array();
  foreach ($a as $b) {
    $result[$b->teacher]["$b->class - $b->lesson"]["$b->date - $b->session"] = 1;
  }
  return $result;
  foreach ($result as $teacher => $value) {
    foreach ($value as $lesson => $val) {
      $data[$teacher][$lesson] = count($val);
    }
  }
}