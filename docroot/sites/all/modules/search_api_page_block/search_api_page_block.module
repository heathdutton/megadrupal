<?php
/**
 * @file search_api_page_block.module
 * TODO: Enter file description here.
 */

/**
 * Implements hook_help().
 */
function search_api_page_block_help($path, $arg) {
  switch ($path) {
    case 'admin/help#search_api_page_block':
      return t(" ");
    // OPTIONAL: Add additional cases for other paths that should display help text.
  }
}

/**
 * Implements hook_block_info().
 */
function search_api_page_block_block_info() {
  $blocks = array();
  foreach (search_api_page_load_multiple(FALSE, array('enabled' => TRUE)) as $page) {
    $blocks[$page->machine_name] = array(
      'info' => t('Search results: !name', array('!name' => $page->name)),
    );
  }
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function search_api_page_block_block_view($delta) {
  $page = search_api_page_load($delta);
  if ($page) {
    $block = array();
    $block['subject'] = t($page->name);
    $block['content'] = search_api_page_block_search_api_page_view($page->machine_name);
    return $block;
  }
}

/**
 * Implements hook_block_configure().
 */
function search_api_page_block_block_configure($delta = '') {
  // This example comes from node.module.
  // $form = array();
  // if ($delta == 'recent') {
  //   $form['node_recent_block_count'] = array(
  //     '#type' => 'select',
  //     '#title' => t('Number of recent content items to display'),
  //     '#default_value' => variable_get('node_recent_block_count', 10),
  //     '#options' => drupal_map_assoc(array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 30)),
  //   );
  // }
  return $form;
}


function search_api_page_block_search_api_page_view($page_machine_name, $keys = NULL) {
  if (!$keys) {
    if (!($keys = search_api_page_block_get_keys())) {
      return NULL;
    }
  }

  // Get module preferences.
  $settings = array(
    'form' => variable_get('search_api_page_block_include_form', FALSE),
    'pager' => variable_get('search_api_page_block_include_pager', TRUE),
  );
  //$breadcrumb = drupal_get_breadcrumb();
  
  // Load the search page results with the given keywords.
  module_load_include('inc', 'search_api_page', 'search_api_page.pages');
  $output = search_api_page_view($page_machine_name, $keys);

  // Make sure we have search results, otherwise return nothing.
  if (!$output['results']['#results']['result count']) {
    return NULL;
  }

  // Apply settings by removing unwanted search results array elements.
  foreach($settings as $setting => $setting_value) {
    if (!$setting_value && !empty($output[$setting])) {
      unset($output[$setting]);
    }    
  }

  //drupal_set_breadcrumb($breadcrumb);
  return $output;
}

/**
 * Helper function to contextually get the keywords to use in a given search page block.
 */
function search_api_page_block_get_keys() {
  $keys = NULL;
  $item = menu_get_item();

  // Get the title of the node to use as the search keywords
  if (variable_get('search_api_page_block_keys_node_title', TRUE)) {
    if (!empty($item['map'][0]) && !empty($item['map'][1]) && $item['map'][0] == 'node' && is_object($item['map'][1])) {
      $node = $item['map'][1];
      $node_types = variable_get('search_api_page_block_node_types', array());
      if (empty($node_types) || in_array($node->type, $node_types)) {
        $keys = $node->title;
      }
    }
  }

  return strtolower($keys);
}



















