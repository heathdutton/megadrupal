<?php
/**
 * @file
 * Creates dummy placeholders that can be filled programatically later.
 */

/**
 * Implements hook_field_group_formatter_info().
 */
function fieldgroup_placeholder_field_group_formatter_info() {
  return array(
    'display' => array(
      'placeholder_div' => array(
        'label' => t('Placeholder'),
        'description' => t('Empty placeholder'),
        'instance_settings' => array('classes' => ''),
      ),
    ),
  );
}

/**
 * Implements hook_field_group_format_settings().
 */
function fieldgroup_placeholder_field_group_format_settings($group) {
  $form = array();
  $form['placeholder_comment'] = array(
    '#type' => 'textarea',
    '#title' => t('Comments'),
    '#description' => t('Put comments here so people can see what is going on.'),
    '#default_value' => isset($group->format_settings['placeholder_comment']) ? $group->format_settings['placeholder_comment'] : '',
  );
  return $form;
}

/**
 * Implements hook_field_group_format_summary().
 */
function fieldgroup_placeholder_field_group_format_summary($group) {
  $output = '';
  if (isset($group->format_settings['placeholder_comment'])) {
    $output .= $group->format_settings['placeholder_comment'];
  }
  return $output;
}
/**
 * Implements hook_field_group_pre_render().
 */
function fieldgroup_placeholder_field_group_pre_render(&$element, $group, &$form) {
  if ($group->format_type == 'placeholder_div') {
    $classes = array(
      'placeholder-group',
      str_replace('_', '-', $group->group_name),
    );
    if (isset($group->format_settings['instance_settings']['classes'])) {
      $classes[] = $group->format_settings['instance_settings']['classes'];
    }
    $element['#type'] = 'markup';
    $element['#prefix'] = '<div' . drupal_attributes(array('class' => $classes)) . '>';
    $element['#suffix'] = '</div>';
  }
}
