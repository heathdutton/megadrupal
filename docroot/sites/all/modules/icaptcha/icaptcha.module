<?php



// -------- Hooks



/**
* Implements hook_menu
*/
function icaptcha_menu(){
  return array(

    // Settings form
    'admin/config/user-interface/icaptcha' => array(
      'access arguments' => array('administer site configuration'),
      'description' => t('Configure iCaptcha'),
      'page arguments' => array('icaptcha_admin_settings'),
      'page callback' => 'drupal_get_form',
      'title' => 'Configure iCaptcha',
      'type' => MENU_NORMAL_ITEM,
    ),

    // Adding an iCapcha callback
    'icaptcha/add/%' => array(
      'access arguments' => array('administer site configuration'),
      'page callback' => 'icaptcha_add',
      'page arguments' => array(2),
    ),

    // Removing an iCapcha callback
    'icaptcha/remove/%' => array(
      'access arguments' => array('administer site configuration'),
      'page callback' => 'icaptcha_remove',
      'page arguments' => array(2),
    ),

  );
}



/**
* Implements hook_theme
*/
function icaptcha_theme($existing, $type, $theme, $path) {
  return array(
    'icaptcha' => array(
      'render element' => 'element',
    )
  );
}



// -------- Theme hooks



function theme_icaptcha($variables){

  $error = isset($_SESSION['icaptcha_error']) && $_SESSION['icaptcha_error'] ? ' error' : '';
  $_SESSION['icaptcha_error'] = FALSE;
  $app_key = $variables['element']['#app_key'];

  return 
    '<div class="js-widget-icaptcha-wrapper widget-icaptcha-wrapper' . $error . '">' .
      '<div class="icaptcha" icaptcha_app_key="' . $app_key . '"></div>' .
      '<label class="icaptcha-error">' . t('Please complete the iCaptcha correctly!') . '</label>' .
    '</div>';

}



// -------- Alters



/**
* Implements hook_form_alter
*/
function icaptcha_form_alter(&$form, &$form_state, $form_id){

  $validate_on = variable_get('icaptcha_validation', 'both');
  $has_icaptcha = variable_get('icaptcha_' . $form_id, FALSE);

  // Insert the iCaptcha add/remove link but not on admin forms
  if (variable_get('icaptcha_admin', TRUE) && user_access('administer site configuration') && arg(0) != 'admin') {
    icaptcha_insert_admin_link($form, $has_icaptcha);
  }

  // Insert the iCaptcha element if needed
  if ($has_icaptcha){
    icaptcha_insert_element($form);
  }
}



// -------- Forms



/**
* iCaptcha drupal settings form
*/
function icaptcha_admin_settings(){
  return system_settings_form(
    array(

      'icaptcha_app_key' => array(
        '#title' => 'iCaptcha app key',
        '#type' => 'textfield',
        '#default_value' => variable_get('icaptcha_app_key'),
        '#description' => 'If you don\'t have one yet, ' . l('get one here', 'http://icaptcha.co.za', array('attributes' => array('target' => '_blank'))) . '!',
      ),

      'icaptcha_validation' => array(
        '#title' => 'Validate iCaptcha on the...',
        '#type' => 'radios',
        '#options' => array(
          'client' => 'client side only, before submitting forms to the server',
          'server' => 'server side only, after the form has been submitted to the server',
          'both' => 'on both client and server side (recommended)',
        ),
        '#default_value' => variable_get('icaptcha_validation', 'both'),
      ),

      'System forms' => array(

        '#title' => 'Show iCaptcha on the following system forms',
        '#type' => 'fieldset',

        'icaptcha_user_login_block' => array(
          '#title' => 'User login block',
          '#type' => 'checkbox',
          '#default_value' => variable_get('icaptcha_user_login_block', FALSE),
        ),

        'icaptcha_user_login_form' => array(
          '#title' => 'User login form',
          '#type' => 'checkbox',
          '#default_value' => variable_get('icaptcha_user_login_form', FALSE),
        ),

        'icaptcha_user_register_form' => array(
          '#title' => 'User registration form',
          '#type' => 'checkbox',
          '#default_value' => variable_get('icaptcha_user_register_form', FALSE),
        ),
      ),

      'Administration' => array(

        '#title' => 'Administration',
        '#type' => 'fieldset',

        'icaptcha_admin' => array(
          '#title' => 'Show a link to add/remove iCaptcha on forms',
          '#type' => 'checkbox',
          '#default_value' => variable_get('icaptcha_admin', TRUE),
        ),

      ),
    )
  );
}



// -------- Callbacks



/**
* Adds a form id to the list of forms to display iCaptcha
*/
function icaptcha_add($form_id){
  variable_set('icaptcha_' . $form_id, TRUE);
  drupal_goto();
}



/**
* Adds a form id to the list of forms to display iCaptcha
*/
function icaptcha_remove($form_id){
  variable_del('icaptcha_' . $form_id);
  drupal_goto();
}



/**
* Server side validation callback
*/
function icaptcha_validate(&$form, &$form_state){

  // Get iCaptcha fields  
  $token = $_POST['icaptcha-token'];
  $input = $_POST['icaptcha-user-input'];
  $success = $_POST['icaptcha-success'] == 'true';
  $app_key = variable_get('icaptcha_app_key', FALSE);

  // If failed on the client side, don't bother with server side
  if ($success) {

    $response = file_get_contents(
      'http://icaptcha.co.za/api/backend_verify?' . 
      'app_key=' . $app_key . '&' .
      'token=' . $token . '&' .
      'word=' . $input
    );

    if ($response) {
      $response = json_decode($response);
      $success = $response->verified;
    } else {
      $success = FALSE;
    }
  } 

  if (!$success){
    $_SESSION['icaptcha_error'] = TRUE;
    form_set_error('icaptcha', t('Please complete the iCaptcha correctly!'));
  }

}



// -------- Utility



/**
* Inserts an iCaptcha element into a form
*/
function icaptcha_insert_element(&$form){

  $app_key = variable_get('icaptcha_app_key', FALSE);

  if ($app_key){

    // Attach JS, CSS and form class
    $form['#attached']['js'][] = 'http://icaptcha.co.za/api/icaptcha.js';
    $form['#attached']['css'][] = drupal_get_path('module', 'icaptcha') . '/icaptcha.css';
    $form['#attributes']['class'][] = 'has-icaptcha';


    if (isset($form['actions']['#weight'])){
      $weight = $form['actions']['#weight'];
      $form['actions']['#weight']++;
    } else {
      $weight = 900;
      $form['actions']['#weight'] = 1000;
    }

    // Insert iCaptcha form element
    $form['icaptcha'] = array(
      '#theme' => 'icaptcha',
      '#app_key' => $app_key,
      '#weight' => $weight,
    );

    $validate_on = variable_get('icaptcha_validation', 'both');

    // Client side validation
    if ($validate_on == 'client' || $validate_on == 'both'){
      $form['#attached']['js'][] = drupal_get_path('module', 'icaptcha') . '/icaptcha.js';
    }

    // Server side validation
    if ($validate_on == 'server' || $validate_on == 'both'){
      $form['#validate'][] = 'icaptcha_validate';
    }

  } else {
    drupal_set_message('Please enter your iCaptcha app key ' . l('here', 'admin/config/user-interface/icaptcha') . '.');      
  }

}



/**
* Insert the iCaptcha add/remove link
*/ 
function icaptcha_insert_admin_link(&$form, $has_icaptcha){
  
  $options = array(
    'query' => array('destination' => $_GET['q'])
  );

  $form['toggle_icaptcha'] = array(
    '#markup' => $has_icaptcha
      ? l('Remove iCaptcha from this form', 'icaptcha/remove/' . $form['#form_id'], $options)
      : l('Add iCaptcha to this form', 'icaptcha/add/' . $form['#form_id'], $options),
    '#weight' => 950,
  );
}



