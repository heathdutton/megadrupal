<?php
/**
 * @file
 * Send mails to admin about the user details and their status.
 */

/**
 * Implements hook_menu().
 */
function userdetailsemailcamp_menu() {
  $items['admin/config/system/userdetailsemailcamp'] = array(
    'title' => 'UserDetails Emailcamp',
    'description' => 'Provides option to send mail to admin daily or monthly about userdetails and their status.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'userdetailsemailcamp_mailsend',
    ),
    'access arguments' => array('access administration menu'),
    'file' => 'includes/userdetailsemailcamp.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_cron().
 */
function userdetailsemailcamp_cron() {
  $cron_last = variable_get('cron_last');
  $language   = language_default();
  $from_mail = variable_get('userdetailsemailcamp_from_email_setting');
  $to_mail = variable_get('userdetailsemailcamp_to_email_setting');
  $emailcamp       = variable_get('userdetailsemailcamp_setting_emailcamp');
  $remind_day = ($emailcamp == 0) ? 'Daily' : (($emailcamp == 1) ? 'Monthly' : 'none');
  if (($remind_day == 'Daily') && (date('ymd', $cron_last) !== date('ymd', time())) || ($remind_day == 'Monthly') && (date('ym', $cron_last) !== date('ym', time()))) {
    $query = db_select('users', 'u');
    $query->addExpression('count(*)', 'count');
    $query->condition('uid', 0, '<>');
    $query->condition('uid', 1, '<>');
    $query->condition('status', 1);
    $activestatus = $query->execute()->fetchAssoc();
    $activeusers = $activestatus['count'];
    $query = db_select('users', 'u');
    $query->addExpression('count(*)', 'count');
    $query->condition('uid', 0, '<>');
    $query->condition('status', 0);
    $inactivestatus = $query->execute()->fetchAssoc();
    $inactiveusers = $inactivestatus['count'];
    $query = db_select('users', 'u');
    $query->fields('u', array(
         'name',
         'mail',
         'status',
     ));
    $query->condition('uid', 0, '<>');
    $query->condition('uid', 1, '<>');
    $query->orderBy('created', 'DESC');
    $userdetails = $query->execute();
    if ($activeusers != 0 || $inactiveusers != 0) {
      $header      = array(
        t('USERNAME'),
        t('EMAIL'),
        t('STATUS'),
      );
    }
    $rows = array();
    foreach ($userdetails as $value) {
      if ($value->status == 0) {
        $status = '<span style=color:red>Blocked</span>';
      }
      else {
        $status = '<span style=color:green>Active</span>';
      }
      $rows[] = array(
        $value->name,
        $value->mail,
        $status,
      );
    }
    $usertable = theme('table', array(
         'header' => $header,
         'rows' => $rows,
     ));
    $params = array(
      'subject' => "UserReport - $remind_day Basis",
      'body' => "<p>Number of Active Users:<span style=color:green>$activeusers</span></p><p>Number of Inactive Users:<span style=color:red>$inactiveusers</span></p> $usertable",
    );
    $mail = drupal_mail('userdetailsemailcamp', 'userdetailsemailcamp_key', $to_mail, $language, $params, $from_mail, TRUE);
    if (!$mail) {
      $error_msg = 'Failed to send the email to admin';
      watchdog('userdetailsemailcamp', $error_msg, array(), WATCHDOG_ALERT);
      return FALSE;
    }
  }
}

/**
 * Implements hook_mail().
 */
function userdetailsemailcamp_mail($key, &$message, $params) {
  switch ($key) {
    case 'userdetailsemailcamp_key':
      $message['subject'] = $params['subject'];
      $message['body'][]  = $params['body'];
      break;
  }
  $headers = array(
    'MIME-Version' => '1.0',
    'Content-Type' => 'text/html; charset=UTF-8; format=flowed',
    'Content-Transfer-Encoding' => '8Bit',
    'X-Mailer' => 'Drupal',
  );
  foreach ($headers as $key => $value) {
    $message['headers'][$key] = $value;
  }
}
