<?php

/**
 * @file
 * Implements MailChimp Ecommerce API.
 */

/**
 * Implements of hook_init().
 */
function commerce_mailchimp_init() {
  // Stores the cookies for X days.
  $time = REQUEST_TIME + 60 * 60 * 24 * variable_get('commerce_mailchimp_cookie_time', 30);

  $cookie_params = session_get_cookie_params();

  if (isset($_REQUEST['mc_cid'])) {
    setcookie(variable_get('commerce_mailchimp_campaign_cookie_name', 'mailchimp_campaign_id'), trim($_REQUEST['mc_cid']), $time, $cookie_params['path'], $cookie_params['domain']);
  }

  if (isset($_REQUEST['mc_eid'])) {
    setcookie(variable_get('commerce_mailchimp_email_cookie_name', 'mailchimp_email_id'), trim($_REQUEST['mc_eid']), $time, $cookie_params['path'], $cookie_params['domain']);
  }
}

/**
 * Implements hook_menu().
 */
function commerce_mailchimp_menu() {
  $items['admin/commerce/config/mailchimp'] = array(
    'title' => 'MailChimp settings',
    'description' => 'Settings for the MailChimp Ecommerce API',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_mailchimp_settings'),
    'access arguments' => array('configure store'),
    'file' => 'includes/commerce_mailchimp.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_commerce_checkout_pane_info().
 */
function commerce_mailchimp_commerce_checkout_pane_info() {
  $checkout_panes = array();

  $checkout_panes['commerce_mailchimp'] = array(
    'title' => t('Subscription Options'),
    'base' => 'commerce_mailchimp_pane',
    'file' => 'includes/commerce_mailchimp.checkout_pane.inc',
    'page' => 'checkout',
    'fieldset' => FALSE,
  );

  return $checkout_panes;
}

/**
 * Implement hook_mailchimp_lists_merge_tokens().
 *
 * @return array
 */
function commerce_mailchimp_mailchimp_lists_merge_tokens() {
  $tokens = array();

  $token_info = token_info();
  if (!empty($token_info['tokens']['commerce-order'])) {
    foreach ($token_info['tokens']['commerce-order'] as $key => $info) {
      if (isset($info['type']) && $info['type'] == 'commerce-customer-profile') {
        foreach ($token_info['tokens'][$info['type']] as $key2 => $info2) {
          if (isset($info2['type']) && $info2['type'] == 'addressfield') {
            foreach ($token_info['tokens'][$info2['type']] as $key3 => $info3) {
              $info3['name'] = 'Order - ' . $info['name'] . ' - ' . $info2['name'] . ' - ' . $info3['name'];
              $tokens[$key . ':' . $key2 . ':' . $key3] = $info3;
            }
          }
        }
      }
    }
  }

  return $tokens;
}
