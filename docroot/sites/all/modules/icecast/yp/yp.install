<?php

function yp_schema() {
  $schema['yp_stream'] = array(
    'fields' => array(
      'sid'              => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE, 'description' => 'Stream ID'),
      'parent_id'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Parent stream ID'),
      'server_name'      => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'Stream name'),
      'listing_ip'       => array('type' => 'varchar', 'length' => 39, 'not null' => TRUE, 'default' => '', 'description' => 'Source IP address'),
      'description'      => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'Stream description'),
      'genre'            => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'Stream genre'),
      'cluster_password' => array('type' => 'varchar', 'length' => 50, 'not null' => TRUE, 'default' => '', 'description' => 'Cluster password'),
      'url'              => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'Stream URL'),
      'current_song'     => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'Current song'),
      'listen_url'       => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'Listen URL'),
      'server_type'      => array('type' => 'varchar', 'length' => 25, 'not null' => TRUE, 'default' => '', 'description' => 'Stream type'),
      'server_subtype'   => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'Stream subtype'),
      'bitrate'          => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Bit rate'),
      'listeners'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Listeners'),
      'max_listeners'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Max listeners'),
      'channels'         => array('type' => 'varchar', 'length' => 25, 'not null' => TRUE, 'default' => '', 'description' => 'Channels'),
      'samplerate'       => array('type' => 'varchar', 'length' => 25, 'not null' => TRUE, 'default' => '', 'description' => 'Sample rate'),
      'last_touch'       => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Last touch'),
    ),
    'primary key' => array('sid'),
    'indexes' => array(
      'last_touch' => array('last_touch'),
      'listen_url' => array('listen_url'),
    ),
  );
  return $schema;
}

function yp_uninstall() {
  variable_del('yp_debug');
}

/**
 * Replace an index formerly used for cleanup of stale streams with 
 * an index used by yplog module.
 */
function yp_update_1() {
  $ret = array();
  db_drop_index($ret, 'yp_stream', 'ip_url');
  db_add_index($ret, 'yp_stream', 'listen_url', array('listen_url'));
  return $ret;
}

/**
 * Change bitrate to integer column. This is useful for sorting
 * but does mean that we will no longer track the quality of VBR
 * streams.
 */
function yp_update_2() {
  $ret = array();
  db_change_field($ret, 'yp_stream', 'bitrate', 'bitrate', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Bit rate'));
  return $ret;
}
