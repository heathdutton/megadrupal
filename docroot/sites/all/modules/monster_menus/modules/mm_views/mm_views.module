<?php

/**
 * @file
 * Views interface for Monster Menus
 */

include_once 'mm_views.features.inc';

/**
 * Implements hook_views_data().
 */
function mm_views_views_data() {
  $data = array();

  $data['node']['mm_edit_node'] = array(
    'field' => array(
      'title' => t('Edit link (MM)'),
      'help' => t('Provide a link to edit the node which is Monster Menus-aware.'),
      'handler' => 'mm_views_handler_field_node_link_edit',
    ),
  );

  // ----------------------------------------------------------------------
  // mm_tree table

  $data['mm_tree']['table']['group'] = t('MM');

  $data['mm_tree']['table']['base'] = array(
    'field' => 'mmtid',
    'title' => t('MM'),
    'help' => t('Monster Menus Tree'),
    'weight' => -10,
  );

  // Explain how this table joins to others.
  $data['mm_tree']['table']['join'] = array(
    'node' => array(
      'field' => 'mmtid',
      'left_table' => 'mm_node2tree',
      'left_field' => 'mmtid',
    ),
  );

  $data['mm_tree']['sort_idx'] = array(
    'title' => t('Page Weight (MM)'),
    'help' => t('The sort order of this page in relation to its siblings'),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // ----------------------------------------------------------------------
  // mm_tree_parents table

  $data['mm_tree_parents']['table']['group'] = t('MM');
  //Explain how this table joins to others.
  $data['mm_tree_parents']['table']['join']['node'] = array(
    'left_table' => 'mm_tree',
    'left_field' => 'mmtid',
    'field' => 'mmtid',
  );

  $data['mm_tree_parents']['mmtid'] = array(
    'title' => t('Monster Menus Tree ID'),
    'help' => t('Limit the view to this item and its children.'),
    'argument' => array(
      'handler' => 'mm_views_handler_argument_mmtid',
    ),
    'relationship' => array(
      'handler' => 'views_handler_relationship',
      'base' => 'mm_tree',
      'base field' => 'mmtid',
      'title' => t('MM Tree Item'),
      'label' => t('Get the items in the MM tree'),
    ),
  );

  // ----------------------------------------------------------------------
  // mm_recycle table

  $data['mm_recycle']['table']['group'] = t('MM');
  // Explain how this table joins to others.
  $data['mm_recycle']['table']['join'] = array(
    'node' => array(
      'field' => 'id',
      'left_table' => 'node',
      'left_field' => 'nid',
      'extra' => array(array('field' => 'type', 'value' => 'node')),
    ),
  );
  $data['mm_recycle']['table']['entity type'] = 'node';

  $data['mm_recycle']['recycled'] = array(
    'title' => t('Recycled'), // Appears in views UI.
    'help' => t('Whether or not the node is in a recycle bin.'),
    'filter' => array(
      'handler' => 'mm_views_handler_filter_recycled',
      'label' => t('Is recycled'),
    ),
  );

  // ----------------------------------------------------------------------
  // mm_node2tree table

  $data['mm_node2tree']['table']['group'] = t('MM');
  // Explain how this table joins to others.
  $data['mm_node2tree']['table']['join'] = array(
    'node' => array(
      'field' => 'nid',
      'left_field' => 'nid',
    ),
  );
  $data['mm_node2tree']['table']['entity type'] = 'node';

  $data['mm_node2tree']['mmtid'] = array(
    'title' => t('Nodes on MM page'), // Appears in views UI.
    'help' => t('Nodes on one or more pages in MM.'),
    'relationship' => array(
      'base' => 'node',
      'base field' => 'nid',
      'relationship field' => 'nid',
      'label' => t('Nodes on MM page(s)'),
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_many_to_one',
      'numeric' => TRUE,
    ),
  );

  // ----------------------------------------------------------------------
  // mm_node_schedule table

  $data['mm_node_schedule']['table']['group'] = t('MM');
  // Explain how this table joins to others.
  $data['mm_node_schedule']['table']['join'] = array(
    'node' => array(
      'field' => 'nid',
      'left_field' => 'nid',
    ),
  );

  $data['mm_node_schedule']['publish_on'] = array(
    'title' => t('Publish On (MM)'),
    'help' => t('When to start publishing a node.'),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'field' => array(
      'real field' => 'publish_on',
      'handler' => 'views_handler_field_date',
      'click sortable' => TRUE,
     ),
    'filter' => array(
      'handler' => 'views_handler_filter_date',
      'label' => t('Is Published'),
    ),
  );

  $data['mm_node_schedule']['unpublish_on'] = array(
    'title' => t('Unpublish On (MM)'),
    'help' => t('When to stop publishing a node.'),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'field' => array(
      'real field' => 'unpublish_on',
      'handler' => 'views_handler_field_date',
      'click sortable' => TRUE,
     ),
    'filter' => array(
      'handler' => 'views_handler_filter_date',
      'label' => t('Is Unpublished'),
    ),
  );

  // ----------------------------------------------------------------------
  // mm_node_reorder table

  $data['mm_node_reorder']['table']['group'] = t('MM');
  // Explain how this table joins to others.
  $data['mm_node_reorder']['table']['join'] = array(
    'node' => array(
      'field' => 'nid',
      'left_field' => 'nid',
      'left_table' => 'mm_node2tree',
    ),
  );

  $data['mm_node_reorder']['weight'] = array(
    'title' => t('Node Weight (MM)'),
    'help' => t('The MM sort order of this node'),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );

  // ----------------------------------------------------------------------
  // node_revision table

  // Define the base group of this table. Fields that don't
  // have a group defined will go into this field by default.
  $data['mm_node_revisions']['table']['group'] = t('Node revision');

  // For other base tables, explain how we join
  $data['mm_node_revisions']['table']['join'] = array(
    // Directly links to node table.
    'node' => array(
      'left_field' => 'nid',
      'field' => 'nid',
      'table' => 'node_revision',
    ),
  );
  $data['mm_node_revisions']['table']['entity type'] = 'node';
  $data['mm_node_revisions']['list_link'] = array(
    'field' => array(
      'title' => t('Revisions list link'),
      'help' => t('Provide a simple link to a node\'s revision list.'),
      'handler' => 'mm_views_handler_field_node_link_revisions',
    ),
  );

  return $data;
}
