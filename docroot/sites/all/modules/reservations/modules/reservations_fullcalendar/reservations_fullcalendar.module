<?php

/**
 * @file
 * reservations_fullcalendar functions
 */

/**
 * Implements hook_views_api().
 */
function reservations_fullcalendar_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'reservations_fullcalendar'),
  );
}

/**
 * Implements hook_preprocess_views_view().
 */
function reservations_fullcalendar_preprocess_views_view(&$variables) {
  if (isset($variables['name'])) {
    if ($variables['name'] == 'reservations_fullcalendar_user_reservations' or $variables['name'] == 'reservations_fullcalendar_node_reservations') {
      $output = '<div id="make-reservations-reservation">';
      $output .= l(t('Make a Reservation'), 'node/add/reservations-reservation');
      $output .= '</div>';
      $variables['footer'] .= $output;
    }
  }
}

/**
 * Implements hook_menu().
 */
function reservations_fullcalendar_menu() {
  $items = array();
  

  $items['admin/reservations/manage/calendar'] = array(
    'title' => 'Calendar',
    'description' => 'Calendar of Reservations ',
    'page callback' => 'reservations_fullcalendar_reservations',
    'page arguments' => array('reservations_fullcalendar_type'),
    'access arguments' => array('manage reservations'),
    'type' => MENU_NORMAL_ITEM,
  );
      
  $items['node/%node/reservations-calendar'] = array(
    'title' => 'Reservations',
    'description' => 'Takes node object and returns reservations',
    'page callback' => 'reservations_fullcalendar_node',
    'page arguments' => array(1),
    'access callback' => 'reservations_fullcalendar_display_reservations_tab',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 13,
  );

  return $items;
}

/**
 * returns TRUE or FALSE controlling display of Reservations Tab  
 * on Reservable content types
 */
function reservations_fullcalendar_display_reservations_tab($node) {

  if (isset($node->reservations_type_setting) && $node->reservations_type_setting <> 'disabled') {
    return TRUE;
  }
  
  return FALSE;
}

/**
 * Adds Tab to Reservable content types with list of related Reservation nodes 
 * if criteria from reservation_ui_display_reservations_tab returns TRUE
 */
function reservations_fullcalendar_node($node) {

  $args = array($node->nid);
  $view = views_get_view('reservations_fullcalendar_node');
  $output = $view->execute_display('default', $args);

  return $output;
}

/**
 * Displays all upcoming Reservations for a Type
 */
function reservations_fullcalendar_type($type = NULL) {

  $args = array($type);
  $view = views_get_view('reservations_fullcalendar_type');
  $output = $view->execute_display('default', $args);

  return $output;
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function reservations_fullcalendar_form_views_exposed_form_alter(&$form, $form_state, $form_id) {
  
  if ($form['#id'] == 'views-exposed-form-reservations-ui-node-res-default') {
    $form['#action'] = '/node/' . arg(1) . '/manage-reservations';
  } 
}

/**
 * Implements hook_fullcalendar_classes().
 * See: http://drupal.org/node/1237784
 */
function reservations_fullcalendar_fullcalendar_classes($entity) {
  $classes = array();
   
  $item = current($entity->reservations_reservation_items);
  $type = str_replace('_', '-', $item['type']);
  
  $classes = array(
    'colors-node-type-' . $type,
    NULL,
  );
  
   // Add a class for the date field being used.
  if (isset($entity->fullcalendar_date_field)) {
    $classes[] = "fc-event-field-$entity->fullcalendar_date_field";
  }
  
  return $classes;
}

