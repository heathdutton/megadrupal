<?php
/**
 * @file
 * Provides integration with the simpleuploads/imagepaste ckeditor plugins.
 * 
 * NOTE: This module does not include the plugins themselves. It just supports the use
 * of the plugin using either ckeditor module or wysiwyg (+ckeditor) module in Drupal 7.
 * 
 * @link http://ckeditor.com/addon/simpleuploads
 * @link http://ckeditor.com/addon/imagepaste
 * 
 * @author  Adam Kempler <akempler@gmail.com>
 * @author  Jānis Bebrītis <janis.bebritis@wunderkraut.com>
 * 
 */


/**
 * Implements hook_menu().
 */
function ckeditor_simpleuploads_menu() {
  $items = array();

  $items['admin/config/content/ckeditor-simpleuploads'] = array(
    'title' => 'CKEditor SimpleUploads settings',
    'description' => 'Configure the CKEditor SimpleUploads module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'ckeditor_simpleuploads_settings_form',
    ),
    'access arguments' => array('administer ckeditor_simpleuploads'),
    'file' => 'ckeditor_simpleuploads.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['simpleupload'] = array(
    'title' => 'Simpleuploads',
    'page callback' => '_ckeditor_simpleupload',
    'access arguments' => array('use ckeditor_simpleuploads'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function ckeditor_simpleuploads_permission() {
  return array(
    'administer ckeditor_simpleuploads' => array(
      'title' => t('Administer the CKEditor SimpleUploads module'),
    ),
    'use ckeditor_simpleuploads' => array(
      'title' => t('Use CKEditor SimpleUploads for file uploads'),
    ),
  );
}


/**
 * Provide integration with the ckeditor simpleuploads ckeditor plugin.
 * Menu callback.
 */
function _ckeditor_simpleupload() {

  if (isset($_FILES['upload'])) {

    // Get and clean the filename.
    $file_name = isset($_FILES['upload']['name']) ? $_FILES['upload']['name'] : '';
    $file_name = preg_replace('/[^\w\._]+/', '', $file_name);

    // Some tweaking because
    // file_save_upload() expects the $_FILES to be populated like this:
    $_FILES['files']['name']['upload'] = $file_name;
    $_FILES['files']['type']['upload'] = $_FILES['upload']['type'];
    $_FILES['files']['tmp_name']['upload'] = $_FILES['upload']['tmp_name'];
    $_FILES['files']['size']['upload'] = $_FILES['upload']['size'];
    $_FILES['files']['error']['upload'] = $_FILES['upload']['error'];

    $_FILES['files']['upload'] = $_FILES['upload'];

    // TODO currently assumes public files.
    $uploaddir = variable_get('ckeditor_simpleuploads_uploaddir', '');
    file_prepare_directory($uploaddir, FILE_CREATE_DIRECTORY);
    if (!empty($uploaddir)) $uploaddir .= DIRECTORY_SEPARATOR;
    $upload_uri = 'public://' . $uploaddir;
    if ($file = file_save_upload('upload', array('file_validate_is_image' => array()), $upload_uri, FILE_EXISTS_RENAME)) {
      $file->status = 1;
      // Update the file status into the database
      // (file_save_upload is temporary by default).
      $file = file_save($file);

      $imagestyle = variable_get('ckeditor_simpleuploads_imagestyle', 'none');
      $errors = file_validate_is_image($file);
      if(count($errors) < 1 && $imagestyle != 'none') {

        $styledef = image_style_load($imagestyle);
        if (count($styledef)) {
          $success = image_style_create_derivative(
              $styledef,
              $upload_uri . $file_name,
              image_style_path($imagestyle, $upload_uri . DIRECTORY_SEPARATOR . $file_name)
          );
        }
        // Used by the ckeditor_simpleuploads plugin.
        $url = image_style_url($imagestyle, $upload_uri . DIRECTORY_SEPARATOR . $file_name);
      }
      else {
        $import_path = file_stream_wrapper_get_instance_by_uri('public://')->getDirectoryPath() . DIRECTORY_SEPARATOR . $uploaddir;
        $to = $import_path . $file_name;
        $url = file_create_url($to);
      }

      $message = t('File was successfully uploaded.');
      // drupal_set_message('File successfully uploaded', 'status');

    }
    else {
      $message = 'Image upload failed for: ' . check_plain(file_stream_wrapper_get_instance_by_uri('public://')->getDirectoryPath() . DIRECTORY_SEPARATOR . $uploaddir . $file_name);
      // drupal_set_message('File upload was unsuccessful', 'error');
    }
  }

  // Required: Function number as indicated by CKEditor.
  $funcnum = $_GET['CKEditorFuncNum'];
  echo "<script type='text/javascript'>window.parent.CKEDITOR.tools.callFunction($funcnum, '$url', '$message')</script>";
  $GLOBALS['devel_shutdown'] = FALSE;
}


/**
 * Implements hook_page_build().
 */	
function ckeditor_simpleuploads_page_build(&$page) {

  if (arg(0) == 'node' && (arg(1) == 'add' || arg(2) == 'edit') && variable_get('ckeditor_simpleuploads_responsive', 0)) {
    drupal_add_js(drupal_get_path('module', 'ckeditor_simpleuploads') . '/js/simpleuploads.js');
  }
}

function ckeditor_simpleuploads_wysiwyg_plugin($editor, $version) {
  switch ($editor) {
    case 'ckeditor':
      return array(
        'simpleuploads' => array(
          'url' => 'http://ckeditor.com/addon/simpleuploads',
          // 'path' => drupal_get_path('module', 'simpleuploads').'/plugins/simpleuploads',
          'path' => libraries_get_path('simpleuploads'),
          'filename' => 'plugin.js',
          'buttons' => array(
            'imagepaste' => t('simpleuploads'),
          ),
          'load' => TRUE,
        ),
        'imagepaste' => array(
          'url' => 'http://ckeditor.com/addon/imagepaste',
          // 'path' => drupal_get_path('module', 'simpleuploads').'/plugins/imagepaste',
          'path' => libraries_get_path('imagepaste'),
          'filename' => 'plugin.js',
          'buttons' => array(
            'imagepaste' => t('imagepaste'),
          ),
          'load' => TRUE,
        ),
      );
    break;
  }
}

/* 
 * Implements hook_wysiwyg_editor_settings_alter
 * Add uploads URL to ckeditor config
 */
function ckeditor_simpleuploads_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor == 'ckeditor') {
    global $base_url;
    $settings['filebrowserImageUploadUrl'] = $base_url.'/simpleupload';
  }
}


/**
 * Implementing the Wysiwyg API
 * Register a directory containing Wysiwyg plugins.
 *
 * @param $type
 *   The type of objects being collected: either 'plugins' or 'editors'.
 * @return
 *   A sub-directory of the implementing module that contains the corresponding
 *   plugin files. This directory must only contain integration files for
 *   Wysiwyg module.
 */
function ckeditor_simpleuploads_wysiwyg_include_directory($type) {
  switch ($type) {
    case 'plugins':
      // You can just return $type, if you place your Wysiwyg plugins into a
      // sub-directory named 'plugins'.
      return $type;
  }
}


/**
 * Implements hook_libraries_info().
 */
function ckeditor_simpleuploads_libraries_info() {
  $libraries = array(
    'simpleuploads' => array(
      'name' => 'simpleuploads',
      'vendor url' => 'http://ckeditor.com/addon/simpleuploads',
      'download url' => 'http://alfonsoml.blogspot.com/p/simpleuploads-plugin-for-ckeditor.html',
      'version callback' => 'simpleuploads_library_version',
      'files' => array(
        'js' => array(
          'plugin.js',
        ),
      ),
    ),
    'imagepaste' => array(
      'name' => 'imagepaste',
      'vendor url' => 'http://ckeditor.com/addon/imagepaste',
      'download url' => 'http://ckeditor.com/addon/imagepaste',
      'version callback' => 'simpleuploads_library_version',
      'files' => array(
        'js' => array(
          'plugin.js',
        ),
      ),
    ),
  );
 
  return $libraries;
}

/**
* Short-circuit the version argument.
*/
function ckeditor_simpleuploads_library_version() { 
  return TRUE;
}