<?php
/**
 * @file
 * Adds a link to a Read more ajax.
 */

/**
 * Implements hook_menu().
 */
function read_more_ajax_menu() {
  $items = array();
  $items['more/node/%node'] = array(
    'title' => 'More node content',
    'page callback' => 'read_more_ajax_callback',
    'page arguments' => array(2),
    'delivery callback' => 'ajax_deliver',
    'access callback' => 'node_access',
    'access arguments' => array('view', 2),
  );

  $items['admin/config/content/ajax_readmore'] = array(
    'title' => 'AJAX readmore',
    'description' => 'AJAX readmore settings on site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('read_more_ajax_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'read_more.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_node_view_alter().
 */
function read_more_ajax_node_view_alter(&$build) {
  drupal_add_library('system', 'drupal.ajax');
  if (isset($build['links']['node']['#links']['node-readmore'])) {
    // Ajax enabled by default for all types of nodes,
    // It is edited in the admin interface.
    $check = read_more_ajax_node_type_active($build['#bundle']);
    if (!$check) {
      return FALSE;
    }
    $build['body']['#attached']['js'][] = drupal_get_path('module', 'read_more_ajax') . '/read_more_ajax.js';
    $build['body']['#attached']['library'][] = array('system', 'drupal.ajax');
    $link = $build['links']['node']['#links']['node-readmore']['href'];
    $build['links']['node']['#links']['node-readmore']['href'] = 'more/' . $link;
    $build['links']['node']['#links']['node-readmore']['attributes']['class'][] = 'use-ajax';
  }
}

/**
 * Returns TRUE if this node uses ajax readmore.
 *
 * @param string $node_type
 *   The node type.
 *
 * @return (boolean).
 *   If you do not selected what type (the default)
 *   or node corresponds to the desired settings.
 */
function read_more_ajax_node_type_active($node_type) {
  $types = array_filter(variable_get('read_more_ajax_node_types', array()));
  if (empty($types)) {
    return TRUE;
  }
  if (isset($types[$node_type])) {
    return TRUE;
  }
}

/**
 * Callback menu.
 *
 * @param object $node
 *   The node.
 *
 * @return (Array).
 *   Of registered drupal ajax commands
 */
function read_more_ajax_callback($node, $type) {
  $nid = $node->nid;
  read_more_add_stat($nid);
  $commands = array();
  $commands[] = ajax_command_replace('#node-' . $nid, _read_more_ajax_content($node));
  $commands[] = ajax_command_invoke('#node-' . $nid, 'addClass', array('more-load node-teaser'));
  if (variable_get('read_more_ajax_move_on', TRUE)) {
    $speed = variable_get('read_more_ajax_move_scroll_speed', 350);
    $commands[] = read_more_ajax_command_link_more_ajax($speed);
  }
  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Adds counter stat.
 */
function read_more_add_stat($nid) {
  if (variable_get('statistics_count_content_views', 0) && variable_get('statistics_count_content_views_ajax', 0)) {
    if (is_numeric($nid)) {
      db_merge('node_counter')
        ->key(array('nid' => $nid))
        ->fields(array(
          'daycount' => 1,
          'totalcount' => 1,
          'timestamp' => REQUEST_TIME,
        ))
        ->expression('daycount', 'daycount + 1')
        ->expression('totalcount', 'totalcount + 1')
        ->execute();
    }
  }
}

/**
 * Create node content.
 *
 * @param object $node
 *   The node.
 *
 * @return string $nodehtml
 *   The full body node.
 */
function _read_more_ajax_content($node) {
  $node_view = node_view($node, 'full');
  $nodehtml = drupal_render($node_view);
  return $nodehtml;
}

/**
 * Add custom ajax command.
 *
 * @param int $speed
 *   Speed scrolling.
 *
 * @return (Array).
 *   Name of the new registered ajax commands.
 *   Speed scrolling speed scroll transmitted in js.
 */
function read_more_ajax_command_link_more_ajax($speed = 350) {
  return array(
    'command' => 'read_more_ajax',
    'speed' => $speed,
  );
}
