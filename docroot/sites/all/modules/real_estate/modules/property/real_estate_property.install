<?php

/**
 * @file
 * Real Estate Property module installer.
 */

/**
 * Implements hook_enable().
 */
function real_estate_property_enable() {
  // Enable and configure the Property search block
  // hook_block_info_alter not used, because a administrator must have
  // possibility to change block settings later.
  $themes = list_themes();
  $admin_theme = variable_get('admin_theme');
  $default_theme = variable_get('theme_default');
  foreach ($themes as $theme) {
    // Not enable the block for a admin theme.
    if ($theme->status == 1 && $theme->name != $admin_theme) {
      db_merge('block')
        ->key(array(
            'module' => 'real_estate_property',
            'delta' => 're_exposed_filter_form',
            'theme' => $theme->name,
          )
        )
        ->fields(array(
            'region' => 'sidebar_first',
            'status' => BLOCK_CUSTOM_ENABLED,
            'weight' => -11,
            'visibility' => BLOCK_VISIBILITY_NOTLISTED,
            'pages' => '',
            'cache' => 4,
          )
        )
        ->execute();
    }
  }
}

/**
 * Implements hook_disable().
 */
function real_estate_property_disable() {
  // Disable the Property search block.
  db_update('block')
    ->fields(array(
        'status' => BLOCK_CUSTOM_DISABLED,
        'region' => BLOCK_REGION_NONE,
      )
    )
    ->condition('delta', 're_exposed_filter_form')
    ->execute();
}

/**
 * Implements hook_install().
 */
function real_estate_property_install() {

  // Clear a field cache for be found a newly created field type - addressfield.
  cache_clear_all('field_info_types:', 'cache_field', TRUE);

  // Create fields that will be used in an every real estate property bundle.
  field_create_field(array(
    'field_name' => 'property_address',
    'cardinality' => 1,
    'type' => 'addressfield',
    'module' => 'addressfield',
  ));

  field_create_field(array(
    'field_name' => 'property_geo_location',
    'cardinality' => 1,
    'type' => 'geolocation_latlng',
    'module' => 'geolocation',
  ));

  field_create_field(array(
    'field_name' => 'property_photo',
    'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    'type' => 'image',
  ));

  field_create_field(array(
    'field_name' => 'property_price',
    'cardinality' => 1,
    'type' => 'number_decimal',
  ));

  field_create_field(array(
    'field_name' => 'property_lot_size',
    'cardinality' => 1,
    'type' => 'number_decimal',
  ));

  // Create the Property type and few additional fields.
  $t = get_t();

  $name = 'property';

  $propertys = array(
    'type' => $name,
    'name' => $t('Property'),
    'base' => 'node_content',
    'title_label' => $t('Property Title'),
    'description' => $t('A basic property type.'),
    'custom' => TRUE,
  );

  $content_type = node_type_set_defaults($propertys);

  node_add_body_field($content_type, $t('Property Description'));

  node_type_save($content_type);

  // Turn off comments.
  variable_set('comment_property', '1');

  // Add fields Address, Photo and Price.
  _real_estate_property_type_add_few_fields($name);

  // Set permission to view the property for anonymous and logged users.
  /*  user_role_change_permissions(DRUPAL_ANONYMOUS_RID, array('view any property property' => TRUE));
    user_role_change_permissions(DRUPAL_AUTHENTICATED_RID, array('view any property property' => TRUE));*/

  // Add a MLS Number field.
  field_create_field(array(
    'field_name' => 'property_mls',
    'cardinality' => 1,
    'type' => 'text',
  ));
  field_create_instance(array(
    'field_name' => 'property_mls',
    'entity_type' => 'node',
    'label' => 'MLS Number',
    'bundle' => 'property',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'label' => 'inline',
    ),
  ));

  // Add a Type field.
  field_create_field(array(
    'field_name' => 'property_type',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        "1" => "Apartment",
        "2" => "Apartment Complex",
        "3" => "Beach Property",
        "4" => "Bed and Breakfast",
        "5" => "Bungalow",
        "6" => "Cabin / Cottage",
        "7" => "Castle",
        "8" => "Chateau",
        "9" => "Coastal Property",
        "10" => "Condo",
        "11" => "Condo Hotel",
        "12" => "Duplex",
        "13" => "Farm/Ranch",
        "14" => "Guest House",
        "15" => "Hotel",
        "16" => "House",
        "17" => "Inn / Lodge",
        "18" => "Island",
        "19" => "Loft",
        "20" => "Lots / Land",
        "21" => "Manufactured Home",
        "22" => "Marina",
        "23" => "Mobile Home",
        "24" => "Motel",
        "25" => "Office Space",
        "26" => "Plantation",
        "27" => "Resort",
        "28" => "Single Family Home",
        "29" => "Store Front",
        "30" => "Town House",
        "31" => "Villa",
        "32" => "Warehouse",
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_type',
    'entity_type' => 'node',
    'label' => 'Type',
    'bundle' => 'property',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Availability field.
  field_create_field(array(
    'field_name' => 'property_availability',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        '1' => 'Available',
        '2' => 'Rented',
        '3' => 'Sold',
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_availability',
    'entity_type' => 'node',
    'label' => 'Availability',
    'bundle' => 'property',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Condition field.
  field_create_field(array(
    'field_name' => 'property_condition',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        '1' => 'New',
        '2' => 'Used',
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_condition',
    'entity_type' => 'node',
    'label' => 'Condition',
    'bundle' => 'property',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Purpose field.
  field_create_field(array(
    'field_name' => 'property_purpose',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        "1" => "For Sale",
        "2" => "For Rent Daily",
        "3" => "For Rent Weekly",
        "4" => "For Rent Monthly",
        "6" => "For Rent Quarterly",
        "5" => "For Rent Yearly",
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_purpose',
    'entity_type' => 'node',
    'label' => 'Purpose',
    'bundle' => 'property',
    'required' => TRUE,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Bedrooms field.
  field_create_field(array(
    'field_name' => 'property_bedrooms',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        '1' => '1',
        '2' => '2',
        '3' => '3',
        '4' => '4',
        '5' => '5',
        '6' => '5+',
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_bedrooms',
    'entity_type' => 'node',
    'label' => 'Bedrooms',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'inline',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Bathrooms field.
  field_create_field(array(
    'field_name' => 'property_bathrooms',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        '1' => '1',
        '2' => '2',
        '3' => '3',
        '4' => '4',
        '5' => '5',
        '6' => '5+',
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_bathrooms',
    'entity_type' => 'node',
    'label' => 'Bathrooms',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'inline',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Floors / Stories field.
  field_create_field(array(
    'field_name' => 'property_floors',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        '1' => '1',
        '2' => '2',
        '3' => '3',
        '4' => '4',
        '5' => '5',
        '5+' => '5+',
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_floors',
    'entity_type' => 'node',
    'label' => 'Floors / Stories',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Rooms field.
  field_create_field(array(
    'field_name' => 'property_rooms',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        "0" => "No. room",
        "1" => "1",
        "2" => "2",
        "3" => "3",
        "4" => "4",
        "5" => "5",
        "6" => "6",
        "7" => "7",
        "8" => "8",
        "9" => "9",
        "10" => "10",
        "11" => "10+",
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_rooms',
    'entity_type' => 'node',
    'label' => 'Rooms',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Garages field.
  field_create_field(array(
    'field_name' => 'property_garages',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        "0" => "No. garages",
        "1" => "1",
        "2" => "2",
        "3" => "3",
        "4" => "4",
        "5" => "5",
        "6" => "5+",
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_garages',
    'entity_type' => 'node',
    'label' => 'Garages',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a Building Style field.
  field_create_field(array(
    'field_name' => 'property_style',
    'type' => 'list_text',
    'settings' => array(
      'allowed_values' => array(
        "1" => "Dome Style",
        "2" => "French Style",
        "3" => "Mediterranean Style",
        "4" => "Minimalist Style",
        "6" => "Modern Style",
        "5" => "Tropical Style",
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_style',
    'entity_type' => 'node',
    'label' => 'Building Style',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_select',
    ),
  ));

  // Add a SQ Footage field.
  field_create_field(array(
    'field_name' => 'property_sq_footage',
    'cardinality' => 1,
    'type' => 'number_decimal',
  ));
  field_create_instance(array(
    'field_name' => 'property_sq_footage',
    'entity_type' => 'node',
    'label' => 'SQ Footage',
    'bundle' => 'property',
    'required' => FALSE,
    'settings' => array(
      'suffix' => ' sq ft',
    ),
    'display' => array(
      'default' => array(
        'label' => 'inline',
      ),
    ),
    'widget' => array(
      'label' => 'inline',
    ),
  ));

  // Add a Exterior Finish field.
  field_create_field(array(
    'field_name' => 'property_exterior_finish',
    'cardinality' => 1,
    'type' => 'text',
  ));
  field_create_instance(array(
    'field_name' => 'property_exterior_finish',
    'entity_type' => 'node',
    'label' => 'Exterior Finish',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'label' => 'inline',
    ),
  ));

  // Add a Interior Finish field.
  field_create_field(array(
    'field_name' => 'property_interior_finish',
    'cardinality' => 1,
    'type' => 'text',
  ));
  field_create_instance(array(
    'field_name' => 'property_interior_finish',
    'entity_type' => 'node',
    'label' => 'Interior Finish',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'label' => 'inline',
    ),
  ));

  // Add a Year Built field.
  field_create_field(array(
    'field_name' => 'property_yearbuilt',
    'cardinality' => 1,
    'type' => 'number_integer',
  ));
  field_create_instance(array(
    'field_name' => 'property_yearbuilt',
    'entity_type' => 'node',
    'label' => 'Year Built',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'inline',
        'settings' => array(
          'thousand_separator' => '',
        ),
      ),
    ),
    'widget' => array(
      'label' => 'inline',
    ),
  ));

  // Add a Facilities field.
  field_create_field(array(
    'field_name' => 'property_facilities',
    'type' => 'list_integer',
    'cardinality' => '-1',
    'settings' => array(
      'allowed_values' => array(
        "1" => "Air conditioning",
        "2" => "Barbeque",
        "3" => "Beach towels provided",
        "4" => "Central heating",
        "5" => "Dishwasher",
        "6" => "DVD player",
        "7" => "Fully equipped kitchen",
        "8" => "Garden",
        "9" => "Internet access",
        "10" => "Jacuzzi",
        "11" => "Linen provided",
        "12" => "Microwave oven",
        "13" => "Music system",
        "14" => "Open fire",
        "15" => "Private swimming pool",
        "16" => "Room fans",
        "17" => "Shared swimming pool",
        "18" => "Telephone",
        "19" => "Tennis court",
        "20" => "Terrace / balcony",
        "21" => "Toaster",
        "22" => "Towels provided",
        "23" => "TV",
        "24" => "Washing machine",
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_facilities',
    'entity_type' => 'node',
    'label' => 'Facilities',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_buttons',
    ),
  ));

  // Add a Suitables field.
  field_create_field(array(
    'field_name' => 'property_suitables',
    'type' => 'list_integer',
    'cardinality' => '-1',
    'settings' => array(
      'allowed_values' => array(
        "1" => "Car not essential",
        "2" => "Car recommended",
        "3" => "Child friendly",
        "4" => "Close to airport",
        "5" => "Close to golf course",
        "6" => "Close to historic sites",
        "7" => "Close to shops",
        "8" => "Close to subway",
        "9" => "Close to train station",
        "10" => "Electronic security",
        "11" => "Highchair available",
        "12" => "House swap available",
        "13" => "Long term let available",
        "14" => "Maid service available",
        "15" => "Near to beach",
        "16" => "No security deposit",
        "17" => "Off road parking",
        "18" => "Panoramic views",
        "19" => "Pet friendly",
        "20" => "Secure complex",
        "21" => "Smoking permitted",
        "22" => "Wheelchair friendly",
      ),
    ),
  ));
  field_create_instance(array(
    'field_name' => 'property_suitables',
    'entity_type' => 'node',
    'label' => 'Suitables',
    'bundle' => 'property',
    'required' => FALSE,
    'display' => array(
      'default' => array(
        'label' => 'above',
      ),
    ),
    'widget' => array(
      'type' => 'options_buttons',
    ),
  ));
}

/**
 * Implements hook_uninstall().
 */
function real_estate_property_uninstall() {

  field_delete_field('property_address');
  field_delete_field('property_geo_location');
  field_delete_field('property_photo');
  field_delete_field('property_price');

  field_delete_field('property_mls');
  field_delete_field('property_type');
  field_delete_field('property_availability');
  field_delete_field('property_condition');
  field_delete_field('property_purpose');
  field_delete_field('property_lot_size');
  field_delete_field('property_bedrooms');
  field_delete_field('property_bathrooms');
  field_delete_field('property_floors');
  field_delete_field('property_rooms');
  field_delete_field('property_garages');
  field_delete_field('property_style');
  field_delete_field('property_sq_footage');
  field_delete_field('property_exterior_finish');
  field_delete_field('property_interior_finish');
  field_delete_field('property_yearbuilt');
  field_delete_field('property_facilities');
  field_delete_field('property_suitables');

  field_purge_batch(30);

  node_type_delete('property');

}
