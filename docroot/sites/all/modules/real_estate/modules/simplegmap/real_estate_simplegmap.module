<?php

/**
 * @file
 * Real Estate Simplegmap module.
 */

/**
 * Implements hook_block_info().
 */
function real_estate_simplegmap_block_info() {
  $blocks['real_estate_simplegmap'] = array(
    'info' => t('Real Estate Simple - Property GMap'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
    'weight' => 5,
  );
  $blocks['real_estate_simplegmap_main_gmap'] = array(
    'info' => t('Real Estate Simple - Main GMap'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
    'weight' => 5,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function real_estate_simplegmap_block_view($delta = '') {

  $block = array();

  switch ($delta) {
    case 'real_estate_simplegmap':
      $block['subject'] = 'gmap';
      $block['content'] = _real_estate_simplegmap_gmap();
      break;

    case 'real_estate_simplegmap_main_gmap':
      $block['subject'] = 'gmap';
      $block['content'] = _real_estate_simplegmap_main_gmap();
      break;
  }
  return $block;

}


/**
 * Helper function - showing gmap on the property page.
 *
 * @return string
 *   gmap for property page.
 */
function _real_estate_simplegmap_gmap() {

  $output = '';

  $property_id = (int) arg(1);
  $property = node_load($property_id);
  if (!$property) {
    return '';
  }

  $lat = $property->property_geo_location['und'][0]['lat'];
  $lng = $property->property_geo_location['und'][0]['lng'];

  $fields = field_get_items('node', $property, 'property_address', $property->language);
  if (empty($fields)) {
    return '';
  }

  foreach ($fields as $address_field) {
    $data_cleaned = array_filter($address_field);

    // For compatibility with older version - possible remove it later.
    // If not set lat and lng then geocode directly in js, by address.
    // A country not enough for determining a property place ;).
    if (isset($data_cleaned['country']) && count($data_cleaned) <= 1 && !$lat && !$lng) {
      continue;
    }
    $address = _real_estate_property_convert_address($address_field);

    $markers_house[0] = array(
      'title' => $property->title,
      'lat' => $lat,
      'lng' => $lng,
      'icon' => file_create_url(drupal_get_path('module', 'real_estate_simplegmap') . '/images/home-simple.png'),
      'opacity' => 0.8,
    );

    $gmap_array = array(
      'simplegmap' => array(
        'address' => $address,
        'zoom' => variable_get('real_estate_simplegmap_zoom', 14),
        'maptype' => variable_get('real_estate_simplegmap_type', 'roadmap'),
        'markers' => $markers_house,

        'canvas_settings' => array(
          'gmap_id' => variable_get('real_estate_simplegmap_id', 'map_canvas'),
          'gmap_width' => variable_get('real_estate_simplegmap_with', '680'),
          'gmap_height' => variable_get('real_estate_simplegmap_height', '300'),
        )
      )
    );

    $render = real_estate_simplegmap_generate_gmap($gmap_array);
    $output .= $render;
  }

  return $output;
}

/**
 * Helper function - for showing gmap on the front page.
 *
 * @return string
 *   gmap for front page.
 */
function _real_estate_simplegmap_main_gmap() {

  $markers_house = array();

  $view = views_get_view('real_estate_property_map');
  $view->execute('block_real_estate_map_main');
  $view->preview();

  $renderer = $view->style_plugin->row_plugin;
  foreach ($view->result as $index => $row) {
    $view->row_index = $index;

    $markers_house[] = array(
      'title' => $row->node_title,
      'lat' => $row->field_property_geo_location[0]['raw']['lat'],
      'lng' => $row->field_property_geo_location[0]['raw']['lng'],
      // Needed to be added some styles to div for remove the scroll bar form the infowindow.
      'content' => '<div style="overflow:hidden;line-height:1.35;min-width:230px;min-height:100px">' . $renderer->render($row) . '</div>',
      'icon' => file_create_url(drupal_get_path('module', 'real_estate_simplegmap') . '/images/home-simple.png'),
      'opacity' => 0.8,
    );

  }

  $gmap_array = array(
    'simplegmap' => array(
      'address' => '',
      'zoom' => variable_get('real_estate_simplegmap_zoom', 14),
      'maptype' => variable_get('real_estate_simplegmap_type', 'roadmap'),
      'markers' => $markers_house,
      'infoWindowOptions' => array(
        'maxWidth' => 270,
      ),

      'canvas_settings' => array(
        'gmap_id' => variable_get('real_estate_simplegmap_id', 'map_canvas'),
        'gmap_width' => variable_get('real_estate_simplegmap_with', '680'),
        'gmap_height' => variable_get('real_estate_simplegmap_height', '400'),
      )
    )
  );

  $output = real_estate_simplegmap_generate_gmap($gmap_array);

  return $output;
}

/**
 * Implements hook_theme().
 */
function real_estate_simplegmap_theme() {
  return array(
    'real_estate_simplegmap' => array(
      'variables' => array(
        'address' => NULL,
        'settings' => NULL,
      ),
      'template' => 'real_estate_simplegmap',
      'path' => drupal_get_path('module', 'real_estate_simplegmap') . '/theme',
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function real_estate_simplegmap_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'real_estate_simplegmap') . '/views',
  );
}

/**
 * Generate GMap.
 *
 * @param array $gmap_array
 *   array with data required for generation GMap.
 *
 * @return string
 *   gmap for front page.
 */
function real_estate_simplegmap_generate_gmap($gmap_array) {

  drupal_add_js('//maps.googleapis.com/maps/api/js?sensor=false', 'external', array('scope' => 'footer'));
  drupal_add_js('//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.1.2/src/markerclusterer_packed.js', 'external', array('scope' => 'footer'));
  drupal_add_js(drupal_get_path('module', 'real_estate_simplegmap') . '/real_estate_simplegmap.js', array('scope' => 'footer'));
  drupal_add_css(drupal_get_path('module', 'real_estate_simplegmap') . '/real_estate_simplegmap.css');

  drupal_add_js($gmap_array, 'setting');

  $output = theme('real_estate_simplegmap', array(
    'address' => $gmap_array['simplegmap']['address'],
    'settings' => $gmap_array['simplegmap']['canvas_settings'],
  ));

  return $output;

}
