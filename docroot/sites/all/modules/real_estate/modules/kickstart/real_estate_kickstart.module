<?php
/**
 * @file
 * Real Estate Kickstart module.
 */

/**
 * Add a demo home.
 *
 * @param int $homes
 *   Number of demo homes.
 */
function real_estate_kickstart_add_property($homes = 1) {

  for ($home = 1; $home <= $homes; $home++) {
    $node = new stdClass();
    $node->type = "property";
    $node->language = LANGUAGE_NONE;
    $node->uid = 1;
    $node->comment = 0;
    $node->promote = 0;
    $node->sticky = 0;
    node_object_prepare($node);

    // Property description.
    $node->body[$node->language][0]['value'] = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam egestas molestie neque, id eleifend orci viverra in. Donec consequat, neque ut condimentum suscipit, enim est tincidunt sapien, a laoreet tortor lectus ac diam. Etiam et lectus a metus tempus posuere nec nec nisi.';

    // Set default value for an address field.
    include_once drupal_get_path('module', 'addressfield') . '/addressfield.devel_generate.inc';
    $object_field = addressfield_default_values();
    $addresses = _addressfield_sample_addresses();
    $object_field = array_merge($object_field, $addresses[array_rand($addresses)]);
    unset($object_field['data']);
    $address = array_merge($object_field, $addresses[array_rand($addresses)]);
    $node->property_address[LANGUAGE_NONE][0] = $address;

    $demo_address = _real_estate_property_convert_address($address);

    if ($geo_location = _real_estate_kickstart_geocode($demo_address)) {
      $node->property_geo_location[LANGUAGE_NONE][0]['lat'] = $geo_location['lat'];
      $node->property_geo_location[LANGUAGE_NONE][0]['lng'] = $geo_location['lng'];
    }

    // Fill the node title with the address.
    $node->title = $demo_address;

    // Upload some photos.
    $photos = array(
      'foto1.jpg',
      'foto2.jpg',
      'foto3.jpg',
      'foto4.jpg',
      'foto5.jpg',
    );
    if ($home > 1) {
      shuffle($photos);
    }

    foreach ($photos as $photo) {
      // Stored file path.
      $file_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'real_estate_kickstart') . '/images/' . $photo;
      $image = file_get_contents($file_path);
      $file_image = file_save_data($image, file_default_scheme() . '://' . $photo, FILE_EXISTS_RENAME);
      $node->property_photo[LANGUAGE_NONE][] = (array) $file_image;
    }

    $node->property_price[LANGUAGE_NONE][0]['value'] = rand(10, 90) * 10000;
    $node->property_lot_size[LANGUAGE_NONE][0]['value'] = rand(1, 9) * 1000;

    $node->property_mls[LANGUAGE_NONE][0]['value'] = rand(1000000, 9999999);
    $node->property_type[LANGUAGE_NONE][0]['value'] = 16;
    $node->property_availability[LANGUAGE_NONE][0]['value'] = 1;
    $node->property_condition[LANGUAGE_NONE][0]['value'] = 1;
    $node->property_purpose[LANGUAGE_NONE][0]['value'] = 1;
    $node->property_bedrooms[LANGUAGE_NONE][0]['value'] = rand(1, 5);
    $node->property_bathrooms[LANGUAGE_NONE][0]['value'] = rand(1, 5);
    $node->property_floors[LANGUAGE_NONE][0]['value'] = rand(1, 3);
    $node->property_rooms[LANGUAGE_NONE][0]['value'] = rand(3, 7);
    $node->property_garages[LANGUAGE_NONE][0]['value'] = rand(1, 3);
    $node->property_style[LANGUAGE_NONE][0]['value'] = '1';
    $node->property_sq_footage[LANGUAGE_NONE][0]['value'] = rand(2, 9) * 100;
    $node->property_exterior_finish[LANGUAGE_NONE][0]['value'] = '';
    $node->property_interior_finish[LANGUAGE_NONE][0]['value'] = '';
    $node->property_yearbuilt[LANGUAGE_NONE][0]['value'] = date("Y") - 20 + rand(0, 20);

    for ($i = 0; $i <= rand(4, 7); $i++) {
      $node->property_facilities[LANGUAGE_NONE][$i]['value'] = rand(1, 14);
    }

    for ($i = 0; $i <= rand(4, 7); $i++) {
      $node->property_suitables[LANGUAGE_NONE][$i]['value'] = rand(1, 18);
    }

    $node = node_submit($node);

    // Used in the uninstall hook for removing that content.
    $node->created = 1;

    node_save($node);
  }
}

/**
 * Internal function - Geocode address.
 *
 * @param string $address
 *   - address
 *
 * @return array
 *   - lat & lnd.
 */
function _real_estate_kickstart_geocode($address) {

  // Open the Google Maps API and send it the above url containing user entered address
  // Google Maps will return a JSON file.
  $gmaps_api = "http://maps.googleapis.com/maps/api/geocode/json?address=" . str_replace(" ", "+", urlencode($address)) . "&sensor=false";
  if ($results = @file_get_contents($gmaps_api)) {
    // Convert the json file to PHP array.
    $response = json_decode($results, TRUE);
    // If the user entered address matched a Google Maps API address, it will return 'OK' in the status field.
    if ($response["status"] == "OK") {
      // If okay, find the lat and lng values and assign them to local array.
      $geo = array(
        "lat" => $response["results"][0]["geometry"]["location"]["lat"],
        "lng" => $response["results"][0]["geometry"]["location"]["lng"],
      );
      return $geo;
    }
    return FALSE;
  }
}
