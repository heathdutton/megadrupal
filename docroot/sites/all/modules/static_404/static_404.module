<?php

// $Id$

/**
 * hook_menu - register a callback for 404 substitution
 */
function static_404_menu() {
  $menu = array();
  $menu['static_404'] = array(
    'title' => 'View static 404 page',
    'page callback' => 'static_404_return',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $menu;
}
 
/**
 * Allow outside modules to affect generated page.
 * implement hook_static_404 to add in js or css
 */
function static_404_preprocess_node(&$variables) {
  if (!empty($variables['uri']) && $variables['uri']['path'] === variable_get('static_404', FALSE)) {
    module_invoke_all('static_404');  
  }
} 

/**
 * hook_form_FORM_ID_alter
 */
function static_404_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
  $form['error_page']['static_404'] = $form['error_page']['site_404'];
  $form['error_page']['static_404']['#default_value'] = variable_get('static_404', '');
  $form['error_page']['site_404']['#type'] = 'hidden';
  $form['error_page']['site_404']['#default_value'] = 'static_404';
  $form['error_page']['generate'] = array(
   '#type' => 'button',
   '#value' => t('Generate static 404 Page'),
   '#name' => 'generate',
   '#executes_submit_callback' => TRUE,
  );
  array_unshift($form['#submit'], 'static_404_generate_submit');
}

/**
 * Submit callback for the site_information form which writes the 404 page.
 */
function static_404_generate_submit($form_id, $form_values) {
  if (!empty($form_values['input']['generate'])) {
    // Generate the page
    $genOkay = static_404_generate();

    // Redirect to the same page we're on
    if(!$genOkay)
    {
      drupal_set_message(t("Failed to generate the static 404 page. " 
        . "Does the node you're specifying exist?"), 'error');
    } 
    else if($form_values['input']['static_404'] === '') {
      drupal_set_message(t("Creating a default 404 page since you haven't "
        . "specified a Drupal page for me to copy. Provide a value for the "
        . "default 404 page for a custom static 404."), 'warning');
    } 
    else 
    {
      drupal_set_message(t('The static 404 page has been saved to ' . $genOkay->uri . '.'), 
                         'status');
    }
    drupal_goto('admin/config/system/site-information');
  }
}

/**
 * if a static 404 exists, include it and exit
 */
function static_404_return() {
  $prefix = variable_get('static_404_prefix', '');
  $prefix = (empty($prefix)) ? $prefix : '/' . $prefix;

  if (file_exists('public://404' . $prefix . '/index.php')) {
    include_once 'public://404' . $prefix . '/index.php';
    drupal_exit();
  }
  else {
    return t('Not Found');
  }
}

/**
 * generate the real 404 page and save it statically.
 */
function static_404_generate() {

  $genOkay = FALSE; // did the page generate okay?

  $protocol = (isset($_SERVER["HTTPS"])) ? "https://" : "http://";

  // Can't rely on global $base_url since it may be blank
  $base_url = $protocol . $_SERVER["HTTP_HOST"];

  $prefix = variable_get('static_404_prefix', '');
  $path = drupal_get_normal_path(variable_get('static_404', ''));

  if ($path) {
    $base_prefix = (empty($prefix)) ? $base_url : $base_url . '/' . $prefix;

    $result = drupal_http_request($base_prefix . '/' . $path, array('timeout' => 10));
    if (!empty($result->error)) {
      $result = drupal_http_request($base_url . '/' . $path, array('timeout' => 10));
    }

    if (!empty($result)) {
      if ($result->code == 200 && !empty($result->data)) {
        $prefix = (empty($prefix)) ? $prefix : '/' . $prefix;
        if (!file_exists('public://404' . $prefix)) {
          drupal_mkdir('public://404' . $prefix, 0777);
        }

        $directory = 'public://404' . $prefix;
        $genOkay = file_save_data($result->data, $directory . '/index.php', FILE_EXISTS_REPLACE);

        drupal_chmod($directory . '/index.php', 0664);
      }
    }
  }

  if(!empty($genOkay) && get_class($genOkay) === "stdClass")
    return $genOkay;
  else
    return FALSE;
}
