<?php

define ('D500PX_HOST', 'http://500px.com');
define ('D500PX_API', 'https://api.500px.com');
define ('D500PX_NSFW', 0);


/**
 * Implements hook_menu().
 */
function d500px_menu() {

  $items['d500px/oauth'] = array(
    'title' => '500px OAuth',
    'access callback' => TRUE,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('d500px_oauth_callback'),
    'type' => MENU_CALLBACK,
    'file' => 'd500px.pages.inc',
  );


  $items['admin/config/services/d500px'] = array(
    'title' => '500px Integration Settings',
    'description' => '500px settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('d500px_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'd500px.pages.inc',
  );
  
    
  $items['admin/config/services/d500px/default'] = array(
    'title' => '500px Integration Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
    
  return $items;  
}



function d500px_connection() {
  /* Build D500px object with client credentials. */
  $d500px_consumer_key = variable_get('d500px_consumer_key', '');
  $d500px_consumer_secret = variable_get('d500px_consumer_secret', '');
  
  $connection = new D500px($d500px_consumer_key, $d500px_consumer_secret);
  
  return $connection;
}



function d500px_photo_page_url($photo_array) {
  return variable_get('d500px_host', D500PX_HOST) ."/photo/". $photo_array['id'];
}



function d500px_img($photo_array, $size = 1, $nsfw = 0, $attributes = array()) {

  $d500px_photo_sizes_array = d500px_photo_get_sizes();
  $d500px_photo_size_array = $d500px_photo_sizes_array[$size];
  
  $attributes['height'] = $d500px_photo_size_array['height']; 
  $attributes['width'] = $d500px_photo_size_array['width'];

  $attributes['class'][] = 'd500px_photo_size_'. $size;
  $attributes['class'][] = 'd500px_photo';
  $attributes['class'] = implode(' ', $attributes['class']);

  // if NSFW is set to false and image is SFW
  if ($nsfw == 0 and $photo_array['nsfw'] == TRUE) {
    $img_url = drupal_get_path('module', 'd500px') . '/images/nsfw.png'; // TODO: this can be done better  
  }
  else {
    $img_url = d500px_photo_img($photo_array, $size);        
  }
  
  $title = $photo_array['name'];
  
  return theme('image', array('path' => $img_url, 'alt' => $title, 'title' => $title, 'attributes' => $attributes, 'getsize' => FALSE));
}




function d500px_photo_get_sizes(){
  
  $d500px_photo_sizes_array = array(
    0 => array('height' => 70, 'width' => 70),
    1 => array('height' => 140, 'width' => 140),
    2 => array('height' => 280, 'width' => 280),
    3 => array('height' => 600, 'width' => 900),
  );
  
  return $d500px_photo_sizes_array;
}




function d500px_photo_img($photo_array, $size) {
  return $photo_array['image_url'][$size];  
}



/**
 * Implements hook_theme().
 */
function d500px_theme() {
  return array(
    'd500px_photo' => array(
      'variables' => array(),
    ),
    'd500px_photos' => array(
      'variables' => array(),
    ),
  );
}




function theme_d500px_photo($variables) {

  if (empty($variables['photo_array'])) {
    return t('No Image');
  }

  $size = $variables['size'];
  $photo_array = $variables['photo_array'];
  $nsfw = $variables['nsfw'];

  $img = d500px_img($photo_array, $size, $nsfw);
  
  $photo_url = d500px_photo_page_url($photo_array);
  $title = $photo_array['name'];
  
  return l($img, $photo_url, array('attributes' => array('title' => $title, 'target' => '_blank'), 'absolute' => TRUE, 'html' => TRUE)); 
}




function theme_d500px_photos($variables) {
  if (empty($variables['photos_array'])) {
    return t('No Images');
  }
  
  $photos_array = $variables['photos_array'];
  $size = $variables['size'];
  $nsfw = $variables['nsfw'];
  
  $photos_themed = '';
  
  foreach ($photos_array as $photo_array) {
    $photos_themed .= theme('d500px_photo', array('photo_array' => $photo_array, 'size' => $size, 'nsfw' => $nsfw));
  }
  
  return $photos_themed;
}



function d500px_available_sort_options() {
  $sort_options_array = array(
                              'created_at' => t('Time of upload, most recent first'),
                              'rating' => t('Rating, highest rated first'),
                              'times_viewed' => t('View count, most viewed first'),
                              'votes_count' => t('Votes count, most voted first'),
                              'favorites_count' => t('Favorites count, most favorited first'),
                              'comments_count' => t('Comments count, most commented first'),
                              'taken_at' => t('Metadata date, most recent first'),
                              );
                            
  return $sort_options_array;                              
}



function d500px_available_categories() {
  $categories_array = array(
                            '- All -' => t('- All -'),
                            'Abstract' => t('Abstract'),
                            'Animals' => t('Animals'),
                            'Black and White' => t('Black and White'),
                            'Celebrities' => t('Celebrities'),
                            'City and Architecture' => t('City and Architecture'),
                            'Commercial' => t('Commercial'),
                            'Concert' => t('Concert'),
                            'Family' => t('Family'),
                            'Fashion' => t('Fashion'),
                            'Film' => t('Film'),
                            'Fine Art' => t('Fine Art'),
                            'Food' => t('Food'),
                            'Journalism' => t('Journalism'),
                            'Landscapes' => t('Landscapes'),
                            'Macro' => t('Macro'),
                            'Nature' => t('Nature'),
                            'Nude' => t('Nude'),
                            'People' => t('People'),
                            'Performing Arts' => t('Performing Arts'),
                            'Sport' => t('Sport'),
                            'Still Life' => t('Still Life'),
                            'Street' => t('Street'),
                            'Transporation' => t('Transporation'),
                            'Travel' => t('Travel'),
                            'Underwater' => t('Underwater'),
                            'Urban Exploration' => t('Urban Exploration'),                                    
                            'Wedding' => t('Wedding'),    
                            'Uncategorized' => t('Uncategorized'),
                            );
                            
  return $categories_array;                              
}



function d500px_available_features() {
  $features_array = array(
                          "popular" => t("Popular"),
                          "upcoming" => t("Upcoming"),
                          "editors" => t("Editors' Choice"),
                          "fresh_today" => t("Fresh Today"),
                          "fresh_yesterday" => t("Fresh Yesterday"),
                          "fresh_week" => t("Fresh This Week"),
                          "user" => t("User"),
                         );
                         
  return $features_array;                         
}
