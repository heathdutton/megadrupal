<?php

/**
 * @file
 * Provides brief information about site.
 */

/**
 * Implements hook_help().
 */
function siteinfo_help($path, $arg) {
  switch ($path) {
    case 'admin/help#siteinfo':
      $output = '';
      $output .= '<p>' . t('Siteinfo is a module which display site related information like:- about site, drupal, php, database, etc. This module extends Drupal to provide brief inforamtion about website. That information helpful to site admin. Site admin got site information in one page. 
') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function siteinfo_menu() {
  $items['admin/siteinfo'] = array(
    'title' => 'Site Information',
    'description' => 'Brief information about site',
    'page callback' => 'siteinfo_details',
    'access arguments' => array('access site information'),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function siteinfo_permission() {
  return array(
    'access site information' => array(
      'title' => t('Access site information'),
      'description' => t('View site information.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function siteinfo_block_info() {
  $blocks['siteinfo'] = array(
    // The name of the block.
    'info' => t('Site Information'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function siteinfo_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'siteinfo':
      $block['subject'] = t('Site Information');
      $block['content'] = siteinfo_details();
      break;
  }
  return $block;
}

/**
 * Implements siteinfo_details function().
 *
 * @return string
 *   An HTML string representing the themed output for site information.
 */
function siteinfo_details() {
  global $databases;
  $db_name = $databases['default']['default']['database'];
  $db_driver = $databases['default']['default']['driver'];
  $php_version = phpversion();
  $roles = user_roles(TRUE);
  $count_role = count($roles);

  // Access site variables.
  $site_name = variable_get('site_name');
  $default_theme = variable_get('theme_default');
  $admin_theme = variable_get('admin_theme');
  $file_temporary_path = variable_get('file_temporary_path');
  $install_time = variable_get('install_time');
  $cron_last_run = variable_get('cron_last');
  $clean_url = variable_get('clean_url');

  $install_date = format_date($install_time, 'dateonly');
  $cron_run = format_date($cron_last_run, 'dateonly');
  $cln_url = isset($clean_url) ? "Yes" : "No";

  // Get list of enabled module.
  $query = db_select('users', 'u');
  $query->fields('u', array('name'));
  $query->condition('status', 1, '=');
  // Filter by active user.
  $user_name = $query->execute()->fetchAllKeyed(0, 0);
  $count_user = count($user_name);

  // Get list of content type.
  $cont_type = node_type_get_types();
  $count_cont_type = count($cont_type);

  // Get list of enabled module.
  $mod_list = module_list();
  $count_mod = count($mod_list);
  $drupal_version = VERSION;

  $header = array(array('data' => "Site Details", 'colspan' => 2));

  $rows['site_name'] = array(t("Site name"), $site_name);
  $rows['drupal_version'] = array(t("Drupal version"), $drupal_version);
  $rows['install_date'] = array(t("Install date"), $install_date);
  $rows['cron_run'] = array(t("Last cron run"), $cron_run);
  $rows['cln_url'] = array(t("Clean url"), $cln_url);
  $rows['file_temporary_path'] = array(t("File temporary path"), $file_temporary_path);
  $rows['php_version'] = array(t("Php version"), $php_version);
  $rows['db_driver'] = array(t("Database driver"), $db_driver);
  $rows['db_name'] = array(t("Database name"), $db_name);
  $rows['default_theme'] = array(t("Default theme"), $default_theme);
  $rows['admin_theme'] = array(t("Admin theme"), $admin_theme);
  $rows['count_role'] = array(t("Roles"), $count_role);
  $rows['count_user'] = array(t("Active users"), $count_user);
  $rows['count_cont_type'] = array(t("Content type"), $count_cont_type);
  $rows['count_mod'] = array(t("Enables module"), $count_mod);

  $output = theme('table', array('header' => $header, 'rows' => $rows));

  $lim = 0;
  // Iteration for content-type.
  foreach ($cont_type as $key => $value) {
    $row_col[$lim][0] = t("@cont_name", array('@cont_name' => $value->name));

    $query = new EntityFieldQuery();
    // Grab nodes.
    $query->entityCondition('entity_type', 'node')
    // Filter by content type.
      ->entityCondition('bundle', $key)
    // Filter by published.
      ->propertyCondition('status', 1)
    // Count.
      ->count();
    $result = $query->execute();
    $row_col[$lim][1] = t("@cout_node", array('@cout_node' => $result));
    $lim++;
  }

  $lim = 0;
  // Iteration for roles.
  foreach ($roles as $key) {
    if (!isset($row_col[$lim][0])) {
      $row_col[$lim][1] = "";
    }
    $row_col[$lim][2] = t("@role_name", array('@role_name' => $key));
    $lim++;
  }

  $lim = 0;
  // Iteration for modules.
  foreach ($mod_list as $key) {
    if (!isset($row_col[$lim][0])) {
      $row_col[$lim][0] = "";
    }
    if (!isset($row_col[$lim][1])) {
      $row_col[$lim][1] = "";
    }
    if (!isset($row_col[$lim][2])) {
      $row_col[$lim][2] = "";
    }
    $row_col[$lim][3] = t("@mod_name", array('@mod_name' => $key));
    $lim++;
  }

  $lim = 0;
  // Iteration for users.
  foreach ($user_name as $key => $value) {

    if (!isset($row_col[$lim][0])) {
      $row_col[$lim][0] = "";
    }
    if (!isset($row_col[$lim][1])) {
      $row_col[$lim][1] = "";
    }
    if (!isset($row_col[$lim][2])) {
      $row_col[$lim][2] = "";
    }
    if (!isset($row_col[$lim][3])) {
      $row_col[$lim][3] = "";
    }

    $row_col[$lim][4] = t("@usr_name", array('@usr_name' => $value));

    $lim++;
  }

  $lim = 0;
  foreach ($row_col as $key => $value) {
    if (!isset($row_col[$lim][4])) {
      $row_col[$lim][4] = "";
    }
    $lim++;
  }

  $per_page = 10;
  // Initialize the pager.
  $current_page = pager_default_initialize(count($row_col), $per_page);
  // Split list into page sized chunks.
  $chunks = array_chunk($row_col, $per_page, TRUE);
  $header = array(t('Content Type'), t('Node'), t('Roles'), t('Modules'),
    t('Active users'));
  $output .= theme('table', array('header' => $header, 'rows' => $chunks[$current_page]));
  // Show the pager.
  $output .= theme('pager', array('quantity', count($row_col)));
  return $output;
}
