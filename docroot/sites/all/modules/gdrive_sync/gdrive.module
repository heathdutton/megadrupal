<?php

// known problems
// 1 Maximum number of element. Rewrite to NextToken
// 2 Incompartable with Overlay module. Try Javascript 
// 3 widget now is selectbox. Need to rewrite to popup window.
// 4 no automatical synchro just by menu

$path = drupal_get_path('module', 'gdrive');
require_once ($path . "/model/gdrive.db.inc");

function gdrive_menu() {
  $items['admin/config/services/gdrive'] = array(
    'title' => 'Gdrive',
    'description' => 'Integrate with google drive',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gdrive_admin_settings'),
    'access callback' => TRUE,
    'file' => 'includes/gdrive.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/services/gdrive/settings'] = array(
    'title' => 'Gdrive account',
    'description' => 'Integrate with google drive',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gdrive_admin_settings'),
    'access callback' => TRUE,
    'file' => 'includes/gdrive.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/services/gdrive/synchro'] = array(
    'title' => 'Gdrive synchro',
    'description' => 'Integrate with google drive',
    'page callback' => 'gdrive_gdrive_admin_settings_synhronize',
    'access callback' => TRUE,
    'file' => 'includes/gdrive.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function gdrive_field_schema() {
  $info = array(
    'gid' => array(
      'description' => 'Google drive file id',
      'type' => 'int',
      'not null' => TRUE,
    )
  );

  return array('columns' => $info);
}

function gdrive_field_info() {
  $field['gdrive_field'] = array(
    'label' => t('Google drive'),
    'description' => t('Google drive file entry'),
    'settings' => array(),
    'instance_settings' => array(),
    'default_widget' => 'gdrive_standart',
    'default_formatter' => 'gdrive_default',
  );

  return $field;
}

function gdrive_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
//at this point we will not validate anything, but will revisit
}

function gdrive_field_is_empty($item, $field) {
  return empty($item['gid']);
}

function gdrive_field_widget_info() {
  return array(
    'gdrive_standart' => array(
      'label' => t('Gdrive field'),
      'field types' => array('gdrive_field'),
    ),
  );
}

function gdrive_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $files = gdrive_files_list();
  array_unshift($files, "--None--");
  $element['gid'] = array(
    '#type' => 'select',
    '#title' => 'Select file',
    '#options' => $files,
    '#default_value' => (isset($items[$delta]['gid'])) ? $items[$delta]['gid'] : 0,
  );
  return $element;
}

function gdrive_field_formatter_info() {
  return array(
    'gdrive_default' => array(
      'label' => t('Google drive file'),
      'field types' => array('gdrive_field'),
    ),
  );
}

function gdrive_field_formatter_view($object_type, $object, $field, $instance, $langcode, $items, $display) {
  if (!isset($items[0])) {
    return;
  }
  $element = array();
  $fid = $items[0]['gid'];
  $file = gdrive_get_file_info($fid);
  $file = $file[$items[0]['gid']];
  $element[] = array('#markup' => l($file->title,$file->url));
  return $element;
}

function gdrive_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'gdrive') . '/includes',
  );
}
