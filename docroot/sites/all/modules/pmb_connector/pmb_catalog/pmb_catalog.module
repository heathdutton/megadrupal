<?php

/**
 * @file
 * PMB catalog module.
 */

require_once(drupal_get_path('module', 'pmb') . '/pmb.class_data.inc');

/**
 * Implements hook_permission().
 */
function pmb_catalog_permission() {
  return array(
    'PMB browse' => array(
      'title' => t('Browse catalogs'),
    ),
    'PMB browse serials' => array(
      'title' => t('Browse serials'),
    ),
    'PMB browse shelves' => array(
      'title' => t('Browse virtual shelves'),
    ),
    'PMB browse thesauri' => array(
      'title' => t('Browse thesaurus'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function pmb_catalog_menu() {
  $items = array();

  $items['catalog'] = array(
    'title' => 'Catalog',
    'description' => 'Catalog',
    'page callback' => 'pmb_catalog_locations',
    'access arguments' => array('PMB browse'),
    'file' => 'pmb_catalog.locations.inc',
    'menu_name' => pmb_variable_get('pmb_menu_attach_catalog'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['catalog/location'] = array(
    'title' => 'Locations',
    'description' => 'Browse the catalog - Locations',
    'page callback' => 'pmb_catalog_location',
    'access arguments' => array('PMB browse'),
    'file' => 'pmb_catalog.locations.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 5,
  );
  $items['catalog/serial'] = array(
    'title' => 'Serials',
    'description' => 'Browse the catalog - Serials',
    'page callback' => 'pmb_catalog_serials',
    'access arguments' => array('PMB browse serials'),
    'file' => 'pmb_catalog.serials.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 6,
  );
  $items['catalog/shelf'] = array(
    'title' => 'Shelves',
    'description' => 'Browse the catalog - Shelves',
    'page callback' => 'pmb_catalog_shelf',
    'access arguments' => array('PMB browse shelves'),
    'file' => 'pmb_catalog.shelves.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 7,
  );
  $items['catalog/thesaurus'] = array(
    'title' => 'Thesaurus',
    'description' => 'Browse the catalog - Thesaurus',
    'page callback' => 'pmb_catalog_thesauri',
    'access arguments' => array('PMB browse thesauri'),
    'file' => 'pmb_catalog.thesauri.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 8,
  );

  $items['catalog/section'] = array(
    'title' => 'Browse the catalog',
    'description' => 'Browse the catalog',
    'page callback' => 'pmb_catalog_section',
    'access arguments' => array('PMB browse'),
    'file' => 'pmb_catalog.locations.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'tab_parent' => 'catalog/location',
  );
  $items['catalog/category'] = array(
    'title' => 'Browse the catalog',
    'description' => 'Browse the catalog',
    'page callback' => 'pmb_catalog_category',
    'access arguments' => array('PMB browse thesauri'),
    'file' => 'pmb_catalog.thesauri.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'tab_parent' => 'catalog/thesaurus',
  );

  $items['catalog/ajax/block/shelf'] = array(
    'page callback' => 'pmb_catalog_block_shelf_get_page',
    'access arguments' => array('PMB browse shelves'),
    'file' => 'pmb_catalog.ajax.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function pmb_catalog_theme() {
  return array(
    'pmb_catalog_locations' => array(
      'variables' => array(
        'locations_and_sections' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_location' => array(
      'variables' => array(
        'location' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_section' => array(
      'variables' => array(
        'location' => NULL,
        'section' => NULL,
        'notices' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_shelves' => array(
      'variables' => array(
        'shelves' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_shelf' => array(
      'variables' => array(
        'shelf' => NULL,
        'notices' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_thesauri' => array(
      'variables' => array(
        'thesauri' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_category' => array(
      'variables' => array(
        'category' => NULL,
        'notices' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_serials' => array(
      'variables' => array(
        'serials' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
    'pmb_catalog_block_shelf' => array(
      'variables' => array(
        'shelf' => NULL,
        'notices' => NULL,
        'parameters' => NULL,
      ),
      'file' => 'pmb_catalog.templates.inc',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Extends PMB admin configuration with catalog display settings.
 *
 * @ingroup forms
 * @see pmb_admin_form()
 * @see pmb_catalog_admin_form()
 */
function pmb_catalog_form_pmb_admin_form_alter(&$form, &$form_state) {
  require_once(drupal_get_path('module', 'pmb_catalog') . '/pmb_catalog.admin.inc');
  $form['tab'] = array_merge_recursive($form['tab'], pmb_catalog_admin_form());
}

/**
 * Implements hook_block_info().
 */
function pmb_catalog_block_info() {
  global $user;

  $blocks = array();

  $pmb_data = new pmb_data();
  $pmb_data->set_reader($user);

  $shelves = $pmb_data->get_shelves();
  if (count($shelves)) {
    foreach ($shelves as $ashelf) {
      $blocks['shelf_' . $ashelf->id] = array(
        'info' => t('Shelf: @item', array('@item' => $ashelf->name)),
        'cache' => DRUPAL_CACHE_PER_USER,
      );
    }
  }

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function pmb_catalog_block_view($delta) {
  global $user;

  if (!user_access('PMB browse shelves', $user)) {
    $block = array(
      'subject' => t('Browse virtual shelves'),
      'content' => t("You don't have the permissions to browse virtual shelves."),
    );
    return $block;
  }

  $shelf_id = drupal_substr($delta, 6);
  if (!$shelf_id)
    return;

  $pmb_data = new pmb_data();
  $pmb_data->set_reader($user);

  $shelves = $pmb_data->get_shelves();

  $shelf = array();
  foreach ($shelves as $ashelf) {
    if ($ashelf->id == $shelf_id) {
      $shelf = $ashelf;
      break;
    }
  }

  if (!isset($shelf) || empty($shelf)) {
    return t('Shelf not found!');
  }

  // Display block for the first time, without ajax.
  $notices_ids = $pmb_data->get_shelf_notices_ids($shelf_id);
  if (!count($notices_ids)) {
    $notices_ids = array();
    $notices_pages = array();
    $notices = array();
  }
  // Display only first page [0]. Next ones are provided by ajax.
  else {
    $notice_count = pmb_variable_get('pmb_noticeperpage_block_shelf');
    $notices_pages = array_chunk($notices_ids, $notice_count);
    $notices = $pmb_data->get_notices($notices_pages[0]);
  }

  $block = array(
    'subject' => t('Shelf: @item', array('@item' => $shelf->name)),
    'content' => theme('pmb_catalog_block_shelf', array(
      'shelf' => $shelf,
      'notices' => $notices,
      'parameters' => array(
        'page_count' => count($notices_pages),
      ),
    )),
  );

  require_once(drupal_get_path('module', 'pmb_catalog') . '/pmb_catalog.ajax.inc');
  drupal_add_js(drupal_get_path('module', 'pmb') . '/js/pmb.block_pager.js');

  return $block;
}
