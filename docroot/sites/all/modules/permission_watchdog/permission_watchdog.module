<?php

/**
 * @file
 * Alter forms to log changes to role permissions.
 */

/**
 * Implements hook_menu().
 */
function permission_watchdog_menu() {
  $items['admin/config/people/permission_watchdog'] = array(
    'title' => 'Permission watchdog',
    'description' => 'Logs changes to role permissions.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('permission_watchdog_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer site configuration'),
    'file' => 'permission_watchdog.admin.inc',
  );

  $items['admin/reports/permission_watchdog'] = array(
    'title' => 'Permission change report',
    'description' => 'Display a log of changes to role permissions.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('permission_watchdog_report'),
    'access arguments' => array('access site reports'),
    'file' => 'permission_watchdog.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_FORM_ID_alter().
 */
function permission_watchdog_form_user_admin_permissions_alter(&$form, $form_state, $form_id) {
  $form['role_permissions'] = array(
    '#type' => 'value',
    '#value' => array(),
  );
  foreach ($form['role_names'] as $rid => $role) {
    if (strpos($rid, '#') !== FALSE) {
      continue;
    }
    $role_permissions = user_role_permissions(array($rid => $rid));
    $form['role_permissions']['#value'][$rid] = $role_permissions[$rid];
  }
  $form['#submit'][] = 'permission_watchdog_form_user_admin_permissions_alter_submit';
}

/**
 * Callback form added by hook_form_FORM_ID_alter().
 */
function permission_watchdog_form_user_admin_permissions_alter_submit($form, &$form_state) {

  $roles = variable_get('permission_watchdog_roles', array());
  if (empty($roles)) {
    return;
  }

  foreach ($form['role_permissions']['#value'] as $rid => $role_permissions) {

    if ((isset($roles[$rid]) && $roles[$rid]) || $roles['all']) {
      $data = array();
      foreach ($form_state['values'][$rid] as $permission => $value) {
        if (!isset($role_permissions[$permission])) {
          if ($value) {
            $data[$permission] = 1;
          }
        }
        elseif (!$role_permissions[$permission] && $value) {
          $data[$permission] = 1;
        }
        elseif ($role_permissions[$permission] && !$value) {
          $data[$permission] = 0;
        }
      }
      if (count($data)) {
        db_insert('permission_watchdog')
          ->fields(array('rid' => $rid,
                         'stamp' => time(),
                         'uid' => $GLOBALS['user']->uid,
                         'data' => serialize($data)))
          ->execute();
      }
    }
  }
}
