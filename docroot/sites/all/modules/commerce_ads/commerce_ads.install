<?php

/**
 * Implements hook_install().
 */
function commerce_ads_install() {
  $ads_fields = array(
    'ads_product_fields' => array(
      'Picture' => array(
        'values' => t('An URI of the image of the specified picture. (Max: 250 chars'),
        'description' => t('The picture of the specified product.'),
        'required' => FALSE,
      ),
      'Size (Physical)' => array(
        'values' => t('- Height (in millimeters)<br />- Length (in millimeters)<br />- Width (in millimeters)<br />- Volume (in millimeters3<br />- Weight (in grams)'),
        'description' => t('Dimensions of the product.'),
        'required' => FALSE,
      ),
      'Size (Weight)' => array(
        'values' => t('- Weight (in grams)'),
        'description' => t('Weight of the product.'),
        'required' => FALSE,
      ),
      'TranslationEntity' => array(
        'values' => t('- Label: Description of the product (Max : 100 chars)<br />- Language: ISO code of the language (Max : 2 chars)'),
        'description' => t("A description of the product. If no mapping is selected, the product's <em>title</em> property will be used."),
        'required' => FALSE,
      ),
      'EanEntity' => array(
        'values' => t('- EAN13 (Max : 32 chars)'),
        'description' => t("The EAN13 code of the product. If no mapping is selected, the product's <em>SKU</em> property will be used."),
        'required' => FALSE,
      ),
    ),
    'ads_order_fields' => array(
      'commerce_order' => array(
        'InvoiceUrl' => array(
          'values' => t('Any URI. (Max : 100 chars)'),
          'description' => t('The invoice URI'),
          'required' => FALSE,
        ),
        'Gift' => array(
          'values' => t('True/False'),
          'description' => t('Determine if the order is a gift'),
          'required' => FALSE,
        ),
        'Blocked' => array(
          'values' => t('True/False'),
          'description' => t('Determine if the order is blocked'),
          'required' => FALSE,
        ),
        'GiftMessage' => array(
          'values' => t('A short text description (Max: 150 chars)'),
          'description' => t('This message would be appear on the delivery slip.'),
          'required' => FALSE,
        ),
      ),
      'customer_profile' => array(
        'FirstName' => array(
          'description' => t('The first name of the receiver (Max: 40 chars)'),
          'required' => TRUE,
        ),
        'LastName' => array(
          'description' => t('The last name of the receiver (Max: 40 chars)'),
          'required' => TRUE,
        ),
        'CompanyName' => array(
          'description' => t('The company name of the receiver (Max: 30 chars)'),
          'required' => FALSE,
        ),
        'AddressLine1' => array(
          'description' => t('Address field 1 for the delivery (Max: 50 chars)'),
          'required' => TRUE,
        ),
        'AddressLine2' => array(
          'description' => t('Address field 2 for the delivery (Max: 50 chars)'),
          'required' => FALSE,
        ),
        'AddressLine3' => array(
          'description' => t('Address field 3 for the delivery (Max: 50 chars)'),
          'required' => FALSE,
        ),
        'PostalCode' => array(
          'description' => t('Zip code for the delivery (Max: 10 chars)'),
          'required' => TRUE,
        ),
        'City' => array(
          'description' => t('City for the delivery (Max: 40 chars)'),
          'required' => TRUE,
        ),
        'State' => array(
          'description' => t('State for the delivery (Max : 40 chars)'),
          'required' => FALSE,
        ),
        'Country' => array(
          'description' => t('ISO Code of the Country for the delivery'),
          'required' => TRUE,
        ),
        'MobilePhone' => array(
          'description' => t('Mobile phone number of the receiver (Max: 40 chars)'),
          'required' => FALSE,
        ),
        'Phone' => array(
          'description' => t('Phone number of the receiver (Max : 40 chars)'),
          'required' => TRUE,
        ),
        'Comment' => array(
          'description' => t('A comment about receiverâ€™s address. (Max: 40 chars)'),
          'required' => FALSE,
        ),
        'Floor' => array(
          'description' => t('Floor of the receiver information (Max : 40 chars)'),
          'required' => FALSE,
        ),
        'Apartment' => array(
          'description' => t('Apartment of the receiver information (Max: 40 chars)'),
          'required' => FALSE,
        ),
        'Building' => array(
          'description' => t('Building of the receiver information (Max : 40 chars)'),
          'required' => FALSE,
        ),
        'Digicode' => array(
          'description' => t('Door access code (Max : 40 chars)'),
          'required' => FALSE,
        ),
        'PickupCode' => array(
          'description' => t('Code of the relay point if carrier need it (Max: 10 chars)'),
          'required' => FALSE,
        ),
        'PickupCountry' => array(
          'description' => t('Code of the relay point country if carrier need it (Max: 2 chars)'),
          'required' => FALSE,
        ),
      )
    ),
    'ads_order_send_next_run' => 0,
    'ads_order_update_next_run' => 0,
    'ads_product_send_next_run' => 3600,
    'ads_product_stock_sync_next_run' => 3600,
  );
  variable_set('commerce_ads_ws', $ads_fields);

  db_add_field('commerce_order', 'commerce_ads_order_needs_update', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => -1,
    'description' => 'A boolean in order to know if we have to update the order or not',
  ));
  db_add_field('commerce_product', 'commerce_ads_product_needs_update', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'A boolean in order to know if we have to update the product or not',
  ));

  $field_ads_tracking_url = field_create_field(array(
    'active' => '1',
    'cardinality' => '1',
    'deleted' => '0',
    'entity_types' => array(),
    'field_name' => 'field_ads_tracking_url',
    'field_permissions' => array(
      'type' => '1',
    ),
    'foreign keys' => array(
      'format' => array(
        'columns' => array(
          'format' => 'format',
        ),
        'table' => 'filter_format',
      ),
    ),
    'indexes' => array(
      'format' => array(
        0 => 'format',
      ),
    ),
    'locked' => '0',
    'module' => 'text',
    'settings' => array(
      'max_length' => '2048',
    ),
    'translatable' => '0',
    'type' => 'text',
  ));
  field_create_instance(array(
    'bundle' => 'commerce_order',
    'default_value' => NULL,
    'deleted' => '0',
    'description' => '',
    'display' => array(
      'customer' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 11,
      ),
    ),
    'entity_type' => 'commerce_order',
    'field_name' => 'field_ads_tracking_url',
    'label' => 'Tracking url',
    'required' => 0,
    'settings' => array(
      'text_processing' => '0',
      'user_field_privacy' => FALSE,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => '60',
      ),
      'type' => 'text_textfield',
      'weight' => '11',
    ),
  ));
}

/**
 * Implements hook_uninstall().
 */
function commerce_ads_uninstall() {
  variable_del('commerce_ads_ws');
  db_drop_field('commerce_order', 'commerce_ads_order_needs_update');
  db_drop_field('commerce_product', 'commerce_ads_product_needs_update');
  field_delete_field('field_ads_tracking_url');
}

/**
 * Implements hook_schema_alter().
 */
function commerce_ads_schema_alter(&$schema) {
  $schema['commerce_order']['fields']['commerce_ads_order_needs_update'] = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => ORDER_NOTHING_TO_DO,
    'description' => 'A boolean in order to know if we have to update the order or not',
  );
  $schema['commerce_product']['fields']['commerce_ads_product_needs_update'] = array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => PRODUCT_TO_BE_CREATED,
    'description' => 'A boolean in order to know if we have to update the product or not',
  );
}
