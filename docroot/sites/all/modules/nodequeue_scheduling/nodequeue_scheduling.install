<?php

/**
 * @file
 * Foundation nodequeue scheduling install file
 */

/**
 * Implement hook_uninstall().
 */
function nodequeue_scheduling_uninstall() {
  variable_del('nodequeue_scheduling_include');
}

/**
 * Implements hook_schema().
 */
function nodequeue_scheduling_schema() {
  return array(
    'nodequeue_scheduling' => array(
      'description' => 'The main table to hold the nodequeue scheduler data.',
      'fields' => array(
        'nid' => array(
          'description' => 'The foreign key to node.nid',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'qid' => array(
          'description' => 'The nodequeue queue id',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'publish_on' => array(
          'description' => 'The UNIX UTC timestamp when to schedule for publication within the nodequeue',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'unpublish_on' => array(
          'description' => 'The UNIX UTC timestamp when to schedule for un-publication within the nodequeue',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
    ),
  );
}

/**
 * Add unpublish_on column to database table for nodequeue unscheduling.
 */
function nodequeue_scheduling_update_7001() {
  $spec = array(
    'description' => 'The UNIX UTC timestamp when to schedule for un-publication within the nodequeue',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('nodequeue_scheduling', 'unpublish_on', $spec);
}

/**
 * Convert existing configurations based on qid to new format based on queue name for better staging capabilities.
 */
function nodequeue_scheduling_update_7002() {
  $config = variable_get('nodequeue_scheduling_include', array());

  foreach($config as $key => $entry) {
    $queue = nodequeue_load($entry);
    if (!empty($queue->name)) {
      $config[$key] = $queue->name;
    }
  }
  variable_set('nodequeue_scheduling_include', $config);
}
