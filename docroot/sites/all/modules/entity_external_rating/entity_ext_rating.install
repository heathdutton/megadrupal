<?php

/**
 * @file
 *  Install file for the module.
 */

/**
 * Implements hook_schema().
 *
 */
function entity_ext_rating_schema() {
  $schema['entity_ext_rating_sources'] = array(
    'description' => 'Stores the metadata about source plugins.',
    'fields' => array(
      'name' => array(
        'description' => 'The primary identifier for a plugin.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'config' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of settings.',
      ),
    ),
    'primary key' => array('name'),
  );
  $schema['entity_ext_rating_values'] = array(
      'description' => 'Stores the rating values for each source.',
      'fields' => array(
        'rating_id' => array(
          'description' => 'The id of the rating.',
          'type' => 'varchar',
          'length' => 64,
          'not null',
          'default' => '',
        ),
        'entity_id' => array(
          'description' => 'The entity id',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'entity_type' => array(
          'description' => 'The type of the entity (for example: node, user)',
          'type' => 'varchar',
          'length' => 64,
          'not null' => TRUE,
          'default' => '',
        ),
        'source' => array(
          'description' => 'The name of the plugin.',
          'type' => 'varchar',
          'length' => 64,
          'not null' => TRUE,
          'default' => '',
        ),
        'rating' => array(
          'type' => 'float',
          'description' => 'The rating value.',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('rating_id', 'entity_id', 'entity_type', 'source'),
      'indexes' => array(
        'rating_id' => array('rating_id'),
      )
  );
  $schema['entity_ext_rating_total'] = array(
      'description' => 'Stores the total rating values.',
      'fields' => array(
        'rating_id' => array(
          'description' => 'The unique id of the rating.',
          'type' => 'varchar',
          'length' => 64,
          'not null',
          'default' => '',
        ),
        'entity_id' => array(
          'description' => 'The entity id',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'entity_type' => array(
          'description' => 'The type of the entity (for example: node, user)',
          'type' => 'varchar',
          'length' => 64,
          'not null' => TRUE,
          'default' => '',
        ),
        'rating' => array(
          'type' => 'float',
          'description' => 'The rating value.',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('rating_id'),
      'indexes' => array(
          'entity_id_type' => array('entity_id', 'entity_type'),
      )
  );
  $schema['entity_ext_rating_queue'] = array(
      'description' => 'Stores the rating ids that have to be checked for rating. It is not actually a queue, because the ids are not removed unless they are expired.',
      'fields' => array(
        'rating_id' => array(
          'description' => 'The unique id of the rating.',
          'type' => 'varchar',
          'length' => 64,
          'not null',
          'default' => '',
        ),
        'entity_id' => array(
          'description' => 'The entity id.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'entity_type' => array(
          'description' => 'The type of the entity (for example: node, user)',
          'type' => 'varchar',
          'length' => 64,
          'not null' => TRUE,
          'default' => '',
        ),
        'params' => array(
          'type' => 'blob',
          'not null' => FALSE,
          'serialize' => TRUE,
          'description' => 'A serialized array of parameters that will be used to get the rating.',
        ),
        'expire' => array(
          'type' => 'int',
          'description' => 'A timestamp when the row in the queue will expire.',
          'size' => 'big',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('rating_id'),
      'indexes' => array(
        'entity_id_type' => array('entity_id', 'entity_type'),
      )
  );
  return $schema;
}