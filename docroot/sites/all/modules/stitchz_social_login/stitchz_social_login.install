<?php
/**
 * @file
 * Table schema for Stitchz Social Login Module.
 */

/**
 * Implements hook_schema().
 */
function stitchz_social_login_schema() {
  $schema['stitchz_social_login_config_settings'] = array(
    'description' => 'Stitchz Login module configuration settings',
    'fields' => array(
      'slcsid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'stitchz login primary key',
      ),
      'apikey' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '50',
        'description' => 'the Stitchz Login application key',
      ),
      'appsecret' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '150',
        'description' => 'the Stitchz Login application secret',
      ),
      'domain' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '160',
        'description' => 'the Stitchz Login subdomain',
      ),
      'redirecturl' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '255',
        'description' => 'the URL where Stitchz will send the authetication response',
      ),
      'version' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 2,
        'size' => 'tiny',
        'description' => 'the version call',
      ),
      'enable_curl' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
        'description' => 'Whether or not to use the curl library to make HTTP calls',
      ),
      'display_location' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
        'size' => 'tiny',
        'description' => 'the placement of the login links in relation to the standard login form',
      ),
      'syncd_providers' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'medium',
        'description' => 'A JSON representation of the list of providers as defined at Stitchz.net',
      ),
      'scope' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'default' => 'Basic',
        'length' => '50',
        'description' => 'The Stitchz Social Login application type',
      ),
      'theme_version' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
        'size' => 'tiny',
        'description' => 'the version of the theme to display the social login icons in',
      ),
      'enable_user_login_screen' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'A boolean value indicating whether or not to show social login icons on the user_login form',
      ),
      'enable_user_login_block_screen' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'A boolean value indicating whether or not to show social login icons on the user_login_block form',
      ),
      'enable_user_register_form_screen' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'A boolean value indicating whether or not to show social login icons on the user_registration form',
      ),
      'enable_comment_form_screen' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'A boolean value indicating whether or not to show social login icons on the comment_form form',
      ),
      'notes' => array(
        'type' => 'varchar',
        'default' => '',
        'not null' => FALSE,
        'length' => '255',
        'description' => 'A short description or note displayed under the social login icons',
      ),
    ),
    'primary key' => array('slcsid'),
    'indexes' => array(
      'apikey' => array('apikey'),
    ),
  );

  $schema['stitchz_social_login_identities'] = array(
    'description' => 'links social identity to a valid user account',
    'fields' => array(
      'sliid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'stitchz login primary key',
      ),
      'identity' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '255',
        'description' => 'social login identity as defined by the identity provider',
      ),
      'provider' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '50',
        'description' => 'name of identity provider who authorized the user',
      ),
      'authmapid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'foreign key to authmap table',
      ),
      // AccessToken length for OAuth2 can be very long, the column must be able
      // to handle the length otherwise it will fail.
      'accessToken' => array(
        'type' => 'varchar',
        'length' => '2000',
        'description' => 'Stitchz Login security credentials provided during version 2 of the login api',
      ),
      // RefreshToken length for OAuth2 can be very long, the column must be
      // able to handle the length otherwise it will fail.
      'refreshToken' => array(
        'type' => 'varchar',
        'length' => '2000',
        'description' => 'Security credentials used to exchange for a fresh valid access token',
      ),
      'accessTokenExpirationUtc' => array(
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'pgsql_type' => 'timestamp',
        'sqlite_type' => 'VARCHAR',
        'sqlsvr_type' => 'smalldatetime',
        'description' => 'UTC date and time the access token expires',
      ),
      'accessTokenIssueDateUtc' => array(
        'type' => 'datetime',
        'mysql_type' => 'datetime',
        'pgsql_type' => 'timestamp',
        'sqlite_type' => 'VARCHAR',
        'sqlsvr_type' => 'smalldatetime',
        'description' => 'UTC date and time the access token was minted',
      ),
      'callback' => array(
        'type' => 'varchar',
        'length' => '1000',
        'description' => 'Fully qualified URL of the website sending the OAuth request',
      ),
    ),
    'primary key' => array('sliid'),
    'indexes' => array(
      'identity' => array('identity'),
    ),
    'foreign key' => array(
      'authmapid' => array(
        'table' => 'authmap',
        'columns' => array(
          'aid' => 'aid',
        ),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function stitchz_social_login_uninstall() {

  db_delete('authmap')
    ->condition('module', 'stitchz_social_login')
    ->execute();

}
