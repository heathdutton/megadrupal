<?php

/**
 * @file
 * Contains the Menu pages, permissions and page callbacks.
 */

// Include function.inc and sage.search.inc files.
module_load_include('inc', 'sage', 'includes/sage.functions');
module_load_include('inc', 'sage', 'includes/sage.search');
module_load_include('inc', 'sage', 'includes/sage.admin.settings');
module_load_include('inc', 'sage', 'includes/sage.xmlstrtoarray');

/**
 * Implements hook_permission().
 */
function sage_permission() {
  $permissions = array(
    'administer sage integration' => array(
      'title' => t('Administer SAGE integration'),
      'description' => t('Change settings for SAGE integration module.'),
    ),
    'view sage products' => array(
      'title' => t('View SAGE products'),
      'description' => t('View products from SAGE API.'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_menu().
 */
function sage_menu() {
  $items = array();

  // SAGE settings page.
  $items['admin/config/services/sage'] = array(
    'title' => 'SAGE settings',
    'description' => 'Change settings for SAGE integration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sage_admin_settings'),
    'access arguments' => array('administer sage integration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/services/sage/settings'] = array(
    'title' => 'SAGE settings',
    'description' => 'Change settings for SAGE integration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sage_admin_settings'),
    'access arguments' => array('administer sage integration'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/services/sage/reports-categories'] = array(
    'title' => 'SAGE Categories Reports',
    'description' => 'Reports for SAGE Categories',
    'page callback' => '_sage_get_reports_categories',
    'access arguments' => array('administer sage integration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );
  $items['admin/config/services/sage/reports-themes'] = array(
    'title' => 'SAGE Themes Reports',
    'description' => 'Reports for SAGE Themes',
    'page callback' => '_sage_get_reports_themes',
    'access arguments' => array('administer sage integration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 7,
  );
  $items['sage/product/%'] = array(
    'page callback' => '_sage_render_product',
    'page arguments' => array(2),
    'access arguments' => array('view sage products'),
    'type' => MENU_CALLBACK,
  );
  $items['sage/order/product/%'] = array(
    'page callback' => '_sage_order_product',
    'page arguments' => array(3),
    'access arguments' => array('view sage products'),
    'type' => MENU_CALLBACK,
  );
  $items['sage/quote/product/%'] = array(
    'page callback' => '_sage_quote_product',
    'page arguments' => array(3),
    'access arguments' => array('view sage products'),
    'type' => MENU_CALLBACK,
  );
  $items['sage/category/%'] = array(
    'page callback' => '_sage_render_category',
    'page arguments' => array(2),
    'access arguments' => array('view sage products'),
    'type' => MENU_CALLBACK,
  );
  $items['sage/search'] = array(
    'title' => 'Product Search',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sage_form_search'),
    'access arguments' => array('view sage products'),
    'type' => MENU_CALLBACK,
  );
  $items['sage/search/results'] = array(
    'title' => 'Search results',
    'page callback' => '_sage_render_search_results',
    'access arguments' => array('view sage products'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Page callback for SAGE Category.
 *
 * @return array
 *   The Category results in php array.
 */
function _sage_render_category($category_id) {
  $option = array(
    'category' => $category_id,
  );
  // Set page title.
  drupal_set_title(sage_category_title($category_id));
  // Return markup.
  return _sage_render_search_results($option);
}

/**
 * Page callback for SAGE Product.
 *
 * @return array
 *   The Product results in php array.
 */
function _sage_render_product($product_id) {
  // Get Product object.
  $product = sage_load_product($product_id);
  // Get Product display.
  $display = sage_display_product($product);

  $content['sage_product'] = array(
    '#type' => 'markup',
    '#markup' => $display,
    '#prefix' => "<div class='product-wrapper'>",
    '#suffix' => '</div>',
  );
  $title = sage_clean_text($product['PrName']);
  drupal_set_title($title);
  return $content;
}

/**
 * SAGE callback to render the order page.
 *
 * @param int $product_id
 *   The SAGE Product ID.
 *
 * @return string
 *   The SAGE Order page markup within an iframe.
 */
function _sage_order_product($product_id) {
  // Get Product object.
  $product = sage_load_product($product_id);

  $url = "http://www.promoplace.com/ws/ws.dll/ModCart?Add=1&DistID=";
  $url .= variable_get('sage_api_auth_acctid', '');
  $url .= "&Rec=" . $product_id . "&Type=Order";

  $content['sage_order_product'] = array(
    '#type' => 'markup',
    '#markup' => '<iframe> src=' . $url . ' style="height:100%; width:100%; border:none"></iframe>',
    '#prefix' => "<div class='order-product-wrapper'>",
    '#suffix' => '</div>',
  );
  $title = sage_clean_text("Order" . $product['PrName']);
  drupal_set_title($title);

  return $content;
}

/**
 * SAGE callback to render the quote page.
 *
 * @param int $product_id
 *   The SAGE Product ID.
 *
 * @return string
 *   The SAGE Quote page markup within an iframe.
 */
function _sage_quote_product($product_id) {
  // Get Product object.
  $product = sage_load_product($product_id);

  $url = "http://www.promoplace.com/ws/ws.dll/ModCart?Add=1&DistID=";
  $url .= variable_get('sage_api_auth_acctid', '');
  $url .= "&Rec=" . $product_id . "&Type=Quote";

  $content['sage_order_product'] = array(
    '#type' => 'markup',
    '#markup' => '<iframe src=' . $url . ' style="height:100%; width:100%; border:none"></iframe>',
    '#prefix' => "<div class='order-product-wrapper'>",
    '#suffix' => '</div>',
  );

  $title = sage_clean_text("Get quote for" . $product['PrName']);
  drupal_set_title($title);

  return $content;
}

/**
 * Page callback for SAGE (Advanced) Search.
 *
 * @param array $option
 *   The options to pass on the SAGE API.
 *
 * @return array
 *   Markup to display the results.
 */
function _sage_render_search_results($option = array()) {

  // Merge options default + url query + user input.
  $option = array_merge(sage_default_search_option(), drupal_get_query_parameters(), $option);

  // Get all post data.
  $post = sage_load_search($option);

  // SAGE may find only one Product (eg when we use Item Number search).
  // In this case it returns the Product instead of the ordinary Search results.
  if (isset($post['SearchResults']['Items']['Item']['ProductID'])) {
    // Got to product page directly.
    drupal_goto("sage/product/" . $post['SearchResults']['Items']['Item']['ProductID']);
  }

  $pager_options = _sage_search_pager($post);
  $pager = _sage_display_pager_option($pager_options);

  // Get Products list results.
  $results = sage_display_search_results($post);
  if (empty($results)) {
    return $content['sage_no_results'] = t("No results found.");
  }

  $content['sage_sorting'] = array(
    '#type' => 'markup',
    '#markup' => _sage_display_sort_option(),
    '#prefix' => "<ul id='sort-options-wrapper' class='inline-block'>",
    '#suffix' => '</ul>',
  );
  $content['sage_maxrecs'] = array(
    '#type' => 'markup',
    '#markup' => _sage_display_items_per_page_option(),
    '#prefix' => "<ul id='maxrecs-options-wrapper' class='inline-block'>",
    '#suffix' => '</ul>',
  );
  $content['sage_pager'] = array(
    '#type' => 'markup',
    '#markup' => $pager,
    '#prefix' => "<div id='pager-options-wrapper' class='inline-block'>",
    '#suffix' => '</div>',
  );
  $content['sage_search'] = array(
    '#type' => 'markup',
    '#markup' => $results,
    '#prefix' => "<div id='search-results-wrapper' class='clearfix'>",
    '#suffix' => '</div>',
  );

  return $content;
}

/**
 * Reports for SAGE Categories.
 *
 * @return string
 *   Table of results.
 */
function _sage_get_reports_categories() {
  $category_reports = sage_reports_results('categories');

  $category_table = theme('table', array(
  'header' => $category_reports['header'],
  'rows' => $category_reports['rows'],
  'attributes' => array('class' => array('full-table')),
  // 'sticky' => FALSE,.
  ));

  $content['sage_reports_category'] = array(
    '#type' => 'markup',
    '#markup' => $category_table,
    '#prefix' => "<div class='report-results-wrapper'>",
    '#suffix' => '</div>',
  );
  drupal_set_title(t('SAGE Reports - Categories'));

  return $content;
}

/**
 * Reports for SAGE Themes.
 *
 * @return string
 *   Table of results.
 */
function _sage_get_reports_themes() {
  $theme_reports = sage_reports_results('themes');

  $theme_table = theme('table', array(
  'header' => $theme_reports['header'],
  'rows' => $theme_reports['rows'],
  'attributes' => array('class' => array('full-table')),
  // 'sticky' => FALSE,.
  ));

  $content['sage_reports_themes'] = array(
    '#type' => 'markup',
    '#markup' => $theme_table,
    '#prefix' => "<div class='report-results-wrapper'>",
    '#suffix' => '</div>',
  );
  drupal_set_title(t('SAGE Reports - Themes'));
  return $content;
}
