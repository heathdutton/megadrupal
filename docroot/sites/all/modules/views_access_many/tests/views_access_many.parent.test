<?php


/**
 * Does the repetetive stuff needed with each test.
 * All our WebTestCases actually sub class this class.
 */
class ViewsAccessManyParentTestCase extends DrupalWebTestCase {

  protected $user_access_all_views;

  // Omitting the getInfo method is enough to be
  // ignored by simpletest
  //public static function getInfo() {
  //}

  public function setUp() {

    // Modules our test depends on
    parent::setUp(
      'views',
      'views_ui',
      'views_access_many'
    );

    $this->user_access_all_views = $this->drupalCreateUser(array ('access content', 'access all views'));
    $this->user_access_content = $this->drupalCreateUser(array ('access content'));
    $this->user_standard = $this->drupalCreateUser();
    $this->user_administer_nodes = $this->drupalCreateUser(array ('access content', 'administer nodes'));
  }

  /**
   * Switches a user in the world of
   */
  public static function drupalSwitchUserProgrammatic($new_user) {
    $old_user = clone $GLOBALS['user'];
    $GLOBALS['user'] = clone $new_user;
    return $old_user;
  }

  public static function drupalLogoutProgrammatic() {
    return self::drupalSwitchUserProgrammatic(drupal_anonymous_user());
  }

  /**
   * Create a user with a given role.
   *
   * @param $rids
   *   Array of role IDs of roles to give to user
   * @return
   *   A fully loaded user object with pass_raw property, or FALSE if account
   *   creation fails.
   */
  protected function drupalCreateUserWithRoles($rids) {

    if (!is_array($rids)) {
      $rids = array ($rids);
    }

    // Create a user assigned to that role.
    $edit = array();
    $edit['name']   = $this->randomName();
    $edit['mail']   = $edit['name'] . '@example.com';
    $edit['roles'] = array ();
    foreach ($rids as $rid) {
      $edit['roles'][$rid] = $rid;
    }
    $edit['pass']   = user_password();
    $edit['status'] = 1;

    $account = user_save('', $edit);

    $this->assertTrue(!empty($account->uid), t('User created with name %name and pass %pass', array('%name' => $edit['name'], '%pass' => $edit['pass'])), t('User login'));
    if (empty($account->uid)) {
      return FALSE;
    }

    // Add the raw password so that we can log in as this user.
    $account->pass_raw = $edit['pass'];
    return $account;
  }

}
