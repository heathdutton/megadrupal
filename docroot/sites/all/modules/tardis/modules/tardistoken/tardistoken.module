<?php

/**
 * @file
 * TARDIS Token module file.
 *
 * Allows tokens to be used on TARDIS block links and page titles.
 */

/**
 * Implements hook_token_info().
 */
function tardistoken_token_info() {
  $types['tardis'] = array(
    'name' => 'TARDIS',
    'description' => t('Tokens for years and months in TARDIS pages.'),
  );

  $tardis_page['month_full'] = array(
    'name' => t('Month name, full'),
    'description' => t('For example: <em>January</em>, <em>February</em>, <em>March</em>.'),
  );
  $tardis_page['month_short'] = array(
    'name' => t('Month name, short'),
    'description' => t('For example: <em>Jan</em>, <em>Feb</em>, <em>Mar</em>.'),
  );
  $tardis_page['month_zeroes'] = array(
    'name' => t('Month number with leading zeros'),
    'description' => t('For example: <em>01</em>, <em>02</em>, <em>03</em>.'),
  );
  $tardis_page['month_no_zeroes'] = array(
    'name' => t('Month number without leading zeros'),
    'description' => t('For example: <em>1</em>, <em>2</em>, <em>3</em>.'),
  );
  $tardis_page['year_full'] = array(
    'name' => t('Year with four digits'),
    'description' => t('For example: <em>1984</em>.'),
  );
  $tardis_page['year_short'] = array(
    'name' => t('Year with two digits'),
    'description' => t('For example: <em>84</em>.'),
  );

  return array(
    'types' => $types,
    'tokens' => array(
      'tardis' => $tardis_page,
    ),
  );
}

/**
 * Implements hook_tokens().
 *
 * This hook replaces the token with its value.
 */
function tardistoken_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'tardis') {
    foreach ($tokens as $name => $original) {
      // Token substitutions vary between pages and blocks and we must account
      // for that. That's why calls to token_replace() pass an array of options
      // stored in $data.
      if ($data['object'] == 'block') {
        // Tokens in block link texts get their dates from the DB queries that
        // build said lists of links.
        switch ($name) {
          case 'month_full':
            $tardis_month_names = _tardis_month_names();
            $tardis_month_index = $data['month'];
            $tardis_month = $tardis_month_names[$tardis_month_index];
            $replacements[$original] = $tardis_month;
            break;

          case 'month_short':
            $tardis_month_abbreviations = _tardis_month_abbreviations();
            $tardis_month_index = $data['month'];
            $tardis_month = $tardis_month_abbreviations[$tardis_month_index];
            $replacements[$original] = $tardis_month;
            break;

          case 'month_zeroes':
            $tardis_month = $data['month'];
            $replacements[$original] = $tardis_month;
            break;

          case 'month_no_zeroes':
            $tardis_month = $data['month'];
            $replacements[$original] = ($tardis_month[0] == 0) ? $tardis_month[1] : $tardis_month;
            break;

          case 'year_full':
            $tardis_year = $data['year'];
            $replacements[$original] = $tardis_year;
            break;

          case 'year_short':
            $tardis_year = $data['year'];
            $replacements[$original] = substr($tardis_year, 2);
            break;
        }
      }
      elseif ($data['object'] == 'page') {
        // Tokens in page titles get their dates from URL arguments.
        $tardis_query_arg = _tardis_query_arg();
        $tardis_query_arg_month = (count($tardis_query_arg) > 1) ? $tardis_query_arg[1] : '';
        switch ($name) {
          case 'month_full':
            $tardis_month_names = _tardis_month_names();
            $replacements[$original] = $tardis_month_names[$tardis_query_arg_month];
            break;

          case 'month_short':
            $tardis_month_abbreviations = _tardis_month_abbreviations();
            $replacements[$original] = $tardis_month_abbreviations[$tardis_query_arg_month];
            break;

          case 'month_zeroes':
            $replacements[$original] = $tardis_query_arg_month;
            break;

          case 'month_no_zeroes':
            $replacements[$original] = ($tardis_query_arg_month[0] == 0) ? $tardis_query_arg_month[1] : $tardis_query_arg_month;
            break;

          case 'year_full':
            $replacements[$original] = $tardis_query_arg[0];
            break;

          case 'year_short':
            $replacements[$original] = substr($tardis_query_arg[0], 2);
            break;
        }
      }
    }
  }
  return $replacements;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * This function is preferred over hook_form_alter() since it's more targeted.
 */
function tardistoken_form_tardis_block_settings_alter(&$form, &$form_state, $form_id) {
  // Are there any year or month texts set using tokens?
  $tardistoken_year = $form['tardistoken_update']['#value']['year'];
  $tardistoken_month = $form['tardistoken_update']['#value']['month'];
  $tardistoken_year_month = $form['tardistoken_update']['#value']['year_month'];

  // TARDIS Token vertical tab.
  $form['tardis_modules_tardistoken'] = array(
    '#type' => 'fieldset',
    '#title' => t('TARDIS Token'),
    '#group' => 'tardis_submodules',
  );

  // TARDIS Token title guidelines.
  $form['tardis_modules_tardistoken']['title_guidelines'] = array(
    '#type' => 'markup',
    '#markup' => t("<h3>Titles with tokens</h3>
    <p>Filling any of the following fields will replace the corresponding titles in TARDIS pages.</p>"),
  );

  // TARDIS Token text for when years are separated from months in block links.
  $form['tardis_modules_tardistoken']['tardistoken_year'] = array(
    '#type' => 'textfield',
    '#title' => t('Token-enabled year text'),
    '#description' => t('Token text for when years are separated from months in block links.'),
    '#default_value' => $tardistoken_year,
  );

  // TARDIS Token text for when months are separated from years in block links.
  $form['tardis_modules_tardistoken']['tardistoken_month'] = array(
    '#type' => 'textfield',
    '#title' => t('Token-enabled month text'),
    '#description' => t('Token text for when months are separated from years in block links.'),
    '#default_value' => $tardistoken_month,
  );

  // TARDIS Token text for when years and months are grouped in block links.
  $form['tardis_modules_tardistoken']['tardistoken_year_month'] = array(
    '#type' => 'textfield',
    '#title' => t('Token-enabled year with month text'),
    '#description' => t('Token text for when years and months are grouped in block links.'),
    '#default_value' => $tardistoken_year_month,
  );

  // Token guidelines.
  $form['tardis_modules_tardistoken']['token_guidelines'] = array(
    '#type' => 'markup',
    '#markup' => t("<h3>Token substitutions</h3>
    <p>You can use any of the following tokens in your TARDIS' titles.</p>"),
  );

  // Available tokens:
  $form['tardis_modules_tardistoken']['token_tree'] = array(
    '#theme' => 'token_tree',
    '#token_types' => array(),
  );

  // Validate function.
  $form['#validate'][] = 'tardistoken_block_settings_validate';
}

/**
 * Validates input for the TARDIS block settings.
 */
function tardistoken_block_settings_validate($form, &$form_state) {
  $tardistoken_year = $form['tardis_modules_tardistoken']['tardistoken_year']['#value'];
  $tardistoken_month = $form['tardis_modules_tardistoken']['tardistoken_month']['#value'];
  $tardistoken_year_month = $form['tardis_modules_tardistoken']['tardistoken_year_month']['#value'];

  // The "Year" field should not contain more than 64 characters.
  if (strlen($tardistoken_year) > 64) {
    form_set_error('tardistoken_year', t("TARDIS block year text mustn't contain more than 64 characters."));
  }

  // The "Month" field should not contain more than 64 characters.
  if (strlen($tardistoken_month) > 64) {
    form_set_error('tardistoken_month', t("TARDIS block month text mustn't contain more than 64 characters."));
  }

  // The "Year with month" field should not contain more than 64 characters.
  if (strlen($tardistoken_year_month) > 64) {
    form_set_error('tardistoken_year_month', t("TARDIS block year with month text mustn't contain more than 64 characters."));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * This function is preferred over hook_form_alter() since it's more targeted.
 */
function tardistoken_form_tardis_page_settings_alter(&$form, &$form_state, $form_id) {
  // Are there any titles set using tokens?
  $tardistoken_year = $form['tardistoken_update']['#value']['year'];
  $tardistoken_year_month = $form['tardistoken_update']['#value']['year_month'];

  // TARDIS Token vertical tab.
  $form['tardis_modules_tardistoken'] = array(
    '#type' => 'fieldset',
    '#title' => t('TARDIS Token'),
    '#group' => 'tardis_submodules',
  );

  // TARDIS Token title guidelines.
  $form['tardis_modules_tardistoken']['title_guidelines'] = array(
    '#type' => 'markup',
    '#markup' => t("<h3>Titles with tokens</h3>
    <p>Filling any of the following fields will replace the corresponding titles in TARDIS pages.</p>"),
  );

  // TARDIS Token page title for when there's only a year as argument.
  $form['tardis_modules_tardistoken']['tardistoken_year'] = array(
    '#type' => 'textfield',
    '#title' => t('TARDIS page: year'),
    '#description' => t("This is the title for when there's only a year as argument."),
    '#default_value' => $tardistoken_year,
  );

  // TARDIS Token page title for when both year and month are supplied.
  $form['tardis_modules_tardistoken']['tardistoken_year_month'] = array(
    '#type' => 'textfield',
    '#title' => t('TARDIS page: year and month'),
    '#description' => t('This is the title for when both year and month are supplied.'),
    '#default_value' => $tardistoken_year_month,
  );

  // Token guidelines.
  $form['tardis_modules_tardistoken']['token_guidelines'] = array(
    '#type' => 'markup',
    '#markup' => t("<h3>Token substitutions</h3>
    <p>You can use any of the following tokens in your TARDIS' titles.</p>"),
  );

  // Available tokens:
  $form['tardis_modules_tardistoken']['token_tree'] = array(
    '#theme' => 'token_tree',
    '#token_types' => array(),
  );

  // Validate function.
  $form['#validate'][] = 'tardistoken_page_settings_validate';
}

/**
 * Validates input for the TARDIS page settings.
 */
function tardistoken_page_settings_validate($form, &$form_state) {
  $tardistoken_year = $form['tardis_modules_tardistoken']['tardistoken_year']['#value'];
  $tardistoken_year_month = $form['tardis_modules_tardistoken']['tardistoken_year_month']['#value'];

  // The "Year" field should not contain more than 64 characters.
  if (strlen($tardistoken_year) > 64) {
    form_set_error('tardistoken_year', t("TARDIS page year text mustn't contain more than 64 characters."));
  }

  // The "Year with month" field should not contain more than 64 characters.
  if (strlen($tardistoken_year_month) > 64) {
    form_set_error('tardistoken_year_month', t("TARDIS page year with month text mustn't contain more than 64 characters."));
  }
}
