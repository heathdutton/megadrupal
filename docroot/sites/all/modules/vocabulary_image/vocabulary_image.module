<?php
/*
* Implementation of hook_menu() 
*/
function vocabulary_image_menu(){
	$items['admin/structure/vocab-image'] = array(
		'title' => 'Vocabulary Image Settings',
		'description' => 'Manage image validations for vocabulary.',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('vocab_image_settings_form'),
		'access arguments' => array('administer taxonomy'),
		'file' => 'vocabulary_image.admin.inc',
	);
	return $items;
}
/*
* Implementation of hook_form_alter()
*/
function vocabulary_image_form_alter(&$form, &$form_state, $form_id) {
	/* Add addtional image upload field in vocabulary creation form interface */
	if($form_id == 'taxonomy_form_vocabulary'){
		$fid = '';
		/* Display image incase of vocabulary edit form */
		if(isset($form_state['vocabulary']->vid)){
			$vid = $form_state['vocabulary']->vid;
			$fid = db_query("select fid from {taxonomy_vocabulary_image} where vid = ".$vid."")->fetchField();	
		}
	
		$form['vocab_image'] = array(
			'#title' => t('Upload image'),
			'#type' => 'managed_file',
			'#default_value' => $fid,
			'#upload_location' => 'public://vocab_image/',
			'#upload_validators' => vocab_validate_image(),
		);

		if ($form['vocab_image']['#default_value']) {
			$image = file_load($form['vocab_image']['#default_value']);
			$form['image'] = array(
				'#markup' => theme('image_style', array('path' => $image->uri, 'style_name' => 'thumbnail')),
			);
		}
		$form['#submit'][] = 'vocab_image_submit';
	}
}
/*
* Implementation of validation function for validating image during upload
*/
function vocab_validate_image() {
	global $user;
	$file_validate_image_resolution = array();
	if(variable_get('vocab_max_image_resolution_width') && variable_get('vocab_max_image_resolution_height')){
		$file_validate_image_resolution[0] =  "'".variable_get('vocab_max_image_resolution_width')."x".variable_get('vocab_max_image_resolution_height')."'";
	}else{
		$file_validate_image_resolution[0] = '';
	}
	
	if(variable_get('vocab_min_image_resolution_width') && variable_get('vocab_min_image_resolution_height')){
		$file_validate_image_resolution[1] =  "'".variable_get('vocab_min_image_resolution_width')."x".variable_get('vocab_min_image_resolution_height')."'";
	}else{
		$file_validate_image_resolution[1] = '';
	}

	$file_validate_size = array();
	if(variable_get('vocab_image_max_upload_size')){
		$file_validate_size['0'] = variable_get('vocab_image_max_upload_size');
	}else{
		$file_validate_size['0'] = '';
	}
	$file_validate_size['1'] = $user->uid;
	
	$file_validate_extensions = array();
	if(variable_get('vocab_image_max_upload_size')){
		$file_validate_extensions['0'] = variable_get('vocab_image_extension');
	}

	// If required, validate the uploaded picture.
	
	$validators = array(
		'file_validate_is_image' => array(), 
		'file_validate_image_resolution' => $file_validate_image_resolution, 
		'file_validate_size' => $file_validate_size,
		'file_validate_extensions' => $file_validate_extensions,
	);
	return $validators; 
}
/*
* Save uploaded image into database and referenced with vocab ID
*/
function vocab_image_submit(&$form, &$form_state){
	if($form_state['values']['vocab_image']){
		// Load the file via file.fid.
		$file = file_load($form_state['values']['vocab_image']);
		// Change status to permanent.
		$file->status = FILE_STATUS_PERMANENT;
		// Save.
		file_save($file);
		file_usage_add($file, 'custom_vocab_alter', 'custom_vocab_alter', $file->fid);
	}
	$fid = 0;
	if($form_state['values']['vocab_image'])
	$fid = $form_state['values']['vocab_image'];

	$vocab_id = '';
	if($form_state['values']['machine_name']){
		$vocab_id = db_query("select vid from {taxonomy_vocabulary} where machine_name = '".$form_state['values']['machine_name']."'")->fetchField();
		if($vocab_id){
			db_delete('taxonomy_vocabulary_image')
			->condition('vid', $vocab_id, '=')
			->execute();

			db_insert('taxonomy_vocabulary_image')
			->fields(array(
			'vid' => $vocab_id,
			'fid' => $fid,
			))
			->execute();
		}
	}
}
/*
* Implementation of function for getting image path according to vocabulary id
*/
function _get_vocab_image_path($vid=''){
	$image_path = '';
	if($vid){
		$fid = db_query("select fid from {taxonomy_vocabulary_image} where vid = ".$vid."")->fetchField();
		if($fid){
			$image = file_load($fid);
			$image_path = $image->uri;
		}
	}
	return $image_path;
}
/*
* Implementation of hook_taxonomy_vocabulary_load()
*/
function vocabulary_image_taxonomy_vocabulary_load($vocabularies){
	foreach ($vocabularies as $vocabulary) {
		if($vocabulary->vid)
		$imagepath = _get_vocab_image_path($vocabulary->vid);
		$vocabulary->imagepath = $imagepath;
	}
}

