<?php
/**
 * @file integrates Core book and epub_export.
 */

/**
 * Implements hook_epub_Export_find_assets_alter().
 */
function epub_export_book_epub_export_find_assets_alter(&$assets, $context) {

  if ($context['entity_type'] == 'node') {
    $node = node_load($context['id']);

    // If this is the top-level book add it's book items.
    if (!empty($node->book['nid']) && ($node->book['bid'] == $node->nid)) {
      $book = epub_export_book_get_flat_menu($node->book);
      $links = array();
      if (!empty($book)) {
        foreach ($book as $mlid => $link) {
          $links[$link['link_path']] = array('nav' => TRUE);

          // Remove it from the existing assets so nav order is preserved.
          unset($assets[$link['link_path']]);
        }

        // Set all other assets as non-nav assets
        if (!empty($assets)) {
          foreach ($assets as $index => $asset) {
            $assets[$index]['nav'] = FALSE;
          }
        }

        // Book links first, then all discovered content links.
        $assets = $links + $assets;
      }
    }
  }
}

/**
 * Core's book_get_flat_menu() only returns one depth level. We need all levels.
 *
 * The only real difference here is the call to menu_tree_all_data() where we
 * get *all* the data.
 *
 * @see book_get_flat_menu()
 */
function epub_export_book_get_flat_menu($book_link) {
  $flat = &drupal_static(__FUNCTION__, array());

  if (!isset($flat[$book_link['mlid']])) {
    $tree = menu_tree_all_data($book_link['menu_name']);
    $flat[$book_link['mlid']] = array();
    _book_flatten_menu($tree, $flat[$book_link['mlid']]);
  }
  return $flat[$book_link['mlid']];
}

/**
 * Implements hook_epub_export_strip_classes_alter().
 */
function epub_export_book_epub_export_strip_classes_alter(&$classes, $context) {
  $classes[] = 'book_printer';
  $classes[] = 'book_add_child';
}
