<?php
/**
 * @file
 * Define table information for tracking referenced entities.
 */

/**
 * Implements hook_field_schema().
 */
function epub_export_field_schema($field) {
  return array(
    'columns' => array(
      'version' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => EPUB_EXPORT_STATUS_NOT_BUILT,
      ),
      'fid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'foreign keys' => array(
      'file_id' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    ),
  );
}

/**
 * Implements hook_schema().
 */
function epub_export_schema() {
  $schema['epub_export'] = array(
    'description' => 'Table used to track what content references other content. This only tracks direct references and not indirect (transitive) references.',
    'fields' => array(
      'eeid' => array(
        'description' => 'The primary identifier for this entity export entry',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_type' => array(
        'description' => 'The entity type this row pertains to',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'The entity id this row pertains to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'ref_entity_type' => array(
        'description' => 'The referenced entity type',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'ref_entity_id' => array(
        'description' => 'The referenced entity id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'epub_export_entity_type' => array('entity_type'),
      'epub_export_entity_id' => array('entity_id'),
      'epub_export_ref_entity_type' => array('ref_entity_type'),
      'epub_export_ref_entity_id' => array('ref_entity_id'),

    ),
    'primary key' => array('eeid'),
  );

  return $schema;
}
