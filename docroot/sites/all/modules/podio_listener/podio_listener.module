<?php

/**
 * Implementation of hook_menu().
 */
function podio_listener_menu() {
  $items = array();
  $items['podio_listener/import'] = array(
    'page callback' => 'podio_listener_callback',
    'title' => 'Podio Listener',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  return $items;
}

function podio_listener_callback($feed_importer = null) {
  $feed = feeds_source($feed_importer);

  $feeds_config = $feed->getConfigFor($feed->importer->fetcher);
  bootstrap_podio($feeds_config);

  switch ($_POST['type']) {
    case 'hook.verify':
      // Validate the webhook
      PodioHook::validate($_POST['hook_id'], array('code' => $_POST['code']));
    case 'item.create':
      $feeds_config['item_id'] = $_POST['item_id'];

      $feed->setConfigFor($feed->importer->fetcher, $feeds_config);
      $feed->save();

      $feed->import();
      return t('Item created');
    case 'item.delete':
      // todo
    case 'item.update':
      $feeds_config['item_id'] = $_POST['item_id'];

      $feed->setConfigFor($feed->importer->fetcher, $feeds_config);
      $feed->save();

      $feed->import();
      return t('Item updated');
  }
}

function bootstrap_podio($config) {
  if (($library = libraries_load('podio-php')) && !empty($library['loaded'])) {
    Podio::setup($config['client_id'], $config['client_secret']);
    if(!Podio::is_authenticated()){
      try {
        Podio::authenticate('app', array('app_id' => $config['app_id'], 'app_token' => $config['app_token']));
      }catch (PodioError $e) {
          watchdog('Podio Listener', $e->body['error_description'], array(), WATCHDOG_CRITICAL, 'link');
      }
    }
  }else{
    watchdog('Podio Listener', 'Failed to load Podio PHP Client', array(), WATCHDOG_CRITICAL, 'link');
  }
}

/**
 * Implementation of hook_libraries_info().
 */
function podio_listener_libraries_info() {
  $libraries['podio-php'] = array(
    'name' => 'Podio PHP Client library',
    'vendor url' => 'https://developers.podio.com/clients/php',
    'download url' => 'https://developers.podio.com/clients/php',
    'version arguments' => array(
      'file' => 'readme.txt',
      // Best practice: Document the actual version strings for later reference.
      // 1.x: Version 1.0
      'pattern' => '/Version (\d+)/',
      'lines' => 5,
    ),
    'files' => array(
      'php' => array('PodioAPI.php'),
    ),
  );
  return $libraries;
}
