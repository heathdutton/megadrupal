<?php
/**
 * @file
 * Database schema for the Entity List Field module.
 */

/**
 * Implements hook_field_schema().
 */
function entity_list_field_field_schema($field) {
  $columns = array(
    // The number if items to display in the list.
    'numitems' => array(
      'type' => 'varchar',
      'length' => 5,
      'not null' => FALSE,
    ),
    // The entity type of the items to display.
    'type' => array(
      'type' => 'varchar',
      'length' => 50,
      'not null' => FALSE,
    ),
    // The bundle of the items to display.
    'bundle' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
    ),
    // The view mode used for theming the items.
    'view_mode' => array(
      'type' => 'varchar',
      'length' => 50,
      'not null' => FALSE,
    ),
    // The property/field we will sort on.
    'sort' => array(
      'type' => 'varchar',
      'length' => 50,
      'not null' => FALSE,
    ),
    // The column to sort on when we sort by a field.
    'column' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
    ),
    // The sort direction.
    'direction' => array(
      'type' => 'varchar',
      'length' => 4,
      'not null' => FALSE,
    ),
    // The second property/field we will sort on.
    'sort2' => array(
      'type' => 'varchar',
      'length' => 50,
      'not null' => FALSE,
    ),
    // The column to sort by a field.
    'column2' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
    ),
    // The second sort direction.
    'direction2' => array(
      'type' => 'varchar',
      'length' => 4,
      'not null' => FALSE,
    ),
    // Comma-separated list of terms our list items must have.
    'terms' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
    ),
    /*
     * The pager to use for this list. A value of 0 means no pager;
     * 1 means use a standard pager; 2 means use an ajax pager.
     */
    'pager' => array(
      'type' => 'int',
      'not null' => FALSE,
    ),
    /*
     * Whether to cache the list.
     */
    'cache' => array(
      'type' => 'int',
      'not null' => FALSE,
    ),
  );
  $indexes = array();
  return array(
    'columns' => $columns,
    'indexes' => $indexes,
  );
}

/**
 * Implements hook_enable().
 */
function entity_list_field_enable() {
  user_role_change_permissions(
    DRUPAL_AUTHENTICATED_RID, array('view entity_list_field widget' => TRUE)
  );
  EntityLister::addAllowedClass('EntityListFieldList');
}

/**
 * Implements hook_disable().
 */
function entity_list_field_disable() {
  EntityLister::removeAllowedClass('EntityListFieldList');
}
