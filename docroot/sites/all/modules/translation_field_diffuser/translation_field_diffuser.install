<?php
/**
 * @file
 * Defines Translation Field Diffuser module requirements.
 */

/**
 * Implements hook_requirements().
 */
function translation_field_diffuser_requirements($phase) {
  $requirements = array();

  if ($phase == 'install') {
    $t = get_t();

    if (!module_exists('translation') && !module_exists('entity_translation')
       && !module_exists('i18n_taxonomy') && !module_exists('i18n_node')) {
      $module_list = 'Content Translation (translation), Multilingual content (i18n_node), ';
      $module_list .= 'Taxonomy translation (i18n_taxonomy) or Entity Translation (entity_translation)';

      $requirements['translation_modules'] = array(
        'title' => $t('At least one of the following module need to be enabled') . ' :',
        'value' => $module_list,
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function translation_field_diffuser_uninstall() {
  // Unsets persistent variables using wildcard deletion.
  global $conf;

  db_delete('variable')
    ->condition('name', 'translation_field_diffuser_%', 'LIKE')
    ->execute();

  cache_clear_all('variables', 'cache_bootstrap');

  foreach ($conf as $key => $value) {
    if (strpos($key, 'translation_field_diffuser_') !== FALSE) {
      unset($conf[$key]);
    }
  }
}

/**
 * Implements hook_update_N().
 */
function translation_field_diffuser_update_7001() {
  module_load_include('inc', 'translation_field_diffuser');

  $entities = field_info_bundles();
  $entities_translatable = array();
  foreach($entities as $entity_type => $bundles) {
    foreach($bundles as $bundle_name => $bundle) {
      if (translation_field_diffuser_entity_is_translatable($entity_type, $bundle_name)) {
        $entities_translatable[$entity_type][$bundle_name] = $bundle_name;
      }
    }
  }

  variable_set('translation_field_diffuser_entities_translatable', $entities_translatable);
}
