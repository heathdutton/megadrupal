<?php
/**
 * @file
 * Special Block plugin for pagetitle
 */


/**
 * Function to return renderable arrays
 */
function title_block_renderable_array($options, &$variables) {

  // Operate if not on admin page
  if ($variables['admin_page'] == FALSE || $variables['overlay'] == FALSE) {
    // Remove shortcut if not on admin page
    unset($variables['title_suffix']['add_or_remove_shortcut']);
  }

  $title = html_entity_decode($variables['title']);

  // Don't build renderable array on empty title.
  if (empty($title)) {
    return;
  }

  $attributes = $variables['title_attributes_array'];

  $attributes['class'][] = 'relative';
  $attributes['class'][] = 'main-title';
  $attributes['class'][] = _layout_column_class($options['#column']);

  if ($options['#clearfix'] == ENABLED) {
    $attributes['class'][] = 'clear clearfix';
  }

  if ($options['#newrow'] == ENABLED) {
    $attributes['class'][] = 'newrow';
  }

  if ($options['#lastrow'] == ENABLED) {
    $attributes['class'][] = 'lastrow';
  }

  // Mark if we got tabs, some theme will need extra class for margin
  if (isset($variables['tabs']['#primary']) && empty($variables['tabs']['#primary'])) {
    $attributes['class'][] = 'without-tabs';
  }
  else {
    $attributes['class'][] = 'with-tabs';
  }

  // Don't Show title on overlay
  if ($variables['overlay'] == TRUE) {
    $title = '';
  }

  $blocks = array(
    '#block_type' => 'title',
  	'title_prefix' => $variables['title_prefix'],
    'title' => array(
      '#markup' => $title,
      '#prefix' => '<h1 ' . drupal_attributes($attributes) . '>',
      '#suffix' => '</h1>',
    ),
    'title_suffix' => $variables['title_suffix'],
    '#weight' => $options['#weight'],
  );

  return $blocks;
}