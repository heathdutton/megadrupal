<?php
/**
 * Implement hook_vtcore_settings_alter_process()
 */
function cssmanager_vtcore_settings_alter_process(&$form, &$form_state) {
  // Vertical tabs fieldset.
  $form['csswrapper'] = array(
    '#type' => 'fieldset',
    '#title' => t('CSS Manager'),
    '#group' => 'theme_core',
    '#weight' => -16,
    '#tree' => FALSE,
    '#description' => '<div class="warning messages">' .  t('Drupal will load css based on "group weight" first then by "every page" then by "weight" and finally by the order in which the CSS was added.') .'</div>',
  );

  // The magic table form structure.
  $form['csswrapper']['cssmanager'] = array(
    '#type' => 'container',
    '#tree' => TRUE,
    '#theme' => 'tableform',
    '#header' => array(
      t('Enabled'),
      t('Data'),
      t('Type'),
      t('Group'),
      t('Media'),
      t('Weight'),
      t('Everypage'),
      t('Preprocess'),
      t('IE'),
      t('Not IE'),
    ),
  );

  // Fetch configured CSS first, if failed get all CSS from Drupal.
  $css = vtcore_get_plugin_setting('cssmanager', 'cssmanager');
  if (empty($css)) {
    $css = drupal_add_css();
  }

  // Sort CSS.
  // Temporary removed, throwing undefined variables
  // If css data structure is malformed. Usual suspect
  // is the dynamic color module css.
  // uasort($css, 'drupal_sort_css_js');

  // Loop and build the CSS configuration form.
  foreach ($css as $path => $options) {
    $form['csswrapper']['cssmanager'][$path]['enable'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable'),
      '#default_value' => vtcore_get_default_value('enable', $options, 1),
    );

    $form['csswrapper']['cssmanager'][$path]['data'] = array(
      '#type' => 'value',
      '#title' => t('data'),
      '#value' => vtcore_get_default_value('data', $options, ''),
    	'#size' => 15,
    );

    $form['csswrapper']['cssmanager'][$path]['type'] = array(
      '#type' => 'value',
    	'#title' => t('Type'),
      '#value' => vtcore_get_default_value('type', $options, ''),
    );

    $form['csswrapper']['cssmanager'][$path]['group'] = array(
      '#type' => 'textfield',
    	'#title' => t('Group'),
      '#default_value' => vtcore_get_default_value('group', $options, ''),
      '#size' => 3,
    );

    $form['csswrapper']['cssmanager'][$path]['media'] = array(
      '#type' => 'textfield',
      '#title' => t('Media'),
      '#default_value' => vtcore_get_default_value('media', $options, ''),
      '#size' => 3,
    );

    $form['csswrapper']['cssmanager'][$path]['weight'] = array(
      '#type' => 'textfield',
      '#title' => t('Weight'),
      '#default_value' => vtcore_get_default_value('weight', $options, ''),
      '#size' => 3,
    );

    $form['csswrapper']['cssmanager'][$path]['every_page'] = array(
      '#type' => 'checkbox',
      '#title' => t('Every Page'),
      '#options' => array(true => t('True'), false => t('False')),
      '#default_value' => vtcore_get_default_value('every_page', $options, ''),
    );

    $form['csswrapper']['cssmanager'][$path]['preprocess'] = array(
      '#type' => 'checkbox',
      '#title' => t('Preprocess'),
      '#options' => array(true => t('True'), false => t('False')),
      '#default_value' => vtcore_get_default_value('preprocess', $options, 1),
    );

    $form['csswrapper']['cssmanager'][$path]['browsers']['IE'] = array(
      '#type' => 'checkbox',
    	'#title' => t('Internet Explorer'),
      '#options' => array(true => t('True'), false => t('False')),
      '#default_value' => vtcore_get_default_value('IE', $options['browsers'], ''),
    );

    $form['csswrapper']['cssmanager'][$path]['browsers']['!IE'] = array(
      '#type' => 'checkbox',
      '#title' => t('Non Internet Explorer'),
      '#default_value' => vtcore_get_default_value('!IE', $options['browsers'], ''),
    );
  }


  $form['csswrapper']['cssmanager_save_process'] = array(
    '#type' => 'checkbox',
    '#title' => t('Process and save table'),
    '#description' => t('Enable this to save the table settings to the database, disabling this will wipe all cssmanager previously saved data'),
    '#default_value' => vtcore_get_plugin_setting('cssmanager_save_process', 'cssmanager', 0),
  );

  if (!isset($form['#submit']) || !in_array('cssmanager_settings_submit', $form['#submit'])) {
    $form['#submit'][] = 'cssmanager_settings_submit';
  }
}

/**
 * Additional submit function for processing CSS entry
 * Currently it will change values from checkbox to boolean
 *
 * @todo Create validation to reject broken css entry
 */
function cssmanager_settings_submit(&$form, &$form_state) {
  // Remove current value and stored value
  if ($form_state['values']['cssmanager_save_process'] == 0) {
    unset($form_state['values']['cssmanager']);
    unset($form_state['storage']['old_value']['cssmanager']);
  }
  else {
    // Process and convert to boolean
    foreach ($form_state['values']['cssmanager'] as $key => $value) {
      $form_state['values']['cssmanager'][$key]['every_page'] = (bool) $value['every_page'];
      $form_state['values']['cssmanager'][$key]['preprocess'] = (bool) $value['preprocess'];
      $form_state['values']['cssmanager'][$key]['browsers']['IE'] = (bool) $value['browsers']['IE'];
      $form_state['values']['cssmanager'][$key]['browsers']['!IE'] = (bool) $value['browsers']['!IE'];
    }
  }
}
