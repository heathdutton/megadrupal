<?php
/**
 * Implement hook_vtcore_preprocess_page().
 *
 * Currently It will process the page if it is
 * on admin page or overlay.
 *
 * Adding some SigmaOne specific css files for
 * admin page and overlay page
 *
 * Cleaning out title suffix when not in admin
 * & overlay page.
 *
 * Adding extra classes to help themer target
 * element by css specially for admin pages
 *
 * Adding Special theme_hook_suggestions to admin
 * page that is doesn't use /admin path.
 *
 * Checking if any css override files in the frontend
 * theme css/adminpage-extra.css available and load
 * it if available.
 *
 */
function adminpage_vtcore_preprocess_page(&$variables) {
  global $vtcore;

  // Rechecking overlay state
  if (module_exists('overlay') && overlay_get_mode() == 'child') {
    $vtcore->overlay = TRUE;
  }

  // Legacy support, for all plugins that hasn't converted to $vtcore yet
  $variables['overlay'] = $vtcore->overlay;
  $variables['admin_page'] = ($vtcore->admin_page && $vtcore->user_access_admin_theme);

  // Additional overlay specific css
  if ($vtcore->overlay == TRUE) {
    drupal_add_css($vtcore->plugin_path . '/adminpage/css/overlay.css');
    // decode title html entity and strip the html tags
    $variables['title'] = strip_tags(decode_entities(drupal_get_title()));;
  }

  // Operate if not on admin page
  if ($vtcore->overlay == FALSE || $vtcore->admin_page == FALSE) {
    // Remove shortcut if not on admin page
    unset($variables['title_suffix']['add_or_remove_shortcut']);
  }

  // Operate on admin page
  if ($vtcore->admin_page && $vtcore->user_access_admin_theme) {

    $variables['page']['#attributes']['class'][] = 'admin-page';
    $variables['page']['#attributes']['class'][] = BASE_THEME;

    // Add admin layout to theme_hook_suggestions
    if ($variables['theme_hook_suggestions'][0] != 'page') {
      array_splice($variables['theme_hook_suggestions'], 0, 0, array('page'));
    }

    if ($variables['theme_hook_suggestions'][1] != 'page__admin') {
      array_splice($variables['theme_hook_suggestions'], 1, 0, array('page__admin'));
    }

    // add equalheight js
    vtcore_load_all_js($vtcore->plugin_path . '/adminpage/js', 1);

    // add extra css
    drupal_add_css($vtcore->plugin_path . '/adminpage/css/base.css', array('group' => CSS_THEME));

    // Since the title and the shortcut link are both block level elements,
    // positioning them next to each other is much simpler with a wrapper div.
    if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
      // Add a wrapper div using the title_prefix and title_suffix render elements.
      $variables['title_prefix']['shortcut_wrapper'] = array(
        '#markup' => '<div class="shortcut-wrapper clearfix">',
        '#weight' => 100,
      );
      $variables['title_suffix']['shortcut_wrapper'] = array(
        '#markup' => '</div>',
        '#weight' => -99,
      );
      // Make sure the shortcut link is the first item in title_suffix.
      $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
    }

    // Additional support to load additional css to fix admin pages from frontend theme
    if (file_exists($vtcore->frontend_theme_path . '/css/adminpage-extra.css')) {
      drupal_add_css($vtcore->frontend_theme_path . '/css/adminpage-extra.css');
    }
  }
}