<?php

/**
 * Implement hook_regionarea_vtcore_area_settings_alter_process().
 */
function custom_class_regionarea_vtcore_area_settings_alter_process(&$form, $area, $area_data) {

  // Build element id and classes
  // Get saved defaults
  $defaults = vtcore_get_default_value('#attributes', $area_data, array());

  // Fallback to default id and classes
  if (empty($defaults)) {
    $defaults = array(
      'id' => $area,
      'class' => array('regionarea', 'region-area-' . $area, 'row'),
    );
  }

  $default = array();
  if (!empty($defaults)) {
    foreach($defaults as $key => $data) {
      if (is_array($data)) {
        $data = implode("\n", $data);
      }

      $default[$key] = $data;
    }
  }

  $form['area'][$area]['attributes'] = array(
    '#tree' => TRUE,
  );

  $form['area'][$area]['attributes']['id'] = array(
    '#type' => 'textfield',
    '#title' => t('Element id'),
    '#default_value' => $default['id'],
    '#attributes' => array(
      'class' => array(
        'element-attributes-id',
      ),
    ),
  );

  $form['area'][$area]['attributes']['class'] = array(
    '#type' => 'textarea',
    '#title' => t('Element class'),
    '#description' => t('Separate each class by new line'),
    '#default_value' => $default['class'],
    '#attributes' => array(
      'class' => array(
        'element-attributes-class',
      ),
    ),
  );

  // Build wrapper id and classes
  // Get saved defaults
  $defaults = vtcore_get_default_value('#attributes_wrapper', $area_data, array());

  // Fallback to default id and classes
  if (empty($defaults)) {
    $defaults = array(
      'id' => $area . '-wrapper',
      'class' => array('areawrapper', 'center', 'clearfix')
    );
  }

  $default = array();
  if (!empty($defaults)) {
    foreach($defaults as $key => $data) {
      if (is_array($data)) {
        $data = implode("\n", $data);
      }

      $default[$key] = $data;
    }
  }

  $form['area'][$area]['attributes_wrapper'] = array(
    '#tree' => TRUE,
  );

  $form['area'][$area]['attributes_wrapper']['id'] = array(
    '#type' => 'textfield',
    '#title' => t('Element wrapper id'),
    '#default_value' => $default['id'],
    '#attributes' => array(
      'class' => array(
        'element-attributes-id',
      ),
    ),
  );

  $form['area'][$area]['attributes_wrapper']['class'] = array(
    '#type' => 'textarea',
    '#title' => t('Element wrapper class'),
    '#description' => t('Separate each class by using newline'),
    '#default_value' => $default['class'],
    '#attributes' => array(
      'class' => array(
        'element-attributes-class',
      ),
    ),
  );
}

/**
 * Implement hook_regionarea_vtcore_region_settings_alter_process().
 */
function custom_class_regionarea_vtcore_region_settings_alter_process(&$form, $region, $region_data) {
  // Build wrapper id and classes
  // Get saved defaults
  $default_configured = vtcore_get_default_value('#attributes', $region_data, array());

  // Pre configured id and class
  $default_value = array(
    'id' => 'region-' . str_replace('_', '-', $region),
    'class' => array('region', 'clearfix')
  );

  // Merge preconfigured attributes with saved attributes
  $defaults = vtcore_array_merge_recursive_distinct($default_value, $default_configured);

  $default = array();
  foreach($defaults as $key => $data) {
    if (is_array($data)) {
      $data = implode("\n", $data);
    }

    $default[$key] = $data;
  }

  $form['region'][$region]['attributes'] = array(
    '#tree' => TRUE,
  );

  $form['region'][$region]['attributes']['id'] = array(
    '#type' => 'textfield',
    '#title' => t('Region id'),
    '#default_value' => $default['id'],
    '#attributes' => array(
      'class' => array(
        'element-attributes-id',
      ),
    ),
  );

  $form['region'][$region]['attributes']['class'] = array(
    '#type' => 'textarea',
    '#title' => t('Region class'),
    '#description' => t('Separate each class by using newline'),
    '#default_value' => $default['class'],
    '#attributes' => array(
      'class' => array(
        'element-attributes-class',
      ),
    ),
  );
}

/**
 * Implement hook_regionarea_vtcore_build_data_for_saving_alter_process()
 */
function custom_class_regionarea_vtcore_build_data_for_saving_alter_process(&$data, $form_state) {
  foreach ($data as $type => $type_data) {
    foreach ($type_data as $subtype => $subtype_data) {
      if (isset($subtype_data['#attributes']['class'])) {
        $classes = explode("\n", rtrim($subtype_data['#attributes']['class']));
        foreach ($classes as $class_key => $class) {
          $class = trim($class);
          if (!empty($class)) {
            $classes[$class_key] = $class;
          }
        }
        $data[$type][$subtype]['#attributes']['class'] = $classes;
      }

      if (isset($subtype_data['#attributes_wrapper']['class'])) {
        $classes = explode("\n", rtrim($subtype_data['#attributes_wrapper']['class']));
        foreach ($classes as $class_key => $class) {
          $class = trim($class);
          if (!empty($class)) {
            $classes[$class_key] = $class;
          }
        }

        $data[$type][$subtype]['#attributes_wrapper']['class'] = $classes;
      }
    }
  }
}